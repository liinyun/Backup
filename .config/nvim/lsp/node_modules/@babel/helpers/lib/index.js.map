{"version":3,"names":["traverse","_t","assignmentExpression","cloneNode","expressionStatement","file","identifier","helpers","makePath","path","parts","parentPath","push","key","inList","listKey","reverse","join","FileClass","undefined","getHelperMetadata","globals","Set","localBindingNames","dependencies","Map","exportName","exportPath","exportBindingAssignments","importPaths","importBindingsReferences","dependencyVisitor","ImportDeclaration","child","name","node","source","value","buildCodeFrameError","get","length","isImportDefaultSpecifier","bindingIdentifier","specifiers","local","set","ExportDefaultDeclaration","decl","isFunctionDeclaration","id","ExportAllDeclaration","ExportNamedDeclaration","Statement","isImportDeclaration","isExportDeclaration","skip","referenceVisitor","Program","bindings","scope","getAllBindings","Object","keys","forEach","has","add","ReferencedIdentifier","binding","getBinding","AssignmentExpression","left","getBindingIdentifiers","isIdentifier","isProgram","ast","Error","Array","from","permuteHelperAST","metadata","localBindings","getDependency","dependenciesRefs","toRename","newName","type","exp","imps","map","p","impsBindingRefs","replaceWith","assignPath","assign","pushContainer","rename","remove","helperData","create","loadHelper","helper","ReferenceError","code","fn","fakeFile","stop","filename","inputMap","minVersion","build","nodes","program","body","getDependencies","values","ensure","newFileClass","list","replace"],"sources":["../src/index.ts"],"sourcesContent":["import type { File } from \"@babel/core\";\nimport type { NodePath, Visitor } from \"@babel/traverse\";\nimport traverse from \"@babel/traverse\";\nimport {\n  assignmentExpression,\n  cloneNode,\n  expressionStatement,\n  file,\n  identifier,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport helpers from \"./helpers\";\n\nfunction makePath(path: NodePath) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet FileClass: typeof File | undefined = undefined;\n\ninterface HelperMetadata {\n  globals: string[];\n  localBindingNames: string[];\n  dependencies: Map<t.Identifier, string>;\n  exportBindingAssignments: string[];\n  exportPath: string;\n  exportName: string;\n  importBindingsReferences: string[];\n  importPaths: string[];\n}\n\n/**\n * Given a file AST for a given helper, get a bunch of metadata about it so that Babel can quickly render\n * the helper is whatever context it is needed in.\n */\nfunction getHelperMetadata(file: File): HelperMetadata {\n  const globals = new Set<string>();\n  const localBindingNames = new Set<string>();\n  // Maps imported identifier -> helper name\n  const dependencies = new Map<t.Identifier, string>();\n\n  let exportName: string | undefined;\n  let exportPath: string | undefined;\n  const exportBindingAssignments: string[] = [];\n  const importPaths: string[] = [];\n  const importBindingsReferences: string[] = [];\n\n  const dependencyVisitor: Visitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n      if (!helpers[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n      if (\n        child.get(\"specifiers\").length !== 1 ||\n        // @ts-expect-error isImportDefaultSpecifier does not work with NodePath union\n        !child.get(\"specifiers.0\").isImportDefaultSpecifier()\n      ) {\n        throw child.buildCodeFrameError(\n          \"Helpers can only import a default value\",\n        );\n      }\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (!decl.isFunctionDeclaration() || !decl.node.id) {\n        throw decl.buildCodeFrameError(\n          \"Helpers can only export named function declarations\",\n        );\n      }\n\n      exportName = decl.node.id.name;\n      exportPath = makePath(child);\n    },\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n    Statement(child) {\n      if (child.isImportDeclaration() || child.isExportDeclaration()) return;\n\n      child.skip();\n    },\n  };\n\n  const referenceVisitor: Visitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n\n        localBindingNames.add(name);\n      });\n    },\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name);\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\n          \"Only simple assignments to exports are allowed in helpers\",\n        );\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding?.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    },\n  };\n\n  traverse(file.ast, dependencyVisitor, file.scope);\n  traverse(file.ast, referenceVisitor, file.scope);\n\n  if (!exportPath) throw new Error(\"Helpers must have a default export.\");\n\n  // Process these in reverse so that mutating the references does not invalidate any later paths in\n  // the list.\n  exportBindingAssignments.reverse();\n\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths,\n  };\n}\n\ntype GetDependency = (name: string) => t.Expression;\n\n/**\n * Given a helper AST and information about how it will be used, update the AST to match the usage.\n */\nfunction permuteHelperAST(\n  file: File,\n  metadata: HelperMetadata,\n  id?: t.Identifier | t.MemberExpression,\n  localBindings?: string[],\n  getDependency?: GetDependency,\n) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths,\n  } = metadata;\n\n  const dependenciesRefs: Record<string, t.Expression> = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] =\n      (typeof getDependency === \"function\" && getDependency(name)) || id;\n  });\n\n  const toRename: Record<string, string> = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const { path } = file;\n\n  // We need to compute these in advance because removing nodes would\n  // invalidate the paths.\n  const exp: NodePath<t.ExportDefaultDeclaration> = path.get(exportPath);\n  const imps: NodePath<t.ImportDeclaration>[] = importPaths.map(p =>\n    path.get(p),\n  );\n  const impsBindingRefs: NodePath<t.Identifier>[] =\n    importBindingsReferences.map(p => path.get(p));\n\n  // We assert that this is a FunctionDeclaration in dependencyVisitor.\n  const decl = exp.get(\"declaration\") as NodePath<t.FunctionDeclaration>;\n\n  if (id.type === \"Identifier\") {\n    exp.replaceWith(decl);\n  } else if (id.type === \"MemberExpression\") {\n    exportBindingAssignments.forEach(assignPath => {\n      const assign: NodePath<t.Expression> = path.get(assignPath);\n      assign.replaceWith(assignmentExpression(\"=\", id, assign.node));\n    });\n    exp.replaceWith(decl);\n    path.pushContainer(\n      \"body\",\n      expressionStatement(\n        assignmentExpression(\"=\", id, identifier(exportName)),\n      ),\n    );\n  } else {\n    throw new Error(\"Unexpected helper format.\");\n  }\n\n  Object.keys(toRename).forEach(name => {\n    path.scope.rename(name, toRename[name]);\n  });\n\n  for (const path of imps) path.remove();\n  for (const path of impsBindingRefs) {\n    const node = cloneNode(dependenciesRefs[path.node.name]);\n    path.replaceWith(node);\n  }\n}\n\ninterface HelperData {\n  build: (\n    getDependency: GetDependency,\n    id: t.Identifier | t.MemberExpression,\n    localBindings: string[],\n  ) => {\n    nodes: t.Program[\"body\"];\n    globals: string[];\n  };\n  minVersion: string;\n  getDependencies: () => string[];\n}\n\nconst helperData: Record<string, HelperData> = Object.create(null);\nfunction loadHelper(name: string) {\n  if (!helperData[name]) {\n    const helper = helpers[name];\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name,\n      });\n    }\n\n    const fn = (): File => {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!FileClass) {\n          const fakeFile = { ast: file(helper.ast()), path: null } as File;\n          traverse(fakeFile.ast, {\n            Program: path => (fakeFile.path = path).stop(),\n          });\n          return fakeFile;\n        }\n      }\n      return new FileClass(\n        { filename: `babel-helper://${name}` },\n        {\n          ast: file(helper.ast()),\n          code: \"[internal Babel helper code]\",\n          inputMap: null,\n        },\n      );\n    };\n\n    // We compute the helper metadata lazily, so that we skip that\n    // work if we only need the `.minVersion` (for example because\n    // of a call to `.availableHelper` when `@babel/runtime`).\n    let metadata: HelperMetadata | null = null;\n\n    helperData[name] = {\n      minVersion: helper.minVersion,\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        metadata ||= getHelperMetadata(file);\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals,\n        };\n      },\n      getDependencies() {\n        metadata ||= getHelperMetadata(fn());\n        return Array.from(metadata.dependencies.values());\n      },\n    };\n  }\n\n  return helperData[name];\n}\n\nexport function get(\n  name: string,\n  getDependency?: GetDependency,\n  id?: t.Identifier | t.MemberExpression,\n  localBindings?: string[],\n) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nexport function minVersion(name: string) {\n  return loadHelper(name).minVersion;\n}\n\nexport function getDependencies(name: string): ReadonlyArray<string> {\n  return loadHelper(name).getDependencies();\n}\n\nexport function ensure(name: string, newFileClass: typeof File) {\n  // We inject the File class here rather than importing it to avoid\n  // circular dependencies between @babel/core and @babel/helpers.\n  FileClass ||= newFileClass;\n\n  loadHelper(name);\n}\n\nexport const list = Object.keys(helpers).map(name => name.replace(/^_/, \"\"));\n\nexport default get;\n"],"mappings":"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"}