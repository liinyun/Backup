{"version":3,"names":["path","gensync","Plugin","mergeOptions","createItemFromDescriptor","buildRootChain","getEnv","validate","findConfigUpwards","resolveShowConfigPath","ROOT_CONFIG_FILENAMES","resolveTargets","resolveRootMode","rootDir","rootMode","upwardRootDir","Object","assign","Error","join","code","dirname","loadPrivatePartialConfig","inputOpts","Array","isArray","args","envName","cwd","root","caller","cloneInputAst","absoluteCwd","resolve","absoluteRootDir","filename","undefined","showConfigPath","context","showConfig","configChain","merged","assumptions","options","forEach","opts","targets","babelrc","configFile","browserslistConfigFile","passPerPreset","plugins","map","descriptor","presets","fileHandling","ignore","config","files","loadPartialConfig","showIgnoredFiles","_opts","_objectWithoutPropertiesLoose","_excluded","result","item","value","PartialConfig","filepath","constructor","babelignore","freeze","hasFilesystemConfig","prototype"],"sources":["../../src/config/partial.ts"],"sourcesContent":["import path from \"path\";\nimport gensync from \"gensync\";\nimport type { Handler } from \"gensync\";\nimport Plugin from \"./plugin\";\nimport { mergeOptions } from \"./util\";\nimport { createItemFromDescriptor } from \"./item\";\nimport { buildRootChain } from \"./config-chain\";\nimport type { ConfigContext, FileHandling } from \"./config-chain\";\nimport { getEnv } from \"./helpers/environment\";\nimport { validate } from \"./validation/options\";\n\nimport type {\n  ValidatedOptions,\n  NormalizedOptions,\n  RootMode,\n} from \"./validation/options\";\n\nimport {\n  findConfigUpwards,\n  resolveShowConfigPath,\n  ROOT_CONFIG_FILENAMES,\n} from \"./files\";\nimport type { ConfigFile, IgnoreFile } from \"./files\";\nimport { resolveTargets } from \"./resolve-targets\";\n\nfunction resolveRootMode(rootDir: string, rootMode: RootMode): string {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      return upwardRootDir === null ? rootDir : upwardRootDir;\n    }\n\n    case \"upward\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      if (upwardRootDir !== null) return upwardRootDir;\n\n      throw Object.assign(\n        new Error(\n          `Babel was run with rootMode:\"upward\" but a root could not ` +\n            `be found when searching upward from \"${rootDir}\".\\n` +\n            `One of the following config files must be in the directory tree: ` +\n            `\"${ROOT_CONFIG_FILENAMES.join(\", \")}\".`,\n        ) as any,\n        {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir,\n        },\n      );\n    }\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\ntype PrivPartialConfig = {\n  options: NormalizedOptions;\n  context: ConfigContext;\n  fileHandling: FileHandling;\n  ignore: IgnoreFile | void;\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  files: Set<string>;\n};\n\nexport default function* loadPrivatePartialConfig(\n  inputOpts: unknown,\n): Handler<PrivPartialConfig | null> {\n  if (\n    inputOpts != null &&\n    (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))\n  ) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? validate(\"arguments\", inputOpts) : {};\n\n  const {\n    envName = getEnv(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true,\n  } = args;\n  const absoluteCwd = path.resolve(cwd);\n  const absoluteRootDir = resolveRootMode(\n    path.resolve(absoluteCwd, rootDir),\n    rootMode,\n  );\n\n  const filename =\n    typeof args.filename === \"string\"\n      ? path.resolve(cwd, args.filename)\n      : undefined;\n\n  const showConfigPath = yield* resolveShowConfigPath(absoluteCwd);\n\n  const context: ConfigContext = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename,\n  };\n\n  const configChain = yield* buildRootChain(args, context);\n  if (!configChain) return null;\n\n  const merged: ValidatedOptions = {\n    assumptions: {},\n  };\n  configChain.options.forEach(opts => {\n    mergeOptions(merged as any, opts);\n  });\n\n  const options: NormalizedOptions = {\n    ...merged,\n    targets: resolveTargets(merged, absoluteRootDir),\n\n    // Tack the passes onto the object itself so that, if this object is\n    // passed back to Babel a second time, it will be in the right structure\n    // to not change behavior.\n    cloneInputAst,\n    babelrc: false,\n    configFile: false,\n    browserslistConfigFile: false,\n    passPerPreset: false,\n    envName: context.envName,\n    cwd: context.cwd,\n    root: context.root,\n    rootMode: \"root\",\n    filename:\n      typeof context.filename === \"string\" ? context.filename : undefined,\n\n    plugins: configChain.plugins.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n    presets: configChain.presets.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n  };\n\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files,\n  };\n}\n\ntype LoadPartialConfigOpts = {\n  showIgnoredFiles?: boolean;\n};\n\nexport const loadPartialConfig = gensync(function* (\n  opts?: LoadPartialConfigOpts,\n): Handler<PartialConfig | null> {\n  let showIgnoredFiles = false;\n  // We only extract showIgnoredFiles if opts is an object, so that\n  // loadPrivatePartialConfig can throw the appropriate error if it's not.\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    ({ showIgnoredFiles, ...opts } = opts);\n  }\n\n  const result: PrivPartialConfig | undefined | null =\n    yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n\n  const { options, babelrc, ignore, config, fileHandling, files } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    // @ts-expect-error todo(flow->ts): better type annotation for `item.value`\n    if (item.value instanceof Plugin) {\n      throw new Error(\n        \"Passing cached plugin instances is not supported in \" +\n          \"babel.loadPartialConfig()\",\n      );\n    }\n  });\n\n  return new PartialConfig(\n    options,\n    babelrc ? babelrc.filepath : undefined,\n    ignore ? ignore.filepath : undefined,\n    config ? config.filepath : undefined,\n    fileHandling,\n    files,\n  );\n});\n\nexport type { PartialConfig };\n\nclass PartialConfig {\n  /**\n   * These properties are public, so any changes to them should be considered\n   * a breaking change to Babel's API.\n   */\n  options: NormalizedOptions;\n  babelrc: string | void;\n  babelignore: string | void;\n  config: string | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n\n  constructor(\n    options: NormalizedOptions,\n    babelrc: string | void,\n    ignore: string | void,\n    config: string | void,\n    fileHandling: FileHandling,\n    files: Set<string>,\n  ) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n\n    // Freeze since this is a public API and it should be extremely obvious that\n    // reassigning properties on here does nothing.\n    Object.freeze(this);\n  }\n\n  /**\n   * Returns true if there is a config file in the filesystem for this config.\n   */\n  hasFilesystemConfig(): boolean {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n}\nObject.freeze(PartialConfig.prototype);\n"],"mappings":"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"}