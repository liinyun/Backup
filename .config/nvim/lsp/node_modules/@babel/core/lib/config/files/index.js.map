{"version":3,"names":["findPackageData","findConfigUpwards","findRelativeConfig","findRootConfig","loadConfig","resolveShowConfigPath","ROOT_CONFIG_FILENAMES","loadPlugin","loadPreset","gensync","plugins","resolvePlugin","sync","resolvePreset"],"sources":["../../../src/config/files/index.ts"],"sourcesContent":["type indexBrowserType = typeof import(\"./index-browser\");\ntype indexType = typeof import(\"./index\");\n\n// Kind of gross, but essentially asserting that the exports of this module are the same as the\n// exports of index-browser, since this file may be replaced at bundle time with index-browser.\n({}) as any as indexBrowserType as indexType;\n\nexport { findPackageData } from \"./package\";\n\nexport {\n  findConfigUpwards,\n  findRelativeConfig,\n  findRootConfig,\n  loadConfig,\n  resolveShowConfigPath,\n  ROOT_CONFIG_FILENAMES,\n} from \"./configuration\";\nexport type {\n  ConfigFile,\n  IgnoreFile,\n  RelativeConfig,\n  FilePackageData,\n} from \"./types\";\nexport { loadPlugin, loadPreset } from \"./plugins\";\n\nimport gensync from \"gensync\";\nimport * as plugins from \"./plugins\";\n\nexport const resolvePlugin = gensync(plugins.resolvePlugin).sync;\nexport const resolvePreset = gensync(plugins.resolvePreset).sync;\n"],"mappings":"AAKA,CAAC,CAAC,CAAC;AAEH,SAASA,eAAe,QAAQ,cAAW;AAE3C,SACEC,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,EACdC,UAAU,EACVC,qBAAqB,EACrBC,qBAAqB,QAChB,oBAAiB;AAOxB,SAASC,UAAU,EAAEC,UAAU,QAAQ,cAAW;AAElD,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAO,KAAKC,OAAO,MAAM,cAAW;AAEpC,OAAO,MAAMC,aAAa,GAAGF,OAAO,CAACC,OAAO,CAACC,aAAa,CAAC,CAACC,IAAI;AAChE,OAAO,MAAMC,aAAa,GAAGJ,OAAO,CAACC,OAAO,CAACG,aAAa,CAAC,CAACD,IAAI"}