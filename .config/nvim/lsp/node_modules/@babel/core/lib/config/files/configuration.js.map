{"version":3,"names":["buildDebug","nodeFs","path","json5","gensync","makeStrongCache","makeWeakCacheSync","makeConfigAPI","makeStaticFileCache","loadCodeDefault","pathPatternToRegex","ConfigError","fs","createRequire","endHiddenCallStack","require","import","meta","url","debug","ROOT_CONFIG_FILENAMES","RELATIVE_CONFIG_FILENAMES","BABELIGNORE_FILENAME","LOADING_CONFIGS","Set","readConfigCode","filepath","cache","existsSync","never","has","dirname","options","add","delete","assertCache","Array","isArray","then","configured","throwConfigError","packageToBabelConfig","file","babel","readConfigJSON5","content","parse","err","message","readIgnoreConfig","ignoreDir","ignorePatterns","split","map","line","replace","trim","filter","pattern","ignore","findConfigUpwards","rootDir","filename","join","nextDir","findRelativeConfig","packageData","envName","caller","config","loc","directories","_packageData$pkg","loadOneConfig","pkg","ignoreLoc","findRootConfig","names","previousConfig","configs","all","readConfig","reduce","basename","loadConfig","name","v","w","process","versions","node","resolve","r","paths","b","M","f","_findPath","_nodeModulePaths","concat","Error","code","conf","ext","extname","resolveShowConfigPath","targetPath","env","BABEL_SHOW_CONFIG_FOR","absolutePath","stats","stat","isFile"],"sources":["../../../src/config/files/configuration.ts"],"sourcesContent":["import buildDebug from \"debug\";\nimport nodeFs from \"fs\";\nimport path from \"path\";\nimport json5 from \"json5\";\nimport gensync from \"gensync\";\nimport type { Handler } from \"gensync\";\nimport { makeStrongCache, makeWeakCacheSync } from \"../caching\";\nimport type { CacheConfigurator } from \"../caching\";\nimport { makeConfigAPI } from \"../helpers/config-api\";\nimport type { ConfigAPI } from \"../helpers/config-api\";\nimport { makeStaticFileCache } from \"./utils\";\nimport loadCodeDefault from \"./module-types\";\nimport pathPatternToRegex from \"../pattern-to-regex\";\nimport type { FilePackageData, RelativeConfig, ConfigFile } from \"./types\";\nimport type { CallerMetadata } from \"../validation/options\";\nimport ConfigError from \"../../errors/config-error\";\n\nimport * as fs from \"../../gensync-utils/fs\";\n\nimport { createRequire } from \"module\";\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace\";\nconst require = createRequire(import.meta.url);\n\nconst debug = buildDebug(\"babel:config:loading:files:configuration\");\n\nexport const ROOT_CONFIG_FILENAMES = [\n  \"babel.config.js\",\n  \"babel.config.cjs\",\n  \"babel.config.mjs\",\n  \"babel.config.json\",\n  \"babel.config.cts\",\n];\nconst RELATIVE_CONFIG_FILENAMES = [\n  \".babelrc\",\n  \".babelrc.js\",\n  \".babelrc.cjs\",\n  \".babelrc.mjs\",\n  \".babelrc.json\",\n  \".babelrc.cts\",\n];\n\nconst BABELIGNORE_FILENAME = \".babelignore\";\n\nconst LOADING_CONFIGS = new Set();\n\nconst readConfigCode = makeStrongCache(function* readConfigCode(\n  filepath: string,\n  cache: CacheConfigurator<{\n    envName: string;\n    caller: CallerMetadata | undefined;\n  }>,\n): Handler<ConfigFile | null> {\n  if (!nodeFs.existsSync(filepath)) {\n    cache.never();\n    return null;\n  }\n\n  // The `require()` call below can make this code reentrant if a require hook like @babel/register has been\n  // loaded into the system. That would cause Babel to attempt to compile the `.babelrc.js` file as it loads\n  // below. To cover this case, we auto-ignore re-entrant config processing.\n  if (LOADING_CONFIGS.has(filepath)) {\n    cache.never();\n\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {\n      filepath,\n      dirname: path.dirname(filepath),\n      options: {},\n    };\n  }\n\n  let options: unknown;\n  try {\n    LOADING_CONFIGS.add(filepath);\n    options = yield* loadCodeDefault(\n      filepath,\n      \"You appear to be using a native ECMAScript module configuration \" +\n        \"file, which is only supported when running Babel asynchronously.\",\n    );\n  } finally {\n    LOADING_CONFIGS.delete(filepath);\n  }\n\n  let assertCache = false;\n  if (typeof options === \"function\") {\n    // @ts-expect-error - if we want to make it possible to use async configs\n    yield* [];\n\n    options = endHiddenCallStack(options as any as (api: ConfigAPI) => {})(\n      makeConfigAPI(cache),\n    );\n\n    assertCache = true;\n  }\n\n  if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n    throw new ConfigError(\n      `Configuration should be an exported JavaScript object.`,\n      filepath,\n    );\n  }\n\n  // @ts-expect-error todo(flow->ts)\n  if (typeof options.then === \"function\") {\n    throw new ConfigError(\n      `You appear to be using an async configuration, ` +\n        `which your current version of Babel does not support. ` +\n        `We may add support for this in the future, ` +\n        `but if you're on the most recent version of @babel/core and still ` +\n        `seeing this error, then you'll need to synchronously return your config.`,\n      filepath,\n    );\n  }\n\n  if (assertCache && !cache.configured()) throwConfigError(filepath);\n\n  return {\n    filepath,\n    dirname: path.dirname(filepath),\n    options,\n  };\n});\n\nconst packageToBabelConfig = makeWeakCacheSync(\n  (file: ConfigFile): ConfigFile | null => {\n    const babel: unknown = file.options[\"babel\"];\n\n    if (typeof babel === \"undefined\") return null;\n\n    if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n      throw new ConfigError(`.babel property must be an object`, file.filepath);\n    }\n\n    return {\n      filepath: file.filepath,\n      dirname: file.dirname,\n      options: babel,\n    };\n  },\n);\n\nconst readConfigJSON5 = makeStaticFileCache((filepath, content): ConfigFile => {\n  let options;\n  try {\n    options = json5.parse(content);\n  } catch (err) {\n    throw new ConfigError(\n      `Error while parsing config - ${err.message}`,\n      filepath,\n    );\n  }\n\n  if (!options) throw new ConfigError(`No config detected`, filepath);\n\n  if (typeof options !== \"object\") {\n    throw new ConfigError(`Config returned typeof ${typeof options}`, filepath);\n  }\n  if (Array.isArray(options)) {\n    throw new ConfigError(`Expected config object but found array`, filepath);\n  }\n\n  delete options[\"$schema\"];\n\n  return {\n    filepath,\n    dirname: path.dirname(filepath),\n    options,\n  };\n});\n\nconst readIgnoreConfig = makeStaticFileCache((filepath, content) => {\n  const ignoreDir = path.dirname(filepath);\n  const ignorePatterns = content\n    .split(\"\\n\")\n    .map<string>(line => line.replace(/#(.*?)$/, \"\").trim())\n    .filter(line => !!line);\n\n  for (const pattern of ignorePatterns) {\n    if (pattern[0] === \"!\") {\n      throw new ConfigError(\n        `Negation of file paths is not supported.`,\n        filepath,\n      );\n    }\n  }\n\n  return {\n    filepath,\n    dirname: path.dirname(filepath),\n    ignore: ignorePatterns.map(pattern =>\n      pathPatternToRegex(pattern, ignoreDir),\n    ),\n  };\n});\n\nexport function findConfigUpwards(rootDir: string): string | null {\n  let dirname = rootDir;\n  for (;;) {\n    for (const filename of ROOT_CONFIG_FILENAMES) {\n      if (nodeFs.existsSync(path.join(dirname, filename))) {\n        return dirname;\n      }\n    }\n\n    const nextDir = path.dirname(dirname);\n    if (dirname === nextDir) break;\n    dirname = nextDir;\n  }\n\n  return null;\n}\n\nexport function* findRelativeConfig(\n  packageData: FilePackageData,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<RelativeConfig> {\n  let config = null;\n  let ignore = null;\n\n  const dirname = path.dirname(packageData.filepath);\n\n  for (const loc of packageData.directories) {\n    if (!config) {\n      config = yield* loadOneConfig(\n        RELATIVE_CONFIG_FILENAMES,\n        loc,\n        envName,\n        caller,\n        packageData.pkg?.dirname === loc\n          ? packageToBabelConfig(packageData.pkg)\n          : null,\n      );\n    }\n\n    if (!ignore) {\n      const ignoreLoc = path.join(loc, BABELIGNORE_FILENAME);\n      ignore = yield* readIgnoreConfig(ignoreLoc);\n\n      if (ignore) {\n        debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n      }\n    }\n  }\n\n  return { config, ignore };\n}\n\nexport function findRootConfig(\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile | null> {\n  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n}\n\nfunction* loadOneConfig(\n  names: string[],\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n  previousConfig: ConfigFile | null = null,\n): Handler<ConfigFile | null> {\n  const configs = yield* gensync.all(\n    names.map(filename =>\n      readConfig(path.join(dirname, filename), envName, caller),\n    ),\n  );\n  const config = configs.reduce((previousConfig: ConfigFile | null, config) => {\n    if (config && previousConfig) {\n      throw new ConfigError(\n        `Multiple configuration files found. Please remove one:\\n` +\n          ` - ${path.basename(previousConfig.filepath)}\\n` +\n          ` - ${config.filepath}\\n` +\n          `from ${dirname}`,\n      );\n    }\n\n    return config || previousConfig;\n  }, previousConfig);\n\n  if (config) {\n    debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n  }\n  return config;\n}\n\nexport function* loadConfig(\n  name: string,\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile> {\n  const filepath = require.resolve(name, { paths: [dirname] });\n\n  const conf = yield* readConfig(filepath, envName, caller);\n  if (!conf) {\n    throw new ConfigError(\n      `Config file contains no configuration data`,\n      filepath,\n    );\n  }\n\n  debug(\"Loaded config %o from %o.\", name, dirname);\n  return conf;\n}\n\n/**\n * Read the given config file, returning the result. Returns null if no config was found, but will\n * throw if there are parsing errors while loading a config.\n */\nfunction readConfig(\n  filepath: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile | null> {\n  const ext = path.extname(filepath);\n  switch (ext) {\n    case \".js\":\n    case \".cjs\":\n    case \".mjs\":\n    case \".cts\":\n      return readConfigCode(filepath, { envName, caller });\n    default:\n      return readConfigJSON5(filepath);\n  }\n}\n\nexport function* resolveShowConfigPath(\n  dirname: string,\n): Handler<string | null> {\n  const targetPath = process.env.BABEL_SHOW_CONFIG_FOR;\n  if (targetPath != null) {\n    const absolutePath = path.resolve(dirname, targetPath);\n    const stats = yield* fs.stat(absolutePath);\n    if (!stats.isFile()) {\n      throw new Error(\n        `${absolutePath}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`,\n      );\n    }\n    return absolutePath;\n  }\n  return null;\n}\n\nfunction throwConfigError(filepath: string): never {\n  throw new ConfigError(\n    `\\\nCaching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};`,\n    filepath,\n  );\n}\n"],"mappings":"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"}