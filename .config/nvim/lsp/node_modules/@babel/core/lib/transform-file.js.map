{"version":3,"names":["gensync","loadConfig","run","fs","transformFileRunner","filename","opts","options","Object","assign","config","code","readFile","transformFile","args","errback","transformFileSync","sync","transformFileAsync","async"],"sources":["../src/transform-file.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config\";\nimport type { InputOptions, ResolvedConfig } from \"./config\";\nimport { run } from \"./transformation\";\nimport type { FileResult, FileResultCallback } from \"./transformation\";\nimport * as fs from \"./gensync-utils/fs\";\n\ntype transformFileBrowserType = typeof import(\"./transform-file-browser\");\ntype transformFileType = typeof import(\"./transform-file\");\n\n// Kind of gross, but essentially asserting that the exports of this module are the same as the\n// exports of transform-file-browser, since this file may be replaced at bundle time with\n// transform-file-browser.\n({}) as any as transformFileBrowserType as transformFileType;\n\nconst transformFileRunner = gensync(function* (\n  filename: string,\n  opts?: InputOptions,\n): Handler<FileResult | null> {\n  const options = { ...opts, filename };\n\n  const config: ResolvedConfig | null = yield* loadConfig(options);\n  if (config === null) return null;\n\n  const code = yield* fs.readFile(filename, \"utf8\");\n  return yield* run(config, code);\n});\n\n// @ts-expect-error TS doesn't detect that this signature is compatible\nexport function transformFile(\n  filename: string,\n  callback: FileResultCallback,\n): void;\nexport function transformFile(\n  filename: string,\n  opts: InputOptions | undefined | null,\n  callback: FileResultCallback,\n): void;\nexport function transformFile(\n  ...args: Parameters<typeof transformFileRunner.errback>\n) {\n  transformFileRunner.errback(...args);\n}\n\nexport function transformFileSync(\n  ...args: Parameters<typeof transformFileRunner.sync>\n) {\n  return transformFileRunner.sync(...args);\n}\nexport function transformFileAsync(\n  ...args: Parameters<typeof transformFileRunner.async>\n) {\n  return transformFileRunner.async(...args);\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAwB,SAAS;AAE/C,OAAOC,UAAU,MAAM,mBAAU;AAEjC,SAASC,GAAG,QAAQ,2BAAkB;AAEtC,OAAO,KAAKC,EAAE,MAAM,uBAAoB;AAQxC,CAAC,CAAC,CAAC;AAEH,MAAMC,mBAAmB,GAAGJ,OAAO,CAAC,WAClCK,QAAgB,EAChBC,IAAmB,EACS;EAC5B,MAAMC,OAAO,GAAAC,MAAA,CAAAC,MAAA,KAAQH,IAAI;IAAED;EAAQ,EAAE;EAErC,MAAMK,MAA6B,GAAG,OAAOT,UAAU,CAACM,OAAO,CAAC;EAChE,IAAIG,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,MAAMC,IAAI,GAAG,OAAOR,EAAE,CAACS,QAAQ,CAACP,QAAQ,EAAE,MAAM,CAAC;EACjD,OAAO,OAAOH,GAAG,CAACQ,MAAM,EAAEC,IAAI,CAAC;AACjC,CAAC,CAAC;AAYF,OAAO,SAASE,aAAaA,CAC3B,GAAGC,IAAoD,EACvD;EACAV,mBAAmB,CAACW,OAAO,CAAC,GAAGD,IAAI,CAAC;AACtC;AAEA,OAAO,SAASE,iBAAiBA,CAC/B,GAAGF,IAAiD,EACpD;EACA,OAAOV,mBAAmB,CAACa,IAAI,CAAC,GAAGH,IAAI,CAAC;AAC1C;AACA,OAAO,SAASI,kBAAkBA,CAChC,GAAGJ,IAAkD,EACrD;EACA,OAAOV,mBAAmB,CAACe,KAAK,CAAC,GAAGL,IAAI,CAAC;AAC3C"}