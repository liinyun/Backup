(() => {
  var _0x498475 = {
    69338: module => {
      function _0x3109c3(_0x5c5a65) {
        var _0x2a2028 = new Error(`Cannot find module '${_0x5c5a65}'`);
        _0x2a2028.code = 'MODULE_NOT_FOUND';
        throw _0x2a2028;
      }
      _0x3109c3.keys = () => [];
      _0x3109c3.resolve = _0x3109c3;
      _0x3109c3.id = 69338;
      module.exports = _0x3109c3;
    },
    54861: module => {
      function _0x2b7cb3(_0x5e7cd4) {
        var _0x4ccc37 = new Error(`Cannot find module '${_0x5e7cd4}'`);
        _0x4ccc37.code = 'MODULE_NOT_FOUND';
        throw _0x4ccc37;
      }
      _0x2b7cb3.keys = () => [];
      _0x2b7cb3.resolve = _0x2b7cb3;
      _0x2b7cb3.id = 54861;
      module.exports = _0x2b7cb3;
    },
    85417: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BackgroundAnalysisRunner = exports.BackgroundAnalysis = undefined;
      exports.runBackgroundThread = _0x10fc03;
      exports.isPushRequest = _0x264bf6;
      exports.deepCopy = _0x5b7dd0;
      exports.deepRestore = _0x24bc06;
      exports.serialize = _0x480f52;
      exports.deserialize = _0x47da65;
      exports.clone = _0xad1e8;
      require(23070);
      const _0x127412 = require(56911);
      const _0x1ed4f2 = require(28167);
      const _0x50d3b4 = require(82695);
      const _0x3dcc8a = require(1371);
      const _0x21e449 = require(94953);
      const _0x2b34b5 = require(91426);
      const _0x562ffd = require(12522);
      const _0x55c413 = require(25075);
      const _0x54ee4b = require(34455);
      const _0x44eda2 = require(34487);
      const _0x536278 = require(63808);
      const _0x2cd857 = require(27643);
      const _0x45ac7e = require(71745);
      const _0x19937a = require(71582);
      const _0x2b0314 = require(27113);
      const _0x4734d8 = require(5884);
      const _0x3dd671 = require(67703);
      const _0x56e769 = require(99504);
      const _0x4892f8 = require(24122);
      const _0xf7514f = require(16589);
      const _0x156f28 = require(44889);
      const _0x26967b = require(52471);
      const _0x51d533 = require(79524);
      const _0xb2b2c5 = require(94818);
      const _0x121a54 = require(30048);
      const _0x3d1682 = require(69482);
      const _0x1585fe = require(77001);
      const _0x347fef = require(66609);
      const _0x48aa67 = require(68021);
      const _0x98b3a3 = require(21575);
      const _0x50e977 = require(96285);
      const _0x4d0dd3 = require(22205);
      const _0xf97adb = require(89750);
      const _0x110691 = require(72412);
      const _0x3189cb = require(59198);
      const _0x5d0584 = require(48316);
      const _0x569c7f = require(7587);
      const _0x5f3c6a = require(83868);
      const _0x4fd132 = require(77907);
      const _0x2378eb = require(74899);
      class _0x4735f8 extends _0x3dcc8a.BackgroundAnalysisBase {
        constructor(_0x4b2516, _0x446854) {
          super(_0x446854.console());
          this._serviceId = _0x4b2516;
          this._serviceProvider = _0x446854;
          this._openFiles = new Set();
          this._createdWorker = false;
          this._indexOptions = _0x4892f8.getEmptyIndexOptions();
        }
        dispose() {
          var _0x1ac29b;
          var _0x4e71d8;
          super.dispose();
          this.cancelIndexing();
          if ((_0x1ac29b = this._workerRef) === null || _0x1ac29b === undefined) {
            undefined;
          } else {
            _0x1ac29b.terminate();
          }
          this._workerRef = undefined;
          if ((_0x4e71d8 = this._fileHandler) === null || _0x4e71d8 === undefined) {
            undefined;
          } else {
            _0x4e71d8.dispose();
          }
        }
        setFileOpened(_0x44578a, _0x38d3a0, _0x37f72a, _0xe2c76e) {
          this._openFiles.add(_0x44578a.key);
          super.setFileOpened(_0x44578a, _0x38d3a0, _0x37f72a, _0xe2c76e);
          if (this._pendingIndexingRequest) {
            _0x569c7f.Indexer.requestIndexingFromBackgroundThread(this._pendingIndexingRequest.type, this._serviceId, this._serviceProvider, this._indexOptions, this._pendingIndexingRequest.configOptions, this._pendingIndexingRequest.importResolver, this._pendingIndexingRequest.kind);
            this._pendingIndexingRequest = undefined;
          }
        }
        setFileClosed(_0x682571, _0x27bd22) {
          this._openFiles.delete(_0x682571.key);
          super.setFileClosed(_0x682571, _0x27bd22);
        }
        refreshWorkspaceSymbols(_0x582c08) {
          this.enqueueRequest({
            requestType: 'indexWorkspaceSymbols',
            data: _0x480f52({
              token: _0x582c08
            })
          });
        }
        startIndexing(_0x490e10, _0x530a16, _0x8a8276, _0x339af3) {
          this._indexOptions = _0x490e10;
          this.analysisRequest('setIndexOptions', _0x490e10);
          if (this._openFiles.size === 0) {
            this._pendIndexingRequest('index', _0x530a16, _0x8a8276, _0x339af3);
            return;
          }
          _0x569c7f.Indexer.requestIndexingFromBackgroundThread('index', this._serviceId, this._serviceProvider, this._indexOptions, _0x530a16, _0x8a8276, _0x339af3);
        }
        refreshIndexing(_0x2f807c, _0x3939cc, _0x1b08f1, _0x19449b) {
          if (this._openFiles.size === 0) {
            this._pendIndexingRequest('refresh', _0x2f807c, _0x3939cc, _0x1b08f1);
            return;
          }
          _0x569c7f.Indexer.requestIndexingFromBackgroundThread('refresh', this._serviceId, this._serviceProvider, this._indexOptions, _0x2f807c, _0x3939cc, _0x1b08f1, _0x19449b);
        }
        cancelIndexing() {
          return _0x569c7f.Indexer.cancelIndexingRequest(this._serviceId);
        }
        async analysisRequest(_0x1f2f28, _0xd3e13e) {
          const {
            port1: _0x2eac59,
            port2: _0x48d171
          } = new _0x1ed4f2.MessageChannel();
          const _0x1f7e37 = _0x21e449.getBackgroundWaiter(_0x2eac59);
          this.enqueueRequest({
            requestType: _0x1f2f28,
            data: _0x480f52(_0xd3e13e),
            port: _0x48d171
          });
          const _0x107dc3 = await _0x1f7e37;
          _0x48d171.close();
          _0x2eac59.close();
          return _0x107dc3;
        }
        enqueueRequest(_0x34351e) {
          this._ensureWorkerStarted();
          super.enqueueRequest(_0x34351e);
        }
        onMessage(_0x4c051f) {
          switch (_0x4c051f.requestType) {
            case 'telemetry':
              {
                this._telemetry.sendTelemetry(_0x47da65(_0x4c051f.data));
                break;
              }
            default:
              {
                super.onMessage(_0x4c051f);
              }
          }
        }
        handleBackgroundResponse(_0x55caf4) {
          switch (_0x55caf4.requestType) {
            case 'indexWorkspaceResult':
              {
                if (this.program) {
                  const _0x25f393 = _0x47da65(_0x55caf4.data);
                  const _0x4f37c = this._serviceProvider.get(_0x121a54.PylanceServiceKeys.globalIndices).getIndices(this.program);
                  if (_0x4f37c === null || _0x4f37c === undefined) {
                    undefined;
                  } else {
                    _0x4f37c.setWorkspaceIndex(_0x25f393.uri, _0x25f393);
                  }
                }
                break;
              }
            default:
              {
                super.handleBackgroundResponse(_0x55caf4);
              }
          }
        }
        get _telemetry() {
          return this._serviceProvider.get(_0x121a54.PylanceServiceKeys.telemetry);
        }
        _ensureWorkerStarted() {
          var _0xff5833;
          var _0x55c48d;
          if (!this._createdWorker) {
            this._createdWorker = true;
            const _0x504368 = {
              rootUri: ((_0xff5833 = _0x4734d8.getRootUri(this._serviceProvider)) === null || _0xff5833 === undefined ? undefined : _0xff5833.toString()) ?? '',
              serviceId: this._serviceId,
              cancellationFolderName: _0x2b34b5.getCancellationFolderName(),
              runner: undefined,
              workerIndex: ++_0x4735f8._workerIndex
            };
            this._workerRef = new _0x1ed4f2.Worker(_0xf7514f.mainFilename, {
              workerData: _0x504368
            });
            this.setup(new _0x4d0dd3.FilteringWorker(this._workerRef, _0x12dd70 => !!_0x12dd70.requestType));
            this._fileHandler = new _0x110691.ForegroundFileRequestHandler(this._workerRef, this._serviceProvider.fs());
            if ((_0x55c48d = this._serviceProvider.cacheManager()) === null || _0x55c48d === undefined) {
              undefined;
            } else {
              _0x55c48d.addWorker(_0x504368.workerIndex, this._workerRef);
            }
          }
        }
        _pendIndexingRequest(_0x1c92f7, _0x4e4123, _0x3c0e24, _0x48c05e) {
          this.cancelIndexing();
          this._pendingIndexingRequest = {
            type: _0x1c92f7,
            configOptions: _0x4e4123,
            importResolver: _0x3c0e24,
            kind: _0x48c05e
          };
        }
      }
      exports.BackgroundAnalysis = _0x4735f8;
      _0x4735f8._workerIndex = 0;
      class _0x5ae800 extends _0x3dcc8a.BackgroundAnalysisRunnerBase {
        constructor(_0x1b45dc) {
          _0x1b45dc.add(_0x45ac7e.ServiceKeys.sourceFileFactory, new _0x48aa67.DiagnosticsRemapper());
          _0x1b45dc.add(_0x45ac7e.ServiceKeys.debugInfoInspector, new _0x26967b.PylanceDebugInfoInspector());
          super(_0x1b45dc);
          this._openFiles = new Set();
          _0x1b45dc.add(_0x121a54.PylanceServiceKeys.profilingService, new _0x4fd132.ProfilingService(_0x1b45dc, this.logTracker.prefix));
          _0x121a54.registerServices(this.program.serviceProvider, new _0x5d0584.DeclarationFinder(this.program), _0x121a54.PylanceServiceKeys.declarationFinder, _0x45ac7e.ServiceKeys.stateMutationListeners);
          this._telemetryDuration = new _0x19937a.Duration();
          this._lastTelemetryReported = -Infinity;
          this._indexTrackingMap = new WeakMap();
          this._startupDuration = new _0x19937a.Duration();
          this._startupTelemetry = this._initialStartupTelemetry();
          this._fileOpenedSinceLastTelemetry = false;
          this._programMutator = {
            addInterimFile: _0x467867 => this.program.addInterimFile(_0x467867),
            setFileOpened: (_0x557a8d, _0x449968, _0x442a6a, _0x268f58, _0x4a67c7) => {
              this.program.setFileOpened(_0x557a8d, _0x449968, _0x442a6a, {
                isTracked: this.program.owns(_0x557a8d),
                ipythonMode: _0x268f58,
                chainedFileUri: _0x4a67c7
              });
            },
            updateOpenFileContents: (_0x461343, _0x35686a, _0x1a707e, _0x5690df) => {
              this.program.setFileOpened(_0x461343, _0x35686a, _0x1a707e, {
                isTracked: this.program.owns(_0x461343),
                ipythonMode: _0x5690df,
                chainedFileUri: undefined
              });
            }
          };
          this._telemetry = {
            sendTelemetry(_0x594b53) {
              if (_0x1ed4f2.parentPort === null || _0x1ed4f2.parentPort === undefined) {
                undefined;
              } else {
                _0x1ed4f2.parentPort.postMessage({
                  requestType: 'telemetry',
                  data: _0x480f52(_0x594b53)
                });
              }
            },
            addPropertyToNextEvent(_0x5e6c03, _0x1d2220, _0x123c76) {}
          };
          const _0x20d6d5 = new _0xc95f0c();
          _0x20d6d5.addHandler('getSemanticTokens', _0x197e20 => this._getSemanticTokensHandler(_0x197e20.fileUri, _0x197e20.range, _0x197e20.includeSyntaxToken, _0x197e20.previousResultId, _0x197e20.cancellationToken));
          _0x20d6d5.addHandler('getInlayHints', _0x11a09d => this._getInlayHintsHandler(_0x11a09d.fileUri, _0x11a09d.range, _0x11a09d.options, _0x11a09d.cancellationToken));
          _0x20d6d5.addHandler('setExperimentOptions', async _0x9a008f => this._setExperimentOptionsHandler(_0x9a008f));
          _0x20d6d5.addHandler('setIndexOptions', async _0x55adc7 => {
            this._indexOptions = _0x55adc7;
          });
          _0x20d6d5.addHandler('setNotebookData', _0x330fb9 => this._setNotebookDataHandler(_0x330fb9.kind, _0x330fb9.fileUri, _0x330fb9.data));
          _0x20d6d5.addHandler('startProfiling', _0x5bca15 => this._startProfiling(_0x5bca15));
          _0x20d6d5.addHandler('stopProfiling', () => this._stopProfiling());
          _0x20d6d5.addHandler('indexWorkspaceSymbols', (_0x2a91ae, _0x414c5f) => this._handleIndexWorkspaceSymbols(_0x414c5f, _0x2a91ae.token));
          this._pylanceMsgHandlers = _0x20d6d5.build();
        }
        start() {
          super.start();
        }
        onMessage(_0x374b26) {
          const _0x485879 = _0x374b26.requestType;
          const _0x46f166 = this._pylanceMsgHandlers[_0x485879];
          if (_0x46f166) {
            if (_0x264bf6(_0x485879)) {
              const _0x4b988e = _0x47da65(_0x374b26.data);
              _0x46f166(_0x4b988e, this.responsePort);
            } else {
              _0x21e449.run(() => {
                const _0x483642 = _0x47da65(_0x374b26.data);
                return _0x46f166(_0x483642, _0x374b26.port);
              }, _0x374b26.port, _0x480f52);
            }
          } else {
            super.onMessage(_0x374b26);
          }
          const _0x483368 = process.memoryUsage();
          if (_0x483368.rss !== 0) {
            this._startupTelemetry.peakRss = Math.max(_0x483368.rss, this._startupTelemetry.peakRss ?? 0);
          }
        }
        handleAnalyze(_0x719083, _0x111dc5) {
          this._analysisDuration = this._analysisDuration ?? new _0x19937a.Duration();
          super.handleAnalyze(_0x719083, _0x111dc5);
        }
        handleSetImportResolver(_0x4044e7) {
          this._hostKind = _0x4044e7;
          super.handleSetImportResolver(_0x4044e7);
        }
        handleSetConfigOptions(_0x2c1d19) {
          this._resetStartupTelemetry();
          super.handleSetConfigOptions(_0x2c1d19);
        }
        handleSetFileOpened(_0x525756, _0x5cfc8f, _0x983392, _0x48deea) {
          var _0x129272;
          this._openFiles.add(_0x525756.key);
          if (!this._fileOpenedSinceLastTelemetry) {
            if (this._startupDuration && this._startupTelemetry.preSetFileOpenMs === 0) {
              this._startupTelemetry.preSetFileOpenMs = (_0x129272 = this._startupDuration) === null || _0x129272 === undefined ? undefined : _0x129272.getDurationInMilliseconds();
            }
            this._startupDuration = new _0x19937a.Duration();
            this._fileOpenedSinceLastTelemetry = true;
          }
          this._setIndexingNeeded(_0x525756, true);
          super.handleSetFileOpened(_0x525756, _0x5cfc8f, _0x983392, _0x48deea);
        }
        handleSetFileClosed(_0x5a88ac, _0x395e43) {
          this._openFiles.delete(_0x5a88ac.key);
          this._setIndexingNeeded(_0x5a88ac, true);
          super.handleSetFileClosed(_0x5a88ac, _0x395e43);
        }
        handleSetTrackedFiles(_0x4a3e02) {
          _0x4a3e02.forEach(_0x170fdc => this._setIndexingNeeded(_0x170fdc, true));
          super.handleSetTrackedFiles(_0x4a3e02);
        }
        handleMarkFilesDirty(_0x29012a, _0x2b1f8a) {
          _0x29012a.forEach(_0x26c7db => this._setIndexingNeeded(_0x26c7db, true));
          super.handleMarkFilesDirty(_0x29012a, _0x2b1f8a);
        }
        handleMarkAllFilesDirty(_0x4d9335) {
          this.program.getUserFiles().forEach(_0x32b45 => this._indexTrackingMap.delete(_0x32b45));
          super.handleMarkAllFilesDirty(_0x4d9335);
        }
        handleInvalidateAndForceReanalysis(_0x390a5c) {
          if (_0x390a5c === _0x50d3b4.InvalidatedReason.SourceWatcherChanged && this._indexOptions?.includeAliasesFromUserFiles) {
            this.program.getUserFiles().forEach(_0x35e704 => this._indexTrackingMap.delete(_0x35e704));
          }
          super.handleInvalidateAndForceReanalysis(_0x390a5c);
        }
        handleRestart() {
          this._resetStartupTelemetry();
          super.handleRestart();
        }
        analysisDone(_0x4fc375, _0x5f3bb7) {
          super.analysisDone(_0x4fc375, _0x5f3bb7);
          const _0x5336be = this._telemetryDuration.getDurationInSeconds();
          if (_0x5336be - this._lastTelemetryReported > _0x3d1682.TelemetryWaitTimeSeconds) {
            this.importResolver.sendTelemetry();
            this._lastTelemetryReported = _0x5336be;
          }
          if (this._startupDuration && this._analysisDuration) {
            this._startupTelemetry.totalMs = this._startupDuration.getDurationInMilliseconds();
            this._startupTelemetry.analysisMs = this._analysisDuration.getDurationInMilliseconds() - this._startupTelemetry.userIndexMs;
            const _0x459b3d = new _0x3d1682.TelemetryEvent(_0x3d1682.TelemetryEventName.STARTUP_METRICS);
            _0x459b3d.Measurements.tokenRangeMs = this._startupTelemetry.tokenRangeMs;
            _0x459b3d.Measurements.tokenFullMs = this._startupTelemetry.tokenFullMs;
            _0x459b3d.Measurements.tokenDeltaMs = this._startupTelemetry.tokenDeltaMs;
            _0x459b3d.Measurements.analysisMs = this._startupTelemetry.analysisMs;
            _0x459b3d.Measurements.userIndexMs = this._startupTelemetry.userIndexMs;
            _0x459b3d.Measurements.totalMs = this._startupTelemetry.totalMs;
            _0x459b3d.Measurements.preSetFileOpenMs = this._startupTelemetry.preSetFileOpenMs;
            if (this._startupTelemetry.peakRss !== undefined) {
              _0x459b3d.Measurements.peakRssMB = this._startupTelemetry.peakRss / 1024 / 1024;
            }
            this._telemetry.sendTelemetry(_0x459b3d);
            this._startupDuration = undefined;
            this._analysisDuration = undefined;
            this._startupTelemetry = this._initialStartupTelemetry();
          }
        }
        onAnalysisCompletion(_0x550cb5, _0x75dd21) {
          _0x75dd21.diagnosticsSeen = _0x347fef.getDiagnosticsSeen(_0x75dd21.diagnostics);
          super.onAnalysisCompletion(_0x550cb5, _0x75dd21);
        }
        createHost() {
          return _0xb2b2c5.PylanceFullAccessHost.createHost(this._hostKind ?? 1, this.serviceProvider);
        }
        createImportResolver(_0x1444a9, _0x58d83d, _0x4040c5) {
          return _0xf97adb.createPylanceImportResolver(_0x1444a9, _0x58d83d, _0x4040c5, this._telemetry);
        }
        _setExperimentOptionsHandler(_0x3c2c02) {
          _0x3dd671.setForceEnglishDiagnostics(!!_0x3c2c02.displayEnglishDiagnostics);
          const _0x2011a4 = _0x3189cb.tryAddFixtureFinder(this.program.serviceProvider, _0x3c2c02, this.program, this._programMutator);
          if (_0x2011a4 === null || _0x2011a4 === undefined) {
            undefined;
          } else {
            _0x2011a4.onUpdateSettings(_0x3c2c02);
          }
          const _0x1c3bd1 = this.getConsole();
          if (_0x1c3bd1 instanceof _0x21e449.BackgroundConsole) {
            _0x1c3bd1.level = _0x56e769.IS_INSIDERS ? _0x55c413.LogLevel.Log : _0x3c2c02.logLevel ?? _0x55c413.LogLevel.Info;
          }
        }
        _getSemanticTokensHandler(_0x446b5b, _0x2e3ff0, _0x563219, _0x1d7345, _0x48beec) {
          const _0x42f8d9 = _0x2e3ff0 !== undefined ? 'range' : _0x54ee4b.isString(_0x1d7345) ? 'delta' : 'full';
          const _0x1bdc0e = new _0x19937a.Duration();
          const _0x543b93 = _0x3d1682.trackPerf(this._telemetry, _0x3d1682.TelemetryEventName.SEMANTICTOKENS_SLOW, _0x2ec4e9 => {
            const _0x5e6164 = _0x197ac9(_0x42f8d9, _0x2e3ff0, _0x1d7345);
            const _0x6c6a6c = this.logTracker.log(`SemanticTokens ${_0x5e6164} at ${_0x446b5b}`, _0xf25b20 => {
              return _0x50e977.getSemanticTokens(this.program, _0x446b5b, _0x2e3ff0, _0x563219, _0x1d7345, _0x48beec);
            });
            _0x2ec4e9.addCustomProperty('type', _0x42f8d9);
            if (_0x127412.SemanticTokens.is(_0x6c6a6c)) {
              _0x2ec4e9.addCustomMeasure('count', _0x6c6a6c.data.length);
            } else {
              _0x2ec4e9.addCustomMeasure('count', _0x6c6a6c.edits.length);
            }
            return _0x6c6a6c;
          }, _0x2ea1c0);
          if (_0x42f8d9 === 'range') {
            this._startupTelemetry.tokenRangeMs += _0x1bdc0e.getDurationInMilliseconds();
          } else {
            if (_0x42f8d9 === 'full') {
              this._startupTelemetry.tokenFullMs += _0x1bdc0e.getDurationInMilliseconds();
            } else {
              if (_0x42f8d9 === 'delta') {
                this._startupTelemetry.tokenDeltaMs += _0x1bdc0e.getDurationInMilliseconds();
              }
            }
          }
          return _0x543b93;
        }
        _setIndexingNeeded(_0x12006b, _0x5360af) {
          const _0x2dbdbb = this.program.getSourceFileInfo(_0x12006b);
          if (_0x2dbdbb) {
            this._indexTrackingMap.set(_0x2dbdbb, !_0x5360af);
            if (_0x5360af && this._indexOptions?.includeAliasesFromUserFiles) {
              this._markIndexingNeededRecursive(_0x2dbdbb, new Set());
            }
          }
        }
        _markIndexingNeededRecursive(_0x40b87a, _0x2a7581) {
          const _0xb06468 = _0x40b87a.sourceFile.getUri();
          if (_0x2a7581.has(_0xb06468.key)) {
            return;
          }
          this._indexTrackingMap.set(_0x40b87a, false);
          _0x2a7581.add(_0xb06468.key);
          _0x40b87a.importedBy.forEach(_0x57c16e => {
            this._markIndexingNeededRecursive(_0x57c16e, _0x2a7581);
          });
        }
        _getMaxUserFilesIndexCount() {
          if (this._indexOptions?.userFileIndexingLimit === undefined) {
            return _0x557d50;
          }
          if (this._indexOptions.userFileIndexingLimit >= 0) {
            return this._indexOptions.userFileIndexingLimit;
          } else {
            return Number.MAX_SAFE_INTEGER;
          }
        }
        _handleIndexWorkspaceSymbols(_0x4c5975, _0x2a55b2) {
          if (this._openFiles.size === 0) {
            return;
          }
          try {
            const _0x2eafdb = new _0x19937a.Duration();
            _0x3d1682.trackPerf(this._telemetry, _0x3d1682.TelemetryEventName.WORKSPACEINDEX_SLOW, _0x1eb0d3 => {
              const _0x300513 = this._getMaxUserFilesIndexCount();
              const _0x330208 = _0x2378eb.SymbolIndexer.indexWorkspace(this.logTracker, this.program, this._indexTrackingMap, _0x300513, this._indexOptions?.includeAliasesFromUserFiles ?? false, (_0x329c13, _0x200213) => {
                this.log(_0x55c413.LogLevel.Log, `Workspace indexing done: ${_0x329c13}`);
                this._reportIndex(_0x4c5975, _0x200213);
              }, _0x2a55b2);
              if (_0x330208 >= _0x300513) {
                this.log(_0x55c413.LogLevel.Warn, `Workspace indexing has hit its upper limit: ${_0x300513} files`);
                const _0x3eb1e7 = new _0x3d1682.TelemetryEvent(_0x3d1682.TelemetryEventName.WORKSPACEINDEX_THRESHOLD_REACHED);
                _0x3eb1e7.Measurements.index_count = _0x330208;
                this._telemetry.sendTelemetry(_0x3eb1e7);
              }
              _0x1eb0d3.addCustomMeasure('count', _0x330208);
            }, _0x5a5979);
            this._startupTelemetry.userIndexMs = _0x2eafdb.getDurationInMilliseconds();
          } catch (_0x43e8c1) {
            if (_0x2b34b5.OperationCanceledException.is(_0x43e8c1)) {
              return;
            }
            this.log(_0x55c413.LogLevel.Error, _0x43e8c1.message);
          }
        }
        _reportIndex(_0x5dba26, _0x3bc724) {
          _0x5dba26.postMessage({
            requestType: 'indexWorkspaceResult',
            data: _0x480f52(_0x3bc724)
          });
        }
        _resetStartupTelemetry() {
          this._startupDuration = new _0x19937a.Duration();
          this._analysisDuration = undefined;
          this._fileOpenedSinceLastTelemetry = false;
          this._startupTelemetry = this._initialStartupTelemetry();
        }
        _initialStartupTelemetry() {
          return {
            preSetFileOpenMs: 0,
            tokenRangeMs: 0,
            tokenFullMs: 0,
            tokenDeltaMs: 0,
            analysisMs: 0,
            userIndexMs: 0,
            totalMs: 0
          };
        }
        _getInlayHintsHandler(_0x396111, _0x25f3a0, _0x2bf197, _0x134747) {
          return _0x3d1682.trackPerf(this._telemetry, _0x3d1682.TelemetryEventName.INLAYHINTS_SLOW, () => {
            const _0x1836e9 = this.logTracker.log(`InlayHints range ${_0x25f3a0.start.line}:${_0x25f3a0.start.character} - ${_0x25f3a0.end.line}:${_0x25f3a0.end.character} at ${_0x396111}`, () => {
              return _0x98b3a3.getInlayHints(this.program, _0x396111, _0x25f3a0, _0x2bf197, _0x134747);
            });
            return _0x1836e9;
          }, _0x5e34ac);
        }
        _setNotebookDataHandler(_0x413e99, _0x3d2bba, _0x4e84ae) {
          const _0x1120c7 = this.program.serviceProvider.tryGet(_0x45ac7e.ServiceKeys.debugInfoInspector);
          if (_0x1120c7) {
            const _0x429cab = {
              kind: _0x413e99,
              fileUri: _0x3d2bba,
              data: _0x4e84ae
            };
            _0x1120c7.setNotebookData(_0x429cab);
          }
        }
        async _startProfiling(_0x2ee2ba) {
          const _0x24fd4c = this.program.serviceProvider.tryGet(_0x121a54.PylanceServiceKeys.profilingService);
          if (!_0x24fd4c) {
            return undefined;
          }
          return await _0x24fd4c.startProfiling(_0x2ee2ba);
        }
        async _stopProfiling() {
          const _0x4828be = this.program.serviceProvider.tryGet(_0x121a54.PylanceServiceKeys.profilingService);
          if (!_0x4828be) {
            return undefined;
          }
          return await _0x4828be.stopProfiling();
        }
      }
      exports.BackgroundAnalysisRunner = _0x5ae800;
      function _0x10fc03() {
        const _0x4052e6 = _0x1ed4f2.workerData;
        const _0x593593 = new _0x21e449.BackgroundConsole();
        const _0x5130e9 = new _0x2cd857.RealTempFile();
        const _0x4863a9 = new _0x156f28.NotebookUriMapper(_0x5130e9);
        const _0x555e5d = _0xf6e233(_0x4052e6.runner, _0x4863a9, _0x5130e9, _0x593593);
        const _0x2313d5 = _0x121a54.createPylanceServiceProvider(_0x593593, _0x555e5d, _0x4863a9, _0x5130e9);
        if (!_0x4052e6.runner) {
          const _0x5ed7b1 = new _0x5ae800(_0x2313d5);
          _0x5ed7b1.start();
        }
        if (_0x4052e6.runner === 'indexer') {
          const _0x15102e = new _0x569c7f.BackgroundIndexRunner(_0x2313d5);
          _0x15102e.start();
        }
      }
      function _0xf6e233(_0x5560f8, _0x72d3e3, _0x3f9a4f, _0x6d0929) {
        if (_0x5560f8 === 'indexer') {
          const _0x8017ac = _0x5f3c6a.createIndexerFileSystem(_0x3f9a4f, _0x6d0929);
          return _0x51d533.PylanceFileSystem.createWithoutRemote(_0x8017ac, _0x72d3e3);
        }
        const _0x2539fd = _0x2cd857.createFromRealFileSystem(_0x3f9a4f, _0x6d0929);
        const _0x4b1165 = new _0x110691.BackgroundRemoteFileSystem();
        return _0x51d533.PylanceFileSystem.createFromFileSystem(_0x2539fd, _0x4b1165, _0x72d3e3);
      }
      function _0x197ac9(_0x43f175, _0x2f21fc, _0x4d60be) {
        let _0x1c6c76 = `${_0x43f175}`;
        if (_0x2f21fc) {
          _0x1c6c76 += ` ${_0x2f21fc.start.line}:${_0x2f21fc.start.character} - ${_0x2f21fc.end.line}:${_0x2f21fc.end.character}`;
        }
        if (_0x4d60be) {
          _0x1c6c76 += ` previousResultId:${_0x4d60be}`;
        }
        return _0x1c6c76;
      }
      const _0x5e34ac = 2000;
      const _0x2ea1c0 = 2000;
      const _0x5a5979 = 10000;
      const _0x557d50 = 2000;
      function _0x264bf6(_0x4273cb) {
        return _0x4273cb === 'indexWorkspaceSymbols';
      }
      class _0xc95f0c {
        constructor() {
          this._handlers = {};
        }
        addHandler(_0x2a826f, _0x46e31b) {
          this._handlers[_0x2a826f] = _0x46e31b;
          return this;
        }
        build() {
          return this._handlers;
        }
      }
      function _0x37a107(_0x4d835e) {
        if (_0x4d835e instanceof _0x1585fe.UriMap) {
          return {
            uri_map_val: [..._0x4d835e]
          };
        }
        return _0x21e449.serializeReplacer(_0x4d835e);
      }
      function _0xbece4c(_0x8f642a) {
        if (_0x8f642a && typeof _0x8f642a === 'object') {
          if (_0x8f642a.uri_map_val) {
            const _0x23d41a = new _0x1585fe.UriMap();
            for (const [_0x43edee, _0x3f3140] of _0x8f642a.uri_map_val) {
              _0x23d41a.set(_0x43edee, _0x3f3140);
            }
            return _0x23d41a;
          }
        }
        return _0x21e449.deserializeReviver(_0x8f642a);
      }
      function _0x5b7dd0(_0x18c633, _0x1f1c5c = new Set()) {
        if (_0x18c633 === undefined) {
          return _0x18c633;
        }
        if (_0x2b0314.Uri.is(_0x18c633) && _0x18c633.toJsonObj !== undefined) {
          return {
            __serialized_uri_val: _0x18c633.toJsonObj()
          };
        }
        if (_0x127412.CancellationToken.is(_0x18c633)) {
          return {
            cancellation_token_val: _0x2b34b5.getCancellationTokenId(_0x18c633)
          };
        }
        if (_0x536278.PythonVersion.is(_0x18c633)) {
          return _0x18c633;
        }
        if (_0x18c633 instanceof RegExp) {
          return {
            __serialized_regexp_val: {
              source: _0x18c633.source,
              flags: _0x18c633.flags
            }
          };
        }
        if (_0x18c633 instanceof _0x562ffd.ConfigOptions) {
          return {
            __serialized_config_options: _0x32a51f(_0x18c633)
          };
        }
        if (_0x18c633 instanceof _0x1585fe.UriMap) {
          return {
            uri_map_val: _0x5b7dd0([..._0x18c633])
          };
        }
        if (_0x18c633 instanceof Map) {
          return {
            __serialized_map_val: _0x5b7dd0([..._0x18c633])
          };
        }
        if (_0x18c633 instanceof Set) {
          return {
            __serialized_set_val: _0x5b7dd0([..._0x18c633])
          };
        }
        if (Array.isArray(_0x18c633)) {
          return _0x18c633.map(_0x4d0180 => _0x5b7dd0(_0x4d0180, _0x1f1c5c));
        }
        if (typeof _0x18c633 !== 'object') {
          return _0x18c633;
        }
        _0x2a12b1();
        return _0x32a51f(_0x18c633);
        function _0x32a51f(_0x4fdf07) {
          const _0x41b9e2 = Object.keys(_0x4fdf07);
          const _0x587c0f = Object.create(null);
          for (const _0x6dd76f of _0x41b9e2) {
            _0x587c0f[_0x6dd76f] = _0x5b7dd0(_0x4fdf07[_0x6dd76f], _0x1f1c5c);
          }
          return _0x587c0f;
        }
        function _0x2a12b1() {
          if (_0x1f1c5c.has(_0x18c633)) {
            throw new Error('Can\'t deep copy cyclic structures.');
          }
          _0x1f1c5c.add(_0x18c633);
        }
      }
      function _0x24bc06(_0x24435f) {
        return _0x30d7fd(_0x24435f);
      }
      function _0x30d7fd(_0x3864ff) {
        if (_0x3864ff === undefined) {
          return _0x3864ff;
        }
        if (_0x3864ff.cancellation_token_val) {
          return _0x44eda2.getCancellationTokenFromId(_0x3864ff.cancellation_token_val);
        }
        if (_0x3864ff.__serialized_uri_val !== undefined) {
          return _0x2b0314.Uri.fromJsonObj(_0x3864ff.__serialized_uri_val);
        }
        if (_0x3864ff.__serialized_regexp_val) {
          return new RegExp(_0x3864ff.__serialized_regexp_val.source, _0x3864ff.__serialized_regexp_val.flags);
        }
        if (_0x3864ff.__serialized_config_options) {
          const _0x392f73 = new _0x562ffd.ConfigOptions(_0x2b0314.Uri.empty());
          Object.assign(_0x392f73, _0x30d7fd(_0x3864ff.__serialized_config_options));
          return _0x392f73;
        }
        if (_0x3864ff.uri_map_val) {
          const _0x100f40 = new _0x1585fe.UriMap();
          for (const _0x4b523f of _0x3864ff.uri_map_val) {
            const [_0x54ddca, _0x5de93b] = _0x30d7fd(_0x4b523f);
            _0x100f40.set(_0x54ddca, _0x5de93b);
          }
          return _0x100f40;
        }
        if (_0x3864ff.__serialized_map_val) {
          return new Map(_0x30d7fd(_0x3864ff.__serialized_map_val));
        }
        if (_0x3864ff.__serialized_set_val) {
          return new Set(_0x30d7fd(_0x3864ff.__serialized_set_val));
        }
        if (Array.isArray(_0x3864ff)) {
          return _0x3864ff.map(_0xb7ab65 => _0x30d7fd(_0xb7ab65));
        }
        if (typeof _0x3864ff !== 'object') {
          return _0x3864ff;
        }
        const _0x590a2a = Object.keys(_0x3864ff);
        const _0x20c359 = Object.create(null);
        for (const _0x18aab9 of _0x590a2a) {
          _0x20c359[_0x18aab9] = _0x30d7fd(_0x3864ff[_0x18aab9]);
        }
        return _0x20c359;
      }
      function _0x480f52(_0x27cccd) {
        return JSON.stringify(_0x27cccd, (_0x52d108, _0x5712c7) => _0x37a107(_0x5712c7));
      }
      function _0x47da65(_0x332a33) {
        if (!_0x332a33) {
          return undefined;
        }
        if (_0x54ee4b.isString(_0x332a33)) {
          return JSON.parse(_0x332a33, (_0x323965, _0x307049) => _0xbece4c(_0x307049));
        } else {
          return _0xbece4c(_0x332a33);
        }
      }
      function _0xad1e8(_0x94b09c) {
        return _0x47da65(_0x480f52(_0x94b09c));
      }
    },
    61569: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BackgroundAnalysisFactory = undefined;
      const _0x3a3d8c = require(85417);
      class _0x277320 {
        constructor(_0x4a48ae) {
          this._serviceProvider = _0x4a48ae;
        }
        createBackgroundAnalysis(_0x2d7e6e) {
          return new _0x3a3d8c.BackgroundAnalysis(_0x2d7e6e, this._serviceProvider);
        }
      }
      exports.BackgroundAnalysisFactory = _0x277320;
    },
    88335: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AddImportCommand = undefined;
      const _0x5a9054 = require(91426);
      const _0x5e469c = require(27113);
      const _0x572a16 = require(74382);
      const _0x4508fc = require(78031);
      const _0x161dcb = require(13259);
      const _0x30508a = require(30048);
      const _0x18f591 = require(86615);
      const _0xda93c5 = require(74899);
      class _0x82427d {
        execute(_0xeaf33d, _0x1e66c4, _0x57ed9d) {
          _0x5a9054.throwIfCancellationRequested(_0x57ed9d);
          if (!_0x1e66c4.arguments || _0x1e66c4.arguments.length < 3) {
            return [];
          }
          const _0x2422dd = _0x5e469c.Uri.parse(_0x1e66c4.arguments[0], _0xeaf33d.service.serviceProvider);
          const _0x4cdf07 = _0x1e66c4.arguments[1];
          const _0x537d90 = _0x1e66c4.arguments[2];
          const _0x58494d = this._getArguments(_0x1e66c4.arguments, 3);
          const _0x3869c0 = this._getArguments(_0x1e66c4.arguments, 4);
          const _0x5693da = _0xeaf33d.service.run(_0x325d60 => {
            const _0x9105e9 = 1;
            return _0x18f591.getAutoImports(_0x325d60, _0x2422dd, _0x4cdf07, _0x9105e9, _0x161dcb.wellKnownAbbreviationMap, {
              lazyEdit: false,
              importFormat: _0xeaf33d.importFormat,
              indices: _0xda93c5.SymbolIndexer.getIndices(_0xeaf33d),
              nameToSearch: _0x3869c0 ?? _0x537d90,
              includeAliasesFromUserFiles: _0xeaf33d.indexOptions?.includeAliasesFromUserFiles,
              allowDuplicatedAliasesFromUserFiles: true
            }, _0x57ed9d);
          }, _0x57ed9d);
          const _0x5d5eab = _0x5693da.find(_0x4855cb => _0x4855cb.name === _0x537d90 && _0x4855cb.source === _0x58494d);
          if (!_0x5d5eab) {
            return [];
          }
          const _0x5beee2 = _0xeaf33d.service.serviceProvider.tryGet(_0x30508a.PylanceServiceKeys.mruQueues);
          if (_0x5beee2) {
            _0x5beee2.getGlobalMRUQueue(_0x4508fc.addImportMRUKey).enqueue(_0x5d5eab);
          }
          return _0x572a16.convertToWorkspaceEdit(_0xeaf33d.service.fs, [..._0x5d5eab.edits.map(_0x9e6b80 => {
            return {
              fileUri: _0x2422dd,
              range: _0x9e6b80.range,
              replacementText: _0x9e6b80.replacementText
            };
          }), {
            fileUri: _0x2422dd,
            range: _0x4cdf07,
            replacementText: _0x5d5eab.insertionText
          }]);
        }
        getFile(_0x6d7d8e) {
          if (_0x6d7d8e.arguments) {
            return _0x6d7d8e.arguments[0];
          } else {
            return undefined;
          }
        }
        _getArguments(_0x11c250, _0x33cec1) {
          var _0x3839bc;
          if (_0x11c250.length <= _0x33cec1) {
            return undefined;
          } else {
            if ((_0x3839bc = _0x11c250[_0x33cec1]) !== null && _0x3839bc !== undefined) {
              return _0x3839bc;
            } else {
              return undefined;
            }
          }
        }
      }
      exports.AddImportCommand = _0x82427d;
    },
    29725: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ChangeSpellingCommand = undefined;
      const _0x76b745 = require(91426);
      const _0x1e3c34 = require(27113);
      const _0x464cca = require(74382);
      class _0x4867be {
        execute(_0x1466f2, _0x4b3b57, _0x313d9e) {
          _0x76b745.throwIfCancellationRequested(_0x313d9e);
          if (!_0x4b3b57.arguments || _0x4b3b57.arguments.length < 3) {
            return [];
          }
          const _0x3fd3f4 = _0x1e3c34.Uri.parse(_0x4b3b57.arguments[0], _0x1466f2.service.serviceProvider);
          const _0x4e7aba = _0x4b3b57.arguments[1];
          const _0x2a7782 = _0x4b3b57.arguments[2];
          return _0x464cca.convertToWorkspaceEdit(_0x1466f2.service.fs, [{
            fileUri: _0x3fd3f4,
            range: _0x4e7aba,
            replacementText: _0x2a7782
          }]);
        }
        getFile(_0x519fb8) {
          if (_0x519fb8.arguments) {
            return _0x519fb8.arguments[0];
          } else {
            return undefined;
          }
        }
      }
      exports.ChangeSpellingCommand = _0x4867be;
    },
    73117: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ClearPersistedIndicesCommand = undefined;
      const _0x1223e4 = require(91426);
      const _0x75c158 = require(49137);
      class _0x28e96f {
        constructor(_0x1e11e5) {
          this._ls = _0x1e11e5;
        }
        execute(_0x2d2d6b, _0x60dda6, _0x4abdb5) {
          _0x1223e4.throwIfCancellationRequested(_0x4abdb5);
          const _0x2f075e = _0x2d2d6b.service.fs;
          const _0x56ae50 = _0x75c158.getSpecialFolder(_0x2f075e, _0x75c158.SpecialFoldersKind.GlobalIndices);
          this._deleteFolder(_0x2f075e, _0x56ae50);
          const _0x21cd1e = _0x75c158.getSpecialFolder(_0x2f075e, _0x75c158.SpecialFoldersKind.LocalIndices);
          this._deleteFolder(_0x2f075e, _0x21cd1e);
        }
        getFile(_0x183ab4) {
          return undefined;
        }
        _deleteFolder(_0x2a97b0, _0x328d86) {
          if (!_0x2a97b0.existsSync(_0x328d86)) {
            return;
          }
          _0x2a97b0.readdirEntriesSync(_0x328d86).forEach(_0xdf29fd => {
            const _0x2befc2 = _0x328d86.combinePaths(_0xdf29fd.name);
            if (_0xdf29fd.isDirectory()) {
              this._deleteFolder(_0x2a97b0, _0x2befc2);
            }
            this._delete(_0x2a97b0, _0x2befc2, _0xdf29fd.isDirectory());
          });
        }
        _delete(_0x5576e2, _0x3aa2af, _0x4607dd) {
          try {
            if (_0x4607dd) {
              _0x5576e2.rmdirSync(_0x3aa2af);
            } else {
              _0x5576e2.unlinkSync(_0x3aa2af);
            }
          } catch (_0xc3e927) {}
        }
      }
      exports.ClearPersistedIndicesCommand = _0x28e96f;
    },
    67299: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SyncCommandController = exports.AsyncCommandController = undefined;
      const _0x58bf85 = require(34455);
      const _0x4faacf = require(48281);
      const _0x100dc6 = require(27113);
      const _0x15cf80 = require(69482);
      const _0x59c5cb = require(25283);
      const _0x171685 = require(56910);
      const _0xdf11d6 = require(89644);
      const _0x20c6f8 = require(29725);
      const _0x42d636 = require(73117);
      const _0xcd046 = require(27130);
      const _0x1a78e8 = require(84754);
      const _0x53f70c = require(99482);
      const _0x24a900 = require(21628);
      const _0x1c014d = require(16904);
      const _0x3f5a40 = require(79765);
      const _0x434f41 = require(41097);
      const _0x4ed498 = require(18106);
      const _0x2851d2 = require(15091);
      const _0x6496 = require(94473);
      const _0x37cc8c = require(32662);
      const _0x4ff018 = require(13355);
      const _0x374296 = require(54991);
      const _0x5f48fb = require(5174);
      const _0x2b10f7 = require(63216);
      const _0x16522e = require(48783);
      const _0x1d1818 = require(14054);
      const _0x501d77 = require(94614);
      const _0x230814 = new Set(['pyright.createtypestub', 'pyright.organizeimports', _0xcd046.Commands.createTypeStub, _0xcd046.Commands.orderImports, _0xcd046.Commands.addMissingOptionalToParam, _0xcd046.Commands.removeUnusedImport, _0xcd046.Commands.addImport, _0xcd046.Commands.changeSpelling, _0xcd046.Commands.extractMethod, _0xcd046.Commands.extractVariable, _0xcd046.Commands.executedClientCommand, _0xcd046.Commands.convertImportFormat, _0xcd046.Commands.moveSymbol, _0xcd046.Commands.fixAll, _0xcd046.Commands.addFixtureTypeAnnotation, _0xcd046.Commands.addAllFixtureTypeAnnotations, _0xcd046.Commands.clearPersistedIndices, _0xcd046.Commands.startProfiling, _0xcd046.Commands.stopProfiling, _0xcd046.Commands.startLogging, _0xcd046.Commands.stopLogging, _0xcd046.Commands.implementAllAbstractClasses, _0xcd046.Commands.implementAllAbstractClassesWithCopilot, _0xcd046.Commands.getAllDocstringRanges, _0xcd046.Commands.generateDocstring, _0xcd046.Commands.fixupCopilotDocstringOutput]);
      class _0x279754 {
        constructor(_0x23b548, _0x563fa1, _0xc2ff08, _0x57075d) {
          this.ls = _0x23b548;
          this._telemetry = _0xc2ff08;
          this._pylanceQuickAction = new _0x1d1818.QuickActionCommand(_0x23b548);
          this._extractMethod = new _0x3f5a40.ExtractMethodCommand(_0x57075d);
          this._extractVariable = new _0x3f5a40.ExtractVariableCommand(_0x57075d);
          this._completionAccepted = new _0x1a78e8.CompletionAcceptedCommand(_0xc2ff08);
          this._convertImportFormat = new _0x53f70c.ConvertImportFormatCommand();
          this._moveSymbol = new _0x2b10f7.MoveSymbolCommand(_0x23b548);
          this._getSourceFiles = new _0x4ff018.GetSourceFilesCommand();
          this._getAutoImports = new _0x37cc8c.GetAutoImportsCommand();
          this._changeSpelling = new _0x20c6f8.ChangeSpellingCommand();
          this._fixAll = new _0x434f41.FixAllCommand(_0xc2ff08);
          this._createTypeStub = new _0x24a900.CreateTypeStubCommand(_0x23b548);
          this._restartServer = new _0x501d77.RestartServerCommand(_0x23b548);
          this._dumpFileDebugInfo = new _0x1c014d.DumpFileDebugInfoCommand(_0x23b548);
          this._clearPersistedIndices = new _0x42d636.ClearPersistedIndicesCommand(_0x23b548);
          this._addFixtureTypeAnnotationCommand = new _0xdf11d6.AddFixtureTypeAnnotationCommand();
          this._addAllFixtureTypeAnnotationsCommand = new _0x171685.AddAllFixtureTypeAnnotationsCommand();
          this._intelliCodeCommand = new _0x59c5cb.IntelliCodeCommand(_0x563fa1, this._telemetry);
          this._startProfilingCommand = new _0x16522e.StartProfilingCommand(_0x23b548);
          this._stopProfilingCommand = new _0x16522e.StopProfilingCommand(_0x23b548);
          this._implementAllAbstractClasses = new _0x374296.implementAllAbstractClassesCommand();
          this._generateDocstring = new _0x2851d2.GenerateDocstringCommand();
          this._fixupCopilotDocstringOutput = new _0x4ed498.FixupCopilotDocstringOutput();
          const _0x4a1b27 = new _0x5f48fb.LoggingCommandHandler(_0x23b548);
          this._startLoggingCommand = new _0x5f48fb.StartLoggingCommand(_0x4a1b27);
          this._stopLoggingCommand = new _0x5f48fb.StopLoggingCommand(_0x4a1b27);
          this._getAllDocstringRanges = new _0x6496.GetAllDocstringRangesCommand(_0x23b548);
        }
        static supportedCommands() {
          return ['pyright.createtypestub', 'pyright.organizeimports', 'pyright.dumpFileDebugInfo', _0xcd046.Commands.createTypeStub, _0xcd046.Commands.orderImports, _0xcd046.Commands.addMissingOptionalToParam, _0xcd046.Commands.removeUnusedImport, _0xcd046.Commands.addImport, _0xcd046.Commands.changeSpelling, _0xcd046.Commands.intelliCodeCompletionItemCommand, _0xcd046.Commands.intelliCodeLoadExtension, _0xcd046.Commands.extractMethod, _0xcd046.Commands.extractVariable, _0xcd046.Commands.completionAccepted, _0xcd046.Commands.executedClientCommand, _0xcd046.Commands.moveSymbol, _0xcd046.Commands.getSourceFiles, _0xcd046.Commands.getAutoImports, _0xcd046.Commands.convertImportFormat, _0xcd046.Commands.fixAll, _0xcd046.Commands.addAllFixtureTypeAnnotations, _0xcd046.Commands.addFixtureTypeAnnotation, _0xcd046.Commands.clearPersistedIndices, _0xcd046.Commands.startProfiling, _0xcd046.Commands.stopProfiling, _0xcd046.Commands.startLogging, _0xcd046.Commands.stopLogging, _0xcd046.Commands.implementAllAbstractClasses, _0xcd046.Commands.implementAllAbstractClassesWithCopilot, _0xcd046.Commands.getAllDocstringRanges, _0xcd046.Commands.generateDocstring, _0xcd046.Commands.fixupCopilotDocstringOutput];
        }
        isLongRunningCommand(_0x57575f) {
          switch (_0x57575f) {
            case _0xcd046.Commands.createTypeStub:
            case _0xcd046.Commands.fixAll:
            case _0xcd046.Commands.restartServer:
              return true;
            case _0xcd046.Commands.moveSymbol:
              return false;
          }
          return false;
        }
        isRefactoringCommand(_0x1bd5b4) {
          switch (_0x1bd5b4) {
            case _0xcd046.Commands.addFixtureTypeAnnotation:
            case _0xcd046.Commands.addAllFixtureTypeAnnotations:
            case _0xcd046.Commands.convertImportFormat:
            case _0xcd046.Commands.extractMethod:
            case _0xcd046.Commands.extractVariable:
            case _0xcd046.Commands.moveSymbol:
            case _0xcd046.Commands.implementAllAbstractClasses:
            case _0xcd046.Commands.implementAllAbstractClassesWithCopilot:
              return true;
          }
          return false;
        }
        executeCommand(_0x25c988, _0x583630, _0x311552) {
          const _0x5d6abb = this.getCommand(_0x583630.command);
          if (_0x5d6abb) {
            const _0x2f0ee4 = _0x5d6abb.execute(_0x25c988, _0x583630, _0x311552);
            if (_0x58bf85.isThenable(_0x2f0ee4)) {
              return _0x2f0ee4.then(_0x1c4a62 => this.stringifyUris(_0x1c4a62));
            }
            return this.stringifyUris(_0x2f0ee4);
          }
        }
        stringifyUris(_0x59e3d0) {
          if (_0x59e3d0 === undefined) {
            return _0x59e3d0;
          }
          const _0x11642c = (_0x4ba98f, _0x8f8618) => {
            if (_0x8f8618 && typeof _0x8f8618 === 'object' && _0x100dc6.Uri.is(_0x8f8618)) {
              return _0x8f8618.toString();
            }
            return _0x8f8618;
          };
          return JSON.parse(JSON.stringify(_0x59e3d0, _0x11642c));
        }
        getFileFromCommand(_0x3840ca) {
          const _0x1cee03 = this.getCommand(_0x3840ca.command);
          const _0x31231c = _0x1cee03 === null || _0x1cee03 === undefined ? undefined : _0x1cee03.getFile(_0x3840ca);
          if (!_0x31231c) {
            return undefined;
          }
          if (_0x58bf85.isString(_0x31231c)) {
            return _0x100dc6.Uri.parse(_0x31231c, this.ls.serviceProvider);
          }
          return _0x31231c;
        }
        getCommand(_0x5894a1) {
          switch (_0x5894a1) {
            case _0xcd046.Commands.removeUnusedImport:
            case _0xcd046.Commands.addImport:
              return this._pylanceQuickAction;
            case _0xcd046.Commands.extractMethod:
              return this._extractMethod;
            case _0xcd046.Commands.extractVariable:
              return this._extractVariable;
            case _0xcd046.Commands.completionAccepted:
              return this._completionAccepted;
            case _0xcd046.Commands.convertImportFormat:
              return this._convertImportFormat;
            case _0xcd046.Commands.moveSymbol:
              return this._moveSymbol;
            case _0xcd046.Commands.getSourceFiles:
              return this._getSourceFiles;
            case _0xcd046.Commands.getAutoImports:
              return this._getAutoImports;
            case _0xcd046.Commands.changeSpelling:
              return this._changeSpelling;
            case _0xcd046.Commands.fixAll:
              return this._fixAll;
            case _0xcd046.Commands.restartServer:
              return this._restartServer;
            case 'pyright.createtypestub':
            case _0xcd046.Commands.createTypeStub:
              return this._createTypeStub;
            case _0xcd046.Commands.dumpFileDebugInfo:
              return this._dumpFileDebugInfo;
            case _0xcd046.Commands.clearPersistedIndices:
              return this._clearPersistedIndices;
            case _0xcd046.Commands.addFixtureTypeAnnotation:
              return this._addFixtureTypeAnnotationCommand;
            case _0xcd046.Commands.addAllFixtureTypeAnnotations:
              return this._addAllFixtureTypeAnnotationsCommand;
            case _0xcd046.Commands.intelliCodeCompletionItemCommand:
            case _0xcd046.Commands.intelliCodeLoadExtension:
              return this._intelliCodeCommand;
            case _0xcd046.Commands.startProfiling:
              return this._startProfilingCommand;
            case _0xcd046.Commands.stopProfiling:
              return this._stopProfilingCommand;
            case _0xcd046.Commands.startLogging:
              return this._startLoggingCommand;
            case _0xcd046.Commands.stopLogging:
              return this._stopLoggingCommand;
            case _0xcd046.Commands.implementAllAbstractClasses:
              return this._implementAllAbstractClasses;
            case _0xcd046.Commands.getAllDocstringRanges:
              return this._getAllDocstringRanges;
            case _0xcd046.Commands.generateDocstring:
              return this._generateDocstring;
            case _0xcd046.Commands.fixupCopilotDocstringOutput:
              return this._fixupCopilotDocstringOutput;
          }
          return undefined;
        }
        sendUserInitiatedCommandTelemetry(_0x59a60a) {
          if (this._telemetry && _0x230814.has(_0x59a60a.command)) {
            const _0x1722d6 = new _0x15cf80.TelemetryEvent(_0x15cf80.TelemetryEventName.EXECUTE_COMMAND);
            if (_0x59a60a.command === _0xcd046.Commands.executedClientCommand) {
              const _0x5718af = _0x59a60a.arguments ? _0x59a60a.arguments[0] : undefined;
              _0x4faacf.assert(typeof _0x5718af === 'string');
              _0x4faacf.assert(Object.values(_0xcd046.ClientCommands).includes(_0x5718af));
              _0x1722d6.Properties.name = _0x5718af;
            } else {
              _0x1722d6.Properties.name = _0x59a60a.command;
            }
            this._telemetry.sendTelemetry(_0x1722d6);
          }
        }
      }
      class _0xf41738 extends _0x279754 {
        async execute(_0x87a4c2, _0x3df52e) {
          this.sendUserInitiatedCommandTelemetry(_0x87a4c2);
          const _0x56fad6 = this.ls;
          const _0x532214 = this.getFileFromCommand(_0x87a4c2) ?? _0x100dc6.Uri.empty();
          const _0x42cf87 = await _0x56fad6.getWorkspaceForFile(_0x532214);
          return this.executeCommand(_0x42cf87, _0x87a4c2, _0x3df52e);
        }
      }
      exports.AsyncCommandController = _0xf41738;
      class _0x2a39a9 extends _0x279754 {
        execute(_0x2c6cf0, _0x4699eb) {
          this.sendUserInitiatedCommandTelemetry(_0x2c6cf0);
          const _0x146f47 = this.getFileFromCommand(_0x2c6cf0) ?? _0x100dc6.Uri.empty();
          const _0x9c7bd7 = this.ls.getWorkspaceForFileSync(_0x146f47);
          return this.executeCommand(_0x9c7bd7, _0x2c6cf0, _0x4699eb);
        }
      }
      exports.SyncCommandController = _0x2a39a9;
    },
    27130: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ClientCommands = exports.Commands = undefined;
      exports.createCommandResult = _0x3251de;
      var _0x21d55c;
      (function (_0x4defd3) {
        _0x4defd3.createTypeStub = 'python.createTypeStub';
        _0x4defd3.orderImports = 'python.orderImports';
        _0x4defd3.addMissingOptionalToParam = 'python.addOptionalForParam';
        _0x4defd3.removeUnusedImport = 'python.removeUnusedImport';
        _0x4defd3.addImport = 'python.addImport';
        _0x4defd3.intelliCodeCompletionItemCommand = 'python.intellicode.completionItemSelected';
        _0x4defd3.intelliCodeLoadExtension = 'python.intellicode.loadLanguageServerExtension';
        _0x4defd3.changeSpelling = 'pylance.changeSpelling';
        _0x4defd3.extractMethod = 'pylance.extractMethod';
        _0x4defd3.extractVariable = 'pylance.extractVariable';
        _0x4defd3.dumpFileDebugInfo = 'pyright.dumpFileDebugInfo';
        _0x4defd3.completionAccepted = 'pylance.completionAccepted';
        _0x4defd3.executedClientCommand = 'pylance.executedClientCommand';
        _0x4defd3.convertImportFormat = 'pylance.convertImportFormat';
        _0x4defd3.moveSymbol = 'pylance.moveSymbol';
        _0x4defd3.getSourceFiles = 'pylance.getSourceFiles';
        _0x4defd3.getAutoImports = 'pylance.getAutoImports';
        _0x4defd3.fixAll = 'pylance.fixAll';
        _0x4defd3.addFixtureTypeAnnotation = 'pylance.pytest.addFixtureTypeAnnotation';
        _0x4defd3.addAllFixtureTypeAnnotations = 'pylance.pytest.addAllFixtureTypeAnnotations';
        _0x4defd3.restartServer = 'pyright.restartserver';
        _0x4defd3.clearPersistedIndices = 'pylance.indexing.clearPersistedIndices';
        _0x4defd3.startProfiling = 'pylance.profiling.start';
        _0x4defd3.stopProfiling = 'pylance.profiling.stop';
        _0x4defd3.startLogging = 'pylance.logging.start';
        _0x4defd3.stopLogging = 'pylance.logging.stop';
        _0x4defd3.implementAllAbstractClasses = 'pylance.implementAllAbstractClasses';
        _0x4defd3.implementAllAbstractClassesWithCopilot = 'pylance.implementAllAbstractClassesWithCopilot';
        _0x4defd3.getAllDocstringRanges = 'pylance.getAllDocstringRanges';
        _0x4defd3.generateDocstring = 'pylance.generateDocstring';
        _0x4defd3.fixupCopilotDocstringOutput = 'pylance.fixupCopilotDocstringOutput';
      })(_0x21d55c || (exports.Commands = _0x21d55c = {}));
      var _0x51100a;
      (function (_0x21dedc) {
        _0x21dedc.reportIssue = 'pylance.reportIssue';
        _0x21dedc.triggerParameterHints = 'pylance.triggerParameterHints';
        _0x21dedc.runCommands = 'pylance.runCommands';
        _0x21dedc.extractMethodWithRename = 'pylance.extractMethodWithRename';
        _0x21dedc.extractVariableWithRename = 'pylance.extractVariableWithRename';
        _0x21dedc.moveSymbolWithFileSelection = 'pylance.moveSymbolWithFileSelection';
        _0x21dedc.addToExtraPaths = 'pylance.addToExtraPaths';
        _0x21dedc.dumpTokens = 'pylance.dumpTokens';
        _0x21dedc.dumpNodes = 'pylance.dumpNodes';
        _0x21dedc.dumpTypes = 'pylance.dumpTypes';
        _0x21dedc.dumpCachedTypes = 'pylance.dumpCachedTypes';
        _0x21dedc.setAutoImportCompletions = 'pylance.setAutoImportCompletions';
        _0x21dedc.dumpCodeFlowGraph = 'pylance.dumpCodeFlowGraph';
        _0x21dedc.pythonSetInterpeter = 'python.setInterpreter';
        _0x21dedc.notebookSelectKernel = '_notebook.selectKernel';
        _0x21dedc.openUri = 'pylance.openUri';
        _0x21dedc.searchImports = 'pylance.searchImports';
        _0x21dedc.gotoOutputChannel = 'pylance.gotoOutputChannel';
        _0x21dedc.openConfig = 'pylance.openConfig';
        _0x21dedc.startEditorChat = 'vscode.editorChat.start';
        _0x21dedc.showTypeCheckingPicker = 'pylance.showTypeCheckingPicker';
        _0x21dedc.foldDocstrings = 'pylance.foldDocstrings';
        _0x21dedc.unfoldDocstrings = 'pylance.unfoldDocstrings';
      })(_0x51100a || (exports.ClientCommands = _0x51100a = {}));
      function _0x3251de(_0x340fbb, _0x1c1a2d, _0x45a224) {
        if (_0x1c1a2d) {
          return _0x45a224;
        }
        return {
          label: _0x340fbb,
          edits: _0x45a224
        };
      }
    },
    84754: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CompletionAcceptedCommand = exports.indexValueAcceptedCommand = exports.autoImportAcceptedCommand = exports.normalMemberAccessCompletionAcceptedCommand = exports.normalKeywordCompletionAcceptedCommand = exports.normalCompletionAcceptedCommand = undefined;
      const _0x2d8944 = require(56412);
      const _0x474ee7 = require(27130);
      const _0x4ea170 = require(69482);
      exports.normalCompletionAcceptedCommand = {
        title: '',
        command: _0x474ee7.Commands.completionAccepted,
        arguments: []
      };
      exports.normalKeywordCompletionAcceptedCommand = {
        title: '',
        command: _0x474ee7.Commands.completionAccepted,
        arguments: [_0x2d8944.toLSPAny({
          keyword: true
        })]
      };
      exports.normalMemberAccessCompletionAcceptedCommand = {
        title: '',
        command: _0x474ee7.Commands.completionAccepted,
        arguments: [_0x2d8944.toLSPAny({
          memberAccess: true
        })]
      };
      const _0x497466 = {
        autoImport: true
      };
      exports.autoImportAcceptedCommand = {
        title: '',
        command: _0x474ee7.Commands.completionAccepted,
        arguments: [_0x2d8944.toLSPAny(_0x497466)]
      };
      const _0x1a1b37 = {
        indexValue: true
      };
      exports.indexValueAcceptedCommand = {
        title: '',
        command: _0x474ee7.Commands.completionAccepted,
        arguments: [_0x2d8944.toLSPAny(_0x1a1b37)]
      };
      class _0x3b5655 {
        constructor(_0x3742fc) {
          this._telemetry = _0x3742fc;
        }
        execute(_0x45ecac, _0x940992, _0x36e3fa) {
          if (!this._telemetry) {
            return;
          }
          const _0x371a5b = _0x2d8944.fromLSPAny(_0x940992.arguments?.[0]);
          const _0xa6ad19 = new _0x4ea170.TelemetryEvent(_0x4ea170.TelemetryEventName.COMPLETION_ACCEPTED);
          if (_0x371a5b?.autoImport) {
            _0xa6ad19.Properties.autoImport = `${_0x371a5b.autoImport}`;
          }
          if (_0x371a5b?.indexValue) {
            _0xa6ad19.Properties.indexValue = `${_0x371a5b.indexValue}`;
          }
          if (_0x371a5b?.memberAccess) {
            _0xa6ad19.Properties.memberAccess = `${_0x371a5b.memberAccess}`;
          }
          if (_0x371a5b?.keyword) {
            _0xa6ad19.Properties.keyword = `${_0x371a5b.keyword}`;
          }
          this._telemetry.sendTelemetry(_0xa6ad19);
        }
        getFile(_0x93f86e) {
          return undefined;
        }
      }
      exports.CompletionAcceptedCommand = _0x3b5655;
    },
    99482: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ConvertImportFormatCommand = undefined;
      exports.getImportPathInfo = _0x546cb1;
      exports.getAbsoluteModuleName = _0x5ac23b;
      const _0x1b2c6b = require(26687);
      const _0x40899f = require(75130);
      const _0x175c0d = require(47610);
      const _0x39735a = require(41557);
      const _0x16ec99 = require(91426);
      const _0x1e61cf = require(56814);
      const _0xc762ac = require(88754);
      const _0x5c2fce = require(27113);
      const _0x595ba7 = require(74382);
      const _0x594aeb = require(27130);
      function _0x546cb1(_0x3c40af, _0x3dbe54, _0x40e9f6, _0x1ad18c) {
        if (!_0x3dbe54) {
          return;
        }
        const _0x36f64b = _0xc762ac.Range.is(_0x1ad18c) ? _0x1e61cf.convertRangeToTextRange(_0x1ad18c, _0x40e9f6.tokenizerOutput.lines) : _0x1ad18c;
        if (!_0x36f64b) {
          return;
        }
        const _0x5e8116 = _0x39735a.findNodeByOffset(_0x40e9f6.parserOutput.parseTree, _0x36f64b.start);
        const _0x356a06 = _0x39735a.getFirstAncestorOrSelfOfKind(_0x5e8116, 25);
        if (!_0x356a06 || !_0xc762ac.TextRange.overlapsRange(_0x356a06.d.module, _0x36f64b)) {
          return;
        }
        const _0x172543 = _0x1b2c6b.getImportInfo(_0x356a06.d.module);
        const _0x10fbc1 = _0x1b2c6b.getFileInfo(_0x40e9f6.parserOutput.parseTree);
        const _0x3b4d6a = _0x175c0d.getResolvedFilePath(_0x172543);
        if (!_0x3b4d6a || !_0x1591ff(_0x3c40af, _0x3dbe54, _0x10fbc1.fileUri, _0x3b4d6a)) {
          return;
        }
        return {
          targetPath: _0x3b4d6a,
          importFrom: _0x356a06
        };
      }
      function _0x5ac23b(_0x229f95, _0x5acbc9, _0x10865d) {
        const _0x280e1b = _0x229f95.importResolver;
        const _0xabd4e5 = _0x229f95.configOptions.findExecEnvironment(_0x5acbc9);
        const _0xe2c453 = _0x280e1b.getModuleNameForImport(_0x10865d, _0xabd4e5);
        if (!_0xe2c453.moduleName) {
          return;
        }
        const _0x5d1cb6 = _0x280e1b.resolveImport(_0x5acbc9, _0xabd4e5, _0x40899f.createImportedModuleDescriptor(_0xe2c453.moduleName));
        const _0x21541d = _0x175c0d.getResolvedFilePath(_0x5d1cb6);
        if (_0x21541d !== _0x10865d) {
          return;
        }
        return _0xe2c453.moduleName;
      }
      class _0x74729d {
        execute(_0x4a9411, _0x3fbc85, _0x1a2a4f) {
          _0x16ec99.throwIfCancellationRequested(_0x1a2a4f);
          if (!_0x4a9411.rootUri || _0x3fbc85.command !== _0x594aeb.Commands.convertImportFormat || _0x3fbc85.arguments?.length !== 2 && _0x3fbc85.arguments?.length !== 3) {
            return;
          }
          const _0xaedea6 = _0x5c2fce.Uri.parse(_0x3fbc85.arguments[0], _0x4a9411.service.serviceProvider);
          const _0x26cd8f = _0x3fbc85.arguments[1];
          const _0x3d451a = _0x3fbc85.arguments.length === 3 ? _0x3fbc85.arguments[2] : undefined;
          const _0x5aee01 = _0x4a9411.service.run(_0x1ce4e4 => {
            return this.convertImportFormat(_0x1ce4e4, _0x4a9411.rootUri, _0xaedea6, _0x26cd8f, _0x3d451a);
          }, _0x1a2a4f);
          return _0x594aeb.createCommandResult('Command: Convert all import format', _0x3d451a, _0x5aee01);
        }
        getFile(_0x2c3063) {
          if (_0x2c3063.arguments) {
            return _0x2c3063.arguments[0];
          } else {
            return undefined;
          }
        }
        convertImportFormat(_0x4fc650, _0x8683fb, _0x4173e9, _0x32d637, _0x39661e) {
          const _0x4141e8 = _0x4fc650.getParseResults(_0x4173e9);
          if (!_0x4141e8) {
            return undefined;
          }
          if (_0x39661e) {
            const _0x38145a = _0x546cb1(_0x4fc650, _0x8683fb, _0x4141e8, _0x39661e);
            if (!_0x38145a) {
              return undefined;
            }
            const _0x535c57 = this._createFileEditAction(_0x4fc650, _0x4173e9, _0x4141e8, _0x38145a, _0x32d637);
            if (!_0x535c57) {
              return undefined;
            }
            return _0x595ba7.convertToWorkspaceEdit(_0x4fc650.fileSystem, [_0x535c57]);
          }
          const _0xacd227 = {
            changes: {}
          };
          const _0x4c7ebe = _0x175c0d.getTopLevelImports(_0x4141e8.parserOutput.parseTree).orderedImports.filter(_0x267543 => _0x267543.node.nodeType === 25).map(_0x23ee77 => _0x23ee77.node);
          for (const _0x5e9dc9 of _0x4c7ebe) {
            if (_0x32d637 === 'relative' && _0x5e9dc9.d.module.d.leadingDots > 0 || _0x32d637 === 'absolute' && _0x5e9dc9.d.module.d.leadingDots === 0) {
              continue;
            }
            const _0x1bf2f9 = _0x1b2c6b.getImportInfo(_0x5e9dc9.d.module);
            const _0x35a55a = _0x175c0d.getResolvedFilePath(_0x1bf2f9);
            if (!_0x35a55a || !_0x1591ff(_0x4fc650, _0x8683fb, _0x4173e9, _0x35a55a)) {
              continue;
            }
            const _0x156daf = this._createFileEditAction(_0x4fc650, _0x4173e9, _0x4141e8, {
              importFrom: _0x5e9dc9,
              targetPath: _0x35a55a
            }, _0x32d637);
            if (!_0x156daf) {
              return;
            }
            _0x595ba7.appendToWorkspaceEdit(_0x4fc650.fileSystem, [_0x156daf], _0xacd227);
          }
          return _0xacd227;
        }
        _createFileEditAction(_0x1e2117, _0x5786d2, _0x19629b, _0x905870, _0x470627) {
          const _0x598399 = _0x1e61cf.convertTextRangeToRange(_0x905870.importFrom.d.module, _0x19629b.tokenizerOutput.lines);
          if (_0x470627 === 'relative') {
            const _0x26e896 = _0x175c0d.getRelativeModuleName(_0x1e2117.fileSystem, _0x5786d2, _0x905870.targetPath, _0x1e2117.configOptions);
            if (_0x26e896) {
              return {
                fileUri: _0x5786d2,
                range: _0x598399,
                replacementText: _0x26e896
              };
            }
          }
          const _0x5b79d3 = _0x5ac23b(_0x1e2117, _0x5786d2, _0x905870.targetPath);
          if (!_0x5b79d3) {
            return;
          }
          return {
            fileUri: _0x5786d2,
            range: _0x598399,
            replacementText: _0x5b79d3
          };
        }
      }
      exports.ConvertImportFormatCommand = _0x74729d;
      function _0x1591ff(_0x3a9c99, _0x1a1215, _0x3c35c4, _0x43d702) {
        return _0x43d702.startsWith(_0x1a1215) && _0x3a9c99.getSourceFileInfo(_0x43d702)?.isTracked && !_0x3a9c99.configOptions.findExecEnvironment(_0x3c35c4).extraPaths.some(_0x3113cc => _0x43d702.startsWith(_0x3113cc));
      }
    },
    21628: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CreateTypeStubCommand = undefined;
      const _0x52572e = require(76737);
      class _0x169457 {
        constructor(_0x4a4c02) {
          this._ls = _0x4a4c02;
        }
        execute(_0x2e9230, _0x7885a, _0x4398a4) {
          if (!_0x7885a.arguments || _0x7885a.arguments.length < 2) {
            return undefined;
          }
          const _0x39857b = _0x7885a.arguments[1];
          return new _0x52572e.TypeStubCreator(this._ls).create(_0x2e9230, _0x39857b, _0x4398a4);
        }
        getFile(_0x12b684) {
          if (_0x12b684.arguments && _0x12b684.arguments.length >= 2) {
            if (_0x12b684.arguments[2]) {
              return _0x12b684.arguments[2];
            } else {
              return _0x12b684.arguments[0];
            }
          }
          return undefined;
        }
      }
      exports.CreateTypeStubCommand = _0x169457;
    },
    16904: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DumpFileDebugInfoCommand = undefined;
      const _0x195c6c = require(89577);
      const _0x38d9e6 = require(91426);
      const _0x1355ec = require(27113);
      class _0x5d665f {
        constructor(_0x26b967) {
          this._ls = _0x26b967;
        }
        execute(_0x3f4255, _0x17f72a, _0x33e490) {
          _0x38d9e6.throwIfCancellationRequested(_0x33e490);
          if (!_0x17f72a.arguments || _0x17f72a.arguments.length < 2) {
            return [];
          }
          const _0x5504cf = _0x1355ec.Uri.parse(_0x17f72a.arguments[0], this._ls.serviceProvider);
          return new _0x195c6c.DumpFileDebugInfo().dump(_0x3f4255, _0x5504cf, _0x17f72a.arguments, _0x33e490);
        }
        getFile(_0x551201) {
          if (!_0x551201.arguments || _0x551201.arguments.length < 1) {
            return undefined;
          }
          return _0x551201.arguments[0];
        }
      }
      exports.DumpFileDebugInfoCommand = _0x5d665f;
    },
    79765: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ExtractVariableCommand = exports.ExtractMethodCommand = undefined;
      const _0x7933f5 = require(91426);
      const _0xe84165 = require(27113);
      const _0x354b09 = require(74382);
      const _0x3d0baf = require(76966);
      class _0x226c9d {
        constructor(_0x288d06) {
          this._hasVSCodeExtension = _0x288d06;
        }
        execute(_0x22a6bd, _0x26f8ea, _0x53be4a) {
          _0x7933f5.throwIfCancellationRequested(_0x53be4a);
          if (_0x26f8ea.arguments?.length !== 2) {
            return;
          }
          const _0x18baef = _0xe84165.Uri.parse(_0x26f8ea.arguments[0], _0x22a6bd.service.serviceProvider);
          const _0x144d46 = _0x26f8ea.arguments[1];
          return _0x22a6bd.service.run(_0x10df8f => {
            const _0x4ed034 = _0x3d0baf.ExtractMethodProvider.extractMethod(_0x10df8f, _0x18baef, _0x144d46, _0x53be4a);
            if (!_0x4ed034) {
              return;
            }
            if (!this._hasVSCodeExtension) {
              return _0x354b09.convertToWorkspaceEdit(_0x22a6bd.service.fs, _0x4ed034.actions);
            }
            const _0x7690ea = _0x5211da(_0x22a6bd.service.fs, _0x4ed034);
            return _0x7690ea;
          }, _0x53be4a);
        }
        getFile(_0x302d22) {
          if (_0x302d22.arguments?.length !== 2) {
            return undefined;
          }
          return _0x302d22.arguments[0];
        }
      }
      exports.ExtractMethodCommand = _0x226c9d;
      class _0x1dadf9 {
        constructor(_0x306a75) {
          this._hasVSCodeExtension = _0x306a75;
        }
        execute(_0x3da16d, _0x5d2ccf, _0xfdeac4) {
          _0x7933f5.throwIfCancellationRequested(_0xfdeac4);
          if (_0x5d2ccf.arguments?.length !== 2) {
            return;
          }
          const _0xae6b4 = _0xe84165.Uri.parse(_0x5d2ccf.arguments[0], _0x3da16d.service.serviceProvider);
          const _0x534c6a = _0x5d2ccf.arguments[1];
          const _0x48dadf = _0x3da16d.service.getParseResults(_0xae6b4);
          if (!_0x48dadf) {
            return;
          }
          const _0x5bd355 = _0x3d0baf.ExtractMethodProvider.extractVariable(_0xae6b4, _0x48dadf, _0x534c6a, _0xfdeac4);
          if (!_0x5bd355) {
            return;
          }
          if (!this._hasVSCodeExtension) {
            return _0x354b09.convertToWorkspaceEdit(_0x3da16d.service.fs, _0x5bd355.actions);
          }
          const _0xfaa75c = _0x5211da(_0x3da16d.service.fs, _0x5bd355);
          return _0xfaa75c;
        }
        getFile(_0x37a799) {
          if (_0x37a799.arguments?.length !== 2) {
            return undefined;
          }
          return _0x37a799.arguments[0];
        }
      }
      exports.ExtractVariableCommand = _0x1dadf9;
      function _0x5211da(_0xfd12a8, _0x3bd8ef) {
        const _0x127fec = _0x354b09.convertToWorkspaceEdit(_0xfd12a8, _0x3bd8ef.actions);
        const _0x365347 = {
          newSymbolName: _0x3bd8ef.newSymbolName
        };
        const _0x22ca64 = {
          label: 'Extract Method',
          data: _0x365347,
          edits: _0x127fec
        };
        return _0x22ca64;
      }
    },
    41097: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FixAllCommand = undefined;
      const _0x1d83df = require(91426);
      const _0x5c0b8a = require(27113);
      const _0x176652 = require(74382);
      const _0x584ebd = require(45210);
      const _0x5c206e = require(69482);
      const _0x1bb348 = require(27130);
      const _0x3a23a6 = require(99482);
      const _0x1e6c77 = require(33474);
      class _0x17fb55 {
        constructor(_0x5a4e8d) {
          this._telemetry = _0x5a4e8d;
        }
        execute(_0x2ece2c, _0x3a845d, _0x2ad429) {
          _0x1d83df.throwIfCancellationRequested(_0x2ad429);
          if (!_0x2ece2c.rootUri || !_0x2ece2c.fixAll || _0x3a845d.command !== _0x1bb348.Commands.fixAll || _0x3a845d.arguments?.length !== 1) {
            return;
          }
          const _0x35ad57 = _0x5c0b8a.Uri.parse(_0x3a845d.arguments[0], _0x2ece2c.service.serviceProvider);
          return _0x5c206e.trackPerf(this._telemetry, _0x5c206e.TelemetryEventName.FIX_ALL, () => {
            const _0x3dcba2 = _0x2ece2c.service.runEditMode(_0x280633 => {
              const _0x4c56ca = new Map();
              if (_0x2ece2c.fixAll && _0x2ece2c.fixAll.some(_0x48f144 => _0x48f144 === _0x584ebd.PylanceCodeActionKind.Source.UnusedImports)) {
                const _0x4ad284 = new _0x1e6c77.RemoveUnusedImportCommand();
                const _0x25d320 = _0x4ad284.removeUnusedImports(_0x280633, _0x35ad57, undefined, _0x2ad429);
                if (_0x25d320) {
                  _0x176652.applyWorkspaceEdit(_0x280633, _0x25d320, _0x4c56ca);
                }
              }
              if (_0x2ece2c.fixAll && _0x2ece2c.fixAll.some(_0xac4e3d => _0xac4e3d === _0x584ebd.PylanceCodeActionKind.Source.ConvertImportFormat) && !!_0x2ece2c.importFormat) {
                const _0x13d0f8 = new _0x3a23a6.ConvertImportFormatCommand();
                const _0x3eedfd = _0x13d0f8.convertImportFormat(_0x280633, _0x2ece2c.rootUri, _0x35ad57, _0x2ece2c.importFormat, undefined);
                if (_0x3eedfd) {
                  _0x176652.applyWorkspaceEdit(_0x280633, _0x3eedfd, _0x4c56ca);
                }
              }
            }, _0x2ad429);
            const _0x214b06 = _0x176652.convertToWorkspaceEdit(_0x2ece2c.service.fs, _0x3dcba2);
            return _0x1bb348.createCommandResult('Command: \'Fix All\'', undefined, _0x214b06);
          }, 0);
        }
        getFile(_0x233c97) {
          if (_0x233c97.command !== _0x1bb348.Commands.fixAll || _0x233c97.arguments?.length !== 1) {
            return undefined;
          }
          return _0x233c97.arguments[0];
        }
      }
      exports.FixAllCommand = _0x17fb55;
    },
    18106: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FixupCopilotDocstringOutput = undefined;
      const _0x4024ae = require(41557);
      const _0x1a147d = require(91426);
      const _0x4282a7 = require(93779);
      const _0x49fc58 = require(27113);
      const _0x592662 = require(74382);
      class _0x2f2bc7 {
        execute(_0xc3fd83, _0x3915ce, _0x40ed7e) {
          _0x1a147d.throwIfCancellationRequested(_0x40ed7e);
          if (!_0x3915ce.arguments || _0x3915ce.arguments.length !== 2) {
            return [];
          }
          const _0xd662cb = _0x3915ce.arguments[1];
          const _0x231c9b = _0x49fc58.Uri.parse(_0x3915ce.arguments[0], _0xc3fd83.service.serviceProvider);
          const _0x43b4a4 = _0xc3fd83.service.run(_0x103fa6 => {
            const _0x163611 = _0x103fa6.getParseResults(_0x231c9b);
            if (!_0x163611) {
              return;
            }
            return this._getTripleQuotesRange(_0x103fa6, _0x163611, _0xd662cb, _0x40ed7e);
          }, _0x40ed7e);
          if (_0x43b4a4) {
            return _0x43b4a4;
          }
        }
        getFile(_0x30050c) {
          if (_0x30050c.arguments) {
            return _0x30050c.arguments[0];
          } else {
            return undefined;
          }
        }
        _getTripleQuotesRange(_0x4c69f3, _0x158de9, _0x15c910, _0x580572) {
          const _0x95071 = _0x4024ae.findNodeByPosition(_0x158de9.parserOutput.parseTree, _0x15c910.start, _0x158de9.tokenizerOutput.lines);
          if (!_0x95071 || _0x95071.nodeType !== 49) {
            return undefined;
          }
          const _0x4e4cc3 = new _0x4282a7.TextEditTracker();
          _0x4e4cc3.removeNodes({
            node: _0x95071,
            parseFileResults: _0x158de9
          });
          return _0x592662.convertToWorkspaceEdit(_0x4c69f3.fileSystem, _0x4e4cc3.getEdits(_0x580572));
        }
      }
      exports.FixupCopilotDocstringOutput = _0x2f2bc7;
    },
    15091: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GenerateDocstringCommand = undefined;
      const _0x5e0053 = require(91426);
      const _0x26cd4b = require(27113);
      const _0x188ba5 = require(74382);
      const _0x57d943 = require(59133);
      const _0x3415f2 = require(4449);
      class _0x1a5f1b {
        execute(_0x4f484a, _0x225f86, _0x24dbcf) {
          _0x5e0053.throwIfCancellationRequested(_0x24dbcf);
          if (!_0x225f86.arguments || _0x225f86.arguments.length !== 2) {
            return [];
          }
          const _0x3ea955 = _0x26cd4b.Uri.parse(_0x225f86.arguments[0], _0x4f484a.service.serviceProvider);
          const _0x32a064 = _0x225f86.arguments[1];
          const _0x47f17d = _0x4f484a.service.run(_0x221ef4 => {
            const _0x3a3fac = _0x221ef4.getParseResults(_0x3ea955);
            if (!_0x3a3fac) {
              return;
            }
            return this._getDocstringTemplatesinCodeAction(_0x3a3fac, _0x32a064, _0x221ef4.evaluator, _0x3ea955, new _0x57d943.IndentationUtils(_0x4f484a.editorIndentConfig ?? _0x57d943.DefaultEditorIndentConfig));
          }, _0x24dbcf);
          if (!_0x47f17d) {
            return;
          }
          return _0x188ba5.convertToWorkspaceEdit(_0x4f484a.service.fs, _0x47f17d);
        }
        getFile(_0x170e48) {
          if (_0x170e48.arguments) {
            return _0x170e48.arguments[0];
          } else {
            return undefined;
          }
        }
        _getDocstringTemplatesinCodeAction(_0x333f7e, _0x1732c2, _0x38ed29, _0x4bd53c, _0x30238f) {
          const _0x281415 = _0x3415f2.getDocstringTemplatesinString(_0x333f7e, _0x1732c2.start, _0x38ed29, _0x30238f);
          if (!_0x281415) {
            return undefined;
          }
          const _0x304554 = [];
          _0x304554.push({
            fileUri: _0x4bd53c,
            range: _0x1732c2,
            replacementText: _0x281415
          });
          return _0x304554;
        }
      }
      exports.GenerateDocstringCommand = _0x1a5f1b;
    },
    94473: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GetAllDocstringRangesCommand = undefined;
      const _0x47c692 = require(91426);
      const _0x18ac8b = require(71745);
      const _0x37c4ce = require(30048);
      const _0x52650c = require(84014);
      const _0x4fa0bc = require(8398);
      class _0x38c825 {
        constructor(_0x3e22c4) {
          this._ls = _0x3e22c4;
          const _0x27dbfa = this._ls.serviceProvider;
          this._uriMapper = _0x27dbfa.tryGet(_0x37c4ce.PylanceServiceKeys.uriMapper);
          this._caseSensitivityDetector = _0x27dbfa.tryGet(_0x18ac8b.ServiceKeys.caseSensitivityDetector);
        }
        execute(_0x22ce89, _0x3ec662, _0x464249) {
          _0x47c692.throwIfCancellationRequested(_0x464249);
          if (_0x3ec662.arguments?.length !== 1) {
            return [];
          }
          const _0x50c94f = this.getFile(_0x3ec662);
          if (!_0x50c94f) {
            return [];
          }
          const _0x9ab30b = _0x22ce89.service.getParseResults(_0x50c94f);
          if (!_0x9ab30b) {
            return [];
          }
          const _0x3a533e = _0x52650c.FoldingRangeProvider.getFoldingRanges(_0x9ab30b, _0x464249);
          if (!_0x3a533e) {
            return [];
          }
          return _0x3a533e.filter(_0x35d76f => _0x35d76f.kind === _0x52650c.PylanceFoldingRangeKind.PylanceDocstring).map(_0xd7cad => _0xd7cad.startLine);
        }
        getFile(_0x4bd0fe) {
          if (_0x4bd0fe.arguments?.length !== 1) {
            return undefined;
          }
          if (this._uriMapper === undefined) {
            return undefined;
          }
          if (this._caseSensitivityDetector === undefined) {
            return undefined;
          }
          return _0x4fa0bc.convertLspUriStringToUri(_0x4bd0fe.arguments[0], this._caseSensitivityDetector, this._uriMapper);
        }
      }
      exports.GetAllDocstringRangesCommand = _0x38c825;
    },
    32662: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GetAutoImportsCommand = undefined;
      const _0x1da64c = require(41557);
      const _0x2469be = require(91426);
      const _0x1b846f = require(56814);
      const _0x33f74d = require(27113);
      const _0x52fb93 = require(13259);
      const _0x11dc83 = require(86615);
      const _0x1da0b8 = require(74899);
      const _0x1a32ee = require(27130);
      class _0x47ad8d {
        execute(_0x4d3932, _0x5cdd56, _0x58425d) {
          _0x2469be.throwIfCancellationRequested(_0x58425d);
          if (_0x5cdd56.command !== _0x1a32ee.Commands.getAutoImports || _0x5cdd56.arguments?.length !== 3) {
            return;
          }
          const _0x100815 = _0x5cdd56.arguments[0];
          const _0x1ee67f = _0x5cdd56.arguments[1];
          const _0x206df4 = _0x5cdd56.arguments[2];
          return _0x4d3932.service.run(_0x10e81a => {
            const _0x1dbe06 = 0;
            const _0x1591f6 = _0x33f74d.Uri.parse(_0x100815, _0x10e81a.serviceProvider);
            const _0x36dce9 = _0x10e81a.getParseResults(_0x1591f6);
            if (!_0x36dce9) {
              return [];
            }
            const _0x3a4c04 = _0x1b846f.convertRangeToTextRange(_0x1ee67f, _0x36dce9.tokenizerOutput.lines);
            if (!_0x3a4c04) {
              return [];
            }
            const _0x9e139a = _0x1da64c.findNodeByOffset(_0x36dce9.parserOutput.parseTree, _0x3a4c04.start);
            if (!_0x9e139a) {
              return [];
            }
            const _0x17dd26 = {
              lazyEdit: true,
              importFormat: _0x4d3932.importFormat,
              indices: _0x1da0b8.SymbolIndexer.getIndices(_0x4d3932),
              includeAliasesFromUserFiles: _0x4d3932.indexOptions?.includeAliasesFromUserFiles,
              allowDuplicatedAliasesFromUserFiles: true
            };
            const _0x347fe8 = _0x11dc83.createAutoImporter(_0x10e81a, _0x1591f6, _0x1ee67f.start, _0x17dd26, _0x58425d);
            if (!_0x347fe8) {
              return [];
            }
            const _0x8d5aa6 = _0x11dc83.getMatchingAutoImports(_0x347fe8, _0x9e139a, _0x206df4, _0x1dbe06, _0x52fb93.wellKnownAbbreviationMap, _0x58425d);
            return _0x8d5aa6.map(_0x9025fd => ({
              name: _0x9025fd.name,
              originalName: _0x9025fd.originalName,
              alias: _0x9025fd.alias,
              source: _0x9025fd.source
            }));
          }, _0x58425d);
        }
        getFile(_0x5c38c7) {
          if (_0x5c38c7.command !== _0x1a32ee.Commands.getAutoImports || _0x5c38c7.arguments?.length !== 3) {
            return undefined;
          }
          return _0x5c38c7.arguments[0];
        }
      }
      exports.GetAutoImportsCommand = _0x47ad8d;
    },
    13355: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GetSourceFilesCommand = undefined;
      const _0x14f2bc = require(91426);
      const _0x39e985 = require(27130);
      class _0x200dd4 {
        execute(_0x378b5f, _0x55ddd2, _0x5b4e50) {
          _0x14f2bc.throwIfCancellationRequested(_0x5b4e50);
          if (_0x55ddd2.command !== _0x39e985.Commands.getSourceFiles || _0x55ddd2.arguments?.length !== 2) {
            return;
          }
          const _0x1918ae = _0x55ddd2.arguments[1];
          _0x5b4e50 = new _0x14f2bc.FileBasedToken(_0x1918ae, _0x378b5f.service.fs);
          const _0x382690 = _0x378b5f.service.getConfigOptions();
          const _0xb39d4 = [];
          for (const _0x21a9ee of _0x378b5f.service.getUserFiles()) {
            const _0x4f8538 = _0x21a9ee.getDirectory();
            _0xb39d4.push({
              name: _0x21a9ee.fileName,
              folderAfterRoot: _0x382690.projectRoot.getRelativePathComponents(_0x4f8538).join('/'),
              uri: _0x21a9ee.toString()
            });
          }
          return _0xb39d4;
        }
        getFile(_0x5d9cf5) {
          if (_0x5d9cf5.command !== _0x39e985.Commands.getSourceFiles || _0x5d9cf5.arguments?.length !== 2) {
            return undefined;
          }
          return _0x5d9cf5.arguments[0];
        }
      }
      exports.GetSourceFilesCommand = _0x200dd4;
    },
    54991: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.implementAllAbstractClassesCommand = undefined;
      const _0xd01e52 = require(91426);
      const _0x362392 = require(27113);
      const _0x4ef95d = require(74382);
      const _0xdb1f9d = require(58093);
      class _0x35a89c {
        execute(_0x512d8c, _0x187bdd, _0x510061) {
          _0xd01e52.throwIfCancellationRequested(_0x510061);
          if (_0x187bdd.arguments?.length !== 2) {
            return;
          }
          const _0x4a97c4 = _0x362392.Uri.parse(_0x187bdd.arguments[0], _0x512d8c.service.serviceProvider);
          const _0x198ad9 = _0x187bdd.arguments[1];
          return _0x512d8c.service.run(_0x9a3e7a => {
            const _0x5c80c5 = new _0xdb1f9d.ImplementAbstractClassProvider(_0x9a3e7a, _0x4a97c4, _0x198ad9, _0x510061, {
              editorIndentConfig: _0x512d8c.editorIndentConfig,
              dontAddTypeAnnotation: !_0x512d8c.generateWithTypeAnnotation
            }).implementAllAbstractClasses();
            if (!_0x5c80c5) {
              return;
            }
            return _0x4ef95d.convertToWorkspaceEdit(_0x512d8c.service.fs, _0x5c80c5);
          }, _0x510061);
        }
        getFile(_0x140359) {
          if (_0x140359.arguments?.length !== 2) {
            return undefined;
          }
          return _0x140359.arguments[0];
        }
      }
      exports.implementAllAbstractClassesCommand = _0x35a89c;
    },
    5174: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.StopLoggingCommand = exports.StartLoggingCommand = exports.LoggingCommandHandler = undefined;
      const _0x3552da = require(74118);
      const _0x10da3e = require(91426);
      const _0x7ca73f = require(25075);
      const _0x5bf8f5 = require(71745);
      const _0x5e283e = require(99504);
      const _0x3f4c2b = require(30048);
      const _0xf64a37 = require(15986);
      class _0x48ebce {
        constructor(_0x13205f) {
          this._ls = _0x13205f;
          this._loggingId = 0;
        }
        get outputFileUri() {
          var _0x3513fe;
          if ((_0x3513fe = this._logger) === null || _0x3513fe === undefined) {
            return undefined;
          } else {
            return _0x3513fe.outputFileUri;
          }
        }
        async execute(_0x2cbe83, _0xc00945, _0x37b427) {
          _0x10da3e.throwIfCancellationRequested(_0x37b427);
          const _0x5a3a82 = _0x2cbe83.service.serviceProvider;
          const _0x26100a = _0x5a3a82.tryGet(_0x5bf8f5.ServiceKeys.console);
          if (!_0x26100a || !_0x7ca73f.Chainable.is(_0x26100a)) {
            return;
          }
          if (_0xc00945 === 'start') {
            await this._startLogging(_0x5a3a82, _0x26100a);
            return;
          }
          if (_0xc00945 === 'stop') {
            await this._stopLogging(_0x5a3a82, _0x26100a);
            return;
          }
        }
        async _startLogging(_0x15a0ba, _0x56492b) {
          var _0x5bc191;
          if (this._logger) {
            await this._stopLogging(_0x15a0ba, _0x56492b);
          }
          this._logger = new _0x508c5a(this._loggingId++, _0x15a0ba);
          _0x56492b.addChain(this._logger);
          this._ls.restart();
          for (const _0x261243 of await this._ls.getWorkspaces()) {
            await this._ls.getSettings(_0x261243);
            if ((_0x5bc191 = _0x15a0ba.tryGet(_0x3f4c2b.PylanceServiceKeys.packageDiscoverer)) === null || _0x5bc191 === undefined) {
              undefined;
            } else {
              _0x5bc191.logInstalledModuleInfo(_0x261243.service.backgroundAnalysisProgram.program);
            }
          }
        }
        async _stopLogging(_0x459ce1, _0x477298) {
          if (!this._logger) {
            return;
          }
          const _0x578331 = this._logger;
          _0x477298.removeChain(_0x578331);
          this._logger = undefined;
          _0x578331.done();
          const _0x840918 = _0x459ce1.tryGet(_0x5bf8f5.ServiceKeys.windowService);
          if (!_0x578331.loggingFolderUri || !_0x578331.outputFileUri || !_0x840918) {
            return;
          }
          const _0x5bdae9 = _0x3552da.URI.file(_0x578331.outputFileUri.getFilePath());
          const _0x179f0f = _0xf64a37.Localizer.Commands.LoggingCommand.loggingDataSaved().format({
            filePath: _0x578331.loggingFolderUri.getFilePath(),
            uri: `command:revealFileInOS?${encodeURIComponent(JSON.stringify(_0x5bdae9.toJSON()))}`
          });
          const _0x24c37d = _0x840918.createGoToOutputAction();
          await _0x840918.showInformationMessage(_0x179f0f, _0x24c37d);
        }
      }
      exports.LoggingCommandHandler = _0x48ebce;
      class _0x1e3174 {
        constructor(_0x242da7) {
          this._handler = _0x242da7;
        }
        execute(_0x17b8ea, _0x5f031e, _0xe51f75) {
          return this._handler.execute(_0x17b8ea, 'start', _0xe51f75);
        }
        getFile(_0x54c74a) {
          return undefined;
        }
      }
      exports.StartLoggingCommand = _0x1e3174;
      class _0x4a923f {
        constructor(_0x53581f) {
          this._handler = _0x53581f;
        }
        execute(_0x271f10, _0x2e57fe, _0x3a5652) {
          return this._handler.execute(_0x271f10, 'stop', _0x3a5652);
        }
        getFile(_0x4bbd28) {
          return undefined;
        }
      }
      exports.StopLoggingCommand = _0x4a923f;
      class _0x508c5a {
        constructor(_0x3f41c8, _0x5cfe7b) {
          var _0x135086;
          this._loggerId = _0x3f41c8;
          this._sp = _0x5cfe7b;
          this._sb = [];
          const _0x5cf8df = (_0x135086 = this._sp.tryGet(_0x5bf8f5.ServiceKeys.tempFile)) === null || _0x135086 === undefined ? undefined : _0x135086.tmpdir();
          if (!_0x5cf8df) {
            return;
          }
          this.loggingFolderUri = _0x5cf8df;
          this.outputFileUri = this.loggingFolderUri.combinePaths(`pylance_${_0x5e283e.VERSION}_${this._getTitle()}.txt`);
          const _0x26a5bd = this._sp.tryGet(_0x5bf8f5.ServiceKeys.console);
          if (_0x26a5bd === null || _0x26a5bd === undefined) {
            undefined;
          } else {
            _0x26a5bd.info(`[${this._getTitle()}] Logging started`);
          }
        }
        error(_0x21758f) {
          this._sb.push(`[Error] ${_0x21758f}`);
        }
        warn(_0x272713) {
          this._sb.push(`[Warn] ${_0x272713}`);
        }
        info(_0x186c20) {
          this._sb.push(`[Info] ${_0x186c20}`);
        }
        log(_0x557777) {
          this._sb.push(`[Log] ${_0x557777}`);
        }
        done() {
          const _0x2d9145 = this._sp.tryGet(_0x5bf8f5.ServiceKeys.console);
          try {
            const _0x4216b1 = this._getTitle();
            if (!this.loggingFolderUri) {
              if (_0x2d9145 === null || _0x2d9145 === undefined) {
                undefined;
              } else {
                _0x2d9145.info(`[${_0x4216b1}] Logging stopped but there is no place to save data.`);
              }
              return;
            }
            const _0x28e3ad = this._sp.get(_0x5bf8f5.ServiceKeys.fs);
            _0x28e3ad.writeFileSync(this.outputFileUri, this._sb.join('\n'), 'utf8');
            if (_0x2d9145 === null || _0x2d9145 === undefined) {
              undefined;
            } else {
              _0x2d9145.info(`[${_0x4216b1}] Logging stopped at ${this.outputFileUri.getFilePath()}`);
            }
          } catch (_0x5903b3) {
            if (_0x2d9145 === null || _0x2d9145 === undefined) {
              undefined;
            } else {
              _0x2d9145.error(`There was an error saving logging data: ${_0x5903b3}`);
            }
            return;
          }
        }
        _getTitle() {
          return `id_${this._loggerId}`;
        }
      }
    },
    63216: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MoveSymbolCommand = undefined;
      const _0x1c0638 = require(41557);
      const _0x816939 = require(91426);
      const _0x16a97c = require(56814);
      const _0x2e49e8 = require(27113);
      const _0x12f600 = require(54267);
      const _0x1c8ce3 = require(31605);
      const _0x497205 = require(44657);
      const _0x505ba7 = require(27130);
      class _0x546268 {
        constructor(_0x558768) {
          this._ls = _0x558768;
        }
        execute(_0x4edb86, _0x3253af, _0x12a950) {
          _0x816939.throwIfCancellationRequested(_0x12a950);
          if (_0x3253af.command !== _0x505ba7.Commands.moveSymbol || _0x3253af.arguments?.length !== 4) {
            return;
          }
          const _0x51a686 = _0x2e49e8.Uri.parse(_0x3253af.arguments[0], this._ls.serviceProvider);
          const _0x3a5fc5 = _0x3253af.arguments[2];
          const _0x28210f = _0x3253af.arguments[3];
          _0x12a950 = new _0x816939.FileBasedToken(_0x28210f, _0x4edb86.service.fs);
          const _0x1957ab = this._getDestinationFile(_0x4edb86, _0x51a686, _0x3253af.arguments[1], _0x3a5fc5.start, _0x12a950);
          if (!_0x1957ab) {
            return;
          }
          const _0x25f292 = this._moveSymbolToFile(_0x4edb86, _0x51a686, _0x1957ab, _0x3a5fc5.start, _0x12a950);
          if (_0x25f292.edits === null && _0x25f292.failedReason) {
            this._ls.window.showErrorMessage(_0x25f292.failedReason);
          }
          return _0x25f292.edits;
        }
        getFile(_0xad5a63) {
          if (_0xad5a63.arguments?.length !== 4) {
            return undefined;
          }
          return _0xad5a63.arguments[0];
        }
        _getDestinationFile(_0x28156e, _0x117ce7, _0x58ab86, _0x514642, _0xcc7b2e) {
          if (_0x58ab86 !== _0x497205.MoveNewFileMarker) {
            return _0x2e49e8.Uri.parse(_0x58ab86, this._ls.serviceProvider);
          }
          const _0x15b456 = _0x28156e.service.getParseResults(_0x117ce7);
          if (!_0x15b456) {
            return undefined;
          }
          const _0x56b4b7 = _0x16a97c.convertPositionToOffset(_0x514642, _0x15b456.tokenizerOutput.lines);
          if (_0x56b4b7 === undefined) {
            return undefined;
          }
          const _0x1fc380 = _0x1c0638.findNodeByOffset(_0x15b456.parserOutput.parseTree, _0x56b4b7);
          if (_0x1fc380 === undefined) {
            return undefined;
          }
          if (_0x1fc380.nodeType !== 38) {
            return undefined;
          }
          const _0x57b0d4 = _0x117ce7.getDirectory();
          const _0x35ca09 = _0x117ce7.lastExtension;
          return _0x12f600.getUniqueUri(_0x28156e, _0x57b0d4.combinePaths(`${_0x1fc380.d.value.trim()}${_0x35ca09}`), _0xcc7b2e);
        }
        _moveSymbolToFile(_0x210c31, _0x141e19, _0x1f2d75, _0x12a657, _0x447034) {
          return _0x210c31.service.run(_0x5285e8 => {
            return new _0x1c8ce3.MoveSymbolProvider(_0x5285e8, _0x141e19, _0x1f2d75, _0x12a657, {
              importFormat: _0x210c31.importFormat ?? 'absolute'
            }, _0x447034).moveSymbol();
          }, _0x447034);
        }
      }
      exports.MoveSymbolCommand = _0x546268;
    },
    23898: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.mergeCommands = _0x107069;
      const _0x7da745 = require(27130);
      function _0x565586(_0x4548a3) {
        return _0x4548a3.command === _0x7da745.ClientCommands.runCommands;
      }
      function _0x107069(..._0x3dbeee) {
        const _0x395ecb = [];
        _0x3dbeee.forEach(_0x10b9f4 => {
          if (_0x10b9f4) {
            if (_0x565586(_0x10b9f4)) {
              _0x395ecb.push(..._0x10b9f4.arguments);
            } else {
              _0x395ecb.push(_0x10b9f4);
            }
          }
        });
        if (_0x395ecb.length === 0) {
          return undefined;
        }
        if (_0x395ecb.length === 1) {
          return _0x395ecb[0];
        }
        return {
          title: '',
          command: _0x7da745.ClientCommands.runCommands,
          arguments: _0x395ecb
        };
      }
    },
    48783: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.StopProfilingCommand = exports.StartProfilingCommand = undefined;
      const _0xc14acf = require(74118);
      const _0x52f023 = require(91426);
      const _0x5eb7a6 = require(58147);
      const _0x3beb7f = require(71745);
      const _0x13ab91 = require(24122);
      const _0x44fb23 = require(30048);
      const _0x12c06e = require(15986);
      class _0xb4b960 {
        constructor(_0x2d2e24) {
          this.ls = _0x2d2e24;
        }
        async execute(_0x16036c, _0x318b55, _0x45bb4f) {
          _0x52f023.throwIfCancellationRequested(_0x45bb4f);
          if (!_0x318b55.arguments || _0x318b55.arguments.length < 1) {
            return;
          }
          const _0x39787b = _0x16036c.service.serviceProvider.tryGet(_0x44fb23.PylanceServiceKeys.profilingService);
          if (!_0x39787b) {
            return;
          }
          if (_0x318b55.arguments[0] === 'start') {
            await this._startProfiling(_0x39787b);
            return;
          }
          if (_0x318b55.arguments[0] === 'stop') {
            await this._stopProfiling(_0x39787b);
            return;
          }
        }
        getFile(_0x58290b) {
          return undefined;
        }
        async _startProfiling(_0x399380) {
          const _0x501019 = await _0x399380.startProfiling();
          if (!_0x501019) {
            return;
          }
          for (const _0x5257c6 of await this.ls.getWorkspaces()) {
            await _0x13ab91.getBackgroundAnalysisProgram(_0x5257c6).startProfiling(_0x501019);
          }
        }
        async _stopProfiling(_0x473d6f) {
          const _0x4cda71 = [];
          const _0x407adf = _0x473d6f.currentProfilingInfo;
          _0x5eb7a6.addIfNotNull(_0x4cda71, await _0x473d6f.stopProfiling());
          const _0x540160 = this.ls.serviceProvider.tryGet(_0x3beb7f.ServiceKeys.windowService);
          if (!_0x540160) {
            return;
          }
          for (const _0x39ea69 of await this.ls.getWorkspaces()) {
            _0x5eb7a6.addIfNotNull(_0x4cda71, await _0x13ab91.getBackgroundAnalysisProgram(_0x39ea69).stopProfiling());
          }
          if (_0x4cda71.length > 0) {
            const _0x1e48bd = _0xc14acf.URI.file(_0x4cda71[0].getFilePath());
            const _0x4d31c4 = _0x12c06e.Localizer.Commands.ProfilingCommand.profilingDataSaved().format({
              filePath: _0x407adf.profilingFolderUri.getFilePath(),
              uri: `command:revealFileInOS?${encodeURIComponent(JSON.stringify(_0x1e48bd.toJSON()))}`
            });
            const _0x31eb35 = _0x540160.createGoToOutputAction();
            await _0x540160.showInformationMessage(_0x4d31c4, _0x31eb35);
          }
        }
      }
      class _0x13fa23 extends _0xb4b960 {
        constructor(_0x3c0262) {
          super(_0x3c0262);
        }
        execute(_0x2cfdf7, _0x29cfdc, _0x5b25ea) {
          return super.execute(_0x2cfdf7, {
            command: _0x29cfdc.command,
            arguments: ['start']
          }, _0x5b25ea);
        }
      }
      exports.StartProfilingCommand = _0x13fa23;
      class _0x488ae5 extends _0xb4b960 {
        constructor(_0x3da714) {
          super(_0x3da714);
        }
        execute(_0x1bd8df, _0x4acc96, _0xd83606) {
          return super.execute(_0x1bd8df, {
            command: _0x4acc96.command,
            arguments: ['stop']
          }, _0xd83606);
        }
      }
      exports.StopProfilingCommand = _0x488ae5;
    },
    14054: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.QuickActionCommand = undefined;
      const _0x3e3ada = require(88335);
      const _0x124812 = require(27130);
      const _0x49c380 = require(33474);
      class _0x34c746 {
        constructor(_0xb3ff2e) {
          this._ls = _0xb3ff2e;
          this._removeUnusedImportCommand = new _0x49c380.RemoveUnusedImportCommand();
          this._addImportCommand = new _0x3e3ada.AddImportCommand();
        }
        execute(_0x2d2556, _0x382b87, _0x251a07) {
          switch (_0x382b87.command) {
            case _0x124812.Commands.removeUnusedImport:
              {
                return this._removeUnusedImportCommand.execute(_0x2d2556, _0x382b87, _0x251a07);
              }
            case _0x124812.Commands.addImport:
              {
                return this._addImportCommand.execute(_0x2d2556, _0x382b87, _0x251a07);
              }
            default:
              this._ls.console.info(`unknown command: ${_0x382b87.command}`);
              return [];
          }
        }
        getFile(_0x54e4f6) {
          switch (_0x54e4f6.command) {
            case _0x124812.Commands.removeUnusedImport:
              {
                return this._removeUnusedImportCommand.getFile(_0x54e4f6);
              }
            case _0x124812.Commands.addImport:
              {
                return this._addImportCommand.getFile(_0x54e4f6);
              }
          }
          return undefined;
        }
      }
      exports.QuickActionCommand = _0x34c746;
    },
    33474: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RemoveUnusedImportCommand = undefined;
      exports.getUnusedImportDiagnosticsForRangeFromService = _0xf7ef5;
      exports.getUnusedImportDiagnosticsForRange = _0x1b7b62;
      exports.getUnusedImportDiagnostics = _0x453ba6;
      const _0x2eef5b = __importStar(require(41557));
      const _0x1dc422 = require(91426);
      const _0x2bdfa0 = require(56814);
      const _0x18f3d6 = require(93779);
      const _0x31f962 = require(27113);
      const _0x3770be = require(74382);
      const _0x247809 = require(54700);
      const _0x17edd2 = require(27130);
      async function _0xf7ef5(_0x51752f, _0x1f1d5e, _0x484847, _0x40edd7) {
        const _0x411c69 = await _0x51752f.getDiagnosticsForRange(_0x1f1d5e, _0x484847, _0x40edd7);
        return _0x453ba6(_0x411c69);
      }
      function _0x1b7b62(_0x3fc9e7, _0xeffe4e, _0x1dde96) {
        const _0x7061b1 = _0x3fc9e7.getDiagnosticsForRange(_0xeffe4e, _0x1dde96);
        return _0x453ba6(_0x7061b1);
      }
      function _0x453ba6(_0x5ed28e) {
        return _0x5ed28e.filter(_0x5dfc8a => {
          var _0x21ad7f;
          return _0x5dfc8a.category === 3 && ((_0x21ad7f = _0x5dfc8a.getActions()) === null || _0x21ad7f === undefined ? undefined : _0x21ad7f.some(_0x38ca4a => _0x38ca4a.action === 'pyright.unusedImport'));
        });
      }
      class _0x3a6ebf {
        execute(_0x2c6147, _0x125606, _0x1f13e1) {
          _0x1dc422.throwIfCancellationRequested(_0x1f13e1);
          if (_0x125606.arguments?.length !== 1 && _0x125606.arguments?.length !== 2) {
            return;
          }
          const _0x3b840e = _0x31f962.Uri.parse(_0x125606.arguments[0], _0x2c6147.service.serviceProvider);
          const _0x5d21ab = _0x125606.arguments.length === 2 ? _0x125606.arguments[1] : undefined;
          const _0x33138a = _0x2c6147.service.run(_0x46c135 => {
            return this.removeUnusedImports(_0x46c135, _0x3b840e, _0x5d21ab, _0x1f13e1);
          }, _0x1f13e1);
          return _0x17edd2.createCommandResult('Command: \'Remove All Unused Imports\'', _0x5d21ab, _0x33138a);
        }
        getFile(_0x59a1c4) {
          if (_0x59a1c4.arguments) {
            return _0x59a1c4.arguments[0];
          } else {
            return undefined;
          }
        }
        removeUnusedImports(_0x49d475, _0x322b62, _0x16b1cc, _0x604a5c) {
          const _0x40bd98 = _0x49d475.getParseResults(_0x322b62);
          if (!_0x40bd98) {
            return undefined;
          }
          _0x49d475.analyzeFile(_0x322b62, _0x604a5c);
          const _0x50ade8 = [];
          if (_0x16b1cc) {
            _0x247809.AddIfNotNull(_0x50ade8, this._getUnusedImportNameNode(_0x40bd98, _0x16b1cc));
          } else {
            const _0x19a1bf = _0x2bdfa0.convertTextRangeToRange(_0x40bd98.parserOutput.parseTree, _0x40bd98.tokenizerOutput.lines);
            const _0xa7aa02 = _0x1b7b62(_0x49d475, _0x322b62, _0x19a1bf);
            for (const _0x4a0ab6 of _0xa7aa02) {
              const _0x5dc3d4 = this._getUnusedImportNameNode(_0x40bd98, _0x4a0ab6.range);
              if (_0x5dc3d4) {
                const _0x1d18d5 = _0x2eef5b.getFirstAncestorOrSelf(_0x5dc3d4, _0x5dc547 => _0x5dc547.nodeType === 23 || _0x5dc547.nodeType === 25);
                if (!_0x1d18d5) {
                  continue;
                }
                if (_0x1d18d5.parent?.parent?.nodeType !== 36) {
                  continue;
                }
              }
              _0x247809.AddIfNotNull(_0x50ade8, _0x5dc3d4);
            }
          }
          const _0x373214 = new _0x18f3d6.TextEditTracker();
          _0x373214.removeNodes(..._0x50ade8.map(_0x247ee6 => ({
            node: _0x247ee6,
            parseFileResults: _0x40bd98
          })));
          return _0x3770be.convertToWorkspaceEdit(_0x49d475.fileSystem, _0x373214.getEdits(_0x604a5c));
        }
        _getUnusedImportNameNode(_0x3b911d, _0x37b040) {
          const _0x5c4b7b = _0x2eef5b.findNodeByPosition(_0x3b911d.parserOutput.parseTree, _0x37b040.start, _0x3b911d.tokenizerOutput.lines);
          if (_0x5c4b7b?.nodeType !== 38) {
            return undefined;
          }
          return _0x5c4b7b;
        }
      }
      exports.RemoveUnusedImportCommand = _0x3a6ebf;
    },
    94614: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RestartServerCommand = undefined;
      class _0x44b71e {
        constructor(_0x3d0d57) {
          this._ls = _0x3d0d57;
        }
        execute(_0x8a2ae7, _0x3a966c) {
          this._ls.restart();
        }
        getFile(_0xcfe646) {
          return undefined;
        }
      }
      exports.RestartServerCommand = _0x44b71e;
    },
    30048: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BulkServiceRegistrationService = exports.PylanceServiceKeys = undefined;
      exports.createPylanceServiceProvider = _0x354981;
      exports.registerServices = _0x48d3ac;
      const _0x590bb8 = require(42856);
      const _0x10afcd = require(23070);
      const _0x1a40f4 = require(39619);
      const _0xd0ec59 = require(8398);
      const _0x918597 = require(1044);
      const _0x52fa7a = require(53062);
      const _0x4d4e2c = require(31756);
      const _0x5abfe9 = require(65409);
      const _0x151fc1 = require(44889);
      const _0x3b5821 = require(84590);
      const _0x49eaf5 = require(3777);
      const _0x546a34 = require(69482);
      var _0x1cd157;
      (function (_0x49e50e) {
        function _0x1ec212(_0x4bce67) {
          return _0x4bce67 && !!_0x4bce67.sendRequest;
        }
        _0x49e50e.is = _0x1ec212;
      })(_0x1cd157 ||= {});
      var _0x3086f3;
      (function (_0x172be3) {
        _0x172be3.telemetry = new _0x590bb8.ServiceKey();
        _0x172be3.logger = new _0x590bb8.ServiceKey();
        _0x172be3.platform = new _0x590bb8.ServiceKey();
        _0x172be3.globalIndices = new _0x590bb8.ServiceKey();
        _0x172be3.intelliCode = new _0x590bb8.ServiceKey();
        _0x172be3.fixtureFinder = new _0x590bb8.ServiceKey();
        _0x172be3.stringDefinitionFinder = new _0x590bb8.ServiceKey();
        _0x172be3.bulkServiceRegistration = new _0x590bb8.ServiceKey();
        _0x172be3.constructorUsageProviderFactory = new _0x590bb8.ServiceKey();
        _0x172be3.overrideUsageProviderFactory = new _0x590bb8.ServiceKey();
        _0x172be3.uriMapper = new _0x590bb8.ServiceKey();
        _0x172be3.backgroundAnalysisFactory = new _0x590bb8.ServiceKey();
        _0x172be3.hostFactory = new _0x590bb8.ServiceKey();
        _0x172be3.settingTransformer = new _0x590bb8.ServiceKey();
        _0x172be3.declarationFinder = new _0x590bb8.ServiceKey();
        _0x172be3.mruQueues = new _0x590bb8.ServiceKey();
        _0x172be3.profilingService = new _0x590bb8.ServiceKey();
        _0x172be3.completionListConverter = new _0x590bb8.ServiceKey();
        _0x172be3.packageDiscoverer = new _0x590bb8.ServiceKey();
        _0x172be3.languageModelService = new _0x590bb8.ServiceKey();
      })(_0x3086f3 || (exports.PylanceServiceKeys = _0x3086f3 = {}));
      function _0x354981(..._0x2b6de1) {
        const _0x3da54d = _0x10afcd.createServiceProvider(..._0x2b6de1);
        _0x2b6de1.forEach(_0x4f1ef6 => {
          if (_0x546a34.TelemetryInterface.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.telemetry, _0x4f1ef6);
          }
          if (_0x5abfe9.LogService.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.logger, _0x4f1ef6);
          }
          if (_0x3b5821.Platform.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.platform, _0x4f1ef6);
          }
          if (_0x918597.IndicesManager.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.globalIndices, _0x4f1ef6);
          }
          if (_0x1a40f4.IntelliCodeInterface.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.intelliCode, _0x4f1ef6);
          }
          if (_0x151fc1.INotebookUriMapper.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.uriMapper, _0x4f1ef6);
          }
          if (_0xd0ec59.IHostFactory.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.hostFactory, _0x4f1ef6);
          }
          if (_0x49eaf5.ISettingTransformer.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.settingTransformer, _0x4f1ef6);
          }
          if (_0x52fa7a.MRUQueues.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.mruQueues, _0x4f1ef6);
          }
          if (_0x4d4e2c.PackageDiscoverer.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.packageDiscoverer, _0x4f1ef6);
          }
          if (_0x1cd157.is(_0x4f1ef6)) {
            _0x3da54d.add(_0x3086f3.languageModelService, _0x4f1ef6);
          }
        });
        const _0x4e36f6 = _0x3da54d.tryGet(_0x3086f3.bulkServiceRegistration);
        if (!_0x4e36f6) {
          _0x3da54d.add(_0x3086f3.bulkServiceRegistration, new _0x3138f4());
        }
        return _0x3da54d;
      }
      function _0x48d3ac(_0x4ebab5, _0x36e916, _0x365941, ..._0x1cb382) {
        const _0x1eb714 = _0x4ebab5.get(_0x3086f3.bulkServiceRegistration);
        if (_0x36e916 === undefined) {
          _0x1eb714.unregister(_0x365941, _0x4ebab5);
          return;
        }
        _0x1eb714.register(_0x365941, _0x4ebab5, _0x36e916, _0x365941, ..._0x1cb382);
      }
      class _0x3138f4 {
        constructor() {
          this._map = new Map();
        }
        register(_0x37600d, _0x1f8501, _0x1bb797, ..._0x30523e) {
          this.unregister(_0x37600d, _0x1f8501);
          this._map.set(_0x37600d, {
            serviceKeys: _0x30523e,
            value: _0x1bb797
          });
          _0x30523e.forEach(_0x448416 => _0x1f8501.add(_0x448416, _0x1bb797));
        }
        unregister(_0x3a4081, _0x3fdbed) {
          const _0x3b5a40 = this._map.get(_0x3a4081);
          if (!_0x3b5a40) {
            return;
          }
          _0x3b5a40.serviceKeys.forEach(_0x3d7c4d => _0x3fdbed.remove(_0x3d7c4d, _0x3b5a40.value));
          this._map.delete(_0x3a4081);
        }
      }
      exports.BulkServiceRegistrationService = _0x3138f4;
      _0x590bb8.ServiceProvider.prototype.uriMapper = function () {
        return this.get(_0x3086f3.uriMapper);
      };
    },
    78031: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.UriRanker = exports.UsedImportRanker = exports.MRUUsedRanker = exports.MRURanker = exports.addImportMRUKey = undefined;
      exports.addImportsEquals = _0x38ffeb;
      exports.applyRankerToItemsInPlace = _0x44be6c;
      const _0x3a6714 = require(3433);
      const _0xea0183 = require(91426);
      const _0x1bbade = require(58147);
      const _0x4ab02f = require(89740);
      const _0x3302bb = require(53062);
      const _0x5e7f4d = require(30048);
      function _0x38ffeb(_0x1f7674, _0x2e347f) {
        return _0x1f7674.name === _0x2e347f.name && _0x1f7674.source === _0x2e347f.source;
      }
      exports.addImportMRUKey = new _0x3302bb.MRUQueueKey('addImport', _0x1a551e => _0x1a551e.name, _0x38ffeb, 100);
      function _0x44be6c(_0xab43cb, _0x597cf7, _0x4189b7, _0xdff111, _0x233a3a) {
        let _0x248a35 = 0;
        for (const _0x292e95 of _0xab43cb) {
          _0x248a35 += _0x292e95.setSortKeys(_0x597cf7, _0xdff111, _0x233a3a);
          if (_0x248a35 >= _0x4189b7) {
            break;
          }
        }
        _0xdff111.sort(_0x46843f);
      }
      class _0x600990 {
        constructor(_0x410bf1, _0x288c93) {
          var _0x1894e1;
          this._workspace = _0x410bf1;
          this._maxItems = _0x288c93;
          this._mruQueue = (_0x1894e1 = this._workspace.service.serviceProvider.tryGet(_0x5e7f4d.PylanceServiceKeys.mruQueues)) === null || _0x1894e1 === undefined ? undefined : _0x1894e1.getGlobalMRUQueue(exports.addImportMRUKey);
        }
        setSortKeys(_0x298d92, _0x12e55a, _0x18b83f) {
          if (!this._mruQueue) {
            return 0;
          }
          const _0x5ca224 = this._mruQueue.get(_0x298d92);
          if (_0x5ca224.length === 0) {
            return 0;
          }
          return _0x5ee944(_0x5ca224, _0x12e55a, (_0x543a5b, _0x318805) => `0_${_0x318805}_${_0xcbd9d9(_0x543a5b.name, _0x543a5b.source)}`, this._maxItems, _0x18b83f);
        }
      }
      exports.MRURanker = _0x600990;
      class _0x2f72c8 {
        constructor(_0x3763ad, _0x549f5c) {
          var _0x3fbdc7;
          this._workspace = _0x3763ad;
          this._maxMruCount = _0x549f5c;
          this._mruQueue = (_0x3fbdc7 = this._workspace.service.serviceProvider.tryGet(_0x5e7f4d.PylanceServiceKeys.mruQueues)) === null || _0x3fbdc7 === undefined ? undefined : _0x3fbdc7.getGlobalMRUQueue(exports.addImportMRUKey);
        }
        setSortKeys(_0x946b47, _0x16cd15, _0x48bbf0) {
          if (!this._mruQueue) {
            return 0;
          }
          const _0x3e3f23 = this._mruQueue.take(this._maxMruCount);
          if (_0x3e3f23.length === 0) {
            return 0;
          }
          return _0x5ee944(_0x3e3f23, _0x16cd15, (_0x35ed68, _0xbb4519) => `0_${_0xbb4519}_${_0xcbd9d9(_0x35ed68.name, _0x35ed68.source)}`, _0x3e3f23.length, _0x48bbf0);
        }
      }
      exports.MRUUsedRanker = _0x2f72c8;
      const _0x3d65f6 = 'n';
      const _0x218a11 = 's';
      class _0x253b45 {
        constructor(_0x57d64c, _0x5c08d3, _0x240c83, _0x554869) {
          this._workspace = _0x57d64c;
          this._maxFiles = _0x5c08d3;
          this._maxStatements = _0x240c83;
          this._maxItems = _0x554869;
        }
        setSortKeys(_0x3f3233, _0x133ea3, _0x4628c5) {
          const _0x2800e5 = this._collectsImportUsed(_0x133ea3, _0x3f3233, _0x4628c5);
          if (_0x2800e5.length === 0) {
            return 0;
          }
          return _0x5ee944(_0x2800e5, _0x133ea3, (_0x278c64, _0x4e35b8) => {
            return `1_${_0x278c64.sortKey ?? ''}_${_0xcbd9d9(_0x278c64.name, _0x278c64.source)}`;
          }, this._maxItems, _0x4628c5);
        }
        _collectsImportUsed(_0x231a36, _0x5c8162, _0x50ea8a) {
          return this._workspace.service.run(_0x3c8a9a => {
            const _0x4b4d94 = [];
            const _0x404e28 = _0x3c8a9a.getSourceFileInfoList().filter(_0x5c8bb0 => _0x5c8bb0.isOpenByClient && _0x3a6714.isUserCode(_0x5c8bb0));
            for (let _0x372134 = 0; _0x372134 < _0x404e28.length; _0x372134++) {
              _0xea0183.throwIfCancellationRequested(_0x50ea8a);
              if (_0x372134 > this._maxFiles) {
                return _0x4b4d94;
              }
              const _0x2c03e8 = _0x404e28[_0x372134];
              const _0x13e32e = _0x3c8a9a.getParseResults(_0x2c03e8.sourceFile.getUri());
              if (!_0x13e32e) {
                continue;
              }
              const _0x262025 = _0x13e32e.parserOutput.parseTree;
              for (let _0x520ece = 0; _0x520ece < _0x262025.d.statements.length; _0x520ece++) {
                if (_0x520ece > this._maxStatements) {
                  return _0x4b4d94;
                }
                const _0x249d07 = _0x262025.d.statements[_0x520ece];
                if (_0x249d07.nodeType !== 47) {
                  continue;
                }
                _0x249d07.d.statements.forEach(_0x5466af => {
                  if (_0x5466af.nodeType === 23) {
                    _0x5466af.d.list.forEach(_0x3cd66c => {
                      if (_0x3cd66c.d.module.d.nameParts.length === 0) {
                        return;
                      }
                      const _0x50c74a = _0x3cd66c.d.module.d.nameParts[_0x3cd66c.d.module.d.nameParts.length - 1].d.token.value;
                      if (_0x50c74a === _0x5c8162) {
                        const _0x2006f2 = _0x3cd66c.d.module.d.nameParts.length > 1 ? _0x6232c5(_0x3cd66c.d.module.d.nameParts.map(_0x2a3596 => _0x2a3596.d.token.value)).join('.') : undefined;
                        _0x1bbade.addIfUnique(_0x4b4d94, {
                          name: _0x50c74a,
                          source: _0x2006f2,
                          sortKey: _0x3d65f6
                        }, _0x38ffeb);
                        return;
                      }
                      const _0x15ca76 = _0x3cd66c.d.module.d.nameParts.length === 1 ? _0x3cd66c.d.module.d.nameParts[0].d.value : _0x3cd66c.d.module.d.nameParts[0].d.value + '.';
                      const _0x29aa31 = _0x231a36.find(_0x3c18b7 => {
                        var _0x550ef5;
                        if ((_0x550ef5 = _0x3c18b7.source) === null || _0x550ef5 === undefined) {
                          return undefined;
                        } else {
                          return _0x550ef5.startsWith(_0x15ca76);
                        }
                      });
                      if (_0x29aa31) {
                        _0x1bbade.addIfUnique(_0x4b4d94, {
                          name: _0x29aa31.name,
                          source: _0x29aa31.source,
                          alias: _0x29aa31.alias,
                          sortKey: _0x218a11
                        }, _0x38ffeb);
                      }
                    });
                    return;
                  }
                  if (_0x5466af.nodeType === 25) {
                    const _0x4366bc = _0x5466af.d.module.d.nameParts.map(_0x120b8e => _0x120b8e.d.token.value).join('.');
                    _0x5466af.d.imports.forEach(_0x303642 => {
                      const _0x417f4c = _0x303642.d.name.d.token.value;
                      if (_0x417f4c === _0x5c8162) {
                        _0x1bbade.addIfUnique(_0x4b4d94, {
                          name: _0x417f4c,
                          source: _0x4366bc,
                          sortKey: _0x3d65f6
                        }, _0x38ffeb);
                        return;
                      }
                      const _0x351640 = _0x231a36.find(_0x1c521b => _0x1c521b.source === _0x4366bc);
                      if (_0x351640) {
                        _0x1bbade.addIfUnique(_0x4b4d94, {
                          name: _0x351640.name,
                          source: _0x351640.source,
                          alias: _0x351640.alias,
                          sortKey: _0x218a11
                        }, _0x38ffeb);
                      }
                    });
                    return;
                  }
                });
              }
            }
            return _0x4b4d94;
          }, _0x50ea8a);
        }
      }
      exports.UsedImportRanker = _0x253b45;
      class _0x220e11 {
        constructor(_0x1adb16) {
          this._workspace = _0x1adb16;
        }
        setSortKeys(_0x2bfd20, _0x95cf7f, _0x49979e) {
          return this._workspace.service.run(_0x56b57e => {
            let _0xed22e1 = 0;
            for (const _0x407f1f of _0x95cf7f) {
              _0xea0183.throwIfCancellationRequested(_0x49979e);
              if (_0x407f1f.sortKey !== undefined) {
                continue;
              }
              const _0x4a6d00 = this._getImportKind(_0x56b57e, _0x407f1f.declUri);
              _0x407f1f.sortKey = _0x4a6d00 + '_' + _0xcbd9d9(_0x407f1f.name, _0x407f1f.source);
              _0xed22e1++;
            }
            return _0xed22e1;
          }, _0x49979e);
        }
        _getImportKind(_0x437bd2, _0x37bb0a) {
          const _0x3e49b3 = _0x437bd2.importResolver.getTypeshedStdLibPath(_0x437bd2.configOptions.findExecEnvironment(_0x37bb0a));
          const _0x575473 = _0x437bd2.getSourceFileInfo(_0x37bb0a);
          if (_0x575473) {
            if (_0x3a6714.isUserCode(_0x575473)) {
              return 4;
            }
            if (_0x575473.sourceFile.isTypingStubFile()) {
              return 2;
            }
            if (_0x37bb0a.startsWith(_0x3e49b3)) {
              return 3;
            }
            return 5;
          }
          if (_0x37bb0a.pathEndsWith('stdlib/typing.pyi') || _0x37bb0a.pathEndsWith('stdlib/typing_extensions.pyi')) {
            return 2;
          }
          if (_0x37bb0a.startsWith(_0x3e49b3)) {
            return 3;
          }
          return 5;
        }
      }
      exports.UriRanker = _0x220e11;
      function _0xcbd9d9(_0x440ec3, _0x1a605b) {
        const _0x290b7c = _0x1a605b ? _0x4ab02f.getCharacterCount(_0x1a605b, '.') + '_' + _0x1a605b : '';
        return _0x440ec3 + '_' + _0x290b7c;
      }
      function _0x5ee944(_0x2213e8, _0x3d9e81, _0x1e105d, _0x3d45a8, _0x218b1a) {
        let _0x236edf = 0;
        for (let _0x49924c = 0; _0x49924c < _0x2213e8.length; _0x49924c++) {
          for (const _0x2a4ad4 of _0x3d9e81) {
            _0xea0183.throwIfCancellationRequested(_0x218b1a);
            if (_0x2a4ad4.sortKey !== undefined) {
              continue;
            }
            if (_0x38ffeb(_0x2a4ad4, _0x2213e8[_0x49924c])) {
              _0x2a4ad4.sortKey = _0x1e105d(_0x2213e8[_0x49924c], _0x49924c);
              if (++_0x236edf >= _0x3d45a8) {
                return _0x236edf;
              }
              break;
            }
          }
        }
        return _0x236edf;
      }
      function _0x6232c5(_0x53c77e) {
        _0x53c77e.pop();
        return _0x53c77e;
      }
      function _0x46843f(_0x54f4a7, _0x43601e) {
        if (_0x54f4a7.sortKey === _0x43601e.sortKey) {
          return 0;
        }
        if (_0x54f4a7.sortKey && !_0x43601e.sortKey) {
          return -1;
        }
        if (!_0x54f4a7.sortKey && _0x43601e.sortKey) {
          return 1;
        }
        return _0x54f4a7.sortKey.localeCompare(_0x43601e.sortKey);
      }
    },
    93980: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntervalCounter = exports.TaskSequentializer = exports.RunOnceWorker = exports.ProcessTimeRunOnceScheduler = exports.RunOnceScheduler = exports.IntervalTimer = exports.TimeoutTimer = exports.LimitedQueue = exports.Queue = exports.Limiter = exports.AutoOpenBarrier = exports.Barrier = exports.ThrottledDelayer = exports.Delayer = exports.SequencerByKey = exports.Sequencer = exports.Throttler = undefined;
      exports.createCancelablePromise = _0x157bf9;
      exports.raceCancellablePromises = _0xca15c5;
      exports.raceTimeout = _0x1c7e42;
      exports.asPromise = _0x25c73c;
      exports.timeout = _0x44e505;
      exports.sequence = _0x3422c7;
      exports.first = _0x44eb4c;
      exports.firstParallel = _0x582e57;
      const _0x201f77 = require(56911);
      const _0x562dd9 = require(91426);
      const _0x49dfca = require(34455);
      function _0x157bf9(_0x178f33) {
        const _0x323711 = new _0x201f77.CancellationTokenSource();
        const _0x220c6c = _0x178f33(_0x323711.token);
        const _0x217be6 = new Promise((_0x57ab81, _0x2a3f6f) => {
          const _0x3a3e8a = _0x323711.token.onCancellationRequested(() => {
            _0x3a3e8a.dispose();
            _0x2a3f6f(new _0x562dd9.OperationCanceledException());
          });
          Promise.resolve(_0x220c6c).then(_0x731a58 => {
            _0x3a3e8a.dispose();
            _0x323711.dispose();
            _0x57ab81(_0x731a58);
          }, _0x3110eb => {
            _0x3a3e8a.dispose();
            _0x323711.dispose();
            _0x2a3f6f(_0x3110eb);
          });
        });
        return new class {
          cancel() {
            _0x323711.cancel();
            _0x323711.dispose();
          }
          then(_0x45d1c8, _0x3a82f1) {
            return _0x217be6.then(_0x45d1c8, _0x3a82f1);
          }
          catch(_0x41ee84) {
            return this.then(undefined, _0x41ee84);
          }
          finally(_0xa50e46) {
            return _0x217be6.finally(_0xa50e46);
          }
        }();
      }
      async function _0xca15c5(_0xa977d8) {
        let _0x1f5584 = -1;
        const _0x2d7a8b = _0xa977d8.map((_0x196e3c, _0x5cc0fb) => _0x196e3c.then(_0x2b2aa4 => {
          _0x1f5584 = _0x5cc0fb;
          return _0x2b2aa4;
        }));
        try {
          const _0x250edc = await Promise.race(_0x2d7a8b);
          return _0x250edc;
        } finally {
          _0xa977d8.forEach((_0x3c50b5, _0x4af8bf) => {
            if (_0x4af8bf !== _0x1f5584) {
              _0x3c50b5.cancel();
            }
          });
        }
      }
      function _0x1c7e42(_0x462558, _0x26d7c5, _0x43bfa3) {
        let _0x2443d6 = undefined;
        const _0x142cdc = setTimeout(() => {
          if (_0x2443d6 === null || _0x2443d6 === undefined) {
            undefined;
          } else {
            _0x2443d6(undefined);
          }
          if (_0x43bfa3 === null || _0x43bfa3 === undefined) {
            undefined;
          } else {
            _0x43bfa3();
          }
        }, _0x26d7c5);
        return Promise.race([_0x462558.finally(() => clearTimeout(_0x142cdc)), new Promise(_0x3adbbc => _0x2443d6 = _0x3adbbc)]);
      }
      function _0x25c73c(_0x2003c3) {
        return new Promise((_0x4982a2, _0x1cfbb8) => {
          const _0x4ab054 = _0x2003c3();
          if (_0x49dfca.isThenable(_0x4ab054)) {
            _0x4ab054.then(_0x4982a2, _0x1cfbb8);
          } else {
            _0x4982a2(_0x4ab054);
          }
        });
      }
      class _0x21e388 {
        constructor() {
          this._isDisposed = false;
          this._activePromise = null;
          this._queuedPromise = null;
          this._queuedPromiseFactory = null;
        }
        queue(_0xf21f51) {
          if (this._isDisposed) {
            return Promise.reject(new Error('Throttler is disposed'));
          }
          if (this._activePromise) {
            this._queuedPromiseFactory = _0xf21f51;
            if (!this._queuedPromise) {
              const _0x168d0e = () => {
                this._queuedPromise = null;
                if (this._isDisposed) {
                  return;
                }
                const _0x286750 = this.queue(this._queuedPromiseFactory);
                this._queuedPromiseFactory = null;
                return _0x286750;
              };
              this._queuedPromise = new Promise(_0x3585b7 => {
                this._activePromise.then(_0x168d0e, _0x168d0e).then(_0x3585b7);
              });
            }
            return new Promise((_0x859023, _0x5a9bd2) => {
              this._queuedPromise.then(_0x859023, _0x5a9bd2);
            });
          }
          this._activePromise = _0xf21f51();
          return new Promise((_0x3c004c, _0x249f0f) => {
            this._activePromise.then(_0x488fe1 => {
              this._activePromise = null;
              _0x3c004c(_0x488fe1);
            }, _0x55638b => {
              this._activePromise = null;
              _0x249f0f(_0x55638b);
            });
          });
        }
        dispose() {
          this._isDisposed = true;
        }
      }
      exports.Throttler = _0x21e388;
      class _0x45ecf5 {
        constructor() {
          this._current = Promise.resolve(null);
        }
        queue(_0x56fd89) {
          return this._current = this._current.then(() => _0x56fd89(), () => _0x56fd89());
        }
      }
      exports.Sequencer = _0x45ecf5;
      class _0x1e5e61 {
        constructor() {
          this._promiseMap = new Map();
        }
        queue(_0x39297b, _0x18604e) {
          const _0x3fa911 = this._promiseMap.get(_0x39297b) ?? Promise.resolve();
          const _0x380ef2 = _0x3fa911.catch(() => {}).then(_0x18604e).finally(() => {
            if (this._promiseMap.get(_0x39297b) === _0x380ef2) {
              this._promiseMap.delete(_0x39297b);
            }
          });
          this._promiseMap.set(_0x39297b, _0x380ef2);
          return _0x380ef2;
        }
      }
      exports.SequencerByKey = _0x1e5e61;
      const _0x3d60b9 = (_0x54c32f, _0x543fd5) => {
        let _0x18d264 = true;
        const _0x1c9d54 = setTimeout(() => {
          _0x18d264 = false;
          _0x543fd5();
        }, _0x54c32f);
        return {
          isTriggered: () => _0x18d264,
          dispose: () => {
            clearTimeout(_0x1c9d54);
            _0x18d264 = false;
          }
        };
      };
      const _0x2f5b96 = _0x33ce01 => {
        let _0x1072fe = true;
        queueMicrotask(() => {
          if (_0x1072fe) {
            _0x1072fe = false;
            _0x33ce01();
          }
        });
        return {
          isTriggered: () => _0x1072fe,
          dispose: () => {
            _0x1072fe = false;
          }
        };
      };
      class _0xe194af {
        constructor(_0x3b8eab) {
          this.defaultDelay = _0x3b8eab;
          this._deferred = null;
          this._completionPromise = null;
          this._doResolve = null;
          this._doReject = null;
          this._task = null;
        }
        trigger(_0xdadfb8, _0x432984 = this.defaultDelay) {
          this._task = _0xdadfb8;
          this._cancelTimeout();
          if (!this._completionPromise) {
            this._completionPromise = new Promise((_0x38c6bb, _0x3b564f) => {
              this._doResolve = _0x38c6bb;
              this._doReject = _0x3b564f;
            }).then(() => {
              this._completionPromise = null;
              this._doResolve = null;
              if (this._task) {
                const _0x3379c2 = this._task;
                this._task = null;
                return _0x3379c2();
              }
              return undefined;
            });
          }
          const _0x349315 = () => {
            var _0xc88c1b;
            this._deferred = null;
            if ((_0xc88c1b = this._doResolve) === null || _0xc88c1b === undefined) {
              undefined;
            } else {
              _0xc88c1b.call(this, null);
            }
          };
          this._deferred = _0x432984 === -1 ? _0x2f5b96(_0x349315) : _0x3d60b9(_0x432984, _0x349315);
          return this._completionPromise;
        }
        isTriggered() {
          var _0x495e3a;
          return !!((_0x495e3a = this._deferred) === null || _0x495e3a === undefined ? undefined : _0x495e3a.isTriggered());
        }
        cancel() {
          var _0x1ccbd7;
          this._cancelTimeout();
          if (this._completionPromise) {
            if ((_0x1ccbd7 = this._doReject) === null || _0x1ccbd7 === undefined) {
              undefined;
            } else {
              _0x1ccbd7.call(this, new _0x562dd9.OperationCanceledException());
            }
            this._completionPromise = null;
          }
        }
        dispose() {
          this.cancel();
        }
        _cancelTimeout() {
          var _0x2c0fb3;
          if ((_0x2c0fb3 = this._deferred) === null || _0x2c0fb3 === undefined) {
            undefined;
          } else {
            _0x2c0fb3.dispose();
          }
          this._deferred = null;
        }
      }
      exports.Delayer = _0xe194af;
      class _0x238904 {
        constructor(_0x243137) {
          this._delayer = new _0xe194af(_0x243137);
          this._throttler = new _0x21e388();
        }
        trigger(_0x5d7966, _0x51d0e1) {
          return this._delayer.trigger(() => this._throttler.queue(_0x5d7966), _0x51d0e1);
        }
        isTriggered() {
          return this._delayer.isTriggered();
        }
        cancel() {
          this._delayer.cancel();
        }
        dispose() {
          this._delayer.dispose();
          this._throttler.dispose();
        }
      }
      exports.ThrottledDelayer = _0x238904;
      class _0x179b45 {
        constructor() {
          this._isOpen = false;
          this._promise = new Promise((_0x162155, _0x416199) => {
            this._completePromise = _0x162155;
          });
        }
        isOpen() {
          return this._isOpen;
        }
        open() {
          this._isOpen = true;
          this._completePromise(true);
        }
        wait() {
          return this._promise;
        }
      }
      exports.Barrier = _0x179b45;
      class _0x263162 extends _0x179b45 {
        constructor(_0x458294) {
          super();
          this._timeout = setTimeout(() => this.open(), _0x458294);
        }
        open() {
          clearTimeout(this._timeout);
          super.open();
        }
      }
      exports.AutoOpenBarrier = _0x263162;
      function _0x44e505(_0x42fa87, _0x5df6c2) {
        if (!_0x5df6c2) {
          return _0x157bf9(_0x4d3724 => _0x44e505(_0x42fa87, _0x4d3724));
        }
        return new Promise((_0x4603fe, _0x5b7fd4) => {
          const _0x29b6b9 = setTimeout(() => {
            _0x3d3d9c.dispose();
            _0x4603fe();
          }, _0x42fa87);
          const _0x3d3d9c = _0x5df6c2.onCancellationRequested(() => {
            clearTimeout(_0x29b6b9);
            _0x3d3d9c.dispose();
            _0x5b7fd4(new _0x562dd9.OperationCanceledException());
          });
        });
      }
      function _0x3422c7(_0x8dcbc) {
        const _0x5a4940 = [];
        let _0x1ae5f3 = 0;
        const _0x15abf3 = _0x8dcbc.length;
        function _0x4b3e35() {
          if (_0x1ae5f3 < _0x15abf3) {
            return _0x8dcbc[_0x1ae5f3++]();
          } else {
            return null;
          }
        }
        function _0x3c900a(_0x1e75ab) {
          if (_0x1e75ab !== undefined && _0x1e75ab !== null) {
            _0x5a4940.push(_0x1e75ab);
          }
          const _0x465310 = _0x4b3e35();
          if (_0x465310) {
            return _0x465310.then(_0x3c900a);
          }
          return Promise.resolve(_0x5a4940);
        }
        return Promise.resolve(null).then(_0x3c900a);
      }
      function _0x44eb4c(_0x17f988, _0x4960fe = _0x1e5768 => !!_0x1e5768, _0x9e16f6 = null) {
        let _0x2d3e94 = 0;
        const _0x3edbb7 = _0x17f988.length;
        const _0x5164fb = () => {
          if (_0x2d3e94 >= _0x3edbb7) {
            return Promise.resolve(_0x9e16f6);
          }
          const _0x5a1f0f = _0x17f988[_0x2d3e94++];
          const _0x1a9db9 = Promise.resolve(_0x5a1f0f());
          return _0x1a9db9.then(_0x21a1ae => {
            if (_0x4960fe(_0x21a1ae)) {
              return Promise.resolve(_0x21a1ae);
            }
            return _0x5164fb();
          });
        };
        return _0x5164fb();
      }
      function _0x582e57(_0x43f2b4, _0x26b700 = _0x574dfe => !!_0x574dfe, _0x19e5ee = null) {
        if (_0x43f2b4.length === 0) {
          return Promise.resolve(_0x19e5ee);
        }
        let _0x4b8a91 = _0x43f2b4.length;
        const _0x54eefe = () => {
          var _0x19fe19;
          var _0x1dfd48;
          _0x4b8a91 = -1;
          for (const _0x413e73 of _0x43f2b4) {
            if ((_0x1dfd48 = (_0x19fe19 = _0x413e73).cancel) === null || _0x1dfd48 === undefined) {
              undefined;
            } else {
              _0x1dfd48.call(_0x19fe19);
            }
          }
        };
        return new Promise((_0x151d36, _0x33e550) => {
          for (const _0x401c58 of _0x43f2b4) {
            _0x401c58.then(_0x5d9472 => {
              if (--_0x4b8a91 >= 0 && _0x26b700(_0x5d9472)) {
                _0x54eefe();
                _0x151d36(_0x5d9472);
              } else {
                if (_0x4b8a91 === 0) {
                  _0x151d36(_0x19e5ee);
                }
              }
            }).catch(_0x5c0241 => {
              if (--_0x4b8a91 >= 0) {
                _0x54eefe();
                _0x33e550(_0x5c0241);
              }
            });
          }
        });
      }
      class _0xf49f01 {
        constructor(_0x1d6f38) {
          this._size = 0;
          this._maxDegreeOfParalellism = _0x1d6f38;
          this._outstandingPromises = [];
          this._runningPromises = 0;
          this._onDrained = new _0x201f77.Emitter();
        }
        get onDrained() {
          return this._onDrained.event;
        }
        get size() {
          return this._size;
        }
        queue(_0x4a0e1d) {
          this._size++;
          return new Promise((_0x103639, _0x405a14) => {
            this._outstandingPromises.push({
              factory: _0x4a0e1d,
              c: _0x103639,
              e: _0x405a14
            });
            this._consume();
          });
        }
        dispose() {
          this._onDrained.dispose();
        }
        _consume() {
          while (this._outstandingPromises.length && this._runningPromises < this._maxDegreeOfParalellism) {
            const _0x410ed2 = this._outstandingPromises.shift();
            this._runningPromises++;
            const _0x5df14d = _0x410ed2.factory();
            _0x5df14d.then(_0x410ed2.c, _0x410ed2.e);
            _0x5df14d.then(() => this._consumed(), () => this._consumed());
          }
        }
        _consumed() {
          this._size--;
          this._runningPromises--;
          if (this._outstandingPromises.length > 0) {
            this._consume();
          } else {
            this._onDrained.fire();
          }
        }
      }
      exports.Limiter = _0xf49f01;
      class _0x36d3e4 extends _0xf49f01 {
        constructor() {
          super(1);
        }
      }
      exports.Queue = _0x36d3e4;
      class _0x3fba42 {
        constructor() {
          this._sequentializer = new _0x5331e8();
          this._tasks = 0;
        }
        queue(_0x31a310) {
          if (!this._sequentializer.isRunning()) {
            return this._sequentializer.run(this._tasks++, _0x31a310());
          }
          return this._sequentializer.queue(() => {
            return this._sequentializer.run(this._tasks++, _0x31a310());
          });
        }
      }
      exports.LimitedQueue = _0x3fba42;
      class _0x3c8f85 {
        constructor(_0x2dd6ec, _0x3e99f4) {
          this._token = -1;
          if (typeof _0x2dd6ec === 'function' && typeof _0x3e99f4 === 'number') {
            this.setIfNotSet(_0x2dd6ec, _0x3e99f4);
          }
        }
        dispose() {
          this.cancel();
        }
        cancel() {
          if (this._token !== -1) {
            clearTimeout(this._token);
            this._token = -1;
          }
        }
        cancelAndSet(_0x14b14e, _0x160f7) {
          this.cancel();
          this._token = setTimeout(() => {
            this._token = -1;
            _0x14b14e();
          }, _0x160f7);
        }
        setIfNotSet(_0xe66802, _0x52a820) {
          if (this._token !== -1) {
            return;
          }
          this._token = setTimeout(() => {
            this._token = -1;
            _0xe66802();
          }, _0x52a820);
        }
      }
      exports.TimeoutTimer = _0x3c8f85;
      class _0x1d9957 {
        constructor() {
          this._disposable = undefined;
        }
        cancel() {
          var _0x665e9d;
          if ((_0x665e9d = this._disposable) === null || _0x665e9d === undefined) {
            undefined;
          } else {
            _0x665e9d.dispose();
          }
          this._disposable = undefined;
        }
        cancelAndSet(_0x204512, _0x2b1f22, _0x1b4b61 = globalThis) {
          this.cancel();
          const _0x24a763 = _0x1b4b61.setInterval(() => {
            _0x204512();
          }, _0x2b1f22);
          this._disposable = _0x201f77.Disposable.create(() => {
            _0x1b4b61.clearInterval(_0x24a763);
            this._disposable = undefined;
          });
        }
        dispose() {
          this.cancel();
        }
      }
      exports.IntervalTimer = _0x1d9957;
      class _0x5c422d {
        constructor(_0x3d4263, _0x259d33) {
          this._timeoutToken = -1;
          this.runner = _0x3d4263;
          this._timeout = _0x259d33;
          this._timeoutHandler = this._onTimeout.bind(this);
        }
        get delay() {
          return this._timeout;
        }
        set delay(_0x5c5a39) {
          this._timeout = _0x5c5a39;
        }
        dispose() {
          this.cancel();
          this.runner = null;
        }
        cancel() {
          if (this.isScheduled()) {
            clearTimeout(this._timeoutToken);
            this._timeoutToken = -1;
          }
        }
        schedule(_0x42621b = this._timeout) {
          this.cancel();
          this._timeoutToken = setTimeout(this._timeoutHandler, _0x42621b);
        }
        isScheduled() {
          return this._timeoutToken !== -1;
        }
        flush() {
          if (this.isScheduled()) {
            this.cancel();
            this.doRun();
          }
        }
        doRun() {
          var _0x3b7fd3;
          if ((_0x3b7fd3 = this.runner) === null || _0x3b7fd3 === undefined) {
            undefined;
          } else {
            _0x3b7fd3.call(this);
          }
        }
        _onTimeout() {
          this._timeoutToken = -1;
          if (this.runner) {
            this.doRun();
          }
        }
      }
      exports.RunOnceScheduler = _0x5c422d;
      class _0xaf9c5a {
        constructor(_0xdd12c0, _0x5c4401) {
          if (_0x5c4401 % 1000 !== 0) {
            console.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${_0x5c4401}ms is not a multiple of 1000ms.`);
          }
          this._runner = _0xdd12c0;
          this._timeout = _0x5c4401;
          this._counter = 0;
          this._intervalToken = -1;
          this._intervalHandler = this._onInterval.bind(this);
        }
        dispose() {
          this.cancel();
          this._runner = null;
        }
        cancel() {
          if (this.isScheduled()) {
            clearInterval(this._intervalToken);
            this._intervalToken = -1;
          }
        }
        schedule(_0x22cfcc = this._timeout) {
          if (_0x22cfcc % 1000 !== 0) {
            console.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${_0x22cfcc}ms is not a multiple of 1000ms.`);
          }
          this.cancel();
          this._counter = Math.ceil(_0x22cfcc / 1000);
          this._intervalToken = setInterval(this._intervalHandler, 1000);
        }
        isScheduled() {
          return this._intervalToken !== -1;
        }
        _onInterval() {
          var _0x1cb267;
          this._counter--;
          if (this._counter > 0) {
            return;
          }
          clearInterval(this._intervalToken);
          this._intervalToken = -1;
          if ((_0x1cb267 = this._runner) === null || _0x1cb267 === undefined) {
            undefined;
          } else {
            _0x1cb267.call(this);
          }
        }
      }
      exports.ProcessTimeRunOnceScheduler = _0xaf9c5a;
      class _0x1607b9 extends _0x5c422d {
        constructor(_0x447f26, _0x57d2b2) {
          super(_0x447f26, _0x57d2b2);
          this._units = [];
        }
        work(_0xae7a3c) {
          this._units.push(_0xae7a3c);
          if (!this.isScheduled()) {
            this.schedule();
          }
        }
        dispose() {
          this._units = [];
          super.dispose();
        }
        doRun() {
          var _0x3d88e5;
          const _0xc8b2a5 = this._units;
          this._units = [];
          if ((_0x3d88e5 = this.runner) === null || _0x3d88e5 === undefined) {
            undefined;
          } else {
            _0x3d88e5.call(this, _0xc8b2a5);
          }
        }
      }
      exports.RunOnceWorker = _0x1607b9;
      class _0x5331e8 {
        get running() {
          var _0x3a6ab4;
          if ((_0x3a6ab4 = this._running) === null || _0x3a6ab4 === undefined) {
            return undefined;
          } else {
            return _0x3a6ab4.promise;
          }
        }
        isRunning(_0x3c94ab) {
          if (typeof _0x3c94ab === 'number') {
            return this._running?.taskId === _0x3c94ab;
          }
          return !!this._running;
        }
        cancelRunning() {
          var _0x5b9652;
          if ((_0x5b9652 = this._running) === null || _0x5b9652 === undefined) {
            undefined;
          } else {
            _0x5b9652.cancel();
          }
        }
        run(_0x5d7581, _0x4cf2ff, _0x18f2a4) {
          this._running = {
            taskId: _0x5d7581,
            cancel: () => _0x18f2a4 === null || _0x18f2a4 === undefined ? undefined : _0x18f2a4(),
            promise: _0x4cf2ff
          };
          _0x4cf2ff.then(() => this._doneRunning(_0x5d7581), () => this._doneRunning(_0x5d7581));
          return _0x4cf2ff;
        }
        queue(_0x51986d) {
          if (!this._queued) {
            let _0x765eb0;
            let _0x4eaca6;
            const _0x38fa02 = new Promise((_0x18d1f5, _0x3755a0) => {
              _0x765eb0 = _0x18d1f5;
              _0x4eaca6 = _0x3755a0;
            });
            this._queued = {
              run: _0x51986d,
              promise: _0x38fa02,
              promiseResolve: _0x765eb0,
              promiseReject: _0x4eaca6
            };
          } else {
            this._queued.run = _0x51986d;
          }
          return this._queued.promise;
        }
        hasQueued() {
          return !!this._queued;
        }
        async join() {
          var _0x52d537;
          var _0x4cee28;
          if ((_0x52d537 = this._queued?.promise) !== null && _0x52d537 !== undefined) {
            return _0x52d537;
          } else {
            if ((_0x4cee28 = this._running) === null || _0x4cee28 === undefined) {
              return undefined;
            } else {
              return _0x4cee28.promise;
            }
          }
        }
        _doneRunning(_0x29f5f7) {
          if (this._running && _0x29f5f7 === this._running.taskId) {
            this._running = undefined;
            this._runQueued();
          }
        }
        _runQueued() {
          if (this._queued) {
            const _0x23cfbd = this._queued;
            this._queued = undefined;
            _0x23cfbd.run().then(_0x23cfbd.promiseResolve, _0x23cfbd.promiseReject);
          }
        }
      }
      exports.TaskSequentializer = _0x5331e8;
      class _0x87ba6c {
        constructor(_0x5b85dc, _0x81fbff = () => Date.now()) {
          this._interval = _0x5b85dc;
          this._nowFn = _0x81fbff;
          this._lastIncrementTime = 0;
          this._value = 0;
        }
        increment() {
          const _0x67907e = this._nowFn();
          if (_0x67907e - this._lastIncrementTime > this._interval) {
            this._lastIncrementTime = _0x67907e;
            this._value = 0;
          }
          this._value++;
          return this._value;
        }
      }
      exports.IntervalCounter = _0x87ba6c;
    },
    23073: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.verifyClient = _0x55790f;
      exports.generateVerificationString = _0x213460;
      const _0x218b23 = require(96662);
      function _0x55790f(_0x4f8ce8) {
        return;
      }
      function _0x213460() {
        return JSON.stringify(_0x218b23.licenseErrorText);
      }
    },
    54700: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.deleteElement = _0x84008f;
      exports.AddIfNotNull = _0xe220ba;
      exports.tryGetStringValues = _0x3e196d;
      exports.tryCast = _0x5763ce;
      const _0x53e559 = require(34455);
      function _0x84008f(_0x14010e, _0x3f6d2c) {
        const _0x1d2920 = _0x14010e.findIndex(_0x5ad008 => _0x5ad008 === _0x3f6d2c);
        if (_0x1d2920 < 0) {
          return;
        }
        _0x14010e.splice(_0x1d2920, 1);
      }
      function _0xe220ba(_0x4d1fd5, _0x20d837) {
        if (_0x20d837 === undefined || _0x20d837 === null) {
          return;
        }
        _0x4d1fd5.push(_0x20d837);
      }
      function _0x3e196d(_0x52dd3f) {
        if (!_0x52dd3f || !Array.isArray(_0x52dd3f) || _0x52dd3f.length === 0) {
          return [];
        }
        return _0x52dd3f.filter(_0x4b11ff => _0x4b11ff && _0x53e559.isString(_0x4b11ff));
      }
      function _0x5763ce(_0x151b03) {
        if (_0x151b03 === undefined) {
          return undefined;
        } else {
          return _0x151b03;
        }
      }
    },
    99504: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PYTHON_EXTENSION_ID = exports.PYLANCE_EXTENSION_ID = exports.IS_INTERNAL = exports.IS_RELEASE = exports.IS_PR = exports.IS_DEV = exports.IS_INSIDERS = exports.PYRIGHT_VERSION = exports.PYRIGHT_COMMIT = exports.VERSION = undefined;
      const _0x49e754 = __importStar(require(69216));
      const _0x2548ed = require(23203);
      exports.VERSION = _0x2548ed.version || '';
      exports.PYRIGHT_COMMIT = _0x2548ed.pyrightCommit || 'unknown';
      exports.PYRIGHT_VERSION = _0x2548ed.pyrightVersion || 'unknown';
      exports.IS_INSIDERS = _0x4a5e36(exports.VERSION);
      exports.IS_DEV = exports.VERSION.indexOf('-dev') !== -1;
      exports.IS_PR = exports.VERSION.indexOf('-pr.') !== -1;
      exports.IS_RELEASE = !exports.IS_INSIDERS && !exports.IS_DEV && !exports.IS_PR;
      exports.IS_INTERNAL = exports.IS_DEV || exports.IS_PR;
      exports.PYLANCE_EXTENSION_ID = 'ms-python.vscode-pylance';
      exports.PYTHON_EXTENSION_ID = 'ms-python.python';
      function _0x4a5e36(_0x56dbe5) {
        try {
          const _0x582119 = new _0x49e754.SemVer(_0x56dbe5).patch;
          return _0x582119 >= 100;
        } catch (_0xf5c771) {
          return false;
        }
      }
    },
    24122: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getEmptyIndexOptions = _0x7c1339;
      exports.getBackgroundAnalysisProgram = _0x5f3dcb;
      exports.getWorkspace = _0x20cb20;
      exports.getBackgroundAnalysis = _0x58ba22;
      exports.cloneSimpleObject = _0x9f8685;
      function _0x7c1339() {
        return {
          packageDepths: [],
          regenerateStdLibIndices: false
        };
      }
      function _0x5f3dcb(_0x588e22) {
        if (_0x588e22 === null || _0x588e22 === undefined) {
          return undefined;
        } else {
          return _0x588e22.service.backgroundAnalysisProgram;
        }
      }
      function _0x20cb20(_0xfba1cc) {
        return _0xfba1cc;
      }
      function _0x58ba22(_0x5ca30f) {
        return _0x5ca30f;
      }
      function _0x9f8685(_0xe46141) {
        return JSON.parse(JSON.stringify(_0xe46141));
      }
    },
    95756: function (module, exports, require) {
      'use strict';

      var __importDefault = this && this.__importDefault || function (mod) {
        return mod && mod.__esModule ? mod : {
          "default": mod
        };
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.sha256 = _0x2329b6;
      let _0x41a39c;
      try {
        _0x41a39c = require(76982);
        if (!_0x41a39c?.createHash) {
          _0x41a39c = undefined;
        }
      } catch {}
      const _0x480b15 = __importDefault(require(23729));
      const _0x574175 = _0x41a39c?.createHash || _0x480b15.default;
      function _0x2329b6(_0x1c94d9) {
        return _0x574175('sha256').update(_0x1c94d9).digest('hex');
      }
    },
    8527: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.tryGetDirectDependencies = _0x56b961;
      const _0x2042e4 = require(8745);
      const _0x4f76d8 = require(75130);
      const _0x8d0edd = require(48281);
      const _0x5c3192 = require(4883);
      const _0x7ed016 = require(54010);
      const _0xcce37a = require(71745);
      const _0x4129ef = __importStar(require(33351));
      function _0x56b961(_0x6ef0ed, _0x4a8010) {
        const _0x30aa88 = _0x6ef0ed.serviceProvider.tryGet(_0xcce37a.ServiceKeys.console);
        try {
          const _0x6e9a95 = _0x4a8010.pathEndsWith(_0x5c3192.requirementsFileName);
          const _0x147896 = _0x4a8010.pathEndsWith(_0x5c3192.pyprojectTomlName);
          if (_0x6e9a95) {
            return _0x29a969(_0x6ef0ed, _0x206850(_0x6ef0ed.fileSystem, _0x4a8010), _0x30aa88);
          }
          if (_0x147896) {
            return _0x29a969(_0x6ef0ed, _0x547f64(_0x6ef0ed.fileSystem, _0x4a8010), _0x30aa88);
          }
          return undefined;
        } catch (_0x37f857) {
          if (_0x30aa88 === null || _0x30aa88 === undefined) {
            undefined;
          } else {
            _0x30aa88.log(`Failed to get direct dependencies: ${_0x37f857}`);
          }
          return undefined;
        }
      }
      function _0x206850(_0x187f11, _0x2cc96b, _0x153af0 = new Set()) {
        if (!_0x187f11.existsSync(_0x2cc96b)) {
          return _0x153af0;
        }
        const _0xbe3c3 = _0x187f11.readFileSync(_0x2cc96b, 'utf8');
        const _0x29c7a9 = _0x2042e4.parseFile(_0xbe3c3, true);
        for (const _0x38debb of _0x29c7a9) {
          const _0x240d6e = _0x597a3b(_0x38debb);
          if (_0x240d6e) {
            _0x153af0.add(_0x240d6e);
            continue;
          }
          if (_0x38debb.type === 'CommandLineFlag' && _0x38debb.args && _0x38debb.args.length > 0 && _0x38debb.flag === '-r') {
            _0x206850(_0x187f11, _0x2cc96b.getDirectory().combinePaths(_0x38debb.args[0]), _0x153af0);
            continue;
          }
        }
        return _0x153af0;
      }
      function _0x547f64(_0x3f0ffa, _0x5b02e9) {
        const _0x5f496d = new Set();
        if (!_0x3f0ffa.existsSync(_0x5b02e9)) {
          return _0x5f496d;
        }
        const _0x187366 = _0x3f0ffa.readFileSync(_0x5b02e9, 'utf8');
        const _0x557a6e = _0x4129ef.parse(_0x187366);
        if (_0x557a6e.project?.dependencies) {
          _0x557a6e.project.dependencies.forEach(_0x1f5511 => _0x421fc5(_0x5f496d, _0x59fc9e(_0x1f5511)));
        }
        if (_0x557a6e.project?.['optional-dependencies']) {
          Object.values(_0x557a6e.project['optional-dependencies']).forEach(_0xbef71a => {
            _0xbef71a.forEach(_0x940f36 => _0x421fc5(_0x5f496d, _0x59fc9e(_0x940f36)));
          });
        }
        if (_0x557a6e.tool?.poetry?.dependencies) {
          Object.keys(_0x557a6e.tool.poetry.dependencies).forEach(_0x4d9d76 => _0x421fc5(_0x5f496d, _0x59fc9e(_0x4d9d76)));
        }
        if (_0x557a6e.tool?.poetry?.extras) {
          Object.values(_0x557a6e.tool.poetry.extras).forEach(_0x1a8183 => {
            _0x1a8183.forEach(_0x457ddd => _0x421fc5(_0x5f496d, _0x59fc9e(_0x457ddd)));
          });
        }
        if (_0x557a6e.tool?.flit?.dependencies?.requires) {
          _0x557a6e.tool.flit.dependencies.requires.forEach(_0x217baa => _0x421fc5(_0x5f496d, _0x59fc9e(_0x217baa)));
        }
        if (_0x557a6e.tool?.flit?.extra?.requires) {
          Object.values(_0x557a6e.tool.flit.extra.requires).forEach(_0x215603 => {
            _0x215603.forEach(_0x29dc7e => _0x421fc5(_0x5f496d, _0x59fc9e(_0x29dc7e)));
          });
        }
        return _0x5f496d;
      }
      function _0x421fc5(_0x716a70, _0x31158b) {
        if (!_0x31158b) {
          return;
        }
        _0x716a70.add(_0x31158b);
      }
      function _0x59fc9e(_0x530d95) {
        const _0x4b6425 = _0x2042e4.parseLine(_0x530d95, true);
        if (!_0x4b6425) {
          return undefined;
        }
        return _0x597a3b(_0x4b6425);
      }
      function _0x597a3b(_0x5b5f2d) {
        if (_0x5b5f2d.type === 'Requirement') {
          switch (_0x5b5f2d.subtype) {
            case 'URL':
            case 'Path':
            case 'PackageURL':
              {
                const _0x51adf9 = _0x5b5f2d.subtype === 'Path' ? _0x5b5f2d.path : _0x5b5f2d.url;
                return _0x55b9df(_0x51adf9);
              }
            case 'Package':
              return _0x5b5f2d.package;
          }
          _0x8d0edd.assertNever(_0x5b5f2d.subtype);
        }
        if (!_0x5b5f2d.args || _0x5b5f2d.args.length === 0) {
          return undefined;
        }
        if (_0x5b5f2d.flag === '-e') {
          return _0x55b9df(_0x5b5f2d.args[0]);
        }
        return undefined;
      }
      function _0x29a969(_0x1aff22, _0x333d72, _0x5aa1a8) {
        const _0x3f1f0e = [..._0x333d72];
        if (_0x5aa1a8 === null || _0x5aa1a8 === undefined) {
          undefined;
        } else {
          _0x5aa1a8.log(`Dependency Discovered: ${_0x3f1f0e.join(' ,')}`);
        }
        const _0x192c72 = _0x3f1f0e.map(_0x34e4c3 => _0x2b473c(_0x34e4c3));
        const _0x390ba2 = new Set();
        for (const _0x3ae6e2 of _0x1aff22.getPythonSearchPaths([])) {
          if (!_0x1aff22.fileSystem.existsSync(_0x3ae6e2)) {
            continue;
          }
          const _0x351efb = _0x1aff22.fileSystem.readdirEntriesSync(_0x3ae6e2).filter(_0x54392e => _0x54392e.isDirectory() && _0x54392e.name.endsWith('.dist-info')).map(_0x48de33 => _0x48de33.name);
          for (const _0x246ae5 of _0x192c72) {
            const _0x15c2d8 = _0x351efb.find(_0x482863 => _0x246ae5.test(_0x482863));
            if (!_0x15c2d8) {
              continue;
            }
            _0x5f5554(_0x1aff22, _0x3ae6e2, _0x15c2d8, _0x390ba2);
          }
        }
        return _0x390ba2;
      }
      function _0x5f5554(_0x2a323b, _0xf1c02, _0x46c700, _0xa75b1e) {
        const _0x3546f8 = _0xf1c02.combinePaths(_0x46c700);
        if (!_0x2a323b.fileSystem.existsSync(_0x3546f8)) {
          return;
        }
        const _0x25624f = _0x3546f8.combinePaths('top_level.txt');
        if (_0x2a323b.fileSystem.existsSync(_0x25624f)) {
          const _0x5d9803 = _0x2a323b.fileSystem.readFileSync(_0x25624f, 'utf8').split(/\r\n|\r|\n/);
          for (const _0x4b611a of _0x5d9803) {
            const _0x2404d5 = _0x4b611a.trim();
            if (_0x2404d5) {
              _0xa75b1e.add(_0x2404d5);
            }
          }
        }
        const _0x1ffb0d = _0x3546f8.combinePaths('RECORD');
        if (_0x2a323b.fileSystem.existsSync(_0x1ffb0d)) {
          const _0x1dc8f5 = _0x2a323b.fileSystem.readFileSync(_0x1ffb0d, 'utf8').split(/\r\n|\r|\n/);
          for (const _0x3180fd of _0x1dc8f5) {
            const [_0x3b9d70] = _0x3180fd.split(',');
            const _0x46086b = _0x7ed016.getFileExtension(_0x3b9d70).toLowerCase();
            if (_0x4f76d8.supportedFileExtensions.some(_0x110ae6 => _0x110ae6 === _0x46086b)) {
              const _0x50943e = _0x3b9d70.split('/');
              if (_0x50943e.length === 1) {
                _0xa75b1e.add(_0x7ed016.stripFileExtension(_0x50943e[0]));
              } else {
                if (_0x50943e.length > 1) {
                  _0xa75b1e.add(_0x50943e[0]);
                }
              }
            }
          }
        }
      }
      function _0x27e141(_0x359127) {
        let _0x10455b = _0x359127.toLocaleLowerCase('en-US');
        _0x10455b = _0x359127.replace(/[^_\p{L}\p{N}]+/gu, '-');
        _0x10455b = _0x10455b.replace(/^-+|-+$/g, '');
        return _0x10455b;
      }
      function _0x2b473c(_0x779fdc) {
        const _0x56eebb = _0x27e141(_0x779fdc);
        const _0x2bdccb = _0x56eebb.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        const _0x597bee = `^${_0x2bdccb.replace(/-/g, '[-_]')}(?:[-].+)?\\.dist-info\$`;
        return new RegExp(_0x597bee, 'i');
      }
      function _0x55b9df(_0x523f69) {
        if (!_0x523f69) {
          return undefined;
        }
        const _0x43395c = _0x2ba244(_0x523f69);
        if (_0x43395c) {
          return _0x43395c;
        }
        return _0x2643c5(_0x523f69);
      }
      function _0x2ba244(_0x374791) {
        const _0x5f3294 = _0x374791.match(/#egg=([^&]+)/);
        if (_0x5f3294) {
          return _0x5f3294[1];
        } else {
          return undefined;
        }
      }
      function _0x2643c5(_0x400703) {
        const _0x278bfa = _0x400703.match(/\/([^/]+\.whl)$/);
        if (!_0x278bfa) {
          return undefined;
        }
        const _0x385f06 = _0x278bfa[1];
        const _0x4f6ef4 = _0x385f06.split('-');
        if (_0x4f6ef4.length > 0) {
          return _0x4f6ef4[0];
        } else {
          return undefined;
        }
      }
    },
    48256: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BaseFormatter = undefined;
      const _0x170e68 = require(17490);
      class _0x365c0d extends _0x170e68.BaseWalker {
        constructor(_0x254b7b) {
          super(_0x254b7b);
          this._result = '';
          this._originalText = '';
        }
        get originalText() {
          return this._originalText;
        }
        walk(_0x521970) {
          this._originalText = _0x521970.rootNode.text;
          this._result = '';
          super.walk(_0x521970);
        }
        appendText(_0x27b686) {
          this._result += _0x27b686;
        }
        insertText(_0x59eeda, _0x506b9a) {
          if (_0x59eeda < 0) {
            _0x59eeda = this._result.length + _0x59eeda;
          }
          this._result = this._result.slice(0, _0x59eeda) + _0x506b9a + this._result.slice(_0x59eeda);
        }
        getCurrentIndentation() {
          const _0x5c5c16 = this._result.lastIndexOf('\n');
          if (_0x5c5c16 >= 0) {
            const _0x47462c = this._result.slice(_0x5c5c16 + 1);
            const _0x53ef19 = _0x47462c.match(/^(\s+|[&nbsp;]+)/);
            if (_0x53ef19) {
              return _0x53ef19[0].replace(/&nbsp;/g, ' ');
            }
          }
          return '';
        }
        removeIndentationOnCurrentLine() {
          const _0x4c6f91 = this._result.lastIndexOf('\n');
          if (_0x4c6f91 >= 0) {
            const _0x20b741 = this._result.slice(_0x4c6f91 + 1);
            const _0x2f2bc = _0x20b741.match(/^(\s+|[&nbsp;]+)/);
            if (_0x2f2bc) {
              this._result = this._result.slice(0, _0x4c6f91 + 1) + _0x20b741.slice(_0x2f2bc[0].length);
              return _0x2f2bc[0].replace(/&nbsp;/g, ' ');
            }
          }
          return '';
        }
        removeUpToLastLineFeed() {
          const _0xfc5da3 = this._result.lastIndexOf('\n');
          if (_0xfc5da3 >= 0) {
            this._result = this._result.slice(0, _0xfc5da3);
          }
        }
        replaceText(_0x217800, _0xe47279) {
          this._result = this._result.replace(_0x217800, _0xe47279);
        }
        getResult() {
          return this._result;
        }
        extractNodeText(_0x1b01f9) {
          if (_0x1b01f9.childCount > 0) {
            const _0x330522 = this._result;
            this._result = '';
            if (this.currentNode?.id !== _0x1b01f9.id) {
              this.visitNode(_0x1b01f9);
            } else {
              this.walkChildren(_0x1b01f9);
            }
            const _0x1fdb55 = this._result;
            this._result = _0x330522;
            return _0x1fdb55;
          } else {
            return _0x1b01f9.text;
          }
        }
        handleError(_0x42c0b6) {
          const _0x1f2c24 = this._originalText.slice(_0x42c0b6.startIndex);
          this.appendText(_0x1f2c24);
          return false;
        }
        visitText(_0x4a878b) {
          this.appendText(_0x4a878b.text);
          return true;
        }
        visitAdornment(_0x3002e0) {
          this.appendText(_0x3002e0.text);
          return true;
        }
        visitLineFeed(_0x42f5cf) {
          this.appendText('\n');
          return true;
        }
        visitSpace(_0x212246) {
          if (this.currentNode?.type !== '|') {
            this.appendText(_0x212246);
          }
          return true;
        }
        visitIndent(_0x5b7c2e) {
          this.appendText(_0x5b7c2e);
          return true;
        }
        visitInterpretedText(_0x3c6ce8) {
          this.appendText(_0x3c6ce8.text);
          return true;
        }
        visitEmphasis(_0x43713d) {
          this.appendText(_0x43713d.text);
          return true;
        }
        visitStrong(_0x569282) {
          this.appendText(_0x569282.text);
          return true;
        }
      }
      exports.BaseFormatter = _0x365c0d;
    },
    17490: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BaseWalker = undefined;
      class _0x42ab17 {
        constructor(_0x908741) {
          this.console = _0x908741;
          this._errors = [];
        }
        get text() {
          var _0x2fc907;
          return ((_0x2fc907 = this._document) === null || _0x2fc907 === undefined ? undefined : _0x2fc907.rootNode.text) || '';
        }
        get currentNode() {
          return this._currentNode;
        }
        get previousNode() {
          return this._previousNode;
        }
        get root() {
          var _0x4d456a;
          if ((_0x4d456a = this._document) === null || _0x4d456a === undefined) {
            return undefined;
          } else {
            return _0x4d456a.rootNode;
          }
        }
        walk(_0x26a96e) {
          this._document = _0x26a96e;
          this._currentNode = _0x26a96e.rootNode;
          this.walkChildren(this._currentNode);
        }
        getNodeIndentation(_0x2db967) {
          if (_0x2db967) {
            for (let _0x3401d6 = _0x2db967.startIndex; _0x3401d6 >= 0; _0x3401d6--) {
              if (this.text[_0x3401d6] === '\n' || _0x3401d6 === 0) {
                const _0x4ffc88 = this.text.slice(_0x3401d6 + 1, _0x2db967.startIndex).match(/^\s+/);
                if (_0x4ffc88) {
                  return _0x4ffc88[0];
                } else {
                  break;
                }
              }
            }
          }
          return '';
        }
        getWhitespaceBetween(_0xf5bcb3, _0x23bbb2) {
          const _0x4d592d = this.text.slice(_0xf5bcb3.endIndex, _0x23bbb2.startIndex);
          return _0x4d592d;
        }
        getCurrentIndentation(_0x34581b) {
          const _0x1dadde = _0x34581b ?? this.currentNode;
          if (_0x1dadde) {
            return this.getNodeIndentation(_0x1dadde);
          }
          return '';
        }
        visitNode(_0x644229) {
          const _0x3d1d64 = this._document;
          this._currentNode = _0x644229;
          let _0x241f50 = true;
          switch (_0x644229.type) {
            case 'content':
              _0x241f50 = this.visitContent(_0x644229);
              break;
            case 'comment':
              _0x241f50 = this.visitComment(_0x644229);
              break;
            case 'section':
              _0x241f50 = this.visitSection(_0x644229);
              break;
            case 'directive':
              _0x241f50 = this.visitDirective(_0x644229);
              break;
            case 'definition':
              _0x241f50 = this.visitDefinition(_0x644229);
              break;
            case 'field':
              _0x241f50 = this.visitField(_0x644229);
              break;
            case 'options':
              _0x241f50 = this.visitOptions(_0x644229);
              break;
            case 'field_list':
              _0x241f50 = this.visitFieldList(_0x644229);
              break;
            case 'field_name':
              _0x241f50 = this.visitFieldName(_0x644229);
              break;
            case 'field_body':
              _0x241f50 = this.visitFieldBody(_0x644229);
              break;
            case 'line_block':
              _0x241f50 = this.visitLineBlock(_0x644229);
              break;
            case 'line':
              _0x241f50 = this.visitLine(_0x644229);
              break;
            case '|':
              _0x241f50 = this.visitPipe(_0x644229);
              break;
            case 'definition_list':
              _0x241f50 = this.visitDefinitionList(_0x644229);
              break;
            case 'bullet_list':
              _0x241f50 = this.visitBulletList(_0x644229);
              break;
            case 'list_item':
              _0x241f50 = this.visitListItem(_0x644229);
              break;
            case 'body':
              _0x241f50 = this.visitBody(_0x644229);
              break;
            case 'block_quote':
              _0x241f50 = this.visitBlockQuote(_0x644229);
              break;
            case 'arguments':
              _0x241f50 = this.visitArguments(_0x644229);
              break;
            case 'bullet':
              _0x241f50 = this.visitBullet(_0x644229);
              break;
            case 'type':
              _0x241f50 = this.visitType(_0x644229);
              break;
            case 'literal_block':
              _0x241f50 = this.visitLiteralBlock(_0x644229);
              break;
            case 'classifier':
              _0x241f50 = this.visitClassifier(_0x644229);
              break;
            case ':':
              _0x241f50 = this.visitColon(_0x644229);
              break;
            case '..':
              _0x241f50 = this.visitDirectiveIdentifier(_0x644229);
              break;
            case '::':
              _0x241f50 = this.visitDirectiveSeparator(_0x644229);
              break;
            case 'title':
              _0x241f50 = this.visitTitle(_0x644229);
              break;
            case 'adornment':
              _0x241f50 = this.visitAdornment(_0x644229);
              break;
            case 'text':
              _0x241f50 = this.visitText(_0x644229);
              break;
            case 'paragraph':
              _0x241f50 = this.visitParagraph(_0x644229);
              break;
            case 'literal':
              _0x241f50 = this.visitLiteral(_0x644229);
              break;
            case 'term':
              _0x241f50 = this.visitTerm(_0x644229);
              break;
            case 'standalone_hyperlink':
              _0x241f50 = this.visitStandaloneHyperlink(_0x644229);
              break;
            case 'reference':
              _0x241f50 = this.visitReference(_0x644229);
              break;
            case 'target':
              _0x241f50 = this.visitTarget(_0x644229);
              break;
            case 'name':
              _0x241f50 = this.visitName(_0x644229);
              break;
            case 'link':
              _0x241f50 = this.visitLink(_0x644229);
              break;
            case 'emphasis':
              _0x241f50 = this.visitEmphasis(_0x644229);
              break;
            case 'interpreted_text':
              _0x241f50 = this.visitInterpretedText(_0x644229);
              break;
            case 'strong':
              _0x241f50 = this.visitStrong(_0x644229);
              break;
            case 'role':
              _0x241f50 = this.visitRole(_0x644229);
              break;
            case 'doctest_block':
              _0x241f50 = this.visitDocTestBlock(_0x644229);
              break;
            case 'footnote':
              _0x241f50 = this.visitFootNote(_0x644229);
              break;
            case 'footnote_reference':
              _0x241f50 = this.visitFootNoteReference(_0x644229);
              break;
            case 'label':
              _0x241f50 = this.visitLabel(_0x644229);
              break;
            case 'enumerated_list':
              _0x241f50 = this.visitEnumeratedList(_0x644229);
              break;
            case 'citation':
              _0x241f50 = this.visitCitation(_0x644229);
              break;
            case 'citation_reference':
              _0x241f50 = this.visitCitationReference(_0x644229);
              break;
            case 'substitution':
              _0x241f50 = this.visitSubstitution(_0x644229);
              break;
            case 'substitution_definition':
              _0x241f50 = this.visitSubstitutionDefinition(_0x644229);
              break;
            case 'substitution_reference':
              _0x241f50 = this.visitSubstitutionReference(_0x644229);
              break;
            case 'ERROR':
              _0x241f50 = this.handleError(_0x644229);
              break;
            case ' ':
              _0x241f50 = this.visitSpace(' ');
              break;
            case 'transition':
              _0x241f50 = this.visitTransition(_0x644229);
              break;
            default:
              this.console.error(`Unknown node type: ${_0x644229.parent?.type}:${_0x644229.type}`);
              break;
          }
          this._previousNode = _0x644229;
          if (_0x241f50 && this._document === _0x3d1d64) {
            this.walkChildren(_0x644229);
          }
        }
        handleError(_0x54471f) {
          this._errors.push(_0x54471f);
          return false;
        }
        visitTransition(_0x4eba8f) {
          return true;
        }
        visitComment(_0x3c9d29) {
          return true;
        }
        visitSubstitution(_0x446ae5) {
          return true;
        }
        visitSubstitutionReference(_0x2794cc) {
          return true;
        }
        visitSubstitutionDefinition(_0x16d597) {
          return true;
        }
        visitCitation(_0x567bd3) {
          return true;
        }
        visitCitationReference(_0x21a21f) {
          return true;
        }
        visitField(_0x10e37c) {
          return true;
        }
        visitFieldList(_0x33033e) {
          return true;
        }
        visitOptions(_0x2622f9) {
          return true;
        }
        visitFieldName(_0x21a037) {
          return true;
        }
        visitFieldBody(_0x376784) {
          return true;
        }
        visitLineBlock(_0x4ee472) {
          return true;
        }
        visitLine(_0x3d805f) {
          return true;
        }
        visitPipe(_0x48dacd) {
          return true;
        }
        visitBlockQuote(_0x222b21) {
          return true;
        }
        visitEnumeratedList(_0x4a9b26) {
          return true;
        }
        visitLabel(_0x153d7d) {
          return true;
        }
        visitFootNoteReference(_0x38497d) {
          return true;
        }
        visitFootNote(_0x1bc0d5) {
          return true;
        }
        visitContent(_0x455581) {
          return true;
        }
        visitText(_0x1e6441) {
          return true;
        }
        visitDocTestBlock(_0x135316) {
          return true;
        }
        visitClassifier(_0x26608e) {
          return true;
        }
        visitColon(_0x12277f) {
          return true;
        }
        visitRole(_0x196ff4) {
          return true;
        }
        visitStrong(_0x2a2177) {
          return true;
        }
        visitInterpretedText(_0x4e3b60) {
          return true;
        }
        visitEmphasis(_0x4077c0) {
          return true;
        }
        visitLink(_0x4b584a) {
          return true;
        }
        visitName(_0x5f4c4c) {
          return true;
        }
        visitTarget(_0x11376d) {
          return true;
        }
        visitReference(_0x2c6c03) {
          return true;
        }
        visitStandaloneHyperlink(_0x1e8fd9) {
          return true;
        }
        visitLiteralBlock(_0x2b3090) {
          return true;
        }
        visitArguments(_0x557a27) {
          return true;
        }
        visitLiteral(_0xba51e8) {
          return true;
        }
        visitTerm(_0x23c74d) {
          return true;
        }
        visitType(_0x3f797b) {
          switch (_0x3f797b.parent?.type) {
            case 'directive':
              return this.visitDirectiveType(_0x3f797b);
              break;
            default:
              break;
          }
          return true;
        }
        visitDirective(_0xeb5100) {
          const _0x3dd6e8 = _0xeb5100.namedChildren.find(_0x2d213e => _0x2d213e.type === 'type')?.text;
          switch (_0x3dd6e8) {
            case 'figure':
            case 'image':
              return this.visitImageDirective(_0xeb5100);
            case 'contents':
              return this.visitTableOfContentsDirective(_0xeb5100);
            case 'code':
            case 'code-block':
            case 'sourcecode':
              return this.visitCodeBlockDirective(_0xeb5100);
            case 'versionadded':
              return this.visitVersionAddedDirective(_0xeb5100);
            case 'seealso':
              return this.visitSeeAlsoDirective(_0xeb5100);
            case 'list-table':
              return this.visitListTableDirective(_0xeb5100);
            default:
              return this.visitDefaultDirective(_0xeb5100, _0x3dd6e8);
          }
        }
        visitVersionAddedDirective(_0x5c1284) {
          return true;
        }
        visitListTableDirective(_0x596c1f) {
          return true;
        }
        visitSeeAlsoDirective(_0x36cec1) {
          return true;
        }
        visitDirectiveIdentifier(_0x58cb6e) {
          return true;
        }
        visitDirectiveSeparator(_0x14da16) {
          return true;
        }
        visitDefinition(_0xf48788) {
          return true;
        }
        visitBody(_0x353997) {
          return true;
        }
        visitBullet(_0x56e3b8) {
          return true;
        }
        visitBulletList(_0x53e96f) {
          return true;
        }
        visitDefinitionList(_0x1e8d03) {
          return true;
        }
        visitListItem(_0x54dc5e) {
          return true;
        }
        visitSection(_0x393ce3) {
          return true;
        }
        visitTitle(_0x2fae3e) {
          return true;
        }
        visitParagraph(_0x3de224) {
          return true;
        }
        visitDirectiveType(_0x4c0c73) {
          return true;
        }
        visitDefaultDirective(_0x6f6347, _0x583100) {
          return true;
        }
        visitImageDirective(_0x1712ae) {
          return true;
        }
        visitTableOfContentsDirective(_0x350585) {
          return true;
        }
        visitCodeBlockDirective(_0x5d0731) {
          return true;
        }
        walkChildren(_0x8e29fe) {
          if (_0x8e29fe.childCount > 0) {
            this.walkSiblings(_0x8e29fe.firstChild);
          }
        }
        walkSiblings(_0x3baba6) {
          const _0x2723a0 = this._document;
          while (_0x3baba6 && _0x2723a0 === this._document) {
            this.visitNode(_0x3baba6);
            this.walkWhitespace(_0x3baba6);
            _0x3baba6 = _0x3baba6.nextSibling;
          }
        }
        walkWhitespace(_0x434c64) {
          if (_0x434c64 && _0x434c64.nextSibling && _0x434c64.nextSibling.startIndex > _0x434c64.endIndex) {
            const _0xe7874c = this.text.slice(_0x434c64.endIndex, _0x434c64.nextSibling.startIndex);
            let _0xde19b9 = '';
            let _0xa73836 = false;
            const _0x190373 = _0x32ec24 => {
              if (_0x32ec24.length > 0) {
                if (_0xa73836) {
                  this.visitIndent(_0x32ec24);
                } else {
                  this.visitSpace(_0x32ec24);
                }
              }
              _0xa73836 = false;
            };
            for (let _0x4bf1a8 = 0; _0x4bf1a8 < _0xe7874c.length; _0x4bf1a8++) {
              if (_0xe7874c[_0x4bf1a8] === '\n') {
                const _0x1f2d6c = _0xa73836;
                _0x190373(_0xde19b9);
                this.visitLineFeed(_0x1f2d6c);
                _0xa73836 = true;
                _0xde19b9 = '';
              } else {
                _0xde19b9 += _0xe7874c[_0x4bf1a8];
              }
            }
            _0x190373(_0xde19b9);
          }
        }
        findSiblingOfType(_0x16861e, _0x2f3599) {
          while (_0x16861e) {
            if (_0x16861e.type === _0x2f3599) {
              return _0x16861e;
            }
            _0x16861e = _0x16861e.nextSibling;
          }
          return undefined;
        }
        findParent(_0x24df4a, _0xdd3b9b) {
          let _0x394f57 = _0x24df4a.parent;
          while (_0x394f57) {
            if (_0xdd3b9b(_0x394f57)) {
              return _0x394f57;
            }
            _0x394f57 = _0x394f57.parent;
          }
          return undefined;
        }
        findPreviousSection(_0x4f0445) {
          var _0x44b198;
          let _0x130f35 = _0x4f0445;
          while (_0x130f35 && _0x130f35.parent?.id !== ((_0x44b198 = this._document) === null || _0x44b198 === undefined ? undefined : _0x44b198.rootNode.id)) {
            _0x130f35 = _0x130f35.parent;
          }
          while (_0x130f35) {
            if (_0x130f35.type === 'transition') {
              return undefined;
            }
            if (_0x130f35.type === 'section') {
              return _0x130f35;
            }
            _0x130f35 = _0x130f35.previousSibling;
          }
          return undefined;
        }
        findFirstDescendantWithType(_0x4cb433, _0x103e76) {
          return this.findFirstDescendant(_0x4cb433, _0x2af6ed => _0x2af6ed.type === _0x103e76);
        }
        findMatchingDescendants(_0x331985, _0x37aeb4, _0x1be90d = 100) {
          const _0x18931c = _0x331985 ? _0x331985.children.map(_0x110d4c => ({
            node: _0x110d4c,
            depth: 0
          })) : [];
          const _0x48a12b = [];
          let _0x225b36 = 0;
          while (_0x18931c.length > 0 && _0x225b36 <= _0x1be90d) {
            const _0x3ed1a8 = _0x18931c.shift();
            if (_0x3ed1a8) {
              if (_0x37aeb4(_0x3ed1a8.node)) {
                _0x48a12b.push(_0x3ed1a8.node);
              }
              for (const _0x100375 of _0x3ed1a8.node.children) {
                _0x18931c.push({
                  node: _0x100375,
                  depth: _0x3ed1a8.depth + 1
                });
              }
              _0x225b36 = _0x3ed1a8.depth;
            }
          }
          return _0x48a12b;
        }
        findFirstDescendant(_0x2d8c92, _0x1c3863) {
          const _0x512b15 = _0x2d8c92 ? [..._0x2d8c92.children] : [];
          while (_0x512b15.length > 0) {
            const _0x1bcac4 = _0x512b15.shift();
            if (_0x1bcac4) {
              if (_0x1c3863(_0x1bcac4)) {
                return _0x1bcac4;
              }
              for (const _0x2b357e of _0x1bcac4.children) {
                _0x512b15.push(_0x2b357e);
              }
            }
          }
          return undefined;
        }
        visitAdornment(_0x1ccd47) {
          return true;
        }
        visitLineFeed(_0x35c137) {
          return true;
        }
        visitSpace(_0x38e955) {
          return true;
        }
        visitIndent(_0x196762) {
          return true;
        }
      }
      exports.BaseWalker = _0x42ab17;
    },
    17189: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Fixer = undefined;
      const _0xdb77f1 = require(17490);
      const _0x7c15ea = require(62104);
      const _0x25e5d1 = require(40804);
      const _0x39f86b = require(36984);
      const _0x551612 = /@(brief|anchor|type|param|rtype|return)\s+/;
      class _0x215493 extends _0xdb77f1.BaseWalker {
        constructor(_0x458ee7, _0x525298) {
          super(_0x525298);
          this._parser = _0x458ee7;
          this._insideErrorNode = '';
          this._currentFieldList = '';
          this._paramToTypeName = new Map();
          this._varToTypeName = new Map();
          this._returnTypes = [];
          this._rewalkDepth = 0;
        }
        static fix(_0x5401ba, _0x50c7c4, _0x853670) {
          try {
            const _0x27bc49 = _0x7c15ea.fixupGoogleDoc(_0x5401ba);
            const _0xbf86c = _0x39f86b.fixupCommonMarkdownLiterals(_0x27bc49);
            const _0x842cc5 = _0x50c7c4.parse(_0xbf86c, _0x853670);
            if (_0x842cc5) {
              const _0x45e1ee = new _0x215493(_0x50c7c4, _0x853670);
              _0x45e1ee.walk(_0x842cc5);
              return _0x45e1ee.text;
            }
          } catch (_0x2fa831) {
            _0x853670.error(`Error fixing docstring: ${_0x2fa831}`);
          }
          return _0x5401ba;
        }
        visitFieldList(_0x4e1830) {
          var _0x30ee1b;
          var _0x264db8;
          var _0x5fd792;
          const _0x560b50 = _0x4e1830.nextNamedSibling;
          if (_0x560b50?.type === 'field_list') {
            const _0x27077f = this.text.slice(_0x4e1830.endIndex, _0x560b50.startIndex);
            if (_0x27077f.trim().length === 0) {
              const _0x2e7d6b = this.text.slice(0, _0x4e1830.endIndex) + '\n' + this.text.slice(_0x560b50.startIndex);
              this.rewalk(_0x2e7d6b);
              return false;
            }
          }
          if (_0x560b50?.type === 'paragraph' && this.getCurrentIndentation(_0x4e1830) === this.getCurrentIndentation(_0x560b50) && this.getWhitespaceBetween(_0x4e1830, _0x560b50).split('\n').length === 2) {
            const _0x345bb2 = _0x560b50.text.split('\n');
            const _0x2d732b = [];
            let _0x3c4190 = false;
            for (const _0xac7b8 of _0x345bb2) {
              if (_0xac7b8.trim().startsWith(':') || _0x3c4190) {
                _0x2d732b.push(_0xac7b8);
                _0x3c4190 = true;
              } else {
                _0x2d732b.push(`   ${_0xac7b8}`);
              }
            }
            const _0x30e6c6 = this.getNodeIndentation(_0x4e1830);
            _0x2d732b[0] = _0x30e6c6 + '    ' + _0x2d732b[0];
            this._replaceNodeAndRewalk(_0x560b50, _0x2d732b);
            return false;
          }
          const _0x2c7421 = this.findMatchingDescendants(_0x4e1830, _0x232420 => _0x232420.type === 'field_name', 2);
          const _0x370495 = _0x2c7421.map(_0xffd935 => _0xffd935.text);
          let _0xb9457c = false;
          let _0x10eb24 = false;
          let _0x3ebed6 = false;
          let _0x1580bf = false;
          let _0x3e2500 = false;
          if (_0x370495.some(_0x3080d4 => _0x3080d4.startsWith('param') || _0x3080d4.startsWith('type'))) {
            const _0x3cb46f = this.findFirstDescendant(this.root, _0x1d8a67 => {
              return _0x1d8a67.type === 'section' && _0x39f86b.isParameters(_0x1d8a67?.firstChild?.text || '');
            });
            _0xb9457c = !_0x3cb46f;
            _0x1580bf = true;
          }
          if (_0x370495.some(_0x25588b => _0x25588b.startsWith('return'))) {
            const _0x510fa8 = this.findFirstDescendant(this.root, _0x11ab64 => {
              return _0x11ab64.type === 'section' && _0x39f86b.isReturns(_0x11ab64?.firstChild?.text || '');
            });
            _0x10eb24 = !_0x510fa8;
            _0x1580bf = true;
          }
          if (_0x370495.some(_0x26eb80 => _0x26eb80.startsWith('raise'))) {
            const _0x31350b = this.findFirstDescendant(this.root, _0x347960 => {
              return _0x347960.type === 'section' && _0x39f86b.isRaises(_0x347960?.firstChild?.text || '');
            });
            _0x3ebed6 = !_0x31350b;
            _0x1580bf = true;
          }
          if (_0x370495.some(_0x270226 => _0x270226.startsWith('var') || _0x270226.startsWith('vartype'))) {
            const _0x2d7bd1 = this.findFirstDescendant(this.root, _0x2c3882 => {
              return _0x2c3882.type === 'section' && _0x39f86b.isVar(_0x2c3882?.firstChild?.text || '');
            });
            _0x3e2500 = !_0x2d7bd1;
            _0x1580bf = true;
          }
          if (_0x1580bf && this._currentFieldList !== _0x4e1830.text) {
            this._currentFieldList = _0x4e1830.text;
            const _0x4e251d = [];
            if (_0xb9457c) {
              _0x4e251d.push('');
              _0x4e251d.push('Parameters');
              _0x4e251d.push('----------');
              _0x4e251d.push('');
            }
            const _0x270994 = _0x2c7421.filter(_0x571b8e => _0x571b8e.text.startsWith('type'));
            for (const _0x4e7311 of _0x270994) {
              const _0xfe0367 = ((_0x30ee1b = _0x4e7311.nextNamedSibling) === null || _0x30ee1b === undefined ? undefined : _0x30ee1b.text.replace(/\n\s+/g, ' ')) || _0x25e5d1.EmptyClassifier;
              const _0x3976e2 = this._splitField(_0x4e7311.text).name;
              this._paramToTypeName.set(_0x3976e2, _0xfe0367);
            }
            const _0x33ad20 = _0x2c7421.filter(_0x5c1cb4 => _0x5c1cb4.text.startsWith('rtype'));
            for (const _0x3f26cb of _0x33ad20) {
              const _0x9bbaa = ((_0x264db8 = _0x3f26cb.nextNamedSibling) === null || _0x264db8 === undefined ? undefined : _0x264db8.text.replace(/\n\s+/g, ' ')) || _0x25e5d1.EmptyClassifier;
              this._returnTypes.push(_0x9bbaa);
            }
            const _0x4f2cbd = (_0x758fe7, _0x77fb8f, _0x4b388) => {
              _0x4e251d.push(_0x758fe7 + ' : ' + _0x77fb8f);
              const _0x15bced = (_0x4b388 === null || _0x4b388 === undefined ? undefined : _0x4b388.text.split('\n')) || [];
              let _0x1a9e60 = _0x15bced[0];
              let _0x4aa3d1 = false;
              let _0x33e54d = '';
              for (let _0x4037c3 = 1; _0x4037c3 < _0x15bced.length; _0x4037c3++) {
                const _0x4c6eba = _0x15bced[_0x4037c3];
                if (_0x4c6eba.trim().length > 0 && !_0x4aa3d1) {
                  _0x1a9e60 += ` ${_0x4c6eba.trimStart()}`;
                  _0x33e54d = _0x4c6eba.slice(0, _0x4c6eba.search(/\S/));
                } else {
                  if (!_0x4aa3d1) {
                    _0x1a9e60 += '\n';
                    _0x4aa3d1 = true;
                    _0x33e54d = _0x33e54d.length >= 0 ? _0x33e54d : _0x39f86b.medianIndent(_0x15bced.slice(_0x4037c3 + 1));
                  } else {
                    _0x1a9e60 += `
${_0x4c6eba}`;
                  }
                }
              }
              _0x4e251d.push(`${_0x33e54d.length > 0 ? _0x33e54d : '    '}${_0x1a9e60 || ''}`);
            };
            const _0x57e84b = _0x2c7421.filter(_0xc6fbfb => _0xc6fbfb.text.startsWith('param') || _0xc6fbfb.text.startsWith('arg'));
            for (const _0x54804e of _0x57e84b) {
              const _0x26bae6 = this._splitField(_0x54804e.text);
              const _0x17eaf2 = _0x26bae6.name;
              const _0x4f700c = _0x26bae6.type !== _0x25e5d1.EmptyClassifier ? _0x26bae6.type : this._paramToTypeName.get(_0x17eaf2) || _0x25e5d1.EmptyClassifier;
              _0x4f2cbd(_0x17eaf2, _0x4f700c, _0x54804e.nextNamedSibling);
            }
            if (_0x10eb24) {
              _0x4e251d.push('');
              _0x4e251d.push('Returns');
              _0x4e251d.push('-------');
              _0x4e251d.push('');
            }
            const _0x5b557c = _0x2c7421.filter(_0x21f6be => _0x21f6be.text.startsWith('return'));
            for (const _0x138880 of _0x5b557c) {
              const _0x2b261f = this._splitField(_0x138880.text);
              const _0x433fb8 = _0x2b261f.type !== _0x25e5d1.EmptyClassifier ? _0x2b261f.type : this._returnTypes.shift() || _0x25e5d1.EmptyClassifier;
              const _0x463bce = _0x433fb8 === _0x25e5d1.EmptyClassifier ? 'out' : _0x433fb8;
              _0x4f2cbd(_0x463bce, _0x25e5d1.EmptyClassifier, _0x138880.nextNamedSibling);
            }
            if (_0x3ebed6) {
              _0x4e251d.push('');
              _0x4e251d.push('Raises');
              _0x4e251d.push('------');
              _0x4e251d.push('');
            }
            const _0x462794 = _0x2c7421.filter(_0x2a34fc => _0x2a34fc.text.startsWith('raise'));
            for (const _0x106235 of _0x462794) {
              const _0x4276fc = this._splitField(_0x106235.text);
              _0x4f2cbd(_0x4276fc.name, _0x4276fc.type, _0x106235.nextNamedSibling);
            }
            if (_0x3e2500) {
              _0x4e251d.push('');
              _0x4e251d.push('Attributes');
              _0x4e251d.push('----');
              _0x4e251d.push('');
            }
            const _0x30d5bf = _0x2c7421.filter(_0x2828f3 => _0x2828f3.text.startsWith('vartype'));
            for (const _0x4fc154 of _0x30d5bf) {
              const _0x6861c2 = ((_0x5fd792 = _0x4fc154.nextNamedSibling) === null || _0x5fd792 === undefined ? undefined : _0x5fd792.text.replace(/\n\s+/g, ' ')) || _0x25e5d1.EmptyClassifier;
              const _0x4c90fb = this._splitField(_0x4fc154.text).name;
              this._varToTypeName.set(_0x4c90fb, _0x6861c2);
            }
            const _0xf9131c = _0x2c7421.filter(_0x369331 => _0x369331.text.startsWith('var '));
            for (const _0x4225af of _0xf9131c) {
              const _0x32f7a6 = this._splitField(_0x4225af.text);
              const _0x49b189 = _0x32f7a6.name;
              const _0x7bfd46 = _0x32f7a6.type !== _0x25e5d1.EmptyClassifier ? _0x32f7a6.type : this._varToTypeName.get(_0x49b189) || _0x25e5d1.EmptyClassifier;
              _0x4f2cbd(_0x49b189, _0x7bfd46, _0x4225af.nextNamedSibling);
            }
            this._replaceNodeAndRewalk(_0x4e1830, _0x4e251d);
            return false;
          }
          return true;
        }
        visitDefinitionList(_0xee4ec7) {
          if (_0x551612.test(_0xee4ec7.text)) {
            this._fixEpytextParagraph(_0xee4ec7);
            return false;
          }
          return true;
        }
        visitListItem(_0x307c8a) {
          const _0x4e957a = _0x307c8a.firstChild;
          switch (_0x4e957a?.type) {
            case 'term':
              {
                return this.visitTermListItem(_0x4e957a);
              }
            default:
              break;
          }
          return true;
        }
        visitClassifier(_0x3feddd) {
          if (_0x3feddd.text.includes('\n') && !_0x3feddd.text.includes(_0x25e5d1.EmptyDefinitionDirective)) {
            const _0x5b8196 = this.getNodeIndentation(_0x3feddd);
            this._replaceNodeAndRewalk(_0x3feddd, [_0x3feddd.text.replace(/\n/, `
${_0x5b8196}    ${_0x25e5d1.EmptyDefinitionDirective}
`)]);
            return false;
          } else {
            if (this.text.slice(_0x3feddd.endIndex).trim().length === 0 && !_0x3feddd.text.endsWith(_0x25e5d1.EmptyDefinitionDirective)) {
              const _0x47c04a = this.getNodeIndentation(_0x3feddd);
              this._insertAfterNodeAndRewalk(_0x3feddd, [`
${_0x47c04a}    ${_0x25e5d1.EmptyDefinitionDirective}`]);
              return false;
            }
          }
          return true;
        }
        visitTermListItem(_0x186782) {
          if (_0x186782.text.includes('\n') && !_0x186782.text.includes(_0x25e5d1.EmptyDefinitionDirective)) {
            const _0x105362 = this.getNodeIndentation(_0x186782);
            this._replaceNodeAndRewalk(_0x186782, [_0x186782.text.replace(/\n/, `
${_0x105362}    ${_0x25e5d1.EmptyDefinitionDirective}
`)]);
            return false;
          }
          return true;
        }
        visitListTableDirective(_0x3302e1) {
          const _0x2191d1 = /:header-rows:\s*(\d+)/.exec(_0x3302e1.text);
          const _0x382fc5 = _0x2191d1 ? parseInt(_0x2191d1[1]) : 1;
          const _0x446b27 = /:widths:\s*(.*)/.exec(_0x3302e1.text);
          const _0x26f13c = _0x446b27 ? _0x446b27[1].split(' ').map(_0x523882 => parseInt(_0x523882)) : [];
          const _0x1c1984 = this.findFirstDescendantWithType(_0x3302e1, 'body');
          const _0x10a5ea = this.findFirstDescendantWithType(_0x1c1984, 'content');
          if (_0x10a5ea && _0x26f13c.length > 0) {
            const _0x173ec6 = _0x10a5ea.text.split('\n').map(_0x1067e7 => _0x1067e7.trim());
            const _0x35f180 = [];
            let _0x19c0c8 = '| ';
            let _0x2cb370 = '';
            let _0x1749f5 = 0;
            const _0x8076de = _0x3fd76b => {
              const _0x3da6d9 = _0x26f13c[_0x1749f5] ?? 1;
              _0x19c0c8 = `${_0x19c0c8}${_0x2cb370.padEnd(_0x3da6d9)} | `;
              _0x2cb370 = _0x3fd76b;
              _0x1749f5++;
            };
            const _0x3d4ff0 = () => {
              if (_0x19c0c8.length > 2 || _0x2cb370.length > 0) {
                _0x8076de('');
                _0x35f180.push(_0x19c0c8);
              }
              _0x19c0c8 = '| ';
              _0x1749f5 = 0;
            };
            for (let _0x49e25c = 0; _0x49e25c < _0x173ec6.length; _0x49e25c++) {
              const _0x16dc7a = _0x173ec6[_0x49e25c];
              if (_0x16dc7a.startsWith('* -')) {
                _0x3d4ff0();
                _0x2cb370 = _0x16dc7a.slice(3).trim();
              } else {
                if (_0x16dc7a.startsWith('-')) {
                  _0x8076de(_0x16dc7a.slice(1).trim());
                }
              }
            }
            _0x3d4ff0();
            const _0x5a1fd5 = `+${_0x26f13c.map(_0x5cfb9c => '-'.repeat(_0x5cfb9c + 2)).join('+')}+`;
            const _0x43ad81 = `+${_0x26f13c.map(_0x403071 => '='.repeat(_0x403071 + 2)).join('+')}+`;
            const _0x1153fc = [];
            for (let _0x51d113 = 0; _0x51d113 < _0x35f180.length; _0x51d113++) {
              const _0x39b0fc = _0x35f180[_0x51d113];
              if (_0x51d113 !== _0x382fc5) {
                _0x1153fc.push(_0x5a1fd5);
                _0x1153fc.push(_0x39b0fc);
              } else {
                if (_0x51d113 === _0x382fc5) {
                  _0x1153fc.push(_0x43ad81);
                  _0x1153fc.push(_0x39b0fc);
                } else {
                  _0x1153fc.push(_0x39b0fc);
                }
              }
            }
            _0x1153fc.push(_0x5a1fd5);
            this._replaceNodeAndRewalk(_0x3302e1, _0x1153fc);
            return false;
          }
          return true;
        }
        visitDirective(_0x12148a) {
          const _0x1c3bc4 = _0x12148a.text.split('\n');
          if (_0x1c3bc4.slice(1).some(_0x598991 => /^\s+\.\. /.test(_0x598991))) {
            const _0x3c5ef1 = this.findFirstDescendantWithType(_0x12148a, 'directive');
            if (!_0x3c5ef1) {
              const _0x57a59f = _0x1c3bc4.map(_0x80528a => /^\s+\.\. /.test(_0x80528a) ? _0x80528a.trim() : _0x80528a);
              this._replaceNodeAndRewalk(_0x12148a, _0x57a59f);
              return false;
            }
          }
          return super.visitDirective(_0x12148a);
        }
        visitParagraph(_0x4781f5) {
          if (_0x551612.test(_0x4781f5.text)) {
            this._fixEpytextParagraph(_0x4781f5);
            return false;
          }
          if (_0x4781f5.text.startsWith('$ ') && _0x4781f5.text.split('\n').length === 1) {
            const _0x37c48b = this.text.slice(0, _0x4781f5.startIndex) + '.. code-block:: bash\n   ' + this.text.slice(_0x4781f5.startIndex + 1);
            this.rewalk(_0x37c48b);
            return false;
          }
          if (/\s+\w+\s*\(.*?\):/.test(_0x4781f5.text) && this.getCurrentIndentation(_0x4781f5).length !== 0 && this.findParent(_0x4781f5, _0x293840 => _0x293840.type.includes('list')) === undefined) {
            this._replaceNodeAndRewalk(_0x4781f5, [_0x4781f5.text.replace(/\):/g, ') :')]);
            return false;
          }
          if (_0x4781f5.text.trim().endsWith(':') && this.getCurrentIndentation(_0x4781f5).length === 0 && !_0x4781f5.text.endsWith('::') && _0x4781f5.nextNamedSibling?.type === 'block_quote') {
            this._replaceNodeAndRewalk(_0x4781f5, [_0x4781f5.text + ':']);
            return false;
          }
          if ((_0x4781f5.text.includes('\n>>>') || _0x4781f5.text.includes('\n.. ')) && this.getCurrentIndentation(_0x4781f5).length === 0) {
            const _0x3d12da = _0x4781f5.text.split('\n');
            let _0xccfa88 = false;
            const _0x42780d = [];
            for (let _0x5903de = 0; _0x5903de < _0x3d12da.length; _0x5903de++) {
              const _0x45361f = _0x3d12da[_0x5903de];
              if ((_0x45361f.startsWith('>>>') || _0x45361f.startsWith('.. ')) && _0x5903de > 0 && _0x3d12da[_0x5903de - 1].trim().length > 0) {
                _0x42780d.push('');
                _0x42780d.push(_0x45361f);
                _0xccfa88 = true;
              } else {
                _0x42780d.push(_0x45361f);
              }
            }
            if (_0xccfa88) {
              this._replaceNodeAndRewalk(_0x4781f5, _0x42780d);
              return false;
            }
          }
          return true;
        }
        rewalk(_0x2ae9dc) {
          this._rewalkDepth += 1;
          if (this._rewalkDepth <= 30) {
            const _0x5782fe = this._parser.parse(_0x2ae9dc, this.console);
            if (_0x5782fe) {
              this.walk(_0x5782fe);
            }
          }
        }
        handleError(_0x29218e) {
          var _0x187d4c;
          if (this._insideErrorNode === _0x29218e.text) {
            return false;
          }
          this._insideErrorNode = _0x29218e.text;
          if (_0x29218e.namedChildren.some(_0x4e21d2 => _0x4e21d2.type === 'list_item')) {
            const _0x2338d4 = _0x29218e.namedChildren.filter(_0x59ffae => _0x59ffae.type === 'list_item');
            for (const _0x126032 of _0x2338d4) {
              const _0x4972d2 = _0x126032.previousNamedSibling;
              if (_0x126032 && _0x4972d2) {
                const _0x2e13a0 = this.getNodeIndentation(_0x126032);
                const _0x3756cb = this.getNodeIndentation(_0x4972d2);
                const _0x2b5389 = this.text.slice(_0x4972d2.endIndex, _0x126032.startIndex);
                if (_0x2e13a0.length > 0 && _0x2e13a0.length !== _0x3756cb.length && _0x2b5389.split('\n').length > 2) {
                  this._insertAfterNodeAndRewalk(_0x4972d2, ['::']);
                  return false;
                }
              }
            }
            if (_0x29218e.lastNamedChild && _0x29218e.endIndex > _0x29218e.lastNamedChild.endIndex && _0x29218e.lastNamedChild.type === 'list_item' && !_0x29218e.text.includes('\n\n')) {
              const _0x592378 = this.getNodeIndentation(_0x29218e.lastChild);
              const _0x3cf6c9 = `${this.text.slice(0, _0x29218e.endIndex)}
${_0x592378}    ${_0x25e5d1.EmptyDefinitionDirective}
`;
              this.rewalk(_0x3cf6c9);
              return false;
            }
          }
          if (((_0x187d4c = this.previousNode) === null || _0x187d4c === undefined ? undefined : _0x187d4c.text.endsWith(':')) && !this.previousNode.text.endsWith('::')) {
            const _0x57eecc = this.text.slice(0, this.previousNode.endIndex) + ':' + this.text.slice(this.previousNode.endIndex);
            this.rewalk(_0x57eecc);
            return false;
          }
          return true;
        }
        visitSeeAlsoDirective(_0x36025a) {
          return this.visitDefaultDirective(_0x36025a, 'seealso');
        }
        visitVersionAddedDirective(_0x55f347) {
          return this.visitDefaultDirective(_0x55f347, 'versionadded');
        }
        visitDefaultDirective(_0x5afc7a, _0x12d2aa) {
          const _0xdfbd81 = this.getCurrentIndentation(_0x5afc7a);
          const _0x272ebb = _0x5afc7a.namedChildren.find(_0x5b807c => _0x5b807c.type === 'body');
          const _0x42d51c = (_0x272ebb === null || _0x272ebb === undefined ? undefined : _0x272ebb.namedChildren.length) === 1 && _0x272ebb.namedChildren[0].type === 'content';
          if (_0x42d51c && !_0x5afc7a.text.includes(_0x25e5d1.ChildFieldMarker)) {
            const _0x533ca3 = _0x5afc7a.text.split('\n');
            const _0x2dce3e = _0x39f86b.medianIndent(_0x533ca3.slice(1));
            const _0x3a91d8 = [];
            for (let _0x40b869 = 0; _0x40b869 < _0x533ca3.length; _0x40b869++) {
              const _0x5860f6 = _0x533ca3[_0x40b869];
              if (_0x40b869 === 0) {
                _0x3a91d8.push(_0x5860f6);
                _0x3a91d8.push(`${_0xdfbd81}${_0x2dce3e}:${_0x25e5d1.ChildFieldMarker}:  `);
              } else {
                _0x3a91d8.push(`${_0x2dce3e}${_0x5860f6}`);
              }
            }
            this._replaceNodeAndRewalk(_0x5afc7a, _0x3a91d8);
            return false;
          }
          return true;
        }
        _insertAfterNodeAndRewalk(_0x2e626a, _0x34f7d1) {
          const _0x450945 = this.text.slice(0, _0x2e626a.endIndex) + _0x34f7d1.join('\n') + this.text.slice(_0x2e626a.endIndex);
          this.rewalk(_0x450945);
        }
        _replaceNodeAndRewalk(_0x44aa1e, _0x47d75f) {
          const _0x50cdec = _0x47d75f.join('\n');
          const _0x398538 = this.text.slice(0, _0x44aa1e.startIndex) + _0x50cdec + this.text.slice(_0x44aa1e.endIndex);
          this.rewalk(_0x398538);
        }
        _fixEpytextParagraph(_0xfd4c2a) {
          const _0x21bd03 = _0xfd4c2a.text.split('\n');
          const _0x46fe2d = [];
          const _0x13417f = new Map();
          let _0x192b9e = '';
          for (const _0x33db6c of _0x21bd03) {
            if (_0x33db6c.startsWith('@brief')) {
              _0x46fe2d.push('');
              _0x46fe2d.push(_0x33db6c.slice(6).trim());
              _0x46fe2d.push('');
            } else {
              if (_0x33db6c.startsWith('@anchor')) {
                const _0x2ef3e5 = _0x33db6c.slice(7).trim();
                _0x46fe2d.push(_0x2ef3e5);
                _0x46fe2d.push('='.repeat(_0x2ef3e5.length));
              } else {
                if (_0x33db6c.startsWith('@type')) {
                  const _0x3b0a41 = /^@type\s+(\w+)\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                  if (_0x3b0a41) {
                    _0x13417f.set(_0x3b0a41[1], _0x3b0a41[2]);
                  }
                } else {
                  if (_0x33db6c.startsWith('@param')) {
                    const _0x104331 = /^@param\s+(\w+)\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                    if (_0x104331) {
                      _0x46fe2d.push(`:param ${_0x104331[1]}: ${_0x104331[2]}`);
                      const _0x30d3c1 = _0x13417f.get(_0x104331[1]);
                      if (_0x30d3c1) {
                        _0x46fe2d.push(`:type ${_0x104331[1]}: ${_0x30d3c1}`);
                      }
                    }
                    const _0x15b824 = /^@param\s+('.*')\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                    if (_0x15b824) {
                      const _0x56738d = _0x15b824[1].split(' or ').map(_0x5e121c => _0x5e121c.trim());
                      const _0x345d49 = [];
                      let _0x4eaeb9 = '';
                      for (const _0x2f46b2 of _0x56738d) {
                        const _0xdd4b33 = /^'(\w+):(.*)'$/.exec(_0x2f46b2);
                        if (_0xdd4b33) {
                          _0x4eaeb9 = _0xdd4b33[1];
                          _0x345d49.push(_0xdd4b33[2]);
                        }
                      }
                      _0x46fe2d.push(`:param ${_0x4eaeb9}: ${_0x15b824[2]}`);
                      if (_0x345d49.length > 0) {
                        _0x46fe2d.push(`:type ${_0x4eaeb9}: ${_0x345d49.join(' or ')}`);
                      }
                    }
                  } else {
                    if (_0x33db6c.startsWith('@rtype')) {
                      const _0x1140d0 = /^@rtype\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                      if (_0x1140d0) {
                        _0x192b9e = _0x1140d0[1];
                      }
                    } else {
                      if (_0x33db6c.startsWith('@return')) {
                        const _0x427edc = /^@return\w*\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                        if (_0x427edc) {
                          _0x46fe2d.push(`:returns: ${_0x427edc[1]}`);
                          _0x46fe2d.push(`:rtype: ${_0x192b9e}`);
                        }
                        const _0x1b18a5 = /^@return\s+'(\w+)'\s*:\s*(.*)\s*$/.exec(_0x33db6c);
                        if (_0x1b18a5) {
                          _0x46fe2d.push(`:returns: ${_0x1b18a5[2]}`);
                          _0x46fe2d.push(`:rtype: ${_0x1b18a5[1]}`);
                        }
                      } else {
                        _0x46fe2d.push(_0x33db6c);
                      }
                    }
                  }
                }
              }
            }
          }
          this._replaceNodeAndRewalk(_0xfd4c2a, _0x46fe2d);
        }
        _splitField(_0x1bee06) {
          if (_0x1bee06.startsWith('return')) {
            const _0x556ceb = _0x1bee06.match(/^(\w+)\s*(.*)$/);
            if (_0x556ceb) {
              return {
                name: 'out',
                type: _0x556ceb[2] || _0x25e5d1.EmptyClassifier
              };
            }
          }
          if (_0x1bee06.startsWith('raise')) {
            const _0x2def0f = _0x1bee06.match(/^(\w+)\s*(.*)$/);
            if (_0x2def0f) {
              return {
                name: _0x2def0f[2] || '',
                type: _0x25e5d1.EmptyClassifier
              };
            }
          }
          const _0x31b41d = _0x1bee06.match(/^(\w+)\s*(.*)\s+(\S+)$/);
          if (_0x31b41d) {
            return {
              name: _0x31b41d[3],
              type: _0x31b41d[2] || _0x25e5d1.EmptyClassifier
            };
          }
          return {
            name: '',
            type: _0x25e5d1.EmptyClassifier
          };
        }
      }
      exports.Fixer = _0x215493;
    },
    99800: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Docstring = exports.DocstringTodo = exports.DocstringExample = exports.DocstringDeprecated = exports.DocstringRaises = exports.DocstringReturns = exports.DocstringParam = exports.DocstringMeta = exports.RenderingStyle = exports.DocstringStyle = exports.ParseError = exports.TODO_KEYWORDS = exports.EXAMPLES_KEYWORDS = exports.YIELDS_KEYWORDS = exports.RETURNS_KEYWORDS = exports.DEPRECATION_KEYWORDS = exports.RAISES_KEYWORDS = exports.PARAM_KEYWORDS = undefined;
      exports.title = _0xeebb50;
      exports.splitWithLimit = _0x3ef833;
      exports.matchAll = _0x531be5;
      exports.trimLineFeeds = _0x27d95b;
      exports.PARAM_KEYWORDS = new Set(['param', 'parameter', 'arg', 'argument', 'attribute', 'key', 'keyword']);
      exports.RAISES_KEYWORDS = new Set(['raises', 'raise', 'except', 'exception']);
      exports.DEPRECATION_KEYWORDS = new Set(['deprecation', 'deprecated']);
      exports.RETURNS_KEYWORDS = new Set(['return', 'returns']);
      exports.YIELDS_KEYWORDS = new Set(['yield', 'yields']);
      exports.EXAMPLES_KEYWORDS = new Set(['example', 'examples']);
      exports.TODO_KEYWORDS = new Set(['todo', 'todos']);
      class _0x4c57f0 extends Error {}
      exports.ParseError = _0x4c57f0;
      var _0x1211b2;
      (function (_0x265b2a) {
        _0x265b2a[_0x265b2a.REST = 1] = 'REST';
        _0x265b2a[_0x265b2a.GOOGLE = 2] = 'GOOGLE';
        _0x265b2a[_0x265b2a.NUMPYDOC = 3] = 'NUMPYDOC';
        _0x265b2a[_0x265b2a.EPYDOC = 4] = 'EPYDOC';
        _0x265b2a[_0x265b2a.AUTO = 255] = 'AUTO';
      })(_0x1211b2 || (exports.DocstringStyle = _0x1211b2 = {}));
      var _0x1e484b;
      (function (_0x469631) {
        _0x469631[_0x469631.COMPACT = 1] = 'COMPACT';
        _0x469631[_0x469631.CLEAN = 2] = 'CLEAN';
        _0x469631[_0x469631.EXPANDED = 3] = 'EXPANDED';
      })(_0x1e484b || (exports.RenderingStyle = _0x1e484b = {}));
      class _0x318bfb {
        constructor(_0x147973, _0x1980e3, _0x587cac, _0x3dfb30) {
          this.kind = _0x147973;
          this.args = _0x1980e3;
          this.description = _0x587cac;
          this.unknown = _0x3dfb30;
        }
        get section() {
          return _0xeebb50(this.args[0]) || 'Unknown';
        }
      }
      exports.DocstringMeta = _0x318bfb;
      class _0x43da22 extends _0x318bfb {
        constructor(_0x4227b7, _0x581b0a, _0x5370c0, _0x2188fa, _0x47da2a, _0x92a53b, _0x295446, _0x4c89e3) {
          super(1, _0x4227b7, _0x581b0a, _0x295446);
          this.argName = _0x5370c0;
          this.typeName = _0x2188fa;
          this.isOptional = _0x47da2a;
          this.defaultValue = _0x92a53b;
          this.sectionTitle = _0x4c89e3;
        }
        get section() {
          if (this.sectionTitle) {
            return this.sectionTitle;
          }
          const _0x25d4ff = this.args[0];
          switch (_0x25d4ff) {
            case 'param':
              return 'Parameters';
            case 'arg':
              return 'Args';
            case 'attribute':
              return 'Attributes';
            default:
              return _0xeebb50(_0x25d4ff) || 'Unknown';
          }
        }
      }
      exports.DocstringParam = _0x43da22;
      class _0x38713a extends _0x318bfb {
        constructor(_0x483f4b, _0x33c5a4, _0x4f07e7, _0x4f76a1, _0x427dca = null, _0x56066e = null) {
          super(2, _0x483f4b, _0x33c5a4, _0x56066e);
          this.typeName = _0x4f07e7;
          this.isGenerator = _0x4f76a1;
          this.returnName = _0x427dca;
        }
        get section() {
          if (this.isGenerator) {
            return 'Yields';
          } else {
            return 'Returns';
          }
        }
      }
      exports.DocstringReturns = _0x38713a;
      class _0xb266aa extends _0x318bfb {
        constructor(_0x26be83, _0x47488d, _0x1b560e, _0x452d15 = null) {
          super(4, _0x26be83, _0x47488d, _0x452d15);
          this.typeName = _0x1b560e;
        }
        get section() {
          return 'Raises';
        }
      }
      exports.DocstringRaises = _0xb266aa;
      class _0x24493d extends _0x318bfb {
        constructor(_0xf938e7, _0x50c46f, _0x2c26d8, _0x58b797) {
          super(5, _0xf938e7, _0x50c46f, _0x58b797);
          this.version = _0x2c26d8;
        }
        get section() {
          return 'Deprecated';
        }
      }
      exports.DocstringDeprecated = _0x24493d;
      class _0x1c3b7c extends _0x318bfb {
        constructor(_0x1f24e7, _0xdc7469, _0x577819, _0x51f270) {
          super(6, _0x1f24e7, _0x577819, _0x51f270);
          this.snippet = _0xdc7469;
        }
        get section() {
          return 'Examples';
        }
      }
      exports.DocstringExample = _0x1c3b7c;
      class _0x24ec39 extends _0x318bfb {
        constructor(_0x2cbd89, _0x123e90, _0x405b13) {
          super(7, _0x2cbd89, _0x123e90, _0x405b13);
        }
        get section() {
          return 'Todos';
        }
      }
      exports.DocstringTodo = _0x24ec39;
      class _0x2a9871 {
        constructor(_0x572b04 = null) {
          this.shortDescription = null;
          this.longDescription = null;
          this.hasBlankAfterShortDescription = false;
          this.hasBlankAfterLongDescription = false;
          this.meta = [];
          this.style = _0x572b04;
        }
        get description() {
          const _0x3d5fa4 = [];
          if (this.shortDescription) {
            _0x3d5fa4.push(this.shortDescription);
            if (this.hasBlankAfterShortDescription) {
              _0x3d5fa4.push('');
            }
          }
          if (this.longDescription) {
            _0x3d5fa4.push(this.longDescription);
          }
          if (_0x3d5fa4.length === 0) {
            return null;
          }
          return _0x3d5fa4.join('\n');
        }
        get params() {
          return this.meta.filter(_0x42379d => _0x42379d instanceof _0x43da22);
        }
        get raises() {
          return this.meta.filter(_0x26ba54 => _0x26ba54 instanceof _0xb266aa);
        }
        get returns() {
          for (const _0x3f6ad9 of this.meta) {
            if (_0x3f6ad9 instanceof _0x38713a) {
              return _0x3f6ad9;
            }
          }
          return null;
        }
        get manyReturns() {
          return this.meta.filter(_0xc2874d => _0xc2874d instanceof _0x38713a);
        }
        get deprecation() {
          for (const _0x40e031 of this.meta) {
            if (_0x40e031 instanceof _0x24493d) {
              return _0x40e031;
            }
          }
          return null;
        }
        get examples() {
          return this.meta.filter(_0xa0d071 => _0xa0d071 instanceof _0x1c3b7c);
        }
        get todo() {
          return this.meta.filter(_0x421632 => _0x421632 instanceof _0x24ec39);
        }
      }
      exports.Docstring = _0x2a9871;
      function _0xeebb50(_0x392b52) {
        if (_0x392b52) {
          return _0x392b52.replace(/\w\S*/g, _0x24da40 => {
            return _0x24da40.charAt(0).toUpperCase() + _0x24da40.substr(1).toLowerCase();
          });
        } else {
          return undefined;
        }
      }
      function _0x3ef833(_0x4ed7aa, _0x3e65c2, _0x1122f2) {
        const _0x248267 = _0x4ed7aa.split(_0x3e65c2);
        if (_0x248267.length <= _0x1122f2) {
          return _0x248267;
        }
        const _0x537ddf = _0x248267.slice(0, _0x1122f2 - 1);
        _0x537ddf.push(_0x248267.slice(_0x1122f2 - 1).join(_0x3e65c2));
        return _0x537ddf;
      }
      function _0x531be5(_0x54256a, _0x31e77d) {
        _0x31e77d.lastIndex = 0;
        const _0x3b3e33 = [];
        const _0x810fd1 = [..._0x54256a.matchAll(_0x31e77d)];
        for (let _0x435110 = 0; _0x435110 < _0x810fd1.length; _0x435110++) {
          const _0x39122e = _0x810fd1[_0x435110];
          const _0x1bba8f = (_0x39122e.index ?? 0) + _0x39122e[0].length;
          const _0xae1d1 = _0x435110 < _0x810fd1.length - 1 ? _0x810fd1[_0x435110 + 1].index ?? 0 : _0x54256a.length;
          _0x3b3e33.push({
            start: _0x1bba8f,
            end: _0xae1d1,
            text: _0x39122e[0]
          });
        }
        return _0x3b3e33;
      }
      function _0x27d95b(_0x5ddc45) {
        return _0x5ddc45.replace(/^\n+|\n+$/g, '');
      }
    },
    62104: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GoogleParser = undefined;
      exports.fixupGoogleDoc = _0x5cb3a7;
      const _0x4c1a9c = require(40804);
      const _0x4d5de2 = require(36984);
      const _0x2e5ae3 = require(99800);
      var _0x543ec3;
      (function (_0x13769c) {
        _0x13769c[_0x13769c.SINGULAR = 0] = 'SINGULAR';
        _0x13769c[_0x13769c.MULTIPLE = 1] = 'MULTIPLE';
        _0x13769c[_0x13769c.SINGULAR_OR_MULTIPLE = 2] = 'SINGULAR_OR_MULTIPLE';
      })(_0x543ec3 ||= {});
      class _0x3af877 {
        constructor(_0x330124, _0x2bda1b, _0x56b8fd) {
          this.title = _0x330124;
          this.key = _0x2bda1b;
          this.type = _0x56b8fd;
        }
      }
      const _0x206e7b = /\s*(.+?)\s*\(\s*(.*[^\s]+)\s*\)/;
      const _0x429c44 = /.*\. Defaults to (.+)\./;
      const _0x4a431e = /^(\s*[^:\s]+.*:)|([^:]*\]:.*)/;
      const _0x1f23ff = /(\s*[^:\s]*\s*(\(.*?\))?\s*)(:)/;
      const _0x255d32 = [new _0x3af877('Arguments', 'param', _0x543ec3.MULTIPLE), new _0x3af877('Args', 'param', _0x543ec3.MULTIPLE), new _0x3af877('Parameters', 'param', _0x543ec3.MULTIPLE), new _0x3af877('Params', 'param', _0x543ec3.MULTIPLE), new _0x3af877('Raises', 'raises', _0x543ec3.MULTIPLE), new _0x3af877('Exceptions', 'raises', _0x543ec3.MULTIPLE), new _0x3af877('Except', 'raises', _0x543ec3.MULTIPLE), new _0x3af877('Attributes', 'attribute', _0x543ec3.MULTIPLE), new _0x3af877('Example', 'examples', _0x543ec3.SINGULAR), new _0x3af877('Examples', 'examples', _0x543ec3.SINGULAR), new _0x3af877('Returns', 'returns', _0x543ec3.SINGULAR_OR_MULTIPLE), new _0x3af877('Yields', 'yields', _0x543ec3.SINGULAR_OR_MULTIPLE), new _0x3af877('Todo', 'todo', _0x543ec3.SINGULAR)];
      class _0x539f76 {
        constructor(_0x2b37a4 = _0x255d32, _0x245285 = true) {
          this.titlesRegex = new RegExp('');
          this.isGoogleDocString = new RegExp('');
          this.sections = _0x2b37a4.reduce((_0x4b4069, _0x479cdd) => {
            _0x4b4069[_0x479cdd.title] = _0x479cdd;
            return _0x4b4069;
          }, {});
          this.titleColon = _0x245285;
          this._setup();
        }
        addSection(_0x469e06) {
          this.sections[_0x469e06.title] = _0x469e06;
          this._setup();
        }
        parse(_0x642293) {
          const _0x161d58 = new _0x2e5ae3.Docstring(_0x2e5ae3.DocstringStyle.GOOGLE);
          if (!_0x642293) {
            return _0x161d58;
          }
          const _0x2822f9 = this.titlesRegex.exec(_0x642293);
          let _0x7632fa;
          let _0x1490e4;
          if (_0x2822f9) {
            _0x7632fa = _0x642293.slice(0, _0x2822f9.index);
            _0x1490e4 = _0x642293.slice(_0x2822f9.index);
          } else {
            _0x7632fa = _0x642293;
            _0x1490e4 = '';
          }
          this.titlesRegex.lastIndex = 0;
          const _0x59a219 = _0x2e5ae3.splitWithLimit(_0x7632fa, '\n', 2);
          _0x161d58.shortDescription = _0x59a219[0] || null;
          if (_0x59a219.length > 1) {
            const _0x38fc8f = _0x59a219[1] || '';
            _0x161d58.hasBlankAfterShortDescription = _0x38fc8f.startsWith('\n');
            _0x161d58.hasBlankAfterLongDescription = _0x38fc8f.endsWith('\n\n');
            _0x161d58.longDescription = _0x38fc8f.trim() || null;
          }
          const _0x50717e = _0x2e5ae3.matchAll(_0x1490e4, this.titlesRegex);
          if (_0x50717e.length === 0) {
            return _0x161d58;
          }
          const _0x405f66 = {};
          for (let _0x362d48 = 0; _0x362d48 < _0x50717e.length; _0x362d48++) {
            const _0x3b77b7 = _0x50717e[_0x362d48];
            const _0x398916 = _0x3b77b7.text.slice(0, -1);
            if (!(_0x398916 in this.sections)) {
              continue;
            }
            let _0x36dadb = _0x1490e4.slice(_0x3b77b7.start, _0x3b77b7.end);
            const _0x5037e0 = /\n\S/.exec(_0x36dadb);
            let _0xd7fd56 = null;
            if (_0x5037e0) {
              _0x36dadb = _0x36dadb.slice(0, _0x5037e0.index);
              _0xd7fd56 = _0x1490e4.slice(_0x3b77b7.start + _0x5037e0.index, _0x3b77b7.end);
            }
            _0x405f66[_0x398916] = {
              details: _0x2e5ae3.trimLineFeeds(_0x36dadb),
              unknown: _0xd7fd56 ? _0x2e5ae3.trimLineFeeds(_0xd7fd56) : null
            };
          }
          for (const _0x582514 in _0x405f66) {
            const _0x1a3155 = _0x405f66[_0x582514];
            const _0x5ca4b9 = _0x1a3155.details.match(/^\s*/);
            if (!_0x5ca4b9) {
              throw new _0x2e5ae3.ParseError(`Can't infer indent from "${_0x1a3155}"`);
            }
            const _0x51aa74 = _0x5ca4b9[0];
            if ([_0x543ec3.SINGULAR, _0x543ec3.SINGULAR_OR_MULTIPLE].includes(this.sections[_0x582514].type)) {
              _0x161d58.meta.push(this._buildMeta(_0x4d5de2.cleanIndent(_0x1a3155.details), _0x582514, _0x1a3155.unknown));
              continue;
            }
            const _0x27961d = _0x2e5ae3.matchAll(_0x1a3155.details, new RegExp(`^${_0x51aa74}(?=\\S)`, 'mg'));
            for (let _0x5a0338 = 0; _0x5a0338 < _0x27961d.length; _0x5a0338++) {
              const _0x2565af = _0x27961d[_0x5a0338];
              const _0x4e0d92 = _0x5a0338 === _0x27961d.length - 1 ? _0x1a3155.unknown : null;
              const _0x438874 = _0x2e5ae3.trimLineFeeds(_0x1a3155.details.slice(_0x2565af.start, _0x2565af.end));
              _0x161d58.meta.push(this._buildMeta(_0x438874, _0x582514, _0x4e0d92));
            }
          }
          return _0x161d58;
        }
        _setup() {
          const _0x4b6ee7 = this.titleColon ? ':' : '';
          const _0x4ec657 = Object.keys(this.sections).map(_0x16cb2f => `(${_0x16cb2f})`).join('|');
          this.titlesRegex = new RegExp(`^(${_0x4ec657})${_0x4b6ee7}[ \t\r]*\$`, 'mg');
          const _0x26af21 = Object.keys(this.sections).filter(_0x47de10 => !_0x47de10.includes('xample')).map(_0x3ceecc => `(${_0x3ceecc})`).join('|');
          this.isGoogleDocString = new RegExp(`^(${_0x26af21})${_0x4b6ee7}[ \t\r]*\$`, 'mg');
        }
        _buildMeta(_0x517850, _0xdef4d9, _0x251b36) {
          const _0x12b9ce = this.sections[_0xdef4d9];
          if (_0x12b9ce.type === _0x543ec3.SINGULAR_OR_MULTIPLE && !_0x4a431e.test(_0x517850) || _0x12b9ce.type === _0x543ec3.SINGULAR) {
            return this._buildSingleMeta(_0x12b9ce, _0x4d5de2.cleanIndent(_0x517850.trimStart()), _0x251b36);
          }
          const _0xd1fec1 = _0x1f23ff.exec(_0x517850);
          if (!_0xd1fec1) {
            throw new _0x2e5ae3.ParseError(`Expected a colon in "${_0x517850}".`);
          }
          const _0x977ef1 = _0xd1fec1[1].length;
          const _0x59a2f5 = _0x2e5ae3.trimLineFeeds(_0x517850.slice(0, _0x977ef1));
          const _0x50d69b = _0x2e5ae3.trimLineFeeds(_0x517850.slice(_0x977ef1 + 1));
          const _0x466f13 = _0x4d5de2.cleanIndent(_0x50d69b.trimStart());
          return this._buildMultiMeta(_0x12b9ce, _0x59a2f5.trim(), _0x466f13, _0x251b36);
        }
        _buildSingleMeta(_0x35dd5b, _0x3d4ead, _0x4fb0bc) {
          if (_0x2e5ae3.RETURNS_KEYWORDS.has(_0x35dd5b.key) || _0x2e5ae3.YIELDS_KEYWORDS.has(_0x35dd5b.key)) {
            return new _0x2e5ae3.DocstringReturns([_0x35dd5b.key], _0x3d4ead, null, _0x2e5ae3.YIELDS_KEYWORDS.has(_0x35dd5b.key), null, _0x4fb0bc);
          } else {
            if (_0x2e5ae3.RAISES_KEYWORDS.has(_0x35dd5b.key)) {
              return new _0x2e5ae3.DocstringRaises([_0x35dd5b.key], _0x3d4ead, null, _0x4fb0bc);
            } else {
              if (_0x2e5ae3.EXAMPLES_KEYWORDS.has(_0x35dd5b.key)) {
                return new _0x2e5ae3.DocstringExample([_0x35dd5b.key], null, _0x3d4ead, _0x4fb0bc);
              } else {
                if (_0x2e5ae3.TODO_KEYWORDS.has(_0x35dd5b.key)) {
                  return new _0x2e5ae3.DocstringTodo([_0x35dd5b.key], _0x3d4ead, _0x4fb0bc);
                } else {
                  if (_0x2e5ae3.PARAM_KEYWORDS.has(_0x35dd5b.key)) {
                    throw new _0x2e5ae3.ParseError('Expected parameter name.');
                  } else {
                    return new _0x2e5ae3.DocstringMeta(0, [_0x35dd5b.key], _0x3d4ead, _0x4fb0bc);
                  }
                }
              }
            }
          }
        }
        _buildMultiMeta(_0x1c3d32, _0x3a74a4, _0x517b26, _0x3e51ae) {
          if (_0x2e5ae3.PARAM_KEYWORDS.has(_0x1c3d32.key) || _0x2e5ae3.RETURNS_KEYWORDS.has(_0x1c3d32.key) || _0x2e5ae3.YIELDS_KEYWORDS.has(_0x1c3d32.key)) {
            const _0x4e7f7a = _0x206e7b.exec(_0x3a74a4);
            let _0x4d91fc;
            let _0x114178;
            let _0x2265f2;
            if (_0x4e7f7a) {
              [_0x4d91fc, _0x114178] = _0x4e7f7a.slice(1);
              if (_0x114178.endsWith(', optional')) {
                _0x2265f2 = true;
                _0x114178 = _0x114178.slice(0, -10);
              } else {
                if (_0x114178.endsWith('?')) {
                  _0x2265f2 = true;
                  _0x114178 = _0x114178.slice(0, -1);
                } else {
                  _0x2265f2 = false;
                }
              }
            } else {
              _0x4d91fc = _0x3a74a4;
              _0x114178 = null;
              _0x2265f2 = null;
            }
            const _0x4354fd = _0x429c44.exec(_0x517b26);
            const _0x3ff70f = _0x4354fd ? _0x4354fd[1] : null;
            if (_0x2e5ae3.PARAM_KEYWORDS.has(_0x1c3d32.key)) {
              return new _0x2e5ae3.DocstringParam([_0x1c3d32.key, _0x3a74a4], _0x517b26, _0x4d91fc, _0x114178, _0x2265f2, _0x3ff70f, _0x3e51ae, _0x1c3d32.title);
            } else {
              if (_0x2e5ae3.RETURNS_KEYWORDS.has(_0x1c3d32.key) || _0x2e5ae3.YIELDS_KEYWORDS.has(_0x1c3d32.key)) {
                return new _0x2e5ae3.DocstringReturns([_0x1c3d32.key, _0x3a74a4], _0x517b26, _0x114178, _0x2e5ae3.YIELDS_KEYWORDS.has(_0x1c3d32.key), _0x4d91fc, _0x3e51ae);
              }
            }
          } else {
            if (_0x2e5ae3.RAISES_KEYWORDS.has(_0x1c3d32.key)) {
              return new _0x2e5ae3.DocstringRaises([_0x1c3d32.key, _0x3a74a4], _0x517b26, _0x3a74a4, _0x3e51ae);
            }
          }
          return new _0x2e5ae3.DocstringMeta(0, [_0x1c3d32.key, _0x3a74a4], _0x517b26, _0x3e51ae);
        }
      }
      exports.GoogleParser = _0x539f76;
      function _0x494ef3(_0x528ecf, _0x2a1f60) {
        if (_0x2a1f60.unknown) {
          _0x528ecf.push('');
          _0x528ecf.push('----');
          _0x528ecf.push('');
          _0x528ecf.push(_0x2a1f60.unknown);
          _0x528ecf.push('');
        }
      }
      function _0x302067(_0x146a2a, _0x586182) {
        const _0x22811f = _0x586182 ? _0x586182.split('\n') : '';
        let _0x10d463 = 0;
        for (const _0x1fc61b of _0x22811f) {
          if (_0x1fc61b.trim().length === 0) {
            _0x146a2a.push('');
            _0x10d463 = Math.max(0, _0x10d463 - 1);
          } else {
            if (_0x10d463 > 0) {
              _0x146a2a.push(`${_0x4c1a9c.DefaultIndent}${_0x4c1a9c.DefaultIndent}${_0x1fc61b}`);
            } else {
              if (_0x1fc61b.trim().endsWith(':') && !_0x1fc61b.trim().endsWith('::')) {
                _0x146a2a.push(`${_0x4c1a9c.DefaultIndent}${_0x1fc61b}`);
                _0x146a2a.push('');
                _0x146a2a.push('.. code-block:: python');
                _0x10d463 = 2;
              } else {
                _0x146a2a.push(`${_0x4c1a9c.DefaultIndent}${_0x1fc61b}`);
              }
            }
          }
        }
      }
      function _0x5cb3a7(_0x35fda5) {
        try {
          const _0x3391a1 = new _0x539f76();
          if (_0x3391a1.isGoogleDocString.test(_0x35fda5)) {
            _0x3391a1.isGoogleDocString.lastIndex = 0;
            const _0x22d476 = _0x3391a1.parse(_0x35fda5);
            const _0x39a813 = [];
            if (_0x22d476.description) {
              _0x39a813.push(_0x22d476.description);
            }
            const _0x535ae4 = new Map([[1, 'Parameters'], [2, 'Returns'], [4, 'Raises'], [6, 'Examples'], [7, 'Todo'], [5, 'Deprecated']]);
            for (let _0xff9732 = 0; _0xff9732 < _0x22d476.meta.length; _0xff9732++) {
              const _0x49017b = _0x22d476.meta[_0xff9732];
              const _0x1bce16 = _0x535ae4.get(_0x49017b.kind);
              if (_0x1bce16) {
                const _0x4086a1 = _0x49017b.section ?? _0x1bce16;
                _0x39a813.push('');
                _0x39a813.push(_0x4086a1);
                _0x39a813.push('-'.repeat(_0x1bce16.length));
                _0x535ae4.delete(_0x49017b.kind);
              }
              if (_0x49017b instanceof _0x2e5ae3.DocstringParam) {
                const _0x4de55d = `${_0x49017b.typeName ?? _0x4c1a9c.EmptyClassifier}${_0x49017b.isOptional ? ', optional' : ''}`;
                _0x39a813.push(_0x49017b.argName + ' : ' + _0x4de55d);
                _0x302067(_0x39a813, _0x49017b.description);
                _0x494ef3(_0x39a813, _0x49017b);
              } else {
                if (_0x49017b instanceof _0x2e5ae3.DocstringReturns) {
                  _0x39a813.push((_0x49017b.returnName ?? 'out') + ' : ' + (_0x49017b.typeName ?? _0x4c1a9c.EmptyClassifier));
                  _0x302067(_0x39a813, _0x49017b.description);
                  _0x494ef3(_0x39a813, _0x49017b);
                } else {
                  if (_0x49017b instanceof _0x2e5ae3.DocstringRaises) {
                    _0x39a813.push(_0x49017b.typeName + ' : ' + _0x4c1a9c.EmptyClassifier);
                    _0x302067(_0x39a813, _0x49017b.description);
                    _0x494ef3(_0x39a813, _0x49017b);
                  } else {
                    _0x39a813.push(_0x49017b.description ?? '');
                    _0x494ef3(_0x39a813, _0x49017b);
                  }
                }
              }
            }
            return _0x39a813.join('\n');
          }
        } catch (_0x3e5d9f) {
          return _0x35fda5;
        }
        return _0x35fda5;
      }
    },
    52820: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MarkdownFormatter = undefined;
      const _0x10d1a7 = require(12670);
      const _0x2f258b = require(48256);
      const _0x483616 = require(40804);
      const _0x225cf3 = require(36984);
      const _0x21b2bb = /`(.*?\s*.*?)<(.*?)>`_/;
      const _0x5a9419 = 'https://peps.python.org/pep-';
      const _0x5ec879 = /:pep:`(\d+)(.*)`/;
      var _0x48da87;
      (function (_0x352950) {
        _0x352950[_0x352950.Normal = 0] = 'Normal';
        _0x352950[_0x352950.SkipBlankLines = 1] = 'SkipBlankLines';
        _0x352950[_0x352950.Literal = 2] = 'Literal';
      })(_0x48da87 ||= {});
      var _0x1abc40;
      (function (_0x9463e6) {
        _0x9463e6[_0x9463e6.Normal = 0] = 'Normal';
        _0x9463e6[_0x9463e6.Empty = 1] = 'Empty';
        _0x9463e6[_0x9463e6.Literal = 2] = 'Literal';
      })(_0x1abc40 ||= {});
      class _0x3b8abd extends _0x2f258b.BaseFormatter {
        constructor(_0x5902bb, _0x590471) {
          super(_0x5902bb);
          this._forceLiteral = _0x590471;
          this._references = new Map();
          this._substitutions = new Map();
          this._indentMode = [_0x1abc40.Normal];
          this._lineFeedMode = [_0x48da87.Normal];
          this._insideSpecialTermListItem = false;
          this._blockIndents = [0];
          this._foundError = false;
          if (this._forceLiteral) {
            this.pushIndentMode(_0x1abc40.Literal);
            this.pushLineFeedMode(_0x48da87.Literal);
          }
        }
        static convertToMarkdown(_0xa9deeb, _0x19a83c, _0x596f18) {
          const _0x30fbf3 = new _0x3b8abd(_0x19a83c, !!_0x596f18);
          _0x30fbf3.walk(_0xa9deeb);
          const _0x52c400 = _0x30fbf3.getResult();
          if (_0x30fbf3._foundError && _0x596f18) {
            return _0x10d1a7.convertDocStringToMarkdown(_0x30fbf3.text);
          }
          return _0x52c400.replace(/%(\w+?)%/g, '$1');
        }
        pushIndentMode(_0x4f2b25) {
          this._indentMode.push(_0x4f2b25);
        }
        popIndentMode() {
          this._indentMode.pop();
        }
        pushLineFeedMode(_0x1a7b43) {
          this._lineFeedMode.push(_0x1a7b43);
        }
        popLineFeedMode() {
          this._lineFeedMode.pop();
        }
        visitTransition(_0x65d20d) {
          this.appendText('\n');
          return false;
        }
        visitDocTestBlock(_0x5bd176) {
          this.appendText('``` python\n');
          this.appendText(_0x5bd176.text);
          this.appendText('\n```\n  ');
          return false;
        }
        visitSection(_0xdc66fa) {
          const _0x5debc1 = _0xdc66fa.lastChild;
          let _0xf99a61 = 1;
          const _0x575a98 = _0x5debc1 ? _0x5debc1.text[0] : '#';
          switch (_0x575a98) {
            case '#':
            case '*':
            case '=':
              _0xf99a61 = 1;
              break;
            case '-':
              _0xf99a61 = 2;
              break;
            case '^':
              _0xf99a61 = 3;
              break;
            default:
              _0xf99a61 = 4;
              break;
          }
          this.appendText('#'.repeat(_0xf99a61) + ' ');
          const _0x48ee54 = _0xdc66fa.namedChildren.find(_0x4525ed => _0x4525ed.type === 'title');
          if (_0x48ee54) {
            this.walkChildren(_0x48ee54);
          }
          this.appendText('\n');
          return false;
        }
        visitColon(_0x5bc9cd) {
          if (this._forceLiteral) {
            this.appendText(_0x5bc9cd.text);
          }
          return true;
        }
        visitListItem(_0x27adf5) {
          if (this._forceLiteral) {
            return super.visitListItem(_0x27adf5);
          }
          const _0x48ff2c = _0x27adf5.firstChild;
          switch (_0x48ff2c?.type) {
            case 'bullet':
              if (_0x27adf5.text.startsWith('*') || _0x27adf5.text.startsWith('-') || _0x27adf5.text.startsWith('+')) {
                this.appendText('*');
              } else {
                this.appendText(_0x48ff2c.text);
              }
              break;
            case 'enumerated':
              this.appendText('1. ');
              break;
            case 'term':
              {
                return this.visitTermListItem(_0x48ff2c);
              }
            default:
              break;
          }
          return true;
        }
        visitSpecialTermListItem(_0x14bcb3) {
          const _0x222019 = this.extractNodeText(_0x14bcb3);
          const _0x35f6f0 = this.findSiblingOfType(_0x14bcb3, 'classifier');
          let _0x3c09be = this.findSiblingOfType(_0x35f6f0 || _0x14bcb3, 'definition');
          let _0x18c8a8 = _0x222019;
          let _0x7e4cc0 = _0x35f6f0?.text || '';
          let _0x2d8298 = '';
          if (_0x3c09be?.type !== 'definition') {
            return true;
          }
          if (this._insideSpecialTermListItem) {
            return true;
          }
          this._insideSpecialTermListItem = true;
          this.removeIndentationOnCurrentLine();
          const _0x21c97c = /^(.*?)\s+\((.*?)\)\s*(.*)/.exec(_0x222019);
          if (_0x21c97c) {
            _0x18c8a8 = _0x21c97c[1];
            _0x7e4cc0 = _0x21c97c[2];
            _0x2d8298 = _0x21c97c[3];
            _0x3c09be = _0x35f6f0 && _0x35f6f0.text !== _0x483616.EmptyClassifier ? _0x35f6f0 : _0x3c09be;
          } else {
            if (_0x18c8a8.includes(':') && _0x7e4cc0.length === 0) {
              _0x7e4cc0 = _0x18c8a8.split(':')[1].trim();
              _0x18c8a8 = _0x18c8a8.split(':')[0].trim();
              _0x3c09be = _0x35f6f0 && _0x35f6f0.text !== _0x483616.EmptyClassifier ? _0x35f6f0 : _0x3c09be;
            }
          }
          const _0x3409c0 = this.currentBlockIndent() === 0;
          if (_0x3409c0) {
            this.blockIndent();
          }
          this.appendText(`**${_0x18c8a8}**`);
          if (_0x7e4cc0?.length > 0 && _0x7e4cc0 !== _0x483616.EmptyClassifier) {
            this.appendText(` : _${_0x7e4cc0}_ ${_0x2d8298}  `);
          } else {
            this.appendText('  ');
          }
          this.pushIndentMode(_0x1abc40.Empty);
          this.appendText('\n');
          let _0x3307a7 = _0x3c09be;
          while (_0x3307a7 && _0x3307a7.text !== _0x483616.EmptyDefinitionDirective) {
            this.visitNode(_0x3307a7);
            this.walkWhitespace(_0x3307a7);
            _0x3307a7 = _0x3307a7.nextSibling;
          }
          this.popIndentMode();
          this.appendText('\n');
          if (_0x3409c0) {
            this.blockDedent();
          }
          this._insideSpecialTermListItem = false;
          return false;
        }
        visitNormalTermListItem(_0x5d0370) {
          const _0x193002 = this.extractNodeText(_0x5d0370);
          const _0x3d2a41 = this.findSiblingOfType(_0x5d0370, 'classifier');
          const _0x4e2516 = this.findSiblingOfType(_0x3d2a41 || _0x5d0370, 'definition');
          const _0x4aaee2 = _0x193002;
          if (_0x4e2516?.type !== 'definition') {
            return true;
          }
          this.removeIndentationOnCurrentLine();
          let _0x5416c1 = !_0x3d2a41 && (!_0x4aaee2.includes(':') || _0x4aaee2.endsWith(':') || _0x4aaee2.includes(':') && _0x4aaee2.split(':')[1].split(' ').length <= 1);
          const _0x455efc = _0x5d0370.parent;
          let _0x1a3e94 = _0x455efc?.previousSibling;
          while (_0x1a3e94) {
            if (this.findFirstDescendantWithType(_0x1a3e94, 'classifier')) {
              _0x5416c1 = false;
              break;
            }
            _0x1a3e94 = _0x1a3e94.previousSibling;
          }
          if (!_0x5416c1) {
            this.blockIndent();
            this.pushIndentMode(_0x1abc40.Empty);
            this.pushLineFeedMode(_0x48da87.SkipBlankLines);
          }
          this.appendText(_0x4aaee2);
          if (_0x3d2a41) {
            this.appendText(` : ${_0x3d2a41.text}
`);
          } else {
            this.appendText('\n');
          }
          if (_0x5416c1) {
            this.blockIndent();
            this.pushIndentMode(_0x1abc40.Empty);
            this.pushLineFeedMode(_0x48da87.SkipBlankLines);
          }
          let _0x38b8f5 = _0x4e2516;
          while (_0x38b8f5 && !_0x38b8f5.text.includes(_0x483616.EmptyDefinitionDirective)) {
            this.visitNode(_0x38b8f5);
            this.walkWhitespace(_0x38b8f5);
            _0x38b8f5 = _0x38b8f5.nextSibling;
          }
          this.appendText('  \n');
          this.popLineFeedMode();
          this.popIndentMode();
          this.blockDedent();
          return false;
        }
        visitTermListItem(_0x12ae96) {
          if (this._forceLiteral) {
            return true;
          }
          let _0x3da494 = false;
          const _0x61f90d = this.findPreviousSection(_0x12ae96);
          const _0x57185d = _0x61f90d?.type === 'section' ? _0x61f90d.namedChildren[0].text : '';
          const _0x15794e = _0x225cf3.isParameters(_0x57185d) || _0x225cf3.isReturns(_0x57185d) || _0x225cf3.isAttributes(_0x57185d) || _0x225cf3.isRaises(_0x57185d);
          if (_0x15794e) {
            _0x3da494 = this.visitSpecialTermListItem(_0x12ae96);
          } else {
            _0x3da494 = this.visitNormalTermListItem(_0x12ae96);
          }
          return _0x3da494;
        }
        visitVersionAddedDirective(_0x542943) {
          return this.visitDefaultDirective(_0x542943, 'versionadded');
        }
        visitSeeAlsoDirective(_0x15c6fa) {
          return this.visitDefaultDirective(_0x15c6fa, 'seealso');
        }
        visitImageDirective(_0x14bd93) {
          const _0x2bb899 = this.findFirstDescendantWithType(_0x14bd93, 'arguments');
          const _0x11158f = this.findFirstDescendant(_0x14bd93, _0x38e47e => _0x38e47e.type === 'field_name' && _0x38e47e.text === 'alt');
          const _0x3ed939 = this.findFirstDescendant(_0x14bd93, _0x2be04e => _0x2be04e.type === 'field_name' && _0x2be04e.text === 'target');
          const _0x286407 = _0x2bb899 ? this.extractNodeText(_0x2bb899) : '';
          let _0x4869ed = _0x11158f && _0x11158f.nextNamedSibling?.type === 'field_body' ? this.extractNodeText(_0x11158f.nextNamedSibling) : '';
          if (_0x4869ed.length === 0) {
            const _0x132767 = _0x11158f?.parent?.parent?.nextNamedSibling;
            if (_0x132767) {
              _0x4869ed = this.extractNodeText(_0x132767);
            }
          }
          if (_0x3ed939) {
            const _0x3c59cb = _0x3ed939.childCount === 4 ? this.extractNodeText(_0x3ed939.children[3]) : '';
            this.appendText(`[![${_0x4869ed}](${_0x286407})](${_0x3c59cb})`);
          } else {
            this.appendText(`![${_0x4869ed}](${_0x286407})`);
          }
          return false;
        }
        visitCodeBlockDirective(_0x4496fa) {
          const _0x838f20 = this.findFirstDescendantWithType(_0x4496fa, 'arguments');
          const _0x51ceaf = _0x838f20 ? this.extractNodeText(_0x838f20) : 'python';
          this.appendText(`
\`\`\` ${_0x51ceaf}`);
          const _0x134781 = this.findFirstDescendantWithType(_0x4496fa, 'content');
          const _0x420e63 = _0x838f20 ?? _0x134781?.parent;
          this.walkWhitespace(_0x420e63);
          if (_0x134781) {
            this.visitNode(_0x134781);
          }
          this.appendText('\n```\n');
          return false;
        }
        visitDefaultDirective(_0x10e0c0, _0x4e96af) {
          const _0x5dcb6b = this.removeIndentationOnCurrentLine();
          let _0x4103ba = Math.ceil(_0x5dcb6b.length / 4);
          if (this.currentBlockIndent() > 0) {
            _0x4103ba++;
          }
          this.blockIndent(_0x4103ba);
          this.appendText(`**_${_0x4e96af}_** `);
          this.pushIndentMode(_0x1abc40.Empty);
          this.blockIndent();
          this.walkChildren(_0x10e0c0);
          this.blockDedent();
          this.popIndentMode();
          this.blockDedent();
          return false;
        }
        visitLiteralBlock(_0x32fa88) {
          const _0x2f0d2c = _0x32fa88.previousSibling?.text || '';
          if (_0x2f0d2c.endsWith('::')) {
            const _0x208d8e = this.getResult();
            let _0x16c771 = false;
            let _0x33e885 = _0x208d8e.length - 1;
            while (!_0x16c771 && _0x33e885 > 0) {
              if (_0x208d8e[_0x33e885] === ' ' || _0x208d8e[_0x33e885] === '\t' || _0x208d8e[_0x33e885] === '\n') {
                _0x33e885--;
              } else {
                if (_0x33e885 > 5 && _0x208d8e.slice(_0x33e885 - (_0x483616.MarkdownSpaceLength - 1), _0x33e885 + 1) === _0x483616.MarkdownSpace) {
                  _0x33e885 -= _0x483616.MarkdownSpaceLength;
                } else {
                  _0x16c771 = true;
                }
              }
            }
            this.insertText(_0x33e885 + 1, ':');
          }
          const _0x589560 = this.getNodeIndentation(_0x32fa88);
          this.removeIndentationOnCurrentLine();
          this.pushIndentMode(_0x1abc40.Normal);
          this.appendText(`\`\`\`
${_0x589560}`);
          this.walkChildren(_0x32fa88);
          if (this.getResult().trim().slice(-1) !== '\n') {
            this.appendText('\n');
          }
          this.appendText('```\n');
          this.popIndentMode();
          return false;
        }
        visitLiteral(_0x566174) {
          const _0x12f07f = _0x566174.text;
          if (_0x12f07f.startsWith(_0x483616.EmptyClassifier) && _0x12f07f.endsWith(_0x483616.EmptyClassifier)) {
            this.appendText(_0x12f07f.slice(1, -1));
          } else {
            this.appendText(_0x12f07f);
          }
          return false;
        }
        visitStandaloneHyperlink(_0xa0bb93) {
          this.appendText(_0xa0bb93.text);
          return false;
        }
        visitSubstitutionDefinition(_0x4ba11b) {
          const _0x10e702 = _0x4ba11b.lastNamedChild;
          const _0x2735fc = this.findFirstDescendantWithType(_0x4ba11b, 'substitution');
          if (_0x10e702 && _0x2735fc) {
            this._substitutions.set(_0x2735fc.text, this.extractNodeText(_0x10e702));
            this.replaceText(new RegExp(`\\|${_0x2735fc.text.slice(1, -1)}\\|`, 'g'), this._substitutions.get(_0x2735fc.text) || '');
          }
          return false;
        }
        visitSubstitutionReference(_0x330f71) {
          const _0x2e8ec1 = _0x330f71.text;
          const _0x5da9ba = this._substitutions.get(_0x2e8ec1);
          if (_0x5da9ba) {
            this.appendText(_0x5da9ba);
          } else {
            this.appendText(_0x2e8ec1);
          }
          return false;
        }
        visitCitation(_0xcbcfd3) {
          return this.visitFootNote(_0xcbcfd3);
        }
        visitCitationReference(_0xecc454) {
          return this.visitReference(_0xecc454);
        }
        visitReference(_0x51be84) {
          const _0x1fdac1 = this.extractNodeText(_0x51be84);
          if (_0x21b2bb.test(_0x1fdac1)) {
            const _0x5e2b36 = _0x21b2bb.exec(_0x1fdac1);
            if (_0x5e2b36) {
              this.appendText(`[${_0x5e2b36[1]}](${_0x5e2b36[2]})`);
              return false;
            }
          } else {
            if (_0x1fdac1.endsWith('`_') || _0x1fdac1.endsWith(']_')) {
              const _0xf3fa7d = _0x1fdac1.slice(1, -2).replace(/\n/g, ' ');
              const _0x2a0bae = this._references.get(_0xf3fa7d);
              if (_0x2a0bae) {
                this.appendText(`[${_0xf3fa7d}](${_0x2a0bae})`);
              } else {
                const _0x36fe40 = `%${_0xf3fa7d}%`;
                this.appendText(_0x36fe40);
              }
              return false;
            }
          }
          return true;
        }
        visitTarget(_0xc62535) {
          const _0xf607b3 = _0xc62535.namedChildren.find(_0x590506 => _0x590506.type === 'name');
          const _0x4b5d05 = _0xc62535.namedChildren.find(_0x48da1b => _0x48da1b.type === 'link');
          if (_0xf607b3 && _0x4b5d05) {
            const _0x1ceb38 = this.extractNodeText(_0xf607b3).slice(1, -1);
            const _0x3063c9 = this.extractNodeText(_0x4b5d05);
            this._references.set(_0x1ceb38, _0x3063c9);
            const _0x302807 = _0x1ceb38.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
            this.replaceText(new RegExp(`%${_0x302807}%`, 'g'), `[${_0x1ceb38}](${_0x3063c9})`);
            this.removeUpToLastLineFeed();
            return false;
          }
          return true;
        }
        visitFootNoteReference(_0x3abffa) {
          return this.visitReference(_0x3abffa);
        }
        visitFootNote(_0xcf6086) {
          const _0x31750d = this.findFirstDescendantWithType(_0xcf6086, 'label');
          const _0x4659b7 = this.findFirstDescendantWithType(_0xcf6086, 'body');
          const _0x4e4bce = this.findFirstDescendantWithType(_0x4659b7, 'standalone_hyperlink');
          let _0x36f7c4 = '';
          let _0x18b1ec = _0x31750d ? this.extractNodeText(_0x31750d).slice(1, -1) : 'UNNAMED';
          _0x18b1ec = _0x18b1ec.replace(/\n/g, ' ');
          if (_0x4e4bce) {
            _0x36f7c4 = `[${_0x18b1ec}](${this.extractNodeText(_0x4e4bce)})`;
          } else {
            _0x36f7c4 = `<sup>${_0x18b1ec}</sup>`;
          }
          const _0x43b7a1 = _0x18b1ec.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
          this.replaceText(new RegExp(`%${_0x43b7a1}%`, 'g'), _0x36f7c4);
          this._references.set(_0x18b1ec, _0x36f7c4);
          this.pushIndentMode(_0x1abc40.Empty);
          this.appendText(`[${_0x18b1ec}]: `);
          this.walkChildren(_0x4659b7);
          this.appendText('\n');
          this.popIndentMode();
          return false;
        }
        visitIndent(_0x368d1c) {
          const _0x5dae9e = this._indentMode[this._indentMode.length - 1];
          switch (_0x5dae9e) {
            case _0x1abc40.Normal:
              this.appendText(_0x368d1c);
              break;
            case _0x1abc40.Empty:
              break;
            case _0x1abc40.Literal:
              this.appendText(_0x483616.MarkdownSpace.repeat(_0x368d1c.length));
              break;
          }
          return true;
        }
        visitLineFeed(_0x321ce3) {
          const _0x47e5b9 = this._lineFeedMode[this._lineFeedMode.length - 1];
          switch (_0x47e5b9) {
            case _0x48da87.Normal:
              this.appendText('\n');
              break;
            case _0x48da87.SkipBlankLines:
              if (!_0x321ce3) {
                this.appendText('  \n');
              }
              break;
            case _0x48da87.Literal:
              this.appendText('  \n');
              break;
          }
          return true;
        }
        visitField(_0x2da93a) {
          const _0x5ac632 = _0x2da93a.previousNamedSibling;
          if (_0x5ac632?.type === 'field') {
            this.insertText(-1, ' \\');
          }
          const _0xd379b2 = this.findFirstDescendantWithType(_0x2da93a, 'field_name');
          if (_0xd379b2?.text !== _0x483616.ChildFieldMarker) {
            this.appendText('**');
            this.walkChildren(_0xd379b2);
            this.appendText('**');
            this.appendText(' : ');
          }
          const _0x4e7c9d = this.findFirstDescendantWithType(_0x2da93a, 'field_body');
          if (_0x4e7c9d) {
            this.visitNode(_0x4e7c9d);
          }
          return false;
        }
        visitFieldBody(_0x43c487) {
          let _0x5123a7 = _0x43c487.firstChild;
          while (_0x5123a7) {
            this.visitNode(_0x5123a7);
            this.pushIndentMode(_0x1abc40.Empty);
            this.pushLineFeedMode(_0x48da87.SkipBlankLines);
            this.walkWhitespace(_0x5123a7);
            this.popLineFeedMode();
            this.popIndentMode();
            _0x5123a7 = _0x5123a7.nextSibling;
          }
          return false;
        }
        visitInterpretedText(_0x568ae3) {
          const _0xf9464a = this.findFirstDescendantWithType(_0x568ae3, 'role');
          const _0x5856f9 = _0xf9464a?.text;
          if (_0x5856f9 === ':pep:') {
            const _0x42fccf = _0x568ae3.text.match(_0x5ec879);
            if (_0x42fccf) {
              const _0x54ce36 = _0x42fccf[1];
              const _0x27e998 = `${_0x5a9419}${_0x54ce36}${_0x42fccf[2]}`;
              this.appendText(`[PEP ${_0x54ce36}](${_0x27e998})`);
              return false;
            }
          }
          if (_0x5856f9 && _0xf9464a?.nextSibling) {
            this.visitNode(_0xf9464a.nextSibling);
          } else {
            this.appendText(_0x568ae3.text);
          }
          return false;
        }
        visitParagraph(_0x5b1943) {
          const _0x5399d8 = _0x5b1943.text;
          if (_0x5399d8.startsWith('+---')) {
            const _0x4f8f87 = _0x5399d8.split('\n');
            if (_0x4f8f87[0].endsWith('+')) {
              return this.visitGridTableParagraph(_0x5b1943);
            }
          } else {
            if (_0x5399d8.startsWith('===') && _0x5399d8.includes(' ===')) {
              return this.visitSimpleTableParagraph(_0x5b1943);
            }
          }
          if (_0x5399d8.startsWith('```') && !_0x5399d8.includes('\n') && _0x5b1943.nextNamedSibling?.type === 'block_quote') {
            return false;
          }
          return true;
        }
        visitBlockQuote(_0x2c387f) {
          var _0x42f7d4;
          const _0x1b19f8 = _0x2c387f.previousNamedSibling;
          if (_0x1b19f8?.type === 'paragraph' && _0x1b19f8.text.startsWith('```')) {
            const _0x584494 = /^```\s*(\w*)\s*(.*)/.exec(_0x1b19f8.text);
            const _0x39853d = _0x584494 ? _0x584494[1] : 'python';
            if (_0x584494) {
              const _0x216641 = this.removeIndentationOnCurrentLine();
              this.appendText(`\`\`\` ${_0x39853d}
`);
              this.appendText(`${_0x216641}${_0x584494[2]}
`);
              this.appendText(_0x216641);
              this.walkChildren(_0x2c387f);
              this.appendText('\n```\n');
              return false;
            }
          } else {
            if (((_0x42f7d4 = _0x2c387f.firstChild) === null || _0x42f7d4 === undefined ? undefined : _0x42f7d4.type.includes('list')) && _0x2c387f.firstChild?.type !== 'definition_list') {
              return true;
            } else {
              if (_0x1b19f8 && _0x1b19f8.text.endsWith(':')) {
                const _0x289d8b = this._forceLiteral;
                this._forceLiteral = true;
                this.pushIndentMode(_0x1abc40.Literal);
                this.pushLineFeedMode(_0x48da87.Literal);
                this.appendText('\n');
                const _0x555d5a = this.getNodeIndentation(_0x2c387f);
                this.appendText(_0x483616.MarkdownSpace.repeat(_0x555d5a.length));
                this.walkChildren(_0x2c387f);
                this.popLineFeedMode();
                this.popIndentMode();
                this._forceLiteral = _0x289d8b;
              } else {
                const _0x2cd549 = this.removeIndentationOnCurrentLine();
                const _0x90787f = Math.ceil(_0x2cd549.length / 4);
                this.blockIndent(_0x90787f);
                this.appendText('\n');
                this.walkChildren(_0x2c387f);
                this.blockDedent();
              }
            }
          }
          return false;
        }
        blockIndent(_0x5a9166 = 1) {
          this._blockIndents.push(_0x5a9166);
          this.appendText('<ul>\n'.repeat(_0x5a9166));
          if (_0x5a9166 > 0) {
            this.appendText('\n');
          }
        }
        blockDedent() {
          const _0x5bdaee = this._blockIndents.pop() || 0;
          this.appendText('</ul>\n'.repeat(_0x5bdaee));
        }
        currentBlockIndent() {
          return this._blockIndents[this._blockIndents.length - 1] || 0;
        }
        visitLine(_0x39c375) {
          if (_0x39c375.nextSibling) {
            this.walkChildren(_0x39c375);
            this.appendText(' \\');
            return false;
          }
          return true;
        }
        visitSimpleTableParagraph(_0x18c2ff) {
          const _0x5133c9 = this.getNodeIndentation(_0x18c2ff);
          this.removeIndentationOnCurrentLine();
          const _0x26c3b2 = _0x18c2ff.text.split('\n').map(_0x5208a1 => _0x5208a1.startsWith(_0x5133c9) ? _0x5208a1.slice(_0x5133c9.length) : _0x5208a1);
          const _0x442e81 = _0x26c3b2[0];
          const _0x465f2e = [];
          for (let _0xecc9c1 = 1; _0xecc9c1 < _0x442e81.length; _0xecc9c1++) {
            if (_0x442e81[_0xecc9c1] === '=' && _0x442e81[_0xecc9c1 + 1] === ' ') {
              _0x465f2e.push(_0xecc9c1 + 1);
            }
          }
          const _0x1500c2 = [];
          let _0x3fc296 = false;
          for (let _0x54ac47 = 1; _0x54ac47 < _0x26c3b2.length; _0x54ac47++) {
            const _0x24e313 = _0x26c3b2[_0x54ac47];
            let _0x4f4b00 = _0x465f2e.reduce((_0x16c122, _0x2ca828, _0x578b05) => {
              const _0x199cc1 = _0x578b05 * 2;
              return _0x16c122.slice(0, _0x2ca828 + _0x199cc1) + ' | ' + _0x16c122.slice(_0x2ca828 + 1 + _0x199cc1);
            }, _0x24e313);
            const _0x1c6373 = _0x4f4b00.split('|');
            const _0x349655 = _0x1c6373[0].trim().length === 0;
            const _0xb25691 = _0x54ac47 > 1 && !_0x3fc296;
            _0x4f4b00 = `| ${_0x4f4b00.trim()} |`;
            if (_0x4f4b00.includes('===') && _0x54ac47 === _0x26c3b2.length - 1) {
              continue;
            } else {
              if (_0x4f4b00.includes('===') && _0x54ac47 !== 0 || _0x4f4b00.includes('---') && _0x54ac47 !== 0) {
                const _0x295586 = _0x4f4b00.replace(/=/g, '-');
                _0x1500c2.push(_0x295586);
                _0x3fc296 = true;
              } else {
                if (_0x349655 || _0xb25691) {
                  const _0x4a7b8a = _0x1500c2.pop();
                  const _0x4e4948 = _0x4a7b8a.split('|').slice(1, -1);
                  const _0x46f451 = _0x4e4948.map((_0x2f3688, _0x108efb) => {
                    return _0x2f3688.trim() + ' <br/>' + _0x1c6373[_0x108efb].trim();
                  });
                  const _0x19b799 = `| ${_0x46f451.join(' | ')} |`;
                  _0x1500c2.push(_0x19b799);
                } else {
                  _0x1500c2.push(_0x4f4b00);
                }
              }
            }
          }
          this.appendText(_0x1500c2.join('\n'));
          this.appendText('\n');
          return false;
        }
        visitGridTableParagraph(_0x4c984b) {
          this.removeIndentationOnCurrentLine();
          const _0x183cc2 = _0x4c984b.text.split('\n');
          const _0x33069f = [];
          let _0x5d682b = 0;
          for (let _0x51e69d = 1; _0x51e69d < _0x183cc2.length; _0x51e69d++) {
            const _0x3966f3 = _0x183cc2[_0x51e69d].split('|').slice(1, -1).map(_0x31a9ea => _0x31a9ea.trim());
            if (_0x3966f3.length > 0) {
              if (_0x5d682b < _0x33069f.length) {
                const _0x35543c = _0x33069f[_0x33069f.length - 1];
                const _0xe8d0fb = _0x35543c.map((_0x2bacf4, _0x5e96ed) => {
                  if (_0x3966f3[_0x5e96ed].length > 0) {
                    return _0x2bacf4 + ' <br/>' + _0x3966f3[_0x5e96ed];
                  } else {
                    return _0x2bacf4;
                  }
                });
                _0x33069f[_0x5d682b] = _0xe8d0fb;
              } else {
                _0x33069f.push(_0x3966f3);
              }
            }
            _0x5d682b = _0x3966f3.length <= 0 ? _0x5d682b + 1 : _0x5d682b;
            if (_0x5d682b === 1) {
              const _0x15865b = _0x33069f[0];
              const _0x217d5a = _0x15865b.map(_0x463cff => '---');
              _0x33069f.push(_0x217d5a);
              _0x5d682b++;
            }
          }
          const _0x36e358 = _0x33069f.map(_0x5ee619 => `| ${_0x5ee619.join(' | ')} |`);
          this.appendText(_0x36e358.join('\n'));
          this.appendText('\n');
          return false;
        }
        visitText(_0x29b18c) {
          if (!this.findParent(_0x29b18c, _0x429602 => {
            return _0x429602.type === 'literal_block' || _0x429602.type === 'literal' || _0x429602.type === 'directive' && _0x429602.firstNamedChild?.text === 'code-block' || _0x429602.type === 'block_quote';
          }) && !_0x29b18c.text.includes('``__') && !_0x29b18c.text.includes('__``')) {
            this.appendText(_0x29b18c.text.replace(/__/g, '\\_\\_'));
            return false;
          } else {
            if (_0x29b18c.text.startsWith(':pep:`')) {
              const _0x554baa = _0x29b18c.text.match(_0x5ec879);
              if (_0x554baa) {
                const _0xbb8b40 = _0x554baa[1];
                this.appendText(`[PEP ${_0xbb8b40}](${_0x5a9419}${_0xbb8b40}${_0x554baa[2]})`);
                return false;
              }
            }
          }
          this.appendText(_0x29b18c.text);
          return false;
        }
        handleError(_0x51077d) {
          const _0x5c1348 = this.originalText.slice(_0x51077d.startIndex);
          this.appendText(`
*ERROR*: Pylance failed to parse docstring at index ${_0x51077d.startIndex}

`);
          this.appendText(_0x5c1348);
          this._foundError = true;
          return false;
        }
      }
      exports.MarkdownFormatter = _0x3b8abd;
    },
    55166: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ParameterFormatter = undefined;
      const _0x4f2867 = require(52820);
      class _0x3f6f20 extends _0x4f2867.MarkdownFormatter {
        constructor(_0x57f926, _0x4a4d66, _0x4f7178) {
          super(_0x4a4d66, _0x4f7178);
          this._paramName = _0x57f926;
          this._paramString = '';
        }
        static extractParameterDocumentation(_0x3b6558, _0x1239ff, _0x5ea435, _0x6a76d4) {
          const _0x31d8dd = new _0x3f6f20(_0x1239ff, _0x5ea435, !!_0x6a76d4);
          _0x31d8dd.walk(_0x3b6558);
          return _0x31d8dd._paramString;
        }
        visitSpecialTermListItem(_0x529b05) {
          if (this._paramString === '' && _0x529b05.text.includes(this._paramName)) {
            this.removeIndentationOnCurrentLine();
            const _0xb3d192 = this.getResult().length;
            super.visitSpecialTermListItem(_0x529b05);
            const _0x4132ff = this.getResult().slice(_0xb3d192);
            const _0x4ba0f2 = _0x4132ff.match(/\*\*(.+?)\*\*\s*/);
            if (_0x4ba0f2 && _0x4ba0f2[1].includes(this._paramName)) {
              this._paramString = _0x4132ff.replace(/^\s*<ul>([\s\S]*)<\/ul>\s*$/, '$1') + '\n---\n';
            }
          }
          return false;
        }
      }
      exports.ParameterFormatter = _0x3f6f20;
    },
    80019: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RestructuredTextParser = undefined;
      exports.initialize = _0x3b8b5a;
      const _0xb8d866 = require(66509);
      let _0x2d9d0e = undefined;
      async function _0x3b8b5a(_0x115a7f, _0x43b9af) {
        await _0xb8d866.init({
          locateFile(_0x1e2e52, _0x4ba53b) {
            return _0x115a7f.toString();
          }
        });
        _0x2d9d0e = await _0xb8d866.Language.load(_0x43b9af);
      }
      class _0x535198 {
        parse(_0x36ba40, _0x3f8259, _0x2a9e59) {
          try {
            const _0x2d0148 = new _0xb8d866();
            _0x2d0148.setLanguage(_0x2d9d0e);
            return _0x2d0148.parse(_0x36ba40, _0x2a9e59);
          } catch (_0x561331) {
            _0x3f8259.error(`Error parsing docstring: ${_0x561331}`);
            return undefined;
          }
        }
      }
      exports.RestructuredTextParser = _0x535198;
    },
    40804: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.NonVisibleSpace = exports.PythonCodeBlock = exports.DefaultIndent = exports.EmptyClassifier = exports.EmptyDefinitionDirective = exports.ChildFieldMarker = exports.MarkdownSpaceLength = exports.MarkdownSpace = undefined;
      exports.MarkdownSpace = '&nbsp;';
      exports.MarkdownSpaceLength = exports.MarkdownSpace.length;
      exports.ChildFieldMarker = 'childfieldmarker';
      exports.EmptyDefinitionDirective = ':empty: ``';
      exports.EmptyClassifier = '``';
      exports.DefaultIndent = '    ';
      exports.PythonCodeBlock = '.. code-block:: python';
      exports.NonVisibleSpace = '⁠';
    },
    36984: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.isAllSame = _0x572a59;
      exports.isParameters = _0x2b5b6d;
      exports.isType = _0x535266;
      exports.isReturns = _0x1a06a0;
      exports.isAttributes = _0x50c30b;
      exports.isRaises = _0xd64a44;
      exports.isVar = _0x58b2e8;
      exports.medianIndent = _0x188d56;
      exports.commonIndent = _0x104b15;
      exports.cleanIndent = _0x37d349;
      exports.fixupCommonMarkdownLiterals = _0x4a68cf;
      const _0x21dd5d = require(40804);
      function _0x572a59(_0x2f8d97) {
        return _0x2f8d97.split('').every((_0x24dcb5, _0x2d964a, _0x369308) => _0x24dcb5 === _0x369308[0]);
      }
      function _0x2b5b6d(_0xc118c3) {
        const _0x51a6d8 = _0xc118c3.toLowerCase();
        return _0x51a6d8 === 'parameters' || _0x51a6d8 === 'parameter' || _0x51a6d8 === 'args' || _0x51a6d8 === 'arg' || _0x51a6d8 === 'arguments' || _0x51a6d8 === 'argument' || _0x51a6d8 === 'params' || _0x51a6d8 === 'param' || _0x51a6d8 === 'other parameters';
      }
      function _0x535266(_0x1b78b9) {
        return _0x1b78b9.toLowerCase() === 'type';
      }
      function _0x1a06a0(_0x1c855f) {
        const _0x2dca2e = _0x1c855f.toLowerCase();
        return _0x2dca2e === 'returns' || _0x2dca2e === 'return' || _0x2dca2e === 'yields' || _0x2dca2e === 'yield';
      }
      function _0x50c30b(_0x2b3362) {
        return _0x2b3362.toLowerCase().includes('attributes');
      }
      function _0xd64a44(_0xbd60db) {
        return _0xbd60db.toLowerCase().includes('raise');
      }
      function _0x58b2e8(_0x38ae9c) {
        const _0x456214 = _0x38ae9c.toLowerCase();
        return _0x456214 === 'var' || _0x456214 === 'vartype';
      }
      function _0x188d56(_0x3a4ee0) {
        const _0x55493c = _0x3a4ee0.map(_0x3c0508 => _0x3c0508.search(/\S/));
        _0x55493c.sort((_0x1a5f89, _0x41220d) => _0x1a5f89 - _0x41220d);
        const _0x161648 = _0x55493c[_0x55493c.length / 2];
        return ' '.repeat(_0x161648 > 0 ? _0x161648 : 4);
      }
      function _0x104b15(_0x19b9e6, _0x52c74d = '') {
        let _0x2ec53e = null;
        let _0x5cc812 = '';
        let _0x202975 = 0;
        let _0x384402 = 0;
        for (let _0x5b4a5d = 1; _0x5b4a5d < _0x19b9e6.length; _0x5b4a5d++) {
          const _0xca3207 = _0x19b9e6[_0x5b4a5d];
          if (_0xca3207.trim() !== '') {
            if (_0x384402 === 0 && !_0x2ec53e) {
              _0x2ec53e = _0xca3207.match(/^\s+/);
              _0x5cc812 = _0x2ec53e ? _0x2ec53e[0] : '';
            }
            _0x384402++;
            if (_0x5cc812 === '' && /^\.\s+/.test(_0xca3207)) {
              _0x2ec53e = _0xca3207.match(/^\.\s+/);
              _0x5cc812 = _0x2ec53e ? _0x2ec53e[0] : '';
            }
            if (_0x5cc812.length > 0 && _0xca3207.startsWith(_0x5cc812)) {
              _0x202975++;
            }
          }
        }
        if (_0x202975 > _0x384402 * 2 / 3) {
          if (_0x5cc812.length > 0) {
            return _0x5cc812;
          } else {
            return _0x52c74d;
          }
        }
        return '';
      }
      function _0x37d349(_0x52104b) {
        const _0x14d8aa = _0x104b15(_0x52104b.split('\n'));
        const _0x5e21dd = _0x52104b.split('\n').map(_0x135eaf => {
          if (_0x135eaf.trim() !== '') {
            if (_0x14d8aa.length > 0 && _0x135eaf.startsWith(_0x14d8aa)) {
              return _0x135eaf.slice(_0x14d8aa.length);
            }
          }
          return _0x135eaf;
        });
        return _0x5e21dd.join('\n');
      }
      function _0x4a68cf(_0x400623) {
        const _0x39f967 = _0x400623.split('\n');
        const _0x5a6b65 = [];
        let _0x48ddfa = false;
        let _0x2a803d = '';
        let _0xdd43b6 = '';
        for (let _0x258f07 = 0; _0x258f07 < _0x39f967.length; _0x258f07++) {
          const _0x5828f4 = _0x39f967[_0x258f07];
          const _0x4d979f = _0x5828f4.trim();
          if (_0x4d979f.startsWith('```') || _0x4d979f.startsWith('~~~')) {
            const _0x5ad850 = /^(`{3,}|~{3,})\s*(python\s*)*(.*)/.exec(_0x4d979f);
            _0x48ddfa = !_0x48ddfa;
            _0x2a803d = _0x5828f4.match(/^\s+/)?.[0] || '';
            _0xdd43b6 = '';
            _0x5a6b65.push('');
            if (_0x48ddfa) {
              _0x5a6b65.push(_0x21dd5d.PythonCodeBlock);
              if (_0x5ad850 && _0x5ad850[3].length) {
                _0x5a6b65.push(`${_0x21dd5d.DefaultIndent}${_0x5ad850[3]}`);
              }
            }
          } else {
            if (_0x48ddfa && _0x4d979f.length > 0) {
              const _0x142710 = _0x5828f4.match(/^\s+/)?.[0] || '';
              if (_0x142710.length <= _0x2a803d.length) {
                _0xdd43b6 = _0x21dd5d.DefaultIndent;
              }
              _0x5a6b65.push(`${_0xdd43b6}${_0x5828f4}`);
            } else {
              if (/^\s+\*.*?\s+:\s+.*$/.test(_0x5828f4)) {
                _0x5a6b65.push(_0x5828f4.replace(':', _0x21dd5d.NonVisibleSpace + ':' + _0x21dd5d.NonVisibleSpace));
              } else {
                _0x5a6b65.push(_0x5828f4);
              }
            }
          }
        }
        return _0x5a6b65.join('\n');
      }
    },
    44138: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DocumentChangeTracker = undefined;
      const _0x2dc489 = require(55890);
      const _0x1dad09 = require(34455);
      const _0x2d47cd = require(88754);
      class _0x44bcc8 {
        constructor(_0x24a028, _0x23dc1f) {
          this.fileUri = _0x24a028;
          this._baseDocument = _0x23dc1f;
          this._documents = [];
          this._documents.push({
            document: _0x2dc489.TextDocument.create('N/A', 'python', 0, this._baseDocument),
            forwardChanges: [],
            reverseChanges: []
          });
        }
        get containsChange() {
          return this._documents.length > 1;
        }
        get currentDocument() {
          return this._lastTextEntry.document.getText();
        }
        applyChanges(_0x156a58) {
          _0x156a58 = _0x1dad09.isArray(_0x156a58) ? _0x156a58 : [_0x156a58];
          const _0xf844e0 = _0x156a58.map(_0x282997 => ({
            range: _0x282997.range,
            newText: _0x282997.replacementText
          }));
          const _0x10739b = this._lastTextEntry.document;
          const _0x40f019 = _0x2dc489.TextDocument.create(_0x10739b.uri, _0x10739b.languageId, _0x10739b.version + 1, _0x2dc489.TextDocument.applyEdits(_0x10739b, _0xf844e0));
          const _0x4cb4bd = _0x156a58.map(_0x95542 => ({
            range: _0x2d47cd.TextRange.fromBounds(_0x10739b.offsetAt(_0x95542.range.start), _0x10739b.offsetAt(_0x95542.range.end)),
            replacementText: _0x95542.replacementText
          })).sort((_0xf11294, _0x3cdb15) => _0xf11294.range.start - _0x3cdb15.range.start);
          const _0x3feac4 = this._createReverseChanges(_0x10739b.getText(), _0x4cb4bd);
          this._documents.push({
            document: _0x40f019,
            forwardChanges: _0x4cb4bd,
            reverseChanges: _0x3feac4
          });
          return this.currentDocument;
        }
        tryConvertToOriginal(_0x4ade07) {
          if (_0x2d47cd.Position.is(_0x4ade07)) {
            return this._tryConvertToOriginal(_0x4ade07);
          }
          const _0x4f3209 = this._tryConvertToOriginal(_0x4ade07.start);
          const _0x97129b = this._tryConvertToOriginal(_0x4ade07.end);
          if (!!_0x4f3209 && !!_0x97129b) {
            return {
              start: _0x4f3209,
              end: _0x97129b
            };
          } else {
            return undefined;
          }
        }
        tryConvertFromOriginal(_0x4c8e77) {
          if (_0x2d47cd.Position.is(_0x4c8e77)) {
            return this._tryConvertFromOriginal(_0x4c8e77);
          }
          const _0x37ca93 = this._tryConvertFromOriginal(_0x4c8e77.start);
          const _0x4e8ff4 = this._tryConvertFromOriginal(_0x4c8e77.end);
          if (!!_0x37ca93 && !!_0x4e8ff4) {
            return {
              start: _0x37ca93,
              end: _0x4e8ff4
            };
          } else {
            return undefined;
          }
        }
        get _lastTextEntry() {
          return this._documents[this._documents.length - 1];
        }
        _tryConvertToOriginal(_0x21cdb9) {
          let _0x59f9c0 = this._lastTextEntry.document.offsetAt(_0x21cdb9);
          for (let _0x1b12ff = this._documents.length - 1; _0x1b12ff >= 1; _0x1b12ff--) {
            const _0x353743 = this._applyDelta(_0x59f9c0, this._documents[_0x1b12ff].reverseChanges);
            if (_0x353743 === undefined) {
              return undefined;
            }
            _0x59f9c0 += _0x353743;
          }
          return this._documents[0].document.positionAt(_0x59f9c0);
        }
        _tryConvertFromOriginal(_0x30975f) {
          let _0x1d92d2 = this._documents[0].document.offsetAt(_0x30975f);
          for (let _0x2ea27c = 1; _0x2ea27c < this._documents.length; _0x2ea27c++) {
            const _0x119395 = this._applyDelta(_0x1d92d2, this._documents[_0x2ea27c].forwardChanges);
            if (_0x119395 === undefined) {
              return undefined;
            }
            _0x1d92d2 += _0x119395;
          }
          return this._lastTextEntry.document.positionAt(_0x1d92d2);
        }
        _applyDelta(_0x3e2b09, _0x57365c) {
          let _0x198ef3 = 0;
          for (const _0x43cb7a of _0x57365c) {
            const _0x287f0a = _0x2d47cd.TextRange.getEnd(_0x43cb7a.range);
            if (_0x3e2b09 <= _0x43cb7a.range.start) {
              continue;
            }
            if (_0x43cb7a.range.start < _0x3e2b09 && _0x3e2b09 < _0x287f0a) {
              return undefined;
            }
            if (_0x287f0a <= _0x3e2b09) {
              _0x198ef3 += _0x43cb7a.replacementText.length - _0x43cb7a.range.length;
            }
          }
          return _0x198ef3;
        }
        _createReverseChanges(_0x255720, _0x7ac694) {
          const _0x2c6a9c = [];
          let _0x3462a7 = 0;
          for (const _0x54eda1 of _0x7ac694) {
            _0x2c6a9c.push({
              range: _0x2d47cd.TextRange.create(_0x54eda1.range.start + _0x3462a7, _0x54eda1.replacementText.length),
              replacementText: _0x255720.substring(_0x54eda1.range.start, _0x2d47cd.TextRange.getEnd(_0x54eda1.range))
            });
            _0x3462a7 += _0x54eda1.replacementText.length - _0x54eda1.range.length;
          }
          return _0x2c6a9c;
        }
      }
      exports.DocumentChangeTracker = _0x44bcc8;
    },
    6665: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DocumentTransformer = undefined;
      const _0x3cfa06 = require(56911);
      const _0x3349c6 = require(34455);
      const _0x47d10c = require(88754);
      const _0x1614f0 = require(27113);
      const _0x504c60 = require(47351);
      const _0x410d49 = require(44138);
      class _0x546540 {
        constructor(_0x64ecfa) {
          this._transformers = _0x64ecfa;
        }
        run(_0x231c34, _0x3ae261, _0x5df1b6, _0x225f43) {
          const _0x3868b8 = _0x504c60.CompletionListConverter.fromLSP(_0x3ae261).data;
          const _0x46fd79 = _0x1614f0.Uri.parse(_0x3868b8.uri, _0x231c34.service.serviceProvider);
          const _0x5b9550 = _0x3868b8.position;
          return this._runCore(_0x231c34, _0x46fd79, _0x5b9550, _0x5df1b6, _0x43355b => {
            const _0x4df9e2 = {
              ..._0x3868b8,
              position: _0x43355b
            };
            _0x3ae261.data = _0x4df9e2;
            return _0x3ae261;
          }, _0x225f43);
        }
        runWithPosition(_0x761bfb, _0x2406f4, _0x1a201f, _0x4f021f) {
          const _0x595555 = _0x1614f0.Uri.parse(_0x2406f4.textDocument.uri, _0x761bfb.service.serviceProvider);
          return this._runCore(_0x761bfb, _0x595555, _0x2406f4.position, _0x1a201f, _0x51fe29 => _0x51fe29, _0x4f021f);
        }
        _runCore(_0x1ac4be, _0xe1b31a, _0x373477, _0x2e7799, _0x1f1a72, _0x3c6e99) {
          const _0x1d88bc = _0x1ac4be.service.getSourceFile(_0xe1b31a);
          const _0x5e6a36 = _0x1d88bc === null || _0x1d88bc === undefined ? undefined : _0x1d88bc.getFileContent();
          if (_0x5e6a36 === undefined) {
            return _0x1ac4be.service.run(_0x256ee7 => _0x2e7799(_0x256ee7, _0x1f1a72(_0x373477)), _0x3c6e99);
          }
          const _0x1bbf51 = this._transformers.filter(_0x192624 => _0x192624.canApply(_0x1ac4be.service.backgroundAnalysisProgram.program, _0xe1b31a, _0x373477, _0x3c6e99));
          if (_0x1bbf51.length === 0) {
            return _0x1ac4be.service.run(_0x5f09ef => _0x2e7799(_0x5f09ef, _0x1f1a72(_0x373477)), _0x3c6e99);
          }
          let _0x466f7b;
          const _0x398553 = new _0x410d49.DocumentChangeTracker(_0xe1b31a, _0x5e6a36);
          _0x1ac4be.service.runEditMode(_0x208d85 => {
            _0x1bbf51.forEach(_0x398d33 => _0x398d33.apply(_0x208d85, _0xe1b31a, _0x373477, _0x398553, _0x3c6e99));
            if (!_0x398553.containsChange) {
              _0x466f7b = _0x2e7799(_0x208d85, _0x1f1a72(_0x373477));
              return;
            }
            const _0x4cee78 = _0x398553.tryConvertFromOriginal(_0x373477);
            if (!_0x4cee78) {
              _0x466f7b = _0x2e7799(_0x208d85, _0x1f1a72(_0x373477));
              return;
            }
            _0x466f7b = _0x2e7799(_0x208d85, _0x1f1a72(_0x4cee78));
            if (_0x466f7b !== undefined && _0x466f7b !== null) {
              _0x466f7b = this._convertResults(_0x398553, _0x466f7b);
            }
          }, _0x3c6e99);
          return _0x466f7b;
        }
        _convertResults(_0x5c64d1, _0x19e9d2) {
          if (_0x53d5bf(_0x19e9d2)) {
            return _0x148612.convertCompletionList(_0x5c64d1, _0x19e9d2);
          }
          if (_0x23f652(_0x19e9d2)) {
            return _0x148612.convertCompletionItem(_0x5c64d1, _0x19e9d2);
          }
          if (_0x24b921(_0x19e9d2)) {
            return _0x148612.convertDocumentRanges(_0x5c64d1, _0x19e9d2);
          }
          return _0x19e9d2;
        }
      }
      exports.DocumentTransformer = _0x546540;
      class _0x148612 {
        static convertRange(_0x33673d, _0x262476) {
          return _0x33673d.tryConvertToOriginal(_0x262476);
        }
        static convertTextEdit(_0x1cd870, _0x324374) {
          const _0x4e48c2 = this.convertRange(_0x1cd870, _0x324374.range);
          if (!_0x4e48c2) {
            return undefined;
          }
          return {
            ..._0x324374,
            range: _0x4e48c2
          };
        }
        static convertInsertionEdit(_0xf881de, _0x18e6d5) {
          const _0x3c67d2 = this.convertRange(_0xf881de, _0x18e6d5.insert);
          if (!_0x3c67d2) {
            return undefined;
          }
          const _0x80b67b = this.convertRange(_0xf881de, _0x18e6d5.replace);
          if (!_0x80b67b) {
            return undefined;
          }
          return {
            ..._0x18e6d5,
            insert: _0x3c67d2,
            replace: _0x80b67b
          };
        }
        static convertCompletionItemData(_0x4d81a0, _0x1c6055) {
          const _0xbbe5c6 = _0x4d81a0.tryConvertToOriginal(_0x1c6055.position);
          if (!_0xbbe5c6) {
            return undefined;
          }
          return {
            ..._0x1c6055,
            position: _0xbbe5c6
          };
        }
        static convertCompletionItem(_0x5d4c67, _0x3efa70) {
          const _0x1287b4 = _0x3efa70.textEdit ? _0x3cfa06.TextEdit.is(_0x3efa70.textEdit) ? this.convertTextEdit(_0x5d4c67, _0x3efa70.textEdit) : this.convertInsertionEdit(_0x5d4c67, _0x3efa70.textEdit) : undefined;
          if (!_0x1287b4) {
            return _0x3efa70;
          }
          const _0xae567d = _0x3efa70.additionalTextEdits;
          if (_0xae567d) {
            for (let _0x875148 = 0; _0x875148 < _0xae567d.length; _0x875148++) {
              const _0x5dce6d = this.convertTextEdit(_0x5d4c67, _0xae567d[_0x875148]);
              if (!_0x5dce6d) {
                return _0x3efa70;
              }
              _0xae567d[_0x875148] = _0x5dce6d;
            }
          }
          const _0x4b9c8c = _0x3efa70.data ? this.convertCompletionItemData(_0x5d4c67, _0x3efa70.data) : undefined;
          return {
            ..._0x3efa70,
            textEdit: _0x1287b4,
            additionalTextEdits: _0xae567d,
            data: _0x4b9c8c
          };
        }
        static convertCompletionList(_0x53e57e, _0x1bbf73) {
          for (let _0x398be4 = 0; _0x398be4 < _0x1bbf73.items.length; _0x398be4++) {
            const _0x449bfb = this.convertCompletionItem(_0x53e57e, _0x1bbf73.items[_0x398be4]);
            _0x1bbf73.items[_0x398be4] = _0x449bfb;
          }
          return _0x1bbf73;
        }
        static convertDocumentRange(_0x2d1305, _0x46d3f) {
          const _0x4ebc95 = this.convertRange(_0x2d1305, _0x46d3f.range);
          if (!_0x4ebc95) {
            return _0x46d3f;
          }
          return {
            ..._0x46d3f,
            range: _0x4ebc95
          };
        }
        static convertDocumentRanges(_0x2afa63, _0x75175d) {
          for (let _0x43051e = 0; _0x43051e < _0x75175d.length; _0x43051e++) {
            if (!_0x75175d[_0x43051e].uri.equals(_0x2afa63.fileUri)) {
              continue;
            }
            const _0x48b73c = this.convertDocumentRange(_0x2afa63, _0x75175d[_0x43051e]);
            _0x75175d[_0x43051e] = _0x48b73c;
          }
          return _0x75175d;
        }
      }
      function _0x53d5bf(_0x1ef9bf) {
        return _0x1ef9bf && _0x3349c6.isBoolean(_0x1ef9bf.isIncomplete) && Array.isArray(_0x1ef9bf.items);
      }
      function _0x23f652(_0x10fafa) {
        return _0x10fafa && _0x3349c6.isString(_0x10fafa.lable);
      }
      function _0x24b921(_0x2296de) {
        return _0x2296de && _0x3349c6.isArray(_0x2296de) && (_0x2296de.length === 0 || _0xbf0cf0(_0x2296de[0]));
      }
      function _0xbf0cf0(_0x247797) {
        return _0x247797 && _0x3349c6.isString(_0x247797.path) && _0x47d10c.Range.is(_0x247797.range);
      }
    },
    3756: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.decrypt = _0x332746;
      exports.encrypt = _0x3526fa;
      const _0x2232dd = __importStar(require(76982));
      const _0x5ca58a = require(96662);
      const _0x30f3f8 = 'aes-192-cbc';
      const _0x3c72cf = 'SEE  LICENSE.txt';
      const _0x5ee907 = _0x2232dd.scryptSync(_0x5ca58a.licenseErrorText, _0x3c72cf, 24);
      const _0x23831d = Buffer.from(_0x3c72cf);
      function _0x332746(_0x109352) {
        const _0x61132c = _0x2232dd.createDecipheriv(_0x30f3f8, _0x5ee907, _0x23831d);
        let _0x290b51 = _0x61132c.update(_0x109352, 'hex', 'utf8');
        _0x290b51 += _0x61132c.final('utf8');
        return _0x290b51;
      }
      function _0x3526fa(_0x423cda) {
        const _0x56e813 = _0x2232dd.createCipheriv(_0x30f3f8, _0x5ee907, _0x23831d);
        let _0x4ac470 = _0x56e813.update(_0x423cda, 'utf8', 'hex');
        _0x4ac470 += _0x56e813.final('hex');
        return _0x4ac470;
      }
    },
    54267: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getUniqueUri = _0x2bb116;
      const _0x4174e7 = require(91426);
      const _0x32447a = require(12522);
      function _0x2bb116(_0x50ce5e, _0x2eef42, _0xd1fc2d) {
        const _0x154bbe = _0x2eef42.getDirectory();
        const _0x2046d1 = _0x2eef42.fileNameWithoutExtensions;
        const _0xefc57 = _0x2eef42.lastExtension;
        const _0x39e1db = _0x50ce5e.service.getConfigOptions();
        let _0x9fde32 = _0x2eef42;
        let _0x1da90d = 1;
        let _0x303415 = _0x32447a.matchFileSpecs(_0x39e1db, _0x2eef42, true);
        while (!_0x28ecc9(_0x50ce5e, _0x9fde32, _0x303415)) {
          _0x4174e7.throwIfCancellationRequested(_0xd1fc2d);
          _0x9fde32 = _0x154bbe.combinePaths(_0x2046d1 + '_' + _0x1da90d++ + _0xefc57);
          _0x303415 = _0x1da90d <= 100 ? _0x303415 : false;
        }
        return _0x9fde32;
      }
      function _0x28ecc9(_0x4ca055, _0x3b80d8, _0x49473f) {
        if (_0x4ca055.service.hasSourceFile(_0x3b80d8) || _0x4ca055.service.fs.existsSync(_0x3b80d8)) {
          return false;
        }
        const _0x1e7208 = _0x4ca055.service.getConfigOptions();
        return !_0x49473f || _0x32447a.matchFileSpecs(_0x1e7208, _0x3b80d8, true);
      }
    },
    93819: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.formatCode = _0x15179f;
      exports.splitCodeLines = _0x1d2f06;
      function _0x15179f(_0x4103fc) {
        const _0x30d0d9 = [];
        const _0x54427f = _0x4103fc.split(/\r?\n/);
        if (!_0x54427f || _0x54427f.length === 0) {
          return _0x30d0d9;
        }
        for (const _0x365df2 of _0x54427f) {
          if (_0x365df2.trim().length > 0) {
            _0x30d0d9.push(_0x365df2);
          }
        }
        return _0x30d0d9;
      }
      function _0x1d2f06(_0x48bf9a) {
        const _0x3266be = _0x48bf9a.split(/\r?\n/);
        if (!_0x3266be || _0x3266be.length === 0) {
          return [];
        }
        return _0x3266be;
      }
    },
    24835: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getAttrMode = _0x452b19;
      exports.getBestMatchGetAttrMethods = _0x3b1461;
      exports.getGetAttrMethods = _0x45d6ff;
      exports.firstParamsExcludingSelf = _0x8111d7;
      const _0x29d774 = require(21024);
      const _0x541662 = require(34455);
      const _0x3414ca = '__getattribute__';
      const _0x3b0887 = '__getattr__';
      const _0x2776d6 = '__setattr__';
      const _0x2c47a9 = '__delattr__';
      function _0x452b19(_0x489237) {
        if (_0x489237.parent?.nodeType === 3 && _0x489237.parent.d.leftExpr === _0x489237) {
          return 'set';
        }
        if (_0x489237.parent?.nodeType === 17 && _0x489237.parent.d.targets.some(_0x338b9a => _0x338b9a === _0x489237)) {
          return 'del';
        }
        return 'get';
      }
      function _0x3b1461(_0x196f4f, _0x35784e, _0xfc0799) {
        const _0x2b3cf9 = _0x196f4f.getBuiltInType(_0x35784e, 'str');
        if (!_0x29d774.isInstantiableClass(_0x2b3cf9)) {
          return undefined;
        }
        const _0x1cb7e1 = _0x196f4f.getType(_0x35784e.d.leftExpr);
        if (!_0x1cb7e1 || !_0x29d774.isClassInstance(_0x1cb7e1)) {
          return undefined;
        }
        const _0x5866fd = _0x23f654(_0x196f4f, _0x35784e, _0x1cb7e1, _0xfc0799);
        if (!_0x5866fd) {
          return undefined;
        }
        if (_0x29d774.isFunction(_0x5866fd.type)) {
          return _0x5866fd.type;
        }
        if (!_0x29d774.isOverloaded(_0x5866fd.type)) {
          return undefined;
        }
        const _0x55ddbf = _0x29d774.ClassType.cloneWithLiteral(_0x29d774.ClassType.cloneAsInstance(_0x2b3cf9), _0x35784e.d.member.d.value);
        const _0x399eb7 = [{
          argCategory: 0,
          typeResult: {
            type: _0x55ddbf
          }
        }];
        if (_0xfc0799 === 'set') {
          const _0x2624c2 = _0xae39dc(_0x196f4f, _0x35784e);
          _0x399eb7.push({
            argCategory: 0,
            typeResult: {
              type: _0x2624c2?.type ?? _0x29d774.UnknownType.create(),
              isIncomplete: !!_0x2624c2?.isIncomplete
            }
          });
        }
        return _0x196f4f.getBestOverloadForArgs(_0x35784e.d.member, {
          type: _0x5866fd.type
        }, _0x399eb7);
      }
      function _0x45d6ff(_0x556b7c, _0x3b4a3c, _0x1a30d9, _0x5d474c = false) {
        const _0x4112c7 = [];
        const _0x4fab70 = _0x556b7c.getType(_0x3b4a3c);
        if (!_0x4fab70 || !_0x29d774.isClassInstance(_0x4fab70)) {
          return _0x4112c7;
        }
        const _0xd7e31 = _0x23f654(_0x556b7c, _0x3b4a3c, _0x4fab70, _0x1a30d9);
        if (!_0xd7e31 || !_0xd7e31.classType) {
          return _0x4112c7;
        }
        let _0x4f0ec5 = undefined;
        if (_0x29d774.isFunction(_0xd7e31.type)) {
          _0x4f0ec5 = _0xd7e31.type.shared.name;
        } else {
          if (_0x29d774.isOverloaded(_0xd7e31.type) && _0x29d774.OverloadedType.getOverloads(_0xd7e31.type).length > 0) {
            _0x4f0ec5 = _0x29d774.OverloadedType.getOverloads(_0xd7e31.type)[0].shared.name;
          } else {
            if (_0x29d774.isOverloaded(_0xd7e31.type) && _0x29d774.OverloadedType.getImplementation(_0xd7e31.type)) {
              _0x4f0ec5 = _0x29d774.OverloadedType.getImplementation(_0xd7e31.type)?.shared?.name;
            }
          }
        }
        if (_0x4f0ec5 === undefined) {
          return _0x4112c7;
        }
        const _0x1503f2 = _0x556b7c.getBoundMagicMethod(_0x4fab70, _0x4f0ec5);
        if (!_0x1503f2) {
          return _0x4112c7;
        }
        if (_0x29d774.isFunction(_0x1503f2)) {
          _0x24ae1c(_0x1503f2, _0x4112c7, _0x5d474c);
        }
        if (_0x29d774.isOverloaded(_0x1503f2)) {
          _0x29d774.OverloadedType.getOverloads(_0x1503f2).forEach(_0x15c3be => _0x24ae1c(_0x15c3be, _0x4112c7, _0x5d474c));
        }
        if (_0x29d774.isOverloaded(_0x1503f2) && _0x29d774.OverloadedType.getImplementation(_0x1503f2)) {
          _0x24ae1c(_0x29d774.OverloadedType.getImplementation(_0x1503f2), _0x4112c7, _0x5d474c);
        }
        return _0x4112c7;
      }
      function _0x8111d7(_0x59e6b0) {
        return _0x59e6b0.shared.parameters.find(_0x2add26 => !_0x29d774.isTypeVar(_0x2add26._type) || !_0x29d774.TypeVarType.isSelf(_0x2add26._type));
      }
      function _0x24ae1c(_0xb383f7, _0x3b7b34, _0x3ae19f = false) {
        const _0x5bd231 = _0x8111d7(_0xb383f7);
        if (_0x5bd231 === undefined) {
          return;
        }
        const _0x3739c8 = _0x5bd231._type;
        if (_0x3739c8.category === 6 && _0x3739c8.priv.literalValue && _0x541662.isString(_0x3739c8.priv.literalValue)) {
          _0x3b7b34.push(_0xb383f7);
          return;
        }
        if (_0x3739c8.category === 8 && (_0x3739c8.priv.literalClasses.literalStrMap || _0x3739c8.priv.literalInstances.literalStrMap)) {
          _0x3b7b34.push(_0xb383f7);
          return;
        }
        if (_0x3ae19f && _0x3739c8.category === 6 && _0x29d774.ClassType.isBuiltIn(_0x3739c8, 'str')) {
          _0x3b7b34.push(_0xb383f7);
          return;
        }
      }
      function _0x23f654(_0x168fba, _0x17c780, _0x15efc6, _0x2e60d0) {
        var _0xf59449;
        if (_0x2e60d0 === 'get') {
          if ((_0xf59449 = _0x4ed4ef(_0x168fba, _0x17c780, _0x15efc6, _0x3414ca)) !== null && _0xf59449 !== undefined) {
            return _0xf59449;
          } else {
            return _0x4ed4ef(_0x168fba, _0x17c780, _0x15efc6, _0x3b0887);
          }
        }
        if (_0x2e60d0 === 'set') {
          return _0x4ed4ef(_0x168fba, _0x17c780, _0x15efc6, _0x2776d6);
        }
        return _0x4ed4ef(_0x168fba, _0x17c780, _0x15efc6, _0x2c47a9);
      }
      function _0x4ed4ef(_0x4f0421, _0x5e52fd, _0x37ec4c, _0x29fe3d) {
        return _0x4f0421.getTypeOfBoundMember(_0x5e52fd, _0x37ec4c, _0x29fe3d, {
          method: 'get'
        }, undefined, 516);
      }
      function _0xae39dc(_0x574a8c, _0x3c161f) {
        if (_0x3c161f.parent?.nodeType === 3) {
          return _0x574a8c.getTypeResult(_0x3c161f.parent.d.rightExpr);
        }
        return undefined;
      }
    },
    13259: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.wellKnownAbbreviationMap = exports.addImportSimilarityLimit = undefined;
      exports.isPackageInstalled = _0xa2fcee;
      exports.tryGetExistingImportInfo = _0x5070eb;
      const _0x31628d = require(28445);
      const _0x3c7ca9 = require(83760);
      const _0x1b75f1 = require(3433);
      const _0x2cd21b = require(12097);
      const _0x50f65f = require(21024);
      const _0xf1cef0 = require(19013);
      const _0x4b2fe9 = require(61904);
      exports.addImportSimilarityLimit = 0.4;
      exports.wellKnownAbbreviationMap = new Map([['np', {
        importName: 'numpy'
      }], ['pd', {
        importName: 'pandas'
      }], ['tf', {
        importName: 'tensorflow'
      }], ['plt', {
        importName: 'pyplot',
        importFrom: 'matplotlib'
      }], ['mpl', {
        importName: 'matplotlib'
      }], ['m', {
        importName: 'math'
      }], ['spio', {
        importName: 'io',
        importFrom: 'scipy'
      }], ['sp', {
        importName: 'scipy'
      }], ['pn', {
        importName: 'panel'
      }], ['hv', {
        importName: 'holoviews'
      }]]);
      function _0xa2fcee(_0x17eb5c, _0x30f08d) {
        const _0x57ff03 = {
          leadingDots: 0,
          nameParts: [_0x17eb5c],
          importedSymbols: new Set()
        };
        const _0xe0d5f3 = _0x30f08d.configOptions.findExecEnvironment(_0x30f08d.rootPath);
        const _0x3aaea6 = _0x30f08d.importResolver.resolveImport(_0x30f08d.rootPath, _0xe0d5f3, _0x57ff03);
        if (_0xe0d5f3.pythonPlatform === 'web' || _0xe0d5f3.pythonPlatform === undefined) {
          return true;
        } else {
          return _0x3aaea6.isImportFound && (!_0x3aaea6.isStubPackage || _0x3aaea6.nonStubImportResult !== undefined);
        }
      }
      function _0x5070eb(_0x28a3ab, _0x430e4c, _0x5705cc, _0x2a62c7) {
        var _0x3d7dec;
        var _0x455180;
        const _0xc76d37 = _0xf1cef0.getOutermostEnclosingClassNameNode(_0x2a62c7.node);
        const _0x1c887d = _0xc76d37 ? _0x28a3ab.evaluator.getType(_0xc76d37) ?? _0x5705cc : _0x5705cc;
        const _0x481ab8 = _0x50f65f.isClass(_0x1c887d) && _0x1c887d.priv.aliasName ? _0x1c887d.priv.aliasName : (_0xc76d37 === null || _0xc76d37 === undefined ? undefined : _0xc76d37.d.value) ?? _0x3c7ca9.getNameFromDeclaration(_0x2a62c7);
        for (const _0x458082 of _0x430e4c.orderedImports) {
          if (_0x458082.node.nodeType !== 25) {
            continue;
          }
          if (_0x458082.node.d.isWildcardImport) {
            continue;
          }
          for (const _0x3e72b7 of _0x458082.node.d.imports) {
            const _0x51a34c = _0x3e72b7.d.alias ?? _0x3e72b7.d.name;
            const _0x2fd548 = _0x28a3ab.evaluator.getType(_0x51a34c);
            if (_0x2fd548 && _0x50f65f.TypeBase.isInstantiable(_0x2fd548) && _0x5d0130(_0x1c887d, _0x2fd548)) {
              return {
                outermostName: _0x51a34c.d.value
              };
            }
          }
        }
        if (_0x481ab8) {
          for (const _0x596b90 of _0x430e4c.orderedImports) {
            if (_0x596b90.node.nodeType === 25) {
              for (const _0x69529 of _0x596b90.node.d.imports) {
                const _0x3b7ab9 = _0x69529.d.alias ?? _0x69529.d.name;
                const _0x1b9f92 = _0x3da005(_0x28a3ab, _0x3b7ab9, ((_0x3d7dec = _0x69529.d.alias) === null || _0x3d7dec === undefined ? undefined : _0x3d7dec.d.value) ?? _0x69529.d.name.d.value, _0x1c887d, _0x481ab8);
                if (_0x1b9f92) {
                  return _0x1b9f92;
                }
              }
            }
            if (_0x596b90.node.nodeType === 23) {
              const _0x29b0e5 = _0x596b90.subnode;
              if (!_0x29b0e5 || _0x29b0e5.d.module.d.nameParts.length <= 0) {
                continue;
              }
              const _0x45bc3a = _0x29b0e5.d.alias ?? _0x29b0e5.d.module.d.nameParts[_0x29b0e5.d.module.d.nameParts.length - 1];
              const _0x5f0be9 = _0x3da005(_0x28a3ab, _0x45bc3a, ((_0x455180 = _0x29b0e5.d.alias) === null || _0x455180 === undefined ? undefined : _0x455180.d.value) ?? _0x596b90.moduleName, _0x1c887d, _0x481ab8);
              if (_0x5f0be9) {
                return _0x5f0be9;
              }
            }
          }
        }
        return undefined;
      }
      function _0x3da005(_0x58bdbe, _0x22f599, _0x58ea6e, _0x4c909e, _0x21d0e7) {
        const _0x21dafd = _0x58bdbe.evaluator.getType(_0x22f599);
        if (_0x21dafd) {
          if (!_0x50f65f.isModule(_0x21dafd)) {
            return undefined;
          }
          return _0x56ee1d(_0x58bdbe, _0x21dafd.priv.fileUri, _0x58ea6e, _0x4c909e, _0x21d0e7);
        }
        const _0xbde51c = _0x58bdbe.evaluator.getDeclInfoForNameNode(_0x22f599)?.decls;
        for (const _0x2f2c83 of _0xbde51c ?? []) {
          if (!_0x31628d.isAliasDeclaration(_0x2f2c83)) {
            continue;
          }
          if (_0x2f2c83.submoduleFallback) {
            continue;
          }
          return _0x56ee1d(_0x58bdbe, _0x2f2c83.uri, _0x58ea6e, _0x4c909e, _0x21d0e7);
        }
        return undefined;
      }
      function _0x56ee1d(_0x535945, _0x32714d, _0x298c0c, _0x1662f5, _0x57e939) {
        const _0x43e2fc = _0x535945.getSourceFileInfo(_0x32714d);
        if (!_0x43e2fc) {
          return undefined;
        }
        _0x535945.getParseResults(_0x32714d);
        const _0x302cd9 = _0x43e2fc.sourceFile.getModuleSymbolTable();
        if (!_0x302cd9) {
          return undefined;
        }
        const _0x4a8d83 = _0x302cd9.get(_0x57e939);
        if (_0x4a8d83) {
          if (_0x1aef4d(_0x535945, _0x1662f5, _0x4a8d83)) {
            return {
              module: _0x298c0c,
              outermostName: _0x57e939
            };
          }
        }
        if (!_0x1b75f1.isUserCode(_0x43e2fc)) {
          return undefined;
        }
        for (const _0x270228 of _0x302cd9) {
          const _0xedb6f4 = _0x270228[0];
          const _0x427c09 = _0x270228[1];
          if (_0x2cd21b.isPrivateName(_0xedb6f4) || _0x2cd21b.isDunderName(_0xedb6f4) || _0x427c09.isExternallyHidden()) {
            continue;
          }
          if (_0x1aef4d(_0x535945, _0x1662f5, _0x427c09)) {
            return {
              module: _0x298c0c,
              outermostName: _0xedb6f4
            };
          }
        }
        return undefined;
      }
      function _0x1aef4d(_0x10f701, _0x227665, _0x5a00d2) {
        return _0x5a00d2.getDeclarations().some(_0x1fdb6f => {
          const _0x155a43 = _0x10f701.evaluator.resolveAliasDeclaration(_0x1fdb6f, true, {
            allowExternallyHiddenAccess: true,
            skipFileNeededCheck: true
          });
          if (!_0x155a43) {
            return false;
          }
          if (_0x50f65f.isClass(_0x227665) && !_0x227665.priv.aliasName && !_0x227665.shared.fileUri.equals(_0x155a43.uri)) {
            return false;
          }
          const _0x6bdba9 = _0x10f701.evaluator.getInferredTypeOfDeclaration(_0x5a00d2, _0x155a43);
          return _0x5d0130(_0x227665, _0x6bdba9);
        });
      }
      function _0x5d0130(_0x38d972, _0x5cfe42) {
        if (_0x5cfe42 === undefined) {
          return false;
        }
        if (_0x4b2fe9.isUnion(_0x38d972) && _0x4b2fe9.isUnion(_0x5cfe42)) {
          return true;
        }
        _0x38d972 = _0x311d2a(_0x38d972);
        _0x5cfe42 = _0x311d2a(_0x5cfe42);
        if (_0x50f65f.isClass(_0x38d972) && _0x50f65f.isClass(_0x5cfe42) && _0x50f65f.ClassType.isSameGenericClass(_0x50f65f.ClassType.cloneAsInstance(_0x38d972), _0x50f65f.ClassType.cloneAsInstance(_0x5cfe42))) {
          return true;
        }
        return _0x50f65f.isTypeSame(_0x38d972, _0x5cfe42, {
          ignoreTypeFlags: true
        });
      }
      function _0x311d2a(_0x447912) {
        if (_0x50f65f.isClass(_0x447912)) {
          switch (_0x447912.shared.fullName) {
            case 'typing.NoReturn':
              return _0x50f65f.NeverType.createNoReturn();
            case 'typing.Never':
              return _0x50f65f.NeverType.createNever();
          }
        }
        return _0x447912;
      }
    },
    59133: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IndentationUtils = exports.DefaultEditorIndentConfig = undefined;
      const _0x4ac4ec = require(41557);
      const _0x4c5bdf = require(58147);
      const _0x47190b = require(56814);
      const _0x463f7a = require(88754);
      const _0x1b868f = __importStar(require(23981));
      const _0x12daeb = require(11855);
      exports.DefaultEditorIndentConfig = {
        defaultTabSequence: '    ',
        tabSize: 4
      };
      class _0x10c928 {
        constructor(_0x78411 = exports.DefaultEditorIndentConfig) {
          this._editorIndentConfig = _0x78411;
        }
        getNewlineIndentation(_0x5e2efe, _0x2db1aa, _0x4a3a2a) {
          const _0x32740f = this._tryHandleStringLiterals(_0x5e2efe, _0x2db1aa);
          if (_0x32740f !== undefined) {
            return _0x32740f;
          }
          const _0x5654e1 = this._tryHandleMultilineConstructs(_0x5e2efe, _0x2db1aa);
          if (_0x5654e1 !== undefined) {
            return _0x5654e1;
          }
          _0x4a3a2a = _0x4a3a2a ?? this._shouldDedentAfterKeyword(_0x5e2efe, _0x2db1aa);
          return Math.max(this._getIndentation(_0x5e2efe, _0x2db1aa, _0x4a3a2a).indentation, 0);
        }
        reindentSpan(_0x157e87, _0x41d657, _0x112303, _0x25ed7c = true) {
          let _0x62b19a = 0;
          const _0x5998ae = [];
          const _0x59d546 = this._convertTokenStreams(_0x157e87, _0x41d657);
          let _0x15ee91 = _0x59d546[0];
          _0x62b19a = _0x112303 - this.getIndentationFromText(_0x157e87, _0x15ee91.range.start.line, _0x15ee91.range.start.character).indentation;
          if (_0x15ee91.multilineDocComment) {
            _0x4c5bdf.appendArray(_0x5998ae, this._reindentLinesFromText(_0x157e87, _0x15ee91, _0x62b19a));
          } else {
            if (_0x25ed7c) {
              _0x5998ae.push(this.createIndentationString(_0x157e87, _0x112303));
            }
            _0x5998ae.push(_0x15ee91.text);
          }
          for (let _0x103470 = 1; _0x103470 < _0x59d546.length; _0x103470++) {
            const _0x1137dd = _0x59d546[_0x103470];
            if (_0x1137dd.firstTokenOnLine) {
              _0x5998ae.push(_0x157e87.tokenizerOutput.predominantEndOfLineSequence.repeat(_0x1137dd.range.start.line - _0x15ee91.range.end.line));
              if (_0x1137dd.multilineDocComment) {
                _0x4c5bdf.appendArray(_0x5998ae, this._reindentLinesFromText(_0x157e87, _0x1137dd, _0x62b19a));
              } else {
                _0x5998ae.push(this.createIndentationString(_0x157e87, Math.max(0, this.getIndentationFromText(_0x157e87, _0x1137dd.range.start.line, _0x1137dd.range.start.character).indentation + _0x62b19a)));
                _0x5998ae.push(_0x1137dd.text);
              }
            } else {
              _0x5998ae.push(' '.repeat(_0x1137dd.range.start.character - _0x15ee91.range.end.character));
              _0x5998ae.push(_0x1137dd.text);
            }
            _0x15ee91 = _0x1137dd;
          }
          return {
            originalSpan: _0x463f7a.TextRange.combine(_0x59d546),
            text: _0x5998ae.join('')
          };
        }
        getModuleStatementIndentation(_0x4ce346) {
          if (_0x4ce346.parserOutput.parseTree.d.statements.length === 0) {
            return this.getNewlineIndentation(_0x4ce346, _0x4ce346.parserOutput.parseTree.length, true);
          }
          return this.getNewlineIndentation(_0x4ce346, _0x4ce346.parserOutput.parseTree.d.statements[0].start, true);
        }
        getMethodWithinClassIndentation(_0x56e099, _0x26425d, _0x1a0189) {
          const _0xc1f140 = this.getIndentationFromText(_0x56e099, _0x26425d).indentation;
          return this.createIndentationString(_0x56e099, _0xc1f140 + _0x1a0189);
        }
        findNonWhitespaceTokenAtOrBeforeOffset(_0x2dd75f, _0x4afa60) {
          const _0x5c7bfe = _0x2dd75f.getItemAtPosition(_0x4afa60);
          if (_0x5c7bfe < 0) {
            return undefined;
          }
          return this._findNonWhitespaceTokenAtOrBeforeIndex(_0x2dd75f, _0x5c7bfe);
        }
        findCommentAtOrBeforeOffset(_0x5c3908, _0x46bcde) {
          const _0x3584ae = _0x5c3908.getItemAtPosition(_0x46bcde);
          let _0x5f4f97 = _0x4ac4ec.getTokenAtIndex(_0x5c3908, _0x3584ae);
          if (!_0x5f4f97) {
            return undefined;
          }
          let _0x1a7bcf;
          if (_0x463f7a.TextRange.getEnd(_0x5f4f97) < _0x46bcde && _0x3584ae < _0x5c3908.count - 1) {
            _0x5f4f97 = _0x4ac4ec.getTokenAtIndex(_0x5c3908, _0x3584ae + 1);
            if (!_0x5f4f97) {
              return undefined;
            }
            _0x1a7bcf = _0x5f4f97.comments;
          } else {
            _0x1a7bcf = _0x4ac4ec.getCommentsAtTokenIndex(_0x5c3908, _0x3584ae);
          }
          if (_0x1a7bcf) {
            for (let _0xf56bfe = _0x1a7bcf.length - 1; _0xf56bfe >= 0; _0xf56bfe--) {
              const _0x423824 = _0x1a7bcf[_0xf56bfe];
              if (_0x423824.start < _0x46bcde) {
                return _0x423824;
              }
            }
          }
          return undefined;
        }
        getIndentationFromText(_0x5b4201, _0xbcb2e3, _0x540031) {
          let _0x1946ae = 0;
          let _0x1fe33d = 0;
          let _0xbccdbb = false;
          let _0xc66efa = false;
          const _0x45b7f8 = this._getTabSize(_0x5b4201);
          const _0xe9119 = _0x5b4201.tokenizerOutput.lines.getItemAt(_0xbcb2e3);
          for (let _0x148fc0 = 0; _0x148fc0 < _0xe9119.length; _0x148fc0++) {
            const _0x4f3fe0 = _0x5b4201.text.charCodeAt(_0xe9119.start + _0x148fc0);
            switch (_0x4f3fe0) {
              case 32:
                _0x1fe33d++;
                _0x1946ae++;
                _0xbccdbb = true;
                break;
              case 9:
                _0x1fe33d++;
                _0x1946ae += _0x45b7f8;
                _0xc66efa = true;
                break;
              default:
                if (!_0x540031 || _0x540031 === _0x148fc0) {
                  return {
                    charOffset: _0x1fe33d,
                    indentation: _0x1946ae,
                    containsSpaces: _0xbccdbb,
                    containsTabs: _0xc66efa
                  };
                }
                _0x1fe33d++;
                _0x1946ae++;
            }
          }
          return {
            charOffset: _0x1fe33d,
            indentation: _0x1946ae,
            containsSpaces: _0xbccdbb,
            containsTabs: _0xc66efa
          };
        }
        createIndentationString(_0xe6ad13, _0x458e52) {
          const _0x28afe3 = this.getTabSequence(_0xe6ad13);
          const _0x459248 = _0x28afe3.length;
          if (_0x459248 === 1 && _0x28afe3.charCodeAt(0) === 9) {
            const _0x4c0f34 = _0x458e52 % this._editorIndentConfig.tabSize;
            const _0x413c54 = (_0x458e52 - _0x4c0f34) / this._editorIndentConfig.tabSize;
            return '\t'.repeat(_0x413c54) + ' '.repeat(_0x4c0f34);
          }
          return ' '.repeat(_0x458e52);
        }
        getTabSequence(_0x1f0620) {
          if (_0x1f0620.tokenizerOutput.hasPredominantTabSequence) {
            return _0x1f0620.tokenizerOutput.predominantTabSequence;
          } else {
            return this._editorIndentConfig.defaultTabSequence;
          }
        }
        getSliceFromText(_0x4a8c49, _0x162256, _0x45ac29) {
          const _0x165b00 = _0x4a8c49.text;
          const _0x335931 = _0x4a8c49.tokenizerOutput.lines.getItemAt(_0x162256);
          return _0x165b00.slice(_0x335931.start, _0x335931.start + _0x45ac29);
        }
        _getIndentation(_0x5acd2a, _0x7ab94b, _0x4d01c6) {
          const _0x8689d3 = _0x5acd2a.tokenizerOutput.tokens;
          const _0x50bae0 = this.findNonWhitespaceTokenAtOrBeforeOffset(_0x8689d3, _0x7ab94b);
          if (!_0x50bae0) {
            return {
              indentation: 0
            };
          }
          const _0x506eb3 = _0x4ac4ec.findNodeByOffset(_0x5acd2a.parserOutput.parseTree, _0x463f7a.TextRange.getEnd(_0x50bae0));
          if (!_0x506eb3) {
            return {
              indentation: 0
            };
          }
          if (_0x506eb3.nodeType === 63) {
            const _0x3c66c4 = this._getTabSize(_0x5acd2a);
            const _0x3acdeb = _0x12daeb.getContainer(_0x506eb3, false);
            const _0x29ed0d = this._getIndentationForNode(_0x5acd2a, _0x7ab94b, _0x3acdeb ?? _0x5acd2a.parserOutput.parseTree, _0x506eb3);
            _0x29ed0d.indentation += _0x3c66c4;
            return _0x29ed0d;
          }
          const _0x2820ec = _0x4ac4ec.getFirstAncestorOrSelfOfKind(_0x506eb3, 50);
          if (!_0x2820ec) {
            return this._getIndentationForNode(_0x5acd2a, _0x7ab94b, _0x5acd2a.parserOutput.parseTree, _0x506eb3);
          }
          const _0x25361a = _0x47190b.convertTextRangeToRange(_0x2820ec, _0x5acd2a.tokenizerOutput.lines);
          if (_0x4d01c6 || _0x25361a.start.line === _0x25361a.end.line && _0x2820ec.d.statements.length > 0) {
            const _0x523a22 = _0x12daeb.getContainer(_0x2820ec, false);
            return this._getIndentationForNode(_0x5acd2a, _0x7ab94b, _0x523a22 ?? _0x5acd2a.parserOutput.parseTree, _0x2820ec);
          }
          return this._getIndentationForNode(_0x5acd2a, _0x7ab94b, _0x2820ec, _0x506eb3);
        }
        _getIndentationForNode(_0xd7bd31, _0x31ee0c, _0x14c69e, _0x3499a1) {
          if (_0x14c69e.nodeType === 36) {
            return {
              token: this._getFirstTokenOfStatement(_0xd7bd31, _0x14c69e, _0x3499a1),
              indentation: 0
            };
          }
          if (_0x14c69e.nodeType === 63 || this._containsNoIndentBeforeFirstStatement(_0xd7bd31, _0x31ee0c, _0x14c69e)) {
            const _0x7ce065 = this._getTabSize(_0xd7bd31);
            const _0x2714ef = _0x12daeb.getContainer(_0x14c69e, false);
            const _0x8af353 = this._getIndentationForNode(_0xd7bd31, _0x31ee0c, _0x2714ef ?? _0xd7bd31.parserOutput.parseTree, _0x14c69e);
            return {
              token: _0x8af353.token,
              indentation: _0x8af353.indentation + _0x7ce065
            };
          } else {
            const _0x1bb222 = _0xd7bd31.tokenizerOutput.tokens;
            return {
              token: this._getFirstTokenOfStatement(_0xd7bd31, _0x14c69e, _0x3499a1),
              indentation: this._getIndentationFromIndentToken(_0xd7bd31, _0x1bb222.getItemAtPosition(_0x14c69e.start))
            };
          }
        }
        _containsNoIndentBeforeFirstStatement(_0x49ce43, _0x5593bb, _0x3bbb9a) {
          const _0xa7c922 = _0x3bbb9a.d.statements.filter(_0x4199eb => _0x4199eb.length > 0);
          if (_0xa7c922.length === 0) {
            return true;
          }
          if (_0xa7c922.length === 1) {
            if (_0xa7c922[0].nodeType !== 47 || _0xa7c922[0].d.statements.length === 1) {
              if (_0xa7c922[0].start >= _0x5593bb) {
                const _0x52bf2b = _0x49ce43.tokenizerOutput.lines.getItemAtPosition(_0xa7c922[0].start);
                const _0x2d8427 = _0x49ce43.tokenizerOutput.lines.getItemAtPosition(_0x5593bb);
                if (_0x52bf2b === _0x2d8427) {
                  return true;
                }
              }
            }
          }
          const _0x161cd9 = _0x49ce43.tokenizerOutput.tokens;
          const _0x239228 = _0x161cd9.getItemAtPosition(_0x3bbb9a.start);
          const _0x351674 = _0x161cd9.getItemAtPosition(_0x3bbb9a.d.statements[0].start);
          for (let _0x12495c = _0x239228; _0x12495c <= _0x351674; _0x12495c++) {
            const _0x56b049 = _0x4ac4ec.getTokenAtIndex(_0x161cd9, _0x12495c);
            if (_0x56b049?.type === 3) {
              return false;
            }
          }
          return true;
        }
        _getFirstTokenOfStatement(_0x5e492f, _0x1a6959, _0x1c28d4) {
          const _0x401a6e = _0x5e492f.tokenizerOutput.tokens;
          for (const _0x411160 of _0x1a6959.d.statements) {
            if (!_0x463f7a.TextRange.containsRange(_0x411160, _0x1c28d4)) {
              continue;
            }
            return _0x4ac4ec.getTokenAt(_0x401a6e, _0x411160.start);
          }
          return _0x4ac4ec.getTokenAt(_0x401a6e, _0x1a6959.start);
        }
        _getIndentationFromIndentToken(_0xd1721b, _0x27e6d1) {
          const _0x572515 = _0xd1721b.tokenizerOutput.tokens;
          for (let _0x4f505e = _0x27e6d1; _0x4f505e < _0x572515.count; _0x4f505e++) {
            const _0x587d7e = _0x4ac4ec.getTokenAtIndex(_0x572515, _0x4f505e);
            if (_0x587d7e?.type === 3) {
              const _0x2d5f44 = this._getTabSize(_0xd1721b);
              let _0x553a0f = 0;
              for (let _0x57583c = 0; _0x57583c < _0x587d7e.length; _0x57583c++) {
                const _0x50ce28 = _0xd1721b.text.charCodeAt(_0x587d7e.start + _0x57583c);
                if (_0x50ce28 === 9) {
                  _0x553a0f += _0x2d5f44;
                } else {
                  _0x553a0f++;
                }
              }
              return _0x553a0f;
            }
          }
          return 0;
        }
        _tryHandleMultilineConstructs(_0x175886, _0x357d13) {
          const _0x34f79b = _0x175886.tokenizerOutput.tokens;
          const _0x720789 = _0x175886.tokenizerOutput.lines;
          const _0x1bb4db = this._findNextTokenIndex(_0x34f79b, _0x357d13);
          if (_0x1bb4db < 0) {
            return undefined;
          }
          for (let _0x59ff29 = _0x1bb4db; _0x59ff29 > 0; _0x59ff29--) {
            const _0x48f1dc = _0x4ac4ec.getTokenAtIndex(_0x34f79b, _0x59ff29);
            if (_0x463f7a.TextRange.getEnd(_0x48f1dc) < _0x357d13) {
              return undefined;
            }
            const _0x5596dc = _0x4ac4ec.getTokenAtIndex(_0x34f79b, _0x59ff29 - 1);
            const _0x1d9287 = _0x48f1dc ? _0x47190b.convertTextRangeToRange(_0x48f1dc, _0x720789) : undefined;
            const _0x3fa1e1 = _0x5596dc ? _0x47190b.convertTextRangeToRange(_0x5596dc, _0x720789) : undefined;
            if (_0x1d9287 && _0x3fa1e1 && _0x3fa1e1.start.line < _0x1d9287.start.line && _0x5596dc.type !== 2) {
              return this._getIndentationForNextLine(_0x175886, _0x5596dc, _0x48f1dc, _0x357d13);
            }
          }
          return undefined;
        }
        _isWhitespaceString(_0x3f6554, _0x305298, _0x467eaa) {
          let _0x476342;
          if (_0x3f6554.type === 5) {
            _0x476342 = _0x1b868f.getUnescapedString(_0x3f6554);
          } else {
            if (_0x3f6554.type === 26) {
              _0x3f6554 = _0x305298.getItemAt(_0x467eaa - 1);
              _0x476342 = _0x1b868f.getUnescapedString(_0x3f6554);
            } else {
              if (_0x3f6554.type === 25) {
                _0x476342 = _0x1b868f.getUnescapedString(_0x3f6554);
              }
            }
          }
          return _0x476342 !== undefined && _0x476342.value.trim().length === 0;
        }
        _tryHandleStringLiterals(_0x177d07, _0x2c2371) {
          const _0x1ec560 = _0x177d07.tokenizerOutput.tokens;
          const _0x19f1ce = _0x1ec560.getItemAtPosition(_0x2c2371);
          if (_0x19f1ce < 0) {
            return undefined;
          }
          const _0x45902c = this._findStringToken(_0x1ec560, _0x19f1ce);
          if (!_0x45902c || _0x45902c.type === 24) {
            return undefined;
          }
          if (_0x463f7a.TextRange.getEnd(_0x45902c) < _0x2c2371) {
            return undefined;
          }
          if (!(_0x45902c.flags & 4)) {
            return undefined;
          }
          const _0x728fc4 = _0x4ac4ec.findNodeByOffset(_0x177d07.parserOutput.parseTree, _0x2c2371);
          const _0x55b33e = _0x728fc4 ? _0x4ac4ec.getParentNodeOfType(_0x728fc4, 47) : undefined;
          if (!_0x55b33e || !_0x4ac4ec.isDocString(_0x55b33e)) {
            if (this._isWhitespaceString(_0x45902c, _0x1ec560, _0x19f1ce)) {
              return 0;
            }
            return undefined;
          }
          const _0x377422 = _0x177d07.tokenizerOutput.lines;
          const _0x5727b1 = _0x47190b.convertOffsetToPosition(_0x45902c.start, _0x377422);
          const _0x3a048f = _0x47190b.convertOffsetToPosition(_0x2c2371, _0x377422);
          return this._getFirstNonBlankLineIndentationFromText(_0x177d07, _0x3a048f.line, _0x5727b1.line);
        }
        _isOpenToken(_0x5ceeb8) {
          return _0x5ceeb8.type === 13 || _0x5ceeb8.type === 15 || _0x5ceeb8.type === 17;
        }
        _isCloseToken(_0x54cab5) {
          return _0x54cab5.type === 14 || _0x54cab5.type === 16 || _0x54cab5.type === 18;
        }
        _getIndentationForNextLine(_0x48a606, _0xe34ed0, _0x3d1cb4, _0x5cd8fd) {
          const _0x379874 = _0x48a606.tokenizerOutput.lines;
          const _0x110762 = _0x47190b.convertOffsetToPosition(_0xe34ed0.start, _0x379874).line;
          const _0x1de78f = _0x379874.getItemAt(_0x110762);
          const _0x357290 = this._getTabSize(_0x48a606);
          let _0x49934f = _0xe34ed0;
          let _0x37d236 = true;
          let _0x606046 = 0;
          while (_0x49934f && _0x49934f.start >= _0x1de78f.start) {
            if (this._isCloseToken(_0x49934f)) {
              _0x37d236 = false;
              _0x606046 += 1;
            } else {
              if (this._isOpenToken(_0x49934f) && _0x606046 === 0) {
                const _0x2e7aa9 = _0x4ac4ec.findNodeByOffset(_0x48a606.parserOutput.parseTree, _0x49934f.start - 1);
                const _0x2d5950 = _0x4ac4ec.getFirstAncestorOrSelfOfKind(_0x2e7aa9, 31);
                if (_0x49934f.type === 13 && _0x37d236 && _0x2d5950 && _0x47190b.convertOffsetToPosition(_0x2d5950.start, _0x379874).line === _0x110762) {
                  const _0x13e66a = this._getIndentation(_0x48a606, _0x49934f.start, false).indentation;
                  return _0x13e66a + _0x357290 * 2;
                } else {
                  if (_0x37d236) {
                    const _0x5111ea = _0x47190b.convertOffsetToPosition(_0x49934f.start, _0x379874).line;
                    return this.getIndentationFromText(_0x48a606, _0x5111ea).indentation + _0x357290;
                  } else {
                    return _0x49934f.start - _0x1de78f.start + 1;
                  }
                }
              } else {
                if (this._isOpenToken(_0x49934f) && _0x606046 > 0) {
                  _0x606046--;
                  _0x37d236 = false;
                } else {
                  if (!this._isWhitespaceToken(_0x49934f.type)) {
                    _0x37d236 = false;
                  }
                }
              }
            }
            _0x49934f = this.findNonWhitespaceTokenAtOrBeforeOffset(_0x48a606.tokenizerOutput.tokens, _0x49934f.start - 1);
          }
          return this._getFirstNonBlankLineIndentationFromText(_0x48a606, _0x47190b.convertOffsetToPosition(_0x5cd8fd, _0x48a606.tokenizerOutput.lines).line, _0x110762);
        }
        _getFirstNonBlankLineIndentationFromText(_0x409f2d, _0x7db11, _0x54cd6a) {
          _0x54cd6a = Math.max(_0x54cd6a, 0);
          for (let _0x5b3986 = _0x7db11; _0x5b3986 >= _0x54cd6a; _0x5b3986--) {
            const _0xedc9c9 = this.getIndentationFromText(_0x409f2d, _0x5b3986);
            if (!this._isBlankLine(_0x409f2d, _0x5b3986, _0xedc9c9.charOffset)) {
              return _0xedc9c9.indentation;
            }
          }
          return this.getIndentationFromText(_0x409f2d, _0x54cd6a).indentation;
        }
        _findStringToken(_0x4012b5, _0xedb9e8) {
          const _0x479656 = this._findNonWhitespaceTokenAtOrBeforeIndex(_0x4012b5, _0xedb9e8);
          if (!_0x479656) {
            return undefined;
          }
          switch (_0x479656.type) {
            case 5:
            case 24:
            case 25:
            case 26:
              return _0x479656;
            default:
              return undefined;
          }
        }
        _findNonWhitespaceTokenAtOrBeforeIndex(_0x12b4dd, _0x37393d) {
          for (let _0x2f8bc8 = _0x37393d; _0x2f8bc8 >= 0; _0x2f8bc8--) {
            const _0x49368c = _0x4ac4ec.getTokenAtIndex(_0x12b4dd, _0x2f8bc8);
            if (!_0x49368c) {
              break;
            }
            if (this._isWhitespaceToken(_0x49368c.type)) {
              continue;
            }
            return _0x49368c;
          }
          return undefined;
        }
        _findNextTokenIndex(_0x23e008, _0x1f38c2) {
          const _0x44c8a5 = _0x23e008.getItemAtPosition(_0x1f38c2);
          if (_0x44c8a5 < 0) {
            return _0x44c8a5;
          }
          for (let _0x58b62d = _0x44c8a5 + 1; _0x58b62d < _0x23e008.count; _0x58b62d++) {
            const _0x4a9705 = _0x4ac4ec.getTokenAtIndex(_0x23e008, _0x58b62d);
            if (_0x4a9705?.type === 4 || _0x4a9705?.type === 2) {
              continue;
            }
            return _0x58b62d;
          }
          return _0x23e008.count - 1;
        }
        _shouldDedentAfterKeyword(_0x50d6e3, _0x555a83) {
          const _0x1c7c48 = _0x50d6e3.tokenizerOutput.tokens;
          const _0x4a0d4f = _0x1c7c48.getItemAtPosition(_0x555a83);
          if (_0x4a0d4f < 0) {
            return false;
          }
          for (let _0x112d78 = _0x4a0d4f; _0x112d78 >= 0; _0x112d78--) {
            const _0x115285 = _0x4ac4ec.getTokenAtIndex(_0x1c7c48, _0x112d78);
            if (!_0x115285) {
              return false;
            }
            switch (_0x115285.type) {
              case 4:
              case 2:
              case 1:
                continue;
              case 8:
                {
                  const _0x5a5944 = _0x4ac4ec.getTokenAtIndex(_0x1c7c48, _0x112d78 - 1);
                  if (_0x5a5944?.type === 10) {
                    return false;
                  }
                  const _0x52acbd = _0x115285;
                  if (_0x52acbd.keywordType === 30 || _0x52acbd.keywordType === 32 || _0x52acbd.keywordType === 5 || _0x52acbd.keywordType === 8 || _0x52acbd.keywordType === 31) {
                    return true;
                  }
                  if (_0x52acbd.keywordType !== 33 && _0x52acbd.keywordType !== 15 && _0x52acbd.keywordType !== 26 && _0x52acbd.keywordType !== 9) {
                    return false;
                  }
                }
            }
            const _0x28f8df = _0x4ac4ec.findNodeByOffset(_0x50d6e3.parserOutput.parseTree, _0x115285.start);
            const _0x9e3df0 = _0x4ac4ec.getFirstAncestorOrSelf(_0x28f8df, _0x508bad => _0x508bad.nodeType === 44 || _0x508bad.nodeType === 43);
            return !!_0x9e3df0;
          }
          return false;
        }
        _isBlankLine(_0x4d7e26, _0x2aacc0, _0x32a6c7) {
          const _0x1695f2 = this._getLineEndingLength(_0x4d7e26, _0x2aacc0);
          const _0x42d7f0 = _0x4d7e26.tokenizerOutput.lines.getItemAt(_0x2aacc0);
          return _0x32a6c7 === _0x42d7f0.length - _0x1695f2;
        }
        _getLineEndingLength(_0x4cbb80, _0x26451f) {
          let _0x2c3bd5 = 0;
          const _0x1484e7 = _0x4cbb80.tokenizerOutput.lines.getItemAt(_0x26451f);
          for (let _0x38114a = _0x1484e7.length - 1; _0x38114a >= 0; _0x38114a--) {
            const _0x4e13ba = _0x4cbb80.text.charCodeAt(_0x1484e7.start + _0x38114a);
            switch (_0x4e13ba) {
              case 12:
              case 35:
              case 10:
              case 13:
                _0x2c3bd5++;
                break;
              default:
                return _0x2c3bd5;
            }
          }
          return _0x2c3bd5;
        }
        _convertTokenStreams(_0x51e4b6, _0x13a1ad) {
          const _0x533ade = _0x51e4b6.tokenizerOutput.tokens;
          let _0xa0e1f5 = Math.max(_0x533ade.getItemAtPosition(_0x13a1ad.start), 0);
          const _0x402bda = _0x4ac4ec.getTokenAtIndex(_0x533ade, _0xa0e1f5);
          if (_0x463f7a.TextRange.getEnd(_0x402bda) < _0x13a1ad.start) {
            _0xa0e1f5++;
          }
          let _0x597d53 = Math.min(_0x533ade.getItemAtPosition(_0x463f7a.TextRange.getEnd(_0x13a1ad)), _0x533ade.length - 1);
          const _0x2ad36e = _0x4ac4ec.getTokenAtIndex(_0x533ade, _0x597d53);
          if (_0x463f7a.TextRange.getEnd(_0x13a1ad) <= _0x2ad36e.start) {
            _0x597d53--;
          }
          if (_0x597d53 < _0x533ade.length - 1 && this._isWhitespaceToken(_0x533ade.getItemAt(_0x597d53 + 1).type)) {
            _0x597d53++;
          }
          const _0x32b3d0 = [];
          const _0x1ba88b = _0x51e4b6.tokenizerOutput.lines;
          for (let _0x1c47b6 = _0xa0e1f5; _0x1c47b6 <= _0x597d53; _0x1c47b6++) {
            const _0x5f11a6 = _0x4ac4ec.getTokenAtIndex(_0x533ade, _0x1c47b6);
            if (_0x5f11a6.comments) {
              for (const _0xe8f1d3 of _0x5f11a6.comments) {
                _0x32b3d0.push({
                  start: _0xe8f1d3.start,
                  length: _0xe8f1d3.length,
                  range: _0x47190b.convertTextRangeToRange(_0xe8f1d3, _0x1ba88b),
                  text: _0xe8f1d3.value,
                  kind: 'comment',
                  firstTokenOnLine: false,
                  multilineDocComment: false
                });
              }
            }
            if (this._isWhitespaceToken(_0x5f11a6.type) || _0x5f11a6.length === 0) {
              continue;
            }
            _0x32b3d0.push({
              start: _0x5f11a6.start,
              length: _0x5f11a6.length,
              range: _0x47190b.convertTextRangeToRange(_0x5f11a6, _0x1ba88b),
              text: _0x51e4b6.text.substr(_0x5f11a6.start, _0x5f11a6.length),
              kind: _0x5f11a6.type === 5 ? 'string' : 'token',
              firstTokenOnLine: false,
              multilineDocComment: false
            });
          }
          if (_0x32b3d0.length === 0) {
            return _0x32b3d0;
          }
          _0x32b3d0.sort((_0x44c4a7, _0x29820f) => _0x44c4a7.start - _0x29820f.start);
          let _0x4ec737 = _0x32b3d0[0];
          const _0x30b301 = [];
          if (_0x4ec737.kind === 'comment') {
            const _0x20fd6e = _0xa0e1f5 === 0 ? 0 : _0x463f7a.TextRange.getEnd(_0x4ac4ec.getTokenAtIndex(_0x533ade, _0xa0e1f5 - 1));
            this._addTokenInfoIfMatch(_0x51e4b6, _0x20fd6e, _0x4ec737.start, 35, _0x30b301);
          }
          for (let _0x12c3db = 1; _0x12c3db < _0x32b3d0.length; _0x12c3db++) {
            const _0x108898 = _0x32b3d0[_0x12c3db];
            if (_0x4ec737.kind !== 'comment') {
              for (let _0x21039d = _0x4ec737.range.end.line; _0x21039d < _0x108898.range.start.line; _0x21039d++) {
                const _0xe0e695 = _0x1ba88b.getItemAt(_0x21039d);
                const _0x1c514d = _0xe0e695.length - this._getLineEndingLength(_0x51e4b6, _0x21039d) - 1;
                if (_0x1c514d >= 0) {
                  const _0x19228b = _0xe0e695.start + _0x1c514d;
                  this._addTokenInfoIfMatch(_0x51e4b6, _0x19228b, _0x19228b + 1, 92, _0x30b301);
                }
              }
            }
            if (_0x108898.kind === 'comment') {
              const _0x1edfd5 = _0x4ec737.range.end.line === _0x108898.range.start.line ? _0x463f7a.TextRange.getEnd(_0x4ec737) : _0x1ba88b.getItemAt(_0x108898.range.start.line).start;
              this._addTokenInfoIfMatch(_0x51e4b6, _0x1edfd5, _0x108898.start, 35, _0x30b301);
            }
            _0x4ec737 = _0x108898;
          }
          _0x4c5bdf.appendArray(_0x32b3d0, _0x30b301);
          _0x32b3d0.sort((_0x4010dd, _0x5cebbc) => _0x4010dd.start - _0x5cebbc.start);
          _0x4ec737 = _0x32b3d0[0];
          if (_0xa0e1f5 === 0) {
            _0x4ec737.firstTokenOnLine = true;
          } else {
            const _0x124fe2 = this._findNonWhitespaceTokenAtOrBeforeIndex(_0x533ade, _0xa0e1f5 - 1);
            if (_0x124fe2) {
              const _0x4d1f14 = _0x47190b.convertOffsetToPosition(_0x463f7a.TextRange.getEnd(_0x124fe2), _0x1ba88b);
              _0x4ec737.firstTokenOnLine = _0x4d1f14.line !== _0x4ec737.range.start.line;
            } else {
              _0x4ec737.firstTokenOnLine = true;
            }
          }
          _0x4ec737.multilineDocComment = this._isMultilineDocComment(_0x51e4b6.parserOutput, _0x4ec737);
          for (let _0x2efeea = 1; _0x2efeea < _0x32b3d0.length; _0x2efeea++) {
            const _0x224076 = _0x32b3d0[_0x2efeea];
            _0x224076.firstTokenOnLine = _0x4ec737.range.end.line !== _0x224076.range.start.line;
            _0x224076.multilineDocComment = this._isMultilineDocComment(_0x51e4b6.parserOutput, _0x224076);
            _0x4ec737 = _0x224076;
          }
          return _0x32b3d0;
        }
        _addTokenInfoIfMatch(_0x2e4d79, _0x409cec, _0x509f0d, _0x478c45, _0x10cdf9) {
          for (let _0x4f4b6c = _0x409cec; _0x4f4b6c < _0x509f0d; _0x4f4b6c++) {
            if (_0x2e4d79.text.charCodeAt(_0x4f4b6c) === _0x478c45) {
              _0x10cdf9.push({
                start: _0x4f4b6c,
                length: 1,
                range: _0x47190b.convertTextRangeToRange(_0x463f7a.TextRange.create(_0x4f4b6c, 1), _0x2e4d79.tokenizerOutput.lines),
                text: String.fromCharCode(_0x478c45),
                kind: 'token',
                firstTokenOnLine: false,
                multilineDocComment: false
              });
            }
          }
        }
        _isWhitespaceToken(_0x372e90) {
          switch (_0x372e90) {
            case 4:
            case 2:
            case 3:
            case 1:
              return true;
            default:
              return false;
          }
        }
        _isMultilineDocComment(_0x568002, _0xee8768) {
          if (_0xee8768.kind !== 'string' || !_0xee8768.firstTokenOnLine || _0xee8768.range.start.line === _0xee8768.range.end.line) {
            return false;
          }
          const _0x31c380 = _0x4ac4ec.findNodeByOffset(_0x568002.parseTree, _0xee8768.start);
          if (_0x31c380?.nodeType !== 49 || _0x31c380.parent?.nodeType !== 48 || _0x31c380.parent.parent?.nodeType !== 47) {
            return false;
          }
          return _0x4ac4ec.isDocString(_0x31c380.parent.parent);
        }
        _reindentLinesFromText(_0x6247ea, _0x270e69, _0x20a935) {
          const _0x51b92a = [];
          for (let _0x361f72 = _0x270e69.range.start.line; _0x361f72 <= _0x270e69.range.end.line; _0x361f72++) {
            _0x51b92a.push(this._reindentLineFromText(_0x6247ea, _0x361f72, _0x20a935, _0x361f72 === _0x270e69.range.end.line ? _0x270e69 : undefined));
          }
          return _0x51b92a;
        }
        _reindentLineFromText(_0x1b4abf, _0x5fbb23, _0x541e3c, _0x32fd6f) {
          const _0x259547 = this.getIndentationFromText(_0x1b4abf, _0x5fbb23);
          let _0x48dd74 = _0x1b4abf.tokenizerOutput.lines.getItemAt(_0x5fbb23);
          if (_0x32fd6f) {
            _0x48dd74 = _0x463f7a.TextRange.fromBounds(_0x48dd74.start, Math.min(_0x463f7a.TextRange.getEnd(_0x32fd6f), _0x463f7a.TextRange.getEnd(_0x48dd74)));
          }
          const _0x3b8701 = _0x1b4abf.text.substr(_0x48dd74.start + _0x259547.charOffset, _0x48dd74.length - _0x259547.charOffset);
          if (this._isBlankLine(_0x1b4abf, _0x5fbb23, _0x259547.charOffset)) {
            return _0x3b8701;
          }
          return this.createIndentationString(_0x1b4abf, Math.max(_0x259547.indentation + _0x541e3c, 0)) + _0x3b8701;
        }
        _getTabSize(_0x21c432) {
          const _0xec8335 = this.getTabSequence(_0x21c432);
          const _0xc5c8bc = _0xec8335.length;
          if (_0xc5c8bc === 1 && _0xec8335.charCodeAt(0) === 9) {
            return this._editorIndentConfig.tabSize;
          }
          return _0xc5c8bc;
        }
      }
      exports.IndentationUtils = _0x10c928;
    },
    11855: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getInsertionPointForSymbolUnderModule = _0x1b14a8;
      exports.getContainer = _0xe5e2f3;
      const _0x3407ea = require(26687);
      const _0x457ada = require(83760);
      const _0x34d2c8 = require(41557);
      const _0x342bc6 = require(12097);
      const _0x56095b = require(34455);
      const _0x23ad35 = require(56814);
      const _0x135706 = require(88754);
      function _0x1b14a8(_0x3a4533, _0x3f53e8, _0x47b0b8, _0x4127e1) {
        const _0x28a1f0 = _0x3f53e8.parserOutput.parseTree;
        const _0x49caca = _0x1e8b61(_0x3f53e8);
        if (_0x28a1f0.d.statements.length === 0) {
          if (_0x56095b.containsOnlyWhitespace(_0x3f53e8.text)) {
            return 0;
          } else {
            return _0x49caca;
          }
        }
        const _0x234835 = _0x3407ea.getScope(_0x28a1f0);
        if (!_0x234835) {
          return _0x49caca;
        }
        const _0x4f8518 = _0x3407ea.getFileInfo(_0x28a1f0);
        const _0x4732a5 = _0x234835.lookUpSymbol(_0x47b0b8);
        if (_0x4732a5 && _0x1125df(_0x3a4533, _0x4732a5.getDeclarations(), _0x4f8518.fileUri, _0x4127e1).length > 0) {
          return undefined;
        }
        const _0xf3119f = _0x4127e1?.insertBefore ?? _0x49caca;
        if (_0x342bc6.isPrivateName(_0x47b0b8)) {
          return Math.max(0, _0xf3119f);
        }
        if (_0xf3119f < _0x135706.TextRange.getEnd(_0x28a1f0.d.statements[0])) {
          return Math.max(0, Math.min(_0xf3119f, _0x28a1f0.d.statements[0].start));
        }
        const _0x1d7ff4 = _0x591672(_0x28a1f0.d.statements, _0x4127e1?.insertBefore ?? _0x49caca);
        const _0x54b0a6 = _0x23ad35.convertOffsetToPosition(_0x135706.TextRange.getEnd(_0x1d7ff4), _0x3f53e8.tokenizerOutput.lines);
        return _0x23ad35.getLineEndOffset(_0x3f53e8.tokenizerOutput, _0x3f53e8.text, _0x54b0a6.line);
      }
      function _0xe5e2f3(_0x3b3c95, _0x29353c = true) {
        return _0x34d2c8.getFirstAncestorOrSelf(_0x3b3c95, _0x504db2 => {
          if (!_0x29353c && _0x3b3c95 === _0x504db2) {
            return false;
          }
          return _0x504db2.nodeType === 50 || _0x504db2.nodeType === 63;
        });
      }
      function _0x1e8b61(_0x38b4d2) {
        var _0xc5895b;
        const _0x5089c4 = _0x135706.TextRange.getEnd(_0x38b4d2.parserOutput.parseTree);
        const _0x16158a = _0x23ad35.convertOffsetToPosition(_0x5089c4, _0x38b4d2.tokenizerOutput.lines);
        if (_0x16158a.character === 0) {
          return _0x5089c4;
        }
        if (_0x34d2c8.isBlankLine(_0x38b4d2.tokenizerOutput, _0x38b4d2.text, _0x16158a.line)) {
          if ((_0xc5895b = _0x23ad35.convertPositionToOffset({
            line: _0x16158a.line,
            character: 0
          }, _0x38b4d2.tokenizerOutput.lines)) !== null && _0xc5895b !== undefined) {
            return _0xc5895b;
          } else {
            return _0x5089c4;
          }
        }
        return _0x5089c4;
      }
      function _0x1125df(_0x205d7b, _0x3b362a, _0x1ae534, _0x3afa48) {
        return _0x3b362a.filter(_0x3b76b0 => {
          const _0x1b50cf = _0x205d7b.resolveAliasDeclaration(_0x3b76b0, true, {
            allowExternallyHiddenAccess: true
          });
          if (!_0x1b50cf) {
            return false;
          }
          if (_0x3afa48?.symbolDeclToIgnore && _0x1b50cf.uri.equals(_0x3afa48.symbolDeclToIgnore)) {
            return false;
          }
          if (_0x3b76b0.type === 8) {
            const _0x5d713f = _0x457ada.getNameNodeForDeclaration(_0x3b76b0);
            if (!_0x5d713f) {
              return false;
            }
            const _0x4c9ffb = _0x3407ea.getFileInfo(_0x5d713f);
            return _0x4c9ffb.fileUri.equals(_0x1ae534);
          }
          return _0x1b50cf.uri.equals(_0x1ae534);
        });
      }
      function _0x591672(_0x54f65f, _0x1c6e3f) {
        let _0x51eafd = _0x54f65f[0];
        for (let _0x2e26d9 = 1; _0x2e26d9 < _0x54f65f.length; _0x2e26d9++) {
          const _0x15ea27 = _0x54f65f[_0x2e26d9];
          if (_0x1c6e3f < _0x135706.TextRange.getEnd(_0x15ea27)) {
            return _0x51eafd;
          }
          switch (_0x15ea27.nodeType) {
            case 10:
            case 31:
              {
                if (_0x342bc6.isPrivateName(_0x15ea27.d.name.d.value)) {
                  return _0x51eafd;
                }
                _0x51eafd = _0x15ea27;
                continue;
              }
            case 47:
              {
                if (_0x15ea27.d.statements.some(_0x31d729 => _0x31d729.nodeType === 3 && _0x31d729.d.leftExpr.nodeType === 38 && _0x342bc6.isPrivateName(_0x31d729.d.leftExpr.d.value))) {
                  return _0x51eafd;
                }
                _0x51eafd = _0x15ea27;
                continue;
              }
            default:
              _0x51eafd = _0x15ea27;
              continue;
          }
        }
        return _0x51eafd;
      }
    },
    22669: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.createReanalysisTimeProviderFromWorkspace = _0x48f2ed;
      exports.createReanalysisTimeProvider = _0x35baa7;
      const _0x2aeef4 = require(30741);
      const _0x1031e6 = 5000;
      const _0x44cdf7 = 10000;
      const _0x2823f1 = 1200000;
      function _0x48f2ed(_0x3c6f7c, _0x530f35) {
        const _0x31804d = _0x530f35.length === 1 && _0x530f35[0] === _0x2aeef4.WellKnownWorkspaceKinds.Regular ? _0x3c6f7c.hasMultipleWorkspaces(_0x530f35[0]) ? _0x44cdf7 : _0x1031e6 : _0x1031e6;
        return _0x35baa7(_0x31804d);
      }
      function _0x35baa7(_0x4c0090) {
        let _0x2c87e7 = _0x4c0090;
        let _0x41510c = false;
        const _0x26f5c7 = () => _0x2c87e7;
        _0x26f5c7.libraryReanalysisStarted = () => {
          _0x41510c = true;
        };
        _0x26f5c7.libraryUpdated = _0x7cb1a0 => {
          if (!_0x7cb1a0) {
            if (_0x41510c) {
              _0x2c87e7 = _0x4c0090;
            }
            return;
          }
          if (_0x41510c) {
            _0x2c87e7 = Math.min(_0x2c87e7 * 2, _0x2823f1);
          }
          _0x41510c = false;
        };
        return _0x26f5c7;
      }
    },
    96662: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.licenseErrorText = undefined;
      exports.licenseErrorText = ['You may install and use any number of copies of the software only with Microsoft Visual Studio,', 'Visual Studio for Mac, Visual Studio Code, Azure DevOps, Team Foundation Server, and successor Microsoft products', 'and services (collectively, the “Visual Studio Products and Services”) to develop and test your applications.', 'The software is licensed, not sold. This agreement only gives you some rights to use the software. Microsoft reserves all other rights.', 'You may not:', 'work around any technical limitations in the software that only allow you to use it in certain ways;', 'reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software,', 'except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;', 'remove, minimize, block, or modify any notices of Microsoft or its suppliers in the software;', 'use the software in any way that is against the law or to create or propagate malware; or', 'share, publish, distribute, or lease the software (except for any distributable code, subject to the terms above),', 'provide the software as a stand-alone offering for others to use, or transfer the software or this agreement to any third party.'].join(' ');
    },
    48536: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LimitedFileSystem = undefined;
      const _0x4d5e91 = require(12060);
      class _0x3e4895 {
        constructor(_0x2acb9a, _0x3e0c0a, _0x317d17) {
          this._notAllowedRoot = _0x2acb9a;
          this._bundledStubs = _0x3e0c0a;
          this._baseFS = _0x317d17;
          this._allowedRoots = [];
        }
        setAllowedRoots(_0x470ca6) {
          this._allowedRoots = _0x470ca6 ?? [];
        }
        existsSync(_0x52b03c) {
          if (!this._allowed(_0x52b03c)) {
            return false;
          }
          return this._baseFS.existsSync(_0x52b03c);
        }
        readdirEntriesSync(_0x4dd239) {
          if (!this._allowed(_0x4dd239)) {
            return [];
          }
          return this._baseFS.readdirEntriesSync(_0x4dd239);
        }
        readdirSync(_0x140dac) {
          if (!this._allowed(_0x140dac)) {
            return [];
          }
          return this._baseFS.readdirSync(_0x140dac);
        }
        readFileSync(_0x51770d, _0x30cd92) {
          if (!this._allowed(_0x51770d)) {
            return '';
          }
          return this._baseFS.readFileSync(_0x51770d, _0x30cd92);
        }
        statSync(_0xcec781) {
          if (!this._allowed(_0xcec781)) {
            throw new Error(_0xcec781 + ' doesn\'t exist');
          }
          return this._baseFS.statSync(_0xcec781);
        }
        realpathSync(_0x353c75) {
          if (!this._allowed(_0x353c75)) {
            return _0x353c75;
          }
          return this._baseFS.realpathSync(_0x353c75);
        }
        realCasePath(_0x218138) {
          if (!this._allowed(_0x218138)) {
            return _0x218138;
          }
          return this._baseFS.realCasePath(_0x218138);
        }
        isInZip(_0x52ebe7) {
          if (!this._allowed(_0x52ebe7)) {
            return false;
          }
          return this._baseFS.isInZip(_0x52ebe7);
        }
        writeFileSync(_0x157734, _0x4dbb8b, _0x59d93e) {
          if (!this._allowed(_0x157734)) {
            return;
          }
          this._baseFS.writeFileSync(_0x157734, _0x4dbb8b, _0x59d93e);
        }
        rmdirSync(_0xb3351) {
          if (!this._allowed(_0xb3351)) {
            return;
          }
          this._baseFS.rmdirSync(_0xb3351);
        }
        unlinkSync(_0x7e131a) {
          if (!this._allowed(_0x7e131a)) {
            return;
          }
          this._baseFS.unlinkSync(_0x7e131a);
        }
        copyFileSync(_0x3343c2, _0x30b31c) {
          if (!this._allowed(_0x3343c2) || !this._allowed(_0x30b31c)) {
            return;
          }
          this._baseFS.copyFileSync(_0x3343c2, _0x30b31c);
        }
        mkdirSync(_0x2b09b8, _0x30e6e5) {
          if (!this._allowed(_0x2b09b8)) {
            return;
          }
          this._baseFS.mkdirSync(_0x2b09b8, _0x30e6e5);
        }
        createReadStream(_0x18c35e) {
          if (!this._allowed(_0x18c35e)) {
            throw new Error(_0x18c35e + ' doesn\'t exist');
          }
          return this.createReadStream(_0x18c35e);
        }
        createWriteStream(_0x367100) {
          if (!this._allowed(_0x367100)) {
            throw new Error(_0x367100 + ' doesn\'t exist');
          }
          return this.createWriteStream(_0x367100);
        }
        readFile(_0x1e08f7) {
          if (!this._allowed(_0x1e08f7)) {
            throw new Error(_0x1e08f7 + ' doesn\'t exist');
          }
          return this.readFile(_0x1e08f7);
        }
        readFileText(_0x38ac3f, _0x3f3ec0) {
          if (!this._allowed(_0x38ac3f)) {
            throw new Error(_0x38ac3f + ' doesn\'t exist');
          }
          return this.readFileText(_0x38ac3f, _0x3f3ec0);
        }
        getModulePath() {
          return this._baseFS.getModulePath();
        }
        createFileSystemWatcher(_0x3587c9, _0x5d8005) {
          return _0x4d5e91.nullFileWatcherProvider.createFileWatcher([], _0x5d8005);
        }
        isMappedUri(_0x5d3955) {
          return this._baseFS.isMappedUri(_0x5d3955);
        }
        getOriginalUri(_0x54d28d) {
          return this._baseFS.getOriginalUri(_0x54d28d);
        }
        getMappedUri(_0x52492e) {
          return this._baseFS.getMappedUri(_0x52492e);
        }
        chdir(_0x4ac467) {
          return this._baseFS.chdir(_0x4ac467);
        }
        _allowed(_0x52b1e0) {
          if (this._bundledStubs.some(_0x1c00ef => _0x52b1e0.startsWith(_0x1c00ef))) {
            return true;
          }
          if (this._allowedRoots.some(_0x568ecc => _0x52b1e0.startsWith(_0x568ecc))) {
            return true;
          }
          if (this._notAllowedRoot) {
            return !_0x52b1e0.startsWith(this._notAllowedRoot);
          }
          return false;
        }
      }
      exports.LimitedFileSystem = _0x3e4895;
    },
    65409: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LogService = undefined;
      const _0x5c7ce3 = require(25075);
      class _0x5e051c {
        constructor(_0x238059) {
          this._console = _0x238059;
        }
        get level() {
          return this._console.level;
        }
        log(_0xe3eb27, _0x479c72) {
          _0x5c7ce3.log(this._console, _0xe3eb27, _0x479c72);
        }
      }
      exports.LogService = _0x5e051c;
      (function (_0x45b1b0) {
        function _0x26394c(_0x1c6f9a) {
          return _0x1c6f9a instanceof _0x45b1b0;
        }
        _0x45b1b0.is = _0x26394c;
      })(_0x5e051c || (exports.LogService = _0x5e051c = {}));
    },
    61231: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LSPService = undefined;
      const _0x829546 = require(27130);
      const _0x319ede = require(95349);
      const _0x20b385 = require(15986);
      var _0x279375;
      (function (_0x27da5a) {
        function _0x1ce091(_0x32474d) {
          return _0x32474d && !!_0x32474d.title && !!_0x32474d.__client__;
        }
        _0x27da5a.is = _0x1ce091;
      })(_0x279375 ||= {});
      class _0x6b922b {
        constructor(_0xb9a899) {
          this._connection = _0xb9a899;
        }
        showErrorMessage(_0x5184e3, ..._0x56c3ed) {
          if (_0x56c3ed.some(_0x58919c => _0x279375.is(_0x58919c))) {
            return _0x319ede.CustomLSP.sendRequest(this._connection, _0x319ede.CustomLSP.Requests.ClientShowMessage, {
              type: 'error',
              message: _0x5184e3,
              actions: _0x56c3ed
            });
          }
          return this._connection.window.showErrorMessage(_0x5184e3, ..._0x56c3ed);
        }
        showWarningMessage(_0x227dbb, ..._0x4dcf27) {
          if (_0x4dcf27.some(_0x192264 => _0x279375.is(_0x192264))) {
            return _0x319ede.CustomLSP.sendRequest(this._connection, _0x319ede.CustomLSP.Requests.ClientShowMessage, {
              type: 'warning',
              message: _0x227dbb,
              actions: _0x4dcf27
            });
          }
          return this._connection.window.showWarningMessage(_0x227dbb, ..._0x4dcf27);
        }
        showInformationMessage(_0x36426f, ..._0x245fcf) {
          if (_0x245fcf.some(_0x7de81a => _0x279375.is(_0x7de81a))) {
            return _0x319ede.CustomLSP.sendRequest(this._connection, _0x319ede.CustomLSP.Requests.ClientShowMessage, {
              type: 'information',
              message: _0x36426f,
              actions: _0x245fcf
            });
          }
          return this._connection.window.showInformationMessage(_0x36426f, ..._0x245fcf);
        }
        sendCommand(_0x1af7c6, ..._0x3bde21) {
          _0x319ede.CustomLSP.sendNotification(this._connection, _0x319ede.CustomLSP.Notifications.ExecuteCommand, {
            command: _0x1af7c6,
            args: _0x3bde21
          });
        }
        createGoToOutputAction() {
          const _0x4cfcf9 = {
            __client__: true,
            title: _0x20b385.Localizer.Commands.gotoOutputCommand(),
            id: _0x829546.ClientCommands.gotoOutputChannel
          };
          return _0x4cfcf9;
        }
        createOpenUriAction(_0x1355df, _0x2b828a) {
          const _0x3024cf = {
            __client__: true,
            title: _0x1355df,
            id: _0x829546.ClientCommands.openUri,
            args: [_0x2b828a]
          };
          return _0x3024cf;
        }
        sendRequest(_0x2f254e, _0x2808b8) {
          return _0x319ede.CustomLSP.sendRequest(this._connection, _0x319ede.CustomLSP.Requests.PromptLanguageModel, {
            prompts: _0x2f254e
          }, _0x2808b8);
        }
      }
      exports.LSPService = _0x6b922b;
    },
    585: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LspTelemetryThrottler = undefined;
      const _0x16cade = require(91426);
      const _0x56e64d = require(34455);
      const _0x156b7a = require(99504);
      const _0x440b32 = require(62470);
      class _0x10f295 {
        constructor() {
          this._nextWindow = 0;
          this._eventCount = 0;
          this._globalDebounce = 3600000;
          this._globalLimit = 100;
          this._lastCaptured = new Map();
          this._debounceFrequentCall = 300000;
          this._debounceRareCall = 60000;
          this._rareMessages = new Set(['textDocument/declaration', 'textDocument/definition', 'textDocument/documentSymbol', 'textDocument/prepareRename', 'textDocument/references', 'textDocument/rename', 'workspace/symbol']);
        }
        maybeSendTelemetry(_0x565624, _0x2169e9, _0x5c7077, _0x38d325, _0x86b58f, _0x3a3f45) {
          const _0x399666 = Date.now();
          const _0x4755f6 = new _0x440b32.StopWatch();
          if (_0x399666 > this._nextWindow) {
            this._nextWindow = _0x399666 + this._globalDebounce;
            this._eventCount = 0;
          }
          const _0x6c9e3b = (_0x2f6fdf, _0x54b166) => {
            const _0xbd358c = this._rareMessages.has(_0x565624) ? this._debounceRareCall : this._debounceFrequentCall;
            const _0x4d2814 = this._lastCaptured.get(_0x565624);
            if (_0x54b166 || _0x5c7077() && this._eventCount < this._globalLimit && (!_0x4d2814 || _0x399666 - _0x4d2814 > _0xbd358c)) {
              this._lastCaptured.set(_0x565624, _0x399666);
              this._eventCount += 1;
              const _0x8d1ccc = _0x565624.replace(/\//g, '.');
              let _0x218625 = {
                duration: _0x4755f6.elapsedTime
              };
              if (_0x86b58f) {
                _0x218625 = {
                  ..._0x218625,
                  ..._0x86b58f(this, _0x2f6fdf)
                };
              }
              let _0xaf52ec = {
                lsVersion: _0x156b7a.VERSION,
                method: _0x8d1ccc
              };
              if (_0x54b166) {
                _0xaf52ec.failed = _0x54b166;
              }
              if (_0x3a3f45) {
                _0xaf52ec = {
                  ..._0xaf52ec,
                  ..._0x3a3f45(this, _0x2f6fdf)
                };
              }
              _0x38d325(_0x218625, _0xaf52ec);
            }
            return _0x2f6fdf;
          };
          try {
            const _0x43f9a0 = _0x2169e9();
            if (_0x56e64d.isThenable(_0x43f9a0)) {
              return _0x43f9a0.then(_0x6c9e3b).catch(_0x55318d => {
                if (!_0x16cade.OperationCanceledException.is(_0x55318d)) {
                  _0x6c9e3b(undefined, _0x55318d);
                }
                throw _0x55318d;
              });
            }
            return _0x6c9e3b(_0x43f9a0);
          } catch (_0x578279) {
            if (!_0x16cade.OperationCanceledException.is(_0x578279)) {
              _0x6c9e3b(undefined, _0x578279);
            }
            throw _0x578279;
          }
        }
      }
      exports.LspTelemetryThrottler = _0x10f295;
    },
    4250: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.hasMagicMethodForOperator = _0x27c9c4;
      exports.hasMagicMethodForKeyword = _0x3a742f;
      exports.hasMagicMethodForIdentifier = _0x22f5d6;
      exports.getMagicMethodInfoForOperator = _0x3f6431;
      exports.getMagicMethodInfoForKeyword = _0x7cd3c2;
      exports.getMagicMethodInfoForIdentifier = _0x30b371;
      exports.getMagicMethodNamesForOperator = _0x39a231;
      exports.isMagicMethodFromBuiltinTypes = _0x431514;
      const _0x37e794 = require(41557);
      const _0x505a7c = require(21024);
      const _0x17cb86 = require(92324);
      const _0x221871 = require(88754);
      const _0xaaa4ef = new Map([[0, ['__add__', '__radd__']], [33, ['__sub__', '__rsub__']], [26, ['__mul__', '__rmul__']], [10, ['__truediv__', '__rtruediv__']], [13, ['__floordiv__', '__rfloordiv__']], [24, ['__mod__', '__rmod__']], [29, ['__pow__', '__rpow__']], [17, ['__lshift__', '__rlshift__']], [31, ['__rshift__', '__rrshift__']], [3, ['__and__', '__rand__']], [8, ['__xor__', '__rxor__']], [6, ['__or__', '__ror__']], [20, ['__lt__', '__gt__']], [21, ['__le__', '__ge__']], [12, ['__eq__', '__eq__']], [28, ['__ne__', '__ne__']], [15, ['__gt__', '__lt__']], [16, ['__ge__', '__le__']], [22, ['__matmul__', '__rmatmul__']], [23, ['__imatmul__']]]);
      const _0x4ff5bc = new Map([[0, ['__pos__']], [33, ['__neg__']], [5, ['__invert__']]]);
      const _0x3dab41 = new Map([[1, ['__iadd__']], [34, ['__isub__']], [27, ['__imul__']], [11, ['__itruediv__']], [14, ['__ifloordiv__']], [25, ['__imod__']], [30, ['__ipow__']], [18, ['__ilshift__']], [32, ['__irshift__']], [4, ['__iand__']], [9, ['__ixor__']], [7, ['__ior__']]]);
      const _0x4044bf = new Map([[22, ['__contains__']], [28, ['__contains__']]]);
      const _0xc06319 = new Map([['repr', {
        name: '__repr__',
        argIndex: 0
      }], ['str', {
        name: '__str__',
        argIndex: 0
      }], ['print', {
        name: '__str__',
        argIndex: 0
      }], ['bytes', {
        name: '__bytes__',
        argIndex: 0
      }], ['format', {
        name: '__format__',
        argIndex: 0
      }], ['hash', {
        name: '__hash__',
        argIndex: 0
      }], ['bool', {
        name: '__bool__',
        argIndex: 0
      }], ['dir', {
        name: '__dir__',
        argIndex: 0
      }], ['len', {
        name: '__len__',
        argIndex: 0
      }], ['reversed', {
        name: '__reversed__',
        argIndex: 0
      }], ['next', {
        name: '__next__',
        argIndex: 0
      }], ['divmod', {
        name: '__divmod__',
        argIndex: 0
      }], ['pow', {
        name: '__pow__',
        argIndex: 0
      }], ['abs', {
        name: '__abs__',
        argIndex: 0
      }], ['round', {
        name: '__round__',
        argIndex: 0
      }], ['complex', {
        name: '__complex__',
        argIndex: 0
      }], ['float', {
        name: '__float__',
        argIndex: 0
      }], ['int', {
        name: '__int__',
        argIndex: 0
      }], ['isinstance', {
        name: '__instancecheck__',
        argIndex: 1,
        useMeta: true
      }]]);
      function _0x27c9c4(_0x6617f, _0x19f54f) {
        const _0x23cefb = _0x39a231(_0x19f54f);
        if (!_0x23cefb) {
          return false;
        }
        const _0x1ba867 = _0x4a3ef3(_0x6617f, _0x419d80(_0x19f54f), _0x23cefb[0]);
        if (_0x1ba867 && _0x505a7c.isClass(_0x1ba867.classType)) {
          return !_0x431514(_0x1ba867.classType.shared.moduleName);
        }
        if (_0x23cefb.length < 2) {
          return false;
        }
        return _0x3127e4(_0x6617f, _0x19f54f.d.rightExpr, _0x23cefb[1]);
      }
      function _0x3a742f(_0x1ae121, _0x32e23f) {
        const _0x4f3c9b = _0xc3a6c4(_0x32e23f);
        if (!_0x4f3c9b) {
          return false;
        }
        if (_0x32e23f.nodeType === 7) {
          return _0x3127e4(_0x1ae121, _0x32e23f.d.rightExpr, _0x4f3c9b[0]);
        }
        for (const _0x1ba786 of _0x4f3c9b) {
          if (_0x3127e4(_0x1ae121, _0x32e23f.d.iterableExpr, _0x1ba786)) {
            return true;
          }
        }
        return false;
      }
      function _0x22f5d6(_0x44dd94, _0x408b59) {
        if (_0x408b59.d.leftExpr.nodeType !== 38) {
          return false;
        }
        const _0x2c2aae = _0xc06319.get(_0x408b59.d.leftExpr.d.value);
        if (!_0x2c2aae) {
          return false;
        }
        if (_0x408b59.d.args.length <= _0x2c2aae.argIndex || _0x408b59.d.args[_0x2c2aae.argIndex].d.argCategory !== 0) {
          return false;
        }
        return _0x3127e4(_0x44dd94, _0x408b59.d.args[_0x2c2aae.argIndex].d.valueExpr, _0x2c2aae.name, _0x2c2aae.useMeta);
      }
      function _0x3f6431(_0x35fadc, _0xd07e08, _0x4f5b1a) {
        const _0x7c9dd3 = _0x4f5b1a.operatorType;
        if (!_0xaaa4ef.has(_0x7c9dd3) && !_0x4ff5bc.has(_0x7c9dd3) && !_0x3dab41.has(_0x7c9dd3)) {
          return undefined;
        }
        const _0x8c7b03 = _0x37e794.findNodeByOffset(_0xd07e08.parseTree, _0x4f5b1a.start);
        if (!_0x8c7b03) {
          return undefined;
        }
        const _0x2c0562 = _0x37e794.getFirstAncestorOrSelf(_0x8c7b03, _0x5d3417 => {
          if (_0x5d3417.nodeType === 7 || _0x5d3417.nodeType === 55) {
            return _0x5d3417.d.operatorToken === _0x4f5b1a;
          }
          if (_0x5d3417.nodeType === 5) {
            return _0x5d3417.d.operator === _0x7c9dd3;
          }
          return false;
        });
        if (!_0x2c0562) {
          return undefined;
        }
        const _0x12b235 = _0x39a231(_0x2c0562);
        if (!_0x12b235) {
          return undefined;
        }
        const _0x2c926c = _0x35fadc.getType(_0x419d80(_0x2c0562));
        if (!_0x2c926c || !_0x505a7c.isClass(_0x2c926c)) {
          return undefined;
        }
        let _0xf1a772 = _0x12b235[0];
        let _0x32be86 = _0x35fadc.getBoundMagicMethod(_0x2c926c, _0xf1a772);
        if (!_0x32be86 && _0x12b235.length > 1) {
          _0xf1a772 = _0x12b235[1];
          const _0x1b03d3 = _0x35fadc.getType(_0x2c0562.d.rightExpr);
          if (_0x1b03d3 && _0x505a7c.isClass(_0x1b03d3)) {
            _0x32be86 = _0x35fadc.getBoundMagicMethod(_0x1b03d3, _0xf1a772);
          }
        }
        return {
          name: _0xf1a772,
          method: _0x32be86
        };
      }
      function _0x7cd3c2(_0xe8a7ae, _0x249980, _0xeb9674) {
        const _0x563101 = _0xeb9674.keywordType;
        if (!_0x4044bf.has(_0x563101)) {
          return undefined;
        }
        const _0x45d8df = _0x37e794.findNodeByOffset(_0x249980.parseTree, _0xeb9674.start);
        if (!_0x45d8df) {
          return undefined;
        }
        const _0x497ab7 = _0x37e794.getFirstAncestorOrSelf(_0x45d8df, _0xe482a => {
          if (_0xe482a.nodeType === 7) {
            return _0xe482a.d.operatorToken === _0xeb9674;
          }
          if (_0xe482a.nodeType === 29) {
            return _0x221871.TextRange.contains(_0x221871.TextRange.fromBounds(_0x221871.TextRange.getEnd(_0xe482a.d.targetExpr), _0xe482a.d.iterableExpr.start), _0xeb9674.start);
          }
          return false;
        });
        if (!_0x497ab7) {
          return undefined;
        }
        const _0xe04a17 = _0xc3a6c4(_0x497ab7);
        if (!_0xe04a17) {
          return undefined;
        }
        const _0x439520 = _0x497ab7.nodeType === 7 ? _0x497ab7.d.rightExpr : _0x497ab7.d.iterableExpr;
        const _0x47310c = _0xe8a7ae.getType(_0x439520);
        if (!_0x47310c || !_0x505a7c.isClass(_0x47310c)) {
          return undefined;
        }
        for (const _0x1c12d8 of _0xe04a17) {
          const _0x4c353a = _0xe8a7ae.getBoundMagicMethod(_0x47310c, _0x1c12d8);
          if (!_0x4c353a) {
            continue;
          }
          return {
            name: _0x1c12d8,
            method: _0x4c353a
          };
        }
        return undefined;
      }
      function _0x30b371(_0x1875f4, _0x18d0b2, _0x4669ef) {
        const _0x57c682 = _0xc06319.get(_0x4669ef.value);
        if (!_0x57c682) {
          return undefined;
        }
        const _0x11928b = _0x37e794.findNodeByOffset(_0x18d0b2.parseTree, _0x4669ef.start);
        if (!_0x11928b) {
          return undefined;
        }
        const _0x30990e = _0x37e794.getFirstAncestorOrSelf(_0x11928b, _0x1ac3b2 => {
          if (_0x1ac3b2.nodeType === 9) {
            return _0x1ac3b2.d.leftExpr.nodeType === 38 && _0x1ac3b2.d.leftExpr.d.token === _0x4669ef;
          }
          return false;
        });
        if (!_0x30990e || _0x30990e.d.args.length <= _0x57c682.argIndex || _0x30990e.d.args[_0x57c682.argIndex].d.argCategory !== 0) {
          return undefined;
        }
        const _0x4a197d = _0x30990e.d.args[_0x57c682.argIndex].d.valueExpr;
        const _0xb6779c = _0x4a20d7(_0x1875f4, _0x4a197d, _0x57c682.useMeta ?? false);
        if (!_0xb6779c) {
          return undefined;
        }
        const _0x5b5e4e = _0x1875f4.getBoundMagicMethod(_0xb6779c, _0x57c682.name);
        return {
          name: _0x57c682.name,
          method: _0x5b5e4e
        };
      }
      function _0x39a231(_0xc0dacf) {
        if (_0xc0dacf.nodeType === 7) {
          return _0xaaa4ef.get(_0xc0dacf.d.operator);
        } else {
          if (_0xc0dacf.nodeType === 5) {
            return _0x3dab41.get(_0xc0dacf.d.operator);
          } else {
            return _0x4ff5bc.get(_0xc0dacf.d.operator);
          }
        }
      }
      function _0x431514(_0x2e7c8c) {
        return _0x2e7c8c === 'builtins' || _0x2e7c8c === 'typing';
      }
      function _0xc3a6c4(_0x10aac5) {
        if (_0x10aac5.nodeType === 7) {
          const _0x322b84 = _0x10aac5.d.operatorToken;
          return _0x4044bf.get(_0x322b84.keywordType);
        }
        return ['__iter__', '__getitem__'];
      }
      function _0x419d80(_0x4d2a8c) {
        if (_0x4d2a8c.nodeType === 7 || _0x4d2a8c.nodeType === 5) {
          return _0x4d2a8c.d.leftExpr;
        }
        return _0x4d2a8c.d.expr;
      }
      function _0x4a20d7(_0x21416d, _0x4dd384, _0xf33373) {
        let _0x95f913 = _0x21416d.getType(_0x4dd384);
        if (!_0x95f913 || !_0x505a7c.isClass(_0x95f913)) {
          return undefined;
        }
        if (_0xf33373 && (_0x95f913.shared.effectiveMetaclass || _0x95f913.shared.declaredMetaclass)) {
          _0x95f913 = _0x95f913.shared.effectiveMetaclass ?? _0x95f913.shared.declaredMetaclass;
          if (!_0x95f913 || !_0x505a7c.isClass(_0x95f913)) {
            return undefined;
          }
        }
        return _0x95f913;
      }
      function _0x3127e4(_0x2c3297, _0x211280, _0x40c381, _0x59ffb5 = false) {
        const _0x2ea2fb = _0x4a3ef3(_0x2c3297, _0x211280, _0x40c381, _0x59ffb5);
        return _0x2ea2fb && _0x505a7c.isClass(_0x2ea2fb.classType) && !_0x431514(_0x2ea2fb.classType.shared.moduleName);
      }
      function _0x4a3ef3(_0xcc68, _0x59ff39, _0x3c6553, _0x4b656f = false) {
        const _0x1a7dd2 = _0x4a20d7(_0xcc68, _0x59ff39, _0x4b656f);
        if (!_0x1a7dd2) {
          return undefined;
        }
        return _0x17cb86.lookUpClassMember(_0x1a7dd2, _0x3c6553, 4);
      }
    },
    16589: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.mainFilename = undefined;
      const _0x107642 = process.mainModule;
      exports.mainFilename = _0x107642 ? _0x107642.filename ?? undefined : undefined;
    },
    96159: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.hasAsyncKeyword = _0x5d9515;
      const _0x78fd20 = __importStar(require(41557));
      function _0x5d9515(_0x2a521d, _0x29c769) {
        const _0x15fad7 = _0x78fd20.getTokenIndexAtLeft(_0x2a521d.tokenizerOutput.tokens, _0x29c769.start);
        return _0x34e212(_0x2a521d, _0x15fad7, 10) && _0x34e212(_0x2a521d, _0x15fad7 - 1, 3);
      }
      function _0x34e212(_0x5e8ef4, _0x248376, _0x20528a) {
        if (_0x248376 < 0) {
          return false;
        }
        const _0x1f00d5 = _0x5e8ef4.tokenizerOutput.tokens.getItemAt(_0x248376);
        return _0x1f00d5.type === 8 && _0x1f00d5.keywordType === _0x20528a;
      }
    },
    13348: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MRUQueue = undefined;
      class _0x3d0692 {
        constructor(_0x46b84d, _0xb8ff25, _0x5944e4 = (_0x19d5db, _0x300e47) => _0x19d5db === _0x300e47) {
          this._size = _0x46b84d;
          this._keyGetter = _0xb8ff25;
          this._equalityChecker = _0x5944e4;
          this._list = [];
        }
        enqueue(_0xa16ea0) {
          const _0x242b8f = this._list.findIndex(_0x5cfcfc => this._equalityChecker(_0x5cfcfc, _0xa16ea0));
          if (_0x242b8f !== -1) {
            this._list.splice(_0x242b8f, 1);
          }
          this._list.unshift(_0xa16ea0);
          if (this._list.length > this._size) {
            this._list.pop();
          }
        }
        get(_0x58fc5f) {
          return this._list.filter(_0x191e04 => this._keyGetter(_0x191e04) === _0x58fc5f);
        }
        take(_0x243ccc) {
          return this._list.slice(0, Math.max(0, Math.min(_0x243ccc, this._list.length)));
        }
      }
      exports.MRUQueue = _0x3d0692;
    },
    44889: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.NotebookUriMapper = exports.INotebookUriMapper = undefined;
      const _0x2e1f06 = require(27113);
      const _0x102f1b = require(41976);
      const _0x518597 = require(86521);
      var _0x36df62;
      (function (_0x250442) {
        function _0x4f0d27(_0x325457) {
          return _0x325457 && typeof _0x325457.parseNotebookOpen === 'function';
        }
        _0x250442.is = _0x4f0d27;
      })(_0x36df62 || (exports.INotebookUriMapper = _0x36df62 = {}));
      const _0x3c8f72 = 'pylancePrefixCell';
      const _0x12d239 = 'vscode-notebook-cell';
      const _0xc405af = 'vscode-interactive-input';
      class _0x54cf71 {
        constructor(_0x3179b7) {
          this._caseDetector = _0x3179b7;
          this._originalToMapped = new Map();
          this._mappedToOriginal = new Map();
          this._pendingDeletes = new Set();
          this._inUseUris = new Set();
        }
        parseNotebookOpen(_0x50ec24) {
          this._clearPendingDeletes();
          const _0xa53978 = _0x2e1f06.Uri.parse(_0x50ec24.notebookDocument.uri, this._caseDetector);
          _0x50ec24.cellTextDocuments.forEach(_0x25548d => {
            const _0x1203e5 = _0x2e1f06.Uri.parse(_0x25548d.uri, this._caseDetector);
            const _0x36c570 = this._generateCellMappedUri(_0xa53978, _0x1203e5);
            this._save(_0x1203e5, _0x36c570);
          });
          return _0xa53978;
        }
        parseNotebookChange(_0x3e4bcb) {
          var _0x338ca2;
          var _0x1e634c;
          if ((_0x338ca2 = _0x3e4bcb.change.cells?.structure?.didClose) === null || _0x338ca2 === undefined) {
            undefined;
          } else {
            _0x338ca2.forEach(_0x41594b => {
              const _0x397d8d = _0x2e1f06.Uri.parse(_0x41594b.uri, this._caseDetector);
              this._pendDelete(_0x397d8d);
            });
          }
          const _0x20a565 = _0x2e1f06.Uri.parse(_0x3e4bcb.notebookDocument.uri, this._caseDetector);
          if ((_0x1e634c = _0x3e4bcb.change.cells?.structure?.didOpen) === null || _0x1e634c === undefined) {
            undefined;
          } else {
            _0x1e634c.forEach(_0x257a5f => {
              const _0x3470ff = _0x2e1f06.Uri.parse(_0x257a5f.uri, this._caseDetector);
              const _0x51de35 = this._generateCellMappedUri(_0x20a565, _0x3470ff);
              this._save(_0x3470ff, _0x51de35);
            });
          }
          return _0x20a565;
        }
        parseNotebookClose(_0x2291f4) {
          _0x2291f4.cellTextDocuments.forEach(_0x2504ae => {
            const _0x2e215a = _0x2e1f06.Uri.parse(_0x2504ae.uri, this._caseDetector);
            this._pendDelete(_0x2e215a);
          });
          return _0x2e1f06.Uri.parse(_0x2291f4.notebookDocument.uri, this._caseDetector);
        }
        markUsing(_0x38c9b8, _0x133bd6) {
          if (_0x54cf71.isNotebookCell(_0x38c9b8)) {
            if (_0x133bd6) {
              this._inUseUris.add(_0x38c9b8.key);
            } else {
              this._inUseUris.delete(_0x38c9b8.key);
            }
          }
        }
        getOriginalCellUri(_0x4cf6c9) {
          var _0x5a366b;
          if ((_0x5a366b = this._mappedToOriginal.get(_0x4cf6c9.key)) !== null && _0x5a366b !== undefined) {
            return _0x5a366b;
          } else {
            return _0x4cf6c9;
          }
        }
        getMappedCellUri(_0x44f29f) {
          var _0x4eb4ab;
          if ((_0x4eb4ab = this._originalToMapped.get(_0x44f29f.key)) !== null && _0x4eb4ab !== undefined) {
            return _0x4eb4ab;
          } else {
            return _0x44f29f;
          }
        }
        getNotebookUriFromCell(_0x4d0f99) {
          const _0x3a8119 = this.getMappedCellUri(_0x4d0f99);
          return _0x3a8119.replaceExtension('').withQuery(_0x3a8119.query);
        }
        static isNotebookPrefixCell(_0x2d4ffb) {
          return _0x2d4ffb.fragment === _0x3c8f72;
        }
        static isNotebookFile(_0x27dc86) {
          if (_0x27dc86.scheme === _0x102f1b.VSCodeChatCodeBlockScheme || _0x27dc86.scheme === _0x518597.VSCodeCopilotChatCodeBlockScheme) {
            return false;
          }
          return _0x27dc86.hasExtension('.ipynb') && _0x27dc86.fragment.length <= 0;
        }
        static isNotebookCell(_0x26c2bf) {
          if (_0x26c2bf.scheme === _0xc405af) {
            return true;
          }
          if (_0x26c2bf.fragment) {
            return _0x26c2bf.containsExtension('.ipynb') || _0x26c2bf.scheme === _0x12d239;
          } else {
            return false;
          }
        }
        static getNotebookPrefixUri(_0x8f804d) {
          return _0x8f804d.addExtension('.py').withFragment(_0x3c8f72);
        }
        _generateCellMappedUri(_0xea13b8, _0x374fac) {
          return _0xea13b8.addExtension('.py').withFragment(_0x374fac.fragment);
        }
        _clearPendingDeletes() {
          const _0x31d6f8 = [...this._pendingDeletes];
          _0x31d6f8.forEach(_0x7cb1d4 => {
            if (!this._inUseUris.has(_0x7cb1d4)) {
              this._delete(_0x7cb1d4);
            }
          });
        }
        _pendDelete(_0x504aab) {
          this._pendingDeletes.add(_0x504aab.key);
        }
        _save(_0x1e0a70, _0x19427d) {
          this._originalToMapped.set(_0x1e0a70.key, _0x19427d);
          this._mappedToOriginal.set(_0x19427d.key, _0x1e0a70);
          this._pendingDeletes.delete(_0x1e0a70.key);
        }
        _delete(_0x167f2e) {
          const _0x24c8da = this._originalToMapped.get(_0x167f2e);
          if (_0x24c8da) {
            this._originalToMapped.delete(_0x167f2e);
            this._mappedToOriginal.delete(_0x24c8da.key);
            this._pendingDeletes.delete(_0x167f2e);
          }
        }
      }
      exports.NotebookUriMapper = _0x54cf71;
    },
    19013: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getNodesInRange = _0x4784c4;
      exports.getOutermostClassNameFromDecl = _0x4f380f;
      exports.getOutermostEnclosingClassName = _0x5acb31;
      exports.getOutermostEnclosingClassNameNode = _0x1dc472;
      exports.getClassFullNameParts = _0x375a74;
      const _0x48d2ee = require(83760);
      const _0x54e2e9 = require(41557);
      const _0x4149d4 = require(88744);
      const _0x309d93 = require(91426);
      const _0x2ca896 = require(56814);
      const _0x58c9f9 = require(88754);
      function _0x4784c4(_0x5df615, _0x58092d, _0x3bbcc5, _0x1bbb1e) {
        const _0x1b2261 = [];
        const _0x131060 = _0x1bbb1e ? _0x58c9f9.Range.is(_0x1bbb1e) ? _0x2ca896.convertRangeToTextRange(_0x1bbb1e, _0x5df615.tokenizerOutput.lines) : _0x1bbb1e : undefined;
        class _0x38df45 extends _0x4149d4.ParseTreeWalker {
          visit(_0x505b26) {
            _0x309d93.throwIfCancellationRequested(_0x3bbcc5);
            if (_0x131060 && !_0x58c9f9.TextRange.overlapsRange(_0x131060, _0x505b26)) {
              return false;
            }
            if (_0x505b26.nodeType === _0x58092d) {
              _0x1b2261.push(_0x505b26);
            }
            return super.visit(_0x505b26);
          }
        }
        const _0x3c5dcd = new _0x38df45();
        _0x3c5dcd.walk(_0x5df615.parserOutput.parseTree);
        return _0x1b2261;
      }
      function _0x4f380f(_0x2fa304) {
        var _0x4b9606;
        if ((_0x4b9606 = _0x5acb31(_0x2fa304.node)) !== null && _0x4b9606 !== undefined) {
          return _0x4b9606;
        } else {
          return _0x48d2ee.getNameFromDeclaration(_0x2fa304);
        }
      }
      function _0x5acb31(_0x1d65f6) {
        var _0x39eeb9;
        if ((_0x39eeb9 = _0x1dc472(_0x1d65f6)) === null || _0x39eeb9 === undefined) {
          return undefined;
        } else {
          return _0x39eeb9.d.value;
        }
      }
      function _0x1dc472(_0x6c433) {
        var _0x10bb6e;
        const _0x54477d = _0x54e2e9.getEnclosingClass(_0x6c433);
        if (!_0x54477d) {
          return undefined;
        }
        if ((_0x10bb6e = _0x1dc472(_0x54477d)) !== null && _0x10bb6e !== undefined) {
          return _0x10bb6e;
        } else {
          return _0x54477d.d.name;
        }
      }
      function _0x375a74(_0x4d0874) {
        const _0x1d6778 = [_0x4d0874.d.name.d.value];
        let _0x16c536 = _0x4d0874;
        while (_0x16c536) {
          _0x16c536 = _0x54e2e9.getEnclosingClass(_0x16c536);
          if (_0x16c536) {
            _0x1d6778.push(_0x16c536.d.name.d.value);
          }
        }
        return _0x1d6778.reverse();
      }
    },
    84590: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Platform = undefined;
      const _0x22f93b = __importStar(require(16928));
      class _0xec572c {
        get name() {
          return process.platform;
        }
        isMac() {
          return process.platform === 'darwin';
        }
        isLinux() {
          return process.platform === 'linux';
        }
        isWindows() {
          return process.platform === 'win32';
        }
        is64() {
          return process.arch === 'x64';
        }
        isWeb() {
          return !!process.browser;
        }
        getPlatformName() {
          return process.platform;
        }
        isOnnxSupported() {
          return (this.isWindows() || this.isLinux()) && this.is64() || this.isMac();
        }
        isBundle() {
          return _0x22f93b.basename(__filename).endsWith('.bundle.js');
        }
      }
      exports.Platform = _0xec572c;
      (function (_0x12e0c6) {
        function _0x27486c(_0x3c7132) {
          return _0x3c7132 instanceof _0x12e0c6;
        }
        _0x12e0c6.is = _0x27486c;
      })(_0xec572c || (exports.Platform = _0xec572c = {}));
    },
    45210: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.pylanceCodeActionKinds = exports.pylanceRefactorActionKinds = exports.pylanceSourceActionKinds = exports.PylanceCodeActionKind = undefined;
      const _0x50cf31 = require(64819);
      var _0x5d9b2a;
      (function (_0xf094c) {
        let _0x55923c;
        (function (_0x465298) {
          _0x465298.UnusedImports = _0x50cf31.CodeActionKind.Source + '.unusedImports';
          _0x465298.ConvertImportFormat = _0x50cf31.CodeActionKind.Source + '.convertImportFormat';
          _0x465298.FixAll = _0x50cf31.CodeActionKind.SourceFixAll + '.pylance';
        })(_0x55923c = _0xf094c.Source ||= {});
        let _0x59490c;
        (function (_0x385140) {
          _0x385140.Variable = _0x50cf31.CodeActionKind.RefactorExtract + '.variable';
          _0x385140.Method = _0x50cf31.CodeActionKind.RefactorExtract + '.method';
        })(_0x59490c = _0xf094c.RefactorExtract ||= {});
        let _0x8274a7;
        (function (_0x4edf00) {
          const _0x3fecda = _0x50cf31.CodeActionKind.Refactor + '.move';
          _0x4edf00.ToFile = _0x3fecda + '.toFile';
          _0x4edf00.ToNewFile = _0x3fecda + '.toNewFile';
        })(_0x8274a7 = _0xf094c.RefactorMove ||= {});
      })(_0x5d9b2a || (exports.PylanceCodeActionKind = _0x5d9b2a = {}));
      exports.pylanceSourceActionKinds = [_0x5d9b2a.Source.UnusedImports, _0x5d9b2a.Source.ConvertImportFormat, _0x5d9b2a.Source.FixAll];
      exports.pylanceRefactorActionKinds = [_0x5d9b2a.RefactorExtract.Variable, _0x5d9b2a.RefactorExtract.Method, _0x5d9b2a.RefactorMove.ToFile, _0x5d9b2a.RefactorMove.ToNewFile];
      exports.pylanceCodeActionKinds = [...exports.pylanceSourceActionKinds, ...exports.pylanceRefactorActionKinds];
    },
    52471: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceDebugInfoInspector = undefined;
      const _0x2ae098 = require(48281);
      class _0xe8cad0 {
        constructor() {
          this._notebookData = new Map();
        }
        getCycleDetail(_0x2be6e7, _0x2f23e1) {
          try {
            const _0x3ebb37 = this._getNotebookData(_0x2f23e1.sourceFile.getUri());
            if (!_0x3ebb37) {
              return 'Found a cycle, but we can\'t find notebook data that has info for this cell';
            }
            let _0x569574 = `total number of cells: ${_0x3ebb37.mappedCellUris.length + 1}
`;
            const _0x2ede89 = this._getNotebookCellNames(_0x3ebb37);
            const _0x572dca = this._getSourceFilesWithChainSet(_0x2be6e7, _0x2ede89);
            _0x569574 += _0x8fd767(_0x3ebb37.prefixCellUri, _0x2f23e1.sourceFile.getUri()) + ': prefix cell\n';
            for (const _0x12cdf6 of _0x3ebb37.mappedCellUris) {
              const _0x91a97f = _0x8fd767(_0x12cdf6, _0x2f23e1.sourceFile.getUri());
              const _0x3493ab = _0x2be6e7.getSourceFileInfo(_0x12cdf6);
              if (!_0x3493ab) {
                _0x569574 += _0x91a97f + ': not exist in program\n';
                continue;
              }
              const _0x4fea9a = _0x3493ab.chainedSourceFile;
              if (!_0x4fea9a) {
                _0x569574 += _0x91a97f + ': no chained cell\n';
                continue;
              }
              const _0x5b4882 = _0x2ede89.get(_0x4fea9a.sourceFile.getUri().key);
              if (!_0x5b4882) {
                _0x569574 += _0x91a97f + ': chained file is not a cell\n';
                continue;
              }
              _0x569574 += _0x91a97f + ' -> ' + _0x5b4882 + '\n';
            }
            _0x569574 += '------------------------\n';
            if (_0x572dca.size > 0) {
              _0x569574 += `some chained files not found in the cells: ${_0x572dca.size}
`;
            }
            return _0x569574;
            function _0x8fd767(_0x10fe43, _0x52d1a2) {
              _0x572dca.delete(_0x10fe43.key);
              return _0x2ede89.get(_0x10fe43.key) + (_0x52d1a2.equals(_0x10fe43) ? '[cycle]' : '');
            }
          } catch (_0x5b582e) {
            return `Found a cycle but couldn't gather more detail info. ${_0x5b582e.message}`;
          }
        }
        setNotebookData(_0x1b3bdb) {
          if (_0x1b3bdb.kind === 'close') {
            this._notebookData.delete(_0x1b3bdb.fileUri.key);
          } else {
            this._notebookData.set(_0x1b3bdb.fileUri.key, _0x1b3bdb.data);
          }
        }
        _getSourceFilesWithChainSet(_0x22bfd2, _0x2260fd) {
          const _0x30aac3 = new Set();
          for (const _0x204e22 of _0x22bfd2.getSourceFileInfoList()) {
            if (!_0x204e22.chainedSourceFile) {
              continue;
            }
            const _0x476dd3 = _0x204e22.sourceFile.getUri();
            if (!_0x2260fd.has(_0x476dd3.key)) {
              continue;
            }
            _0x30aac3.add(_0x476dd3.key);
            _0x30aac3.add(_0x204e22.chainedSourceFile.sourceFile.getUri().key);
          }
          return _0x30aac3;
        }
        _getNotebookCellNames(_0x95f7cc) {
          const _0x4b3f46 = new Map();
          let _0x3d45a3 = 0;
          _0x4b3f46.set(_0x95f7cc.prefixCellUri.key, `cell${_0x3d45a3++}`);
          for (const _0x57498a of _0x95f7cc.mappedCellUris) {
            _0x2ae098.assert(!_0x4b3f46.has(_0x57498a.key));
            _0x4b3f46.set(_0x57498a.key, `cell${_0x3d45a3++}`);
          }
          return _0x4b3f46;
        }
        _getNotebookData(_0x15408e) {
          for (const _0x503d3 of this._notebookData.values()) {
            if (_0x503d3.prefixCellUri.equals(_0x15408e) || _0x503d3.mappedCellUris.some(_0x3c0041 => _0x3c0041.equals(_0x15408e))) {
              return _0x503d3;
            }
          }
          return undefined;
        }
      }
      exports.PylanceDebugInfoInspector = _0xe8cad0;
    },
    71069: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceDocStringService = undefined;
      const _0x1dc806 = require(12670);
      const _0x58075a = require(81073);
      const _0x4add78 = require(71458);
      const _0xf16152 = require(71582);
      const _0x23101f = require(99504);
      const _0x4611c5 = require(17189);
      const _0x1c7f68 = require(52820);
      const _0x43ffb9 = require(55166);
      const _0x5bf543 = require(80019);
      const _0x25e321 = require(36984);
      class _0x5e1c17 {
        constructor(_0x4f0da0, _0x922a19, _0x2d12b8, _0x3cc2f4, _0x120830 = false) {
          this._fs = _0x4f0da0;
          this._treeSitterWasmUri = _0x922a19;
          this._treeSitterRstWasmUri = _0x2d12b8;
          this._console = _0x3cc2f4;
          this._supportRestParsing = _0x120830;
          this._restParsingEnabled = false;
          this._logEnabled = false;
          this._impl = new _0x4add78.PyrightDocStringService();
          this.enableRestParsing(_0x120830);
          this._logEnabled = _0x23101f.IS_DEV;
        }
        get ready() {
          if (this._ready) {
            return this._ready;
          } else {
            return Promise.resolve();
          }
        }
        get isRestParsingEnabled() {
          return this._restParsingEnabled;
        }
        clone() {
          return new _0x5e1c17(this._fs, this._treeSitterWasmUri, this._treeSitterRstWasmUri, this._console, this._supportRestParsing);
        }
        convertDocStringToPlainText(_0x1b1092) {
          return this._impl.convertDocStringToPlainText(_0x1b1092);
        }
        convertDocStringToMarkdown(_0x2a5d3e, _0xa247f2) {
          if (this._restParsingEnabled && this._logEnabled) {
            this._console.log('Restructured text parsing enabled');
            this._console.log('Converting docstring to markdown');
            this._console.log(_0x2a5d3e);
          }
          const _0x145a00 = new _0xf16152.Duration();
          const _0x6de7d3 = this._impl.convertDocStringToMarkdown(_0x2a5d3e, _0xa247f2);
          if (this._restParsingEnabled && this._logEnabled) {
            this._console.log(`Conversion complete in ${_0x145a00.getDurationInMilliseconds()}ms`);
            this._console.log(_0x6de7d3);
          }
          return _0x6de7d3;
        }
        extractParameterDocumentation(_0x2795f2, _0x383af6, _0x201e41, _0x10b299) {
          return this._impl.extractParameterDocumentation(_0x2795f2, _0x383af6, _0x201e41, _0x10b299);
        }
        enableRestParsing(_0x279ac5) {
          if (_0x279ac5 && !this._restParsingEnabled) {
            this._restParsingEnabled = true;
            const _0x574e48 = new _0x1a7325(this._fs, this._treeSitterWasmUri, this._treeSitterRstWasmUri, this._console, this._logEnabled);
            this._ready = _0x574e48.ready.then(() => {
              this._impl = _0x574e48;
            }).catch(_0x204c4a => {
              this._console.error(`Error initializing RestDocStringService: ${_0x204c4a}`);
              this._restParsingEnabled = false;
              this._impl = new _0x4add78.PyrightDocStringService();
            });
          } else {
            if (!_0x279ac5 && this._restParsingEnabled) {
              this._restParsingEnabled = false;
              this._ready = Promise.resolve();
              this._impl = new _0x4add78.PyrightDocStringService();
            }
          }
        }
      }
      exports.PylanceDocStringService = _0x5e1c17;
      class _0x1a7325 {
        constructor(_0x4cbcdb, _0xba3ef4, _0x171348, _0xc9fa67, _0x1a852e) {
          this._fs = _0x4cbcdb;
          this._parserWasmUri = _0xba3ef4;
          this._grammarWasmUri = _0x171348;
          this._console = _0xc9fa67;
          this._logEnabled = _0x1a852e;
          this._restParser = new _0x5bf543.RestructuredTextParser();
          this._lastDocString = '';
          const _0x3c1d88 = new Uint8Array(this._fs.readFileSync(_0x171348));
          this._initialized = _0x5bf543.initialize(_0xba3ef4, _0x3c1d88);
        }
        get ready() {
          return this._initialized;
        }
        clone() {
          return new _0x1a7325(this._fs, this._parserWasmUri, this._grammarWasmUri, this._console, this._logEnabled);
        }
        convertDocStringToPlainText(_0x20b615) {
          return _0x1dc806.convertDocStringToPlainText(_0x20b615);
        }
        convertDocStringToMarkdown(_0x4b6852, _0x5baf88) {
          const _0x4c87c9 = this._convertToDocument(_0x4b6852);
          if (!_0x4c87c9) {
            return _0x1dc806.convertDocStringToMarkdown(_0x4b6852);
          }
          return _0x1c7f68.MarkdownFormatter.convertToMarkdown(_0x4c87c9, this._console, _0x5baf88);
        }
        extractParameterDocumentation(_0x1402cc, _0x54f641, _0x47d993, _0x4bbca3) {
          if (_0x47d993 === 'plaintext' || _0x4bbca3) {
            return _0x58075a.extractParameterDocumentation(_0x1402cc, _0x54f641);
          }
          const _0x1ae162 = this._convertToDocument(_0x1402cc);
          if (!_0x1ae162) {
            return _0x58075a.extractParameterDocumentation(_0x1402cc, _0x54f641);
          }
          let _0x3f5e42 = _0x43ffb9.ParameterFormatter.extractParameterDocumentation(_0x1ae162, _0x54f641, this._console);
          if (_0x3f5e42.length === 0) {
            _0x3f5e42 = _0x58075a.extractParameterDocumentation(_0x1402cc, _0x54f641);
          }
          return _0x3f5e42;
        }
        _convertToDocument(_0x5aba1d) {
          if (_0x5aba1d === this._lastDocString && this._lastTree) {
            return this._lastTree;
          }
          _0x5aba1d = _0x5aba1d.replace(/\r/g, '');
          _0x5aba1d = _0x25e321.cleanIndent(_0x5aba1d);
          const _0x3618bc = _0x4611c5.Fixer.fix(_0x5aba1d, this._restParser, this._console);
          if (this._logEnabled) {
            this._console.log('Fixed docstring:');
            this._console.log(_0x3618bc);
          }
          this._lastTree = this._restParser.parse(_0x3618bc, this._console);
          this._lastDocString = _0x5aba1d;
          return this._lastTree;
        }
      }
    },
    79524: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceFileSystem = undefined;
      const _0x2ea533 = require(16867);
      const _0x5c5deb = require(25747);
      const _0x1b724e = require(62226);
      const _0x418448 = require(44889);
      const _0x5e3ecb = require(22180);
      class _0x47695e {
        constructor(_0x35fe1b, _0x172df2, _0x2d13df, _0x1d50e7) {
          this._uriMapper = _0x172df2;
          this._useRemote = _0x2d13df;
          this._createRemoteFileSystem = _0x1d50e7;
          this._fallbackFs = new _0x1b724e.PyrightFileSystem(_0x35fe1b);
        }
        static createFromConnection(_0x3e539c, _0x521126, _0xc580fd, _0x191b1a = _0x5c5deb.WebUri.isWebUri) {
          return new _0x47695e(_0x521126, _0xc580fd, _0x191b1a, _0x6856b2 => {
            return new _0x5e3ecb.RemoteFileSystem(_0x6856b2.root, _0x3e539c.workspace.fileSystem);
          });
        }
        static createWithoutRemote(_0x5b78f5, _0x8c0710) {
          return new _0x47695e(_0x5b78f5, _0x8c0710, _0x5c5deb.WebUri.isWebUri, _0x3fc13b => undefined);
        }
        static createFromFileSystem(_0x13671e, _0xf562a8, _0x41c702) {
          return new _0x47695e(_0x13671e, _0x41c702, _0x5c5deb.WebUri.isWebUri, _0x486871 => {
            return new _0x5e3ecb.RemoteFileSystem(_0x486871.root, _0xf562a8);
          });
        }
        mkdirSync(_0x9edf1d, _0x366043) {
          var _0x34dded;
          if ((_0x34dded = this._getWritableFileSystem(_0x9edf1d)) === null || _0x34dded === undefined) {
            return undefined;
          } else {
            return _0x34dded.mkdirSync(_0x9edf1d, _0x366043);
          }
        }
        writeFileSync(_0x3fd0a8, _0x128017, _0x5b65e7) {
          var _0x30ba65;
          if ((_0x30ba65 = this._getWritableFileSystem(_0x3fd0a8)) === null || _0x30ba65 === undefined) {
            return undefined;
          } else {
            return _0x30ba65.writeFileSync(_0x3fd0a8, _0x128017, _0x5b65e7);
          }
        }
        unlinkSync(_0x383920) {
          var _0x437729;
          if ((_0x437729 = this._getWritableFileSystem(_0x383920)) === null || _0x437729 === undefined) {
            return undefined;
          } else {
            return _0x437729.unlinkSync(_0x383920);
          }
        }
        rmdirSync(_0x43586d) {
          var _0x285b2a;
          if ((_0x285b2a = this._getWritableFileSystem(_0x43586d)) === null || _0x285b2a === undefined) {
            return undefined;
          } else {
            return _0x285b2a.rmdirSync(_0x43586d);
          }
        }
        createFileSystemWatcher(_0xff7342, _0x2011f9) {
          return this._fallbackFs.createFileSystemWatcher(_0xff7342, _0x2011f9);
        }
        createReadStream(_0x416db0) {
          const _0x4cd2af = this._getWritableFileSystem(_0x416db0);
          if (!_0x4cd2af) {
            throw new Error('Not implemented');
          }
          return _0x4cd2af.createReadStream(_0x416db0);
        }
        createWriteStream(_0x43a9af) {
          return this._fallbackFs.createWriteStream(_0x43a9af);
        }
        copyFileSync(_0x13f20b, _0x1418af) {
          const _0x11f712 = this._getWritableFileSystem(_0x13f20b);
          const _0x192a6a = this._getWritableFileSystem(_0x1418af);
          if (_0x11f712 !== _0x192a6a) {
            throw new Error('Not implemented');
          }
          if (_0x11f712 === null || _0x11f712 === undefined) {
            return undefined;
          } else {
            return _0x11f712.copyFileSync(_0x13f20b, _0x1418af);
          }
        }
        existsSync(_0x5932e9) {
          return this._getReadOnlyFileSystem(_0x5932e9).existsSync(_0x5932e9);
        }
        chdir(_0x188dae) {
          return this._getReadOnlyFileSystem(_0x188dae).chdir(_0x188dae);
        }
        readdirEntriesSync(_0x3c0b00) {
          return this._getReadOnlyFileSystem(_0x3c0b00).readdirEntriesSync(_0x3c0b00);
        }
        readdirSync(_0x112bb8) {
          return this._getReadOnlyFileSystem(_0x112bb8).readdirSync(_0x112bb8);
        }
        readFileSync(_0x49148d, _0x202d49) {
          return this._getReadOnlyFileSystem(_0x49148d).readFileSync(_0x49148d, _0x202d49);
        }
        statSync(_0x4b4dc8) {
          return this._getReadOnlyFileSystem(_0x4b4dc8).statSync(_0x4b4dc8);
        }
        realpathSync(_0x2fcfba) {
          return this._getReadOnlyFileSystem(_0x2fcfba).realpathSync(_0x2fcfba);
        }
        getModulePath() {
          return this._fallbackFs.getModulePath();
        }
        readFile(_0x19f24f) {
          return this._getReadOnlyFileSystem(_0x19f24f).readFile(_0x19f24f);
        }
        readFileText(_0x29fdba, _0x258ff2) {
          return this._getReadOnlyFileSystem(_0x29fdba).readFileText(_0x29fdba, _0x258ff2);
        }
        realCasePath(_0x1b46ea) {
          return this._getReadOnlyFileSystem(_0x1b46ea).realCasePath(_0x1b46ea);
        }
        isMappedUri(_0x10338c) {
          if (_0x418448.NotebookUriMapper.isNotebookCell(_0x10338c)) {
            return true;
          }
          return this._getReadOnlyFileSystem(_0x10338c).isMappedUri(_0x10338c);
        }
        getOriginalUri(_0x2c606c) {
          if (_0x418448.NotebookUriMapper.isNotebookCell(_0x2c606c)) {
            return this._uriMapper.getOriginalCellUri(_0x2c606c);
          }
          return this._getReadOnlyFileSystem(_0x2c606c).getOriginalUri(_0x2c606c);
        }
        getMappedUri(_0x4223f3) {
          if (_0x418448.NotebookUriMapper.isNotebookCell(_0x4223f3)) {
            return this._uriMapper.getMappedCellUri(_0x4223f3);
          }
          return this._getReadOnlyFileSystem(_0x4223f3).getMappedUri(_0x4223f3);
        }
        isInZip(_0x5f44c1) {
          return this._getReadOnlyFileSystem(_0x5f44c1).isInZip(_0x5f44c1);
        }
        isPartialStubPackagesScanned(_0x480c97) {
          return this._fallbackFs.isPartialStubPackagesScanned(_0x480c97);
        }
        isPathScanned(_0x73dc04) {
          return this._fallbackFs.isPathScanned(_0x73dc04);
        }
        processPartialStubPackages(_0x1d1a03, _0x1f935c, _0x1378a9) {
          return this._fallbackFs.processPartialStubPackages(_0x1d1a03, _0x1f935c, _0x1378a9, this._allowMoving.bind(this));
        }
        clearPartialStubs() {
          return this._fallbackFs.clearPartialStubs();
        }
        _allowMoving(_0x51623d, _0x49558e, _0x240b5b) {
          if (!_0x51623d) {
            return true;
          }
          const _0x56e081 = this._fallbackFs.readFileSync(_0x240b5b.pyTypedPath, 'utf8') || '';
          return !_0x49558e || _0x49558e.isPartiallyTyped || _0x56e081.includes('partialOverride');
        }
        _getWritableFileSystem(_0x137b73) {
          try {
            if (!_0x2ea533.FileUri.isFileUri(_0x137b73)) {
              return undefined;
            }
          } catch {}
          return this._fallbackFs;
        }
        _getReadOnlyFileSystem(_0x155f4b) {
          try {
            if (this._useRemote(_0x155f4b)) {
              const _0x1164f2 = this._getRemoteFileSystem(_0x155f4b);
              if (_0x1164f2 !== undefined) {
                return _0x1164f2;
              }
            }
          } catch {}
          return this._fallbackFs;
        }
        _getRemoteFileSystem(_0x46d4a4) {
          if (!this._remoteFileSystem) {
            this._remoteFileSystem = this._createRemoteFileSystem(_0x46d4a4);
          }
          return this._remoteFileSystem;
        }
      }
      exports.PylanceFileSystem = _0x47695e;
    },
    94818: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceFullAccessHostFactory = exports.PylanceFullAccessHost = undefined;
      const _0x2c165a = __importStar(require(35317));
      const _0x7ee056 = require(58147);
      const _0x2672a7 = require(12913);
      class _0x2db16f extends _0x2672a7.FullAccessHost {
        constructor(_0x10f29e, _0x328e48) {
          super(_0x10f29e);
          this._hostCache = _0x328e48 ?? new Map();
        }
        static createHost(_0x47b97e, _0x2fd830) {
          if (_0x47b97e === 0) {
            return new _0x2db16f(_0x2fd830);
          } else {
            return _0x2672a7.FullAccessHost.createHost(_0x47b97e, _0x2fd830);
          }
        }
        getHostCache() {
          return this._hostCache;
        }
        getPythonSearchPaths(_0x175501, _0x2c91d4) {
          const _0x178117 = _0x7ee056.getOrAdd(this._hostCache, _0x175501?.key || '', () => ({}));
          if (_0x178117.path) {
            if (_0x2c91d4 === null || _0x2c91d4 === undefined) {
              undefined;
            } else {
              _0x2c91d4.push(..._0x178117.path.logInfo);
            }
            return _0x178117.path.result;
          }
          const _0xd8203e = [];
          const _0x1d59dc = super.getPythonSearchPaths(_0x175501, _0xd8203e);
          if (_0x2c91d4 === null || _0x2c91d4 === undefined) {
            undefined;
          } else {
            _0x2c91d4.push(..._0xd8203e);
          }
          _0x178117.path = {
            result: _0x1d59dc,
            logInfo: _0xd8203e
          };
          return _0x1d59dc;
        }
        getPythonVersion(_0x50252e, _0x22d12f) {
          const _0xea6f7f = _0x7ee056.getOrAdd(this._hostCache, _0x50252e?.key ?? '', () => ({}));
          if (_0xea6f7f.version) {
            if (_0x22d12f === null || _0x22d12f === undefined) {
              undefined;
            } else {
              _0x22d12f.push(..._0xea6f7f.version.logInfo);
            }
            return _0xea6f7f.version.result;
          }
          const _0x2fb327 = [];
          const _0x4a0ab9 = super.getPythonVersion(_0x50252e, _0x2fb327);
          _0xea6f7f.version = {
            result: _0x4a0ab9,
            logInfo: _0x2fb327
          };
          return _0x4a0ab9;
        }
        scrapeModuleFromPython(_0x259c02, _0x39ac0f) {
          const _0x34dc65 = ['-W', 'ignore', '-B', '-S', '-I', this.serviceProvider.fs().getModulePath().combinePaths('stub-generation', 'scrape_module.py').getFilePath(), _0x259c02];
          const _0x3aa35d = _0x2c165a.execFileSync(_0x39ac0f.getFilePath(), _0x34dc65, {
            encoding: 'utf8',
            stdio: ['ignore', 'pipe', 'ignore'],
            shell: this.shouldUseShellToRunInterpreter(_0x39ac0f.getFilePath()),
            timeout: 10000
          });
          if (!_0x3aa35d) {
            return false;
          }
          return _0x3aa35d;
        }
      }
      exports.PylanceFullAccessHost = _0x2db16f;
      class _0x1d078f {
        constructor(_0x4a80d6) {
          this._serviceProvider = _0x4a80d6;
        }
        createHost(_0x2888c0) {
          return _0x2db16f.createHost(_0x2888c0, this._serviceProvider);
        }
      }
      exports.PylanceFullAccessHostFactory = _0x1d078f;
    },
    30371: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getBundledTypeStubsPath = _0x3fb95d;
      exports.getBundledNativeStubsPath = _0x1294a3;
      exports.getBundledFilesPath = _0xc84e07;
      function _0x3fb95d(_0x3212ee) {
        return _0x183090(_0x3212ee, 'stubs');
      }
      function _0x1294a3(_0x2c714a) {
        return _0x183090(_0x2c714a, 'native-stubs');
      }
      function _0xc84e07(_0x324831) {
        return _0x183090(_0x324831, 'files');
      }
      function _0x183090(_0x5d2244, _0x4f75f6) {
        return _0x5d2244.combinePaths('bundled', _0x4f75f6);
      }
    },
    98920: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getRegionComments = _0x4d59e6;
      const _0x7e1866 = require(56814);
      function _0x4d59e6(_0xd5415) {
        const _0x534a08 = [];
        for (let _0x549f64 = 0; _0x549f64 < _0xd5415.tokenizerOutput.tokens.count; _0x549f64++) {
          const _0x44efc9 = _0xd5415.tokenizerOutput.tokens.getItemAt(_0x549f64);
          if (_0x44efc9.comments) {
            for (const _0x52cb60 of _0x44efc9.comments) {
              const _0x1d9637 = _0x2d7edd(_0x52cb60, _0xd5415);
              if (_0x1d9637 !== undefined) {
                _0x534a08.push({
                  type: _0x1d9637,
                  comment: _0x52cb60
                });
              }
            }
          }
        }
        return _0x534a08;
      }
      const _0x270631 = /^\s*region\b/;
      const _0x2d7bbd = /^\s*endregion\b/;
      function _0x2d7edd(_0x24b230, _0x5ae481) {
        const _0x35b6b8 = _0x24b230.start - 1;
        const _0x3a30b8 = _0x7e1866.convertOffsetToPosition(_0x35b6b8, _0x5ae481.tokenizerOutput.lines);
        if (_0x3a30b8.character !== 0) {
          const _0x572651 = _0x35b6b8 - _0x3a30b8.character;
          const _0x90e131 = _0x5ae481.text.slice(_0x572651, _0x35b6b8);
          if (_0x90e131.trimStart().length > 0) {
            return undefined;
          }
        }
        const _0x1889e1 = _0x270631.exec(_0x24b230.value);
        const _0x2a91aa = _0x2d7bbd.exec(_0x24b230.value);
        if (_0x1889e1) {
          return 0;
        } else {
          if (_0x2a91aa) {
            return 1;
          } else {
            return undefined;
          }
        }
      }
    },
    22180: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RemoteFileSystem = undefined;
      const _0x3d28d3 = require(66643);
      class _0x1cb919 {
        constructor(_0x49a014, _0x2a41f8) {
          this._rootUri = _0x49a014;
          this._syncfs = _0x2a41f8;
          this._invalidPathRegex = [/^.*:\/\/github[^/]*?\/\w+\/$/gm, /^(http|https):\/\/[^/]+\/$/gm];
          this._decoder = new TextDecoder();
        }
        getModulePath() {
          throw new Error('Method not implemented.');
        }
        isMappedUri(_0x1d03ec) {
          return false;
        }
        getOriginalUri(_0x310d56) {
          return _0x310d56;
        }
        getMappedUri(_0x49dae3) {
          return _0x49dae3;
        }
        existsSync(_0x51f94f) {
          try {
            if (this._isUnusableUri(_0x51f94f)) {
              return false;
            }
            const _0x40103e = this._syncfs.statSync(_0x51f94f.toString());
            return _0x40103e.type !== 'unknown';
          } catch {
            return false;
          }
        }
        chdir(_0x200d20) {}
        readdirEntriesSync(_0x85552c) {
          if (this._isUnusableUri(_0x85552c)) {
            return [];
          }
          if (!this.existsSync(_0x85552c)) {
            return [];
          }
          const _0x1ce20d = this._syncfs.readDirectorySync(_0x85552c.toString());
          const _0x227dab = _0x85552c.getPath();
          return _0x1ce20d.map(_0x19e78e => new _0x3d28d3.VirtualDirent(_0x19e78e[0], _0x19e78e[1] === 1, _0x227dab));
        }
        readdirSync(_0x119aee) {
          if (this._isUnusableUri(_0x119aee)) {
            return [];
          }
          if (!this.existsSync(_0x119aee)) {
            return [];
          }
          const _0x370411 = this._syncfs.readDirectorySync(_0x119aee.toString());
          return _0x370411.map(_0x1a00be => _0x1a00be[0]);
        }
        readFileSync(_0x918053, _0x41f3a0) {
          if (this._isUnusableUri(_0x918053)) {
            return '';
          }
          const _0x30029e = this._syncfs.readSync(_0x918053.toString());
          return this._decoder.decode(_0x30029e);
        }
        statSync(_0x502334) {
          if (this._isUnusableUri(_0x502334)) {
            return {
              size: 0,
              mtimeMs: 0,
              isFile: () => false,
              isDirectory: () => false,
              isBlockDevice: () => false,
              isCharacterDevice: () => false,
              isSymbolicLink: () => false,
              isFIFO: () => false,
              isSocket: () => false
            };
          }
          const _0x28869d = this._syncfs.statSync(_0x502334.toString());
          return {
            size: _0x28869d.size,
            mtimeMs: _0x28869d.mtime,
            isFile: () => _0x28869d.type === 'file',
            isDirectory: () => _0x28869d.type === 'directory',
            isBlockDevice: () => false,
            isCharacterDevice: () => false,
            isSymbolicLink: () => false,
            isFIFO: () => false,
            isSocket: () => false
          };
        }
        realpathSync(_0x1acdab) {
          return _0x1acdab;
        }
        getModuleUri() {
          return this._rootUri;
        }
        readFile(_0x4f9b68) {
          throw new Error('Method not implemented.');
        }
        readFileText(_0x1c42b5, _0x24c039) {
          throw new Error('Method not implemented.');
        }
        realCasePath(_0x5da6cf) {
          return _0x5da6cf;
        }
        isMappedFilePath(_0x19e1bb) {
          return false;
        }
        getOriginalFileUri(_0x2e03b6) {
          return _0x2e03b6;
        }
        getMappedFileUri(_0x30a612) {
          return _0x30a612;
        }
        isInZip(_0x471eb3) {
          return false;
        }
        _isUnusableUri(_0x168121) {
          return _0x168121.isEmpty() || this._invalidPathRegex.some(_0x5c91ed => _0x5c91ed.test(_0x168121.toString()));
        }
      }
      exports.RemoteFileSystem = _0x1cb919;
    },
    3777: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LimitedSettingTransformer = exports.ISettingTransformer = undefined;
      exports.applyLimitedSettings = _0x1e4c56;
      const _0x2b54bb = require(65880);
      const _0x17b21d = require(27113);
      const _0x58462c = require(30741);
      const _0x149898 = require(44657);
      var _0x8dc76e;
      (function (_0x221557) {
        function _0x46a997(_0x458e37) {
          return _0x458e37.transformSettings !== undefined;
        }
        _0x221557.is = _0x46a997;
      })(_0x8dc76e || (exports.ISettingTransformer = _0x8dc76e = {}));
      class _0x12870d {
        transformSettings(_0x6d4242, _0xaab831) {
          if (_0xaab831 === null || _0xaab831 === undefined ? undefined : _0xaab831.kinds.some(_0x447129 => _0x447129 === _0x58462c.WellKnownWorkspaceKinds.Limited)) {
            return _0x1e4c56(_0x6d4242, true);
          }
          if ((_0xaab831 === null || _0xaab831 === undefined ? undefined : _0xaab831.kinds.some(_0x4087fe => _0x4087fe === _0x58462c.WellKnownWorkspaceKinds.Regular)) && _0x17b21d.Uri.isEmpty(_0x6d4242.pythonPath)) {
            return _0x1e4c56(_0x6d4242, true);
          }
          return _0x6d4242;
        }
      }
      exports.LimitedSettingTransformer = _0x12870d;
      function _0x1e4c56(_0xfc7ab3, _0x2ab055 = true) {
        const _0x4884d3 = {
          ..._0xfc7ab3
        };
        _0x4884d3.autoSearchPaths = false;
        _0x4884d3.openFilesOnly = true;
        _0x4884d3.watchForConfigChanges = false;
        _0x4884d3.watchForSourceChanges = false;
        _0x4884d3.watchForLibraryChanges = false;
        if (_0x2ab055) {
          _0x4884d3.typeCheckingMode = 'off';
        }
        _0x4884d3.diagnosticSeverityOverrides = {
          [_0x2b54bb.DiagnosticRule.reportMissingImports]: 'none',
          [_0x2b54bb.DiagnosticRule.reportMissingModuleSource]: 'none'
        };
        _0x4884d3.diagnosticBooleanOverrides = {
          [_0x2b54bb.DiagnosticRule.enableReachabilityAnalysis]: false
        };
        _0x4884d3.enableExtractCodeAction = false;
        _0x4884d3.callArgumentNameInlayHints = _0x149898.CallArgumentNameModes.off;
        _0x4884d3.variableInlayTypeHints = false;
        _0x4884d3.pytestParametersInlayTypeHints = false;
        _0x4884d3.functionReturnInlayTypeHints = false;
        _0x4884d3.aiCodeActions = {};
        return _0x4884d3;
      }
    },
    49137: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SpecialFoldersKind = undefined;
      exports.getSpecialFolder = _0x16b2cf;
      const _0x1a50c9 = require(48281);
      var _0x328241;
      (function (_0x2b1a29) {
        _0x2b1a29[_0x2b1a29.GlobalIndices = 0] = 'GlobalIndices';
        _0x2b1a29[_0x2b1a29.LocalIndices = 1] = 'LocalIndices';
      })(_0x328241 || (exports.SpecialFoldersKind = _0x328241 = {}));
      function _0x16b2cf(_0x47ba1f, _0x112548) {
        const _0x4bd183 = _0x498b9f(_0x47ba1f);
        const _0x57dc96 = _0x43c435.get(_0x112548);
        _0x1a50c9.assertDefined(_0x57dc96, `Unknown SpecialFoldersKind: ${_0x112548}`);
        return _0x4bd183.resolvePaths(_0x57dc96);
      }
      const _0x43c435 = new Map([[_0x328241.GlobalIndices, 'global_indices'], [_0x328241.LocalIndices, 'local_indices']]);
      function _0x498b9f(_0x389bcd) {
        return _0x389bcd.getModulePath().combinePaths('.cache');
      }
    },
    62470: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.StopWatch = undefined;
      class _0x537299 {
        constructor() {
          this._started = new Date().getTime();
        }
        get elapsedTime() {
          return new Date().getTime() - this._started;
        }
        reset() {
          this._started = new Date().getTime();
        }
      }
      exports.StopWatch = _0x537299;
    },
    69482: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CompletionCoverage = exports.StubTelemetry = exports.TelemetryService = exports.TelemetryInterface = exports.TelemetryEvent = exports.TelemetryEventName = exports.TelemetryWaitTimeSeconds = undefined;
      exports.formatEventName = _0x3982e5;
      exports.redactError = _0x357faa;
      exports.sendExceptionTelemetry = _0x1f3691;
      exports.addMapToEvent = _0x2c8b79;
      exports.addModuleInfoToEvent = _0x111649;
      exports.hashModuleNamesAndAddToEvent = _0x239e8a;
      exports.hashString = _0x8202ff;
      exports.getExceptionMessage = _0x9c926e;
      exports.exceptionToString = _0x3c317f;
      exports.trackPerf = _0x106706;
      exports.test_getAskingUsersPerformanceReporting = _0x555b3f;
      exports.test_forceAskingUsersPerformanceReporting = _0x491417;
      exports.createTelemetryCorrelationId = _0x3e3286;
      exports.lspRequestTelemetry = _0x5f2723;
      exports.lspCompletionRequestTelemetry = _0x2c19a3;
      exports.lspHoverRequestTelemetry = _0x13a3e3;
      exports.lspCodeActionRequestTelemetry = _0x1c9da7;
      exports.lspExecuteCommandRequestTelemetry = _0x2b9bed;
      const _0x8db3ad = require(42073);
      const _0x3fba07 = require(56911);
      const _0x3e861d = require(34455);
      const _0x10b332 = require(48281);
      const _0x556ee9 = require(71745);
      const _0x3e8237 = require(71582);
      const _0x7e5b3d = require(27130);
      const _0x1e14d = require(15986);
      const _0x133857 = require(99504);
      const _0x3efceb = require(95756);
      const _0x296bc6 = require(585);
      const _0x24ac13 = require(30048);
      const _0x22ee3e = 300000;
      const _0x27fc4e = 'language_server/';
      exports.TelemetryWaitTimeSeconds = 600;
      var _0x2aea15;
      (function (_0x52638) {
        _0x52638.SERVER_SIDE_REQUEST = 'server_side_request';
        _0x52638.ANALYSIS_COMPLETE = 'analysis_complete';
        _0x52638.ANALYSIS_EXCEPTION = 'analysis_exception';
        _0x52638.INTELLICODE_COMPLETION_ITEM_SELECTED = 'intellicode_completion_item_selected';
        _0x52638.INTELLICODE_MODEL_LOAD_FAILED = 'intellicode_model_load_failed';
        _0x52638.INTELLICODE_ONNX_LOAD_FAILED = 'intellicode_onnx_load_failed';
        _0x52638.COMPLETION_ACCEPTED = 'completion_accepted';
        _0x52638.COMPLETION_COVERAGE = 'completion_coverage';
        _0x52638.SETTINGS = 'settings';
        _0x52638.WORKSPACEINDEX_THRESHOLD_REACHED = 'workspaceindex_threshold_reached';
        _0x52638.FIX_ALL = 'fix_all';
        _0x52638.RENAME_FILES = 'rename_files';
        _0x52638.EXECUTE_COMMAND = 'execute_command';
        _0x52638.INDEX_SLOW = 'index_slow';
        _0x52638.HOVER_SLOW = 'hover_slow';
        _0x52638.COMPLETION_SLOW = 'completion_slow';
        _0x52638.FORMATONTYPE_SLOW = 'formatontype_slow';
        _0x52638.SEMANTICTOKENS_SLOW = 'semantictokens_slow';
        _0x52638.INLAYHINTS_SLOW = 'inlayhints_slow';
        _0x52638.WORKSPACEINDEX_SLOW = 'workspaceindex_slow';
        _0x52638.RESOLVE_INLAYHINTS_SLOW = 'resolve_inlayhints_slow';
        _0x52638.IMPORT_METRICS = 'import_metrics';
        _0x52638.STARTUP_METRICS = 'startup_metrics';
        _0x52638.COMPLETION_METRICS = 'completion_metrics';
        _0x52638.GOTODEF_INSIDE_STRING = 'goto_def_inside_string';
        _0x52638.INSTALLED_PACKAGES = 'installed_packages';
      })(_0x2aea15 || (exports.TelemetryEventName = _0x2aea15 = {}));
      const _0x286cca = new Set([_0x3982e5(_0x2aea15.IMPORT_METRICS), _0x3982e5(_0x2aea15.STARTUP_METRICS), _0x3982e5(_0x2aea15.COMPLETION_METRICS), _0x3982e5(_0x2aea15.GOTODEF_INSIDE_STRING), _0x3982e5(_0x2aea15.INSTALLED_PACKAGES)]);
      function _0x3982e5(_0x3c128e) {
        return `${_0x27fc4e}${_0x3c128e}`;
      }
      function _0x357faa(_0x403268) {
        if (_0x403268) {
          const _0x4bc04a = _0x10b332.getSerializableError(_0x403268);
          if (_0x4bc04a?.stack) {
            const _0x413f59 = /\s+at\s+(.*)\s+\(.*(pyright\.bundle\.js:\d+:\d+|server\.bundle\.js:\d+:\d+).*\)/g;
            _0x4bc04a.stack = _0x4bc04a.stack.replace(_0x413f59, ' at $1 ($2)');
          }
          if (_0x4bc04a?.message) {
            const _0x40c849 = /open\s+'(.*[/|\\])(.*)[/|\\](.*?\.wasm)/g;
            _0x4bc04a.message = _0x4bc04a.message.replace(_0x40c849, 'open \'$2.$3');
          }
          return _0x4bc04a;
        }
        return undefined;
      }
      class _0x74cd3 {
        constructor(_0x494038, _0x3a2e68) {
          this.Properties = {
            lsVersion: _0x133857.VERSION
          };
          this.Measurements = {};
          this.EventName = _0x3982e5(_0x494038);
          this.Exception = _0x357faa(_0x3a2e68);
        }
        clone() {
          const _0x49b646 = new _0x74cd3(this.EventName.substr(_0x27fc4e.length), this.Exception);
          for (const _0x1e15fb in this.Properties) {
            _0x49b646.Properties[_0x1e15fb] = this.Properties[_0x1e15fb];
          }
          for (const _0x4c976e in this.Measurements) {
            _0x49b646.Measurements[_0x4c976e] = this.Measurements[_0x4c976e];
          }
          return _0x49b646;
        }
      }
      exports.TelemetryEvent = _0x74cd3;
      var _0x3a8057;
      (function (_0x483732) {
        function _0x44dbe3(_0x49adba) {
          return _0x49adba && _0x49adba.sendTelemetry !== undefined;
        }
        _0x483732.is = _0x44dbe3;
      })(_0x3a8057 || (exports.TelemetryInterface = _0x3a8057 = {}));
      class _0x47eb00 {
        constructor(_0x1ba163) {
          this._lspTelemetryThrottler = new _0x296bc6.LspTelemetryThrottler();
          this._pendingProperties = new Map();
          this._extraTelemetryEnabled = false;
          _0x10b332.assert(_0x1ba163 !== undefined);
          this._connection = _0x1ba163;
          _0x10b332.assert(this._connection !== undefined);
        }
        sendTelemetry(_0x9ded4d) {
          try {
            if (this._pendingProperties.has(_0x9ded4d.EventName)) {
              const _0x57594b = this._pendingProperties.get(_0x9ded4d.EventName);
              for (const [_0x300b95, _0x56cf48] of _0x57594b) {
                _0x9ded4d.Properties[_0x300b95] = _0x56cf48;
              }
              this._pendingProperties.delete(_0x9ded4d.EventName);
            }
            this._sendTelemetry(_0x9ded4d);
          } catch {}
        }
        addPropertyToNextEvent(_0x2ae644, _0x1f5bfe, _0x1af56c) {
          const _0x57fb34 = _0x3982e5(_0x2ae644);
          let _0x3528d6 = this._pendingProperties.get(_0x57fb34);
          if (!_0x3528d6) {
            _0x3528d6 = new Map();
            this._pendingProperties.set(_0x57fb34, _0x3528d6);
          }
          _0x3528d6.set(_0x1f5bfe, _0x1af56c);
        }
        sendLspRequestTelemetry(_0x3a4b22, _0x31d27b, _0x147eb5, _0x978c3e) {
          return this._lspTelemetryThrottler.maybeSendTelemetry(_0x3a4b22, _0x31d27b, () => true, (_0x38928d, _0xdc2877) => {
            const _0xd231cc = new _0x74cd3(_0x2aea15.SERVER_SIDE_REQUEST);
            for (const _0x34ca67 in _0x38928d) {
              _0xd231cc.Measurements[_0x34ca67] = _0x38928d[_0x34ca67];
            }
            for (const _0x44371b in _0xdc2877) {
              _0xd231cc.Properties[_0x44371b] = _0xdc2877[_0x44371b];
            }
            this.sendTelemetry(_0xd231cc);
          }, _0x147eb5, _0x978c3e);
        }
        enableExtra(_0x55d572) {
          this._extraTelemetryEnabled = _0x55d572;
        }
        _sendTelemetry(_0x1508c9) {
          var _0x3234cf;
          const _0x527fae = _0x286cca.has(_0x1508c9.EventName);
          if (_0x527fae && !this._extraTelemetryEnabled) {
            return;
          }
          if ((_0x3234cf = this._connection) === null || _0x3234cf === undefined) {
            undefined;
          } else {
            _0x3234cf.telemetry.logEvent(_0x1508c9);
          }
        }
      }
      exports.TelemetryService = _0x47eb00;
      function _0x1f3691(_0x50a22d, _0x1cf1b5, _0x87bad2) {
        if (_0x50a22d === null || _0x50a22d === undefined) {
          undefined;
        } else {
          _0x50a22d.sendTelemetry(new _0x74cd3(_0x1cf1b5, _0x87bad2));
        }
      }
      function _0x2c8b79(_0x3f0a9d, _0x353e53) {
        for (const [_0x588a7e, _0x19d9a7] of Object.entries(_0x353e53)) {
          if (_0x3e861d.isNumber(_0x19d9a7)) {
            const _0x56daa1 = _0x3f0a9d.Measurements[_0x588a7e] || 0;
            _0x3f0a9d.Measurements[_0x588a7e] = _0x56daa1 + _0x19d9a7;
          } else {
            if (_0x3e861d.isString(_0x19d9a7)) {
              _0x3f0a9d.Properties[_0x588a7e] = _0x19d9a7;
            }
          }
        }
        return _0x3f0a9d;
      }
      var _0x204eb;
      (function (_0x4f92b1) {
        let _0x155cd7;
        const _0x470f47 = 2000;
        function _0x4ec7cd(_0x33f39e, _0x5f0803, _0x10b3b8) {
          if ((_0x5f0803 === null || _0x5f0803 === undefined ? undefined : _0x5f0803.items.length) === 0 && _0x10b3b8?.lastKnownModule && _0x10b3b8.lastKnownModule.length > 0) {
            const _0x5b6803 = new _0x74cd3(_0x2aea15.COMPLETION_METRICS);
            _0x111649(_0x5b6803, _0x10b3b8);
            if (_0x155cd7) {
              clearTimeout(_0x155cd7);
            }
            _0x155cd7 = setTimeout(() => {
              _0x33f39e.sendTelemetry(_0x5b6803);
            }, _0x470f47);
          }
        }
        _0x4f92b1.sendStubCompletionTelemetryForMissingTypes = _0x4ec7cd;
      })(_0x204eb || (exports.StubTelemetry = _0x204eb = {}));
      function _0x111649(_0x9cde66, _0x4fc350) {
        for (const [_0x5b8e53, _0x5f2923] of Object.entries(_0x4fc350)) {
          if (_0x3e861d.isString(_0x5f2923)) {
            const _0x44ff45 = _0x5f2923.toLowerCase();
            if (_0x44ff45) {
              _0x9cde66.Properties[_0x5b8e53 + 'Hash'] = _0x8202ff(_0x44ff45);
            }
          }
        }
        if (_0x4fc350.lastKnownModule) {
          const _0x1d3b80 = _0x4fc350.lastKnownModule.split('.')[0].toLowerCase();
          if (_0x1d3b80) {
            _0x9cde66.Properties.packageHash = _0x8202ff(_0x1d3b80);
          }
        }
      }
      function _0x239e8a(_0x589c8a, _0x3613aa, _0x55da1c, _0x45bf8c = false) {
        const _0x20ea40 = _0x55da1c.map(_0x2dd914 => _0x8202ff(_0x2dd914)).join(' ');
        _0x589c8a.Properties[_0x3613aa + 'Modules'] = _0x20ea40;
        const _0x1c5d89 = new Set(_0x55da1c.map(_0x2a2752 => _0x2a2752.split('.')[0]));
        _0x589c8a.Properties[_0x3613aa + 'Packages'] = [..._0x1c5d89.values()].map(_0x2e6636 => _0x8202ff(_0x2e6636)).join(' ');
        if (_0x45bf8c) {
          _0x589c8a.Properties[_0x3613aa + 'PackagesLowerCase'] = [..._0x1c5d89.values()].map(_0x18da10 => _0x8202ff(_0x18da10.toLowerCase())).join(' ');
        }
      }
      function _0x8202ff(_0x274625) {
        return _0x3efceb.sha256(_0x274625);
      }
      function _0x9c926e(_0x1e107d) {
        let _0x1e734e = _0x3c317f(_0x1e107d);
        if (_0x1e107d.code) {
          _0x1e734e += `, Error code: ${_0x1e107d.code}`;
        }
        return _0x1e734e;
      }
      function _0x3c317f(_0x3e16d7) {
        return (_0x3e16d7.stack ? _0x3e16d7.stack.toString() : undefined) || (typeof _0x3e16d7.message === 'string' ? _0x3e16d7.message : undefined) || JSON.stringify(_0x3e16d7);
      }
      var _0x25de60;
      (function (_0x4f57e9) {
        let _0x27627c;
        (function (_0x3b2263) {
          _0x3b2263.Successes = 'successes';
          _0x3b2263.Failures = 'failures';
          _0x3b2263.Total = 'total';
          _0x3b2263.OverallSuccesses = 'overallSuccesses';
          _0x3b2263.OverallFailures = 'overallFailures';
          _0x3b2263.OverallTotal = 'overallTotal';
        })(_0x27627c ||= {});
        class _0x2b0ddb {
          constructor(_0x64b1b8) {
            this._service = _0x64b1b8;
            this._event = new _0x74cd3(_0x2aea15.COMPLETION_COVERAGE);
            this._initStats(this._event);
          }
          update(_0x36a0ba, _0x5d9191) {
            if (!_0x5d9191) {
              return;
            }
            if (!(_0x36a0ba === null || _0x36a0ba === undefined ? undefined : _0x36a0ba.items.length)) {
              this._event.Measurements[_0x27627c.Failures] += 1;
            } else {
              this._event.Measurements[_0x27627c.Successes] += 1;
            }
            this._event.Measurements[_0x27627c.Total] += 1;
            if (this._timer) {
              return;
            }
            this._timer = setTimeout(() => {
              this._event.Measurements[_0x27627c.OverallSuccesses] += this._event.Measurements[_0x27627c.Successes];
              this._event.Measurements[_0x27627c.OverallFailures] += this._event.Measurements[_0x27627c.Failures];
              this._event.Measurements[_0x27627c.OverallTotal] += this._event.Measurements[_0x27627c.Total];
              this._service.sendTelemetry(this._event);
              this._event.Measurements[_0x27627c.Successes] = 0;
              this._event.Measurements[_0x27627c.Failures] = 0;
              this._event.Measurements[_0x27627c.Total] = 0;
              if (this._timer) {
                clearTimeout(this._timer);
                this._timer = undefined;
              }
            }, _0x22ee3e);
          }
          _initStats(_0x2628de) {
            _0x2628de.Measurements[_0x27627c.Successes] = 0;
            _0x2628de.Measurements[_0x27627c.Failures] = 0;
            _0x2628de.Measurements[_0x27627c.Total] = 0;
            _0x2628de.Measurements[_0x27627c.OverallSuccesses] = 0;
            _0x2628de.Measurements[_0x27627c.OverallFailures] = 0;
            _0x2628de.Measurements[_0x27627c.OverallTotal] = 0;
          }
        }
        _0x4f57e9.CompletionTelemetry = _0x2b0ddb;
      })(_0x25de60 || (exports.CompletionCoverage = _0x25de60 = {}));
      function _0x106706(_0x4cd176, _0x41ccb7, _0x5e4b55, _0x2c7996) {
        const _0xa845f1 = _0x3a8057.is(_0x4cd176) ? undefined : _0x4cd176;
        const _0x534f12 = _0x3a8057.is(_0x4cd176) ? _0x4cd176 : _0xa845f1 === null || _0xa845f1 === undefined ? undefined : _0xa845f1.service.serviceProvider.tryGet(_0x24ac13.PylanceServiceKeys.telemetry);
        const _0x42c935 = new _0x3e8237.Duration();
        const _0x1af8fa = _0x3e8237.timingStats.readFileTime.callCount;
        const _0x1282b4 = _0x3e8237.timingStats.tokenizeFileTime.callCount;
        const _0x461806 = _0x3e8237.timingStats.parseFileTime.callCount;
        const _0x3c37f5 = _0x3e8237.timingStats.resolveImportsTime.callCount;
        const _0x4afa67 = _0x3e8237.timingStats.bindTime.callCount;
        const _0xd35d2e = _0x3e8237.timingStats.typeEvaluationTime.callCount;
        const _0x40817e = _0x3e8237.timingStats.readFileTime.totalTime;
        const _0x2515ac = _0x3e8237.timingStats.tokenizeFileTime.totalTime;
        const _0x171842 = _0x3e8237.timingStats.parseFileTime.totalTime;
        const _0x1fea6e = _0x3e8237.timingStats.resolveImportsTime.totalTime;
        const _0x518d55 = _0x3e8237.timingStats.bindTime.totalTime;
        const _0x5cbcea = _0x3e8237.timingStats.typeEvaluationTime.totalTime;
        let _0x1c5cd4;
        let _0x59ab8a;
        const _0x540c58 = {
          setCorrelationId(_0x4ce91c) {
            _0x59ab8a = _0x4ce91c;
          },
          addCustomMeasure(_0x23fead, _0x15444c, _0xec364, _0xa91fb = 'custom_') {
            if (!_0x1c5cd4) {
              _0x1c5cd4 = {};
            }
            if (_0xec364 === undefined || _0x15444c >= _0xec364) {
              _0x1c5cd4[`${_0xa91fb}${_0x23fead}`] = _0x15444c;
            }
          },
          addCustomProperty(_0x25374e, _0x3bc472, _0x30f533 = 'custom_') {
            if (!_0x1c5cd4) {
              _0x1c5cd4 = {};
            }
            _0x1c5cd4[`${_0x30f533}${_0x25374e}`] = _0x3bc472;
          }
        };
        const _0x529fea = _0x5e4b55(_0x540c58);
        if (_0x3e861d.isThenable(_0x529fea)) {
          return _0x529fea.then(_0x2dd0f3 => {
            _0x4b4cc9();
            return _0x2dd0f3;
          });
        }
        _0x4b4cc9();
        return _0x529fea;
        function _0x4b4cc9() {
          const _0x43f073 = _0x42c935.getDurationInMilliseconds();
          if (_0x43f073 <= _0x2c7996) {
            return;
          }
          const _0x35fe86 = new _0x74cd3(_0x41ccb7);
          if (_0x1c5cd4) {
            _0x2c8b79(_0x35fe86, _0x1c5cd4);
          }
          _0x35fe86.Measurements.readFileCallCount = _0x3e8237.timingStats.readFileTime.callCount - _0x1af8fa;
          _0x35fe86.Measurements.tokenizeCallCount = _0x3e8237.timingStats.tokenizeFileTime.callCount - _0x1282b4;
          _0x35fe86.Measurements.parseCallCount = _0x3e8237.timingStats.parseFileTime.callCount - _0x461806;
          _0x35fe86.Measurements.resolveCallCount = _0x3e8237.timingStats.resolveImportsTime.callCount - _0x3c37f5;
          _0x35fe86.Measurements.bindCallCount = _0x3e8237.timingStats.bindTime.callCount - _0x4afa67;
          _0x35fe86.Measurements.typeEvalCount = _0x3e8237.timingStats.typeEvaluationTime.callCount - _0xd35d2e;
          _0x35fe86.Measurements.readFileTime = _0x3e8237.timingStats.readFileTime.totalTime - _0x40817e;
          _0x35fe86.Measurements.tokenizeTime = _0x3e8237.timingStats.tokenizeFileTime.totalTime - _0x2515ac;
          _0x35fe86.Measurements.parseTime = _0x3e8237.timingStats.parseFileTime.totalTime - _0x171842;
          _0x35fe86.Measurements.resolveTime = _0x3e8237.timingStats.resolveImportsTime.totalTime - _0x1fea6e;
          _0x35fe86.Measurements.bindTime = _0x3e8237.timingStats.bindTime.totalTime - _0x518d55;
          _0x35fe86.Measurements.typeEvalTime = _0x3e8237.timingStats.typeEvaluationTime.totalTime - _0x5cbcea;
          _0x35fe86.Measurements.totalTime = _0x43f073;
          if (_0x59ab8a) {
            _0x35fe86.Properties.correlationId = _0x59ab8a;
          }
          if (_0x534f12 === null || _0x534f12 === undefined) {
            undefined;
          } else {
            _0x534f12.sendTelemetry(_0x35fe86);
          }
          _0x2a2638(_0xa845f1, _0x2c7996, _0x35fe86.Measurements);
        }
      }
      function _0x555b3f() {
        return _0x23a519;
      }
      function _0x491417() {
        _0x23a519 = undefined;
      }
      let _0x23a519 = true;
      function _0x2a2638(_0x16fdbc, _0x2bd13d, _0x29346c) {
        var _0x26a3ec;
        if (!_0x16fdbc) {
          return;
        }
        if (_0x23a519 === false) {
          return;
        }
        if (_0x23a519 && _0x27163d(_0x29346c)) {
          return;
        }
        const _0x119eb2 = _0x16fdbc.service.serviceProvider;
        const _0x2517e0 = _0x119eb2.tryGet(_0x556ee9.ServiceKeys.windowService);
        const _0x163c1e = _0x119eb2.tryGet(_0x556ee9.ServiceKeys.commandService);
        if (!_0x16fdbc.allowAskingUsersPerformanceReporting || !_0x2517e0 || !_0x163c1e) {
          if ((_0x26a3ec = _0x119eb2.tryGet(_0x556ee9.ServiceKeys.console)) === null || _0x26a3ec === undefined) {
            undefined;
          } else {
            _0x26a3ec.info(_0x1e14d.Localizer.PerformanceTracking.title());
          }
          return;
        }
        _0x23a519 = false;
        const _0x239020 = {
          title: _0x1e14d.Localizer.PerformanceTracking.button(),
          id: _0x7e5b3d.ClientCommands.reportIssue
        };
        _0x2517e0.showInformationMessage(_0x1e14d.Localizer.PerformanceTracking.title(), _0x239020).then(_0x595bb0 => {
          if (_0x595bb0 && _0x595bb0.id === _0x239020.id) {
            _0x163c1e.sendCommand(_0x7e5b3d.ClientCommands.reportIssue, 'perf_autoDetect');
          }
        });
        function _0x27163d(_0x7ff1f1) {
          const _0x17d9d3 = 5;
          return _0x7ff1f1.typeEvalTime < _0x2bd13d * _0x17d9d3 || _0x7ff1f1.readFileTime + _0x7ff1f1.tokenizeTime + _0x7ff1f1.parseTime + _0x7ff1f1.resolveTime + _0x7ff1f1.bindTime >= 500;
        }
      }
      function _0x3e3286() {
        return _0x8db3ad.v4();
      }
      function _0x5f2723(_0x210a0e, _0x939683, _0x4ccd1c) {
        return function (_0x58e6bc, _0x1d5195, _0x2d45b7) {
          const _0x6b12fa = _0x2d45b7.value;
          _0x2d45b7.value = function (..._0x5046aa) {
            return this._telemetry.sendLspRequestTelemetry(_0x210a0e, () => _0x6b12fa.apply(this, _0x5046aa), _0x939683, _0x4ccd1c);
          };
          return _0x2d45b7;
        };
      }
      function _0x2c19a3() {
        return _0x5f2723('textDocument/completion', (_0x95f9bc, _0x498769) => {
          if (!_0x498769) {
            return {
              resultLength: 0
            };
          }
          const _0x1465b7 = Array.isArray(_0x498769) ? _0x498769.length : _0x498769.items.length;
          return {
            resultLength: _0x1465b7
          };
        }, (_0x22e040, _0x150902) => {
          if (!_0x150902) {
            return {};
          }
          const _0xef853e = Array.isArray(_0x150902) ? _0x150902 : _0x150902?.items || [];
          const _0x4116c2 = _0xef853e[0]?.data?.moduleHash;
          const _0x24192a = _0xef853e[0]?.data?.moduleVersion;
          if (!_0x4116c2) {
            return {};
          }
          return {
            moduleHash: _0x4116c2,
            moduleVersion: _0x24192a || '0'
          };
        });
      }
      function _0x13a3e3() {
        return _0x5f2723('textDocument/hover', undefined, (_0x7cfb18, _0x36af1f) => {
          if (!_0x36af1f) {
            return {};
          }
          let _0x379db8;
          let _0x54850a;
          const _0x46441a = _0x3e861d.isArray(_0x36af1f.contents) ? _0x36af1f.contents : [_0x36af1f.contents];
          _0x46441a.forEach(_0x801ba1 => {
            const _0x77e19 = _0x801ba1;
            const _0x22f82d = typeof _0x77e19.value === 'string' ? _0x77e19.value.toString() : _0x77e19.toString();
            if (_0x22f82d && _0x22f82d.includes('<!--moduleHash:') && !_0x379db8) {
              _0x379db8 = _0x22f82d.match(/<!--moduleHash:(.+)-->/m)?.[1];
            }
            if (_0x22f82d && _0x22f82d.includes('<!--moduleVersion:') && !_0x54850a) {
              _0x54850a = _0x22f82d.match(/<!--moduleVersion:(.+)-->/m)?.[1];
            }
          });
          if (!_0x379db8) {
            return {};
          }
          return {
            moduleHash: parseInt(_0x379db8, 10),
            moduleVersion: _0x54850a || '0'
          };
        });
      }
      function _0x1c9da7() {
        return _0x5f2723('textDocument/codeAction', undefined, (_0x18c7ee, _0x4ff76b) => {
          if (!_0x4ff76b) {
            return {};
          }
          const _0x35f746 = _0x4ff76b.map(_0x543ac6 => {
            if (_0x3fba07.Command.is(_0x543ac6)) {
              return `[c:${_0x543ac6.command}]`;
            } else {
              return `[a:${_0x543ac6.command?.command ?? _0x543ac6.title}]`;
            }
          });
          return {
            actions: _0x35f746.join(', ')
          };
        });
      }
      function _0x2b9bed() {
        return function (_0x6b9ad0, _0x372d54, _0x4efe00) {
          const _0x1fa042 = _0x4efe00.value;
          _0x4efe00.value = function (..._0x410312) {
            return this._telemetry.sendLspRequestTelemetry('workspace/executeCommand', () => _0x1fa042.apply(this, _0x410312), undefined, () => {
              return {
                command: _0x410312[0].command
              };
            });
          };
          return _0x4efe00;
        };
      }
    },
    61904: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.isOptional = _0x3a6ae9;
      exports.isUnion = _0x3f7f9b;
      exports.lookUpClassMembers = _0x25b1a9;
      exports.getFunctionParameterNode = _0x23c48e;
      exports.getParameterAnnotationNode = _0x1c786e;
      const _0xe33e6d = require(21024);
      const _0x67901b = require(92324);
      function _0x3a6ae9(_0x19d137) {
        if (_0x67901b.isOptionalType(_0x19d137)) {
          return true;
        }
        return _0xe33e6d.isClass(_0x19d137) && _0x19d137.shared.moduleName === 'typing' && _0x19d137.shared.name === 'Optional';
      }
      function _0x3f7f9b(_0x2f3efe) {
        if (_0xe33e6d.isUnion(_0x2f3efe)) {
          return true;
        }
        return _0xe33e6d.isClass(_0x2f3efe) && _0x2f3efe.shared.moduleName === 'typing' && _0x2f3efe.shared.name === 'Union';
      }
      function* _0x25b1a9(_0xd1142e, _0xdcdf68, _0x5f0d06 = 0, _0x4bdd81) {
        const _0x47edff = _0xd1142e.shared.effectiveMetaclass;
        if (_0x47edff && _0xe33e6d.isClass(_0x47edff) && !_0xe33e6d.ClassType.isBuiltIn(_0x47edff, 'type')) {
          for (const _0x1e0c22 of _0x67901b.getClassMemberIterator(_0x47edff, _0xdcdf68, 32)) {
            if (_0x1e0c22 && !_0xe33e6d.isAnyOrUnknown(_0x1e0c22.classType)) {
              _0x1e0c22.isClassMember = true;
              yield _0x1e0c22;
            }
          }
        }
        for (const _0x3dc60d of _0x67901b.getClassMemberIterator(_0xd1142e, _0xdcdf68, _0x5f0d06, _0x4bdd81)) {
          yield _0x3dc60d;
        }
        return undefined;
      }
      function _0x23c48e(_0x3e988b, _0x169088) {
        return _0x3e988b.d.params.find(_0x14943f => {
          var _0x39a0ed;
          return ((_0x39a0ed = _0x14943f.d.name) === null || _0x39a0ed === undefined ? undefined : _0x39a0ed.d.value) === _0x169088;
        });
      }
      function _0x1c786e(_0x5e1028) {
        var _0x194524;
        if ((_0x194524 = _0x5e1028.d.annotation) !== null && _0x194524 !== undefined) {
          return _0x194524;
        } else {
          return _0x5e1028.d.annotationComment;
        }
      }
    },
    77001: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.UriMap = undefined;
      class _0x1b91ca {
        constructor() {
          this._keys = new Map();
          this._values = new Map();
        }
        get size() {
          return this._values.size;
        }
        get [Symbol.toStringTag]() {
          return '';
        }
        clear() {
          this._keys.clear();
          this._values.clear();
        }
        forEach(_0x3eb00d, _0x24973f) {
          this._keys.forEach((_0x24db19, _0x4fbab1) => {
            _0x3eb00d(this._values.get(_0x4fbab1), _0x24db19, this);
          });
        }
        values() {
          return this._values.values();
        }
        [Symbol.iterator]() {
          return this.entries();
        }
        get(_0x2add7b) {
          if (_0x2add7b) {
            return this._values.get(_0x2add7b.key);
          } else {
            return undefined;
          }
        }
        set(_0x5282ca, _0x4a5881) {
          if (_0x5282ca) {
            this._keys.set(_0x5282ca.key, _0x5282ca);
            this._values.set(_0x5282ca.key, _0x4a5881);
          }
          return this;
        }
        has(_0xf3f5cb) {
          return this._values.has(_0xf3f5cb.key);
        }
        delete(_0x208497) {
          this._keys.delete(_0x208497.key);
          return this._values.delete(_0x208497.key);
        }
        entries() {
          const _0x3b6c70 = this._keys.entries();
          const _0x44e771 = this._values.entries();
          return new class {
            [Symbol.iterator]() {
              return this;
            }
            next(..._0x58bef6) {
              const _0x12a6db = _0x3b6c70.next();
              const _0x5c1b1d = _0x44e771.next();
              if (_0x12a6db.done || _0x5c1b1d.done) {
                return {
                  done: true,
                  value: undefined
                };
              }
              return {
                done: false,
                value: [_0x12a6db.value[1], _0x5c1b1d.value[1]]
              };
            }
          }();
        }
        keys() {
          return this._keys.values();
        }
      }
      exports.UriMap = _0x1b91ca;
    },
    95349: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CustomLSP = undefined;
      const _0xc57b4f = require(8067);
      var _0x48c168;
      (function (_0x299614) {
        let _0x5bd141;
        (function (_0x47599e) {
          _0x47599e.Initialization = 'initialization';
          _0x47599e.DidOpenDocument = 'didopendocument';
          _0x47599e.DidChangeDocument = 'didchangedocument';
          _0x47599e.DidOpenNotebookDocument = 'didopennotebookdocument';
          _0x47599e.DidChangeNotebookDocument = 'didchangenotebookdocument';
          _0x47599e.IndexingDone = 'indexingdone';
          _0x47599e.WorkspaceIndexingDone = 'workspaceindexingdone';
        })(_0x5bd141 = _0x299614.TestSignalKinds ||= {});
        let _0x59a2af;
        (function (_0x69d2a7) {
          _0x69d2a7.InExperiment = 'python/inExperiment';
          _0x69d2a7.GetExperimentValue = 'python/getExperimentValue';
          _0x69d2a7.IsTrustedWorkspace = 'python/isTrustedWorkspace';
          _0x69d2a7.JupyterReferences = 'python/jupyterReferences';
          _0x69d2a7.JupyterDocumentSymbols = 'python/jupyterDocumentSymbols';
          _0x69d2a7.ApplyCursorMovingEdit = 'python/applyCursorMovingEdit';
          _0x69d2a7.ClientShowMessage = 'python/clientShowMessage';
          _0x69d2a7.GetConfigInfo = 'python/getConfigInfo';
          _0x69d2a7.CheckLanguageModel = 'python/checkLanguageModel';
          _0x69d2a7.PromptLanguageModel = 'python/promptLanguageModel';
          _0x69d2a7.AnalyzeFile = 'test/analyzeFile';
          _0x69d2a7.GetWorkspaceConfig = 'test/getWorkspaceConfig';
          _0x69d2a7.GetWorkspaceSettings = 'test/getWorkspaceSettings';
          _0x69d2a7.GetWorkspaceKinds = 'test/getWorkspaceKinds';
          _0x69d2a7.GetWorkspaceInfos = 'test/getWorkspaceInfos';
          _0x69d2a7.GetNotebookData = 'test/getNotebookData';
          _0x69d2a7.GetUserFiles = 'test/getUserFiles';
          _0x69d2a7.GetOpenFiles = 'test/getOpenFiles';
          _0x69d2a7.GetWorkspaceInfo = 'test/getWorkspaceInfo';
          _0x69d2a7.GetFileContent = 'test/getFileContent';
          _0x69d2a7.GetWorkspaceFileContent = 'test/getWorkspaceFileContent';
          _0x69d2a7.RunIndexer = 'test/runIndexer';
          _0x69d2a7.AnalyzeWorkspace = 'test/analyzeWorkspace';
          _0x69d2a7.GetDiagnostics = 'test/getDiagnostics';
          _0x69d2a7.GetUserIndices = 'test/getUserIndices';
          _0x69d2a7.Wait = 'test/wait';
        })(_0x59a2af = _0x299614.Requests ||= {});
        let _0x51937f;
        (function (_0x38d7e6) {
          _0x38d7e6.IsTrustedWorkspace = 'python/isTrustedWorkspaceSync';
        })(_0x51937f = _0x299614.SyncRequests ||= {});
        let _0x1b1768;
        (function (_0x2efec6) {
          _0x2efec6.SetStatusBarMessage = 'python/setStatusBarMessage';
          _0x2efec6.BeginProgress = 'python/beginProgress';
          _0x2efec6.ReportProgress = 'python/reportProgress';
          _0x2efec6.EndProgress = 'python/endProgress';
          _0x2efec6.WorkspaceTrusted = 'python/workspaceTrusted';
          _0x2efec6.ConfigOptionsChanged = 'python/configOptionsChanged';
          _0x2efec6.AskForWait = 'test/askForWait';
          _0x2efec6.TestSignal = 'test/signal';
          _0x2efec6.DidChangeConfiguration = 'workspace/didChangeConfiguration';
          _0x2efec6.DidChangeNotebookDocument = 'notebookDocument/didChange';
          _0x2efec6.CacheDirCreate = 'python/cacheDirCreate';
          _0x2efec6.CacheFileWrite = 'python/cacheFileWrite';
          _0x2efec6.TestAddFile = 'test/addFile';
          _0x2efec6.TestStartServer = 'test/startServer';
          _0x2efec6.TestStartServerResponse = 'test/startServerResponse';
          _0x2efec6.TestLog = 'test/logMessage';
          _0x2efec6.TestPassExtraMessagePort = 'test/passExtraMessagePort';
          _0x2efec6.ExecuteCommand = 'pylance/executeCommand';
          _0x2efec6.AddOrUpdateDistUrl = 'pylance/addOrUpdateDistUrl';
          _0x2efec6.RemoveDistUrl = 'pylance/removeDistUrl';
        })(_0x1b1768 = _0x299614.Notifications ||= {});
        function _0x3ddfd8(_0x33ceba, _0x402c03, _0xa3898b, _0x51ad9c) {
          return _0x33ceba.sendRequest(_0x402c03, _0xa3898b, _0x51ad9c);
        }
        _0x299614.sendRequest = _0x3ddfd8;
        function _0x6f68d1(_0x1f9da2, _0x503c04, _0x4ccba4) {
          const _0x1b0f01 = _0x1f9da2;
          const _0x3c1654 = _0x1b0f01.sendRequest(_0x503c04, new _0xc57b4f.VariableResult('json'));
          if (_0x3c1654.errno !== 0) {
            throw new Error(`Request ${_0x503c04} failed with error ${_0x3c1654.errno}`);
          }
          return _0x3c1654.data;
        }
        _0x299614.sendRequestSync = _0x6f68d1;
        function _0x56d0cb(_0x2cf63b, _0x1983b5, _0x1efe80) {
          _0x2cf63b.sendNotification(_0x1983b5, _0x1efe80);
        }
        _0x299614.sendNotification = _0x56d0cb;
        function _0x5b137b(_0x5855a0, _0x3e9a69, _0x502b9e) {
          return _0x5855a0.onRequest(_0x3e9a69, _0x502b9e);
        }
        _0x299614.onRequest = _0x5b137b;
        function _0x956cfa(_0x5ab83e, _0x13567b, _0x395fa0) {
          return _0x5ab83e.onNotification(_0x13567b, _0x395fa0);
        }
        _0x299614.onNotification = _0x956cfa;
      })(_0x48c168 || (exports.CustomLSP = _0x48c168 = {}));
    },
    28020: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ImportPackageFilterList = undefined;
      exports.ImportPackageFilterList = ['aiohttp', 'aioitertools', 'aiosignal', 'alembic', 'anyio', 'apache-airflow', 'apache-airflow-providers-amazon', 'apispec', 'arrow', 'asgiref', 'asttokens', 'async-timeout', 'attrs', 'autopage', 'awswrangler', 'azure-appconfiguration', 'azure-core', 'azure-cosmos', 'azure-data-tables', 'azure-eventgrid', 'azure-eventhub', 'azure-identity', 'azure-keyvault-certificates', 'azure-keyvault-keys', 'azure-keyvault-secrets', 'azure-mgmt-applicationinsights', 'azure-mgmt-authorization', 'azure-mgmt-batch', 'azure-mgmt-cognitiveservices', 'azure-mgmt-compute', 'azure-mgmt-consumption', 'azure-mgmt-containerinstance', 'azure-mgmt-containerregistry', 'azure-mgmt-containerservice', 'azure-mgmt-core', 'azure-mgmt-cosmosdb', 'azure-mgmt-datafactory', 'azure-mgmt-eventgrid', 'azure-mgmt-eventhub', 'azure-mgmt-imagebuilder', 'azure-mgmt-iothub', 'azure-mgmt-keyvault', 'azure-mgmt-kusto', 'azure-mgmt-media', 'azure-mgmt-monitor', 'azure-mgmt-msi', 'azure-mgmt-netapp', 'azure-mgmt-network', 'azure-mgmt-recoveryservices', 'azure-mgmt-redis', 'azure-mgmt-reservations', 'azure-mgmt-resource', 'azure-mgmt-security', 'azure-mgmt-servicebus', 'azure-mgmt-storage', 'azure-mgmt-subscription', 'azure-mgmt-web', 'azure-servicebus', 'azure-storage-blob', 'azure-storage-queue', 'backoff', 'bcrypt', 'bitarray', 'black', 'boto3-stubs', 'build', 'cachelib', 'cattrs', 'certifi', 'charset-normalizer', 'cheroot', 'ciso8601', 'click', 'cmd2', 'cmdstanpy', 'colorlog', 'constructs', 'contextlib2', 'crashtest', 'cryptography', 'dask', 'dataclasses-json', 'datadog', 'dbt-core', 'ddtrace', 'delta-spark', 'distributed', 'distro', 'django', 'docstring-parser', 'dulwich', 'elasticsearch', 'elastic-transport', 'exceptiongroup', 'faker', 'fastapi', 'fastavro', 'filelock', 'flask', 'Flask-JWT-Extended', 'freezegun', 'frozendict', 'frozenlist', 'ftfy', 'geoip2', 'GitPython', 'google-cloud-bigquery', 'google-cloud-bigtable', 'google-cloud-datastore', 'google-cloud-dlp', 'google-cloud-kms', 'google-cloud-language', 'google-cloud-logging', 'google-cloud-monitoring', 'google-cloud-pubsublite', 'google-cloud-videointelligence', 'google-cloud-vision', 'graphql-core', 'h11', 'hijri-converter', 'hiredis', 'holidays', 'httpcore', 'httpx', 'humanize', 'hyperframe', 'hyperlink', 'hypothesis', 'identify', 'idna', 'imageio', 'importlib-metadata', 'importlib-resources', 'incremental', 'inflect', 'inflection', 'iniconfig', 'ipykernel', 'iso8601', 'isort', 'itsdangerous', 'javaproperties', 'jellyfish', 'jikanpy', 'jinja2', 'jira', 'jupyter-client', 'jupyter-core', 'keyring', 'kiwisolver', 'langcodes', 'libcst', 'loguru', 'makefun', 'markupsafe', 'marshmallow', 'marshmallow-sqlalchemy', 'maxminddb', 'mdit-py-plugins', 'mdurl', 'more-itertools', 'msrest', 'multidict', 'mypy', 'mypy-boto3-rds', 'mypy-boto3-s3', 'natsort', 'nbclient', 'nbformat', 'ninja', 'numpy', 'omegaconf', 'openapi-spec-validator', 'opensearch-py', 'optuna', 'ordered-set', 'orjson', 'overrides', 'packaging', 'parso', 'pathy', 'pendulum', 'phonenumbers', 'pip', 'pip-tools', 'platformdirs', 'poetry', 'portalocker', 'prometheus-client', 'promise', 'prompt-toolkit', 'pure-eval', 'py', 'pyathena', 'pybind11', 'pycryptodome', 'pycryptodomex', 'pydantic', 'pyee', 'PyGithub', 'PyJWT', 'pymongo', 'PyNaCl', 'pyotp', 'pyparsing', 'pypdf2', 'pyproj', 'pyrogram', 'pyrsistent', 'pyspark', 'pytest', 'pytest-asyncio', 'pytest-mock', 'python-dotenv', 'python-gitlab', 'python-magic', 'pytorch-lightning', 'pyzmq', 'qtpy', 'rapidfuzz', 'ray', 'readme-renderer', 'requests-mock', 'resolvelib', 'responses', 'rich', 'rsa', 'rtree', 'rx', 'secretstorage', 'selenium', 'sentry-sdk', 'setproctitle', 'slackclient', 'slack-sdk', 'sniffio', 'soupsieve', 'spacy', 'sphinx', 'stack-data', 'starlette', 'structlog', 'sympy', 'tableauserverclient', 'tenacity', 'termcolor', 'terminado', 'thinc', 'timezonefinder', 'tld', 'tldextract', 'tomli', 'tomlkit', 'torch', 'torchmetrics', 'tornado', 'traitlets', 'twine', 'twisted', 'typeguard', 'typer', 'unidecode', 'uritemplate', 'uvicorn', 'uvloop', 'w3lib', 'wandb', 'websockets', 'werkzeug', 'wsproto', 'xarray', 'xgboost', 'xxhash', 'yarl', 'zeep', 'zict', 'zstandard'];
    },
    65235: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AssignmentWalker = undefined;
      const _0x2e7ffc = require(61032);
      const _0x460dbb = require(38790);
      const _0x147e09 = require(88562);
      const _0x3091ed = require(39619);
      class _0xc56f57 extends _0x2e7ffc.BaseParseTreeWalker {
        constructor(_0x1a6008) {
          super();
          this.scopes = [new _0x147e09.Scope('<module>', 0, null, _0x1a6008, [])];
          this.currentScope = this.scopes[0];
        }
        visitNode(_0x1f849e) {
          this.updateCurrentScope(_0x1f849e);
          return super.visitNode(_0x1f849e);
        }
        visitClass(_0x1eafe9) {
          return this._handleClassOrFunction(_0x1eafe9);
        }
        visitFunction(_0x2a4544) {
          return this._handleClassOrFunction(_0x2a4544);
        }
        visitAssignment(_0x47ce64) {
          if (_0x47ce64.d.leftExpr.nodeType === 38) {
            const _0x31456f = _0x47ce64.d.leftExpr;
            this._handleAssignment(_0x31456f.d.value, _0x31456f.start, _0x47ce64.d.rightExpr);
          }
          return false;
        }
        visitImportFrom(_0x48dea7) {
          var _0x213b1e;
          if (!_0x48dea7.d.module) {
            if (_0x48dea7.d.imports.length > 0) {
              const _0x2ccc07 = (_0x213b1e = _0x48dea7.d.imports[0]) === null || _0x213b1e === undefined ? undefined : _0x213b1e.d.name;
              if (_0x2ccc07 === null || _0x2ccc07 === undefined ? undefined : _0x2ccc07.d.value) {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x2ccc07.d.value, _0x2ccc07.d.value, _0x2ccc07.start + _0x2ccc07.length));
              }
            }
            return false;
          }
          const _0x46ff83 = _0x48dea7.d.module.d.nameParts.map(_0x200e71 => _0x200e71.d.value || '').join('.');
          for (const _0x9d81e1 of _0x48dea7.d.imports) {
            const _0x559136 = _0x9d81e1.d.name;
            const _0x2cdf47 = _0x9d81e1.d.alias;
            if (_0x559136.d.value) {
              if (_0x2cdf47 === null || _0x2cdf47 === undefined ? undefined : _0x2cdf47.d.value) {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x2cdf47.d.value, _0x46ff83 + '.' + _0x559136.d.value, _0x559136.start + _0x559136.length));
              } else {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x559136.d.value, _0x46ff83 + '.' + _0x559136.d.value, _0x559136.start + _0x559136.length));
              }
            } else {
              if (_0x2cdf47 === null || _0x2cdf47 === undefined ? undefined : _0x2cdf47.d.value) {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x2cdf47.d.value, _0x2cdf47.d.value, _0x2cdf47.start + _0x2cdf47.length));
              }
            }
          }
          return false;
        }
        visitImport(_0x3f36f7) {
          for (const _0x463318 of _0x3f36f7.d.list) {
            const _0x10f172 = _0x463318.d.module.d.nameParts;
            if (_0x10f172.length > 0) {
              const _0x332a0d = _0x10f172.map(_0x5a8487 => _0x5a8487.d.value || '').join('.');
              const _0x4a883d = _0x463318.d.alias;
              if (_0x4a883d === null || _0x4a883d === undefined ? undefined : _0x4a883d.d.value) {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x4a883d.d.value, _0x332a0d, _0x10f172[0].start + _0x332a0d.length));
              } else {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x332a0d, _0x332a0d, _0x10f172[0].start + _0x332a0d.length));
              }
            }
          }
          return false;
        }
        visitWith(_0x143af3) {
          for (const _0x576351 of _0x143af3.d.withItems.filter(_0x34a7fd => {
            return _0x34a7fd.d.expr?.nodeType === 9 && _0x34a7fd.d.expr.d.leftExpr.nodeType === 38 && _0x34a7fd.d.target?.nodeType === 38;
          })) {
            const _0x3c642f = _0x576351.d.target;
            const _0x5f3233 = _0x576351.d.expr.d.leftExpr;
            if ((_0x3c642f === null || _0x3c642f === undefined ? undefined : _0x3c642f.d.value) && (_0x5f3233 === null || _0x5f3233 === undefined ? undefined : _0x5f3233.d.value)) {
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x3c642f.d.value, _0x5f3233.d.value, _0x5f3233.start + _0x5f3233.length));
            }
          }
          return false;
        }
        visitFor(_0x277a1f) {
          const _0x24e660 = 'element_inside';
          if (_0x277a1f.d.targetExpr.nodeType !== 38) {
            return false;
          }
          const _0x1dba29 = _0x277a1f.d.targetExpr;
          const _0x53ef0a = _0x1dba29.d.value;
          switch (_0x277a1f.d.iterableExpr.nodeType) {
            case 38:
              {
                const _0x5318a3 = _0x277a1f.d.iterableExpr;
                if (!_0x5318a3.d.value) {
                  break;
                }
                let _0x1f07ed = _0x460dbb.resolveVariable(this.currentScope, _0x5318a3.d.value, _0x5318a3.start);
                if (_0x3091ed.IntelliCodeConstants.UnresolvedType && !_0x1f07ed) {
                  _0x1f07ed = _0x3091ed.IntelliCodeConstants.UnresolvedType;
                }
                if (!_0x1f07ed || !_0x53ef0a) {
                  break;
                }
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x53ef0a, _0x1f07ed + '.' + _0x24e660, _0x1dba29.start + _0x1dba29.length));
              }
              break;
            case 9:
              {
                const _0x1afe26 = _0x277a1f.d.iterableExpr.d.leftExpr;
                if (_0x1afe26.nodeType === 35) {
                  this._handleMemberExpression(_0x53ef0a, _0x1dba29.start, _0x1afe26, _0x24e660);
                }
              }
              break;
            case 35:
              this._handleMemberExpression(_0x53ef0a, _0x1dba29.start, _0x277a1f.d.iterableExpr, _0x24e660);
              break;
          }
          return false;
        }
        visitComprehensionFor(_0x26e9d2) {
          if (_0x26e9d2.d.targetExpr.nodeType !== 38 || _0x26e9d2.d.iterableExpr.nodeType !== 34) {
            return false;
          }
          const _0x2b54fc = _0x26e9d2.d.targetExpr.d.value;
          if (!_0x2b54fc) {
            return false;
          }
          const _0x2d5d1a = _0x26e9d2.d.iterableExpr;
          if (!_0x2d5d1a.d.items || _0x2d5d1a.d.items.length === 0) {
            return false;
          }
          const _0x546c05 = _0x2d5d1a.d.items[0];
          const _0xbe1ebc = _0x3091ed.getStandardVariableType(_0x546c05);
          if (_0xbe1ebc !== _0x3091ed.StandardVariableType.Null) {
            this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x2b54fc, _0xbe1ebc, _0x546c05.start));
          }
          return false;
        }
        _handleAssignment(_0x18e243, _0x29f748, _0x590fa2) {
          switch (_0x590fa2.nodeType) {
            case 9:
              {
                if (_0x590fa2.d.leftExpr.nodeType === 35) {
                  this._handleMemberExpression(_0x18e243, _0x29f748, _0x590fa2.d.leftExpr, '');
                } else {
                  if (_0x590fa2.d.leftExpr.nodeType === 38) {
                    const _0xd236e3 = _0x590fa2.d.leftExpr.d.value;
                    this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0xd236e3, _0x590fa2.d.leftExpr.start + _0x590fa2.d.leftExpr.length));
                  } else {
                    if (_0x590fa2.d.leftExpr) {
                      this._handleAssignment(_0x18e243, _0x29f748, _0x590fa2.d.leftExpr);
                    }
                  }
                }
              }
              break;
            case 40:
              {
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.getStandardVariableTypeNumber(_0x590fa2), _0x29f748));
              }
              break;
            case 49:
            case 48:
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.StandardVariableType.String, _0x29f748));
              break;
            case 38:
              {
                const _0x41951e = _0x460dbb.resolveVariable(this.currentScope, _0x590fa2.d.value, _0x590fa2.start);
                if (_0x41951e && _0x41951e.length > 0) {
                  this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x41951e, _0x29f748));
                }
              }
              break;
            case 52:
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.StandardVariableType.Tuple, _0x29f748));
              break;
            case 18:
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.StandardVariableType.Dictionary, _0x29f748));
              break;
            case 45:
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.StandardVariableType.Set, _0x29f748));
              break;
            case 34:
            case 11:
              this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x18e243, _0x3091ed.StandardVariableType.List, _0x29f748));
              break;
          }
        }
        _handleClassOrFunction(_0x21ef23) {
          this.currentScope = new _0x147e09.Scope(_0x147e09.getScopeQualifiedName(_0x21ef23), _0x21ef23.start, this.currentScope, _0x21ef23);
          this.scopes.push(this.currentScope);
          return true;
        }
        _handleMemberExpression(_0x256b5a, _0x250e7a, _0x1f8c55, _0x99081e) {
          var _0x22e269;
          const _0x4cc02b = (_0x22e269 = _0x1f8c55.d.member) === null || _0x22e269 === undefined ? undefined : _0x22e269.d.value;
          if (!_0x4cc02b || !_0x1f8c55.d.leftExpr) {
            return;
          }
          const _0x579559 = _0x1f8c55.d.leftExpr;
          switch (_0x579559.nodeType) {
            case 38:
              {
                let _0x532804 = _0x579559.d.value;
                if (_0x532804 === 'self') {
                  return;
                }
                const _0x2c1b0b = _0x460dbb.resolveVariable(this.currentScope, _0x532804, _0x1f8c55.d.leftExpr.start);
                _0x532804 = _0x2c1b0b && _0x2c1b0b.length > 0 ? _0x2c1b0b : _0x3091ed.IntelliCodeConstants.IncludeUnresolvedType ? _0x3091ed.IntelliCodeConstants.UnresolvedType : _0x532804;
                const _0x1202fc = _0x532804 === _0x3091ed.IntelliCodeConstants.UnresolvedType ? _0x3091ed.IntelliCodeConstants.UnresolvedType : _0x532804 + '.' + _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b);
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x256b5a, _0x1202fc, _0x579559.start + _0x579559.length));
              }
              break;
            case 48:
            case 49:
              {
                const _0x16f408 = _0x3091ed.StandardVariableType.String + '.' + _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b);
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x256b5a, _0x16f408, _0x579559.start + _0x579559.length));
              }
              break;
            case 40:
              {
                const _0x18f39b = _0x3091ed.getStandardVariableType(_0x579559) + '.' + _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b);
                this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x256b5a, _0x18f39b, _0x579559.start + _0x579559.length));
              }
              break;
            case 9:
              {
                const _0x3d3e3b = _0x579559.d.leftExpr;
                if (_0x3d3e3b.nodeType === 35) {
                  this._handleMemberExpression(_0x256b5a, _0x250e7a, _0x3d3e3b, _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b));
                } else {
                  if (_0x3d3e3b.nodeType === 38) {
                    const _0x558f8b = _0x3d3e3b.d.value + '.' + _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b);
                    this.currentScope.assignments.push(new _0x3091ed.Assignment(_0x256b5a, _0x558f8b, _0x579559.start + _0x579559.length));
                  }
                }
              }
              break;
            case 35:
              this._handleMemberExpression(_0x256b5a, _0x250e7a, _0x579559, _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b));
              break;
            case 27:
              {
                if (_0x579559.d.leftExpr.nodeType === 35) {
                  this._handleMemberExpression(_0x256b5a, _0x250e7a, _0x579559.d.leftExpr, _0x460dbb.resolveFunction(_0x99081e, _0x4cc02b));
                } else {
                  if (_0x579559.d.leftExpr.nodeType === 38) {
                    this._handleAssignment(_0x256b5a, _0x250e7a, _0x579559.d.leftExpr);
                  }
                }
              }
              break;
          }
        }
      }
      exports.AssignmentWalker = _0xc56f57;
    },
    61032: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BaseParseTreeWalker = undefined;
      const _0x130d87 = require(88744);
      const _0x11c4f7 = require(88562);
      class _0x450cef extends _0x130d87.ParseTreeWalker {
        constructor() {
          super(...arguments);
          this.scopes = [];
        }
        makeErrorMessage(_0x24815a) {
          return `IntelliCode AST walker: ${_0x24815a}`;
        }
        updateCurrentScope(_0x587171) {
          const _0xf14185 = _0x11c4f7.getEnclosingScopeForNode(_0x587171);
          if ((_0x587171.nodeType === 31 || _0x587171.nodeType === 10) && this.currentScope.node === _0x587171) {
            return;
          }
          if (this.currentScope.node !== _0xf14185) {
            const _0x7e5e7a = this.scopes.findIndex(_0x5a3cf8 => _0x5a3cf8.node === _0xf14185);
            if (_0x7e5e7a >= 0) {
              this.currentScope = this.scopes[_0x7e5e7a];
            }
          }
        }
      }
      exports.BaseParseTreeWalker = _0x450cef;
    },
    72740: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DeepLearning = undefined;
      const _0x3077a7 = require(25075);
      const _0x4b0fe0 = require(69482);
      const _0x5310f7 = require(35264);
      const _0x3abce2 = require(56238);
      const _0x555886 = 100;
      const _0x1e04ce = {
        recommendations: [],
        invocation: undefined
      };
      class _0x538e00 {
        constructor(_0x5e79cb, _0x31862c, _0x37ab8e, _0x1dbd79) {
          this._model = _0x5e79cb;
          this._platform = _0x31862c;
          this._logger = _0x37ab8e;
          this._telemetry = _0x1dbd79;
        }
        async dispose() {
          if (this._session) {
            await this._session.release();
            this._session = undefined;
          }
        }
        async initialize() {
          var _0xbfb573;
          var _0x209cf2;
          var _0x92cacb;
          var _0x2668b2;
          if (!this._platform.isOnnxSupported()) {
            if ((_0xbfb573 = this._logger) === null || _0xbfb573 === undefined) {
              undefined;
            } else {
              _0xbfb573.log(_0x3077a7.LogLevel.Warn, 'IntelliCode is not supported on this platform.');
            }
            return;
          }
          if (!this._onnx) {
            if ((_0x209cf2 = this._logger) === null || _0x209cf2 === undefined) {
              undefined;
            } else {
              _0x209cf2.log(_0x3077a7.LogLevel.Log, 'Loading ONNX runtime...');
            }
            try {
              this._onnx = require(94763);
              if ((_0x92cacb = this._logger) === null || _0x92cacb === undefined) {
                undefined;
              } else {
                _0x92cacb.log(_0x3077a7.LogLevel.Log, 'Loaded ONNX runtime. Creating IntelliCode session...');
              }
            } catch (_0x32e73b) {
              this._logError('Failed to load ONNX runtime', _0x32e73b);
            }
          }
          if (this._onnx && this._model) {
            try {
              this._session = await this._onnx.InferenceSession.create(this._model.model, {
                logSeverityLevel: this._getOnnxLogLevel()
              });
              if ((_0x2668b2 = this._logger) === null || _0x2668b2 === undefined) {
                undefined;
              } else {
                _0x2668b2.log(_0x3077a7.LogLevel.Log, 'Created IntelliCode session.');
              }
            } catch (_0x43a9b2) {
              this._logError('Failed to create IntelliCode session', _0x43a9b2);
            }
          }
        }
        async getRecommendations(_0x4214dd, _0xf48e66, _0x2c56f5, _0x7c52dd, _0x26dd22) {
          var _0x7edc7a;
          var _0x4c7095;
          var _0x498d1f;
          var _0x202be;
          var _0x39a559;
          if (!this._platform.isOnnxSupported()) {
            return _0x1e04ce;
          }
          const _0x436e83 = new _0x3abce2.EditorLookBackTokenGenerator();
          const _0x1bced5 = _0x436e83.generateLookbackTokens(_0x4214dd, _0xf48e66, _0x2c56f5);
          if (!_0x1bced5) {
            if ((_0x7edc7a = this._logger) === null || _0x7edc7a === undefined) {
              undefined;
            } else {
              _0x7edc7a.log(_0x3077a7.LogLevel.Log, 'IntelliCode: current invocation did not produce any meaningful tokens.');
            }
            return _0x1e04ce;
          }
          if ((_0x4c7095 = this._logger) === null || _0x4c7095 === undefined) {
            undefined;
          } else {
            _0x4c7095.log(_0x3077a7.LogLevel.Log, `
Lookback tokens:
 ${_0x1bced5.lookbackTokens.map(_0x18d9a1 => _0x18d9a1.replace(/\n/g, '\\n')).join(',')}
`);
          }
          const _0x17bf8b = [];
          if (_0x7c52dd.length > 0) {
            try {
              const _0x257afb = await _0x5310f7.IntelliCodeModelService.instance.deepLearningModelInferenceAsync('python', _0x5310f7.DEEP_RERANK_ANALYZER_NAME, _0x1bced5.lookbackTokens, _0x7c52dd);
              if (_0x257afb === null || _0x257afb === undefined) {
                undefined;
              } else {
                _0x257afb.Recommendations.forEach(_0x2bec0d => _0x17bf8b.push(_0x2bec0d));
              }
              if (_0x17bf8b.length > 0) {
                if ((_0x498d1f = this._logger) === null || _0x498d1f === undefined) {
                  undefined;
                } else {
                  _0x498d1f.log(_0x3077a7.LogLevel.Log, `Get recomendations from moderservice succeeded.
                    candidates: ${_0x7c52dd.join(',')}
`);
                }
              }
            } catch (_0x597f1d) {
              if ((_0x202be = this._logger) === null || _0x202be === undefined) {
                undefined;
              } else {
                _0x202be.log(_0x3077a7.LogLevel.Log, `IntelliCode ModelService exception: ${_0x4b0fe0.getExceptionMessage(_0x597f1d)}`);
              }
            }
          }
          if (_0x17bf8b.length === 0 && this._onnx && this._session && this._model) {
            try {
              const _0x7c0a1e = this._convertTokenToId(_0x1bced5.lookbackTokens);
              const _0x4bba85 = new this._onnx.Tensor('int32', _0x7c0a1e, [1, _0x7c0a1e.length]);
              const _0x615e19 = new this._onnx.Tensor('int32', [_0x555886], [1]);
              const _0x58a7aa = {
                ['input_batch:0']: _0x4bba85,
                ['lengths:0']: _0x615e19
              };
              const _0x5a0900 = await this._session.run(_0x58a7aa, ['top_k:1']);
              if (_0x26dd22?.isCancellationRequested) {
                return _0x1e04ce;
              }
              const _0x15c24b = _0x5a0900['top_k:1'];
              if (_0x15c24b) {
                for (const _0x48cf89 of _0x15c24b.data) {
                  const _0x51ea3b = _0x48cf89;
                  if (_0x51ea3b) {
                    _0x17bf8b.push(this._model.tokens[_0x51ea3b]);
                  }
                }
              }
            } catch (_0x578013) {
              if ((_0x39a559 = this._logger) === null || _0x39a559 === undefined) {
                undefined;
              } else {
                _0x39a559.log(_0x3077a7.LogLevel.Error, `IntelliCode exception: ${_0x4b0fe0.getExceptionMessage(_0x578013)}`);
              }
            }
          }
          return {
            recommendations: _0x17bf8b,
            invocation: _0x1bced5
          };
        }
        _convertTokenToId(_0x45afa2) {
          if (!this._model) {
            throw new Error('no model exists');
          }
          const _0x5c0882 = new Array(_0x555886);
          let _0x1b1948 = 0;
          if (_0x45afa2.length < _0x555886) {
            for (; _0x1b1948 < _0x555886 - _0x45afa2.length; _0x1b1948++) {
              _0x5c0882[_0x1b1948] = 0;
            }
          }
          let _0x2312c4 = this._model.tokenIdMap.entries.length;
          const _0xf9f0d4 = new Map();
          for (const _0xfee022 of _0x45afa2) {
            let _0x2b31bf = this._model.tokenIdMap.get(_0xfee022);
            if (_0x2b31bf) {
              _0x5c0882[_0x1b1948++] = _0x2b31bf;
            } else {
              _0x2b31bf = _0xf9f0d4.get(_0xfee022);
              if (_0x2b31bf) {
                _0x5c0882[_0x1b1948++] = _0x2b31bf;
              } else {
                const _0x49698d = _0x2312c4++;
                _0xf9f0d4.set(_0xfee022, _0x49698d);
                _0x5c0882[_0x1b1948++] = _0x49698d;
              }
            }
          }
          return _0x5c0882;
        }
        _getOnnxLogLevel() {
          switch (this._logger?.level) {
            case _0x3077a7.LogLevel.Error:
            case _0x3077a7.LogLevel.Warn:
            case _0x3077a7.LogLevel.Info:
              return 3;
            case _0x3077a7.LogLevel.Log:
              return 0;
          }
          return 1;
        }
        _logError(_0x5e8b5e, _0xe529de) {
          var _0x21e7c9;
          var _0x16eddb;
          if (_0xe529de) {
            if ((_0x21e7c9 = this._logger) === null || _0x21e7c9 === undefined) {
              undefined;
            } else {
              _0x21e7c9.log(_0x3077a7.LogLevel.Error, _0x5e8b5e + '. Exception ' + _0x4b0fe0.getExceptionMessage(_0xe529de));
            }
            _0x4b0fe0.sendExceptionTelemetry(this._telemetry, _0x4b0fe0.TelemetryEventName.INTELLICODE_ONNX_LOAD_FAILED, _0xe529de);
          } else {
            if ((_0x16eddb = this._logger) === null || _0x16eddb === undefined) {
              undefined;
            } else {
              _0x16eddb.log(_0x3077a7.LogLevel.Error, _0x5e8b5e);
            }
          }
        }
      }
      exports.DeepLearning = _0x538e00;
    },
    7448: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ExpressionWalker = undefined;
      const _0x3cde9a = require(61032);
      const _0xe305dd = require(38790);
      const _0x5c85f4 = require(39619);
      class _0x40f383 extends _0x3cde9a.BaseParseTreeWalker {
        constructor(_0x41187f) {
          super();
          this.methodInvokations = [];
          this.methodCount = 0;
          if (_0x41187f.length < 1) {
            throw new Error(this.makeErrorMessage('empty list of scopes.'));
          }
          this.scopes = _0x41187f;
          this.currentScope = this.scopes[0];
        }
        visitNode(_0x5b1bd3) {
          this.updateCurrentScope(_0x5b1bd3);
          return super.visitNode(_0x5b1bd3);
        }
        visitFunction(_0x4e9adf) {
          const _0x48275d = this.scopes.find(_0x50da4d => _0x50da4d.node === _0x4e9adf);
          if (_0x48275d) {
            this.currentScope = _0x48275d;
          }
          return true;
        }
        visitMemberAccess(_0x221d40) {
          var _0x550ae8;
          if ((_0x550ae8 = _0x221d40.d.member) === null || _0x550ae8 === undefined ? undefined : _0x550ae8.d.value) {
            this.methodCount++;
            this._handleMemberExpression(_0x221d40.d.member.d.value, _0x221d40.d.leftExpr);
          }
          return true;
        }
        visitError(_0x61e6e7) {
          if (_0x61e6e7.d.category === 7) {
            switch (_0x61e6e7.d.child?.nodeType) {
              case 35:
              case 38:
              case 9:
              case 27:
              case 49:
              case 48:
              case 40:
              case 34:
              case 18:
              case 45:
              case 52:
                this._handleMemberExpression(undefined, _0x61e6e7.d.child);
                break;
            }
          }
          return true;
        }
        _handleMemberExpression(_0x2d5a70, _0x2c7bc7, _0x49801a) {
          var _0x359c5c;
          var _0x287df2;
          const _0x48cb48 = _0x2c7bc7.start + _0x2c7bc7.length;
          switch (_0x2c7bc7.nodeType) {
            case 38:
              {
                const _0x4f41ad = _0x2c7bc7.d.value;
                if (!_0x4f41ad) {
                  return;
                }
                let _0x968406 = _0xe305dd.resolveVariable(this.currentScope, _0x4f41ad, _0x2c7bc7.start);
                if (_0x968406) {
                  let _0x183032 = _0x48cb48;
                  if (_0x49801a) {
                    _0x968406 = _0x968406 + '.' + _0x49801a;
                    _0x183032 += _0x49801a.length;
                  }
                  this._addMethod(_0x968406, _0x2d5a70, _0x183032);
                } else {
                  if (_0x5c85f4.IntelliCodeConstants.IncludeUnresolvedType) {
                    this._addMethod(_0x5c85f4.IntelliCodeConstants.UnresolvedType, _0x2d5a70, _0x48cb48);
                  }
                }
              }
              break;
            case 9:
              {
                const _0x2577b8 = _0x2c7bc7.d.leftExpr;
                switch (_0x2577b8.nodeType) {
                  case 35:
                    if ((_0x359c5c = _0x2577b8.d.member) === null || _0x359c5c === undefined ? undefined : _0x359c5c.d.value) {
                      this._handleMemberExpression(_0x2d5a70, _0x2577b8.d.leftExpr, _0x49801a ? _0x2577b8.d.member.d.value + '.' + _0x49801a : _0x2577b8.d.member.d.value);
                    }
                    break;
                  case 38:
                    this._handleMemberExpression(_0x2d5a70, _0x2577b8, _0x49801a);
                    break;
                }
              }
              break;
            case 35:
              {
                const _0x2df62d = (_0x287df2 = _0x2c7bc7.d.member) === null || _0x287df2 === undefined ? undefined : _0x287df2.d.value;
                if (_0x2df62d) {
                  this._handleMemberExpression(_0x2d5a70, _0x2c7bc7.d.leftExpr, _0x49801a ? _0x2df62d + '.' + _0x49801a : _0x2df62d);
                }
              }
              break;
            case 48:
            case 49:
              this._addMethod(_0x5c85f4.StandardVariableType.String, _0x2d5a70, _0x48cb48);
              break;
            case 40:
              this._addMethod(_0x5c85f4.getStandardVariableType(_0x2c7bc7), _0x2d5a70, _0x48cb48);
              break;
            case 52:
              this._addMethod(_0x5c85f4.StandardVariableType.Tuple, _0x2d5a70, _0x48cb48);
              break;
            case 45:
              this._addMethod(_0x5c85f4.StandardVariableType.Set, _0x2d5a70, _0x48cb48);
              break;
            case 34:
              this._addMethod(_0x5c85f4.StandardVariableType.List, _0x2d5a70, _0x48cb48);
              break;
            case 18:
              this._addMethod(_0x5c85f4.StandardVariableType.Dictionary, _0x2d5a70, _0x48cb48);
              break;
            case 27:
              {
                const _0x4a9079 = _0x2c7bc7.d.leftExpr;
                if (_0x4a9079.nodeType === 38) {
                  this._addMethod(_0x5c85f4.StandardVariableType.String, _0x2d5a70, _0x4a9079.start + _0x4a9079.length);
                }
              }
              break;
          }
        }
        _addMethod(_0x29852d, _0x3fe3aa, _0x4f38a8) {
          this.methodInvokations.push(new _0x5c85f4.MethodInvokation(_0x29852d, _0x3fe3aa, _0x4f38a8));
        }
      }
      exports.ExpressionWalker = _0x40f383;
    },
    25283: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntelliCodeCommand = undefined;
      require(44562);
      const _0x4e7a6a = require(25075);
      const _0x576443 = require(48281);
      const _0x41ee02 = require(27130);
      const _0x3ff624 = require(80209);
      class _0x235bc2 {
        constructor(_0x13e6a5, _0x312dab) {
          this._intelliCode = _0x13e6a5;
          this._telemetry = _0x312dab;
        }
        getFile(_0x389357) {
          return undefined;
        }
        execute(_0x4191dd, _0x5424c9, _0x47aaa5) {
          var _0xda4f3d;
          if (!this._intelliCode) {
            return;
          }
          switch (_0x5424c9.command) {
            case _0x41ee02.Commands.intelliCodeCompletionItemCommand:
              if (_0x5424c9.arguments?.length === 1) {
                _0x3ff624.sendRecommendationsTelemetry(this._telemetry, _0x5424c9.arguments[0]);
              } else {
                if (_0x5424c9.arguments?.length === 3) {
                  _0x3ff624.sendRecommendationsTelemetry(this._telemetry, _0x5424c9.arguments[0], {
                    index: _0x5424c9.arguments[1],
                    method: _0x5424c9.arguments[2]
                  });
                }
              }
              break;
            case _0x41ee02.Commands.intelliCodeLoadExtension:
              _0x576443.assert(Array.isArray(_0x5424c9.arguments));
              _0x576443.assert(_0x5424c9.arguments?.length === 1);
              if (_0x5424c9.arguments?.length === 1) {
                _0x576443.assert(_0x5424c9.arguments[0]);
                const _0x5061fc = _0x5424c9.arguments[0].modelPath;
                _0x576443.assert(typeof _0x5061fc === 'string');
                if (typeof _0x5061fc !== 'string') {
                  return;
                }
                this._intelliCode.logger.log(_0x4e7a6a.LogLevel.Log, `IntelliCode model ${_0x5061fc}`);
                let _0x532792 = _0x5424c9.arguments[0].pipeName;
                if (typeof _0x532792 === 'string') {
                  this._intelliCode.logger.log(_0x4e7a6a.LogLevel.Log, `pipe name ${_0x532792}`);
                } else {
                  _0x532792 = undefined;
                }
                let _0x4003ba = _0x5424c9.arguments[0].analyzerName;
                if (typeof _0x4003ba === 'string') {
                  this._intelliCode.logger.log(_0x4e7a6a.LogLevel.Log, `analyzerName ${_0x4003ba}`);
                } else {
                  _0x4003ba = undefined;
                }
                this._intelliCode.setModelLoadInfo(_0x5061fc, _0x532792, _0x4003ba);
                if ((_0xda4f3d = this._intelliCode) === null || _0xda4f3d === undefined) {
                  undefined;
                } else {
                  _0xda4f3d.ensureModelLoaded().ignoreErrors();
                }
              }
              break;
          }
        }
      }
      exports.IntelliCodeCommand = _0x235bc2;
    },
    17920: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntelliCodeCompletionAugmenter = undefined;
      const _0x1ae3b7 = require(56814);
      const _0x5f04b3 = require(71582);
      const _0x102aae = require(5737);
      const _0x2f73ff = require(30048);
      const _0x35882d = require(65235);
      const _0x45c677 = require(7448);
      const _0xb39e77 = require(80209);
      const _0x33fe0e = require(39619);
      class _0x3b7375 {
        constructor(_0x2e791c, _0x340c1c, _0x5edc4b, _0x14ab71, _0x36e382) {
          this._program = _0x2e791c;
          this._fileUri = _0x340c1c;
          this._position = _0x5edc4b;
          this._options = _0x14ab71;
          this._token = _0x36e382;
          const _0x2565ed = this._program.serviceProvider.tryGet(_0x2f73ff.PylanceServiceKeys.intelliCode);
          this._intelliCode = _0x2565ed?.isEnabled ? _0x2565ed : undefined;
        }
        async addCompletionItems(_0x191b57) {
          var _0x10cfb4;
          if (!this._intelliCode || !this._intelliCode.deepLearning || !_0x191b57 || _0x191b57.items.length === 0) {
            return;
          }
          if (!this._intelliCode.model && !this._intelliCode.useModelService) {
            return;
          }
          const _0x19f2eb = this._program.getParseResults(this._fileUri);
          if (!_0x19f2eb) {
            return;
          }
          const _0x26e5e0 = _0x1ae3b7.convertPositionToOffset(this._position, _0x19f2eb.tokenizerOutput.lines);
          if (_0x26e5e0 === undefined) {
            return;
          }
          try {
            const _0x5016d4 = new _0x5f04b3.Duration();
            const _0x55bbff = process.memoryUsage().heapUsed / 1024;
            const _0x502837 = _0x19f2eb.parserOutput.parseTree;
            const _0xd19838 = new _0x35882d.AssignmentWalker(_0x502837);
            _0xd19838.walk(_0x502837);
            const _0x59451b = new _0x45c677.ExpressionWalker(_0xd19838.scopes);
            _0x59451b.walk(_0x502837);
            const _0x6e963c = _0x191b57.items.map(_0x3f9089 => _0x3f9089.label);
            const _0x30bb28 = await this._intelliCode.deepLearning.getRecommendations(_0x19f2eb, _0x59451b, _0x26e5e0, _0x6e963c, this._token);
            if (_0x30bb28.recommendations.length > 0) {
              this._program.console.log(`Recommendations: ${_0x30bb28.recommendations.join(', ')}`);
            }
            const _0x14320e = process.memoryUsage().heapUsed / 1024;
            const _0x314f25 = Math.round(_0x14320e - _0x55bbff);
            this._program.console.log(`Time taken to get recommendations: ${_0x5016d4.getDurationInMilliseconds()} ms, Memory increase: ${_0x314f25} KB.`);
            if (this._token.isCancellationRequested) {
              return;
            }
            const _0x5abb2a = _0x191b57.items.filter(_0x2177b2 => _0x2177b2.detail !== _0x102aae.autoImportDetail);
            const _0x3761e4 = this._applyModel(_0x5abb2a, _0x30bb28.recommendations);
            this._info = _0xb39e77.buildRecommendationsTelemetry(_0x5abb2a, _0x30bb28.recommendations, _0x3761e4, _0x30bb28.invocation?.type, ((_0x10cfb4 = this._intelliCode.model) === null || _0x10cfb4 === undefined ? undefined : _0x10cfb4.metaData.Version) ?? 'deeprerank', _0x5016d4.getDurationInMilliseconds(), _0x314f25);
          } catch (_0x39a012) {
            this._program.console.error(`Exception in IntelliCode: ${_0x39a012.stack}`);
            return;
          }
        }
        getExtensionInfo() {
          return this._info;
        }
        _applyModel(_0x298c84, _0x312c98) {
          const _0x20cbe2 = [];
          if (_0x312c98.length === 0) {
            return _0x20cbe2;
          }
          const _0x4f25d5 = new Map(_0x298c84.filter(_0x2223a0 => _0x2223a0.label).map(_0x3830b8 => [_0x3830b8.label, _0x3830b8]));
          let _0x5ce582 = 0;
          for (const _0x179683 of _0x312c98) {
            const _0x1eec2f = _0x4f25d5.get(_0x179683);
            if (_0x1eec2f) {
              this._updateCompletionItem(_0x1eec2f, _0x5ce582);
              if (_0x1eec2f.insertText) {
                _0x20cbe2.push(_0x1eec2f.insertText);
              }
              if (_0x5ce582 >= _0x33fe0e.IntelliCodeConstants.MaxRecommendation) {
                break;
              }
              _0x5ce582++;
            }
          }
          return _0x20cbe2;
        }
        _updateCompletionItem(_0x5a34dd, _0x271dc4) {
          if (!_0x5a34dd.insertText && !_0x5a34dd.textEdit) {
            _0x5a34dd.insertText = _0x5a34dd.label;
          }
          if (!_0x5a34dd.filterText || _0x5a34dd.filterText.length === 0) {
            _0x5a34dd.filterText = _0x5a34dd.insertText || _0x5a34dd.label;
          }
          _0x5a34dd.sortText = `00.${_0x271dc4}.${_0x5a34dd.label}`;
          _0x5a34dd.filterText = _0x5a34dd.label.toLocaleLowerCase();
          _0x5a34dd.label = `${_0x33fe0e.IntelliCodeConstants.UnicodeStar}${_0x5a34dd.label}`;
          _0x5a34dd.preselect = _0x271dc4 === 0;
        }
      }
      exports.IntelliCodeCompletionAugmenter = _0x3b7375;
    },
    35264: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntelliCodeModelService = exports.DEEP_RERANK_ANALYZER_NAME = undefined;
      const _0x2b397b = require(69278);
      const _0x4b8e9c = __importStar(require(90355));
      const _0x48a822 = require(89688);
      var _0x466ad1;
      (function (_0x1e36d4) {
        _0x1e36d4[_0x1e36d4.None = 0] = 'None';
        _0x1e36d4[_0x1e36d4.NotInModel = 1] = 'NotInModel';
        _0x1e36d4[_0x1e36d4.NotInIntersection = 2] = 'NotInIntersection';
        _0x1e36d4[_0x1e36d4.ModelLoadFailed = 3] = 'ModelLoadFailed';
        _0x1e36d4[_0x1e36d4.ZeroWeight = 4] = 'ZeroWeight';
      })(_0x466ad1 ||= {});
      exports.DEEP_RERANK_ANALYZER_NAME = 'intellisense-members-lstm2';
      class _0x5b6c0a {
        constructor() {
          this._loadModelRequest = new _0x4b8e9c.RequestType3('LoadModelAsync');
          this._getPatternsRequest = new _0x4b8e9c.RequestType3('GetPatternsAsync');
          this._deepLearningModelInferenceRequest = new _0x4b8e9c.RequestType4('DeepLearningModelInferenceAsync');
        }
        static get instance() {
          if (!_0x5b6c0a._singleton) {
            _0x5b6c0a._singleton = new _0x5b6c0a();
          }
          return _0x5b6c0a._singleton;
        }
        async startModelServiceAsync(_0x1cd547) {
          if (this._connection) {
            return;
          }
          const _0x1f9baa = _0x2b397b.createConnection(_0x1cd547);
          this._connection = _0x4b8e9c.createMessageConnection(new _0x48a822.StreamMessageReader(_0x1f9baa), new _0x48a822.StreamMessageWriter(_0x1f9baa));
          this._connection.listen();
        }
        async loadModelAsync(_0x2da534, _0x43c01d, _0x44e380) {
          var _0x475efe;
          if ((_0x475efe = this._connection) === null || _0x475efe === undefined) {
            return undefined;
          } else {
            return _0x475efe.sendRequest(this._loadModelRequest, _0x2da534, _0x43c01d, _0x44e380);
          }
        }
        async getPatternsAsync(_0x40febc, _0xb3932, _0x14ada4) {
          var _0x3c49e7;
          if ((_0x3c49e7 = this._connection) === null || _0x3c49e7 === undefined) {
            return undefined;
          } else {
            return _0x3c49e7.sendRequest(this._getPatternsRequest, _0x40febc, _0xb3932, _0x14ada4);
          }
        }
        async deepLearningModelInferenceAsync(_0x30feef, _0x3d7b82, _0x4a709e, _0x39ef32) {
          var _0x427177;
          if ((_0x427177 = this._connection) === null || _0x427177 === undefined) {
            return undefined;
          } else {
            return _0x427177.sendRequest(this._deepLearningModelInferenceRequest, _0x30feef, _0x3d7b82, _0x4a709e, _0x39ef32);
          }
        }
      }
      exports.IntelliCodeModelService = _0x5b6c0a;
    },
    77981: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntelliCodeService = undefined;
      require(44562);
      const _0x20b557 = __importStar(require(94763));
      const _0x28ff67 = require(25075);
      const _0x4c5c34 = require(69482);
      const _0x4804ad = require(72740);
      const _0x271732 = require(35264);
      const _0x380fac = require(74444);
      const _0x1562f4 = require(3621);
      class _0x171596 {
        constructor(_0x59ac64, _0x5ba3d6, _0x237e4c) {
          this.logger = _0x59ac64;
          this._platform = _0x5ba3d6;
          this._telemetry = _0x237e4c;
          this._useModelService = false;
          this._enabled = true;
          this._zipOpener = _0x1562f4.realZipOpener();
        }
        get deepLearning() {
          return this._deepLearning;
        }
        get useModelService() {
          return this._useModelService;
        }
        get isEnabled() {
          return this._enabled;
        }
        async dispose() {
          if (this._deepLearning) {
            await this._deepLearning.dispose();
            this._deepLearning = undefined;
          }
        }
        enable(_0x4f766a) {
          this._enabled = _0x4f766a;
        }
        setModelLoadInfo(_0x5cede3, _0x406886, _0xe2a7ca) {
          this._modelZipPath = _0x5cede3;
          this._pipeName = _0x406886;
          this._analyzerName = _0xe2a7ca;
        }
        async ensureModelLoaded() {
          if (!this._modelLoadedPromise) {
            this._modelLoadedPromise = this._ensureModelLoadedImpl();
          }
          return this._modelLoadedPromise;
        }
        async _ensureModelLoadedImpl() {
          var _0x47fac0;
          if (!((_0x47fac0 = this._platform) === null || _0x47fac0 === undefined ? undefined : _0x47fac0.isOnnxSupported())) {
            return;
          }
          _0x20b557.env.wasm.numThreads = 1;
          _0x20b557.env.wasm.simd = false;
          if (this._enabled && this._modelZipPath) {
            await this._loadModel();
          } else {
            this._deepLearning = undefined;
            this.model = undefined;
          }
        }
        async _loadModel() {
          if (this.model || !this._modelZipPath) {
            return;
          }
          if (this._pipeName && this._analyzerName === _0x271732.DEEP_RERANK_ANALYZER_NAME) {
            try {
              const _0x3b4bc7 = _0x271732.IntelliCodeModelService.instance;
              await _0x3b4bc7.startModelServiceAsync(this._pipeName);
              this.logger.log(_0x28ff67.LogLevel.Log, 'Load model with modelservice');
              await _0x3b4bc7.loadModelAsync('python', this._analyzerName, this._modelZipPath);
              this._useModelService = true;
              this.logger.log(_0x28ff67.LogLevel.Log, `Load model with modelservice succeeded. modelPath: ${this._modelZipPath}`);
            } catch (_0x3c09fc) {
              const _0x59f1cc = 'Failed to load IntelliCode model through ModelService';
              this.logger.log(_0x28ff67.LogLevel.Warn, _0x59f1cc + '. Exception: ' + _0x4c5c34.getExceptionMessage(_0x3c09fc));
            }
          } else {
            try {
              const _0x5b04e6 = new _0x380fac.ModelLoader(this._zipOpener, this.logger, this._telemetry);
              this.model = await _0x5b04e6.loadModel(this._modelZipPath);
            } catch (_0x24ad2c) {
              const _0x22e7ad = 'Failed to load IntelliCode model';
              this.logger.log(_0x28ff67.LogLevel.Warn, _0x22e7ad + '. Exception: ' + _0x4c5c34.getExceptionMessage(_0x24ad2c));
              _0x4c5c34.sendExceptionTelemetry(this._telemetry, _0x4c5c34.TelemetryEventName.INTELLICODE_MODEL_LOAD_FAILED, _0x24ad2c);
            }
          }
          try {
            if (!this._deepLearning) {
              this._deepLearning = new _0x4804ad.DeepLearning(this.model, this._platform, this.logger, this._telemetry);
            }
            await this._deepLearning.initialize();
            this.logger.log(_0x28ff67.LogLevel.Log, 'Initialize deeplearning succeeded');
          } catch (_0x289d4e) {
            const _0x367df4 = 'Failed to initialize deeplearning';
            this.logger.log(_0x28ff67.LogLevel.Warn, _0x367df4 + '. Exception: ' + _0x4c5c34.getExceptionMessage(_0x289d4e));
          }
        }
      }
      exports.IntelliCodeService = _0x171596;
    },
    74444: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ModelLoader = undefined;
      const _0x9c1790 = require(25075);
      const _0x50f2e2 = require(69482);
      const _0x21ab01 = require(98162);
      class _0x570c71 {
        constructor(_0x4b9e1a, _0x4ff751, _0x1bb26d) {
          this._zipOpener = _0x4b9e1a;
          this._logger = _0x4ff751;
          this._telemetry = _0x1bb26d;
        }
        async loadModel(_0x24b617) {
          const _0x45414e = this._tryExecute(() => this._zipOpener.open(_0x24b617), 'Unable to open model zip');
          if (!_0x45414e) {
            return undefined;
          }
          try {
            const _0x32cc33 = await this._loadJson(_0x45414e, _0x21ab01.ModelMetaDataFileName, 'IntelliCode metadata');
            if (!_0x32cc33) {
              return undefined;
            }
            const _0x21334c = await this._loadJson(_0x45414e, _0x21ab01.ModelTokensFileName, 'IntelliCode model data');
            if (!_0x21334c) {
              return undefined;
            }
            const _0x1660bd = await this._tryExecuteAsync(() => _0x45414e.entryData(_0x21ab01.ModelFileName), 'Unable to read model.onnx');
            if (!_0x1660bd) {
              return undefined;
            }
            const _0x14a17f = new Uint8Array(_0x1660bd);
            const _0x1bf3fb = new Map(_0x21334c.map((_0x5c67ad, _0x4e279d) => [_0x5c67ad, _0x4e279d]));
            return {
              model: _0x14a17f,
              metaData: _0x32cc33,
              tokens: _0x21334c,
              tokenIdMap: _0x1bf3fb
            };
          } finally {
            await this._tryExecuteAsync(() => _0x45414e.close(), 'Unable to close model zip');
          }
        }
        async _loadJson(_0x31c87f, _0x33e85f, _0x3c496a) {
          try {
            const _0x505fdc = await _0x31c87f.entryData(_0x33e85f);
            const _0x37ec16 = _0x505fdc.toString();
            try {
              return JSON.parse(_0x37ec16);
            } catch (_0x422318) {
              this._logError(`Unable to parse ${_0x3c496a}`, _0x422318);
            }
          } catch (_0x5b52a2) {
            this._logError(`Unable to read ${_0x3c496a}`, _0x5b52a2);
          }
          return undefined;
        }
        _tryExecute(_0x318689, _0x5498f0) {
          try {
            return _0x318689();
          } catch (_0x2ab0ca) {
            this._logError(_0x5498f0, _0x2ab0ca);
            return undefined;
          }
        }
        async _tryExecuteAsync(_0x1648fb, _0x2ee8fb) {
          try {
            return await _0x1648fb();
          } catch (_0x34fd05) {
            this._logError(_0x2ee8fb, _0x34fd05);
            return undefined;
          }
        }
        _logError(_0xf90337, _0x364123) {
          var _0x2093bb;
          var _0x4d0a8f;
          if (_0x364123) {
            if ((_0x2093bb = this._logger) === null || _0x2093bb === undefined) {
              undefined;
            } else {
              _0x2093bb.log(_0x9c1790.LogLevel.Error, _0x364123 ? _0xf90337 + '. Exception ' + _0x50f2e2.getExceptionMessage(_0x364123) : _0xf90337);
            }
            _0x50f2e2.sendExceptionTelemetry(this._telemetry, _0x50f2e2.TelemetryEventName.INTELLICODE_MODEL_LOAD_FAILED, _0x364123);
          } else {
            if ((_0x4d0a8f = this._logger) === null || _0x4d0a8f === undefined) {
              undefined;
            } else {
              _0x4d0a8f.log(_0x9c1790.LogLevel.Error, _0xf90337);
            }
          }
        }
      }
      exports.ModelLoader = _0x570c71;
    },
    98162: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ModelTokensFileName = exports.ModelMetaDataFileName = exports.ModelFileName = exports.LookbackTokenLength = undefined;
      exports.LookbackTokenLength = 100;
      exports.ModelFileName = 'model.onnx';
      exports.ModelMetaDataFileName = 'metadata.json';
      exports.ModelTokensFileName = 'tokens.json';
    },
    38790: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.resolveFunction = _0x490ca9;
      exports.resolveVariable = _0x29b660;
      exports.resolveAssignments = _0x2a8724;
      function _0x490ca9(_0x5d63be, _0x350f36) {
        if (_0x5d63be && _0x5d63be.length > 0) {
          return _0x350f36 + '.' + _0x5d63be;
        } else {
          return _0x350f36;
        }
      }
      function _0x29b660(_0x52dfc9, _0x205674, _0x3c583b) {
        if (!_0x205674 || !_0x52dfc9 || !_0x52dfc9.parent && (!_0x52dfc9.assignments || _0x52dfc9.assignments.length === 0)) {
          return _0x205674;
        }
        let _0xa2105f = _0x52dfc9;
        const _0x4e517f = _0xa2105f.assignments;
        let _0x20592c = _0x2a8724(_0x4e517f, _0x205674, _0x3c583b);
        while (!_0x20592c && _0xa2105f.parent) {
          _0xa2105f = _0xa2105f.parent;
          _0x20592c = _0x2a8724(_0xa2105f.assignments, _0x205674, _0x3c583b);
        }
        return _0x20592c;
      }
      function _0x2a8724(_0x49876c, _0x3b25ad, _0x45c1a7) {
        if (!_0x49876c) {
          return undefined;
        }
        let _0x373d45;
        for (let _0x3ac793 = _0x49876c.length - 1; _0x3ac793 >= 0; _0x3ac793--) {
          const _0x4fa7bf = _0x49876c[_0x3ac793];
          if (_0x4fa7bf.spanStart > _0x45c1a7) {
            continue;
          }
          if (_0x4fa7bf.key === _0x3b25ad && !_0x373d45) {
            _0x373d45 = _0x4fa7bf.value;
          } else {
            if (_0x373d45 === _0x4fa7bf.key) {
              _0x373d45 = _0x4fa7bf.value;
            }
          }
        }
        return _0x373d45;
      }
    },
    88562: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Scope = undefined;
      exports.getEnclosingScopeForNode = _0x18a414;
      exports.getScopeNodeName = _0x53cf74;
      exports.getScopeQualifiedName = _0x35605e;
      const _0x27ada3 = require(48281);
      class _0xac4735 {
        constructor(_0x24ade8, _0x1983d8, _0x4bfa23, _0x51df8f, _0x6fe2e2) {
          this.name = _0x24ade8;
          this.spanStart = _0x1983d8;
          this.parent = _0x4bfa23;
          this.node = _0x51df8f;
          this.assignments = _0x6fe2e2 || [];
        }
      }
      exports.Scope = _0xac4735;
      function _0x18a414(_0x202547) {
        if (_0x202547.nodeType === 36) {
          return _0x202547;
        }
        let _0x663711 = _0x202547;
        if (_0x202547.nodeType === 31 || _0x202547.nodeType === 10) {
          _0x663711 = _0x202547.parent;
        }
        while (_0x663711) {
          switch (_0x663711.nodeType) {
            case 36:
            case 31:
            case 10:
              return _0x663711;
          }
          _0x663711 = _0x663711.parent;
        }
        _0x27ada3.fail('Did not find tree scope');
        return undefined;
      }
      function _0x53cf74(_0x44d8c1) {
        var _0x1b0fde;
        var _0x516e27;
        switch (_0x44d8c1.nodeType) {
          case 31:
            return ((_0x1b0fde = _0x44d8c1.d.name) === null || _0x1b0fde === undefined ? undefined : _0x1b0fde.d.value) || '?';
          case 10:
            return ((_0x516e27 = _0x44d8c1.d.name) === null || _0x516e27 === undefined ? undefined : _0x516e27.d.value) || '?';
        }
      }
      function _0x35605e(_0x2d6f1e) {
        const _0x21768d = _0x18a414(_0x2d6f1e);
        const _0x29dfda = _0x53cf74(_0x2d6f1e);
        if (_0x21768d.nodeType === 36) {
          return _0x29dfda;
        } else {
          return _0x35605e(_0x21768d) + '.' + _0x29dfda;
        }
      }
    },
    80209: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.sendRecommendationsTelemetry = _0x4d4db9;
      exports.buildRecommendationsTelemetry = _0x1eb717;
      const _0x54bdd0 = require(71582);
      const _0x4de5b5 = require(27130);
      const _0x4d87d9 = require(23898);
      const _0x30673c = require(69482);
      const _0x248669 = require(39619);
      let _0x38de0c;
      function _0x15407a(_0x57686f) {
        if (_0x38de0c?.id !== _0x57686f) {
          return;
        }
        const _0x3da042 = new _0x30673c.TelemetryEvent(_0x30673c.TelemetryEventName.INTELLICODE_COMPLETION_ITEM_SELECTED);
        _0x3da042.Properties.Id = _0x38de0c.id;
        _0x3da042.Properties.Language = _0x38de0c.language;
        _0x3da042.Properties.ModelType = _0x38de0c.modelType;
        _0x3da042.Properties.ModelVersion = _0x38de0c.modelVersion;
        _0x3da042.Properties.FailureReason = _0x38de0c.failureReason;
        _0x3da042.Properties.Class = _0x38de0c.class;
        _0x3da042.Measurements.ElapsedTime = _0x38de0c.elapsedTime;
        _0x3da042.Measurements.MemoryIncreaseKB = _0x38de0c.memoryIncreaseKB;
        _0x3da042.Measurements.Count = _0x38de0c.count;
        _0x3da042.Properties.Methods = _0x38de0c.methods;
        return _0x3da042;
      }
      function _0x4d4db9(_0x33124d, _0x1ae911, _0x26a628) {
        if (!_0x33124d) {
          return;
        }
        const _0x288ee6 = _0x15407a(_0x1ae911);
        if (!_0x288ee6) {
          return;
        }
        if (_0x26a628) {
          _0x288ee6.Properties.Index = _0x26a628.index;
          _0x288ee6.Properties.Method = _0x26a628.method;
          _0x288ee6.Properties.IsIntelliCodeCommit = 'True';
        } else {
          _0x288ee6.Properties.Index = '-1';
          _0x288ee6.Properties.Method = '';
          _0x288ee6.Properties.IsIntelliCodeCommit = 'False';
        }
        _0x33124d.sendTelemetry(_0x288ee6);
      }
      function _0x1eb717(_0x89b9e1, _0xf1c3e4, _0x56d1e8, _0x21986d, _0x5ec602, _0x163cf4, _0x5389ed) {
        const _0x40dfb1 = _0x30673c.createTelemetryCorrelationId();
        const _0x3a9b72 = new _0x54bdd0.Duration();
        let _0x52804d = _0x248669.FailureReason.None;
        if (_0xf1c3e4.length > 0) {
          if (_0x56d1e8.length === 0) {
            _0x52804d = _0x248669.FailureReason.NotInIntersection;
          }
        } else {
          _0x52804d = _0x248669.FailureReason.NotInModel;
        }
        let _0x2edddb = '';
        if (_0x52804d !== _0x248669.FailureReason.NotInModel) {
          _0x2edddb = _0x21986d || 'undefined';
        }
        let _0x384dcf = -1;
        let _0x1431dc = '';
        if (_0xf1c3e4.length > 0) {
          _0x384dcf = _0x56d1e8.length;
          _0x1431dc = _0xf1c3e4.join(',');
        }
        _0x38de0c = {
          id: _0x40dfb1,
          language: 'python',
          modelType: _0x248669.ModelType.LSTM,
          modelVersion: `python_LSTM_${_0x5ec602}`,
          failureReason: _0x52804d,
          class: _0x2edddb,
          elapsedTime: _0x163cf4,
          memoryIncreaseKB: _0x5389ed,
          count: _0x384dcf,
          methods: _0x1431dc
        };
        const _0x40cdb2 = _0x3a9b72.getDurationInMilliseconds();
        _0x4228d0(_0x40dfb1, _0x89b9e1, _0x56d1e8);
        const _0xb83421 = _0x3a9b72.getDurationInMilliseconds();
        return {
          correlationId: _0x40dfb1,
          selectedItemTelemetryTimeInMS: _0x40cdb2,
          itemTelemetryTimeInMS: _0xb83421 - _0x40cdb2,
          totalTimeInMS: _0x163cf4 + _0xb83421
        };
      }
      function _0x4228d0(_0x59d008, _0x274810, _0x1b3632) {
        const _0x35a0c5 = _0x274810.sort((_0x318882, _0x510dc4) => {
          if (_0x318882.sortText === _0x510dc4.sortText || !_0x318882.sortText || !_0x510dc4.sortText) {
            return 0;
          }
          if (_0x318882.sortText < _0x510dc4.sortText) {
            return -1;
          }
          return 1;
        });
        const _0x526a1f = {
          title: '',
          command: _0x4de5b5.Commands.intelliCodeCompletionItemCommand,
          arguments: [_0x59d008]
        };
        for (let _0xf4f6b4 = 0; _0xf4f6b4 < _0x35a0c5.length; _0xf4f6b4++) {
          const _0x397244 = _0x35a0c5[_0xf4f6b4];
          const _0x27e0f7 = _0xf4f6b4 < _0x1b3632.length;
          if (_0x27e0f7) {
            _0x397244.command = _0x4d87d9.mergeCommands(_0x397244.command, {
              title: '',
              command: _0x4de5b5.Commands.intelliCodeCompletionItemCommand,
              arguments: [_0x59d008, _0xf4f6b4, _0x397244.insertText ?? '']
            });
          } else {
            _0x397244.command = _0x4d87d9.mergeCommands(_0x397244.command, _0x526a1f);
          }
        }
      }
    },
    56238: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.EditorLookBackTokenGenerator = undefined;
      const _0x129873 = require(41557);
      const _0x5d1ad9 = require(48281);
      const _0x42bc2f = require(92600);
      const _0x2f2f16 = require(98162);
      const _0x1f79b9 = require(3443);
      class _0x53c392 extends _0x1f79b9.LookBackTokenGenerator {
        generateLookbackTokens(_0x5b0232, _0x12621a, _0x2dfe5e, _0x1ca14a) {
          const _0x2b10a4 = this.extractTokens(_0x5b0232);
          let _0xb10c49;
          let _0x38389f;
          let _0x4dfa96 = -1;
          _0x1ca14a = _0x1ca14a || _0x2f2f16.LookbackTokenLength;
          const _0x3da59d = _0x12621a.methodInvokations.sort((_0x475d9b, _0x285138) => _0x285138.spanStart - _0x475d9b.spanStart);
          let _0x388e80 = _0x3da59d.findIndex(_0x512172 => _0x512172.spanStart < _0x2dfe5e);
          if (_0x388e80 < 0) {
            return undefined;
          }
          _0x388e80 = _0x388e80 === 0 ? _0x388e80 : _0x388e80 - 1;
          for (let _0x864d2a = _0x388e80; _0x864d2a < _0x3da59d.length; _0x864d2a++) {
            const _0x17f219 = _0x3da59d[_0x864d2a];
            _0x38389f = _0x17f219.key;
            _0xb10c49 = _0x17f219.value;
            let _0x165853 = _0x2b10a4.findMethodPosition(_0x17f219);
            if (_0x165853 > _0x2dfe5e) {
              continue;
            }
            if (_0x165853 < _0x2dfe5e - 1) {
              _0x165853 = _0x2dfe5e - 1;
            }
            _0x4dfa96 = _0x165853;
            break;
          }
          if (_0x4dfa96 < 0 || !_0x38389f) {
            return undefined;
          }
          const _0x1ade7a = _0x2b10a4.findRelevantName(_0x4dfa96);
          if (this.isTypeUnknown(_0x38389f)) {
            if (_0x1ade7a.value) {
              _0x38389f = _0x1ade7a.value;
            }
          }
          if (_0x38389f === undefined) {
            return;
          }
          if (!_0x39c1ac(_0x4dfa96, _0x5b0232.parserOutput)) {
            return;
          }
          const _0x6bceb2 = _0x123f44(_0x4dfa96);
          if (_0x6bceb2 < 0 || _0x6bceb2 >= _0x2b10a4.selectedTokens.length) {
            return;
          }
          const _0x56305c = this._extractLookbackTokens(_0x1ca14a, _0x2b10a4, _0x38389f, _0x6bceb2);
          if (!_0x56305c || _0x56305c.length <= 1) {
            return undefined;
          }
          if (!this.isTypeUnknown(_0x38389f)) {
            for (let _0x4f5414 = _0x56305c.length - 1; _0x4f5414 > 2; _0x4f5414--) {
              if (_0x1ade7a.value) {
                if (_0x56305c[_0x4f5414].value === _0x1ade7a.value) {
                  _0x56305c[_0x4f5414].value = _0x38389f;
                  break;
                }
              } else {
                if (_0x56305c[_0x4f5414].value === _0x56305c[_0x56305c.length - 2].value) {
                  _0x56305c[_0x4f5414].value = _0x38389f;
                  break;
                }
              }
            }
            if (!_0x1ade7a.value) {
              _0x56305c[_0x56305c.length - 2].value = _0x38389f;
            }
          }
          return {
            spanStart: _0x4dfa96,
            lookbackTokens: _0x56305c.map(_0x50f250 => _0x50f250.value),
            type: _0xb10c49 ? _0x38389f + '.' + _0xb10c49 : _0x38389f
          };
          function _0x123f44(_0x5dda14) {
            let _0x18e19f = _0x2b10a4.getSelectedTokenPositionIndex(_0x5dda14);
            if (_0x18e19f < 0) {
              _0x18e19f = ~_0x18e19f + 1;
            }
            if (_0x18e19f < _0x2b10a4.selectedTokens.length) {
              while (_0x18e19f >= 0) {
                const _0x1199b5 = _0x2b10a4.selectedTokens[_0x18e19f].token;
                if (_0x1199b5.type === 20) {
                  break;
                }
                if (_0x1199b5.start <= _0x5dda14 && (_0x1199b5.type === 13 || _0x1199b5.type === 15 || _0x1199b5.type === 17)) {
                  return -1;
                }
                _0x18e19f -= 1;
              }
            }
            return _0x18e19f;
          }
          function _0x39c1ac(_0x4a9771, _0x4cafdf) {
            var _0x377cf7;
            const _0x108707 = _0x2b10a4.getSelectedTokenPositionIndex(_0x4a9771);
            const _0x1eec48 = _0x108707 > 0 && _0x2b10a4.selectedTokens[_0x108707].token.type === 20;
            if (_0x1eec48) {
              return true;
            }
            const _0x104254 = _0x4cafdf.parseTree;
            const _0x38f886 = _0x129873.findNodeByOffset(_0x104254, _0x4a9771);
            const _0x131ada = _0x38f886 && _0x38f886.nodeType === 38 && _0x38f886.parent?.nodeType === 35 && _0x38f886 === ((_0x377cf7 = _0x38f886.parent) === null || _0x377cf7 === undefined ? undefined : _0x377cf7.d.member);
            return _0x131ada;
          }
        }
        _extractLookbackTokens(_0x3f8fb6, _0x58c953, _0x27ec57, _0x49ff5f) {
          let _0x8b4391 = _0x3f8fb6;
          let _0xe52605 = _0x49ff5f - _0x3f8fb6 + 1;
          if (_0xe52605 < 0) {
            _0xe52605 = 0;
            _0x8b4391 = _0x49ff5f + 1;
          }
          const _0x4ce507 = _0xe52605 + _0x8b4391;
          _0x5d1ad9.assert(_0x4ce507 >= _0xe52605 && _0x4ce507 < _0x58c953.selectedTokens.length);
          const _0x2e6b80 = _0x58c953.selectedTokens.slice(_0xe52605, _0x4ce507);
          if (_0x2e6b80.length <= 1) {
            return undefined;
          }
          const _0x1ee120 = _0x2e6b80[_0x2e6b80.length - 2].token;
          if (_0x1ee120.type === 6 || this._isSymbol(_0x1ee120.type)) {
            return undefined;
          }
          const _0x12c987 = _0x2e6b80[_0x2e6b80.length - 1].token;
          if (_0x12c987.type !== 20 && _0x12c987.type !== 14) {
            _0x2e6b80[_0x2e6b80.length - 1].token = _0x42bc2f.Token.create(20, _0x12c987.start, 1, undefined);
            _0x2e6b80[_0x2e6b80.length - 1].value = '.';
            return _0x2e6b80;
          }
          if (_0x12c987.type === 20 && _0x1ee120.type === 14) {
            _0x2e6b80[_0x2e6b80.length - 1].token = _0x42bc2f.Token.create(2, _0x12c987.start, 1, undefined);
            _0x2e6b80[_0x2e6b80.length - 1].value = '\n';
            const _0x4ad703 = _0x42bc2f.Token.create(7, _0x12c987.start + 1, _0x27ec57.length, undefined);
            _0x2e6b80.push({
              token: _0x4ad703,
              value: _0x27ec57
            });
            const _0x3801db = _0x42bc2f.Token.create(20, _0x4ad703.start + _0x4ad703.length, 1, undefined);
            _0x2e6b80.push({
              token: _0x3801db,
              value: '.'
            });
          }
          return _0x2e6b80;
        }
        _isSymbol(_0xbed41b) {
          return _0xbed41b === 21 || _0xbed41b === 10 || _0xbed41b === 12 || _0xbed41b === 19 || _0xbed41b === 15 || _0xbed41b === 17 || _0xbed41b === 13 || _0xbed41b === 9 || _0xbed41b === 11;
        }
      }
      exports.EditorLookBackTokenGenerator = _0x53c392;
    },
    3443: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LookBackTokenGenerator = undefined;
      const _0x5361da = require(39619);
      const _0x2f05cc = require(94878);
      class _0xcb1bc {
        extractTokens(_0x4ea32d) {
          const _0xa8a542 = [];
          const _0x58470b = [];
          const _0xffa04c = new _0x2f05cc.TokenSet();
          const _0x57c0c8 = _0x4ea32d.tokenizerOutput.tokens;
          let _0x3c4a1a = false;
          for (let _0x2a8ec1 = 0; _0x2a8ec1 < _0x57c0c8.count; _0x2a8ec1++) {
            const _0x30613f = _0x57c0c8.getItemAt(_0x2a8ec1);
            switch (_0x30613f.type) {
              case 3:
              case 4:
                continue;
            }
            if (_0x30613f.type === 2) {
              if (!_0x3c4a1a) {
                _0xffa04c.addToken(_0x30613f, '\n');
                _0x3c4a1a = true;
              }
              continue;
            }
            _0xffa04c.addToken(_0x30613f, this._getTokenValue(_0x30613f, _0x4ea32d.text));
            _0x3c4a1a = false;
            if (_0x30613f.type === 13) {
              _0xa8a542.push(_0x2a8ec1);
              _0x58470b.push(_0x2a8ec1 > 0 ? _0x57c0c8.getItemAt(_0x2a8ec1 - 1) : undefined);
              continue;
            }
            if (_0x30613f.type === 14 && _0xa8a542.length > 0) {
              const _0x4f74eb = _0xa8a542.pop();
              const _0x3ff55c = _0x58470b.pop();
              if (_0x3ff55c?.type === 7) {
                _0xffa04c.leftParenthesisSpanStarts.push(_0x57c0c8.getItemAt(_0x4f74eb).start);
                _0xffa04c.relevantNames.push(_0x3ff55c.value);
                _0xffa04c.rightParenthesisSpanStarts.push(_0x30613f.start);
              }
            }
          }
          return _0xffa04c;
        }
        isTypeUnknown(_0x318c26) {
          return !_0x318c26 || _0x318c26.startsWith(_0x5361da.IntelliCodeConstants.UnresolvedType);
        }
        _getTokenValue(_0x123b7e, _0x51079f) {
          switch (_0x123b7e.type) {
            case 5:
              return _0x5361da.LiteralTokenValue.String;
            case 6:
              return _0x5361da.LiteralTokenValue.Number;
          }
          return _0x51079f.substr(_0x123b7e.start, _0x123b7e.length);
        }
      }
      exports.LookBackTokenGenerator = _0xcb1bc;
    },
    94878: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.TokenSet = exports.TokenValuePair = undefined;
      exports.integerBinarySearch = _0xf8c5a7;
      exports.positionBinarySearch = _0x537622;
      const _0x1ac2bc = require(58147);
      const _0x56ea46 = require(34455);
      function _0xf8c5a7(_0x5d2853, _0x499b0c) {
        return _0x1ac2bc.binarySearch(_0x5d2853, _0x499b0c, _0x56ea46.identity, (_0x54a9d2, _0x554111) => {
          if (_0x54a9d2 < _0x554111) {
            return -1;
          } else {
            if (_0x54a9d2 > _0x554111) {
              return 1;
            } else {
              return 0;
            }
          }
        });
      }
      function _0x537622(_0x25949, _0x44b79a) {
        return _0x1ac2bc.binarySearchKey(_0x25949, _0x44b79a, _0x51146b => _0x51146b.token.start, (_0x3aa823, _0x497726) => {
          if (_0x3aa823 < _0x497726) {
            return -1;
          } else {
            if (_0x3aa823 > _0x497726) {
              return 1;
            } else {
              return 0;
            }
          }
        });
      }
      class _0x36a103 {
        constructor(_0x52b80e, _0x4f7347) {
          this.token = _0x52b80e;
          this.value = _0x4f7347;
        }
      }
      exports.TokenValuePair = _0x36a103;
      class _0x1f1518 {
        constructor() {
          this.selectedTokens = [];
          this.leftParenthesisSpanStarts = [];
          this.rightParenthesisSpanStarts = [];
          this.relevantNames = [];
        }
        slice(_0x30198f, _0x33a75c) {
          const _0x10ef94 = [];
          for (let _0x20c46f = _0x30198f; _0x20c46f < _0x33a75c; _0x20c46f++) {
            _0x10ef94.push(new _0x36a103(this.selectedTokens[_0x20c46f].token, this.selectedTokens[_0x20c46f].value));
          }
          return _0x10ef94;
        }
        addToken(_0x5e876c, _0x2b5845) {
          this.selectedTokens.push(new _0x36a103(_0x5e876c, _0x2b5845));
        }
        getSelectedTokenPositionIndex(_0x3fcc3e) {
          return _0x537622(this.selectedTokens, _0x3fcc3e);
        }
        findMethodPosition(_0x51e2a9) {
          let _0x5b9948 = _0x537622(this.selectedTokens, _0x51e2a9.spanStart);
          if (_0x5b9948 < 0) {
            _0x5b9948 = ~_0x5b9948;
          }
          if (_0x5b9948 >= 0 && _0x5b9948 < this.selectedTokens.length) {
            for (let _0x1d1749 = _0x5b9948; _0x1d1749 < this.selectedTokens.length; _0x1d1749++) {
              const _0x36680c = this.selectedTokens[_0x1d1749];
              if (_0x36680c.value === _0x51e2a9.value) {
                return _0x36680c.token.start;
              }
            }
          }
          return -1;
        }
        findRelevantName(_0xf82912) {
          const _0x5f5936 = _0xf8c5a7(this.leftParenthesisSpanStarts, _0xf82912);
          if (_0x5f5936 >= 0) {
            return {
              value: this.relevantNames[_0x5f5936],
              position: this.rightParenthesisSpanStarts[_0x5f5936] + 1
            };
          }
          return {
            value: undefined,
            position: 0
          };
        }
      }
      exports.TokenSet = _0x1f1518;
    },
    39619: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IntelliCodeInterface = exports.ModelType = exports.FailureReason = exports.IntelliCodeConstants = exports.LiteralTokenValue = exports.StandardVariableType = exports.MethodInvokation = exports.Assignment = undefined;
      exports.getStandardVariableType = _0x251225;
      exports.getStandardVariableTypeNumber = _0x4d7557;
      class _0x1dbf8c {
        constructor(_0x30e660, _0x56cfa4, _0x3dd920) {
          this.key = _0x30e660;
          this.value = _0x56cfa4;
          this.spanStart = _0x3dd920 || 0;
        }
      }
      class _0x4f3dba extends _0x1dbf8c {
        constructor(_0x670cb5, _0x250593, _0x2efe7e) {
          super(_0x670cb5, _0x250593, _0x2efe7e);
        }
      }
      exports.Assignment = _0x4f3dba;
      class _0x57fd1d extends _0x1dbf8c {
        constructor(_0x53ccd9, _0x46725c, _0x3d0abd) {
          super(_0x53ccd9, _0x46725c, _0x3d0abd);
        }
      }
      exports.MethodInvokation = _0x57fd1d;
      var _0x2a2909;
      (function (_0x42b536) {
        _0x42b536.Null = 'Null';
        _0x42b536.Int = 'int';
        _0x42b536.Float = 'float';
        _0x42b536.String = 'str';
        _0x42b536.Tuple = 'tuple';
        _0x42b536.List = 'list';
        _0x42b536.Set = 'set';
        _0x42b536.Dictionary = 'dict';
      })(_0x2a2909 || (exports.StandardVariableType = _0x2a2909 = {}));
      var _0x52e36f;
      (function (_0x120ec8) {
        _0x120ec8.String = 'STR_LIT';
        _0x120ec8.Number = 'NUM_LIT';
      })(_0x52e36f || (exports.LiteralTokenValue = _0x52e36f = {}));
      function _0x251225(_0x3d2667) {
        switch (_0x3d2667.nodeType) {
          case 49:
            return _0x2a2909.String;
          case 40:
            return _0x4d7557(_0x3d2667);
        }
        return _0x2a2909.Null;
      }
      function _0x4d7557(_0x404286) {
        if (_0x404286.d.isInteger) {
          return _0x2a2909.Int;
        } else {
          return _0x2a2909.Float;
        }
      }
      var _0x10d46d;
      (function (_0x319c4a) {
        _0x319c4a.NullSequence = 'N';
        _0x319c4a.SequenceDelimiter = '~';
        _0x319c4a.UnicodeStar = '★ ';
        _0x319c4a.MaxRecommendation = 5;
        _0x319c4a.PrecedingSequenceLength = 2;
        _0x319c4a.CompletionItemCommand = 'vsintellicode.completionItemSelected';
        _0x319c4a.IncludeUnresolvedType = true;
        _0x319c4a.UnresolvedType = 'unktype';
      })(_0x10d46d || (exports.IntelliCodeConstants = _0x10d46d = {}));
      var _0x5498ff;
      (function (_0x682b02) {
        _0x682b02.None = 'None';
        _0x682b02.NotInModel = 'NotInModel';
        _0x682b02.NotInIntersection = 'NotInIntersection';
      })(_0x5498ff || (exports.FailureReason = _0x5498ff = {}));
      var _0x49820f;
      (function (_0x39acfa) {
        _0x39acfa.None = 'None';
        _0x39acfa.Frequency = 'Frequency';
        _0x39acfa.Sequence = 'Sequence';
        _0x39acfa.LSTM = 'LSTM';
      })(_0x49820f || (exports.ModelType = _0x49820f = {}));
      var _0x24660d;
      (function (_0x173d0e) {
        function _0x228a6d(_0x5d3cdf) {
          return _0x5d3cdf.setModelLoadInfo !== undefined && _0x5d3cdf.ensureModelLoaded !== undefined;
        }
        _0x173d0e.is = _0x228a6d;
      })(_0x24660d || (exports.IntelliCodeInterface = _0x24660d = {}));
    },
    3621: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.realZipOpener = _0x42b5c3;
      const _0x551755 = require(41334);
      function _0x42b5c3() {
        return {
          open: _0x2e48ac => new _0x551755.async({
            file: _0x2e48ac
          })
        };
      }
    },
    58093: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ImplementAbstractClassProvider = undefined;
      const _0x39e029 = require(28445);
      const _0x6f0b42 = require(41557);
      const _0x152a9a = require(21024);
      const _0x45d9f2 = require(56814);
      const _0xc06873 = require(59133);
      const _0x8c59fa = require(30048);
      const _0x551c29 = require(19995);
      const _0x57e510 = require(19892);
      class _0x89f8ce {
        constructor(_0x3549f9, _0x17f7d1, _0x5241e5, _0x6f708d, _0x1df8ce) {
          this._program = _0x3549f9;
          this._fileUri = _0x17f7d1;
          this._range = _0x5241e5;
          this._cancellationToken = _0x6f708d;
          this._option = _0x1df8ce;
          this._importAdder = new _0x551c29.ImportAdder(this._program);
          this._indentationUtils = new _0xc06873.IndentationUtils(this._option?.editorIndentConfig ?? _0xc06873.DefaultEditorIndentConfig);
          this._predominantTabSequence = this._indentationUtils.getTabSequence(this._parseResults);
          this._predominantEndOfLineSequence = this._parseResults.tokenizerOutput.predominantEndOfLineSequence;
        }
        implementAllAbstractClasses() {
          if (this._cancellationToken.isCancellationRequested) {
            return;
          }
          const _0x26eddc = this._parseResults.tokenizerOutput.lines;
          const _0xb612bd = _0x45d9f2.convertRangeToTextRange(this._range, _0x26eddc);
          if (!_0xb612bd) {
            return;
          }
          const _0x347ed1 = _0x6f0b42.findNodeByOffset(this._parseResults.parserOutput.parseTree, _0xb612bd.start);
          if (_0x347ed1?.nodeType !== 38) {
            return;
          }
          const _0x371478 = _0x347ed1.parent;
          if (_0x371478?.nodeType !== 10) {
            return;
          }
          const _0x52bdba = this._evaluator.getTypeOfClass(_0x371478);
          if (!_0x52bdba) {
            return;
          }
          const _0x314d55 = _0x89f8ce.canImplementAbstractClass(this._evaluator, _0x347ed1);
          if (!_0x314d55 || _0x314d55.length === 0) {
            return;
          }
          const _0x101a20 = this._indentationUtils.getMethodWithinClassIndentation(this._parseResults, this._range.start.line, this._predominantTabSequence.length);
          const _0x48b713 = this._generateInsertText(_0x314d55, _0x52bdba.classType, _0x101a20);
          const _0x2a5f45 = this._getInsertRange(_0x371478);
          const _0x55ffe9 = this._importAdder.applyImports(this._fileUri, this._parseResults, _0x347ed1.start, 'absolute', this._cancellationToken);
          const _0x741a40 = this._newEditsAreRightAfterClassDefinition(_0x371478.start, _0x2a5f45.start);
          const _0x682864 = [];
          _0x682864.push({
            fileUri: this._fileUri,
            range: _0x2a5f45,
            replacementText: _0x741a40 ? _0x48b713 : _0x48b713.slice(this._predominantEndOfLineSequence.length)
          });
          for (const _0x2ad092 of _0x55ffe9) {
            _0x682864.push({
              fileUri: this._fileUri,
              ..._0x2ad092
            });
          }
          return _0x682864;
        }
        static canImplementAbstractClass(_0x50d6e4, _0x199c07) {
          const _0x46b367 = _0x199c07.parent;
          if (!_0x46b367 || _0x46b367.nodeType !== 10) {
            return;
          }
          const _0x1de171 = _0x50d6e4.getTypeOfClass(_0x46b367);
          if (!_0x1de171) {
            return;
          }
          const _0x3c3dfa = _0x1de171.classType;
          if (!_0x3c3dfa || !_0x152a9a.isClass(_0x3c3dfa) || !_0x152a9a.ClassType.supportsAbstractMethods(_0x3c3dfa)) {
            return;
          }
          if (_0x152a9a.ClassType.isProtocolClass(_0x3c3dfa)) {
            return;
          }
          const _0x393552 = _0x50d6e4.getAbstractSymbols(_0x3c3dfa);
          const _0x2c574e = _0x393552.filter(_0x264ca7 => _0x264ca7 && !_0x3c3dfa.shared.fields.get(_0x264ca7.symbolName));
          if (_0x2c574e.length === 0) {
            return;
          }
          return _0x2c574e;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        get _parseResults() {
          return this._program.getParseResults(this._fileUri);
        }
        _generateInsertText(_0x250e9b, _0x5088b6, _0x4af026) {
          let _0x5bd729 = '';
          for (const _0x5b148e of _0x250e9b) {
            const _0x27cb48 = _0x5b148e.symbol;
            const _0x108750 = this._evaluator.getEffectiveTypeOfSymbol(_0x27cb48);
            let _0x3a6c8f = [];
            let _0x447f94 = false;
            if (_0x152a9a.isFunction(_0x108750)) {
              const _0x39ea42 = this._printMethodSignatures(_0x5088b6, _0x108750, _0x4af026);
              _0x3a6c8f = _0x39ea42 ? [_0x39ea42] : undefined;
            }
            if (_0x152a9a.isOverloaded(_0x108750)) {
              _0x447f94 = true;
              _0x3a6c8f = this._printOverloadedMethodSignatures(_0x5088b6, _0x108750, _0x4af026);
            }
            if (_0x152a9a.isClassInstance(_0x108750) && _0x152a9a.ClassType.isPropertyClass(_0x108750)) {
              _0x3a6c8f = this._printPropertyMethodSignatures(_0x5088b6, _0x108750, _0x4af026);
            }
            _0x5bd729 += this._printInsertTextForCurrentSymbol(_0x3a6c8f, _0x4af026, _0x447f94);
          }
          _0x5bd729 += `${this._predominantEndOfLineSequence}`;
          return _0x5bd729;
        }
        _printMethodSignatures(_0x426e74, _0x3a03d2, _0x48133f) {
          const _0x136142 = this._tryGetSignatureGeneratorOptions(_0x3a03d2) ?? {
            importAdder: this._importAdder,
            enableTrackingAddImports: true,
            decoratorFilter: ['abstractmethod'],
            dontAddTypeAnnotation: this._option?.dontAddTypeAnnotation
          };
          const _0x43fb9a = new _0x57e510.MethodSignaturesGenerator(this._program, this._fileUri, _0x426e74, _0x3a03d2, _0x136142, this._cancellationToken);
          const _0x91f492 = _0x43fb9a.getMethodSignatureWithDecorators();
          const _0x2ebaad = _0x91f492.decoratorTexts.map(_0x5da5b4 => `${this._predominantEndOfLineSequence}${_0x48133f}@${_0x5da5b4}`).join('');
          const _0x18dbdf = `${this._predominantEndOfLineSequence}${_0x48133f}${_0x91f492.isAsync ? 'async ' : ''}def ${_0x91f492.methodSignature}:`;
          return _0x2ebaad + _0x18dbdf;
        }
        _tryGetSignatureGeneratorOptions(_0x3d078d) {
          const _0x248444 = this._program.serviceProvider.tryGet(_0x8c59fa.PylanceServiceKeys.declarationFinder);
          if (!_0x248444) {
            return undefined;
          }
          const _0x173dcb = _0x248444.getDeclarations(_0x3d078d, this._cancellationToken);
          if (_0x173dcb.length === 0) {
            return undefined;
          }
          const _0x292612 = _0x173dcb.find(_0x39e029.isFunctionDeclaration);
          if (!_0x292612) {
            return undefined;
          }
          const _0x47d93d = _0x292612.node.d.isAsync ?? false;
          return {
            importAdder: this._importAdder,
            enableTrackingAddImports: true,
            decoratorFilter: ['abstractmethod'],
            hasAsyncKeyword: _0x47d93d,
            dontAddTypeAnnotation: this._option?.dontAddTypeAnnotation
          };
        }
        _printOverloadedMethodSignatures(_0x5ccbe9, _0xfda3ab, _0x3bc3c1) {
          const _0x8ca105 = [];
          let _0x3705ab;
          for (const _0x27f531 of _0x152a9a.OverloadedType.getOverloads(_0xfda3ab)) {
            const _0x40a009 = this._printMethodSignatures(_0x5ccbe9, _0x27f531, _0x3bc3c1);
            if (_0x40a009) {
              _0x8ca105.push(_0x40a009);
            }
          }
          const _0x422215 = _0x152a9a.OverloadedType.getImplementation(_0xfda3ab);
          if (_0x422215 && _0x152a9a.isFunction(_0x422215)) {
            const _0x116bb5 = this._printMethodSignatures(_0x5ccbe9, _0x422215, _0x3bc3c1);
            if (_0x116bb5) {
              _0x3705ab = _0x116bb5;
            }
          }
          if (_0x3705ab === undefined) {
            _0x3705ab = this._generateActualImplementationOfOverloadedMethods(_0x152a9a.OverloadedType.getOverloads(_0xfda3ab), _0x3bc3c1);
          }
          _0x8ca105.push(_0x3705ab);
          return _0x8ca105;
        }
        _generateActualImplementationOfOverloadedMethods(_0x3fe064, _0x3386a3) {
          let _0xd52df2 = '';
          if (_0x3fe064.length === 0) {
            return _0xd52df2;
          }
          const _0x218757 = _0x152a9a.FunctionType.isAsync(_0x3fe064[0]);
          const _0x25c31f = _0x3fe064[0].shared.name;
          _0xd52df2 = `${this._predominantEndOfLineSequence}${_0x3386a3}${_0x218757 ? 'async ' : ''}def ${_0x25c31f}(self, *args, **kwargs):`;
          return _0xd52df2;
        }
        _printPropertyMethodSignatures(_0x489f25, _0x1821c1, _0x223037) {
          const _0x45c5bb = [];
          const _0x4ec9b4 = _0x1821c1.priv.fgetInfo?.methodType;
          if (_0x4ec9b4) {
            const _0x5e9d74 = this._printMethodSignatures(_0x489f25, _0x4ec9b4, _0x223037);
            if (_0x5e9d74) {
              _0x45c5bb.push(_0x5e9d74);
            }
          }
          const _0x26392d = _0x1821c1.priv.fsetInfo?.methodType;
          if (_0x26392d) {
            const _0x3f649f = this._printMethodSignatures(_0x489f25, _0x26392d, _0x223037);
            if (_0x3f649f) {
              _0x45c5bb.push(_0x3f649f);
            }
          }
          const _0x23bdf4 = _0x1821c1.priv.fdelInfo?.methodType;
          if (_0x23bdf4) {
            const _0x22b793 = this._printMethodSignatures(_0x489f25, _0x23bdf4, _0x223037);
            if (_0x22b793) {
              _0x45c5bb.push(_0x22b793);
            }
          }
          return _0x45c5bb;
        }
        _printInsertTextForCurrentSymbol(_0xaa4571, _0x50b23a, _0x40d402) {
          let _0x2e69db = '';
          if (!_0xaa4571 || _0xaa4571.length === 0) {
            return _0x2e69db;
          }
          const _0x1c0db2 = `${this._predominantEndOfLineSequence}${_0x50b23a}${this._predominantTabSequence}...`;
          const _0x9f0982 = `${this._predominantEndOfLineSequence}${_0x50b23a}${this._predominantTabSequence}raise NotImplementedError`;
          for (let _0x120aec = 0; _0x120aec < _0xaa4571.length; _0x120aec++) {
            const _0x29c90d = _0xaa4571[_0x120aec];
            if (_0x29c90d.length === 0) {
              continue;
            }
            if (!_0x40d402) {
              _0x2e69db += `${this._predominantEndOfLineSequence}${_0x29c90d}${_0x9f0982}`;
            } else {
              if (_0x120aec === _0xaa4571.length - 1) {
                _0x2e69db += `${this._predominantEndOfLineSequence}${_0x29c90d}${_0x9f0982}`;
              } else {
                _0x2e69db += `${this._predominantEndOfLineSequence}${_0x29c90d}${_0x1c0db2}`;
              }
            }
          }
          return _0x2e69db;
        }
        _getInsertRange(_0x4fc6cf) {
          const _0x3a25ab = this._parseResults.tokenizerOutput.lines;
          const _0x452a71 = this._parseResults.tokenizerOutput.tokens;
          const _0x5efb26 = _0x4fc6cf.d.suite.d.statements;
          const _0x1165a7 = _0x5efb26.length > 0 ? _0x5efb26[_0x5efb26.length - 1] : undefined;
          if (_0x1165a7 && _0x1165a7.nodeType === 47 && _0x1165a7.d.statements.length > 0) {
            const _0x572fee = _0x1165a7.d.statements[_0x1165a7.d.statements.length - 1];
            if (_0x572fee.nodeType === 42 || _0x572fee.nodeType === 21) {
              const _0x279a14 = this._indentationUtils.findNonWhitespaceTokenAtOrBeforeOffset(_0x452a71, _0x572fee.start - 1);
              return _0x45d9f2.convertOffsetsToRange(_0x279a14 ? _0x279a14.start + _0x279a14.length : _0x572fee.start, _0x572fee.start + _0x572fee.length, _0x3a25ab);
            }
          }
          const _0x12387b = _0x4fc6cf.d.suite.start + _0x4fc6cf.d.suite.length;
          return _0x45d9f2.convertOffsetsToRange(_0x12387b, _0x12387b, _0x3a25ab);
        }
        _newEditsAreRightAfterClassDefinition(_0x5d87f1, _0x484094) {
          const _0x25f676 = _0x45d9f2.convertOffsetToPosition(_0x5d87f1, this._parseResults.tokenizerOutput.lines);
          if (_0x25f676.line === _0x484094.line) {
            return false;
          }
          return true;
        }
      }
      exports.ImplementAbstractClassProvider = _0x89f8ce;
    },
    8239: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.TypeHierarchyProvider = undefined;
      const _0x41892c = require(26687);
      const _0x3a8e66 = require(28445);
      const _0x438559 = require(83760);
      const _0x5534ba = require(41557);
      const _0x5a2d5d = require(3433);
      const _0x2f5b0d = require(21024);
      const _0x41a1a0 = require(92324);
      const _0x399bdc = require(91426);
      const _0x22cd2f = require(58147);
      const _0x11cb97 = require(56412);
      const _0x18f362 = require(56814);
      const _0x38c8c4 = require(88754);
      const _0x28b79b = require(5884);
      const _0x381a59 = require(67032);
      const _0x1d624e = require(47091);
      const _0x431b46 = require(19013);
      const _0x288f8b = require(30048);
      const _0x5a388e = require(61904);
      class _0x143803 {
        constructor(_0x693e94, _0x5a6020, _0x4c7514, _0x560257) {
          this._program = _0x693e94;
          this._fileUri = _0x5a6020;
          this._position = _0x4c7514;
          this._token = _0x560257;
        }
        onPrepare() {
          _0x399bdc.throwIfCancellationRequested(this._token);
          const _0x4d0654 = this._program.getParseResults(this._fileUri);
          if (!_0x4d0654) {
            return null;
          }
          const _0x312d30 = _0x18f362.convertPositionToOffset(this._position, _0x4d0654.tokenizerOutput.lines);
          if (_0x312d30 === undefined) {
            return null;
          }
          const _0x8d9db6 = _0x5534ba.findNodeByOffset(_0x4d0654.parserOutput.parseTree, _0x312d30);
          if (_0x8d9db6 === undefined) {
            return null;
          }
          if (_0x8d9db6.nodeType !== 38) {
            return null;
          }
          const _0x1150fa = _0x381a59.DocumentSymbolCollector.getDeclarationsForNode(this._program, _0x8d9db6, true, this._token);
          if (_0x1150fa.length === 0) {
            return null;
          }
          const _0x2e98dd = this._createTypeHierarchyItem(_0x1150fa, undefined, _0x8d9db6);
          if (!_0x2e98dd || _0x2e98dd.name.length === 0) {
            return null;
          }
          return [_0x2e98dd];
        }
        onSupertypes(_0x1475d3) {
          _0x399bdc.throwIfCancellationRequested(this._token);
          const _0x3860e0 = _0x1475d3.data;
          if (!_0x3860e0) {
            return null;
          }
          if (!this._isSupportedKind(_0x3860e0.kind)) {
            return null;
          }
          switch (_0x3860e0.kind) {
            case 7:
            case 6:
              return this._handleClassSupertypes(_0x1475d3.data);
            case 5:
              return this._handleMethodSupertypes(_0x1475d3.data);
          }
          return null;
        }
        onSubtypes(_0x3ea235) {
          _0x399bdc.throwIfCancellationRequested(this._token);
          const _0x3cf7fb = _0x3ea235.data;
          if (!_0x3cf7fb) {
            return null;
          }
          if (!this._isSupportedKind(_0x3cf7fb.kind)) {
            return null;
          }
          switch (_0x3cf7fb.kind) {
            case 7:
            case 6:
              return this._handleClassSubtypes(_0x3ea235.data);
            case 5:
              return this._handleMethodSubtypes(_0x3ea235.data);
          }
          return null;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _handleMethodSupertypes(_0x5d5fe9) {
          const _0x2b4a6e = this._program.getParseResults(this._fileUri);
          if (!_0x2b4a6e) {
            return null;
          }
          const _0x52a224 = _0x5534ba.getFirstAncestorOrSelfOfKind(_0x5534ba.findNodeByOffset(_0x2b4a6e.parserOutput.parseTree, _0x5d5fe9.offset), 31);
          if (!_0x52a224 || _0x52a224.d.name.d.value.length === 0) {
            return null;
          }
          const _0x128093 = _0x5534ba.getEnclosingClass(_0x52a224, true);
          if (!_0x128093) {
            return null;
          }
          const _0x236f8a = this._evaluator.getTypeOfClass(_0x128093);
          if (!_0x236f8a) {
            return null;
          }
          const _0x1cd61c = [];
          for (const _0x34eaa2 of _0x236f8a.classType.shared.baseClasses) {
            _0x399bdc.throwIfCancellationRequested(this._token);
            if (!_0x2f5b0d.isClass(_0x34eaa2)) {
              continue;
            }
            const _0x2ad969 = _0x41a1a0.lookUpClassMember(_0x34eaa2, _0x52a224.d.name.d.value, 64);
            if (!_0x2ad969) {
              continue;
            }
            const _0x672e6 = _0x2ad969.symbol.getDeclarations().filter(_0x277397 => this._isSupportedDecl(_0x277397));
            const _0x3bd49c = this._createTypeHierarchyItem(_0x672e6, undefined, _0x128093.d.name);
            if (!_0x3bd49c) {
              continue;
            }
            this._addIfUnique(_0x1cd61c, _0x3bd49c);
          }
          return _0x1cd61c;
        }
        _handleMethodSubtypes(_0x1c96d3) {
          const _0x4b6724 = this._program.getParseResults(this._fileUri);
          if (!_0x4b6724) {
            return null;
          }
          const _0x207948 = _0x5534ba.getFirstAncestorOrSelfOfKind(_0x5534ba.findNodeByOffset(_0x4b6724.parserOutput.parseTree, _0x1c96d3.offset), 31);
          if (!_0x207948 || _0x207948.d.name.d.value.length === 0) {
            return null;
          }
          const _0x1b2596 = this._evaluator.getTypeOfFunction(_0x207948);
          if (!_0x1b2596) {
            return null;
          }
          const _0x44e317 = [];
          for (const _0x2df758 of this._program.getSourceFileInfoList().filter(_0x2545b1 => _0x5a2d5d.isUserCode(_0x2545b1))) {
            _0x399bdc.throwIfCancellationRequested(this._token);
            const _0x5d0fb3 = _0x2df758.sourceFile.getFileContent();
            if (_0x5d0fb3 && _0x5d0fb3.search(_0x207948.d.name.d.value) < 0) {
              continue;
            }
            const _0x38128c = this._program.getParseResults(_0x2df758.sourceFile.getUri());
            if (!_0x38128c) {
              continue;
            }
            for (const _0x5d5e26 of _0x431b46.getNodesInRange(_0x38128c, 31, this._token)) {
              if (_0x5d5e26.d.name.d.value !== _0x207948.d.name.d.value) {
                continue;
              }
              const _0x670687 = _0x5534ba.getEnclosingClass(_0x5d5e26, true);
              if (!_0x670687) {
                continue;
              }
              const _0xd62df5 = this._evaluator.getTypeOfClass(_0x670687);
              if (!_0xd62df5) {
                continue;
              }
              const _0x46b677 = [];
              for (const _0x220750 of _0x5a388e.lookUpClassMembers(_0xd62df5.classType, _0x207948.d.name.d.value, 65)) {
                if (!_0x220750) {
                  continue;
                }
                this._addPreviousMemberIfNeeded(_0x220750, _0x46b677);
                const _0x53f6a1 = this._createMethodSubItem(_0x220750.symbol, _0x1b2596.functionType, _0x5d5e26.d.name);
                if (!_0x53f6a1) {
                  continue;
                }
                if (this._isAlreadyOverriden(_0x220750, _0x46b677)) {
                  break;
                }
                this._addIfUnique(_0x44e317, _0x53f6a1);
                break;
              }
            }
            this._program.handleMemoryHighUsage();
          }
          return _0x44e317;
        }
        _addPreviousMemberIfNeeded(_0x5f27eb, _0x5cad8f) {
          if (!_0x2f5b0d.isClass(_0x5f27eb.classType)) {
            return;
          }
          _0x5cad8f.push(_0x5f27eb.classType);
        }
        _isAlreadyOverriden(_0x37bf61, _0x3a89b5) {
          if (!_0x2f5b0d.isClass(_0x37bf61.classType)) {
            return true;
          }
          const _0x1f9ddc = new Set();
          _0x1f9ddc.add(_0x37bf61.classType.shared);
          const _0x541584 = _0x37bf61.classType;
          for (const _0x44ecff of _0x3a89b5) {
            if (_0x1f9ddc.has(_0x44ecff.shared)) {
              continue;
            }
            if (_0x44ecff.shared.mro.some(_0x3680f6 => {
              if (!_0x2f5b0d.isClass(_0x3680f6)) {
                return true;
              }
              _0x1f9ddc.add(_0x3680f6.shared);
              return _0x3680f6.shared === _0x541584.shared;
            })) {
              return true;
            }
          }
          return false;
        }
        _createMethodSubItem(_0x3cb806, _0x4815e5, _0x2c73af) {
          for (const _0x3df864 of _0x3cb806.getDeclarations()) {
            if (!_0x3a8e66.isFunctionDeclaration(_0x3df864)) {
              continue;
            }
            const _0x431a1b = this._evaluator.getInferredTypeOfDeclaration(_0x3cb806, _0x3df864);
            if (!_0x431a1b) {
              continue;
            }
            const _0x1a1552 = _0x2f5b0d.isFunction(_0x431a1b) && _0x431a1b === _0x4815e5 || _0x2f5b0d.isOverloaded(_0x431a1b) && _0x2f5b0d.OverloadedType.getOverloads(_0x431a1b).some(_0x535242 => _0x535242 === _0x4815e5) || _0x2f5b0d.isOverloaded(_0x431a1b) && _0x2f5b0d.OverloadedType.getImplementation(_0x431a1b) === _0x4815e5;
            if (!_0x1a1552) {
              continue;
            }
            const _0x291de3 = this._evaluator.getDeclInfoForNameNode(_0x2c73af)?.decls;
            if (!_0x291de3 || _0x291de3.length === 0) {
              return undefined;
            }
            return this._createTypeHierarchyItem(_0x291de3, undefined);
          }
          return undefined;
        }
        _handleClassSupertypes(_0x15b700) {
          const _0x4404f3 = this._program.getParseResults(this._fileUri);
          if (!_0x4404f3) {
            return null;
          }
          const _0x29d123 = this._getClassNameAndType(_0x4404f3.parserOutput, _0x15b700);
          if (!_0x29d123) {
            return null;
          }
          const _0xba6c57 = this._program.serviceProvider.tryGet(_0x288f8b.PylanceServiceKeys.declarationFinder);
          if (!_0xba6c57) {
            return null;
          }
          const _0x15279b = [];
          for (const _0x5d7932 of _0x29d123.type.shared.baseClasses) {
            _0x399bdc.throwIfCancellationRequested(this._token);
            if (!_0x2f5b0d.isClass(_0x5d7932)) {
              continue;
            }
            const _0x1e91d0 = _0xba6c57.getDeclarations(_0x5d7932, this._token);
            if (_0x1e91d0.length === 0) {
              continue;
            }
            const _0x1151d3 = this._createTypeHierarchyItem(_0x1e91d0, _0x5d7932.priv.aliasName, _0x29d123.name);
            if (!_0x1151d3) {
              continue;
            }
            this._addIfUnique(_0x15279b, _0x1151d3);
          }
          return _0x15279b;
        }
        _handleClassSubtypes(_0x12a8d7) {
          const _0x45d3cc = this._program.getParseResults(this._fileUri);
          if (!_0x45d3cc) {
            return null;
          }
          const _0x34ccc9 = this._getClassNameAndType(_0x45d3cc.parserOutput, _0x12a8d7);
          if (!_0x34ccc9) {
            return null;
          }
          const _0x1388b6 = [];
          for (const _0x33ef6d of this._program.getSourceFileInfoList().filter(_0x5ce1cc => _0x5a2d5d.isUserCode(_0x5ce1cc))) {
            _0x399bdc.throwIfCancellationRequested(this._token);
            const _0x2acac7 = this._program.getParseResults(_0x33ef6d.sourceFile.getUri());
            if (!_0x2acac7) {
              continue;
            }
            for (const _0x46c4b4 of _0x431b46.getNodesInRange(_0x2acac7, 10, this._token)) {
              const _0xb8527d = this._evaluator.getTypeOfClass(_0x46c4b4);
              if (!_0xb8527d) {
                continue;
              }
              const _0x3e815c = this._createClassSubItem(_0xb8527d.classType.shared.baseClasses, _0x34ccc9.type, _0xb8527d.classType, _0x46c4b4.d.name);
              if (!_0x3e815c) {
                continue;
              }
              this._addIfUnique(_0x1388b6, _0x3e815c);
            }
            this._program.handleMemoryHighUsage();
          }
          return _0x1388b6;
        }
        _getClassNameAndType(_0x21dee7, _0x409396) {
          const _0x4320ae = _0x5534ba.getFirstAncestorOrSelfOfKind(_0x5534ba.findNodeByOffset(_0x21dee7.parseTree, _0x409396.offset), 10);
          if (_0x4320ae && _0x4320ae.d.name.d.value.length > 0) {
            const _0x5314b8 = this._evaluator.getTypeOfClass(_0x4320ae);
            if (_0x5314b8) {
              return {
                name: _0x4320ae.d.name,
                type: this._getOriginalForm(_0x5314b8.classType)
              };
            }
          }
          const _0x2f231f = _0x5534ba.getFirstAncestorOrSelfOfKind(_0x5534ba.findNodeByOffset(_0x21dee7.parseTree, _0x409396.offset), 54);
          if (!_0x2f231f || _0x2f231f.d.valueExpr.nodeType !== 38 || _0x2f231f.d.valueExpr.d.value.length === 0) {
            return undefined;
          }
          const _0x33aa47 = this._evaluator.getType(_0x2f231f.d.valueExpr);
          if (!_0x33aa47 || !_0x2f5b0d.isClass(_0x33aa47)) {
            return undefined;
          }
          return {
            name: _0x2f231f.d.valueExpr,
            type: this._getOriginalForm(_0x33aa47)
          };
        }
        _getOriginalForm(_0x1830e8) {
          if (!_0x1830e8.priv.typeArgs && !_0x1830e8.props?.typeAliasInfo) {
            return _0x1830e8;
          }
          if (_0x1830e8.shared.mro.length === 0 || !_0x2f5b0d.isClass(_0x1830e8.shared.mro[0])) {
            return _0x1830e8;
          }
          return this._getOriginalForm(_0x1830e8.shared.mro[0]);
        }
        _createClassSubItem(_0x1bf39d, _0x13092a, _0x4528e4, _0x586cb3) {
          for (const _0x12a5bf of _0x1bf39d) {
            if (!_0x2f5b0d.isClass(_0x12a5bf) || !_0x2f5b0d.ClassType.isSameGenericClass(this._getOriginalForm(_0x12a5bf), _0x13092a)) {
              continue;
            }
            const _0x54fc64 = this._evaluator.getDeclInfoForNameNode(_0x586cb3)?.decls;
            if (!_0x54fc64 || _0x54fc64.length === 0) {
              return undefined;
            }
            return this._createTypeHierarchyItem(_0x54fc64, _0x4528e4.priv.aliasName);
          }
          return undefined;
        }
        _createTypeHierarchyItem(_0xa3c40f, _0x53467e, _0x2d1ae0) {
          const _0x26f20f = this._getBestDeclaration(_0xa3c40f, _0x53467e, _0x2d1ae0);
          if (!this._isSupportedDecl(_0x26f20f.declaration) || !_0x1d624e.canNavigateToFile(this._program.fileSystem, _0x26f20f.declaration.uri)) {
            return undefined;
          }
          const _0x36ea45 = _0x11cb97.getSymbolKind(_0x26f20f.declaration, this._evaluator, _0x26f20f.symbolName);
          if (_0x36ea45 === undefined) {
            return undefined;
          }
          const _0x110178 = this._program.getParseResults(_0x26f20f.declaration.uri);
          const _0x1bd5ce = _0x110178 ? _0x18f362.convertTextRangeToRange(_0x26f20f.declaration.node, _0x110178.tokenizerOutput.lines) : _0x26f20f.declaration.range;
          return {
            kind: _0x36ea45,
            name: _0x26f20f.symbolName,
            uri: _0x28b79b.convertUriToLspUriString(this._program.fileSystem, _0x26f20f.declaration.uri),
            range: _0x1bd5ce,
            selectionRange: _0x26f20f.declaration.range,
            detail: this._getDetail(_0x26f20f.declaration),
            data: this._getData(_0x26f20f.declaration)
          };
        }
        _getData(_0x4df2d0) {
          return {
            kind: _0x4df2d0.type,
            offset: _0x4df2d0.node.start
          };
        }
        _getDetail(_0x39741f) {
          const _0x2bf1d7 = this._program.fileSystem.getOriginalUri(_0x39741f.uri).fileName;
          switch (_0x39741f.type) {
            case 6:
              {
                return `(${_0x2bf1d7})`;
              }
            case 5:
              {
                const _0x5eaee4 = _0x5534ba.getEnclosingClass(_0x39741f.node, true);
                const _0x38f748 = _0x5eaee4 ? `class ${_0x5eaee4.d.name.d.value}` : '';
                return _0x38f748 + ' (' + _0x2bf1d7 + ')';
              }
          }
          return undefined;
        }
        _getBestDeclaration(_0x4d190a, _0x279935, _0x3a7f28) {
          let _0x359d99 = _0x4d190a[0];
          for (const _0x47d6cb of _0x4d190a) {
            const _0x5e0f9b = this._evaluator.resolveAliasDeclaration(_0x47d6cb, true, {
              allowExternallyHiddenAccess: true,
              skipFileNeededCheck: true
            });
            if (!_0x5e0f9b) {
              continue;
            }
            if (_0x438559.hasTypeForDeclaration(_0x5e0f9b) || !_0x438559.hasTypeForDeclaration(_0x359d99)) {
              if (this._isSupportedDecl(_0x5e0f9b)) {
                _0x359d99 = _0x5e0f9b;
                if (!_0x3a7f28) {
                  continue;
                }
                const _0x2e2cce = _0x41892c.getFileInfo(_0x3a7f28);
                const _0x59a955 = _0x41892c.getFileInfo(_0x5e0f9b.node);
                if (!_0x2e2cce || !_0x59a955) {
                  continue;
                }
                if (!_0x2e2cce.fileUri.equals(_0x59a955.fileUri)) {
                  continue;
                }
                if (!_0x38c8c4.TextRange.containsRange(_0x5e0f9b.node, _0x3a7f28)) {
                  continue;
                }
                break;
              }
            }
          }
          return {
            symbolName: _0x279935 ?? _0x438559.getNameFromDeclaration(_0x359d99) ?? (_0x3a7f28 === null || _0x3a7f28 === undefined ? undefined : _0x3a7f28.d.value) ?? '',
            declaration: _0x359d99
          };
        }
        _addIfUnique(_0x59fb51, _0x14fe9e) {
          _0x22cd2f.addIfUnique(_0x59fb51, _0x14fe9e, this._areSame);
        }
        _areSame(_0x3eb594, _0x4a56be) {
          const _0x38f4bc = _0x3eb594.data;
          const _0x33314c = _0x4a56be.data;
          return _0x38f4bc.kind === _0x33314c.kind && _0x38f4bc.offset === _0x33314c.offset && _0x3eb594.uri === _0x4a56be.uri;
        }
        _isSupportedDecl(_0x55931a) {
          if (!this._isSupportedKind(_0x55931a.type)) {
            return false;
          }
          if (_0x3a8e66.isFunctionDeclaration(_0x55931a)) {
            if (!_0x55931a.isMethod) {
              return false;
            }
            const _0x5cdfd6 = this._evaluator.getTypeForDeclaration(_0x55931a)?.type;
            if (_0x5cdfd6 && _0x41a1a0.isMaybeDescriptorInstance(_0x5cdfd6, false)) {
              return false;
            }
            return true;
          }
          return true;
        }
        _isSupportedKind(_0x562a64) {
          if (_0x562a64 === 7) {
            return true;
          }
          if (_0x562a64 === 6) {
            return true;
          }
          if (_0x562a64 === 5) {
            return true;
          }
          return false;
        }
      }
      exports.TypeHierarchyProvider = _0x143803;
    },
    78459: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedCompletionProvider = undefined;
      const _0x188228 = require(89740);
      const _0xd9bdcd = require(30048);
      const _0x51fbba = require(30579);
      const _0x2661e0 = require(47351);
      const _0x48ac15 = require(72086);
      const _0x2c646f = require(51995);
      class _0x5de431 {
        constructor(_0x80107b, _0x4903a2, _0x548358, _0x411ff4, _0x5083ba, _0x48cc05, _0x325f47, _0x42d04b) {
          this._program = _0x80107b;
          this._supportTelemetry = _0x325f47;
          const _0x4053ce = [];
          if (_0x48cc05) {
            _0x4053ce.push(new _0x2c646f.DocstringTemplateCompletionProvider(_0x80107b, _0x4903a2, _0x548358, _0x411ff4, _0x42d04b));
          }
          _0x4053ce.push(new _0x51fbba.PyTestCompletionProvider(_0x80107b, _0x4903a2, _0x548358, _0x411ff4, _0x42d04b), new _0x48ac15.CompletionProvider(_0x80107b, _0x4903a2, _0x548358, _0x411ff4, _0x5083ba, _0x42d04b));
          this._providers = _0x4053ce;
        }
        getCompletions() {
          return this._addTelemetry(this._getCompletions());
        }
        resolveCompletionItem(_0x188c72) {
          for (const _0x3c7b01 of this._providers) {
            _0x3c7b01.resolveCompletionItem(_0x188c72);
          }
        }
        getMemberAccessInfo() {
          for (const _0x2d3d9b of this._providers) {
            if (_0x2d3d9b instanceof _0x48ac15.CompletionProvider) {
              return _0x2d3d9b.getMemberAccessInfo();
            }
          }
          return undefined;
        }
        getAutoImportInfo() {
          for (const _0x2623ea of this._providers) {
            if (_0x2623ea instanceof _0x48ac15.CompletionProvider) {
              return _0x2623ea.getAutoImportInfo();
            }
          }
          return undefined;
        }
        getSlowCompletionInfo() {
          for (const _0x518a67 of this._providers) {
            const _0x1bcd17 = _0x518a67;
            if (_0x1bcd17.getSlowCompletionInfo !== undefined) {
              const _0x5b35b8 = _0x1bcd17.getSlowCompletionInfo();
              if (_0x5b35b8) {
                return _0x5b35b8;
              }
            }
          }
          return undefined;
        }
        _getCompletions() {
          for (const _0xf8e571 of this._providers) {
            const _0x36487e = _0xf8e571.getCompletions();
            if (!_0x36487e) {
              continue;
            }
            return _0x2661e0.CompletionListConverter.toLSP(_0x36487e);
          }
          return null;
        }
        _addTelemetry(_0x299a15) {
          var _0x4616d3;
          if (!this._supportTelemetry) {
            return _0x299a15;
          }
          const _0x349744 = this.getMemberAccessInfo();
          if (_0x349744 && _0x299a15 && _0x299a15.items.length > 0 && _0x349744.lastKnownModule) {
            const _0x1c0a60 = _0x349744.lastKnownModule.split('.')[0] || _0x349744.lastKnownModule;
            const _0x3a8773 = (_0x4616d3 = this._program.serviceProvider.tryGet(_0xd9bdcd.PylanceServiceKeys.packageDiscoverer)) === null || _0x4616d3 === undefined ? undefined : _0x4616d3.getKnownModuleVersion(this._program, _0x1c0a60);
            _0x299a15.items[0].data = {
              ..._0x299a15.items[0].data,
              moduleHash: _0x188228.hashString(_0x1c0a60),
              moduleVersion: _0x3a8773
            };
          }
          return _0x299a15;
        }
      }
      exports.AggregatedCompletionProvider = _0x5de431;
    },
    95456: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedDefinitionProvider = undefined;
      const _0x17c23e = require(65574);
      const _0x3344bb = require(85040);
      const _0x8ceebc = require(88287);
      class _0x21e812 {
        constructor(_0x282c28, _0x5f1409, _0xe893a2, _0x7a6bc1, _0x351916) {
          this._providers = [new _0x17c23e.DefinitionProvider(_0x282c28, _0x5f1409, _0xe893a2, _0x7a6bc1, _0x351916), new _0x8ceebc.MagicMethodDefinitionProvider(_0x282c28, _0x5f1409, _0xe893a2, _0x7a6bc1, _0x351916), new _0x3344bb.GetAttrMemberDefinitionProvider(_0x282c28, _0x5f1409, _0xe893a2, _0x351916)];
        }
        getDefinitions() {
          let _0x8ce4cc = undefined;
          for (const _0x2f6680 of this._providers) {
            const _0x1a06e5 = _0x2f6680.getDefinitions();
            if (!_0x1a06e5) {
              continue;
            }
            _0x8ce4cc = _0x8ce4cc ?? [];
            _0x8ce4cc.push(..._0x1a06e5);
          }
          return _0x8ce4cc;
        }
      }
      exports.AggregatedDefinitionProvider = _0x21e812;
    },
    84584: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedDocumentSymbolProvider = undefined;
      const _0x1657fa = require(56911);
      const _0x529ca6 = require(86846);
      const _0x1ea921 = require(50753);
      class _0x1a7a92 {
        constructor(_0x425d68, _0x37a39a, _0x2cdebd, _0x12ba6d, _0x587c91) {
          this._program = _0x37a39a;
          this._fileUri = _0x2cdebd;
          this._providers = [new _0x1ea921.DocumentSymbolProvider(_0x425d68, _0x37a39a, _0x2cdebd, _0x12ba6d, _0x587c91)];
        }
        getSymbols() {
          const _0x3f3d9d = [];
          const _0x14a045 = [];
          for (const _0x1d5c77 of this._providers) {
            const _0x188504 = _0x1d5c77.getSymbols();
            if (_0x188504.length === 0) {
              continue;
            }
            if (_0x1657fa.DocumentSymbol.is(_0x188504[0])) {
              _0x3f3d9d.push(..._0x188504);
            } else {
              _0x14a045.push(..._0x188504);
            }
          }
          if (_0x14a045.length > 0) {
            _0x14a045.push(..._0x529ca6.convertToFlatSymbols(this._program, this._fileUri, _0x3f3d9d));
            return _0x14a045;
          }
          return _0x3f3d9d;
        }
      }
      exports.AggregatedDocumentSymbolProvider = _0x1a7a92;
    },
    90463: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedFormatOnTypeProvider = undefined;
      const _0x4d6217 = require(30308);
      class _0x366648 {
        constructor(_0xc4e2c4, _0x5c8ee4, _0x455168, _0x44cb75, _0x52a0eb, _0xbcf185, _0x187082) {
          this._provider = new _0x4d6217.PythonFormatOnTypeProvider(_0xc4e2c4, _0x5c8ee4, _0x455168, _0x44cb75, _0x52a0eb, _0xbcf185, _0x187082);
        }
        formatOnType() {
          return this._provider.formatOnType();
        }
      }
      exports.AggregatedFormatOnTypeProvider = _0x366648;
    },
    30041: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedHoverProvider = undefined;
      const _0xa4161 = require(56911);
      const _0x2fa896 = require(41557);
      const _0x388363 = require(56814);
      const _0x190c6b = require(89740);
      const _0x3701d4 = require(79943);
      const _0x31af18 = require(30048);
      const _0x11d8d8 = require(23169);
      const _0x94ccfe = require(16372);
      const _0xd212b4 = require(60942);
      class _0x482a88 {
        constructor(_0x433b0a, _0x145aa1, _0x4dcfff, _0x4f1b2c, _0xde1cb3, _0x249ab7) {
          this._program = _0x433b0a;
          this._fileUri = _0x145aa1;
          this._position = _0x4dcfff;
          this._format = _0x4f1b2c;
          this._supportTelemetry = _0xde1cb3;
          this._providers = [new _0xd212b4.StringDefinitionHoverProvider(_0x433b0a, _0x145aa1, _0x4dcfff, _0x4f1b2c, _0x249ab7), new _0x11d8d8.PyTestHoverProvider(_0x433b0a, _0x145aa1, _0x4dcfff, _0x4f1b2c, _0x249ab7), new _0x3701d4.HoverProvider(_0x433b0a, _0x145aa1, _0x4dcfff, _0x4f1b2c, _0x249ab7), new _0x94ccfe.MagicMethodHoverProvider(_0x433b0a, _0x145aa1, _0x4dcfff, _0x4f1b2c, _0x249ab7)];
        }
        getHover() {
          return this._addTelemetry(this._getHover());
        }
        _getHover() {
          for (const _0x56af43 of this._providers) {
            const _0x3931eb = _0x56af43.getHover();
            if (_0x3931eb) {
              return _0x3931eb;
            }
          }
          return null;
        }
        _addTelemetry(_0x475942) {
          var _0x462b66;
          var _0x1c0e53;
          if (!_0x475942 || !this._supportTelemetry) {
            return _0x475942;
          }
          const _0x410a2c = this._program.getParseResults(this._fileUri);
          if (!_0x410a2c) {
            return _0x475942;
          }
          const _0x383f83 = _0x388363.convertPositionToOffset(this._position, _0x410a2c.tokenizerOutput.lines);
          if (_0x383f83 === undefined) {
            return _0x475942;
          }
          const _0x2ba4da = _0x2fa896.findNodeByOffset(_0x410a2c.parserOutput.parseTree, _0x383f83);
          if (_0x2ba4da === undefined) {
            return _0x475942;
          }
          if (_0x2ba4da.nodeType !== 38) {
            return _0x475942;
          }
          const _0x14964e = this._program.evaluator.getDeclInfoForNameNode(_0x2ba4da)?.decls;
          if (!_0x14964e || _0x14964e.length === 0) {
            return _0x475942;
          }
          const _0x4ea0cc = _0x3701d4.HoverProvider.getPrimaryDeclaration(_0x14964e);
          if (this._format === _0xa4161.MarkupKind.Markdown) {
            const _0x585209 = _0x4ea0cc.type === 8 ? (_0x462b66 = this._program.evaluator) === null || _0x462b66 === undefined ? undefined : _0x462b66.resolveAliasDeclaration(_0x4ea0cc, true) : _0x4ea0cc;
            const _0x2510b0 = _0x2ba4da.parent?.nodeType === 37 ? _0x2ba4da.parent.d.nameParts[0].d.value : _0x2ba4da.d.value;
            const _0x13d122 = _0x585209?.type === 8 && !_0x585209.moduleName ? _0x2510b0 : _0x585209?.moduleName;
            if (_0x13d122) {
              const _0x564a5b = _0x13d122.split('.')[0] || _0x13d122;
              _0x475942.contents.value += `
<!--moduleHash:${_0x190c6b.hashString(_0x564a5b)}-->`;
              const _0x1f0a71 = (_0x1c0e53 = this._program.serviceProvider.tryGet(_0x31af18.PylanceServiceKeys.packageDiscoverer)) === null || _0x1c0e53 === undefined ? undefined : _0x1c0e53.getKnownModuleVersion(this._program, _0x564a5b);
              if (_0x1f0a71) {
                _0x475942.contents.value += `
<!--moduleVersion:${_0x1f0a71}-->`;
              }
            }
          }
          return _0x475942;
        }
      }
      exports.AggregatedHoverProvider = _0x482a88;
    },
    29215: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedRenameProvider = undefined;
      const _0x4c1f2d = require(79725);
      const _0x2e6d06 = require(78926);
      class _0x825a17 {
        constructor(_0x36fadc, _0x148826, _0x2c1597, _0x4c7add) {
          this._providers = [new _0x4c1f2d.RenameProvider(_0x36fadc, _0x148826, _0x2c1597, _0x4c7add), new _0x2e6d06.RenameModuleProvider(_0x36fadc, _0x148826, _0x2c1597, _0x4c7add)];
        }
        canRenameSymbol(_0xe3dd1f, _0x3f15a4) {
          for (const _0xaab4a9 of this._providers) {
            const _0x2b2b9b = _0xaab4a9.canRenameSymbol(_0xe3dd1f, _0x3f15a4);
            if (_0x2b2b9b) {
              return _0x2b2b9b;
            }
          }
          return null;
        }
        renameSymbol(_0x30f21b, _0x307906, _0x387ace) {
          for (const _0x2f2bb1 of this._providers) {
            if (!_0x2f2bb1.canRenameSymbol(_0x307906, _0x387ace)) {
              continue;
            }
            const _0x5eb706 = _0x2f2bb1.renameSymbol(_0x30f21b, _0x307906, _0x387ace);
            if (_0x5eb706) {
              return _0x5eb706;
            }
          }
          return null;
        }
      }
      exports.AggregatedRenameProvider = _0x825a17;
    },
    44078: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AggregatedWorkspaceSymbolProvider = undefined;
      const _0x2342e6 = require(2565);
      class _0x3b6529 {
        constructor(_0x44765c, _0x41cc8a, _0x9a9555, _0x5cc034, _0x9c8b28) {
          this._providers = [new _0x2342e6.WorkspaceSymbolProvider(_0x44765c, _0x41cc8a, _0x9a9555, _0x5cc034, _0x9c8b28)];
        }
        reportSymbols() {
          const _0x4fe49f = [];
          for (const _0x301b84 of this._providers) {
            _0x4fe49f.push(..._0x301b84.reportSymbols());
          }
          return _0x4fe49f;
        }
      }
      exports.AggregatedWorkspaceSymbolProvider = _0x3b6529;
    },
    27555: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CodeActionProvider = undefined;
      const _0x3a9c78 = require(56911);
      const _0x3f026c = require(28445);
      const _0x585ecd = require(47610);
      const _0x5af975 = require(41557);
      const _0x24a829 = require(21024);
      const _0xe93078 = require(91426);
      const _0x288505 = require(23574);
      const _0x46e508 = require(34455);
      const _0x2e5e1a = require(65880);
      const _0x2f4d90 = require(56412);
      const _0x3a2f43 = require(56814);
      const _0x2e7724 = require(88754);
      const _0x623108 = require(30741);
      const _0x443570 = require(27130);
      const _0x3668d4 = require(99482);
      const _0x103dc8 = require(23898);
      const _0x149904 = require(33474);
      const _0xc68d1f = require(24122);
      const _0x5f4403 = require(59133);
      const _0x206d91 = require(44889);
      const _0x4feb31 = require(45210);
      const _0xf6c4ab = require(30048);
      const _0x35f6e1 = require(15986);
      const _0x2f106b = require(93115);
      const _0x125d0b = require(55648);
      const _0x222920 = require(67142);
      const _0x25b72c = require(64057);
      const _0x2244b0 = require(87997);
      const _0x428ac1 = require(66609);
      const _0x31cc21 = require(4449);
      const _0x2b1aec = require(58093);
      const _0x17ebc8 = require(31605);
      const _0x9b2244 = require(76966);
      class _0x3915d8 {
        static matchesKind(_0x595779, _0x28192e) {
          if (!_0x595779 || _0x595779.length === 0) {
            return true;
          }
          return _0x28192e.some(_0x4f72ee => _0x595779.some(_0x30948f => _0x4f72ee.startsWith(_0x30948f)));
        }
        static async getCodeActionsForPosition(_0xc90505, _0x173593, _0x5ad673, _0x31ddba, _0x17505b, _0x935672) {
          _0xe93078.throwIfCancellationRequested(_0x935672);
          if (_0xc90505.disableLanguageServices) {
            return [];
          }
          const _0x5f118e = _0x31ddba.only;
          const _0x555dc2 = [];
          const _0x54ab68 = _0xc90505.service.getParseResults(_0x173593);
          if (!_0x54ab68) {
            return [];
          }
          if (_0x31ddba.triggerKind === _0x3a9c78.CodeActionTriggerKind.Invoked) {
            await _0xc90505.service.analyzeFile(_0x173593, _0x935672);
          }
          if (_0x5f118e && this.matchesKind(_0x5f118e, _0x4feb31.pylanceSourceActionKinds)) {
            await _0x4ca290(_0xc90505, _0x173593, _0x5f118e, _0x54ab68, _0x555dc2, _0x935672);
          }
          if (!_0x5f118e || _0x5f118e.some(_0x3524cc => _0x3524cc.startsWith(_0x3a9c78.CodeActionKind.QuickFix))) {
            const _0x219065 = await _0xc90505.service.getDiagnosticsForRange(_0x173593, _0x5ad673, _0x935672);
            _0x9bbf20(_0x173593, _0x219065, _0x555dc2, _0x935672);
            new _0x125d0b.AddImports(_0xc90505, _0x17505b).appendCodeActions(_0x173593, _0x219065, _0x555dc2, _0x935672);
            new _0x25b72c.ChangeSpelling(_0xc90505, _0x17505b).appendCodeActions(_0x173593, _0x219065, _0x555dc2, _0x935672);
            new _0x2244b0.SearchImports(_0xc90505, _0x17505b).appendCodeActions(_0x173593, _0x219065, _0x555dc2, _0x935672);
            _0x43b9a4(_0xc90505, _0x173593, _0x219065, _0x17505b, _0x555dc2, _0x935672);
            _0x222920.AddTypeIgnore.addAddTypeIgnoreCodeActions(_0xc90505, _0x173593, _0x219065, _0x555dc2, _0x935672);
            _0xed244c(_0xc90505, _0x173593, _0x219065, _0x17505b, _0x555dc2, _0x935672);
            _0x541e57(_0xc90505, _0x173593, _0x219065, _0x555dc2, _0x935672);
            _0x4bc007(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x555dc2, _0x935672);
            _0x40efb9(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x555dc2, _0x935672);
          }
          if (this.matchesKind(_0x5f118e, _0x4feb31.pylanceRefactorActionKinds)) {
            await _0x1475f9(_0xc90505, _0x173593, _0x5f118e, _0x5ad673, _0x54ab68, _0x17505b, _0x555dc2, _0x935672);
            _0xba0ef8(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x3a9c78.CodeActionKind.Refactor, _0x555dc2, _0x935672);
            _0x1ed9df(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x555dc2, _0x935672);
            _0x4b0c6c(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x17505b, _0x555dc2, _0x935672);
            _0x2f106b.pyTestCodeAction.addCodeActions(_0xc90505, _0x173593, _0x5ad673, _0x54ab68, _0x555dc2, _0x935672);
          }
          return _0x555dc2.filter(_0x4b2952 => !_0x5f118e || !_0x4b2952.kind || _0x5f118e.some(_0x39b1ed => _0x4b2952.kind.startsWith(_0x39b1ed)));
        }
      }
      exports.CodeActionProvider = _0x3915d8;
      function _0x4b0c6c(_0x522b1c, _0x11b5aa, _0xbe3e33, _0x1bf618, _0x144981, _0x15426a, _0x110c4c) {
        _0xe93078.throwIfCancellationRequested(_0x110c4c);
        if (!_0x144981 || _0x206d91.NotebookUriMapper.isNotebookCell(_0x11b5aa) || _0x522b1c.kinds.some(_0x538afb => _0x538afb === _0x623108.WellKnownWorkspaceKinds.Limited)) {
          return;
        }
        _0x522b1c.service.run(_0x3858be => {
          const _0x3daf5e = _0x3858be.evaluator;
          const _0x3426a0 = _0x3a2f43.convertRangeToTextRange(_0xbe3e33, _0x1bf618.tokenizerOutput.lines);
          if (!_0x3426a0 || !_0x3daf5e) {
            return;
          }
          const _0x4350a8 = _0x5af975.findNodeByOffset(_0x1bf618.parserOutput.parseTree, _0x3426a0.start);
          if (_0x4350a8?.nodeType !== 38) {
            return;
          }
          const _0x2d7f53 = _0x17ebc8.MoveSymbolProvider.canMoveSymbol(_0x522b1c.service.getConfigOptions(), _0x3daf5e, _0x4350a8);
          if (!_0x2d7f53.succeeded) {
            return;
          }
          const _0x4b430e = _0x522b1c.service.cancellationProvider.createCancellationTokenSource();
          const _0x24e9f9 = _0xe93078.getCancellationTokenId(_0x4b430e.token);
          _0x15426a.push(_0x257621(_0x35f6e1.Localizer.CodeAction.MoveSymbol.moveSymbolsTo(), _0x4feb31.PylanceCodeActionKind.RefactorMove.ToFile, 'pick'));
          _0x15426a.push(_0x257621(_0x35f6e1.Localizer.CodeAction.MoveSymbol.moveSymbolsToNewFile(), _0x4feb31.PylanceCodeActionKind.RefactorMove.ToNewFile, 'new'));
          function _0x257621(_0x31d2a2, _0x5ae1e6, _0x30722b) {
            return _0x3a9c78.CodeAction.create(_0x31d2a2, _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.MoveSymbol.commandTitle(), _0x443570.ClientCommands.moveSymbolWithFileSelection, _0x11b5aa.toString(), _0xbe3e33, _0x30722b, _0x24e9f9), _0x5ae1e6);
          }
        }, _0x110c4c);
      }
      function _0x1ed9df(_0x10614a, _0x1ff2df, _0x440430, _0x3843bd, _0x4f3e4b, _0x29ab1c) {
        _0xe93078.throwIfCancellationRequested(_0x29ab1c);
        if (!_0x10614a.rootUri || _0x206d91.NotebookUriMapper.isNotebookCell(_0x1ff2df)) {
          return;
        }
        _0x10614a.service.run(_0x7885fc => {
          const _0x1c4802 = _0x3668d4.getImportPathInfo(_0x7885fc, _0x10614a.rootUri, _0x3843bd, _0x440430);
          if (!_0x1c4802) {
            return;
          }
          if (_0x1c4802.importFrom.d.module.d.leadingDots === 0) {
            if (!_0x585ecd.getRelativeModuleName(_0x7885fc.fileSystem, _0x1ff2df, _0x1c4802.targetPath, _0x7885fc.configOptions)) {
              return;
            }
            _0x4f3e4b.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertToRelativePath(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertToRelativePath(), _0x443570.Commands.convertImportFormat, _0x1ff2df.toString(), 'relative', _0x440430), _0x3a9c78.CodeActionKind.Refactor), _0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllToRelativePath(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllToRelativePath(), _0x443570.Commands.convertImportFormat, _0x1ff2df.toString(), 'relative'), _0x3a9c78.CodeActionKind.Refactor));
            return;
          }
          if (!_0x3668d4.getAbsoluteModuleName(_0x7885fc, _0x1ff2df, _0x1c4802.targetPath)) {
            return;
          }
          _0x4f3e4b.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertToAbsolutePath(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertToAbsolutePath(), _0x443570.Commands.convertImportFormat, _0x1ff2df.toString(), 'absolute', _0x440430), _0x3a9c78.CodeActionKind.Refactor), _0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllToAbsolutePath(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllToAbsolutePath(), _0x443570.Commands.convertImportFormat, _0x1ff2df.toString(), 'absolute'), _0x3a9c78.CodeActionKind.Refactor));
        }, _0x29ab1c);
      }
      async function _0x1475f9(_0x5af0d0, _0x2bc484, _0x3bb75d, _0x16633a, _0x2d42b5, _0x5c37ba, _0x3e3a88, _0x579399) {
        _0xe93078.throwIfCancellationRequested(_0x579399);
        if (!_0x5af0d0.enableExtractCodeAction) {
          return;
        }
        const _0x879e0 = _0x3a2f43.convertRangeToTextRange(_0x16633a, _0x2d42b5.tokenizerOutput.lines);
        if (!_0x879e0) {
          return;
        }
        await _0x48c50c(_0x3bb75d, _0x4feb31.PylanceCodeActionKind.RefactorExtract.Method, _0x4f7840 => {
          _0x5af0d0.service.run(_0x2fc68d => {
            const _0x554f13 = _0x9b2244.ExtractMethodProvider.canExtractMethod(_0x2d42b5, _0x879e0, _0x2fc68d.evaluator);
            if (_0x554f13.failedReason === _0x9b2244.CannotExtractReason.None) {
              const _0xf50929 = _0x35f6e1.Localizer.CodeAction.Extract.method();
              _0x3e3a88.push(_0x3a9c78.CodeAction.create(_0xf50929, _0x288505.createCommand(_0xf50929, _0x5c37ba ? _0x443570.ClientCommands.extractMethodWithRename : _0x443570.Commands.extractMethod, _0x2bc484.toString(), _0x16633a), _0x4f7840));
            }
          }, _0x579399);
        });
        await _0x48c50c(_0x3bb75d, _0x4feb31.PylanceCodeActionKind.RefactorExtract.Variable, _0x53cdff => {
          const _0x254653 = _0x9b2244.ExtractMethodProvider.canExtractVariable(_0x2d42b5, _0x879e0);
          if (_0x254653.failedReason === _0x9b2244.CannotExtractReason.None) {
            const _0x4c6e72 = _0x35f6e1.Localizer.CodeAction.Extract.variable();
            _0x3e3a88.push(_0x3a9c78.CodeAction.create(_0x4c6e72, _0x288505.createCommand(_0x4c6e72, _0x5c37ba ? _0x443570.ClientCommands.extractVariableWithRename : _0x443570.Commands.extractVariable, _0x2bc484.toString(), _0x16633a), _0x53cdff));
          }
        });
      }
      function _0x9bbf20(_0x24f30f, _0x355e1a, _0x1d677e, _0xfe6bf2) {
        _0xe93078.throwIfCancellationRequested(_0xfe6bf2);
        const _0x494595 = _0x149904.getUnusedImportDiagnostics(_0x355e1a);
        if (_0x494595.length === 0) {
          return;
        }
        const _0x32a2d1 = _0x494595[0].range;
        _0x1d677e.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeUnusedImport(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeUnusedImport(), _0x443570.Commands.removeUnusedImport, _0x24f30f.toString(), _0x32a2d1), _0x3a9c78.CodeActionKind.QuickFix), _0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeAllUnusedImports(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeAllUnusedImports(), _0x443570.Commands.removeUnusedImport, _0x24f30f.toString()), _0x3a9c78.CodeActionKind.QuickFix));
      }
      async function _0x48c50c(_0x586154, _0x3689e1, _0x219e1e) {
        if (_0x586154 && !_0x586154.some(_0x1a4486 => _0x3689e1.startsWith(_0x1a4486))) {
          return;
        }
        const _0x2e32db = _0x219e1e(_0x3689e1);
        if (_0x46e508.isThenable(_0x2e32db)) {
          await _0x2e32db;
        }
      }
      async function _0x4ca290(_0x3ac3a8, _0x35ee76, _0x4a11d4, _0x10c91e, _0x2ebceb, _0x174c7b) {
        await _0x48c50c(_0x4a11d4, _0x4feb31.PylanceCodeActionKind.Source.UnusedImports, async _0x46250b => {
          const _0x376177 = _0x3a2f43.convertTextRangeToRange(_0x10c91e.parserOutput.parseTree, _0x10c91e.tokenizerOutput.lines);
          const _0x2f544b = await _0x149904.getUnusedImportDiagnosticsForRangeFromService(_0x3ac3a8.service, _0x35ee76, _0x376177, _0x174c7b);
          if (_0x2f544b.length === 0) {
            return;
          }
          _0x2ebceb.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeAllUnusedImports(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.RemoveUnusedImport.removeAllUnusedImports(), _0x443570.Commands.removeUnusedImport, _0x35ee76.toString()), _0x46250b));
        });
        await _0x48c50c(_0x4a11d4, _0x4feb31.PylanceCodeActionKind.Source.ConvertImportFormat, _0x18b5a9 => {
          if (!_0x3ac3a8.rootUri || !_0x3ac3a8.importFormat || _0x206d91.NotebookUriMapper.isNotebookCell(_0x35ee76)) {
            return;
          }
          const _0x2d3ad6 = _0x3ac3a8.importFormat;
          const _0x15a486 = _0x585ecd.getTopLevelImports(_0x10c91e.parserOutput.parseTree).orderedImports.filter(_0x41682f => _0x41682f.node.nodeType === 25).map(_0x28d244 => _0x28d244.node);
          const _0x2006a6 = _0xc68d1f.getBackgroundAnalysisProgram(_0x3ac3a8).program;
          const _0x463dc6 = _0x15a486.filter(_0x5360e2 => {
            const _0x140e0b = _0x3668d4.getImportPathInfo(_0x2006a6, _0x3ac3a8.rootUri, _0x10c91e, _0x5360e2);
            if (!_0x140e0b) {
              return false;
            }
            if (_0x2d3ad6 === 'relative') {
              return _0x5360e2.d.module.d.leadingDots === 0 && _0x585ecd.getRelativeModuleName(_0x2006a6.fileSystem, _0x35ee76, _0x140e0b.targetPath, _0x2006a6.configOptions);
            } else {
              return _0x5360e2.d.module.d.leadingDots > 0 && _0x3668d4.getAbsoluteModuleName(_0x2006a6, _0x35ee76, _0x140e0b.targetPath);
            }
          });
          if (_0x463dc6.length === 0) {
            return;
          }
          _0x2ebceb.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllFormat(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.ToggleImportPath.convertAllFormat(), _0x443570.Commands.convertImportFormat, _0x35ee76.toString(), _0x2d3ad6), _0x18b5a9));
        });
        await _0x48c50c(_0x4a11d4, _0x4feb31.PylanceCodeActionKind.Source.FixAll, _0x5e8ce0 => {
          if (!_0x3ac3a8.fixAll || _0x3ac3a8.fixAll.length === 0) {
            return;
          }
          _0x2ebceb.push(_0x3a9c78.CodeAction.create(_0x35f6e1.Localizer.CodeAction.FixAll.runFixAll(), _0x288505.createCommand(_0x35f6e1.Localizer.CodeAction.FixAll.runFixAll(), _0x443570.Commands.fixAll, _0x35ee76.toString()), _0x5e8ce0));
        });
      }
      function _0x43b9a4(_0x4b3a74, _0x36914a, _0x1f9aa1, _0x4d6cb2, _0x469422, _0x48da5a) {
        _0xe93078.throwIfCancellationRequested(_0x48da5a);
        if (!_0x4b3a74.rootUri || !_0x4d6cb2) {
          return;
        }
        const _0x9e49eb = _0x4b3a74.service.getParseResults(_0x36914a);
        if (!_0x9e49eb) {
          return;
        }
        const _0x7313cd = _0x1f9aa1.filter(_0x50fa4d => _0x50fa4d.getRule() === _0x2e5e1a.DiagnosticRule.reportMissingImports);
        if (_0x7313cd.length === 0) {
          return;
        }
        const _0x5a629c = _0x7313cd[0].range;
        const _0x12e3ff = _0x3a2f43.convertRangeToTextRange(_0x5a629c, _0x9e49eb.tokenizerOutput.lines);
        if (!_0x12e3ff) {
          return;
        }
        const _0x516b95 = _0x9e49eb.text.slice(_0x12e3ff.start, _0x12e3ff.start + _0x12e3ff.length);
        if (_0x516b95[0] === '.' || _0x516b95.includes('__')) {
          return;
        }
        const _0x100e08 = _0x516b95.split('.').join('/');
        const _0x2fc090 = [];
        const _0x1a3647 = _0x4b3a74.service.backgroundAnalysisProgram.program.getUserFiles();
        for (const _0x3f0dd8 of _0x1a3647) {
          const _0x5a5764 = _0x3f0dd8.sourceFile.getUri();
          const _0x5db01e = [_0x100e08 + '.py', _0x100e08 + '.pyi', _0x100e08 + '/__init__.py', _0x100e08 + '/__init__.pyi'];
          const _0x13a166 = _0x5db01e.filter(_0x251694 => _0x5a5764.pathEndsWith(_0x251694));
          _0x13a166.forEach(_0x47f301 => {
            const _0x5cd391 = _0x5a5764.root.resolvePaths(_0x5a5764.getPath().slice(0, -_0x47f301.length));
            const _0x1b67c1 = _0x4b3a74.rootUri.getRelativePath(_0x5cd391);
            if (_0x1b67c1) {
              _0x2fc090.push(_0x1b67c1);
            }
          });
        }
        _0x2fc090.sort((_0x3a4b15, _0x3df9bc) => _0x3a4b15.length - _0x3df9bc.length);
        for (const _0x1bc751 of _0x2fc090) {
          const _0x5b2847 = _0x35f6e1.Localizer.CodeAction.ExtraPath.addExtraPath().format({
            name: _0x1bc751
          });
          _0x469422.push(_0x3a9c78.CodeAction.create(_0x5b2847, _0x288505.createCommand(_0x5b2847, _0x443570.ClientCommands.addToExtraPaths, _0x36914a.toString(), _0x1bc751), _0x3a9c78.CodeActionKind.QuickFix));
        }
      }
      function _0xed244c(_0x3cf3c6, _0x414f55, _0x57eb5c, _0x34f5f7, _0x62cc92, _0xddeeb0) {
        _0xe93078.throwIfCancellationRequested(_0xddeeb0);
        if (!_0x3cf3c6.rootUri || !_0x34f5f7) {
          return;
        }
        const _0x45ca1d = _0x3cf3c6.service.getParseResults(_0x414f55);
        if (!_0x45ca1d) {
          return;
        }
        const _0x152d84 = _0x57eb5c.filter(_0x33a8e4 => {
          var _0x23486d;
          if ((_0x23486d = _0x428ac1.getDiagnosticCode(_0x33a8e4)) === null || _0x23486d === undefined) {
            return undefined;
          } else {
            return _0x23486d.startsWith('Diagnostic.import');
          }
        });
        if (_0x152d84.length === 0) {
          return;
        }
        const _0x1f87f4 = _0x152d84[0].range;
        const _0x51f9fe = _0x3a2f43.convertRangeToTextRange(_0x1f87f4, _0x45ca1d.tokenizerOutput.lines);
        if (!_0x51f9fe) {
          return;
        }
        if (_0x206d91.NotebookUriMapper.isNotebookCell(_0x414f55)) {
          const _0x36ffde = _0x35f6e1.Localizer.CodeAction.UnresolvedImports.selectKernelTitle();
          _0x62cc92.push(_0x3a9c78.CodeAction.create(_0x36ffde, _0x288505.createCommand(_0x36ffde, _0x443570.ClientCommands.notebookSelectKernel), _0x3a9c78.CodeActionKind.QuickFix));
        } else {
          const _0x2810e4 = _0x35f6e1.Localizer.CodeAction.UnresolvedImports.selectInterpreterTitle();
          _0x62cc92.push(_0x3a9c78.CodeAction.create(_0x2810e4, _0x288505.createCommand(_0x2810e4, _0x443570.ClientCommands.pythonSetInterpeter), _0x3a9c78.CodeActionKind.QuickFix));
        }
        const _0x3e8b86 = _0x35f6e1.Localizer.CodeAction.UnresolvedImports.learnMoreTitle();
        _0x62cc92.push(_0x3a9c78.CodeAction.create(_0x3e8b86, _0x288505.createCommand(_0x3e8b86, _0x443570.ClientCommands.openUri, ['https://aka.ms/pylanceImportResolve']), _0x3a9c78.CodeActionKind.QuickFix));
      }
      function _0x541e57(_0x367aee, _0x37988e, _0x2e4d7f, _0x57a9cf, _0x441f7f) {
        _0xe93078.throwIfCancellationRequested(_0x441f7f);
        _0x367aee.service.run(_0x411d71 => {
          var _0xd173b9;
          const _0x237c31 = _0x367aee.service.getParseResults(_0x37988e);
          if (!_0x237c31) {
            return;
          }
          const _0x11ac8a = _0x2e4d7f.filter(_0x2ebd8a => _0x2ebd8a.getRule() === _0x2e5e1a.DiagnosticRule.reportAbstractUsage);
          if (_0x11ac8a.length === 0) {
            return;
          }
          for (const _0x541881 of _0x11ac8a) {
            const _0xb77d81 = _0x3a2f43.convertRangeToTextRange(_0x541881.range, _0x237c31.tokenizerOutput.lines);
            if (!_0xb77d81) {
              continue;
            }
            const _0x3d3338 = _0x5af975.findNodeByOffset(_0x237c31.parserOutput.parseTree, _0xb77d81.start);
            if (!_0x3d3338) {
              continue;
            }
            const _0x1b0e55 = _0x5af975.getFirstAncestorOrSelfOfKind(_0x3d3338, 9);
            if (!_0x1b0e55 || !_0x2e7724.TextRange.containsRange(_0xb77d81, _0x1b0e55)) {
              continue;
            }
            const _0x13d9a4 = (_0xd173b9 = _0x411d71.evaluator) === null || _0xd173b9 === undefined ? undefined : _0xd173b9.getType(_0x1b0e55);
            if (!_0x13d9a4 || !_0x24a829.isClass(_0x13d9a4)) {
              continue;
            }
            const _0xa47ac1 = _0x411d71.serviceProvider.tryGet(_0xf6c4ab.PylanceServiceKeys.declarationFinder);
            if (!_0xa47ac1) {
              continue;
            }
            for (const _0x32ce77 of _0xa47ac1.getDeclarations(_0x13d9a4, _0x441f7f)) {
              if (_0x3f026c.isClassDeclaration(_0x32ce77) && _0x32ce77.node.d.name && _0x32ce77.uri) {
                const _0x43605a = _0x411d71.getParseResults(_0x32ce77.uri);
                if (!_0x43605a) {
                  continue;
                }
                const _0x520c86 = _0x3a2f43.convertTextRangeToRange(_0x32ce77.node.d.name, _0x43605a.tokenizerOutput.lines);
                _0xba0ef8(_0x367aee, _0x32ce77.uri, _0x520c86, _0x43605a, _0x3a9c78.CodeActionKind.QuickFix, _0x57a9cf, _0x441f7f);
              }
            }
          }
        }, _0x441f7f);
      }
      function _0xba0ef8(_0x38df1f, _0x4e2d3d, _0x18b39c, _0x2471ae, _0x5e8d9a, _0x53bcbd, _0x5d64cd) {
        _0xe93078.throwIfCancellationRequested(_0x5d64cd);
        _0x38df1f.service.run(_0x11cb20 => {
          const _0x3ec970 = _0x11cb20.evaluator;
          const _0x5b7622 = _0x3a2f43.convertRangeToTextRange(_0x18b39c, _0x2471ae.tokenizerOutput.lines);
          if (!_0x5b7622 || !_0x3ec970) {
            return;
          }
          const _0x259423 = _0x5af975.findNodeByOffset(_0x2471ae.parserOutput.parseTree, _0x5b7622.start);
          if (_0x259423?.nodeType !== 38) {
            return;
          }
          if (_0x2b1aec.ImplementAbstractClassProvider.canImplementAbstractClass(_0x3ec970, _0x259423) === undefined) {
            return;
          }
          const _0x1fd743 = _0x35f6e1.Localizer.CodeAction.ImplementAbstractClass.implementAllAbstractClasses();
          const _0xe50c84 = _0x288505.createCommand(_0x1fd743, _0x443570.Commands.implementAllAbstractClasses, _0x4e2d3d.toString(), _0x18b39c);
          _0x53bcbd.push(_0x3a9c78.CodeAction.create(_0x1fd743, _0xe50c84, _0x5e8d9a));
          if (_0x38df1f.aiCodeActions?.implementAbstractClasses) {
            const _0x3d2b0b = _0x35f6e1.Localizer.CodeAction.ImplementAbstractClass.implementAllAbstractClassesWithCopilot();
            const _0x51d9ae = _0x259423.d.value;
            const _0x5b81ae = _0x288505.createCommand(_0x3d2b0b, _0x443570.ClientCommands.startEditorChat, {
              message: `Implement all unimplemented abstract methods for class ${_0x51d9ae} with a useful implementation.`,
              autoSend: true
            });
            const _0x5aff1a = _0x103dc8.mergeCommands(_0xe50c84, _0x5b81ae);
            if (_0x5aff1a === undefined) {
              return;
            }
            const _0x30f579 = _0x3a9c78.CodeAction.create(_0x3d2b0b, _0x5aff1a, _0x5e8d9a);
            _0x30f579.data = _0x2f4d90.toLSPAny({
              isAI: true
            });
            _0x53bcbd.push(_0x30f579);
          }
        }, _0x5d64cd);
      }
      function _0x4bc007(_0x1ebc28, _0x5e58cc, _0x4a18ae, _0x58c7cc, _0x185f6f, _0x3e215e) {
        _0xe93078.throwIfCancellationRequested(_0x3e215e);
        _0x1ebc28.service.run(_0xae63b1 => {
          if (_0x1ebc28.supportDocstringTemplate) {
            if (!_0x31cc21.canProvideDocstringTemplate(_0x58c7cc, _0x4a18ae.start)) {
              return;
            }
            const _0x3389cd = _0x35f6e1.Localizer.CodeAction.GenerateDocstring.generateDocstring();
            const _0x24a7ce = _0x288505.createCommand(_0x3389cd, _0x443570.Commands.generateDocstring, _0x5e58cc.toString(), _0x4a18ae);
            _0x185f6f.push(_0x3a9c78.CodeAction.create(_0x3389cd, _0x24a7ce));
          }
        }, _0x3e215e);
      }
      function _0x40efb9(_0x1704d7, _0x739160, _0x5f57ab, _0x359851, _0x59a3b2, _0xedff5) {
        _0xe93078.throwIfCancellationRequested(_0xedff5);
        _0x1704d7.service.run(_0x4e4543 => {
          if (_0x1704d7.supportDocstringTemplate) {
            if (!_0x31cc21.canProvideDocstringTemplate(_0x359851, _0x5f57ab.start)) {
              return;
            }
            if (_0x1704d7.aiCodeActions?.generateDocstring) {
              const _0x58f2f8 = _0x288505.createCommand('remove existing triple quotes', _0x443570.Commands.fixupCopilotDocstringOutput, _0x739160.toString(), _0x5f57ab);
              const _0x239b42 = _0x4e4543.evaluator;
              const _0x4c2785 = new _0x5f4403.IndentationUtils(_0x1704d7.editorIndentConfig ?? _0x5f4403.DefaultEditorIndentConfig);
              if (!_0x239b42) {
                return;
              }
              const _0x4813d4 = _0x35f6e1.Localizer.CodeAction.GenerateDocstring.generateDocstringWithCopilot();
              const _0x447110 = _0x31cc21.getDocstringTemplatesinString(_0x359851, _0x5f57ab.start, _0x4e4543.evaluator, _0x4c2785);
              const _0x1c4430 = _0x288505.createCommand(_0x4813d4, _0x443570.ClientCommands.startEditorChat, {
                message: `/doc Use triple quotes, Write a docstring based on the code below; /doc Insert an empty line to separate sections\r
 \r
${_0x447110}`,
                autoSend: true,
                initialSelection: _0x5f57ab,
                initialRange: _0x5f57ab
              });
              const _0x41a266 = _0x103dc8.mergeCommands(_0x58f2f8, _0x1c4430);
              if (_0x41a266) {
                const _0x577c7d = _0x35f6e1.Localizer.CodeAction.GenerateDocstring.generateDocstringWithCopilot();
                const _0x24bc43 = _0x3a9c78.CodeAction.create(_0x577c7d, _0x41a266);
                _0x24bc43.data = _0x2f4d90.toLSPAny({
                  isAI: true
                });
                _0x59a3b2.push(_0x24bc43);
              }
            }
          }
        }, _0xedff5);
      }
    },
    47351: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CompletionListConverter = undefined;
      const _0x3c85fd = require(67619);
      const _0xbc7d5f = 5;
      class _0x3e5247 extends _0x3c85fd.ShortLivedCache {
        constructor() {
          super(_0xbc7d5f);
          this._supported = false;
          this._counter = 0;
        }
        static get() {
          return _0x3e5247._instance;
        }
        static toLSP(_0x2b6dd2) {
          if (!_0x3e5247._instance._supported) {
            return _0x2b6dd2;
          }
          _0x3e5247._instance._counter++;
          for (const _0x2e0a37 of _0x2b6dd2.items) {
            _0x2e0a37.data = _0x3e5247._instance.add(_0x3e5247._instance._counter, _0x2e0a37.data);
          }
          return _0x2b6dd2;
        }
        static fromLSP(_0x1efe15) {
          if (!_0x3e5247._instance._supported) {
            return _0x1efe15;
          }
          if (!_0x1efe15.data) {
            return _0x1efe15;
          }
          if (!('id' in _0x1efe15.data)) {
            return _0x1efe15;
          }
          _0x1efe15.data = _0x3e5247._instance.get(_0x1efe15.data);
          return _0x1efe15;
        }
        onUpdateSettings(_0x229f7f) {
          this._supported = _0x229f7f.cacheLSPData ?? false;
        }
      }
      exports.CompletionListConverter = _0x3e5247;
      _0x3e5247._instance = new _0x3e5247();
    },
    72086: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CompletionProvider = exports.SkipMarker = undefined;
      exports.getSlowCompletionInfoFileType = _0x26d74e;
      const _0x1bbc03 = require(56911);
      const _0x2d7c5c = require(26687);
      const _0x4b32ee = require(47610);
      const _0x19f41e = __importStar(require(41557));
      const _0x5332de = require(3113);
      const _0x43c3a7 = __importStar(require(12097));
      const _0x474971 = require(4064);
      const _0x2801f9 = require(21024);
      const _0x25d6c6 = require(92324);
      const _0x3116de = require(58147);
      const _0xbb91 = __importStar(require(89740));
      const _0x8a8a6 = require(88754);
      const _0x3abc82 = require(71582);
      const _0x36a958 = require(5737);
      const _0x4d6cdd = require(51868);
      const _0x4efd26 = require(39426);
      const _0x11854c = require(24835);
      const _0x160721 = require(96159);
      const _0x157344 = require(44889);
      const _0x4adf8d = require(30048);
      const _0x3fdd5c = require(86615);
      const _0x314e7a = require(19995);
      const _0x43a969 = require(19892);
      const _0x3f1eef = require(47351);
      exports.SkipMarker = '__skip__completion__';
      function _0x26d74e(_0x16b41c) {
        if (_0x157344.NotebookUriMapper.isNotebookCell(_0x16b41c)) {
          if (_0x16b41c.scheme === 'vscode-interactive-input') {
            return 'interactive';
          } else {
            return 'cell';
          }
        } else {
          return 'regular';
        }
      }
      class _0x59aad6 extends _0x36a958.CompletionProvider {
        constructor(_0x4a775d, _0x1795ec, _0x49a18d, _0x3806f0, _0x1c17a0, _0x3219aa) {
          var _0x2a0b95;
          super(_0x4a775d, _0x1795ec, _0x49a18d, _0x3806f0, _0x3219aa);
          this._autoImportMaps = _0x1c17a0;
          this._chainedUri = (_0x2a0b95 = this.program.getSourceFileInfo(_0x1795ec)?.chainedSourceFile) === null || _0x2a0b95 === undefined ? undefined : _0x2a0b95.sourceFile.getUri();
          this._slowCompletionInfo = {
            completionType: 'regular',
            fileType: _0x26d74e(this.fileUri)
          };
        }
        getMemberAccessInfo() {
          return this._memberAccessInfo;
        }
        getAutoImportInfo() {
          return this._autoImportInfo;
        }
        getSlowCompletionInfo() {
          return this._slowCompletionInfo;
        }
        createAutoImporter(_0x7652de, _0x203799) {
          const _0x42fc7c = this.program.serviceProvider.tryGet(_0x4adf8d.PylanceServiceKeys.packageDiscoverer);
          if (this._pylanceOptions.showOnlyDirectDependenciesInAutoImport) {
            if (_0x42fc7c === null || _0x42fc7c === undefined) {
              undefined;
            } else {
              _0x42fc7c.ensureDistributionToPackageMap(this.program);
            }
          }
          return new _0x3fdd5c.AutoImporter(this.program, this.execEnv, this.parseResults, this.position, _0x7652de, _0x3fdd5c.buildModuleSymbolsMap(this.program, this.execEnv, this._autoImportMaps.indices, this.fileUri, this._pylanceOptions.includeAliasesFromUserFiles, false, this.cancellationToken), {
            indices: this._autoImportMaps.indices,
            lazyEdit: _0x203799,
            importFormat: this._pylanceOptions.importFormat,
            includeAliasesFromUserFiles: this._pylanceOptions.includeAliasesFromUserFiles,
            allowOnlyDirectDependencies: _0x42fc7c === null || _0x42fc7c === undefined ? undefined : _0x42fc7c.getDirectDependencies(this.program)
          });
        }
        shouldProcessDeclaration(_0x45afe) {
          if (!this._chainedUri || _0x45afe?.type !== 8) {
            return true;
          }
          if (!_0x45afe.moduleName.endsWith(exports.SkipMarker)) {
            return true;
          }
          const _0x3e37a0 = _0x2d7c5c.getFileInfo(_0x45afe.node);
          return !(_0x3e37a0 === null || _0x3e37a0 === undefined ? undefined : _0x3e37a0.fileUri.equals(this._chainedUri));
        }
        addAutoImportCompletions(_0x51c9a3, _0x1409e1, _0x2f4488, _0x4190c7, _0x137517) {
          var _0x411394;
          if (!this.configOptions.autoImportCompletions || !this._pylanceOptions.autoImport) {
            return;
          }
          const _0x534737 = this.createAutoImporter(_0x4190c7, _0x2f4488);
          const _0x2fb6d9 = [];
          const _0x5b151f = (_0x411394 = this._autoImportMaps.nameMap) === null || _0x411394 === undefined ? undefined : _0x411394.get(_0x51c9a3);
          if (_0x5b151f && _0x51c9a3.length > 1 && !_0x4190c7.has(_0x51c9a3)) {
            _0x3116de.appendArray(_0x2fb6d9, _0x534737.getAutoImportCandidatesForAbbr(_0x51c9a3, _0x5b151f, this.cancellationToken));
          }
          _0x2fb6d9.push(..._0x534737.getAutoImportCandidates(_0x51c9a3, _0x1409e1, undefined, this.cancellationToken));
          const _0x5783f3 = _0x534737.getPerfInfo();
          const _0x2e0607 = new _0x3abc82.Duration();
          this.addImportResults(_0x2fb6d9, _0x51c9a3, _0x4190c7, _0x137517);
          this._autoImportInfo = {
            indexUsed: _0x5783f3.indexUsed,
            totalTimeInMS: _0x5783f3.totalInMs,
            moduleTimeInMS: _0x5783f3.moduleTimeInMS,
            indexTimeInMS: _0x5783f3.indexTimeInMS,
            importAliasTimeInMS: _0x5783f3.importAliasTimeInMS,
            itemCount: _0x2fb6d9.length,
            symbolCount: _0x5783f3.symbolCount,
            indexCount: _0x5783f3.indexCount,
            importAliasCount: _0x5783f3.importAliasCount,
            additionTimeInMS: _0x2e0607.getDurationInMilliseconds()
          };
        }
        getMethodOverrideCompletions(_0x1f5b19, _0x1dfde7, _0x5d5b8f) {
          const _0x510b03 = _0x19f41e.getEnclosingClass(_0x1dfde7, true);
          if (!_0x510b03) {
            return undefined;
          }
          const _0x54313f = this.evaluator.getTypeOfClass(_0x510b03);
          if (!_0x54313f) {
            return undefined;
          }
          const _0x48182c = _0x160721.hasAsyncKeyword(this.parseResults, _0x1dfde7);
          const _0x194ec0 = (_0x5d5b8f === null || _0x5d5b8f === undefined ? undefined : _0x5d5b8f.some(_0x59d62f => _0x19f41e.checkDecorator(_0x59d62f, 'staticmethod'))) ?? false;
          const _0x425370 = (_0x5d5b8f === null || _0x5d5b8f === undefined ? undefined : _0x5d5b8f.some(_0x5ec960 => _0x19f41e.checkDecorator(_0x5ec960, 'classmethod'))) ?? false;
          const _0xe0a7a7 = new _0x36a958.CompletionMap();
          const _0xe187e7 = _0x25d6c6.getClassFieldsRecursive(_0x54313f.classType);
          _0xe187e7.forEach((_0x4bcf41, _0xbca94a) => this._appendMember(_0x1f5b19, _0x1dfde7, _0x48182c, _0x194ec0, _0x425370, _0x54313f, _0x4bcf41, _0xbca94a, _0xe0a7a7));
          if (_0x54313f.classType.shared.effectiveMetaclass && !_0x2801f9.isUnknown(_0x54313f.classType.shared.effectiveMetaclass)) {
            const _0x135503 = _0x25d6c6.getClassFieldsRecursive(_0x54313f.classType.shared.effectiveMetaclass);
            _0x135503.forEach((_0x29ab0d, _0x2f14c1) => this._appendMember(_0x1f5b19, _0x1dfde7, _0x48182c, _0x194ec0, _0x425370, _0x54313f, _0x29ab0d, _0x2f14c1, _0xe0a7a7));
          }
          this._slowCompletionInfo = {
            completionType: 'override',
            fileType: _0x26d74e(this.fileUri)
          };
          return _0xe0a7a7;
        }
        getMemberAccessCompletions(_0x1e9835, _0x22219d) {
          const _0x186d09 = this._appendGetAttrLiteralMembers(_0x1e9835, _0x22219d, super.getMemberAccessCompletions(_0x1e9835, _0x22219d));
          let _0x1cac8b = this.evaluator.getType(_0x1e9835);
          if (_0x1cac8b) {
            _0x1cac8b = this.evaluator.makeTopLevelTypeVarsConcrete(_0x1cac8b);
            if (_0x2801f9.isUnknown(_0x1cac8b) && _0x1cac8b.priv.possibleType) {
              _0x1cac8b = this.evaluator.makeTopLevelTypeVarsConcrete(_0x1cac8b.priv.possibleType);
            }
            if (_0x1cac8b.category === 7) {
              this._getSubmoduleCompletion(_0x1e9835, _0x1cac8b, _0x186d09);
            }
          }
          this._memberAccessInfo = this._getLastKnownModule(_0x1e9835, _0x1cac8b);
          this._slowCompletionInfo = {
            completionType: 'memberAccess',
            fileType: _0x26d74e(this.fileUri)
          };
          return _0x186d09;
        }
        addExtraCommitChar(_0x12852e) {
          if (!this._pylanceOptions.extraCommitChars || !_0x12852e.kind) {
            return;
          }
          const _0x26f9ff = this._getExtraCommitCharsForKind(_0x12852e.kind);
          if (_0x26f9ff.length === 0) {
            return;
          }
          _0x12852e.commitCharacters = _0x26f9ff;
        }
        getCompletionItemData(_0x2497df) {
          if (_0x2497df.data) {
            return _0x3f1eef.CompletionListConverter.fromLSP(_0x2497df).data;
          }
          return super.getCompletionItemData(_0x2497df);
        }
        get _pylanceOptions() {
          return this.options;
        }
        _appendGetAttrLiteralMembers(_0xc8d0d0, _0x4f895a, _0x2904cc) {
          const _0x353976 = this._getMode(_0xc8d0d0.parent);
          _0x2904cc = _0x2904cc ?? new _0x36a958.CompletionMap();
          if (this._tryAppendGetAttrLiteralMembersForMode(_0xc8d0d0, _0x4f895a, _0x2904cc, _0x353976)) {
            return _0x2904cc;
          }
          if (_0x353976 !== 'get') {
            this._tryAppendGetAttrLiteralMembersForMode(_0xc8d0d0, _0x4f895a, _0x2904cc, 'get');
          }
          return _0x2904cc;
        }
        _tryAppendGetAttrLiteralMembersForMode(_0x171f70, _0x327fc0, _0x65dd9d, _0x5039aa) {
          const _0x1b7743 = _0x11854c.getGetAttrMethods(this.evaluator, _0x171f70, _0x5039aa);
          if (_0x1b7743.length === 0) {
            return false;
          }
          let _0x3fa1a4 = 0;
          for (const _0x3ab538 of _0x1b7743) {
            const _0x53240b = _0x3ab538.shared.declaredReturnType ?? this.evaluator.getInferredReturnType(_0x3ab538);
            const _0x94dee6 = _0x25d6c6.isCallableType(_0x53240b) ? _0x1bbc03.CompletionItemKind.Function : _0x1bbc03.CompletionItemKind.Field;
            const _0x148843 = _0x11854c.firstParamsExcludingSelf(_0x3ab538);
            if (!_0x148843) {
              continue;
            }
            const _0x3c4ebc = new Set();
            if (_0x148843._type.category === 6) {
              _0x3c4ebc.add(_0x148843._type.priv.literalValue);
            } else {
              const _0x8b177a = _0x148843._type;
              if (_0x8b177a.priv.literalClasses.literalStrMap) {
                for (const _0x54466a of _0x8b177a.priv.literalClasses.literalStrMap.keys()) {
                  _0x3c4ebc.add(_0x54466a);
                }
              }
              if (_0x8b177a.priv.literalInstances.literalStrMap) {
                for (const _0xb45190 of _0x8b177a.priv.literalInstances.literalStrMap.keys()) {
                  _0x3c4ebc.add(_0xb45190);
                }
              }
            }
            _0x3fa1a4 += _0x3c4ebc.size;
            for (const _0x4ded5b of _0x3c4ebc) {
              this.addNameToCompletions(_0x4ded5b, _0x94dee6, _0x327fc0, _0x65dd9d, {
                typeDetail: _0x4d6cdd.getTypeDetail(this.evaluator, _0x3ab538, _0x3ab538.shared.declaration, _0x3ab538.shared.name, undefined, this.configOptions.functionSignatureDisplay),
                documentation: _0x4efd26.getDocumentationPartsForTypeAndDecl(this.sourceMapper, _0x3ab538, _0x3ab538.shared.declaration, this.evaluator, {
                  name: _0x3ab538.shared.name
                })
              });
            }
          }
          return _0x3fa1a4 > 0;
        }
        _getMode(_0x45e1f5) {
          if (_0x45e1f5?.nodeType === 35) {
            return _0x11854c.getAttrMode(_0x45e1f5);
          }
          if (_0x45e1f5?.nodeType === 0) {
            if (_0x45e1f5.parent?.nodeType === 47 && _0x45e1f5.parent.d.statements.some(_0x55e8b4 => _0x55e8b4 === _0x45e1f5) && this._containsToken(this.parseResults, _0x45e1f5, _0x111761 => _0x111761.type === 9 && _0x111761.operatorType === 2)) {
              return 'set';
            }
          }
          return 'get';
        }
        _containsToken(_0x18f6a6, _0x1d5b18, _0x4022b9) {
          const _0x35e81a = _0x18f6a6.tokenizerOutput.tokens.getItemAtPosition(_0x1d5b18.start);
          const _0x219f7a = _0x18f6a6.tokenizerOutput.tokens.getItemAtPosition(_0x8a8a6.TextRange.getEnd(_0x1d5b18));
          for (let _0x54800e = _0x35e81a; _0x54800e <= _0x219f7a; _0x54800e++) {
            const _0x14fbee = _0x18f6a6.tokenizerOutput.tokens.getItemAt(_0x54800e);
            if (_0x4022b9(_0x14fbee)) {
              return true;
            }
          }
          return false;
        }
        _getLastKnownModule(_0x1a44ea, _0x549173) {
          let _0x3cca8f = _0x1a44ea;
          let _0x3e80fc = _0x549173;
          let _0x6c2644 = _0x1a44ea.nodeType === 35 ? _0x1a44ea === null || _0x1a44ea === undefined ? undefined : _0x1a44ea.d.member.d.value : undefined;
          while (_0x3cca8f) {
            if (_0x3cca8f.nodeType === 9 || _0x3cca8f.nodeType === 35) {
              _0x3cca8f = _0x3cca8f.d.leftExpr;
              if (_0x6c2644 === undefined) {
                _0x6c2644 = _0x3cca8f.nodeType === 35 ? (_0x3cca8f === null || _0x3cca8f === undefined ? undefined : _0x3cca8f.d.member.d.value) ?? '' : '';
              }
            } else {
              break;
            }
            if (_0x3cca8f) {
              _0x3e80fc = this.evaluator.getType(_0x3cca8f);
              if (_0x3e80fc !== undefined && !_0x2801f9.isUnknown(_0x3e80fc) && !_0x2801f9.isUnbound(_0x3e80fc)) {
                break;
              }
            }
          }
          const _0x49758a = {};
          if (_0x3e80fc && !_0x2801f9.isUnknown(_0x3e80fc) && !_0x2801f9.isUnbound(_0x3e80fc) && _0x3cca8f) {
            const _0x3573aa = _0x25d6c6.getDeclaringModulesForType(_0x3e80fc);
            _0x49758a.lastKnownModule = _0x3573aa.find(_0x49038e => _0x49038e !== 'typing');
            if (_0x3cca8f.nodeType === 35) {
              _0x49758a.lastKnownMemberName = _0x3cca8f.d.member.d.value;
            } else {
              if (_0x3cca8f.nodeType === 38 && _0x2801f9.isInstantiableClass(_0x3e80fc)) {
                _0x49758a.lastKnownMemberName = _0x3e80fc.shared.name;
              } else {
                if (_0x3cca8f.nodeType === 38 && _0x2801f9.isClassInstance(_0x3e80fc)) {
                  _0x49758a.lastKnownMemberName = _0x3e80fc.shared.name;
                }
              }
            }
            _0x49758a.unknownMemberName = _0x6c2644;
          }
          return _0x49758a;
        }
        _appendMember(_0x377bb1, _0x356a3c, _0x42ee61, _0x500b50, _0x4cf798, _0x25ba16, _0x5da11b, _0x40446c, _0x3ef739) {
          if (!_0x2801f9.isInstantiableClass(_0x5da11b.classType) || _0x5da11b.classType.shared === _0x25ba16.classType.shared || !_0xbb91.isPatternInSymbol(_0x356a3c.d.value, _0x40446c)) {
            return;
          }
          const _0x41396a = _0x5da11b.symbol;
          const _0x104b47 = _0x474971.getLastTypedDeclarationForSymbol(_0x41396a);
          if (!_0x104b47 || _0x104b47.type !== 5) {
            return;
          }
          const _0x3c649c = this.evaluator.getTypeOfMember(_0x5da11b);
          if (!_0x3c649c) {
            return;
          }
          const _0x3f3718 = _0x2801f9.isFunction(_0x3c649c) && _0x2801f9.FunctionType.isStaticMethod(_0x3c649c);
          const _0x58d645 = _0x2801f9.isFunction(_0x3c649c) && _0x2801f9.FunctionType.isClassMethod(_0x3c649c) && _0x40446c !== '__init_subclass__';
          if (_0x500b50 !== _0x3f3718 || _0x4cf798 !== _0x58d645) {
            return;
          }
          let _0x14ed3f = _0x2801f9.isClassInstance(_0x3c649c) && _0x2801f9.ClassType.isPropertyClass(_0x3c649c);
          if (_0x43c3a7.isDunderName(_0x40446c)) {
            _0x14ed3f = false;
          }
          let _0x20354e = undefined;
          if (_0x2801f9.isFunction(_0x3c649c)) {
            _0x20354e = _0x3c649c;
          } else {
            if (_0x14ed3f && _0x2801f9.isClassInstance(_0x3c649c)) {
              const _0x5bd066 = _0x25d6c6.lookUpClassMember(_0x3c649c, 'fget');
              if (!_0x5bd066) {
                return;
              }
              const _0x43bc25 = this.evaluator.getTypeOfMember(_0x5bd066);
              if (!_0x2801f9.isFunction(_0x43bc25)) {
                return;
              }
              _0x20354e = _0x43bc25;
            }
          }
          if (!_0x20354e || !_0x20354e.shared.declaration) {
            return;
          }
          const _0x39d759 = this._useLazyEdit(_0x40446c);
          if (_0x39d759 && this.itemToResolve) {
            return;
          }
          const _0x4afc33 = new _0x314e7a.ImportAdder(this.program);
          const _0x40ba31 = new _0x43a969.MethodSignaturesGenerator(this.program, this.fileUri, _0x25ba16.classType, _0x20354e, {
            importAdder: _0x4afc33,
            enableTrackingAddImports: _0x39d759,
            hasAsyncKeyword: _0x42ee61,
            dontAddTypeAnnotation: this._pylanceOptions.dontAddTypeAnnotation
          }, this.cancellationToken);
          const _0x548907 = _0x40ba31.getMethodSignature();
          let _0x4837ee;
          if (_0x5332de.isStubFile(this.fileUri)) {
            _0x4837ee = _0x548907.methodSignature + ': ...';
          } else {
            const _0x2f7fef = this.printOverriddenMethodBody(_0x25ba16.classType, _0x3f3718, _0x14ed3f, _0x104b47, _0x42ee61 && _0x548907.useAwait);
            _0x4837ee = _0x548907.methodSignature + ':\n' + _0x2f7fef;
          }
          const _0x16295e = this.createReplaceEdits(_0x377bb1, _0x356a3c, _0x4837ee);
          const _0x8968e5 = _0x39d759 ? undefined : _0x4afc33.applyImports(this.fileUri, this.parseResults, _0x356a3c.start, 'absolute', this.cancellationToken);
          this.addSymbol(_0x40446c, _0x41396a, _0x356a3c.d.value, _0x3ef739, {
            funcParensDisabled: true,
            edits: {
              format: this.options.snippet ? _0x1bbc03.InsertTextFormat.Snippet : undefined,
              textEdit: _0x16295e,
              additionalTextEdits: _0x8968e5
            }
          });
        }
        _useLazyEdit(_0x2e933a) {
          if (!this.options.lazyEdit) {
            return false;
          }
          if (!this.itemToResolve) {
            return true;
          }
          const _0x2d6755 = this.getCompletionItemData(this.itemToResolve);
          return _0x2d6755.symbolLabel !== _0x2e933a;
        }
        _getExtraCommitCharsForKind(_0x90819) {
          switch (_0x90819) {
            case _0x1bbc03.CompletionItemKind.Class:
              return ['.', '('];
            case _0x1bbc03.CompletionItemKind.Function:
            case _0x1bbc03.CompletionItemKind.Method:
              return ['('];
            case _0x1bbc03.CompletionItemKind.Module:
            case _0x1bbc03.CompletionItemKind.Enum:
              return ['.'];
            default:
              return [];
          }
        }
        _getSubmoduleCompletion(_0x76d852, _0x13dce5, _0x5c569c) {
          if (this.itemToResolve) {
            return;
          }
          const _0x15e1ed = this._getNodeValue(_0x76d852, '');
          const _0x1ffa60 = _0x13dce5.priv.moduleName;
          if (_0x15e1ed !== _0x1ffa60) {
            return;
          }
          const _0x3d05e2 = {
            leadingDots: 0,
            hasTrailingDot: true,
            nameParts: _0x1ffa60.split('.'),
            importedSymbols: new Set()
          };
          const _0x50b6ab = this.importResolver.getCompletionSuggestions(this.fileUri, this.execEnv, _0x3d05e2);
          const _0x41c68c = _0x4b32ee.getTopLevelImports(this.parseResults.parserOutput.parseTree);
          _0x50b6ab.forEach((_0x1bde17, _0x19fbe2) => {
            if (_0x5c569c && _0x5c569c.has(_0x19fbe2)) {
              return;
            }
            const _0x47dc0e = _0x1ffa60 + '.' + _0x19fbe2;
            const _0x3858cb = this.importResolver.getModuleNameForImport(_0x1bde17, this.execEnv);
            this.addNameToCompletions(_0x19fbe2, _0x1bbc03.CompletionItemKind.Module, _0x1ffa60, _0x5c569c, {
              autoImportText: this.getAutoImportText(_0x47dc0e),
              edits: {
                additionalTextEdits: _0x4b32ee.getTextEditsForAutoImportInsertion([], {
                  name: _0x47dc0e
                }, _0x41c68c, _0x4b32ee.getImportGroupFromModuleNameAndType(_0x3858cb), this.parseResults, this.position)
              }
            });
          });
        }
        _getNodeValue(_0x579aed, _0x895c4e) {
          if (_0x579aed.nodeType === 38) {
            return _0x579aed.d.value.concat(_0x895c4e);
          }
          if (_0x579aed.nodeType === 35) {
            _0x895c4e = `.${_0x579aed.d.member.d.value.concat(_0x895c4e)}`;
            return this._getNodeValue(_0x579aed.d.leftExpr, _0x895c4e);
          }
          return _0x895c4e;
        }
      }
      exports.CompletionProvider = _0x59aad6;
    },
    66609: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceDiagnosticSink = exports.PylanceTextRangeDiagnosticSink = undefined;
      exports.getDiagnosticsSeen = _0x2dc0ea;
      exports.getDiagnosticCode = _0x5711e9;
      const _0x27cb0c = require(36316);
      function _0x2dc0ea(_0x5a9d84) {
        const _0x10bd52 = new Map();
        for (const _0x3bab09 of _0x5a9d84) {
          for (const _0xed6554 of _0x3bab09.diagnostics) {
            const _0x2d88bc = _0x5711e9(_0xed6554);
            if (_0x2d88bc) {
              _0x10bd52.set(_0x2d88bc, (_0x10bd52.get(_0x2d88bc) ?? 0) + 1);
            }
          }
        }
        return [..._0x10bd52.entries()].map(_0x56dbd9 => _0x56dbd9[0] + ':' + _0x56dbd9[1]).join(';');
      }
      function _0x5711e9(_0x2f3b4d) {
        var _0x5e2c6a;
        const _0x26bd20 = (_0x5e2c6a = _0x2f3b4d.getActions()) === null || _0x5e2c6a === undefined ? undefined : _0x5e2c6a.find(_0x16d67b => _0x16d67b.action === 'diagnostic.code');
        if (_0x26bd20) {
          return _0x26bd20.code;
        } else {
          return undefined;
        }
      }
      function _0x38c5d0(_0x42c32d, _0x2999fa) {
        const _0x66ed05 = {
          action: 'diagnostic.code',
          code: _0x2999fa
        };
        _0x42c32d.addAction(_0x66ed05);
      }
      class _0x4e32c4 extends _0x27cb0c.TextRangeDiagnosticSink {
        constructor(_0x91bb54, _0x1fdd4d) {
          super(_0x1fdd4d);
          this._getCode = _0x91bb54;
        }
        addDiagnostic(_0x27f677) {
          const _0x23db55 = this._getCode(_0x27f677);
          if (_0x23db55) {
            _0x38c5d0(_0x27f677, _0x23db55);
          }
          super.addDiagnostic(_0x27f677);
          return _0x27f677;
        }
      }
      exports.PylanceTextRangeDiagnosticSink = _0x4e32c4;
      class _0x4ec39f extends _0x27cb0c.DiagnosticSink {
        constructor(_0x38029c) {
          super();
          this._getCode = _0x38029c;
        }
        addDiagnostic(_0x47b5e4) {
          const _0x375628 = this._getCode(_0x47b5e4);
          if (_0x375628) {
            _0x38c5d0(_0x47b5e4, _0x375628);
          }
          super.addDiagnostic(_0x47b5e4);
          return _0x47b5e4;
        }
      }
      exports.PylanceDiagnosticSink = _0x4ec39f;
    },
    68021: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DiagnosticsRemapper = undefined;
      const _0x148f1b = require(15986);
      const _0x2345be = require(54802);
      class _0x569135 {
        constructor() {
          this._boundGetDiagnosticCode = this._getDiagnosticCode.bind(this);
          this._originalGetRawString = _0x148f1b.setGetRawString(this._redirectLocalization.bind(this));
        }
        createSourceFile(_0x30ba41, _0x2d0dcb, _0x4e3463, _0xdae68c, _0x84033e, _0x389d8d, _0x1e61ff, _0x36fcc5, _0x56f816) {
          return _0x2345be.createPylanceSourceFile(this._boundGetDiagnosticCode, _0x30ba41, _0x2d0dcb, _0x4e3463, _0xdae68c, _0x84033e, _0x389d8d, _0x1e61ff, _0x36fcc5, _0x56f816);
        }
        _redirectLocalization(_0x2c889e) {
          if (_0x2c889e.startsWith('Diagnostic')) {
            this._lastDiagnosticKey = _0x2c889e;
          }
          return this._originalGetRawString(_0x2c889e);
        }
        _getDiagnosticCode(_0x1c5913) {
          return this._lastDiagnosticKey;
        }
      }
      exports.DiagnosticsRemapper = _0x569135;
    },
    4449: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.canProvideDocstringTemplate = _0x23873d;
      exports.getDocstringTemplates = _0x3ed378;
      exports.getDocstringTemplatesinString = _0x1b7edf;
      const _0x48b1d7 = require(26687);
      const _0x7ea4ff = require(41557);
      const _0x298026 = require(56814);
      const _0x44092b = require(88754);
      const _0x46cd7d = require(15986);
      function _0x23873d(_0x3150fc, _0x357ea1) {
        const _0x691fe1 = _0x7ea4ff.findNodeByPosition(_0x3150fc.parserOutput.parseTree, _0x357ea1, _0x3150fc.tokenizerOutput.lines);
        if (!_0x691fe1 || _0x691fe1.nodeType !== 49) {
          return false;
        }
        if (!(_0x691fe1.d.token.flags & 4)) {
          return false;
        }
        const _0x547648 = _0x7ea4ff.getParentNodeOfType(_0x691fe1, 47);
        if (!_0x547648 || !_0x7ea4ff.isDocString(_0x547648)) {
          return false;
        }
        const _0x3133ac = _0x298026.convertPositionToOffset(_0x357ea1, _0x3150fc.tokenizerOutput.lines);
        if (!_0x3133ac) {
          return false;
        }
        if (!_0x44092b.TextRange.contains(_0x691fe1, _0x3133ac)) {
          return false;
        }
        if (_0x3133ac === _0x691fe1.start) {
          return false;
        }
        if (_0x691fe1.d.value.trim().length !== 0) {
          return false;
        }
        const _0x313d9d = _0x7ea4ff.getEnclosingClassOrFunction(_0x691fe1);
        const _0x4d1d9a = _0x7ea4ff.getEnclosingModule(_0x691fe1);
        if (_0x313d9d) {
          const _0x6b0ec2 = _0x7ea4ff.getParentNodeOfType(_0x691fe1, 50);
          if (_0x6b0ec2.d.statements[0] !== _0x547648) {
            return false;
          }
        } else {
          if (_0x4d1d9a) {
            if (_0x4d1d9a.d.statements[0] !== _0x547648) {
              return false;
            }
          } else {
            return false;
          }
        }
        return true;
      }
      function _0x3ed378(_0xd5878e, _0x5a0165, _0x3c89e5) {
        if (!_0xd5878e) {
          return undefined;
        }
        const _0xe45615 = _0x7ea4ff.findNodeByPosition(_0xd5878e.parserOutput.parseTree, _0x5a0165, _0xd5878e.tokenizerOutput.lines);
        if (!_0xe45615 || _0xe45615.nodeType !== 49) {
          return undefined;
        }
        const _0x121c06 = _0x7ea4ff.getParentNodeOfType(_0xe45615, 47);
        const _0x29db12 = _0x7ea4ff.getEnclosingClassOrFunction(_0xe45615);
        const _0x4de2b8 = _0x7ea4ff.getEnclosingModule(_0xe45615);
        let _0x552e7c;
        if (_0x29db12) {
          const _0x292fb3 = _0x7ea4ff.getParentNodeOfType(_0xe45615, 50);
          if (_0x29db12.nodeType === 31) {
            const _0x44fa46 = {
              name: '',
              args: [],
              returns: undefined
            };
            _0x44fa46.name = _0x29db12.d.name.d.value;
            _0x29db12.d.params.forEach(_0x40e79e => {
              var _0x44ce43;
              if (_0x40e79e.d.name) {
                const _0x57651b = _0x40e79e.d.annotation;
                let _0x457770;
                if (_0x57651b && _0x57651b.nodeType === 38) {
                  _0x457770 = _0x57651b.d.value;
                }
                if ((_0x44ce43 = _0x44fa46.args) === null || _0x44ce43 === undefined) {
                  undefined;
                } else {
                  _0x44ce43.push({
                    var: _0x40e79e.d.name.d.value,
                    type: _0x457770 ?? ''
                  });
                }
              }
            });
            const _0xf2990d = _0x3c89e5.getTypeOfFunction(_0x29db12);
            if (_0xf2990d) {
              const _0x45c369 = _0x3c89e5.getInferredReturnType(_0xf2990d.functionType);
              const _0x4a014c = _0x3c89e5.printType(_0x45c369, {
                expandTypeAlias: false,
                enforcePythonSyntax: true
              });
              _0x44fa46.returns = {
                type: _0x4a014c
              };
            }
            _0x552e7c = _0x4c9427(_0x44fa46);
          } else {
            if (_0x29db12.nodeType === 10) {
              const _0x55fa7f = {
                name: '',
                variables: []
              };
              _0x55fa7f.name = _0x29db12.d.name.d.value;
              _0x292fb3.d.statements.forEach(_0xea7cf6 => {
                if (_0xea7cf6.nodeType === 47) {
                  const _0x492f57 = _0xea7cf6.d.statements[0];
                  if (_0x492f57.nodeType === 3) {
                    const _0x59b11d = _0x492f57.d.leftExpr;
                    if (_0x59b11d?.nodeType === 54) {
                      const _0x5e8028 = _0x59b11d.d.annotation;
                      let _0x2a9392;
                      let _0x493fef;
                      if (_0x5e8028 && _0x5e8028.nodeType === 38) {
                        _0x2a9392 = _0x5e8028.d.value;
                      }
                      const _0x38a264 = _0x59b11d.d.valueExpr;
                      if (_0x38a264 && _0x38a264.nodeType === 38) {
                        _0x493fef = _0x38a264.d.value;
                      }
                      if (_0x2a9392 && _0x493fef) {
                        _0x55fa7f.variables.push({
                          var: _0x493fef,
                          type: _0x2a9392
                        });
                      }
                    } else {
                      if (_0x59b11d?.nodeType === 38) {
                        const _0x539747 = _0x3c89e5.getTypeOfExpression(_0x492f57.d.rightExpr).type;
                        const _0x1903c9 = _0x3c89e5.printType(_0x539747, {
                          expandTypeAlias: false,
                          enforcePythonSyntax: true
                        });
                        _0x55fa7f.variables.push({
                          var: _0x59b11d.d.value,
                          type: _0x1903c9
                        });
                      }
                    }
                  }
                }
              });
              _0x552e7c = _0x30afac(_0x55fa7f);
            }
          }
        } else {
          if (_0x4de2b8?.nodeType === 36) {
            const _0x512084 = _0x48b1d7.getFileInfo(_0x4de2b8);
            const _0xbb1076 = _0x512084.moduleName;
            _0x552e7c = [_0x46cd7d.Localizer.DocstringTemplate.docstringForName().format({
              name: _0xbb1076
            })];
            if (_0x4de2b8.d.statements[0] !== _0x121c06) {
              return undefined;
            }
          } else {
            return undefined;
          }
        }
        return _0x552e7c;
      }
      function _0x1b7edf(_0x231178, _0x1acc6a, _0x36bdda, _0xf5a559) {
        const _0x36e1c2 = _0x3ed378(_0x231178, _0x1acc6a, _0x36bdda);
        if (!_0x36e1c2) {
          return undefined;
        }
        const _0x50448a = _0xf5a559.createIndentationString(_0x231178, _0xf5a559.getIndentationFromText(_0x231178, _0x1acc6a.line).indentation);
        const _0x18e98e = _0x36e1c2.reduce((_0x5d66e1, _0x55e5e7, _0x2a8259) => {
          const _0x22d0b0 = _0x36e1c2[_0x2a8259].trim().length === 0 ? _0x231178.tokenizerOutput.predominantEndOfLineSequence : _0x231178.tokenizerOutput.predominantEndOfLineSequence + _0x50448a;
          return _0x5d66e1 + _0x22d0b0 + _0x55e5e7;
        }, '');
        return _0x18e98e;
      }
      function _0x4c9427(_0x6620a4) {
        var _0x591a42;
        const _0x26dcc0 = 'param';
        const _0x224bfa = 'type';
        const _0x5976b2 = 'return';
        const _0x5763bc = 'rtype';
        const _0x2b0ffe = _0x46cd7d.Localizer.DocstringTemplate.description();
        const _0x52b25a = [];
        const _0x73fe27 = _0x46cd7d.Localizer.DocstringTemplate.docstringForName().format({
          name: _0x6620a4.name
        });
        _0x52b25a.push(_0x73fe27);
        _0x52b25a.push('');
        if ((_0x591a42 = _0x6620a4.args) === null || _0x591a42 === undefined) {
          undefined;
        } else {
          _0x591a42.forEach(_0x26c7a9 => {
            const _0x363ba6 = `:${_0x26dcc0} ${_0x26c7a9.var}: ${_0x2b0ffe}`;
            const _0x4a7549 = `:${_0x224bfa} ${_0x26c7a9.var}: ${_0x26c7a9.type}`;
            _0x52b25a.push(_0x363ba6);
            _0x52b25a.push(_0x4a7549);
          });
        }
        if (_0x6620a4.returns && _0x6620a4.returns.type !== 'None') {
          const _0x139de4 = `:${_0x5976b2}: ${_0x2b0ffe}`;
          _0x52b25a.push(_0x139de4);
          const _0x2b0bf5 = `:${_0x5763bc}: ${_0x6620a4.returns?.type}`;
          _0x52b25a.push(_0x2b0bf5);
        }
        return _0x52b25a;
      }
      function _0x30afac(_0x31f73d) {
        var _0x4a6c69;
        const _0x2bac9a = [];
        const _0x59d781 = _0x46cd7d.Localizer.DocstringTemplate.description();
        const _0x4797a3 = _0x46cd7d.Localizer.DocstringTemplate.docstringForName().format({
          name: _0x31f73d.name
        });
        _0x2bac9a.push(_0x4797a3);
        _0x2bac9a.push('');
        if (_0x31f73d.variables.length !== 0) {
          const _0x382d53 = 'var';
          const _0x51e863 = 'vartype';
          if ((_0x4a6c69 = _0x31f73d.variables) === null || _0x4a6c69 === undefined) {
            undefined;
          } else {
            _0x4a6c69.forEach(_0x55e154 => {
              const _0x45b78a = `:${_0x382d53} ${_0x55e154.var}: ${_0x59d781}`;
              const _0x5e2892 = `:${_0x51e863} ${_0x55e154.var}: ${_0x55e154.type}`;
              _0x2bac9a.push(_0x45b78a);
              _0x2bac9a.push(_0x5e2892);
            });
          }
        }
        return _0x2bac9a;
      }
    },
    51995: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DocstringTemplateCompletionProvider = undefined;
      const _0x4b6f95 = require(56911);
      const _0x738d09 = require(5737);
      const _0x1d692e = require(4449);
      class _0x1c0d39 {
        constructor(_0x10f87f, _0x37c6e4, _0x299cdb, _0xa4a1bd, _0x55edf2) {
          this._program = _0x10f87f;
          this._fileUri = _0x37c6e4;
          this._position = _0x299cdb;
          this._options = _0xa4a1bd;
          this._cancellationToken = _0x55edf2;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._evaluator = this._program.evaluator;
        }
        getCompletions() {
          if (!this._parseResults) {
            return null;
          }
          const _0x11319c = this._getDocstringTemplatesinCompletion(this._parseResults, this._position, this._evaluator);
          if (!_0x11319c) {
            return null;
          }
          return _0x4b6f95.CompletionList.create(_0x11319c === null || _0x11319c === undefined ? undefined : _0x11319c.toArray());
        }
        resolveCompletionItem(_0x1e86a1) {}
        _getDocstringTemplatesinCompletion(_0x54344a, _0x519bd0, _0x16873b) {
          const _0x244a45 = new _0x738d09.CompletionMap();
          if (!_0x1d692e.canProvideDocstringTemplate(_0x54344a, _0x519bd0)) {
            return undefined;
          }
          const _0x4d75b8 = _0x1d692e.getDocstringTemplates(_0x54344a, _0x519bd0, _0x16873b);
          if (!_0x4d75b8) {
            return undefined;
          }
          const _0x1cb74f = _0x4b6f95.CompletionItem.create(_0x4d75b8.join(_0x54344a.tokenizerOutput.predominantEndOfLineSequence));
          if (!_0x1cb74f) {
            return undefined;
          }
          _0x1cb74f.kind = _0x4b6f95.CompletionItemKind.Text;
          _0x244a45.set(_0x1cb74f);
          return _0x244a45;
        }
      }
      exports.DocstringTemplateCompletionProvider = _0x1c0d39;
    },
    50753: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DocumentSymbolProvider = undefined;
      const _0x4ac1e5 = require(86846);
      class _0x4c9911 extends _0x4ac1e5.DocumentSymbolProvider {
        constructor(_0x5cbb69, _0x5b1a58, _0x34bb9d, _0x310935, _0x79a200) {
          super(_0x5b1a58, _0x34bb9d, _0x310935, {
            includeAliases: false
          }, _0x79a200);
          this._globalIndices = _0x5cbb69;
        }
        getHierarchicalSymbols() {
          const _0x28157c = this.program.getSourceFileInfo(this.uri);
          if (!_0x28157c) {
            return [];
          }
          const _0x3b8db0 = this._globalIndices.getIndices(this.program).getSourceIndex(this.uri);
          if (!_0x3b8db0) {
            return super.getHierarchicalSymbols();
          }
          if (_0x28157c.isOpenByClient && _0x3b8db0.clientVersion !== _0x28157c.sourceFile.getClientVersion()) {
            return super.getHierarchicalSymbols();
          }
          const _0x2c38ca = [];
          this.appendDocumentSymbolsRecursive(_0x3b8db0.symbols, _0x2c38ca);
          return _0x2c38ca;
        }
      }
      exports.DocumentSymbolProvider = _0x4c9911;
    },
    84014: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FoldingRangeProvider = exports.PylanceFoldingRangeKind = undefined;
      const _0x35a584 = require(56911);
      const _0xb7f18f = require(41557);
      const _0x26cae5 = require(88744);
      const _0x4590a1 = require(91426);
      const _0x324bdb = require(56814);
      const _0x30c397 = require(88754);
      const _0x5ce557 = require(59133);
      const _0x59d94f = require(98920);
      var _0x57d151;
      (function (_0x27928a) {
        _0x27928a.PylanceDocstring = 'Pylance-docstring';
      })(_0x57d151 || (exports.PylanceFoldingRangeKind = _0x57d151 = {}));
      class _0x4c808b {
        static getFoldingRanges(_0x173fbd, _0x44870b) {
          _0x4590a1.throwIfCancellationRequested(_0x44870b);
          const _0x2fbbe4 = this._getRegionMetadata(_0x173fbd);
          const _0x581763 = new _0x294423(_0x173fbd, _0x2fbbe4);
          _0x581763.walk(_0x173fbd.parserOutput.parseTree);
          const _0x1c2a0e = _0x581763.getFoldingRanges();
          return _0x2fbbe4.ranges.concat(_0x1c2a0e);
        }
        static _getRegionMetadata(_0x202e96) {
          const _0x18b1ad = {
            ranges: [],
            startLines: new Set(),
            endLines: new Map()
          };
          const _0x1d4f64 = [];
          const _0x1532de = _0x59d94f.getRegionComments(_0x202e96);
          _0x1532de.forEach(_0x5ecd41 => {
            if (_0x5ecd41.type === 0) {
              _0x1d4f64.push(_0x5ecd41);
            } else {
              if (_0x1d4f64.length > 0) {
                const _0x8c8d87 = _0x1d4f64.pop();
                const _0x25c14b = _0x324bdb.convertOffsetToPosition(_0x8c8d87.comment.start - 1, _0x202e96.tokenizerOutput.lines);
                const _0x25c7c2 = _0x324bdb.convertOffsetToPosition(_0x30c397.TextRange.getEnd(_0x5ecd41.comment), _0x202e96.tokenizerOutput.lines);
                _0x18b1ad.ranges.push({
                  startLine: _0x25c14b.line,
                  startCharacter: _0x25c14b.character,
                  endLine: _0x25c7c2.line,
                  endCharacter: _0x25c7c2.character,
                  kind: _0x35a584.FoldingRangeKind.Region
                });
                _0x18b1ad.startLines.add(_0x25c14b.line);
                _0x18b1ad.endLines.set(_0x25c7c2.line, _0x25c14b.line);
              }
            }
          });
          return _0x18b1ad;
        }
      }
      exports.FoldingRangeProvider = _0x4c808b;
      class _0x294423 extends _0x26cae5.ParseTreeWalker {
        constructor(_0x208761, _0x3c806f) {
          super();
          this._parseResults = _0x208761;
          this._regionMetadata = _0x3c806f;
          this._foldingRanges = [];
          this._firstImport = undefined;
          this._lastImport = undefined;
        }
        getFoldingRanges() {
          this._addImports();
          return this._foldingRanges;
        }
        visitAssert(_0x33cca2) {
          this._addNodeRange(_0x33cca2);
          return true;
        }
        visitCall(_0x299cf9) {
          this._addNodeRange(_0x299cf9);
          return true;
        }
        visitClass(_0xf949ae) {
          this._addTwoNodeRange(_0xf949ae.d.name, _0xf949ae.d.suite);
          return true;
        }
        visitDictionary(_0x4fbadb) {
          this._addNodeRange(_0x4fbadb);
          return true;
        }
        visitFunction(_0x2ceab1) {
          this._addTwoNodeRange(_0x2ceab1.d.name, _0x2ceab1.d.suite);
          return true;
        }
        visitImport(_0x89a186) {
          this._visitImport(_0x89a186);
          return true;
        }
        visitImportAs(_0x5a4eb2) {
          this._visitImport(_0x5a4eb2);
          return true;
        }
        visitImportFrom(_0x1ac8c1) {
          this._visitImport(_0x1ac8c1);
          return true;
        }
        visitImportFromAs(_0x3ddeb3) {
          this._visitImport(_0x3ddeb3);
          return true;
        }
        visitList(_0x345ee9) {
          this._addNodeRange(_0x345ee9);
          return true;
        }
        visitMatch(_0x134eac) {
          this._addNodeRange(_0x134eac);
          return true;
        }
        visitSet(_0x34e069) {
          this._addNodeRange(_0x34e069);
          return true;
        }
        visitStringList(_0xbc9e08) {
          const _0x2a8643 = this._isDocstring(_0xbc9e08);
          this._addTwoNodeRange(_0xbc9e08, _0xbc9e08, _0x2a8643 ? _0x57d151.PylanceDocstring : undefined);
          return true;
        }
        visitSuite(_0x670ebf) {
          if (_0x670ebf.parent?.nodeType !== 10 && _0x670ebf.parent?.nodeType !== 31) {
            this._addNodeRange(_0x670ebf);
          }
          return true;
        }
        visitTuple(_0x4a75dd) {
          this._addNodeRange(_0x4a75dd);
          return true;
        }
        _visitImport(_0x1d5190) {
          if (this._firstImport) {
            this._lastImport = _0x1d5190;
          } else {
            this._firstImport = _0x1d5190;
          }
        }
        _addNodeRange(_0x363f6f) {
          this._addTwoNodeRange(_0x363f6f, _0x363f6f);
        }
        _addImports() {
          if (this._firstImport) {
            this._addTwoNodeRange(this._firstImport, this._lastImport ?? this._firstImport, _0x35a584.FoldingRangeKind.Imports);
            this._firstImport = this._lastImport = undefined;
          }
        }
        _addTwoNodeRange(_0x10eb58, _0x21fcfe, _0x589a62 = undefined) {
          if (_0x589a62 !== _0x35a584.FoldingRangeKind.Imports) {
            this._addImports();
          }
          const _0x29c923 = this._getStartPos(_0x10eb58);
          const _0x3b08e1 = this._getEndPos(_0x10eb58, _0x21fcfe);
          if (_0x29c923.line === _0x3b08e1.line) {
            return;
          }
          this._foldingRanges.push({
            startLine: _0x29c923.line,
            startCharacter: _0x29c923.character,
            endLine: _0x3b08e1.line,
            endCharacter: _0x3b08e1.character,
            kind: _0x589a62
          });
        }
        _isDocstring(_0x7ddd3f) {
          const _0x3c825 = _0xb7f18f.getParentNodeOfType(_0x7ddd3f, 47);
          return _0x3c825 && _0xb7f18f.isDocString(_0x3c825);
        }
        _getEndPos(_0x191163, _0x2795e5) {
          const _0x33be74 = _0x324bdb.convertOffsetToPosition(_0x191163.start, this._parseResults.tokenizerOutput.lines);
          const _0x5874fa = _0x30c397.TextRange.getEnd(_0x2795e5);
          let _0x1edc5a = _0x324bdb.convertOffsetToPosition(_0x5874fa, this._parseResults.tokenizerOutput.lines);
          if (_0x1edc5a.line > _0x33be74.line) {
            _0x1edc5a = this._extendRangeToIncludeTrailingComments(_0x33be74, _0x1edc5a, _0x5874fa);
          }
          return _0x1edc5a;
        }
        _extendRangeToIncludeTrailingComments(_0x56d741, _0x381f18, _0x4fa2d2) {
          const _0x26e908 = this._getTokenForTrailingComments(_0x4fa2d2);
          if (!_0x26e908?.comments || _0x26e908.comments.length === 0) {
            return _0x381f18;
          }
          const _0x745af1 = new _0x5ce557.IndentationUtils();
          const _0x4f041c = _0x745af1.getIndentationFromText(this._parseResults, _0x56d741.line);
          for (let _0x279ec0 = 0; _0x279ec0 < _0x26e908.comments.length; ++_0x279ec0) {
            const _0x1837d6 = _0x324bdb.convertOffsetToPosition(_0x26e908.comments[_0x279ec0].start, this._parseResults.tokenizerOutput.lines);
            if (this._regionMetadata.startLines.has(_0x1837d6.line)) {
              break;
            }
            const _0x54f2d9 = this._regionMetadata.endLines.get(_0x1837d6.line);
            if (_0x54f2d9 !== undefined) {
              if (_0x54f2d9 <= _0x56d741.line) {
                break;
              }
            } else {
              const _0x29a6d1 = _0x745af1.getIndentationFromText(this._parseResults, _0x1837d6.line);
              if (_0x29a6d1.indentation <= _0x4f041c.indentation) {
                break;
              }
            }
            _0x381f18.line = _0x1837d6.line;
            _0x381f18.character = _0x1837d6.character + _0x26e908.comments[_0x279ec0].length;
          }
          return _0x381f18;
        }
        _getTokenForTrailingComments(_0x2d15e3) {
          let _0x22a8c8 = this._parseResults.tokenizerOutput.tokens.getItemAtPosition(_0x2d15e3);
          let _0xe1b756;
          do {
            _0x22a8c8++;
            if (_0x22a8c8 > this._parseResults.tokenizerOutput.tokens.count - 1) {
              return undefined;
            }
            _0xe1b756 = this._parseResults.tokenizerOutput.tokens.getItemAt(_0x22a8c8);
          } while (_0xe1b756.type === 2);
          return _0xe1b756;
        }
        _getStartPos(_0x5c2ae6) {
          const _0x31112b = this._parseResults.tokenizerOutput.lines;
          const _0x46b6b9 = _0x324bdb.convertOffsetToPosition(_0x5c2ae6.start, _0x31112b);
          return _0x324bdb.getLineEndPosition(this._parseResults.tokenizerOutput, this._parseResults.text, _0x46b6b9.line);
        }
      }
    },
    4866: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FormatOnTypeDynamicFeature = undefined;
      const _0x25cfe7 = require(56911);
      const _0x4bda8c = require(55275);
      const _0x5b787f = require(8398);
      class _0x4d9e06 extends _0x4bda8c.DynamicFeature {
        constructor(_0x556103, _0x26dc08, _0x3714bf, _0x4fe428) {
          super('format on type');
          this._connection = _0x556103;
          this._documentSelector = _0x26dc08;
          this._autoIndent = _0x3714bf;
          this._autoFormatStrings = _0x4fe428;
        }
        update(_0xc0f7b) {
          const _0x187861 = _0xc0f7b;
          this._autoIndent = _0x187861.autoIndent ?? false;
          this._autoFormatStrings = _0x187861.autoFormatStrings ?? false;
          this.register();
        }
        registerFeature() {
          const _0x27c171 = _0x5b787f.getDocumentOnTypeFormattingOption(this._autoIndent, this._autoFormatStrings, this._connection.console);
          if (_0x27c171 === undefined) {
            return Promise.resolve(_0x25cfe7.Disposable.create(() => {}));
          }
          return this._connection.client.register(_0x25cfe7.DocumentOnTypeFormattingRequest.type, {
            documentSelector: this._documentSelector,
            ..._0x27c171
          });
        }
      }
      exports.FormatOnTypeDynamicFeature = _0x4d9e06;
    },
    85040: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.GetAttrMemberDefinitionProvider = undefined;
      const _0x3f5d2b = require(41557);
      const _0x5321f2 = require(88744);
      const _0x296587 = require(21024);
      const _0x127d20 = require(91426);
      const _0x2fbb56 = require(56814);
      const _0x328228 = require(24835);
      const _0x3b43a7 = require(61904);
      class _0x25ab9b {
        constructor(_0x539d9e, _0x3ba0bd, _0x13a450, _0x4d0ce9) {
          this._program = _0x539d9e;
          this._fileUri = _0x3ba0bd;
          this._position = _0x13a450;
          this._token = _0x4d0ce9;
          this._parseResults = this._program.getParseResults(this._fileUri);
        }
        getDefinitions() {
          _0x127d20.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return undefined;
          }
          const _0x45a5ba = _0x2fbb56.convertPositionToOffset(this._position, this._parseResults.tokenizerOutput.lines);
          if (_0x45a5ba === undefined) {
            return undefined;
          }
          const _0x382ba1 = _0x3f5d2b.findNodeByOffset(this._parseResults.parserOutput.parseTree, _0x45a5ba);
          if (_0x382ba1?.nodeType !== 38) {
            return undefined;
          }
          const _0x42f7ba = _0x382ba1.parent;
          if (_0x42f7ba?.nodeType !== 35) {
            return undefined;
          }
          const _0x35022 = _0x328228.getBestMatchGetAttrMethods(this._evaluator, _0x42f7ba, _0x328228.getAttrMode(_0x42f7ba));
          if (!_0x35022) {
            return undefined;
          }
          const _0x3391c7 = this._getDocumentRange(_0x382ba1, _0x35022);
          if (!_0x3391c7) {
            return undefined;
          }
          return [_0x3391c7];
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _getDocumentRange(_0x5e42a7, _0x340c3d) {
          const _0x1badfa = _0x340c3d.shared.declaration;
          if (!_0x1badfa) {
            return undefined;
          }
          const _0x127fb9 = this._program.getParseResults(_0x1badfa.uri);
          const _0x46a0cf = _0x328228.firstParamsExcludingSelf(_0x340c3d);
          if (!_0x46a0cf) {
            return undefined;
          }
          if (_0x296587.FunctionParam.isTypeDeclared(_0x46a0cf) && _0x127fb9) {
            const _0x145ffb = _0x3b43a7.getFunctionParameterNode(_0x1badfa.node, _0x46a0cf.name);
            if (!_0x145ffb) {
              return _0x1badfa;
            }
            const _0x4023f5 = _0x3b43a7.getParameterAnnotationNode(_0x145ffb);
            if (!_0x4023f5) {
              return _0x1badfa;
            }
            const _0x101ff1 = _0x1c394f.find(_0x5e42a7.d.value, _0x4023f5);
            if (_0x101ff1) {
              return {
                uri: _0x1badfa.uri,
                range: _0x2fbb56.convertTextRangeToRange(_0x101ff1, _0x127fb9.tokenizerOutput.lines)
              };
            }
          }
          return _0x1badfa;
        }
      }
      exports.GetAttrMemberDefinitionProvider = _0x25ab9b;
      class _0x1c394f extends _0x5321f2.ParseTreeWalker {
        constructor(_0x4f0cfd) {
          super();
          this._memberName = _0x4f0cfd;
        }
        static find(_0x4dc91a, _0x20bd15) {
          const _0x346353 = new _0x1c394f(_0x4dc91a);
          _0x346353.walk(_0x20bd15);
          return _0x346353._matchingNode;
        }
        visit(_0x4f59f7) {
          if (this._matchingNode) {
            return false;
          }
          return super.visit(_0x4f59f7);
        }
        visitString(_0x26aabe) {
          if (_0x26aabe.d.value === this._memberName) {
            this._matchingNode = _0x26aabe;
          }
          return false;
        }
      }
    },
    21575: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.getInlayHints = _0x5c2420;
      exports.resolveInlayHints = _0x3aed42;
      exports.canInsertHintEdit = _0x44e7d4;
      const _0x4be444 = require(56911);
      const _0x3eecd5 = require(44321);
      const _0x25bca3 = require(41557);
      const _0x79254b = require(88744);
      const _0xc94176 = require(21024);
      const _0x37b19c = require(92324);
      const _0x3aca24 = require(8307);
      const _0x1b3d8a = require(91426);
      const _0xd4b14b = require(34455);
      const _0x323e9b = require(56412);
      const _0x4d57c7 = require(56814);
      const _0x39a3dc = require(89740);
      const _0x2cfeaf = require(88754);
      const _0x212442 = require(27113);
      const _0x12b65f = require(39426);
      const _0x378e90 = require(30048);
      const _0x30f803 = require(34365);
      const _0x18978e = require(97125);
      const _0x9d90e7 = require(44657);
      const _0x108442 = 32;
      const _0x52a226 = 64;
      function _0x5c2420(_0x290c6f, _0x1cdce6, _0x1abb9, _0x323877, _0x5ef086) {
        _0x1b3d8a.throwIfCancellationRequested(_0x5ef086);
        const _0x5c4e2b = _0x290c6f.getParseResults(_0x1cdce6);
        if (_0x5c4e2b === undefined || !_0x290c6f.evaluator) {
          return [];
        }
        const _0x5970ef = new _0x11662f(_0x290c6f, _0x1cdce6, _0x1abb9, _0x323877, _0x5ef086);
        return _0x5970ef.collects();
      }
      function _0x3aed42(_0x2701e2, _0x58a0c1, _0x2d5ca9, _0x1855bd) {
        _0x1b3d8a.throwIfCancellationRequested(_0x1855bd);
        if (_0x58a0c1.textEdits !== undefined && Array.isArray(_0x58a0c1.label) && _0x58a0c1.label.some(_0x1934e5 => _0x1934e5.location !== undefined)) {
          return _0x58a0c1;
        }
        const _0x2fed6c = _0x323e9b.fromLSPAny(_0x58a0c1.data);
        const _0x5d2c66 = _0x212442.Uri.parse(_0x2fed6c.fileUri, _0x2701e2.serviceProvider);
        const _0xc77005 = _0x2701e2.getParseResults(_0x5d2c66);
        if (_0xc77005 === undefined || !_0x2701e2.evaluator) {
          return _0x58a0c1;
        }
        const _0x5bffcc = _0x25bca3.getFirstAncestorOrSelfOfKind(_0x25bca3.findNodeByOffset(_0xc77005.parserOutput.parseTree, _0x2fed6c.offset), _0x2fed6c.type);
        if (!_0x5bffcc) {
          return _0x58a0c1;
        }
        const _0x28c611 = new _0x11662f(_0x2701e2, _0x5d2c66, undefined, {
          callArgumentNameInlayHints: _0x9d90e7.CallArgumentNameModes.all,
          variableInlayTypeHints: true,
          functionReturnInlayTypeHints: true,
          pytestParametersInlayTypeHints: true,
          supportedResolveSet: _0x2d5ca9,
          lazyEdit: false
        }, _0x1855bd);
        const _0x41ec2e = _0x458a16(_0x5bffcc);
        if (_0x41ec2e?.textEdits) {
          _0x58a0c1.textEdits = _0x41ec2e.textEdits;
        }
        if (_0x41ec2e?.label) {
          _0x58a0c1.label = _0x41ec2e.label;
        }
        return _0x58a0c1;
        function _0x458a16(_0x503fdb) {
          switch (_0x503fdb.nodeType) {
            case 38:
              return _0x28c611.getVariableInlayHint(_0x503fdb);
            case 41:
              return _0x28c611.getParameterInlayHint(_0x503fdb);
            case 31:
              return _0x28c611.getFunctionInlayHint(_0x503fdb);
            default:
              return _0x58a0c1;
          }
        }
      }
      class _0x11662f extends _0x79254b.ParseTreeWalker {
        constructor(_0x1aca4f, _0x88eb49, _0x1153d0, _0x4922c9, _0x1b3a89) {
          super();
          this._program = _0x1aca4f;
          this._fileUri = _0x88eb49;
          this._preferences = _0x4922c9;
          this._cancellationToken = _0x1b3a89;
          this._builder = [];
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._evaluator = this._program.evaluator;
          this._fixtureFinder = this._program.serviceProvider.tryGet(_0x378e90.PylanceServiceKeys.fixtureFinder);
          if (_0x1153d0) {
            this._range = _0x4d57c7.convertRangeToTextRange(_0x1153d0, this._parseResults.tokenizerOutput.lines);
          }
        }
        collects() {
          this.walk(this._parseResults.parserOutput.parseTree);
          return this._builder;
        }
        getVariableInlayHint(_0x1ccfaf) {
          _0x1b3d8a.throwIfCancellationRequested(this._cancellationToken);
          if (_0x118b2d(_0x1ccfaf)) {
            return undefined;
          }
          const _0x251c67 = this._evaluator.getDeclInfoForNameNode(_0x1ccfaf)?.decls;
          if (!_0x251c67 || _0x251c67.length === 0) {
            return undefined;
          }
          if (_0x251c67.some(_0x2f9ffa => _0xb89111(_0x2f9ffa))) {
            return undefined;
          }
          const _0x1a81e7 = _0x251c67.find(_0x454a1b => _0x454a1b.node.id === _0x1ccfaf.id);
          if (!_0x1a81e7) {
            return undefined;
          }
          if (_0x1a81e7.type !== 1) {
            return undefined;
          }
          if (_0x1a81e7.inferredTypeSource?.nodeType === 14 || _0x1a81e7.inferredTypeSource?.nodeType === 40 || _0x1a81e7.inferredTypeSource?.nodeType === 21) {
            return undefined;
          }
          let _0x54c8bd;
          if (_0x1a81e7.inferredTypeSource?.nodeType === 9) {
            const _0xcce481 = this._evaluator.getType(_0x1a81e7.inferredTypeSource.d.leftExpr);
            if (_0xcce481?.category === 6 && (!_0xc94176.isClassInstance(_0xcce481) || _0xcce481.priv.literalValue)) {
              return undefined;
            }
            _0x54c8bd = _0x12b65f.getTypeForToolTip(this._evaluator, _0x1ccfaf);
          } else {
            _0x54c8bd = _0x12b65f.getTypeForToolTip(this._evaluator, _0x1ccfaf);
            if (!_0x54c8bd || _0x54c8bd.props?.typeAliasInfo || _0xc94176.isClass(_0x54c8bd) && (_0x54c8bd.priv.literalValue || !_0xc94176.isClassInstance(_0x54c8bd))) {
              return undefined;
            }
          }
          if (!_0x54c8bd) {
            return undefined;
          }
          return this._buildHint(_0x1ccfaf, _0x54c8bd, _0x1ccfaf, _0x2cfeaf.TextRange.getEnd(_0x1ccfaf), ': ', _0x108442);
        }
        getParameterInlayHint(_0x5b8114) {
          _0x1b3d8a.throwIfCancellationRequested(this._cancellationToken);
          if (_0x5b8114.d.annotation || _0x5b8114.d.name === undefined) {
            return undefined;
          }
          if (!this._fixtureFinder || !this._preferences.pytestParametersInlayTypeHints) {
            return undefined;
          }
          const _0x1f282b = _0x30f803.tryGetParameterNodeType(this._fixtureFinder, this._evaluator, _0x5b8114, this._cancellationToken);
          if (!_0x1f282b) {
            return undefined;
          }
          return this._buildHint(_0x5b8114, _0x1f282b, _0x5b8114.d.name, _0x2cfeaf.TextRange.getEnd(_0x5b8114), ': ', _0x108442, _0x4be444.InlayHintKind.Type);
        }
        getFunctionInlayHint(_0x4cda15) {
          _0x1b3d8a.throwIfCancellationRequested(this._cancellationToken);
          if (!this._preferences.functionReturnInlayTypeHints) {
            return undefined;
          }
          if (_0x4cda15.d.returnAnnotation || this._hasEllipseForBody(_0x4cda15)) {
            return undefined;
          }
          if (this._isIncompleteFunction(_0x4cda15)) {
            return undefined;
          }
          const _0x3d042c = this._evaluator.getTypeOfFunction(_0x4cda15);
          if (!_0x3d042c) {
            return undefined;
          }
          const _0x5904e0 = this._evaluator.getInferredReturnType(_0x3d042c.functionType);
          const _0x75dc4 = this._buildHint(_0x4cda15, _0x5904e0, _0x4cda15.d.name, _0x4cda15.d.suite.start, ' -> ', _0x52a226);
          if (!_0x44e7d4(_0x4cda15, _0x5904e0)) {
            _0x75dc4.textEdits = [this._generateTextEditsFromLabel(_0x75dc4)];
          }
          this._addQuotesToReturnTypeAnnotations(_0x75dc4.textEdits, _0x3d042c.functionType, _0x5904e0);
          return _0x75dc4;
        }
        visitSuite(_0x2c7500) {
          if (this._isNodeInRange(_0x2c7500)) {
            return true;
          } else {
            return false;
          }
        }
        visitStatementList(_0x324953) {
          if (this._isNodeInRange(_0x324953)) {
            return true;
          } else {
            return false;
          }
        }
        visitName(_0x460da2) {
          return false;
        }
        visitParameter(_0x592126) {
          if (!this._isNodeInRange(_0x592126)) {
            return false;
          }
          this._addInlayHint(this.getParameterInlayHint(_0x592126));
          return true;
        }
        visitCall(_0x394f70) {
          _0x1b3d8a.throwIfCancellationRequested(this._cancellationToken);
          if (this._preferences.callArgumentNameInlayHints === _0x9d90e7.CallArgumentNameModes.off) {
            return true;
          }
          let _0x1725f8;
          if (_0x394f70.d.leftExpr.nodeType === 38) {
            _0x1725f8 = _0x394f70.d.leftExpr;
          } else {
            if (_0x394f70.d.leftExpr.nodeType === 35) {
              _0x1725f8 = _0x394f70.d.leftExpr.d.member;
            }
          }
          if (!_0x1725f8) {
            return true;
          }
          const _0x14fe49 = this._evaluator.getDeclInfoForNameNode(_0x1725f8)?.decls;
          if (!_0x14fe49 || _0x14fe49.length === 0) {
            return true;
          }
          const _0x558d1f = _0x14fe49[0];
          const _0x2d231f = this._evaluator.resolveAliasDeclaration(_0x558d1f, true);
          if (_0x2d231f?.type === 6) {
            const _0x1191c2 = _0x12b65f.getClassAndConstructorTypes(_0x1725f8, this._evaluator);
            if (_0x1191c2?.methodType?.category === 4) {
              this._addArgNameHintsForCall(_0x1191c2.methodType, _0x394f70);
            }
          } else {
            if (_0x2d231f?.type === 1 || _0x2d231f?.type === 5) {
              const _0x1160b5 = _0x12b65f.getTypeForToolTip(this._evaluator, _0x1725f8);
              if (_0x1160b5.category === 4) {
                this._addArgNameHintsForCall(_0x1160b5, _0x394f70);
              }
            }
          }
          return true;
        }
        visitFunction(_0x2e99c) {
          if (!this._isNodeInRange(_0x2e99c)) {
            return false;
          }
          this._addInlayHint(this.getFunctionInlayHint(_0x2e99c));
          return true;
        }
        visitAssignment(_0x1686d4) {
          if (!this._isNodeInRange(_0x1686d4)) {
            return false;
          }
          if (!this._preferences.variableInlayTypeHints) {
            return true;
          }
          _0x1b3d8a.throwIfCancellationRequested(this._cancellationToken);
          if (_0x1686d4.d.leftExpr.nodeType === 52) {
            _0x1686d4.d.leftExpr.d.items.forEach(_0x4b4430 => {
              this._addHintForExpression(_0x4b4430);
            });
          } else {
            this._addHintForExpression(_0x1686d4.d.leftExpr);
          }
          return true;
        }
        _generateTextEditsFromLabel(_0x1d1a8d) {
          const _0x1ba040 = _0x1d1a8d.label;
          const _0x1c44f6 = _0x1d1a8d.position;
          const _0x322c5f = _0xd4b14b.isString(_0x1ba040) ? _0x1ba040 : _0x1ba040.map(_0x1258a0 => _0x1258a0.value).join('');
          return _0x4be444.TextEdit.insert(_0x1c44f6, `:#${_0x322c5f}`);
        }
        _addInlayHint(_0x1d5b43) {
          if (!_0x1d5b43) {
            return;
          }
          this._builder.push(_0x1d5b43);
        }
        _addArgNameHintsForCall(_0x5c2f4f, _0x4ca992) {
          if (this._preferences.callArgumentNameInlayHints === _0x9d90e7.CallArgumentNameModes.off) {
            return;
          }
          const _0x5e9415 = _0x3eecd5.getParamListDetails(_0x5c2f4f);
          const _0x3a9ef6 = 0;
          _0x4ca992.d.args.forEach((_0x25e1e6, _0x28a8a0) => {
            if (_0x25e1e6.d.argCategory === 1 || _0x25e1e6.d.argCategory === 2) {
              return;
            }
            const _0x38c79c = _0x28a8a0;
            let _0xe5bd17 = false;
            const _0x2f57b8 = _0x25e1e6.d.name !== undefined;
            const _0x3e403b = this._preferences.callArgumentNameInlayHints;
            const _0x27f84b = _0x3e403b === _0x9d90e7.CallArgumentNameModes.all || _0x3e403b === _0x9d90e7.CallArgumentNameModes.partial;
            let _0x511db1;
            if (_0x27f84b && _0x3a9ef6 === 0 && !_0x2f57b8 && _0x38c79c < _0x5e9415.positionParamCount) {
              _0x511db1 = _0x5e9415.params[_0x38c79c].param.name;
              const _0x527ce3 = _0x28a8a0 < _0x5e9415.positionOnlyParamCount;
              if (_0x527ce3) {
                _0xe5bd17 = true;
                _0x511db1 = _0x3e403b === _0x9d90e7.CallArgumentNameModes.partial ? undefined : _0x511db1 + '/';
              }
            }
            if (_0x511db1 !== undefined && this._preferences.callArgumentNameInlayHints !== _0x9d90e7.CallArgumentNameModes.off) {
              const _0x239f37 = _0x25e1e6.start;
              const _0x2ab438 = _0x4d57c7.convertOffsetToPosition(_0x239f37, this._parseResults.tokenizerOutput.lines);
              const _0x410449 = _0xe5bd17 ? `${_0x511db1}` : _0x511db1 + '=';
              const _0x74197b = _0xe5bd17 ? [] : [_0x4be444.TextEdit.insert(_0x2ab438, _0x410449)];
              const _0x487330 = _0x39a3dc.truncate(_0x410449, _0x108442);
              this._addInlayHint({
                label: _0x487330,
                position: _0x2ab438,
                kind: _0x4be444.InlayHintKind.Parameter,
                textEdits: _0x74197b
              });
            }
          });
        }
        _hasEllipseForBody(_0x20480f) {
          return _0x20480f.d.suite.d.statements.length > 0 && _0x20480f.d.suite.d.statements[0].nodeType === 47 && _0x20480f.d.suite.d.statements[0].d.statements.length === 1 && _0x20480f.d.suite.d.statements[0].d.statements[0].nodeType === 21;
        }
        _isIncompleteFunction(_0x444595) {
          return _0x444595.d.suite.d.statements.length === 0 || _0x444595.d.suite.d.statements.length > 0 && _0x444595.d.suite.d.statements[0].length === 0 || !this._functionHasColon(_0x444595);
        }
        _functionHasColon(_0xd070a8) {
          const _0x44ccb6 = this._parseResults.tokenizerOutput.tokens;
          const _0x2b72f0 = _0x44ccb6.getItemAtPosition(_0xd070a8.d.suite.start);
          const _0x5be845 = _0x44ccb6.getItemAt(_0x2b72f0);
          return _0x5be845?.type === 10;
        }
        _addQuotesToReturnTypeAnnotations(_0x1e0fd8, _0x2a4e4e, _0x4fc2bf) {
          if (_0x4fc2bf.category !== 6 || !_0x2a4e4e.shared.methodClass || !_0xc94176.ClassType.isSameGenericClass(_0xc94176.ClassType.cloneAsInstantiable(_0x4fc2bf), _0x2a4e4e.shared.methodClass)) {
            return;
          }
          for (const _0x576ce6 of _0x1e0fd8 ?? []) {
            if (_0x576ce6.newText === ` -> ${_0x4fc2bf.shared.name}`) {
              _0x576ce6.newText = ` -> "${_0x4fc2bf.shared.name}"`;
              return;
            }
          }
        }
        _isNodeInRange(_0x8e41b9) {
          if (this._range === undefined) {
            return true;
          }
          return _0x2cfeaf.TextRange.overlapsRange(this._range, _0x8e41b9);
        }
        _addHintForExpression(_0xb64edb) {
          if (_0xb64edb.nodeType !== 38 && _0xb64edb.nodeType !== 35) {
            return;
          }
          this._addInlayHint(this.getVariableInlayHint(_0xb64edb.nodeType === 38 ? _0xb64edb : _0xb64edb.d.member));
        }
        _buildHint(_0x1ac1eb, _0x406926, _0x5042ea, _0x48e4d5, _0x3f483c, _0x207e14, _0x5bb027 = _0x4be444.InlayHintKind.Type) {
          const _0x4eefc8 = _0x4d57c7.convertOffsetToPosition(_0x48e4d5, this._parseResults.tokenizerOutput.lines);
          const _0x3ec351 = `${_0x3f483c}${this._evaluator.printType(_0x406926, {
            expandTypeAlias: false,
            enforcePythonSyntax: true
          })}`;
          const _0x319a1a = _0x4be444.InlayHint.create(_0x4eefc8, _0x39a3dc.truncate(_0x3ec351, _0x207e14), _0x5bb027);
          _0x319a1a.textEdits = [_0x4be444.TextEdit.insert(_0x319a1a.position, _0x3ec351)];
          if (this._isResolveSupported('label.location')) {
            _0x319a1a.label = _0x18978e.buildLabel(this._program, _0x406926, this._fileUri, _0x207e14, _0x3f483c, !this._preferences.lazyEdit, this._cancellationToken);
          }
          if (this._isResolveSupported('textEdits')) {
            _0x319a1a.textEdits = _0x18978e.buildTextEdits(this._program, this._parseResults, this._fileUri, _0x1ac1eb, _0x5042ea, _0x406926, _0x4eefc8, _0x3f483c, this._preferences.lazyEdit, this._cancellationToken);
          }
          if (this._preferences.lazyEdit) {
            _0x319a1a.data = this._createItemData(_0x1ac1eb);
          }
          return _0x319a1a;
        }
        _isResolveSupported(_0x2d613c) {
          var _0x1fd776;
          if ((_0x1fd776 = this._preferences.supportedResolveSet) === null || _0x1fd776 === undefined) {
            return undefined;
          } else {
            return _0x1fd776.has(_0x2d613c);
          }
        }
        _createItemData(_0x3481de) {
          return _0x323e9b.toLSPAny({
            fileUri: this._fileUri.toString(),
            offset: _0x3481de.start,
            type: _0x3481de.nodeType
          });
        }
      }
      function _0x44e7d4(_0xb7a0b4, _0x5adac2) {
        return (_0xb7a0b4.nodeType !== 38 || !_0x3220cf(_0xb7a0b4) && !_0x24cb39(_0xb7a0b4)) && !_0xc94176.isAnyOrUnknown(_0x5adac2) && !_0x55e1b2(_0x5adac2, _0xb7a0b4) && !_0x56b9b5(_0x5adac2) && !_0x37b19c.isPartlyUnknown(_0x5adac2);
      }
      function _0x55e1b2(_0x42cda7, _0x17cff2) {
        let _0x4feee6 = false;
        if (_0x42cda7?.props?.typeAliasInfo) {
          const _0x5e26e1 = _0xc94176.getTypeAliasInfo(_0x42cda7);
          if (_0x17cff2.nodeType === 38 && (_0x5e26e1 === null || _0x5e26e1 === undefined ? undefined : _0x5e26e1.shared.name) === _0x17cff2.d.value) {
            if (!_0xc94176.isTypeVar(_0x42cda7)) {
              _0x4feee6 = true;
            }
          }
        }
        return _0x4feee6;
      }
      function _0x3220cf(_0x21da70) {
        return _0x21da70.parent?.nodeType === 52;
      }
      function _0x24cb39(_0x23e1ce) {
        return _0x23e1ce.parent?.nodeType === 3 && _0x23e1ce.parent.d.rightExpr.nodeType === 3 || _0x23e1ce.parent?.nodeType === 3 && _0x23e1ce.parent.parent?.nodeType === 3;
      }
      function _0x56b9b5(_0x6ea474) {
        class _0x374e82 extends _0x3aca24.TypeWalker {
          constructor() {
            super();
            this.contains = false;
          }
          visitFunction(_0x2d31e2) {
            this.contains = true;
            this.cancelWalk();
          }
        }
        const _0x43f1fe = new _0x374e82();
        _0x43f1fe.walk(_0x6ea474);
        return _0x43f1fe.contains;
      }
      function _0x118b2d(_0x3a6bd8) {
        return _0x3a6bd8.parent?.nodeType === 54;
      }
      function _0xb89111(_0x66c52e) {
        return _0x66c52e.type === 1 && _0x66c52e.typeAnnotationNode !== undefined || _0x66c52e.type === 2 && _0x66c52e.node.d.annotation !== undefined;
      }
    },
    88287: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MagicMethodDefinitionProvider = undefined;
      const _0x156549 = require(41557);
      const _0x26d372 = require(21024);
      const _0x2709a9 = require(91426);
      const _0x3028d7 = require(34455);
      const _0x457710 = require(56814);
      const _0x4c5347 = require(65574);
      const _0x42ab07 = require(4250);
      class _0x2c501f {
        constructor(_0x50d61c, _0x21cf2d, _0x18a62d, _0x41b7db, _0x421e5a) {
          this._program = _0x50d61c;
          this._fileUri = _0x21cf2d;
          this._position = _0x18a62d;
          this._filter = _0x41b7db;
          this._token = _0x421e5a;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._sourceMapper = this._program.getSourceMapper(this._fileUri, this._token);
        }
        getDefinitions() {
          _0x2709a9.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return undefined;
          }
          const _0x42c987 = _0x457710.convertPositionToOffset(this._position, this._parseResults.tokenizerOutput.lines);
          if (_0x42c987 === undefined) {
            return undefined;
          }
          const _0x43ba15 = _0x156549.getTokenOverlapping(this._parseResults.tokenizerOutput.tokens, _0x42c987);
          if (_0x43ba15?.type === 9) {
            return this._handleOperator(_0x43ba15);
          }
          if (_0x43ba15?.type === 8) {
            return this._handleKeyword(_0x43ba15);
          }
          if (_0x43ba15?.type === 7) {
            return this._handleIdentifier(_0x43ba15);
          }
          return undefined;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _handleOperator(_0x279d1f) {
          const _0x20aa6b = _0x42ab07.getMagicMethodInfoForOperator(this._evaluator, this._parseResults.parserOutput, _0x279d1f);
          if (!_0x20aa6b) {
            return undefined;
          }
          return this._handleCore(_0x279d1f, _0x20aa6b);
        }
        _handleKeyword(_0x58b7fc) {
          const _0x702c3b = _0x42ab07.getMagicMethodInfoForKeyword(this._evaluator, this._parseResults.parserOutput, _0x58b7fc);
          if (!_0x702c3b) {
            return undefined;
          }
          return this._handleCore(_0x58b7fc, _0x702c3b);
        }
        _handleIdentifier(_0x56c7a8) {
          const _0x3a3444 = _0x42ab07.getMagicMethodInfoForIdentifier(this._evaluator, this._parseResults.parserOutput, _0x56c7a8);
          if (!_0x3a3444) {
            return undefined;
          }
          return this._handleCore(_0x56c7a8, _0x3a3444);
        }
        _handleCore(_0x351cc7, _0x3f3f10) {
          const _0x5a91f4 = _0x3f3f10.method;
          if (!_0x5a91f4) {
            return undefined;
          }
          const _0xb97b47 = (_0x26d372.isFunction(_0x5a91f4) ? [_0x5a91f4.shared.declaration] : _0x26d372.OverloadedType.getOverloads(_0x5a91f4).map(_0x4b8813 => _0x4b8813.shared.declaration)).filter(_0x3028d7.isDefined);
          const _0x46e68f = [];
          _0x4c5347.addDeclarationsToDefinitions(this._evaluator, this._sourceMapper, _0xb97b47, _0x46e68f);
          if (_0x46e68f.length === 0) {
            return undefined;
          }
          return _0x4c5347.filterDefinitions(this._filter, _0x46e68f);
        }
      }
      exports.MagicMethodDefinitionProvider = _0x2c501f;
    },
    16372: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MagicMethodHoverProvider = undefined;
      const _0x28fd10 = require(41557);
      const _0x136595 = require(21024);
      const _0x5921bd = require(91426);
      const _0x2d967b = require(56814);
      const _0x1b3ca0 = require(88754);
      const _0x319e42 = require(79943);
      const _0x3d12ff = require(39426);
      const _0x3046ab = require(4250);
      class _0x3c0647 {
        constructor(_0x4ea658, _0x1f6ede, _0x31be6c, _0x569ff3, _0x214a55) {
          this._program = _0x4ea658;
          this._fileUri = _0x1f6ede;
          this._position = _0x31be6c;
          this._format = _0x569ff3;
          this._token = _0x214a55;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._sourceMapper = this._program.getSourceMapper(this._fileUri, this._token, true);
        }
        getHover() {
          return _0x319e42.convertHoverResults(this._getHoverResult(), this._format);
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        get _functionSignatureDisplay() {
          return this._program.configOptions.functionSignatureDisplay;
        }
        _getHoverResult() {
          _0x5921bd.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return null;
          }
          const _0xfd8436 = _0x2d967b.convertPositionToOffset(this._position, this._parseResults.tokenizerOutput.lines);
          if (_0xfd8436 === undefined) {
            return null;
          }
          const _0x116401 = _0x28fd10.getTokenOverlapping(this._parseResults.tokenizerOutput.tokens, _0xfd8436);
          if (_0x116401?.type === 9) {
            return this._handleOperator(_0x116401);
          }
          if (_0x116401?.type === 8) {
            return this._handleKeyword(_0x116401);
          }
          return null;
        }
        _handleKeyword(_0x1a3d77) {
          const _0x33e579 = _0x3046ab.getMagicMethodInfoForKeyword(this._evaluator, this._parseResults.parserOutput, _0x1a3d77);
          if (!_0x33e579) {
            return null;
          }
          return this._handleCore(_0x1a3d77, _0x33e579);
        }
        _handleOperator(_0x3c2775) {
          const _0x1e06ba = _0x3046ab.getMagicMethodInfoForOperator(this._evaluator, this._parseResults.parserOutput, _0x3c2775);
          if (!_0x1e06ba) {
            return null;
          }
          return this._handleCore(_0x3c2775, _0x1e06ba);
        }
        _handleCore(_0x3c143c, _0x14c260) {
          if (!_0x14c260.method) {
            return null;
          }
          if (_0x136595.isFunction(_0x14c260.method) && _0x3046ab.isMagicMethodFromBuiltinTypes(_0x14c260.method.shared.moduleName)) {
            return null;
          }
          if (_0x136595.isOverloaded(_0x14c260.method) && _0x136595.OverloadedType.getOverloads(_0x14c260.method).every(_0x59f9fa => _0x3046ab.isMagicMethodFromBuiltinTypes(_0x59f9fa.shared.moduleName))) {
            return null;
          }
          if (_0x136595.isOverloaded(_0x14c260.method) && _0x136595.OverloadedType.getImplementation(_0x14c260.method)) {
            if (_0x3046ab.isMagicMethodFromBuiltinTypes(_0x136595.OverloadedType.getImplementation(_0x14c260.method)?.shared?.moduleName)) {
              return null;
            }
          }
          const _0x246346 = [];
          this._addResultsForDeclaration(_0x14c260.name, _0x14c260.method, _0x246346);
          const _0x325ccb = {
            parts: _0x246346,
            range: {
              start: _0x2d967b.convertOffsetToPosition(_0x3c143c.start, this._parseResults.tokenizerOutput.lines),
              end: _0x2d967b.convertOffsetToPosition(_0x1b3ca0.TextRange.getEnd(_0x3c143c), this._parseResults.tokenizerOutput.lines)
            }
          };
          if (_0x325ccb.parts.length > 0) {
            return _0x325ccb;
          } else {
            return null;
          }
        }
        _addResultsForDeclaration(_0x5dfef8, _0x599d9c, _0x585aa1) {
          const _0x16713a = _0x3d12ff.getToolTipForType(_0x599d9c, 'function', _0x5dfef8, this._evaluator, false, this._functionSignatureDisplay);
          _0x585aa1.push({
            text: _0x16713a,
            python: true
          });
          const _0x3f3af7 = _0x136595.isFunction(_0x599d9c) ? _0x599d9c.shared.declaration : undefined;
          const _0x2f745a = _0x3d12ff.getDocumentationPartsForTypeAndDecl(this._sourceMapper, _0x599d9c, _0x3f3af7, this._evaluator);
          _0x319e42.addDocumentationResultsPart(this._program.serviceProvider, _0x2f745a, this._format, _0x585aa1, _0x3f3af7);
        }
      }
      exports.MagicMethodHoverProvider = _0x3c0647;
    },
    31605: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MoveSymbolProvider = undefined;
      const _0x2d0f97 = require(26687);
      const _0x2fb707 = require(28445);
      const _0x5708ca = require(41557);
      const _0x2916ea = require(53266);
      const _0x29db01 = require(12097);
      const _0x256091 = require(91426);
      const _0x1fa17b = require(58147);
      const _0x58e4e3 = require(12522);
      const _0xa0716a = require(56814);
      const _0x4d20ea = require(93779);
      const _0x2b6d27 = require(88754);
      const _0x280807 = require(95418);
      const _0x382bb1 = require(74382);
      const _0x4d7083 = require(67032);
      const _0x2525ac = require(85114);
      const _0x2fe8d2 = require(33474);
      const _0x18ab69 = require(59133);
      const _0x2ad82a = require(11855);
      const _0x535866 = require(15986);
      const _0x2f5a2e = require(19995);
      const _0x2e39b8 = require(82458);
      class _0x158571 {
        constructor(_0x258953, _0x5c99dd, _0x4ec5f7, _0x3321b3, _0x93eb36, _0x1d44b1) {
          this._program = _0x258953;
          this._fileUri = _0x5c99dd;
          this._newFileUri = _0x4ec5f7;
          this._position = _0x3321b3;
          this._options = _0x93eb36;
          this._token = _0x1d44b1;
        }
        static canMoveSymbol(_0x5be3b7, _0x58760c, _0x12d669) {
          const _0x3a5bc6 = _0x2d0f97.getFileInfo(_0x12d669)?.fileUri;
          if (!_0x3a5bc6 || !_0x58e4e3.matchFileSpecs(_0x5be3b7, _0x3a5bc6, true)) {
            return {
              succeeded: false,
              failedReason: _0x535866.Localizer.Refactoring.moveFileNotUserFile().format({
                name: _0x3a5bc6.fileName
              })
            };
          }
          if (_0x29db01.isPrivateName(_0x12d669.d.value)) {
            return {
              succeeded: false,
              failedReason: _0x535866.Localizer.Refactoring.moveFilePrivateSymbol().format({
                name: _0x12d669.d.value
              })
            };
          }
          const _0x1ff6ee = _0x58760c.lookUpSymbolRecursive(_0x12d669, _0x12d669.d.value, false);
          if (_0x1ff6ee === undefined || _0x1ff6ee.scope.type !== 4) {
            return {
              succeeded: false,
              failedReason: _0x535866.Localizer.Refactoring.moveFileImportableOnly()
            };
          }
          const _0xe01b35 = _0x1ff6ee.symbol.getDeclarations();
          if (_0xe01b35.length === 0) {
            return {
              succeeded: false,
              failedReason: _0x535866.Localizer.Refactoring.moveFileUnsupportedSymbol()
            };
          }
          const _0x16fdb1 = new Set();
          const _0x55f36f = _0xe01b35.every(_0x595af6 => {
            if (!_0x2b6d27.TextRange.containsRange(_0x595af6.node, _0x12d669)) {
              _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileMultipleDeclarations());
              return false;
            }
            if (_0x2fb707.isFunctionDeclaration(_0x595af6) || _0x2fb707.isClassDeclaration(_0x595af6)) {
              return true;
            }
            if (_0x2fb707.isVariableDeclaration(_0x595af6)) {
              if (_0x58760c.isExplicitTypeAliasDeclaration(_0x595af6)) {
                _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileSimpleAssignmentsOnly());
                return false;
              }
              if (_0x595af6.inferredTypeSource && _0x2525ac.isExpressionNode(_0x595af6.inferredTypeSource)) {
                const _0x3cc393 = _0x58760c.getType(_0x595af6.inferredTypeSource);
                if (_0x3cc393?.category === 9) {
                  _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileSimpleAssignmentsOnly());
                  return false;
                }
              }
              const _0x3dfd8a = _0x595af6.node.parent?.nodeType === 54 ? _0x595af6.node.parent.parent : _0x595af6.node.parent;
              if (_0x3dfd8a?.nodeType !== 3 || _0x3dfd8a?.parent?.nodeType !== 47) {
                _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileSimpleAssignmentsOnly());
                return false;
              }
              if (_0x595af6.node.start !== _0x3dfd8a.start) {
                _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileSimpleAssignmentsOnly());
                return false;
              }
              return true;
            }
            _0x16fdb1.add(_0x535866.Localizer.Refactoring.moveFileUnsupportedSymbol());
            return false;
          });
          return {
            succeeded: _0x55f36f,
            failedReason: [..._0x16fdb1].join('\n')
          };
        }
        moveSymbol() {
          const _0x2ca765 = this._fileUri.lastExtension;
          const _0x68890c = this._newFileUri.lastExtension;
          if (_0x2ca765.toLowerCase() !== _0x68890c.toLowerCase()) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileExtensionMismatch().format({
                src: this._fileUri.fileName,
                dest: this._newFileUri.fileName
              }),
              edits: null
            };
          }
          const _0x57bb24 = this._program.getSourceFileInfo(this._fileUri);
          if (!_0x57bb24) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileMissingInfo().format({
                name: this._fileUri.fileName
              }),
              edits: null
            };
          }
          const _0x206b94 = this._program.getSourceFileInfo(this._newFileUri);
          if (_0x57bb24 === _0x206b94) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileSameFile(),
              edits: null
            };
          }
          const _0x32c183 = this._program.getParseResults(this._fileUri);
          if (!_0x32c183) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileMissingInfo().format({
                name: this._fileUri.fileName
              }),
              edits: null
            };
          }
          const _0xf9c38f = _0xa0716a.convertPositionToOffset(this._position, _0x32c183.tokenizerOutput.lines);
          if (_0xf9c38f === undefined) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileSymbolNotFound().format({
                position: `(${this._position.line}:${this._position.character})`
              }),
              edits: null
            };
          }
          const _0x42c200 = _0x5708ca.findNodeByOffset(_0x32c183.parserOutput.parseTree, _0xf9c38f);
          if (_0x42c200 === undefined) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileSymbolNotFound().format({
                position: `(${this._position.line}:${this._position.character})`
              }),
              edits: null
            };
          }
          if (_0x42c200.nodeType !== 38) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileSymbolNotFound().format({
                position: `(${this._position.line}:${this._position.character})`
              }),
              edits: null
            };
          }
          const _0x17f236 = _0x158571.canMoveSymbol(this._program.configOptions, this._evaluator, _0x42c200);
          if (!_0x17f236.succeeded) {
            return {
              failedReason: _0x17f236.failedReason,
              edits: null
            };
          }
          const _0x4a88ae = _0x4d7083.DocumentSymbolCollector.getDeclarationsForNode(this._program, _0x42c200, false, this._token);
          const _0x48970a = _0x2e39b8.SymbolReferenceUpdator.createForSymbol(this._program, this._fileUri, this._newFileUri, _0x4a88ae, this._token);
          if (!_0x48970a) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileAbsentSymbol(),
              edits: null
            };
          }
          _0x48970a.processModuleReferences(_0x42c200.d.value, this._fileUri);
          const _0x4f7099 = _0x48970a.declarations.find(_0x39e2f8 => _0x39e2f8.node && _0x39e2f8.uri.lastExtension === _0x2ca765);
          if (!_0x4f7099) {
            return {
              failedReason: _0x535866.Localizer.Refactoring.moveFileAbsentSymbol(),
              edits: null
            };
          }
          const _0x56ce6a = this._getSymbolTextRange(_0x32c183, _0x4f7099);
          const _0x284cbc = new _0x2f5a2e.ImportAdder(this._program, {
            usageKind: 'move'
          });
          const _0x4f6747 = _0x284cbc.collectImportsForSymbolsUsed(_0x32c183.parserOutput, _0x56ce6a, this._token);
          let _0x4dc0c2 = 0;
          let _0x124e3b = 0;
          const _0x1fb970 = new _0x18ab69.IndentationUtils();
          const _0x32d19a = this._program.getParseResults(this._newFileUri);
          if (_0x32d19a) {
            const _0x27bc46 = _0x48970a.tryGetFirstSymbolUsage(_0x32d19a.parserOutput);
            _0x4dc0c2 = _0x2ad82a.getInsertionPointForSymbolUnderModule(this._evaluator, _0x32d19a, _0x42c200.d.value, {
              symbolDeclToIgnore: _0x4f7099.uri,
              insertBefore: _0x27bc46
            });
            if (_0x4dc0c2 === undefined) {
              return {
                failedReason: _0x535866.Localizer.Refactoring.moveFileInsertLocation().format({
                  name: this._newFileUri.fileName
                }),
                edits: null
              };
            }
            _0x124e3b = _0x1fb970.getModuleStatementIndentation(_0x32d19a);
          }
          const _0x37598a = _0x1fb970.reindentSpan(_0x32c183, _0x56ce6a, _0x124e3b);
          const _0x168307 = this._getSymbolFullStatementTextRange(_0x32c183, _0x4f7099);
          _0x48970a.textEditTracker.addEdit(this._fileUri, _0xa0716a.convertTextRangeToRange(_0x2b6d27.TextRange.combine([_0x37598a.originalSpan, _0x168307]), _0x32c183.tokenizerOutput.lines), '');
          const _0x3c441f = [];
          let _0x73153 = _0x37598a.text;
          if (_0x32d19a) {
            const _0x36b9d3 = _0xa0716a.convertTextRangeToRange({
              start: _0x4dc0c2,
              length: 0
            }, _0x32d19a.tokenizerOutput.lines);
            const _0x59616c = this._getNumberOfBlankLinesToInsert(_0x32d19a, _0x4f7099, _0x36b9d3.end);
            _0x73153 = '\n'.repeat(_0x59616c) + _0x73153;
            _0x48970a.textEditTracker.addEdit(this._newFileUri, _0x36b9d3, _0x73153);
          } else {
            _0x3c441f.push({
              kind: 'create',
              fileUri: this._newFileUri
            });
            _0x48970a.textEditTracker.addEdit(this._newFileUri, _0x2b6d27.getEmptyRange(), _0x73153);
          }
          const _0x15e2ae = this._program.clone();
          let _0x149a10 = _0x48970a.getEdits();
          const _0x533d92 = _0x382bb1.applyTextEditsToString(_0x149a10.filter(_0x393289 => _0x393289.fileUri.equals(this._newFileUri)), (_0x32d19a === null || _0x32d19a === undefined ? undefined : _0x32d19a.tokenizerOutput.lines) ?? new _0x280807.TextRangeCollection([]), (_0x206b94 === null || _0x206b94 === undefined ? undefined : _0x206b94.sourceFile.getFileContent()) ?? '');
          this._updateFileContent(_0x15e2ae, this._newFileUri, _0x533d92);
          const _0x24f53c = this._tryGetTextAfterImportsAdded(_0x15e2ae, this._newFileUri, _0x284cbc, _0x4dc0c2, this._token);
          _0x149a10 = this._updateFileEditActions(_0x149a10, this._newFileUri, _0x32d19a, _0x533d92, _0x24f53c);
          const _0x51e408 = _0x382bb1.applyTextEditsToString(_0x149a10.filter(_0x421191 => _0x421191.fileUri.equals(this._fileUri)), _0x32c183.tokenizerOutput.lines, _0x57bb24.sourceFile.getFileContent());
          this._updateFileContent(_0x15e2ae, this._fileUri, _0x51e408);
          const _0x23a752 = this._tryGetTextAfterUnusedImportsRemoved(_0x15e2ae, this._fileUri, _0x4f6747, 0, this._token);
          _0x149a10 = this._updateFileEditActions(_0x149a10, this._fileUri, _0x32c183, _0x51e408, _0x23a752);
          _0x15e2ae.dispose();
          return {
            failedReason: '',
            edits: _0x382bb1.convertToWorkspaceEdit(this._program.fileSystem, {
              edits: _0x149a10,
              fileOperations: _0x3c441f
            })
          };
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _getSymbolTextRange(_0x2d2dd5, _0x3c8f3c) {
          if (_0x2fb707.isVariableDeclaration(_0x3c8f3c)) {
            const _0x5a2c82 = _0x5708ca.getFirstAncestorOrSelfOfKind(_0x3c8f3c.node, 3) ?? _0x3c8f3c.node;
            const _0x13ff85 = _0x5708ca.getFullStatementRange(_0x5a2c82, _0x2d2dd5);
            let _0x35c1fd = _0xa0716a.convertRangeToTextRange(_0x13ff85, _0x2d2dd5.tokenizerOutput.lines) ?? _0x5a2c82;
            if (_0x3c8f3c.docString !== undefined) {
              const _0x14d0f1 = _0x5708ca.getVariableDocStringNode(_0x3c8f3c.node);
              if (_0x14d0f1) {
                _0x35c1fd = _0x2b6d27.TextRange.extend(_0x35c1fd, _0x14d0f1);
              }
            }
            return _0x35c1fd;
          }
          return _0x3c8f3c.node;
        }
        _getSymbolFullStatementTextRange(_0x56261e, _0x46fd92) {
          var _0x749c5f;
          const _0x17cffc = _0x2fb707.isVariableDeclaration(_0x46fd92) ? _0x5708ca.getFirstAncestorOrSelfOfKind(_0x46fd92.node, 3) ?? _0x46fd92.node : _0x46fd92.node;
          const _0x2d7415 = _0x5708ca.getFullStatementRange(_0x17cffc, _0x56261e, {
            includeTrailingBlankLines: true
          });
          if ((_0x749c5f = _0xa0716a.convertRangeToTextRange(_0x2d7415, _0x56261e.tokenizerOutput.lines)) !== null && _0x749c5f !== undefined) {
            return _0x749c5f;
          } else {
            return _0x17cffc;
          }
        }
        _updateFileEditActions(_0x5c6e62, _0x228bce, _0x524a34, _0x30af23, _0x24be64) {
          if (_0x24be64 === undefined || _0x30af23 === _0x24be64) {
            return _0x5c6e62;
          }
          _0x5c6e62 = _0x5c6e62.filter(_0x5c1bd1 => !_0x5c1bd1.fileUri.equals(_0x228bce));
          _0x5c6e62.push({
            fileUri: _0x228bce,
            range: _0x524a34 ? _0xa0716a.convertTextRangeToRange(_0x524a34.parserOutput.parseTree, _0x524a34.tokenizerOutput.lines) : _0x2b6d27.getEmptyRange(),
            replacementText: _0x24be64
          });
          return _0x5c6e62;
        }
        _tryGetTextAfterImportsAdded(_0x52291d, _0x9d6275, _0x326e4d, _0x5e5626, _0x1b67c9) {
          const _0x306033 = _0x52291d.getBoundSourceFile(_0x9d6275);
          const _0x6707f7 = _0x306033 === null || _0x306033 === undefined ? undefined : _0x306033.getParseResults();
          if (!_0x6707f7) {
            return undefined;
          }
          const _0x35bc77 = _0x326e4d.applyImports(_0x9d6275, _0x6707f7, _0x5e5626, this._options.importFormat, _0x1b67c9);
          return _0x382bb1.applyTextEditsToString(_0x35bc77, _0x6707f7.tokenizerOutput.lines, _0x306033.getFileContent());
        }
        _tryGetTextAfterUnusedImportsRemoved(_0x1b8a36, _0x6c3e6a, _0xb01219, _0x3621a4, _0x40db68) {
          _0x256091.throwIfCancellationRequested(_0x40db68);
          _0x1b8a36.analyzeFile(_0x6c3e6a, _0x40db68);
          const _0x51244f = _0x1b8a36.getBoundSourceFile(_0x6c3e6a);
          const _0x4874b2 = _0x51244f === null || _0x51244f === undefined ? undefined : _0x51244f.getParseResults();
          if (!_0x4874b2) {
            return undefined;
          }
          const _0x12c4a3 = new _0x4d20ea.TextEditTracker();
          for (const _0x3fde2d of _0x2fe8d2.getUnusedImportDiagnosticsForRange(_0x1b8a36, _0x6c3e6a, _0xa0716a.convertTextRangeToRange(_0x4874b2.parserOutput.parseTree, _0x4874b2.tokenizerOutput.lines))) {
            const _0xe55f06 = _0x5708ca.findNodeByPosition(_0x4874b2.parserOutput.parseTree, _0x3fde2d.range.start, _0x4874b2.tokenizerOutput.lines);
            if (_0xe55f06?.nodeType !== 38) {
              continue;
            }
            const _0x39447e = _0xe55f06.parent?.nodeType === 37 ? _0xe55f06.parent.d.nameParts : [_0xe55f06];
            for (const [_0x2fb699, _0x454551] of _0xb01219.declarations) {
              if (_0x2fb699.node) {
                if (_0x2b6d27.TextRange.containsRange(_0x2fb699.node, _0xe55f06)) {
                  _0x12c4a3.removeNodes({
                    node: _0xe55f06,
                    parseFileResults: _0x4874b2
                  });
                  break;
                }
              }
              const _0x4410de = _0x5708ca.getDottedName(_0x5708ca.getDottedNameWithGivenNodeAsLastName(_0x454551[0]));
              if (_0x4410de && _0x1fa17b.arrayEquals(_0x39447e, _0x4410de, (_0x32dfab, _0x4ecedb) => _0x32dfab.d.value === _0x4ecedb.d.value)) {
                _0x12c4a3.removeNodes({
                  node: _0xe55f06,
                  parseFileResults: _0x4874b2
                });
                break;
              }
            }
          }
          const _0x56ce38 = _0x51244f.getFileContent();
          const _0x3126ac = _0x382bb1.applyTextEditsToString(_0x12c4a3.getEdits(_0x40db68).filter(_0x46ae09 => _0x46ae09.fileUri.equals(_0x6c3e6a)), _0x4874b2.tokenizerOutput.lines, _0x56ce38);
          if (_0x3621a4 > 10 || _0x56ce38 === _0x3126ac) {
            return _0x3126ac;
          }
          this._updateFileContent(_0x1b8a36, _0x6c3e6a, _0x3126ac);
          return this._tryGetTextAfterUnusedImportsRemoved(_0x1b8a36, _0x6c3e6a, _0xb01219, _0x3621a4 + 1, _0x40db68);
        }
        _updateFileContent(_0x458ed6, _0x2838f9, _0x5bc68c) {
          var _0x5203d9;
          const _0x5d4d17 = _0x458ed6.getSourceFileInfo(_0x2838f9);
          const _0x3f79a7 = _0x5d4d17 ? (_0x5d4d17.sourceFile.getClientVersion() ?? 0) + 1 : 0;
          const _0x75d50 = _0x5d4d17 ? (_0x5203d9 = _0x5d4d17.chainedSourceFile) === null || _0x5203d9 === undefined ? undefined : _0x5203d9.sourceFile.getUri() : undefined;
          const _0x439b6a = _0x5d4d17 ? _0x5d4d17.sourceFile.getIPythonMode() : _0x2916ea.IPythonMode.None;
          const _0x9560dd = _0x5d4d17 ? _0x5d4d17.isTracked : true;
          _0x458ed6.setFileOpened(_0x2838f9, _0x3f79a7, _0x5bc68c, {
            chainedFileUri: _0x75d50,
            ipythonMode: _0x439b6a,
            isTracked: _0x9560dd
          });
        }
        _getNumberOfBlankLinesToInsert(_0xa2097b, _0x1fca1d, _0x1d57aa) {
          if (_0x1d57aa.line === 0 && _0x1d57aa.character === 0) {
            return 0;
          }
          let _0x3d0bef;
          const _0x3c3bd8 = _0xa0716a.convertPositionToOffset(_0x1d57aa, _0xa2097b.tokenizerOutput.lines);
          if (_0x3c3bd8 && _0xa2097b.parserOutput.parseTree.d.statements.length > 0) {
            _0x3d0bef = _0xa2097b.parserOutput.parseTree.d.statements.reduce((_0x4a2c93, _0x2d16bc) => _0x3c3bd8 < _0x2d16bc.start ? _0x4a2c93 : _0x2d16bc);
          }
          let _0x3cc09a = 0;
          if (_0x3d0bef) {
            if (_0x2fb707.isVariableDeclaration(_0x1fca1d)) {
              switch (_0x3d0bef.nodeType) {
                case 47:
                  _0x3cc09a = 0;
                  break;
                case 10:
                case 31:
                  _0x3cc09a = 2;
                  break;
                default:
                  _0x3cc09a = 1;
              }
            } else {
              _0x3cc09a = 2;
            }
          }
          _0x3cc09a += _0x1d57aa.character !== 0 ? 1 : 0;
          const _0x2d8ce6 = _0x3cc09a;
          const _0x4c7be7 = _0x1d57aa.character !== 0 ? _0x1d57aa.line : _0x1d57aa.line - 1;
          for (let _0x4e49f2 = 0; _0x4e49f2 < _0x2d8ce6; _0x4e49f2++) {
            const _0x338d84 = _0x4c7be7 - _0x4e49f2;
            if (_0x338d84 < 0 || !_0x5708ca.isBlankLine(_0xa2097b.tokenizerOutput, _0xa2097b.text, _0x338d84)) {
              break;
            }
            _0x3cc09a--;
          }
          return _0x3cc09a;
        }
      }
      exports.MoveSymbolProvider = _0x158571;
    },
    30308: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PythonFormatOnTypeProvider = undefined;
      const _0x1c8056 = require(56911);
      const _0x30d680 = require(41557);
      const _0x239747 = require(91426);
      const _0x514d69 = require(56814);
      const _0x515864 = require(88754);
      const _0x3aae0c = require(59133);
      const _0x35337b = require(95349);
      class _0x410cae {
        constructor(_0x155792, _0x2e4b4c, _0x507d23, _0x2e906b, _0x4ac6dc, _0x11b3ec, _0x1947b4) {
          this._fs = _0x155792;
          this._sourceFile = _0x2e4b4c;
          this._position = _0x507d23;
          this._triggerChar = _0x2e906b;
          this._connection = _0x11b3ec;
          this._cancellationToken = _0x1947b4;
          this._parseResults = this._sourceFile.getParseResults();
          this._indentationUtils = new _0x3aae0c.IndentationUtils(_0x4ac6dc ?? _0x3aae0c.DefaultEditorIndentConfig);
        }
        formatOnType() {
          if (!this._parseResults) {
            return undefined;
          }
          switch (this._triggerChar) {
            case ':':
              return _0x410cae._formatOnTypeColon(this._parseResults, this._position, this._indentationUtils, this._cancellationToken);
            case '\n':
              return _0x410cae._formatOnTypeEnter(this._parseResults, this._position, this._indentationUtils, this._cancellationToken);
            case '{':
              return _0x410cae._formatOnTypeOpenCurlyBracket(this._fs, this._parseResults, this._sourceFile, this._position, this._connection, this._cancellationToken);
            default:
              return undefined;
          }
        }
        static _formatOnTypeOpenCurlyBracket(_0x4a2113, _0x350102, _0x3e8ff8, _0x258f24, _0x4b475f, _0x3c1197) {
          const _0x3f6944 = _0x30d680.findNodeByPosition(_0x350102.parserOutput.parseTree, _0x258f24, _0x350102.tokenizerOutput.lines);
          if (_0x3f6944 && _0x3f6944.nodeType === 49) {
            const _0x5c9f3 = _0x30d680.getParentNodeOfType(_0x3f6944, 47);
            if (_0x5c9f3 && _0x30d680.isDocString(_0x5c9f3)) {
              return undefined;
            }
            const _0x33457b = _0x30d680.getTokenAt(_0x350102.tokenizerOutput.tokens, _0x3f6944.start + _0x3f6944.length);
            if (_0x3f6944.d.value.split('{').length < 3 && _0x3f6944.d.token.prefixLength === 0 && (!_0x33457b || _0x33457b.type !== 20)) {
              const _0x32d1ca = _0x514d69.convertOffsetToPosition(_0x3f6944.start, _0x350102.tokenizerOutput.lines);
              const _0x24251e = [{
                range: {
                  start: _0x32d1ca,
                  end: _0x32d1ca
                },
                newText: 'f'
              }];
              const _0x3cc560 = {
                textDocument: {
                  uri: _0x3e8ff8.getUri().toString(),
                  version: _0x3e8ff8.getClientVersion() ?? null
                },
                edits: _0x24251e,
                cursorPosition: {
                  line: _0x258f24.line,
                  character: _0x258f24.character + 1
                }
              };
              _0x4b475f.sendRequest(_0x35337b.CustomLSP.Requests.ApplyCursorMovingEdit, _0x3cc560);
            }
          }
          return undefined;
        }
        static _formatOnTypeEnter(_0x42e537, _0x4becdd, _0x24d13b, _0x9ffa85) {
          _0x239747.throwIfCancellationRequested(_0x9ffa85);
          const _0x369578 = _0x514d69.convertPositionToOffset(_0x4becdd, _0x42e537.tokenizerOutput.lines);
          if (!_0x369578) {
            return undefined;
          }
          const _0x2d07a6 = _0x42e537.tokenizerOutput.lines.getItemAtPosition(_0x369578);
          const _0x506fba = _0x514d69.getLineEndOffset(_0x42e537.tokenizerOutput, _0x42e537.text, _0x2d07a6);
          const _0x134c23 = _0x369578 > 0 && _0x506fba > _0x369578 ? _0x369578 - 1 : _0x369578;
          const _0x1bde53 = _0x24d13b.findNonWhitespaceTokenAtOrBeforeOffset(_0x42e537.tokenizerOutput.tokens, _0x134c23);
          let _0xe42a8 = undefined;
          if (_0x1bde53) {
            const _0x3c3019 = _0x515864.TextRange.getEnd(_0x1bde53);
            const _0x5cd2cc = _0x514d69.convertOffsetToPosition(_0x3c3019, _0x42e537.tokenizerOutput.lines);
            if (_0x5cd2cc.line < _0x4becdd.line - 1) {
              const _0x531e7f = _0x24d13b.findCommentAtOrBeforeOffset(_0x42e537.tokenizerOutput.tokens, _0x134c23);
              if (_0x531e7f) {
                const _0x7b4ca9 = _0x515864.TextRange.getEnd(_0x531e7f);
                const _0x27c70f = _0x514d69.convertOffsetToPosition(_0x7b4ca9, _0x42e537.tokenizerOutput.lines);
                if (_0x27c70f.line < _0x4becdd.line - 1) {
                  return undefined;
                }
                const _0x3ae7f0 = _0x24d13b.getIndentationFromText(_0x42e537, _0x4becdd.line - 1);
                _0xe42a8 = _0x3ae7f0.indentation;
              } else {
                return undefined;
              }
            }
          }
          _0xe42a8 = _0xe42a8 ?? _0x24d13b.getNewlineIndentation(_0x42e537, _0x134c23);
          const _0x126ac5 = _0x410cae._getCurrentIndent(_0x42e537, _0x4becdd, _0x369578) ?? _0x4becdd;
          const _0x48bd65 = _0x24d13b.getSliceFromText(_0x42e537, _0x4becdd.line, _0x126ac5.character);
          if (_0x48bd65.trim().length === 0) {
            return [_0x1c8056.TextEdit.replace({
              start: {
                character: 0,
                line: _0x4becdd.line
              },
              end: _0x126ac5
            }, _0x24d13b.createIndentationString(_0x42e537, _0xe42a8))];
          } else {
            return undefined;
          }
        }
        static _formatOnTypeColon(_0x52e382, _0x19903c, _0x597bed, _0x4820d7) {
          _0x239747.throwIfCancellationRequested(_0x4820d7);
          const _0x2b5b52 = _0x514d69.convertPositionToOffset(_0x19903c, _0x52e382.tokenizerOutput.lines);
          if (!_0x2b5b52 || _0x2b5b52 < 1) {
            return undefined;
          }
          const _0x39ad23 = _0xfffe32(_0x19903c, _0x2b5b52);
          if (!_0x39ad23) {
            return undefined;
          }
          const _0x297f33 = _0x597cbc(_0x39ad23, _0x2b5b52);
          if (_0x297f33 < 1) {
            return undefined;
          }
          return [_0x1c8056.TextEdit.del({
            start: {
              character: 0,
              line: _0x19903c.line
            },
            end: {
              character: _0x297f33,
              line: _0x19903c.line
            }
          })];
          function _0xfffe32(_0x10f01a, _0x6df039) {
            const _0x577684 = _0x52e382.tokenizerOutput.tokens.getItemAtPosition(_0x6df039 - 1);
            if (_0x577684 < 0) {
              return undefined;
            }
            const _0x1a0aac = _0x52e382.tokenizerOutput.tokens.getItemAt(_0x577684);
            if (!_0x1a0aac || _0x1a0aac.type !== 10) {
              return undefined;
            }
            const _0x55d9eb = _0x52e382.tokenizerOutput.lines.getItemAt(_0x10f01a.line).start;
            for (let _0x469701 = _0x577684; _0x469701 >= 0; --_0x469701) {
              const _0x2410a4 = _0x52e382.tokenizerOutput.tokens.getItemAt(_0x469701);
              if (!_0x2410a4) {
                return undefined;
              }
              if (_0x2410a4.start < _0x55d9eb) {
                return undefined;
              }
              if (_0x2410a4.type === 8) {
                const _0x2f4693 = _0x2410a4;
                if (_0x17fcd8(_0x2f4693.keywordType)) {
                  return _0x2f4693;
                }
              }
            }
            return undefined;
          }
          function _0x17fcd8(_0x477096) {
            switch (_0x477096) {
              case 12:
              case 13:
              case 14:
              case 16:
                return true;
              default:
                return false;
            }
          }
          function _0x597cbc(_0x5a6957, _0x3fc0da) {
            const _0x3453b8 = _0x30d680.findNodeByOffset(_0x52e382.parserOutput.parseTree, _0x3fc0da);
            const _0x19a171 = _0x30d680.findNodeByOffset(_0x52e382.parserOutput.parseTree, _0x515864.TextRange.getEnd(_0x5a6957));
            if (!_0x3453b8 || !_0x19a171) {
              return 0;
            }
            if (_0x19a171.nodeType !== 0) {
              return 0;
            }
            const _0x3ed45f = _0x30d680.getFirstAncestorOrSelfOfKind(_0x3453b8, 50);
            const _0x4404c4 = _0x30d680.getFirstAncestorOrSelfOfKind(_0x19a171, 50);
            let _0x4f1912 = _0x3ed45f;
            if (!_0x4f1912 || !_0x4f1912.parent || _0x4404c4 && _0x4404c4.start > _0x4f1912.start) {
              _0x4f1912 = _0x4404c4;
            }
            if (!_0x4f1912 || !_0x4f1912.parent) {
              return 0;
            }
            const _0x1b88e9 = _0x514d69.convertOffsetToPosition(_0x4f1912.parent.start, _0x52e382.tokenizerOutput.lines);
            const _0xec256a = _0x597bed.getIndentationFromText(_0x52e382, _0x1b88e9.line);
            const _0xcdf554 = _0x597bed.getIndentationFromText(_0x52e382, _0x19903c.line);
            if (_0xec256a.containsSpaces && _0xec256a.containsTabs || _0xcdf554.containsSpaces && _0xcdf554.containsTabs) {
              return 0;
            }
            if (_0xec256a.charOffset >= _0xcdf554.charOffset) {
              return 0;
            }
            if (_0xec256a.charOffset > 0 && (_0xec256a.containsSpaces !== _0xcdf554.containsSpaces || _0xec256a.containsTabs !== _0xcdf554.containsTabs)) {
              return 0;
            }
            return _0xcdf554.charOffset - _0xec256a.charOffset;
          }
        }
        static _getCurrentIndent(_0x29625f, _0x5282ac, _0x3822ca) {
          let _0x34ab65 = _0x3822ca;
          const _0x19c2c9 = _0x29625f.tokenizerOutput.tokens.getItemAtPosition(_0x3822ca);
          const _0x5432d0 = _0x29625f.tokenizerOutput.tokens.getItemAt(_0x19c2c9);
          if (_0x5432d0 && _0x5432d0.type === 3) {
            const _0x3d0963 = _0x515864.TextRange.getEnd(_0x5432d0);
            const _0x18e798 = _0x29625f.tokenizerOutput.lines.getItemAtPosition(_0x3d0963);
            if (_0x18e798 === _0x5282ac.line && _0x3d0963 > _0x34ab65) {
              _0x34ab65 = _0x3d0963;
            }
          }
          if (_0x34ab65 === _0x3822ca) {
            return _0x5282ac;
          } else {
            return _0x514d69.convertOffsetToPosition(_0x34ab65, _0x29625f.tokenizerOutput.lines);
          }
        }
      }
      exports.PythonFormatOnTypeProvider = _0x410cae;
    },
    76966: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ExtractMethodProvider = exports.CannotExtractReason = undefined;
      const _0x2ef209 = __importStar(require(26687));
      const _0x3e25f7 = require(15157);
      const _0x5770ab = require(41557);
      const _0x56b55c = __importStar(require(41557));
      const _0x2fc366 = require(88744);
      const _0x233a81 = require(21024);
      const _0xf87b57 = require(92324);
      const _0x261a30 = require(56507);
      const _0x204a99 = require(56814);
      const _0x3a2af1 = require(88754);
      const _0x868aa8 = require(26005);
      const _0x1c9c26 = require(85114);
      const _0x591a0a = require(93819);
      var _0x4dad77;
      (function (_0x34305d) {
        _0x34305d[_0x34305d.None = 0] = 'None';
        _0x34305d.InvalidTargetSelected = 'Invalid Target Selected';
        _0x34305d.InvalidExpressionSelected = 'Invalid Expression Selected';
        _0x34305d.InvalidExpressionAndStatementSelected = 'Invalid Expression and Statement Selected';
        _0x34305d.ContainsYieldExpression = 'Cannot extract yield';
        _0x34305d.ContainsContinueWithoutLoop = 'Cannot extract continue without enclosing while/for loop';
        _0x34305d.ContainsBreakWithoutLoop = 'Cannot extract break without enclosing while/for loop';
        _0x34305d.ContainsReturnExpression = 'Cannot extract return';
        _0x34305d.ContainsMultipleReturns = 'Cannot extract multiple returns';
        _0x34305d.ReturnShouldBeLastStatement = 'Return should be last statement';
        _0x34305d.ContainsPartialIfElseStatement = 'Cannot extract partial if/else statement';
        _0x34305d.PartialCommentSelected = 'Cannot extract partial comment';
      })(_0x4dad77 || (exports.CannotExtractReason = _0x4dad77 = {}));
      class _0x2bf0e9 {
        static extractVariable(_0x3ba1ed, _0x1d4b0a, _0x5dacbc, _0x21f56c) {
          if (_0x1d4b0a === undefined || _0x3ba1ed.isEmpty()) {
            return;
          }
          const _0xf1cb51 = _0x204a99.convertRangeToTextRange(_0x5dacbc, _0x1d4b0a.tokenizerOutput.lines);
          if (!_0xf1cb51) {
            return;
          }
          const _0x47e7b2 = this.canExtractVariable(_0x1d4b0a, _0xf1cb51);
          if (_0x47e7b2.failedReason !== _0x4dad77.None) {
            throw new Error(_0x47e7b2.failedReason);
          }
          if (_0x21f56c.isCancellationRequested) {
            return;
          }
          const _0x202328 = this._extractVariableGenerator(_0x3ba1ed, _0x47e7b2, _0x1d4b0a);
          if (!_0x202328) {
            return;
          }
          return {
            newSymbolName: _0x202328.newSymbolName,
            actions: _0x202328.actions
          };
        }
        static extractMethod(_0x3aa7c2, _0x383e1f, _0x305505, _0x257652) {
          const _0x400a84 = _0x3aa7c2.getParseResults(_0x383e1f);
          if (_0x400a84 === undefined || _0x3aa7c2.evaluator === undefined || _0x383e1f === undefined) {
            return;
          }
          const _0x24e51a = _0x204a99.convertRangeToTextRange(_0x305505, _0x400a84.tokenizerOutput.lines);
          if (!_0x24e51a) {
            return;
          }
          const _0x1bddd8 = this.canExtractMethod(_0x400a84, _0x24e51a, _0x3aa7c2.evaluator);
          if (_0x1bddd8.failedReason !== _0x4dad77.None) {
            throw new Error(_0x1bddd8.failedReason);
          }
          if (_0x257652.isCancellationRequested) {
            return;
          }
          if (_0x1bddd8.range === undefined || _0x1bddd8.bodyNodes === undefined || _0x1bddd8.parentNode === undefined) {
            throw new Error(_0x4dad77.InvalidTargetSelected);
          }
          const _0x59d4fc = _0x56b55c.getEvaluationScopeNode(_0x1bddd8.parentNode).node;
          const _0x589234 = _0x2ef209.getScope(_0x59d4fc);
          const _0x2b6a64 = _0x589234 === null || _0x589234 === undefined ? undefined : _0x589234.getGlobalScope().scope;
          const _0x36dc72 = this._findSymbolsReferences(_0x3aa7c2, _0x383e1f, _0x1bddd8.parentNode, _0x589234, _0x257652);
          const _0x1e5c3d = this._findSignatureSymbols(_0x2b6a64, _0x36dc72, _0x1bddd8.range, _0x400a84, _0x257652);
          const _0x251560 = this._findOutputSymbols(_0x36dc72, _0x1bddd8.range, _0x400a84, _0x257652);
          if (_0x257652.isCancellationRequested) {
            return;
          }
          const _0x4bb96c = this._extractMethodGenerator(_0x1e5c3d, _0x251560, _0x1bddd8, _0x400a84, _0x3aa7c2.evaluator, _0x383e1f);
          if (!_0x4bb96c) {
            return;
          }
          return {
            newSymbolName: _0x4bb96c.newSymbolName,
            actions: _0x4bb96c.actions
          };
        }
        static canExtractVariable(_0x5d08b5, _0x71c899) {
          let _0x3569ac = undefined;
          let _0xcc44a3 = undefined;
          let _0x2461db = undefined;
          try {
            if (_0x71c899.length === 0) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            _0x2461db = this.verifyAndAdjustSelectionNodes(_0x5d08b5, _0x71c899);
            if (_0x2461db === undefined) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            if (!this._containsOnlyExpressions(_0x5d08b5.parserOutput, _0x2461db)) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            _0x3569ac = _0x251fc1(_0x5d08b5, _0x2461db);
            if (!_0x3569ac) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            _0xcc44a3 = this._findNodesInRange(_0x3569ac, _0x2461db);
            if (_0xcc44a3 === undefined || _0xcc44a3.length === 0) {
              return {
                failedReason: _0x4dad77.InvalidTargetSelected
              };
            }
            const _0x55972c = _0xcc44a3.every(_0x42981a => this._isExpression(_0x42981a));
            const _0x49ee4d = _0x5770ab.findNodeByOffset(_0x5d08b5.parserOutput.parseTree, _0x2461db.start);
            if (!_0x49ee4d) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            if (!this._isValidExtractionNode(_0x49ee4d)) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            const _0xfe85d8 = this._checkUnsupportedExpressions(_0x3569ac, _0xcc44a3, _0x2461db, _0x55972c);
            return {
              range: _0x2461db,
              parentNode: _0x3569ac,
              bodyNodes: _0xcc44a3,
              failedReason: _0xfe85d8,
              isExpression: _0x55972c
            };
          } catch (_0x543339) {
            return {
              failedReason: _0x4dad77.InvalidExpressionSelected
            };
          }
        }
        static canExtractMethod(_0x127c7b, _0x807494, _0x1a8cc9) {
          try {
            if (_0x807494.length === 0) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            if (_0x1a8cc9 === undefined) {
              return {
                failedReason: _0x4dad77.InvalidExpressionSelected
              };
            }
            const _0x5b19fa = this.verifyAndAdjustSelectionNodes(_0x127c7b, _0x807494);
            if (_0x5b19fa === undefined) {
              return {
                failedReason: _0x4dad77.InvalidTargetSelected
              };
            }
            if (this._selectionInsideComment(_0x127c7b, _0x5b19fa)) {
              return {
                failedReason: _0x4dad77.PartialCommentSelected
              };
            }
            const _0x5e2259 = _0x251fc1(_0x127c7b, _0x5b19fa);
            if (!_0x5e2259) {
              return {
                failedReason: _0x4dad77.InvalidTargetSelected
              };
            }
            const _0x3b91a2 = _0x5e2259.nodeType === 36 ? _0x5e2259 : _0x5770ab.getEnclosingClassOrModule(_0x5e2259);
            const _0x52143b = _0x56b55c.getEnclosingFunction(_0x5e2259);
            if (_0x3b91a2?.nodeType === 10 && _0x52143b === undefined) {
              return {
                failedReason: _0x4dad77.InvalidExpressionAndStatementSelected
              };
            }
            const _0x3c5490 = this._verifyReturnStatements(_0x5e2259, _0x1a8cc9, _0x5b19fa);
            if (_0x3c5490 !== _0x4dad77.None) {
              return {
                failedReason: _0x3c5490
              };
            }
            const _0x21cba1 = this._findNodesInRange(_0x5e2259, _0x5b19fa);
            if (_0x21cba1 === undefined || _0x21cba1.length === 0) {
              return {
                failedReason: _0x4dad77.InvalidTargetSelected
              };
            }
            const _0x24a182 = _0x21cba1.every(_0x5550be => this._isExpression(_0x5550be));
            const _0x37dd1d = this._checkUnsupportedExpressions(_0x5e2259, _0x21cba1, _0x5b19fa, _0x24a182);
            return {
              range: _0x5b19fa,
              parentNode: _0x5e2259,
              bodyNodes: _0x21cba1,
              failedReason: _0x37dd1d,
              isExpression: _0x24a182
            };
          } catch (_0x36bc7f) {
            return {
              failedReason: _0x4dad77.InvalidExpressionAndStatementSelected
            };
          }
        }
        static verifyAndAdjustSelectionNodes(_0x1bcf5b, _0x185cda) {
          const _0x23d915 = _0x1bcf5b.parserOutput.parseTree;
          const _0x501887 = _0x3e6644(_0x185cda, _0x1bcf5b.text);
          const _0x1dedc1 = _0x5770ab.findNodeByOffset(_0x23d915, _0x501887.start);
          if (!_0x1dedc1) {
            return;
          }
          if (_0x5b937f(_0x1dedc1)) {
            return;
          }
          if (!_0x1dedc1 || !_0x9ed67c(_0x501887, _0x1dedc1)) {
            return;
          }
          const _0x59517a = _0x3a2af1.TextRange.getEnd(_0x501887);
          const _0x16a5eb = _0x5770ab.findNodeByOffset(_0x23d915, _0x59517a);
          if (!_0x16a5eb) {
            return;
          }
          const _0x287166 = _0x9ed67c(_0x501887, _0x16a5eb);
          if (_0x3a2af1.TextRange.contains(_0x501887, _0x16a5eb.start) && !_0x287166) {
            return;
          }
          const _0x4c48a5 = _0x56b55c.getTypeVarScopeNode(_0x1dedc1);
          const _0xa48677 = _0x56b55c.getTypeVarScopeNode(_0x16a5eb);
          const _0x2ec351 = _0x4c48a5 && _0xa48677 && _0x4c48a5.id !== _0xa48677.id;
          if (_0x2ec351) {
            return;
          }
          if (!this._isValidExtractionNode(_0x16a5eb)) {
            return;
          }
          if (_0x16a5eb && _0x1dedc1.start > _0x16a5eb?.start) {
            return;
          }
          if (_0x1dedc1.parent?.nodeType === 11) {
            if (!_0x9ed67c(_0x501887, _0x1dedc1.parent)) {
              return;
            }
          }
          return _0x501887;
        }
        static _containsOnlyExpressions(_0x59bfa5, _0x4c67f7) {
          const _0x2129d4 = _0x5770ab.findNodeByOffset(_0x59bfa5.parseTree, _0x4c67f7.start);
          const _0xa7d187 = _0x5770ab.findNodeByOffset(_0x59bfa5.parseTree, _0x3a2af1.TextRange.getEnd(_0x4c67f7));
          const _0x1c3f67 = _0x1202ec(_0x2129d4, _0xa7d187);
          if (!_0x1c3f67) {
            return false;
          }
          return _0x1c9c26.isExpressionNode(_0x1c3f67);
        }
        static _extractVariableGenerator(_0x1c388a, _0x556a4d, _0x4c9462) {
          var _0x23ee92;
          if (_0x556a4d.parentNode === undefined || _0x556a4d.bodyNodes === undefined || _0x556a4d.range === undefined) {
            return;
          }
          let _0x598894;
          const _0x2de4a4 = _0x56b55c.getEnclosingFunction(_0x556a4d.parentNode);
          if (_0x2de4a4 !== undefined) {
            _0x598894 = _0x407046('new_var', _0x2de4a4);
          } else {
            _0x598894 = _0x172a41('new_var', _0x556a4d.parentNode);
          }
          const _0x13987c = _0x598894 + ' = ' + this._expressionNodesToString(_0x556a4d.bodyNodes, _0x4c9462, _0x556a4d.range);
          const _0x404cc5 = [];
          _0x404cc5.push({
            replacementText: _0x598894,
            fileUri: _0x1c388a,
            range: _0x204a99.convertTextRangeToRange(_0x556a4d.range, _0x4c9462.tokenizerOutput.lines)
          });
          const _0x674055 = _0x556a4d.parentNode.nodeType === 50 || _0x556a4d.parentNode.nodeType === 36 ? _0x556a4d.parentNode : _0x5770ab.getEnclosingSuiteOrModule(_0x556a4d.parentNode, false, false);
          const _0x5992d4 = (_0x23ee92 = _0x674055 === null || _0x674055 === undefined ? undefined : _0x674055.d.statements) === null || _0x23ee92 === undefined ? undefined : _0x23ee92.find(_0x142574 => {
            const _0x3a1776 = _0x3a2af1.TextRange.create(_0x142574.start, _0x142574.length);
            return _0x3a2af1.TextRange.contains(_0x3a1776, _0x556a4d.range.start);
          });
          if (_0x5992d4) {
            const _0x447d35 = _0x5992d4.start;
            const _0x350f32 = _0x204a99.convertOffsetToPosition(_0x5992d4.start, _0x4c9462.tokenizerOutput.lines).character;
            _0x404cc5.push({
              replacementText: _0x13987c + '\n' + ' '.repeat(_0x350f32),
              fileUri: _0x1c388a,
              range: _0x204a99.convertOffsetsToRange(_0x447d35, _0x447d35, _0x4c9462.tokenizerOutput.lines)
            });
          }
          return {
            actions: _0x404cc5,
            newSymbolName: _0x598894
          };
        }
        static _findSymbolsReferences(_0x265d6f, _0x1c44d1, _0x58ebf4, _0x133883, _0x3517b3) {
          const _0x4358bd = new Map();
          if (_0x133883 === undefined || _0x58ebf4 === undefined) {
            return _0x4358bd;
          }
          if (_0x133883 === null || _0x133883 === undefined) {
            undefined;
          } else {
            _0x133883.symbolTable.forEach((_0x4c03c1, _0x29b4fc) => {
              if (_0x3517b3.isCancellationRequested) {
                return;
              }
              const _0x3c7e72 = false;
              const _0x10eb01 = new _0x868aa8.ReferencesResult(_0x3c7e72, _0x58ebf4, [_0x29b4fc], _0x4c03c1.getDeclarations(), _0x261a30.ReferenceUseCase.References, []);
              const _0x193d75 = true;
              const _0x1967e0 = new _0x868aa8.FindReferencesTreeWalker(_0x265d6f, _0x1c44d1, _0x10eb01, _0x193d75, _0x3517b3);
              _0x10eb01.addResults(..._0x1967e0.findReferences());
              _0x4358bd.set(_0x29b4fc, _0x10eb01);
            });
          }
          return _0x4358bd;
        }
        static _verifyReturnStatements(_0x3e4662, _0xe60d9b, _0x559c1e) {
          const _0x257395 = _0x56b55c.getEnclosingFunction(_0x3e4662);
          if (_0x257395 !== undefined) {
            const _0x2775f2 = _0xe60d9b.getTypeOfFunction(_0x257395);
            const _0x49dc57 = (_0x2775f2 === null || _0x2775f2 === undefined ? undefined : _0x2775f2.functionType.shared.declaration)?.returnStatements;
            if (_0x49dc57 && _0x49dc57.length > 1) {
              const _0x5d411f = _0x49dc57.filter(_0x5a042c => _0x3a2af1.TextRange.contains(_0x559c1e, _0x5a042c.start));
              if (_0x5d411f.length > 1) {
                return _0x4dad77.ContainsMultipleReturns;
              }
              const _0x40e018 = _0x49dc57.slice(0, -1).some(_0x3c84c0 => _0x3a2af1.TextRange.contains(_0x559c1e, _0x3c84c0.start));
              if (_0x40e018) {
                return _0x4dad77.ReturnShouldBeLastStatement;
              }
            }
          }
          return _0x4dad77.None;
        }
        static _checkUnsupportedExpressions(_0x21bdf8, _0x17b11a, _0x2b433b, _0x3375b3) {
          if (_0x17b11a.length === 0 || _0x17b11a[0] === undefined) {
            return _0x4dad77.InvalidTargetSelected;
          }
          const _0x30be74 = new _0x34db84(_0x2b433b);
          _0x30be74.check(_0x21bdf8);
          if (_0x30be74.hasNonEnclosedContinue) {
            return _0x4dad77.ContainsContinueWithoutLoop;
          }
          if (_0x30be74.hasNonEnclosedBreak) {
            return _0x4dad77.ContainsBreakWithoutLoop;
          }
          if (_0x21bdf8.nodeType === 41) {
            return _0x4dad77.InvalidExpressionSelected;
          }
          if (!_0x3375b3) {
            const _0x6b6403 = _0x17b11a.some(_0x1e0766 => {
              if (_0x1e0766) {
                const _0x49e54a = _0x17b11a.find(_0xf8ce5a => {
                  return _0xf8ce5a && _0xf8ce5a.id === _0x1e0766.parent?.id;
                });
                if (!_0x49e54a) {
                  return this._isExpression(_0x1e0766);
                }
                return false;
              }
              return false;
            });
            const _0x5990e9 = _0x17b11a.some(_0x1d5bed => _0x1d5bed && _0x1d5bed.nodeType === 1 && _0x1d5bed.d.name !== undefined);
            if (_0x6b6403 || _0x5990e9) {
              return _0x4dad77.InvalidExpressionAndStatementSelected;
            }
            const _0x2aebd6 = _0x17b11a.some(_0x455d91 => _0x455d91?.nodeType === 16);
            if (_0x2aebd6) {
              return _0x4dad77.InvalidTargetSelected;
            }
          }
          const _0x1d76cf = _0x17b11a.length === 1 && _0x17b11a[0].nodeType === 38;
          if (_0x1d76cf) {
            return _0x4dad77.InvalidTargetSelected;
          }
          const _0x5e512d = new _0x3e25f7.YieldFinder();
          const _0xe06a41 = _0x17b11a.some(_0x4edbc4 => _0x4edbc4 && _0x5e512d.checkContainsYield(_0x4edbc4));
          if (_0xe06a41) {
            return _0x4dad77.ContainsYieldExpression;
          }
          const _0x142258 = _0x17b11a.some(_0x2355a6 => {
            return _0x2355a6?.nodeType === 22 && _0x2355a6.parent?.nodeType === 22 && !_0x9ed67c(_0x2b433b, _0x2355a6.parent);
          });
          if (_0x142258) {
            return _0x4dad77.ContainsPartialIfElseStatement;
          }
          return _0x4dad77.None;
        }
        static _extractMethodGenerator(_0x562085, _0x8935e8, _0x5bd2e2, _0x46eba5, _0x4f279a, _0x516301) {
          if (_0x5bd2e2.parentNode === undefined || _0x5bd2e2.bodyNodes === undefined || _0x5bd2e2.range === undefined) {
            return;
          }
          let _0x4ba3e8 = false;
          const _0x2a0524 = _0x46eba5.tokenizerOutput.lines;
          let _0x272ea4 = 0;
          let _0xb8e07b = _0x204a99.convertOffsetToPosition(_0x5bd2e2.range.start, _0x2a0524);
          const _0x442c88 = this._getEnclosingFunctionInfo(_0x5bd2e2, _0x4f279a, _0x2a0524);
          if (_0x442c88 && _0x442c88.functionTypeResult) {
            const _0x5592f0 = _0x442c88.functionTypeResult.functionType.shared.parameters;
            if ((_0x442c88.isClassMethod || _0x442c88.isBoundToClass) && !_0x442c88.isStaticMethod && _0x5592f0.length > 0 && _0x5592f0[0].name !== undefined) {
              if (!_0x562085.find(_0x4ae090 => _0x4ae090 === _0x5592f0[0].name)) {
                _0x562085.unshift(_0x5592f0[0].name);
              }
            }
            _0x272ea4 = _0x442c88.indentionOffset;
            _0xb8e07b = _0x442c88.insertPosition;
          } else {
            _0x4ba3e8 = true;
            const _0x4a5e47 = _0x5bd2e2.parentNode.nodeType === 36 ? _0x5bd2e2.parentNode : _0x56b55c.getEnclosingClassOrModule(_0x5bd2e2.parentNode);
            if (_0x4a5e47?.nodeType === 36 && _0x5bd2e2?.range) {
              const _0xbded15 = _0x5bd2e2.range.start;
              const _0xfa2aa8 = _0x4a5e47 === null || _0x4a5e47 === undefined ? undefined : _0x4a5e47.d.statements.find(_0x644dce => _0x644dce.start <= _0xbded15 && _0x3a2af1.TextRange.getEnd(_0x644dce) >= _0xbded15);
              if (_0xfa2aa8) {
                _0xb8e07b = _0x204a99.convertOffsetToPosition(_0xfa2aa8.start, _0x2a0524);
              }
            }
          }
          const _0x4671f8 = _0x442c88?.className ? 'new_method' : 'new_func';
          const _0x30d202 = _0x172a41(_0x4671f8, _0x5bd2e2.parentNode);
          const _0xd6a480 = _0x2bf0e9._buildMethodBody(_0x5bd2e2, _0x46eba5, _0x8935e8, _0x272ea4, _0x4f279a);
          const _0x1b3dd0 = new _0x61e5df();
          const _0x455763 = _0x1b3dd0.containsAwait(_0x5bd2e2.bodyNodes);
          const _0x292311 = this._buildFunctionDefinition(_0x30d202, _0x562085.join(', '), _0xd6a480, _0x442c88, _0x272ea4, _0x455763);
          let _0x19bd47 = _0x4ba3e8 ? '' : '\n\n';
          const _0x3b84f6 = {
            fileUri: _0x516301,
            range: {
              start: _0xb8e07b,
              end: _0xb8e07b
            },
            replacementText: _0x19bd47 + _0x292311
          };
          const _0x586206 = this._buildCallDefinition(_0x30d202, _0x562085, _0x8935e8, _0x442c88, _0x5bd2e2.bodyNodes, _0x455763);
          _0x19bd47 = _0x46eba5.text.substr(_0x3a2af1.TextRange.getEnd(_0x5bd2e2.range) - 1, 1) === '\n' ? '\n' : '';
          const _0x41ec4b = {
            fileUri: _0x516301,
            range: _0x204a99.convertTextRangeToRange(_0x5bd2e2.range, _0x2a0524),
            replacementText: _0x586206 + _0x19bd47
          };
          const _0x1f16bd = [];
          if (_0x4ba3e8) {
            _0x3b84f6.replacementText += '\n\n';
            _0x1f16bd.push(_0x3b84f6);
            _0x1f16bd.push(_0x41ec4b);
          } else {
            _0x1f16bd.push(_0x41ec4b);
            _0x1f16bd.push(_0x3b84f6);
          }
          return {
            actions: _0x1f16bd,
            newSymbolName: _0x30d202
          };
        }
        static _getEnclosingFunctionInfo(_0x401aa8, _0x4a2d83, _0x218de5) {
          if (_0x401aa8.parentNode === undefined) {
            return;
          }
          const _0x2e9981 = _0x56b55c.getEnclosingFunction(_0x401aa8.parentNode);
          if (_0x2e9981 === undefined) {
            return;
          }
          const _0x5e2daf = _0x204a99.convertOffsetToPosition(_0x3a2af1.TextRange.getEnd(_0x2e9981), _0x218de5);
          _0x5e2daf.character += 1;
          const _0x5e45cd = {
            isStaticMethod: false,
            isClassMethod: false,
            isBoundToClass: false,
            node: _0x2e9981,
            indentionOffset: _0x204a99.convertOffsetToPosition(_0x2e9981.start, _0x218de5).character,
            insertPosition: _0x5e2daf
          };
          const _0x57bd6e = _0x4a2d83.getTypeOfFunction(_0x2e9981);
          if (_0x57bd6e) {
            _0x5e45cd.functionTypeResult = _0x57bd6e;
            _0x5e45cd.isStaticMethod = _0x233a81.FunctionType.isStaticMethod(_0x57bd6e.functionType);
            _0x5e45cd.isClassMethod = _0x233a81.FunctionType.isClassMethod(_0x57bd6e.functionType);
            const _0x45010c = _0x56b55c.getEnclosingClassOrModule(_0x401aa8.parentNode);
            if (_0x45010c?.nodeType === 10) {
              _0x5e45cd.className = _0x45010c.d.name.d.value;
              _0x5e45cd.isBoundToClass = true;
            }
          }
          return _0x5e45cd;
        }
        static _buildMethodBody(_0x3f4fb5, _0x4146c9, _0xd8bfa2, _0x38f6e5, _0x4991b5) {
          if (_0x3f4fb5.bodyNodes === undefined || _0x3f4fb5.range === undefined || _0x3f4fb5.bodyNodes.length === 0) {
            return [];
          }
          const _0x3ef1f9 = this._convertNodesToString(_0x3f4fb5.bodyNodes, _0x4146c9, _0x3f4fb5.range, _0x38f6e5);
          const _0x216afb = ' '.repeat(_0x38f6e5 + 4);
          const _0x144599 = _0x3f4fb5.bodyNodes.slice(-1)[0];
          if (_0x144599 !== undefined && _0x3f4fb5.range.start < _0x144599.start) {
            const _0x2b28f7 = _0x144599.start - _0x3f4fb5.range.start;
            const _0x272ec2 = _0x4146c9.text.substr(_0x3f4fb5.range.start, _0x2b28f7);
            _0x3ef1f9[0] = _0x216afb + _0x272ec2.trimStart() + _0x3ef1f9[0];
          }
          let _0x4ec519 = 'return ';
          if (_0x3f4fb5.isExpression || _0x3f4fb5.bodyNodes.every(_0x5a7893 => _0x5a7893?.nodeType === 1)) {
            _0x4ec519 = _0x2cbf4f(_0x3f4fb5, _0x4991b5) ? '' : _0x4ec519;
            _0x3ef1f9[0] = _0x216afb + _0x4ec519 + _0x3ef1f9[0].trimStart();
          } else {
            if (_0xd8bfa2.length > 0) {
              const _0x5ced5a = _0x216afb + _0x4ec519 + _0xd8bfa2.join(',');
              _0x3ef1f9.push(_0x5ced5a);
            }
          }
          return _0x3ef1f9;
        }
        static _isExpression(_0x25e2aa) {
          if ((_0x25e2aa?.parent?.nodeType === 3 || _0x25e2aa?.parent?.nodeType === 5 || _0x25e2aa?.parent?.nodeType === 9) && _0x25e2aa.parent.d.leftExpr.id === _0x25e2aa.id) {
            return false;
          }
          const _0x7c14f1 = _0x25e2aa && _0x1c9c26.isExpressionNode(_0x25e2aa);
          if (_0x7c14f1 !== null && _0x7c14f1 !== undefined) {
            return _0x7c14f1;
          } else {
            return false;
          }
        }
        static _buildCallDefinition(_0x5b1ef9, _0x332128, _0x34ccc7, _0x150bea, _0x54e2ca, _0x1a7008) {
          let _0x3e48f7 = '';
          if (_0x34ccc7.length > 0) {
            _0x3e48f7 += _0x34ccc7.join(', ');
            _0x3e48f7 += ' = ';
          }
          if (_0x1a7008) {
            _0x3e48f7 += 'await ';
          }
          if (_0x150bea) {
            if (_0x150bea.isStaticMethod && _0x150bea.className !== undefined) {
              _0x3e48f7 += _0x150bea.className + '.' + _0x5b1ef9;
            } else {
              if ((_0x150bea.isClassMethod || _0x150bea.isBoundToClass) && _0x332128.length >= 1) {
                const _0x304545 = _0x332128.shift();
                _0x3e48f7 += _0x304545 + '.' + _0x5b1ef9;
              } else {
                _0x3e48f7 += _0x5b1ef9;
              }
            }
          } else {
            _0x3e48f7 += _0x5b1ef9;
          }
          _0x3e48f7 += '(';
          _0x3e48f7 += _0x332128.join(', ');
          _0x3e48f7 += ')';
          const _0x3c5ce2 = new _0x3e25f7.ReturnFinder();
          const _0x1114aa = _0x54e2ca.some(_0x1d7085 => _0x1d7085 && _0x3c5ce2.checkContainsReturn(_0x1d7085));
          if (_0x1114aa) {
            _0x3e48f7 = `return ${_0x3e48f7}`;
          }
          return _0x3e48f7;
        }
        static _buildFunctionDefinition(_0x84b99a, _0x1d3789, _0xad9635, _0x2a6164, _0x55129a, _0x1655bb) {
          let _0x52343d;
          if (_0x2a6164) {
            if (_0x2a6164.isStaticMethod) {
              _0x52343d = '@staticmethod';
            } else {
              if (_0x2a6164.isClassMethod) {
                _0x52343d = '@classmethod';
              }
            }
          }
          const _0x3551e9 = ' '.repeat(_0x55129a);
          let _0x53475d = '';
          if (_0x52343d) {
            _0x53475d += `${_0x3551e9}${_0x52343d}
`;
          }
          const _0x5c6d31 = _0x1655bb ? 'async ' : '';
          _0x53475d += `${_0x3551e9}${_0x5c6d31}def ${_0x84b99a}`;
          if (_0x1d3789.length > 0) {
            _0x53475d += `(${_0x1d3789}):
`;
          } else {
            _0x53475d += '():\n';
          }
          _0x53475d += _0xad9635.join('\n');
          return _0x53475d.trimEnd();
        }
        static _findNodesInRange(_0x2d01d0, _0x51562c) {
          if (_0x2d01d0.start > _0x3a2af1.TextRange.getEnd(_0x51562c) || _0x3a2af1.TextRange.getEnd(_0x2d01d0) < _0x51562c.start) {
            return [];
          }
          const _0x490ade = [];
          const _0x37b533 = new _0x2fc366.ParseTreeWalker();
          const _0x2daee2 = _0x37b533.visitNode(_0x2d01d0);
          const _0x42aaac = _0x2d01d0.start >= _0x51562c.start && _0x3a2af1.TextRange.getEnd(_0x2d01d0) <= _0x3a2af1.TextRange.getEnd(_0x51562c);
          if (_0x42aaac) {
            _0x490ade.push(_0x2d01d0);
            if (_0x2daee2.length === 0 || _0x1c9c26.isExpressionNode(_0x2d01d0) || _0x2d01d0.nodeType === 47 || _0x2d01d0.nodeType === 1) {
              return _0x490ade;
            }
          }
          for (const _0x4fdc18 of _0x2daee2) {
            if (_0x4fdc18) {
              const _0x173af9 = this._findNodesInRange(_0x4fdc18, _0x51562c);
              _0x173af9.forEach(_0x129b2f => {
                _0x490ade.push(_0x129b2f);
              });
            }
          }
          return _0x490ade;
        }
        static _convertNodesToString(_0x2bffe0, _0x338738, _0x3542ac, _0x205ddd) {
          const _0x138554 = [];
          let _0x1fcaa9 = _0x3542ac;
          let _0x2934f5 = _0x3a2af1.TextRange.getEnd(_0x1fcaa9);
          let _0x965b5 = _0x204a99.convertTextRangeToRange(_0x1fcaa9, _0x338738.tokenizerOutput.lines);
          let _0x4986c1 = _0x965b5.end;
          const _0x5c6c3f = _0x204a99.convertOffsetToPosition(_0x3542ac.start, _0x338738.tokenizerOutput.lines).character;
          _0x2bffe0.reverse().forEach(_0x49cad4 => {
            if (!_0x49cad4) {
              return;
            }
            _0x1fcaa9 = _0x49cad4;
            if (!_0x3a2af1.TextRange.contains(_0x3542ac, _0x49cad4.start)) {
              _0x1fcaa9 = _0x3542ac;
            }
            _0x965b5 = _0x204a99.convertTextRangeToRange(_0x1fcaa9, _0x338738.tokenizerOutput.lines);
            let _0x2c28c7 = _0x49cad4.length;
            const _0x7f2fed = _0x1fcaa9.start;
            if (_0x7f2fed + _0x2c28c7 > _0x2934f5) {
              _0x2c28c7 = _0x2934f5 - _0x7f2fed;
            }
            const _0x486ac7 = _0x338738.text.substr(_0x7f2fed, _0x2c28c7);
            const _0x465e74 = _0x591a0a.formatCode(_0x486ac7);
            const _0x31428a = _0x3a2af1.TextRange.getEnd(_0x49cad4);
            _0x114c44(_0x31428a, _0x2934f5, _0x338738, _0x138554, _0x465e74);
            if (_0x965b5.start.line !== _0x4986c1.line) {
              const _0x3e05a9 = _0x338738.tokenizerOutput.tokens.getItemAtPosition(_0x2934f5);
              const _0x2592d7 = _0x338738.tokenizerOutput.tokens.getItemAt(_0x3e05a9);
              if (_0x2592d7.type === 10 && _0x965b5.end.line === _0x4986c1.line) {
                const _0x333500 = _0x138554.pop();
                const _0x4ccfaf = (_0x465e74.pop() ?? '') + _0x333500;
                _0x465e74.push(_0x4ccfaf);
              } else {
                _0x2e2f4e(_0x4986c1.line, _0x338738, _0x5c6c3f, _0x138554, _0x205ddd);
              }
              _0x138554.push(..._0x465e74.reverse());
            } else {
              if (_0x138554.length === 0) {
                _0x138554.push(..._0x465e74.reverse());
              } else {
                const _0x26814a = _0x465e74.join('') + (_0x138554.pop() ?? '');
                _0x138554.push(_0x26814a);
              }
            }
            _0x2934f5 = _0x7f2fed;
            _0x4986c1 = _0x965b5.start;
          });
          _0x2e2f4e(_0x4986c1.line, _0x338738, _0x5c6c3f, _0x138554, _0x205ddd);
          return _0x138554.reverse();
        }
        static _findSignatureSymbols(_0x5ab908, _0x2c3d54, _0x3d1559, _0x4a60ab, _0x4775d9) {
          if (_0x3d1559 === undefined || _0x5ab908 === undefined) {
            return [];
          }
          const _0x518f8c = new Map();
          _0x2c3d54.forEach((_0x6c5666, _0x3e25d7) => {
            _0x6c5666.locations.forEach(_0x523a05 => {
              if (_0x518f8c.has(_0x3e25d7)) {
                return;
              }
              if (_0x4775d9.isCancellationRequested) {
                return;
              }
              const _0x16eb5a = _0x204a99.convertRangeToTextRange(_0x523a05.range, _0x4a60ab.tokenizerOutput.lines);
              const _0x1c9dcf = _0x6c5666.declarations.find(_0x46ddaa => _0x16eb5a.start === _0x46ddaa.node.start);
              if (_0x1c9dcf) {
                return;
              }
              const _0x23247f = _0x5ab908 === null || _0x5ab908 === undefined ? undefined : _0x5ab908.lookUpSymbol(_0x3e25d7);
              if (_0x23247f === null || _0x23247f === undefined ? undefined : _0x23247f.getDeclarations().find(_0x495a65 => _0x6c5666.declarations.find(_0x203593 => _0x203593.node.start === _0x495a65.node.start && _0x5b937f(_0x495a65.node)) !== undefined)) {
                return;
              }
              const _0x40053b = _0x3a2af1.TextRange.contains(_0x3d1559, _0x16eb5a.start);
              if (_0x40053b) {
                const _0x5d9cd3 = _0x6c5666.declarations.some((_0x2de8b3, _0x1fdf7d) => _0x3a2af1.TextRange.contains(_0x3d1559, _0x2de8b3.node.start) && _0xb6bf3a(_0x2de8b3, _0x16eb5a.start, _0x4a60ab));
                if (!_0x5d9cd3) {
                  const _0x3f2b24 = _0x6c5666.declarations.some((_0x3c023a, _0x46a0b2) => _0xb6bf3a(_0x3c023a, _0x3d1559.start, _0x4a60ab) && _0xb6bf3a(_0x3c023a, _0x3a2af1.TextRange.getEnd(_0x3d1559), _0x4a60ab));
                  if (_0x3f2b24) {
                    _0x518f8c.set(_0x3e25d7, _0x3e25d7);
                  }
                }
              }
            });
          });
          return Array.from(_0x518f8c.keys());
        }
        static _findOutputSymbols(_0xff0479, _0x1713ac, _0x2465c7, _0x462a2c) {
          const _0x22a660 = _0x2e8860(_0xff0479, _0x462a2c, _0x1713ac);
          const _0x1a6547 = _0x204a99.convertOffsetToPosition(_0x3a2af1.TextRange.getEnd(_0x1713ac), _0x2465c7.tokenizerOutput.lines);
          const _0x257dfb = new Map();
          _0xff0479.forEach((_0x2d705b, _0x23884c) => {
            if (!_0x22a660.has(_0x23884c)) {
              return;
            }
            const _0x44d3d9 = _0x2d705b.locations.filter(_0x48dc74 => _0x3a2af1.comparePositions(_0x48dc74.range.start, _0x1a6547) > 0);
            const _0xf658a8 = _0x2d705b.declarations.filter(_0x565392 => _0x565392.node.start > _0x3a2af1.TextRange.getEnd(_0x1713ac));
            _0x44d3d9.forEach(_0x5ca097 => {
              if (_0x462a2c.isCancellationRequested) {
                return;
              }
              if (_0x257dfb.has(_0x23884c)) {
                return;
              }
              const _0x18718c = _0x204a99.convertRangeToTextRange(_0x5ca097.range, _0x2465c7.tokenizerOutput.lines);
              if (_0x18718c === undefined) {
                return;
              }
              const _0x93433f = _0xf658a8.find(_0x3fe23a => _0x18718c.start === _0x3fe23a.node.start);
              if (_0x93433f) {
                return;
              }
              const _0x48e1c0 = _0xf658a8.some(_0x9ff464 => _0xb6bf3a(_0x9ff464, _0x18718c.start, _0x2465c7));
              if (!_0x48e1c0) {
                _0x257dfb.set(_0x23884c, _0x23884c);
              }
            });
          });
          return Array.from(_0x257dfb.keys());
        }
        static _selectionInsideComment(_0x5f2a04, _0x531e93) {
          let _0x55d97e = false;
          if (_0x531e93.start <= 0) {
            return _0x55d97e;
          }
          let _0x1dfbb6 = _0x5f2a04.tokenizerOutput.tokens.getItemAtPosition(_0x531e93.start);
          let _0x54cea5 = _0x5f2a04.tokenizerOutput.tokens.getItemAt(_0x1dfbb6);
          if (_0x54cea5.type === 5 && _0x54cea5.start < _0x531e93.start) {
            _0x55d97e = true;
          }
          if (_0x54cea5.start < _0x531e93.start && _0x1dfbb6 < _0x5f2a04.tokenizerOutput.tokens.length - 1) {
            _0x1dfbb6 += 1;
            _0x54cea5 = _0x5f2a04.tokenizerOutput.tokens.getItemAt(_0x1dfbb6);
            if (_0x54cea5.comments && _0x54cea5.comments.length > 0 && _0x54cea5.comments[0].start < _0x531e93.start) {
              _0x55d97e = true;
            }
          }
          return _0x55d97e;
        }
        static _isValidExtractionNode(_0x1ceac9) {
          return _0x1ceac9.nodeType !== 14 || _0x1ceac9.d.constType === 26 || _0x1ceac9.d.constType === 33 || _0x1ceac9.d.constType === 15;
        }
        static _expressionNodesToString(_0x5500e3, _0x36e201, _0x393e9b) {
          return this._convertNodesToString(_0x5500e3, _0x36e201, _0x393e9b, 0).join('\n').trimStart();
        }
      }
      exports.ExtractMethodProvider = _0x2bf0e9;
      function _0x2cbf4f(_0x505055, _0x886223) {
        if (_0x505055 && _0x505055.bodyNodes?.length === 1 && (_0x505055 === null || _0x505055 === undefined ? undefined : _0x505055.bodyNodes[0])?.nodeType === 9) {
          const _0x1fafbf = _0x505055 === null || _0x505055 === undefined ? undefined : _0x505055.bodyNodes[0];
          const _0x2b9e00 = _0x886223.getType(_0x1fafbf.d.leftExpr);
          if (_0x2b9e00 && _0x233a81.isFunction(_0x2b9e00)) {
            const _0x21cbe4 = _0x2b9e00.shared.declaredReturnType ?? _0x886223.getInferredReturnType(_0x2b9e00);
            if (_0xf87b57.isNoneInstance(_0x21cbe4)) {
              return true;
            }
          } else {
            if (_0x2b9e00 && _0x233a81.isOverloaded(_0x2b9e00)) {
              const _0x2ee9f9 = _0xf96df8(_0x2b9e00, _0x886223).every(_0x1a1de5 => _0xf87b57.isNoneInstance(_0x1a1de5));
              return _0x2ee9f9;
            }
          }
        }
        return false;
      }
      function _0xf96df8(_0x38516e, _0x3bd14a) {
        const _0x511b17 = [];
        _0x233a81.OverloadedType.getOverloads(_0x38516e).forEach(_0x7d7c6e => {
          const _0x56556d = _0x7d7c6e.shared.declaredReturnType ?? _0x3bd14a.getInferredReturnType(_0x7d7c6e);
          _0x511b17.push(_0x56556d);
        });
        const _0x4f456b = _0x233a81.OverloadedType.getImplementation(_0x38516e);
        if (_0x4f456b && _0x233a81.isFunction(_0x4f456b)) {
          _0x511b17.push(_0x4f456b.shared.declaredReturnType ?? _0x3bd14a.getInferredReturnType(_0x4f456b));
        }
        return _0x511b17;
      }
      function _0x1587f2(_0x530b50, _0x5b6ef2, _0x393add) {
        const _0x15b767 = _0x5b6ef2 - _0x530b50;
        if (_0x15b767 > 0) {
          const _0x3502b6 = _0x393add.text.substr(_0x530b50, _0x15b767);
          const _0x4784a2 = _0x591a0a.splitCodeLines(_0x3502b6);
          return _0x4784a2;
        }
        return [];
      }
      function _0x5b937f(_0x4c98a2) {
        const _0xd4f9 = [37, 23, 24, 25, 26];
        return _0xd4f9.find(_0x3e0d0f => _0x3e0d0f === _0x4c98a2.nodeType) !== undefined || _0x49e296(_0x4c98a2, _0xd4f9) !== undefined;
      }
      function _0x251fc1(_0x3797a1, _0x5ce1ea) {
        const _0x4f7139 = _0x5770ab.findNodeByOffset(_0x3797a1.parserOutput.parseTree, _0x5ce1ea.start);
        if (_0x4f7139 === undefined) {
          return;
        }
        const _0x86308b = _0x3a2af1.TextRange.getEnd(_0x5ce1ea);
        let _0x57dfee = _0x5770ab.findNodeByOffset(_0x3797a1.parserOutput.parseTree, _0x86308b);
        if (_0x57dfee === undefined) {
          return;
        }
        if (_0x4f7139.start > _0x57dfee.start) {
          const _0x163fe3 = _0x3797a1.tokenizerOutput.tokens.getItemAtPosition(_0x5ce1ea.start + _0x5ce1ea.length);
          let _0x3bcd99 = _0x3797a1.tokenizerOutput.tokens.getItemAt(_0x163fe3);
          if (_0x3bcd99.type === 2 && _0x163fe3 > 0) {
            _0x3bcd99 = _0x3797a1.tokenizerOutput.tokens.getItemAt(_0x163fe3 - 1);
            _0x57dfee = _0x5770ab.findNodeByOffset(_0x3797a1.parserOutput.parseTree, _0x3bcd99.start);
            if (_0x57dfee === undefined) {
              return;
            }
          }
        }
        const _0x1ec37b = _0x9cec57(_0x4f7139, _0x57dfee, _0x5ce1ea);
        return _0x1ec37b;
      }
      function _0x1202ec(_0x2c40be, _0x29faef) {
        const _0x3bfb30 = new Set(_0x56b55c.getAncestorsIncludingSelf(_0x2c40be));
        return _0x56b55c.getFirstAncestorOrSelf(_0x29faef, _0x1cb83a => _0x3bfb30.has(_0x1cb83a));
      }
      function _0x9cec57(_0x451372, _0xb1ee89, _0x38670e) {
        const _0x21cb2b = _0x59d778(_0x451372, _0x38670e);
        const _0x3f1a06 = _0x59d778(_0xb1ee89, _0x38670e);
        if (_0x21cb2b === _0x3f1a06) {
          return _0x21cb2b;
        }
        return undefined;
      }
      function _0x59d778(_0x10581e, _0xc15b13) {
        let _0x5dda37 = _0x10581e;
        while (_0x5dda37 && _0x3a2af1.TextRange.getEnd(_0x5dda37) <= _0x3a2af1.TextRange.getEnd(_0xc15b13) && _0x5dda37.start >= _0xc15b13.start) {
          if (_0x5dda37.parent === undefined || _0x5dda37.parent.nodeType === 31) {
            break;
          }
          if (_0x5dda37.nodeType === 47 || _0x9ed67c(_0xc15b13, _0x5dda37)) {
            _0x5dda37 = _0x5dda37.parent;
          } else {
            break;
          }
        }
        return _0x5dda37;
      }
      function _0xb6bf3a(_0x27a389, _0xf148b8, _0x27e659) {
        const _0x1475bb = _0x204a99.convertOffsetToPosition(_0x27a389.node.start, _0x27e659.tokenizerOutput.lines);
        const _0x36b387 = _0x204a99.convertOffsetToPosition(_0xf148b8, _0x27e659.tokenizerOutput.lines);
        let _0x21fea9 = _0x1475bb.line < _0x36b387.line;
        if (_0x1475bb.line === _0x36b387.line) {
          _0x21fea9 = _0x1475bb.character > _0x36b387.character;
        }
        return _0x21fea9;
      }
      function _0x2e8860(_0x366678, _0x451667, _0x5b211f) {
        const _0x59ab7b = new Map();
        _0x366678.forEach((_0x229d67, _0x4be2c6) => {
          _0x229d67.declarations.forEach((_0x3cd828, _0x3087d2) => {
            if (_0x59ab7b.has(_0x4be2c6)) {
              return;
            }
            if (_0x451667.isCancellationRequested) {
              return;
            }
            const _0x4b8cf0 = _0x3a2af1.TextRange.contains(_0x5b211f, _0x3cd828.node.start);
            if (_0x4b8cf0) {
              _0x59ab7b.set(_0x4be2c6, _0x4be2c6);
            }
          });
        });
        return _0x59ab7b;
      }
      function _0x3e6644(_0x12a3e6, _0x76b018) {
        let _0x446921 = _0x12a3e6.start;
        while (_0x446921 < _0x76b018.length) {
          const _0x556be9 = _0x76b018.substr(_0x446921, 1);
          if (_0x556be9 !== ' ' && _0x556be9 !== '\n' && _0x556be9 !== '\r') {
            break;
          }
          _0x446921++;
        }
        const _0x157731 = _0x446921;
        _0x446921 = _0x3a2af1.TextRange.getEnd(_0x12a3e6);
        while (_0x446921 > _0x157731) {
          const _0x43f473 = _0x76b018.substr(_0x446921 - 1, 1);
          if (_0x43f473 !== ' ' && _0x43f473 !== '\n' && _0x43f473 !== '\r') {
            break;
          }
          _0x446921--;
        }
        return _0x3a2af1.TextRange.fromBounds(_0x157731, _0x446921);
      }
      function _0x9ed67c(_0x279c0c, _0x3a6362) {
        return _0x279c0c.start <= _0x3a6362.start && _0x3a2af1.TextRange.getEnd(_0x3a6362) <= _0x3a2af1.TextRange.getEnd(_0x279c0c);
      }
      function _0x172a41(_0x43b8c2, _0x16bcd7) {
        let _0x257470 = _0x43b8c2;
        let _0x3bb81b = 1;
        const _0x15ae9e = _0x16bcd7.nodeType === 36 ? _0x16bcd7 : _0x5770ab.getEnclosingClassOrModule(_0x16bcd7);
        if (_0x15ae9e !== undefined) {
          const _0xd88e3b = _0x2ef209.getScope(_0x15ae9e);
          while ((_0xd88e3b === null || _0xd88e3b === undefined ? undefined : _0xd88e3b.lookUpSymbol(_0x257470)) !== undefined) {
            _0x257470 = _0x43b8c2 + _0x3bb81b++;
          }
        }
        return _0x257470;
      }
      function _0x407046(_0x5bbb3b, _0x189815) {
        let _0x5cf414 = _0x5bbb3b;
        let _0x3b72d1 = 1;
        if (_0x189815 !== undefined) {
          const _0x56c001 = _0x2ef209.getScope(_0x189815);
          while ((_0x56c001 === null || _0x56c001 === undefined ? undefined : _0x56c001.lookUpSymbol(_0x5cf414)) !== undefined) {
            _0x5cf414 = _0x5bbb3b + _0x3b72d1++;
          }
        }
        return _0x5cf414;
      }
      class _0x34db84 extends _0x2fc366.ParseTreeWalker {
        constructor(_0x2c5cec) {
          super();
          this._selectionRange = _0x2c5cec;
          this.hasNonEnclosedContinue = false;
          this.hasNonEnclosedBreak = false;
          this._loopTypes = [57, 29];
        }
        check(_0x3b48fa) {
          this.walk(_0x3b48fa);
        }
        visitContinue(_0x5476f0) {
          if (_0x9ed67c(this._selectionRange, _0x5476f0)) {
            this.hasNonEnclosedContinue = !_0x7c7d68(_0x5476f0, this._loopTypes, this._selectionRange);
          }
          return false;
        }
        visitBreak(_0x18692f) {
          if (_0x9ed67c(this._selectionRange, _0x18692f)) {
            this.hasNonEnclosedBreak = !_0x7c7d68(_0x18692f, this._loopTypes, this._selectionRange);
          }
          return false;
        }
      }
      function _0x7c7d68(_0x13b356, _0x2b03bf, _0x5bfd4b) {
        let _0x9b822 = _0x13b356;
        while (_0x9b822 !== undefined && _0x5bfd4b && _0x9ed67c(_0x5bfd4b, _0x9b822)) {
          if (_0x2b03bf.some(_0x268361 => _0x268361 === _0x9b822.nodeType)) {
            return _0x9b822;
          }
          _0x9b822 = _0x9b822.parent;
        }
        return undefined;
      }
      function _0x49e296(_0x1e0619, _0x70b90) {
        let _0x130539 = _0x1e0619;
        while (_0x130539 !== undefined) {
          if (_0x70b90.some(_0x3c528b => _0x3c528b === _0x130539.nodeType)) {
            return _0x130539;
          }
          _0x130539 = _0x130539.parent;
        }
        return undefined;
      }
      class _0x61e5df extends _0x2fc366.ParseTreeWalker {
        constructor() {
          super(...arguments);
          this._containsAwait = false;
        }
        containsAwait(_0x33e010) {
          return _0x33e010.some(_0x524dc9 => _0x524dc9 && this._nodeContainsAwait(_0x524dc9));
        }
        visitAwait(_0x4e8b70) {
          this._containsAwait = true;
          return false;
        }
        _nodeContainsAwait(_0x50d25b) {
          this.walk(_0x50d25b);
          return this._containsAwait;
        }
      }
      function _0x2e2f4e(_0x1ec078, _0x1d87dd, _0xd0b356, _0xc3ca81, _0xa0349a) {
        const _0xb4f7dc = _0x1d87dd.tokenizerOutput.lines.getItemAt(_0x1ec078);
        const _0x3aa596 = _0x1d87dd.text.substr(_0xb4f7dc.start, _0xb4f7dc.length);
        const _0x17ef1f = _0x3aa596.indexOf(_0x3aa596.trimStart());
        if (_0x17ef1f >= _0xd0b356 && _0xc3ca81.length > 0) {
          const _0x4adc55 = _0x17ef1f - _0xd0b356 + 4 + _0xa0349a;
          let _0x102274 = _0xc3ca81[_0xc3ca81.length - 1];
          _0x102274 = !_0x102274 ? _0x102274 : _0x102274.trimStart();
          _0xc3ca81[_0xc3ca81.length - 1] = ' '.repeat(_0x4adc55) + _0x102274;
        }
      }
      function _0x114c44(_0x37368c, _0x4c4c14, _0x8253ae, _0x497918, _0x258972) {
        const _0x39c048 = _0x1587f2(_0x37368c, _0x4c4c14, _0x8253ae);
        if (_0x39c048.length > 1) {
          const _0x455d06 = _0x258972.pop() + _0x39c048[0];
          _0x258972.push(_0x455d06);
          _0x39c048.slice(1, -1).forEach(_0xf5f8b => {
            _0x258972.push(_0xf5f8b);
          });
          const _0x325b83 = _0x39c048.slice(-1);
          const _0x27b938 = _0x325b83 + (_0x497918.pop() ?? '');
          _0x497918.push(_0x27b938);
        } else {
          const _0x45bb13 = _0x39c048.join('') + (_0x497918.pop() ?? '');
          _0x497918.push(_0x45bb13);
        }
      }
    },
    83244: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SyncRenameFileProvider = exports.RenameFileProvider = undefined;
      const _0x4f0497 = require(56911);
      const _0x544e15 = require(75130);
      const _0x12d386 = require(3113);
      const _0x20d574 = require(12522);
      const _0x4efef1 = require(27113);
      const _0x13b92b = require(5884);
      const _0x236ffe = require(74382);
      const _0x474bef = require(69482);
      const _0xd888e9 = require(15986);
      const _0x77e0ad = require(42580);
      class _0x4287d4 {
        static setMatrix(_0x2725c6, _0x178be0, _0x574d7d) {
          _0x574d7d.addCustomProperty('type', _0x2725c6, '');
          if (_0x178be0?.documentChanges) {
            _0x574d7d.addCustomMeasure('affectedFilesCount', _0x178be0.documentChanges.length, undefined, '');
          }
          if (_0x2725c6 === 'file') {
            _0x574d7d.addCustomProperty('fileRenamed', _0x178be0?.changeAnnotations?.fileRename ? 'true' : 'false', '');
          }
        }
        executeDirectoryRename(_0x210a4f, _0x38eb24, _0x2a572d, _0x327745, _0x5ece81) {
          if (_0x2a572d !== _0x327745 || !_0x327745.rootUri) {
            return null;
          }
          if (_0x13b92b.getDirectoryChangeKind(_0x2a572d.service.fs, _0x210a4f, _0x38eb24) !== 'Renamed') {
            return null;
          }
          return _0x327745.service.run(_0x2995c7 => {
            const _0x32fe0a = new _0x77e0ad.ModuleRenamer(_0x2995c7, _0x210a4f, _0x38eb24, _0x5ece81).renameModule();
            if (!_0x32fe0a) {
              return null;
            }
            const _0x19a6b7 = this._getNameRelativeToRoot(_0x2a572d.rootUri, _0x210a4f);
            const _0x100323 = this._getNameRelativeToRoot(_0x327745.rootUri, _0x38eb24);
            return this._constructWorkspaceEdits(_0x2995c7.fileSystem, _0x19a6b7, _0x100323, _0x32fe0a);
          }, _0x5ece81);
        }
        executeFileRename(_0x3340a1, _0x58c7a5, _0x485d6d, _0x3ff09c, _0x2fa961) {
          if (_0x3340a1.lastExtension !== _0x58c7a5.lastExtension) {
            return null;
          }
          if (!_0x544e15.supportedFileExtensions.some(_0x58d2dd => _0x58c7a5.hasExtension(_0x58d2dd))) {
            return null;
          }
          if (_0x485d6d !== _0x3ff09c || !_0x3ff09c.rootUri) {
            return null;
          }
          const _0x359a7c = _0x3ff09c.service;
          const _0x49c987 = _0x20d574.matchFileSpecs(_0x359a7c.getConfigOptions(), _0x3340a1);
          const _0x5ac6d6 = _0x20d574.matchFileSpecs(_0x359a7c.getConfigOptions(), _0x58c7a5);
          if (_0x49c987 !== _0x5ac6d6 || !_0x5ac6d6) {
            return null;
          }
          if (_0x58c7a5.hasExtension('.py') && !this._getStubAndFilePairInfo(_0x359a7c, _0x58c7a5)) {
            return null;
          }
          const _0x4222f2 = this._getStubAndFilePairInfo(_0x359a7c, _0x3340a1);
          const _0x29c881 = _0x4222f2?.stubFile ?? _0x4222f2?.pythonFile;
          if (!_0x29c881) {
            return null;
          }
          if (_0x4222f2.stubFile && _0x4222f2.pythonFile) {
            const _0x12ae06 = _0x58c7a5.replaceExtension('.py');
            if (_0x485d6d.service.fs.existsSync(_0x12ae06)) {
              return null;
            }
          }
          return _0x3ff09c.service.run(_0x1beefb => {
            var _0x137be5;
            const _0x137e54 = new _0x77e0ad.ModuleRenamer(_0x1beefb, _0x3340a1, _0x58c7a5, _0x2fa961);
            const _0x4220f8 = _0x137e54.renameModule();
            if (!_0x4220f8) {
              return null;
            }
            const _0xb48066 = this._getNameRelativeToRoot(_0x485d6d.rootUri, _0x3340a1);
            const _0xa00cbe = this._getNameRelativeToRoot(_0x3ff09c.rootUri, _0x58c7a5);
            const _0x395553 = this._constructWorkspaceEdits(_0x1beefb.fileSystem, _0xb48066, _0xa00cbe, _0x4220f8);
            if (_0x4222f2.stubFile && _0x4222f2.pythonFile) {
              _0x395553.changeAnnotations.fileRename = {
                label: _0xd888e9.Localizer.Refactoring.moveFileLabel().format({
                  oldModuleName: _0xb48066,
                  newModuleName: _0xa00cbe
                }),
                description: _0xd888e9.Localizer.Refactoring.moveFileDescription().format({
                  oldModuleName: _0xb48066,
                  newModuleName: _0xa00cbe
                }),
                needsConfirmation: false
              };
              if ((_0x137be5 = _0x395553.documentChanges) === null || _0x137be5 === undefined) {
                undefined;
              } else {
                _0x137be5.push(_0x4f0497.RenameFile.create(_0x13b92b.convertUriToLspUriString(_0x485d6d.service.fs, _0x4222f2.pythonFile), _0x13b92b.convertUriToLspUriString(_0x485d6d.service.fs, _0x58c7a5.replaceExtension('.py')), {
                  ignoreIfExists: true
                }, 'fileRename'));
              }
            }
            return _0x395553;
          }, _0x2fa961);
        }
        _getNameRelativeToRoot(_0x223517, _0x2c06cf) {
          var _0x5ba93c;
          if ((_0x5ba93c = _0x223517.getRelativePathComponents(_0x2c06cf).join('/')) !== null && _0x5ba93c !== undefined) {
            return _0x5ba93c;
          } else {
            return '';
          }
        }
        _constructWorkspaceEdits(_0x5c6f58, _0x5812ec, _0x37b289, _0xd100fe) {
          const _0x19870b = {
            oldModuleName: _0x5812ec,
            newModuleName: _0x37b289
          };
          const _0xfc01c9 = {
            label: _0xd888e9.Localizer.Refactoring.moveFileLabel().format(_0x19870b),
            description: _0xd888e9.Localizer.Refactoring.moveFileDescription().format(_0x19870b),
            needsConfirmation: false
          };
          return _0x236ffe.convertToWorkspaceEdit(_0x5c6f58, _0xd100fe, {
            textEdit: _0xfc01c9
          }, 'textEdit');
        }
        _getStubAndFilePairInfo(_0x318af0, _0x27c410) {
          const _0x443558 = _0x318af0.getConfigOptions().findExecEnvironment(_0x27c410);
          if (!_0x443558.root) {
            return undefined;
          }
          const _0x1fc8ba = _0x318af0.getImportResolver().getModuleNameForImport(_0x27c410, _0x443558);
          if (!_0x1fc8ba.moduleName) {
            return undefined;
          }
          const _0x4cbaaf = _0x12d386.isStubFile(_0x27c410) ? _0x27c410 : undefined;
          const _0x3efb78 = _0x4cbaaf ? undefined : _0x27c410;
          const _0x4f9317 = _0x318af0.getImportResolver().resolveImport(_0x27c410, _0x443558, _0x544e15.createImportedModuleDescriptor(_0x1fc8ba.moduleName));
          if (!_0x4f9317.isImportFound) {
            return {
              stubFile: _0x4cbaaf,
              pythonFile: _0x3efb78
            };
          }
          const _0xc8d05e = _0x4f9317.resolvedUris[_0x4f9317.resolvedUris.length - 1];
          if (!_0xc8d05e.startsWith(_0x443558.root)) {
            return {
              stubFile: _0x4cbaaf,
              pythonFile: _0x3efb78
            };
          }
          if (_0x27c410.equals(_0xc8d05e)) {
            if (_0x4cbaaf) {
              if (_0x4f9317.nonStubImportResult?.isImportFound) {
                const _0x1fc86d = _0x4f9317.nonStubImportResult.resolvedUris[_0x4f9317.nonStubImportResult.resolvedUris.length - 1];
                return {
                  stubFile: _0x4cbaaf,
                  pythonFile: _0x1fc86d
                };
              }
              return {
                stubFile: _0x4cbaaf,
                pythonFile: _0x3efb78
              };
            }
            if (_0x3efb78) {
              return {
                stubFile: _0x4cbaaf,
                pythonFile: _0x3efb78
              };
            }
          }
          if (_0x4cbaaf && _0x4f9317.isStubFile || _0x3efb78 && !_0x4f9317.isStubFile) {
            return undefined;
          }
          if (_0x3efb78 && _0x4f9317.isStubFile) {
            return undefined;
          }
          return {
            stubFile: _0x4cbaaf,
            pythonFile: _0xc8d05e
          };
        }
      }
      class _0x22f78f extends _0x4287d4 {
        constructor(_0x18d119) {
          super();
          this._ls = _0x18d119;
        }
        static async renameFiles(_0x5f39fe, _0x14f1de, _0x4266a8, _0x24fefd) {
          return _0x474bef.trackPerf(_0x14f1de, _0x474bef.TelemetryEventName.RENAME_FILES, async _0x29e07e => {
            const _0x42955f = new _0x22f78f(_0x5f39fe);
            const _0x55d128 = await _0x42955f._renameFiles(_0x4266a8, _0x24fefd);
            this.setMatrix(_0x55d128.renameType, _0x55d128.edits, _0x29e07e);
            if ((_0x55d128.edits?.documentChanges?.length ?? 0) > 0) {
              return _0x55d128.edits;
            } else {
              return null;
            }
          }, 0);
        }
        async _renameFiles(_0x4b9e8, _0x351c07) {
          let _0x334ffb = 'unknown';
          let _0x799829 = null;
          if (_0x4b9e8.files.length !== 1) {
            return {
              renameType: _0x334ffb,
              edits: _0x799829
            };
          }
          if (!this._ls.supportAdvancedEdits) {
            return {
              renameType: _0x334ffb,
              edits: _0x799829
            };
          }
          const _0x4dd6c1 = _0x4b9e8.files[0];
          const _0x2c8781 = _0x4efef1.Uri.parse(_0x4dd6c1.oldUri, this._ls.serviceProvider);
          const _0xfa1a45 = _0x4efef1.Uri.parse(_0x4dd6c1.newUri, this._ls.serviceProvider);
          if (_0x2c8781.equals(_0xfa1a45)) {
            return {
              renameType: _0x334ffb,
              edits: _0x799829
            };
          }
          const _0x1d8d0e = await this._ls.getWorkspaceForFile(_0x2c8781);
          const _0x8cf4d6 = await this._ls.getWorkspaceForFile(_0xfa1a45);
          if (_0x13b92b.isFile(_0x1d8d0e.service.fs, _0x2c8781)) {
            _0x334ffb = 'file';
            _0x799829 = this.executeFileRename(_0x2c8781, _0xfa1a45, _0x1d8d0e, _0x8cf4d6, _0x351c07);
          } else {
            if (_0x13b92b.isDirectory(_0x1d8d0e.service.fs, _0x2c8781)) {
              _0x334ffb = 'folder';
              _0x799829 = this.executeDirectoryRename(_0x2c8781, _0xfa1a45, _0x1d8d0e, _0x8cf4d6, _0x351c07);
            }
          }
          return {
            renameType: _0x334ffb,
            edits: _0x799829
          };
        }
      }
      exports.RenameFileProvider = _0x22f78f;
      class _0x5c2bda extends _0x4287d4 {
        constructor(_0x31545a) {
          super();
          this._ls = _0x31545a;
        }
        static async renameFiles(_0x5bdb07, _0x52adfd, _0x3352c6, _0x270fd6) {
          return _0x474bef.trackPerf(_0x52adfd, _0x474bef.TelemetryEventName.RENAME_FILES, _0x5e4df1 => {
            const _0x570af2 = new _0x5c2bda(_0x5bdb07);
            const _0x126691 = _0x570af2._renameFiles(_0x3352c6, _0x270fd6);
            this.setMatrix(_0x126691.renameType, _0x126691.edits, _0x5e4df1);
            if ((_0x126691.edits?.documentChanges?.length ?? 0) > 0) {
              return _0x126691.edits;
            } else {
              return null;
            }
          }, 0);
        }
        _renameFiles(_0x1e6c72, _0x57ddd7) {
          let _0x3dd35b = 'unknown';
          let _0x2098cc = null;
          if (_0x1e6c72.files.length !== 1) {
            return {
              renameType: _0x3dd35b,
              edits: _0x2098cc
            };
          }
          if (!this._ls.supportAdvancedEdits) {
            return {
              renameType: _0x3dd35b,
              edits: _0x2098cc
            };
          }
          const _0x325341 = _0x1e6c72.files[0];
          const _0x404c0c = _0x4efef1.Uri.parse(_0x325341.oldUri, this._ls.serviceProvider);
          const _0x33af8e = _0x4efef1.Uri.parse(_0x325341.newUri, this._ls.serviceProvider);
          if (_0x404c0c.equals(_0x33af8e)) {
            return {
              renameType: _0x3dd35b,
              edits: _0x2098cc
            };
          }
          const _0x296dbf = this._ls.getWorkspaceForFileSync(_0x404c0c);
          const _0x65000f = this._ls.getWorkspaceForFileSync(_0x33af8e);
          if (_0x13b92b.isFile(_0x296dbf.service.fs, _0x404c0c)) {
            _0x3dd35b = 'file';
            _0x2098cc = this.executeFileRename(_0x404c0c, _0x33af8e, _0x296dbf, _0x65000f, _0x57ddd7);
          } else {
            if (_0x13b92b.isDirectory(_0x296dbf.service.fs, _0x404c0c)) {
              _0x3dd35b = 'folder';
              _0x2098cc = this.executeDirectoryRename(_0x404c0c, _0x33af8e, _0x296dbf, _0x65000f, _0x57ddd7);
            }
          }
          return {
            renameType: _0x3dd35b,
            edits: _0x2098cc
          };
        }
      }
      exports.SyncRenameFileProvider = _0x5c2bda;
    },
    78926: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RenameModuleProvider = undefined;
      const _0x536872 = require(3433);
      const _0x1a4d08 = require(3113);
      const _0x2c9b69 = require(91426);
      const _0x1c14e3 = require(56507);
      const _0x1905df = require(56814);
      const _0x13a60d = require(74382);
      const _0x140c96 = require(26005);
      const _0x4eb0c6 = require(79725);
      const _0x1aa86d = require(42580);
      class _0x183463 {
        constructor(_0x5f33a6, _0x8468c8, _0x40327b, _0x40a0bc) {
          this._program = _0x5f33a6;
          this._fileUri = _0x8468c8;
          this._position = _0x40327b;
          this._token = _0x40a0bc;
          this._parseResults = this._program.getParseResults(this._fileUri);
        }
        canRenameSymbol(_0x185c45, _0x5300c3) {
          _0x2c9b69.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return null;
          }
          const _0x41569b = this._getReferenceResult(_0x185c45);
          if (!_0x41569b) {
            return null;
          }
          const _0x47be89 = _0x4eb0c6.RenameProvider.getRenameSymbolMode(this._program, this._fileUri, _0x41569b, _0x185c45, _0x5300c3);
          if (_0x47be89 === 'none') {
            return null;
          }
          return _0x1905df.convertTextRangeToRange(_0x41569b.nodeAtOffset, this._parseResults.tokenizerOutput.lines);
        }
        renameSymbol(_0x27138e, _0x3183b8, _0x3300ab) {
          _0x2c9b69.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return null;
          }
          const _0x379cb2 = this._getReferenceResult(_0x3183b8);
          if (!_0x379cb2) {
            return null;
          }
          const _0x2f3aab = _0x1aa86d.ModuleRenamer.getRenameModulePathInfo(_0x1aa86d.ModuleRenamer.getRenameModulePath(_0x379cb2.declarations), _0x27138e);
          if (!_0x2f3aab) {
            return null;
          }
          const _0x57464a = new _0x1aa86d.ModuleRenamer(this._program, _0x2f3aab.fileUri, _0x2f3aab.newFileUri, this._token).renameModule();
          if (!_0x57464a) {
            return null;
          }
          _0x57464a.fileOperations.push({
            kind: 'rename',
            oldFileUri: _0x2f3aab.fileUri,
            newFileUri: _0x2f3aab.newFileUri
          });
          if (_0x1a4d08.isStubFile(_0x2f3aab.fileUri)) {
            const _0x5469b1 = this._program.importResolver.getSourceFilesFromStub(_0x2f3aab.fileUri, this._program.configOptions.findExecEnvironment(this._fileUri), false);
            for (const _0x57edb8 of _0x5469b1) {
              const _0xd6730d = _0x1aa86d.ModuleRenamer.getRenameModulePathInfo(_0x57edb8, _0x27138e);
              if (_0xd6730d) {
                if (!_0x57464a.fileOperations.some(_0x59c9b5 => _0x59c9b5.kind === 'rename' && _0x59c9b5.newFileUri.equals(_0xd6730d.newFileUri) && _0x59c9b5.oldFileUri.equals(_0xd6730d.fileUri))) {
                  _0x57464a.fileOperations.push({
                    kind: 'rename',
                    oldFileUri: _0xd6730d.fileUri,
                    newFileUri: _0xd6730d.newFileUri
                  });
                }
              }
            }
          }
          return _0x13a60d.convertToWorkspaceEdit(this._program.fileSystem, _0x57464a);
        }
        _supportRenameModule(_0x4d60cb, _0x40e6ea) {
          return !_0x40e6ea && _0x4d60cb.every(_0x2652d4 => _0x536872.isUserCode(this._program.getSourceFileInfo(_0x2652d4.uri)));
        }
        _getReferenceResult(_0x5e84da) {
          const _0x116309 = _0x140c96.ReferencesProvider.getDeclarationForPosition(this._program, this._fileUri, this._position, undefined, _0x1c14e3.ReferenceUseCase.Rename, this._token);
          if (!_0x116309) {
            return undefined;
          }
          if (!_0x116309.containsOnlyImportDecls || !this._supportRenameModule(_0x116309.declarations, _0x5e84da)) {
            return undefined;
          }
          return _0x116309;
        }
      }
      exports.RenameModuleProvider = _0x183463;
    },
    96285: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SemanticTokenProvider = undefined;
      exports.getSemanticTokens = _0x2a6cba;
      const _0x597a19 = require(56911);
      const _0x5bf0a3 = require(41557);
      const _0x573e62 = require(88744);
      const _0x53cd42 = require(12097);
      const _0x5e51c0 = require(21024);
      const _0x46d1b8 = require(92324);
      const _0xf41f1e = require(91426);
      const _0x545645 = require(34455);
      const _0xb869b5 = require(48281);
      const _0x1c6793 = require(56814);
      const _0x195969 = require(88754);
      const _0x289670 = require(4250);
      var _0x1ce5df;
      (function (_0x3b3dc6) {
        _0x3b3dc6[_0x3b3dc6.comment = 0] = 'comment';
        _0x3b3dc6[_0x3b3dc6.keyword = 1] = 'keyword';
        _0x3b3dc6[_0x3b3dc6.operator = 2] = 'operator';
        _0x3b3dc6[_0x3b3dc6.string = 3] = 'string';
        _0x3b3dc6[_0x3b3dc6.number = 4] = 'number';
        _0x3b3dc6[_0x3b3dc6.regexp = 5] = 'regexp';
        _0x3b3dc6[_0x3b3dc6.type = 6] = 'type';
        _0x3b3dc6[_0x3b3dc6.class = 7] = 'class';
        _0x3b3dc6[_0x3b3dc6.interface = 8] = 'interface';
        _0x3b3dc6[_0x3b3dc6.enum = 9] = 'enum';
        _0x3b3dc6[_0x3b3dc6.enumMember = 10] = 'enumMember';
        _0x3b3dc6[_0x3b3dc6.typeParameter = 11] = 'typeParameter';
        _0x3b3dc6[_0x3b3dc6.function = 12] = 'function';
        _0x3b3dc6[_0x3b3dc6.method = 13] = 'method';
        _0x3b3dc6[_0x3b3dc6.property = 14] = 'property';
        _0x3b3dc6[_0x3b3dc6.variable = 15] = 'variable';
        _0x3b3dc6[_0x3b3dc6.parameter = 16] = 'parameter';
        _0x3b3dc6[_0x3b3dc6.module = 17] = 'module';
        _0x3b3dc6[_0x3b3dc6.intrinsic = 18] = 'intrinsic';
        _0x3b3dc6[_0x3b3dc6.selfParameter = 19] = 'selfParameter';
        _0x3b3dc6[_0x3b3dc6.clsParameter = 20] = 'clsParameter';
        _0x3b3dc6[_0x3b3dc6.magicFunction = 21] = 'magicFunction';
        _0x3b3dc6[_0x3b3dc6.builtinConstant = 22] = 'builtinConstant';
        _0x3b3dc6[_0x3b3dc6.parenthesis = 23] = 'parenthesis';
        _0x3b3dc6[_0x3b3dc6.curlybrace = 24] = 'curlybrace';
        _0x3b3dc6[_0x3b3dc6.bracket = 25] = 'bracket';
        _0x3b3dc6[_0x3b3dc6.colon = 26] = 'colon';
        _0x3b3dc6[_0x3b3dc6.semicolon = 27] = 'semicolon';
        _0x3b3dc6[_0x3b3dc6.arrow = 28] = 'arrow';
      })(_0x1ce5df ||= {});
      var _0x9ca08;
      (function (_0x141353) {
        _0x141353[_0x141353.none = 0] = 'none';
        _0x141353[_0x141353.declaration = 1] = 'declaration';
        _0x141353[_0x141353.static = 2] = 'static';
        _0x141353[_0x141353.abstract = 4] = 'abstract';
        _0x141353[_0x141353.async = 8] = 'async';
        _0x141353[_0x141353.documentation = 16] = 'documentation';
        _0x141353[_0x141353.typeHint = 32] = 'typeHint';
        _0x141353[_0x141353.typeHintComment = 64] = 'typeHintComment';
        _0x141353[_0x141353.readonly = 128] = 'readonly';
        _0x141353[_0x141353.decorator = 256] = 'decorator';
        _0x141353[_0x141353.builtin = 512] = 'builtin';
        _0x141353[_0x141353.overridden = 1024] = 'overridden';
      })(_0x9ca08 ||= {});
      const _0x3e701e = {
        [63]: 'match'.length,
        [64]: 'case'.length
      };
      function _0x2a6cba(_0x19a805, _0x3192a6, _0x2f35ee, _0x3dbc4b, _0x58449d, _0x4cc6ab) {
        var _0x3673a5;
        const _0x37c66b = _0x19a805.getParseResults(_0x3192a6);
        if (_0x37c66b === undefined || _0x37c66b.text.length === 0) {
          return {
            data: []
          };
        }
        const _0x12ad34 = ((_0x3673a5 = _0x19a805.getSourceFile(_0x3192a6)) === null || _0x3673a5 === undefined ? undefined : _0x3673a5.getDiagnosticVersion()) ?? 0;
        return _0x3431cd.getTokens(_0x37c66b, _0x3192a6, _0x19a805.evaluator, _0x2f35ee, _0x3dbc4b, _0x58449d, _0x12ad34, _0x4cc6ab);
      }
      class _0x3431cd {
        static computeLegend(_0x36c240) {
          const _0x5894b3 = _0x545645.getEnumNames(_0x1ce5df);
          const _0x3e7664 = _0x545645.getEnumNames(_0x9ca08).filter(_0x18b113 => _0x18b113 !== _0x9ca08[_0x9ca08.none]);
          return {
            tokenTypes: _0x5894b3,
            tokenModifiers: _0x3e7664
          };
        }
        static getTokens(_0x258824, _0x36d5da, _0x2edd4b, _0x3c5a80, _0x7ce998, _0x327b58, _0xd705d4, _0x425254) {
          _0xf41f1e.throwIfCancellationRequested(_0x425254);
          const _0x71339f = _0x3c5a80 ? new _0x597a19.SemanticTokensBuilder() : _0x276b41(_0x36d5da, _0x327b58, _0xd705d4);
          if (_0x71339f === undefined) {
            return {
              resultId: _0x327b58,
              edits: []
            };
          }
          const _0x36c099 = _0x7ce998 ? new _0x3d9c23(_0x71339f) : _0x71339f;
          if (_0x7ce998) {
            const _0x5bf21a = new _0x3b6852(_0x36c099, _0x258824, _0x3c5a80, _0x425254);
            _0x5bf21a.walk();
          }
          const _0x18bf4b = new _0x598ce7(_0x36c099, _0x258824, _0x2edd4b, _0x7ce998, _0x3c5a80, _0x425254);
          _0x18bf4b.walk(_0x258824.parserOutput.parseTree);
          _0x18bf4b.fillBuilder();
          if (_0x36c099.canBuildEdits()) {
            return _0x36c099.buildEdits();
          } else {
            return _0x36c099.build();
          }
        }
      }
      exports.SemanticTokenProvider = _0x3431cd;
      const _0x571519 = new Map();
      function _0x276b41(_0x3d5289, _0x4c865b = undefined, _0xa912d0 = 0) {
        let _0x5affec = _0x571519.get(_0x3d5289.key);
        if (_0x5affec && _0x5affec.builder.id === _0x4c865b && _0x5affec.version === _0xa912d0) {
          return undefined;
        }
        if (_0x5affec !== undefined && _0x4c865b !== undefined) {
          _0x5affec.version = _0xa912d0;
          _0x5affec.builder.previousResult(_0x4c865b);
          return _0x5affec.builder;
        }
        _0x5affec = {
          version: _0xa912d0,
          builder: new _0x597a19.SemanticTokensBuilder()
        };
        _0x571519.set(_0x3d5289.key, _0x5affec);
        return _0x5affec.builder;
      }
      class _0x3b6852 {
        constructor(_0x654548, _0x5994a1, _0x79b808, _0x4e72ac) {
          this._builder = _0x654548;
          this._parseResults = _0x5994a1;
          this._cancellationToken = _0x4e72ac;
          if (_0x79b808) {
            this._range = _0x1c6793.convertRangeToTextRange(_0x79b808, this._parseResults.tokenizerOutput.lines);
          }
        }
        walk() {
          const _0x31cfd2 = this._parseResults.tokenizerOutput.tokens;
          const _0x1bf9bb = Math.max(this._range ? _0x31cfd2.getItemAtPosition(this._range.start) : 0, 0);
          const _0x39fa1c = Math.min(this._range ? _0x31cfd2.getItemAtPosition(_0x195969.TextRange.getEnd(this._range)) + 1 : _0x31cfd2.count, _0x31cfd2.count);
          for (let _0x40c8bc = _0x1bf9bb; _0x40c8bc < _0x39fa1c; _0x40c8bc++) {
            _0xf41f1e.throwIfCancellationRequested(this._cancellationToken);
            const _0x19daad = this._parseResults.tokenizerOutput.tokens.getItemAt(_0x40c8bc);
            const _0x5a5d72 = _0x3b6852._map.get(_0x19daad.type);
            if (_0x5a5d72) {
              this._pushToken(_0x19daad, _0x5a5d72);
            } else {
              this._pushComments(_0x19daad.comments);
            }
          }
        }
        _pushToken(_0x413bee, _0x53c028) {
          this._pushComments(_0x413bee.comments);
          this._push(_0x413bee, _0x53c028);
        }
        _pushComments(_0x24ee24) {
          if (!_0x24ee24) {
            return;
          }
          for (const _0x31dee8 of _0x24ee24) {
            if (_0x31dee8.type !== 0) {
              continue;
            }
            this._push({
              start: _0x31dee8.start - 1,
              length: _0x31dee8.length + 1
            }, _0x1ce5df.comment);
          }
        }
        _push(_0x823d2f, _0x59e9fd) {
          const _0x2b0be3 = _0x1c6793.convertOffsetToPosition(_0x823d2f.start, this._parseResults.tokenizerOutput.lines);
          this._builder.push(_0x2b0be3.line, _0x2b0be3.character, _0x823d2f.length, _0x59e9fd, _0x9ca08.none);
        }
      }
      _0x3b6852._map = new Map([[8, _0x1ce5df.keyword], [6, _0x1ce5df.number], [5, _0x1ce5df.string], [9, _0x1ce5df.operator], [13, _0x1ce5df.parenthesis], [14, _0x1ce5df.parenthesis], [15, _0x1ce5df.bracket], [16, _0x1ce5df.bracket], [17, _0x1ce5df.curlybrace], [18, _0x1ce5df.curlybrace], [10, _0x1ce5df.colon], [11, _0x1ce5df.semicolon], [21, _0x1ce5df.arrow]]);
      class _0x598ce7 extends _0x573e62.ParseTreeWalker {
        constructor(_0x270335, _0x3a0173, _0x343a05, _0x565753, _0x19c707, _0x4660df) {
          super();
          this._builder = _0x270335;
          this._parseResults = _0x3a0173;
          this._evaluator = _0x343a05;
          this._includeSyntaxToken = _0x565753;
          this._cancellationToken = _0x4660df;
          this._cachedNodeTokenInfo = new Map();
          this._pushQueue = [];
          this._previousTokenStart = -1;
          this._sawOutOfOrderTokens = false;
          if (_0x19c707) {
            this._range = _0x1c6793.convertRangeToTextRange(_0x19c707, this._parseResults.tokenizerOutput.lines);
          }
        }
        visitSuite(_0x569dc0) {
          if (this._isNodeInRange(_0x569dc0)) {
            return true;
          } else {
            return false;
          }
        }
        visitStatementList(_0x231901) {
          if (this._isNodeInRange(_0x231901)) {
            return true;
          } else {
            return false;
          }
        }
        visitName(_0x31b5af) {
          _0xf41f1e.throwIfCancellationRequested(this._cancellationToken);
          if (!this._isNodeInRange(_0x31b5af)) {
            return false;
          }
          const _0x4c1e2b = this._getNameNodeToken(_0x31b5af);
          if (_0x4c1e2b) {
            this._pushToken(_0x31b5af, _0x4c1e2b.type, _0x4c1e2b.modifiers);
          }
          return true;
        }
        visitString(_0xb0b005) {
          return true;
        }
        visitFormatString(_0x58b3a2) {
          if (!this._isNodeInRange(_0x58b3a2)) {
            return false;
          }
          if (this._includeSyntaxToken) {
            this._pushToken(_0x58b3a2, _0x1ce5df.string, _0x9ca08.none);
          }
          return true;
        }
        visitMatch(_0x181dfe) {
          if (!this._isNodeInRange(_0x181dfe)) {
            return false;
          }
          this._pushKeywordNotSupportedByTextMate(_0x181dfe);
          return true;
        }
        visitCase(_0x4b78f6) {
          if (!this._isNodeInRange(_0x4b78f6)) {
            return false;
          }
          this._pushKeywordNotSupportedByTextMate(_0x4b78f6);
          return true;
        }
        visitConstant(_0x31fa39) {
          const _0x20bd12 = this._getTypeAnnotationModifiers(_0x31fa39);
          this._pushToken(_0x31fa39, _0x1ce5df.builtinConstant, _0x9ca08.builtin | _0x9ca08.readonly | _0x20bd12);
          return true;
        }
        visitFor(_0x38c105) {
          return this._handleOverriddenKeyword(_0x38c105);
        }
        visitBinaryOperation(_0x5da8d5) {
          if (_0x5da8d5.d.operatorToken.type === 8) {
            return this._handleOverriddenKeyword(_0x5da8d5);
          }
          return this._handleOverriddenOperator(_0x5da8d5);
        }
        visitUnaryOperation(_0x587b4a) {
          return this._handleOverriddenOperator(_0x587b4a);
        }
        visitAugmentedAssignment(_0x5cb603) {
          return this._handleOverriddenOperator(_0x5cb603);
        }
        fillBuilder() {
          if (this._sawOutOfOrderTokens) {
            this._pushQueue.sort((_0x28fa6e, _0x4e4489) => _0x28fa6e.start - _0x4e4489.start);
          }
          for (const _0x54699a of this._pushQueue) {
            const _0x495b6d = _0x54699a.start;
            const _0x388e77 = _0x54699a.length;
            const _0x240374 = _0x54699a.tokenType;
            const _0x457490 = _0x54699a.tokenModifiers;
            const _0x307eea = _0x1c6793.convertOffsetsToRange(_0x495b6d, _0x495b6d + _0x388e77, this._parseResults.tokenizerOutput.lines);
            if (_0x307eea.start.line !== _0x307eea.end.line) {
              this._pushMultiLineToken(_0x495b6d, _0x388e77, _0x240374, _0x457490);
            } else {
              const _0x895122 = _0x1c6793.convertOffsetToPosition(_0x495b6d, this._parseResults.tokenizerOutput.lines);
              this._builder.push(_0x895122.line, _0x895122.character, _0x388e77, _0x240374, _0x457490);
            }
          }
        }
        _isNodeInRange(_0x4c6e92) {
          if (this._range === undefined) {
            return true;
          }
          return _0x195969.TextRange.overlapsRange(this._range, _0x4c6e92);
        }
        _getOverridenModifiers(_0x5ac3ad) {
          if (_0x5ac3ad.parent?.nodeType !== 9 || _0x5ac3ad.parent.d.leftExpr !== _0x5ac3ad) {
            return _0x9ca08.none;
          }
          const _0x528e39 = _0x5ac3ad.parent;
          if (!_0x289670.hasMagicMethodForIdentifier(this._evaluator, _0x528e39)) {
            return _0x9ca08.none;
          }
          return _0x9ca08.overridden;
        }
        _handleOverriddenKeyword(_0x26cb92) {
          _0xf41f1e.throwIfCancellationRequested(this._cancellationToken);
          if (!this._isNodeInRange(_0x26cb92)) {
            return false;
          }
          if (!_0x289670.hasMagicMethodForKeyword(this._evaluator, _0x26cb92)) {
            return true;
          }
          const _0x511e28 = this._getOverridenToken(_0x26cb92);
          if (!_0x511e28) {
            return true;
          }
          this._pushToken(_0x511e28, _0x1ce5df.keyword, _0x9ca08.overridden);
          return true;
        }
        _handleOverriddenOperator(_0xeec147) {
          _0xf41f1e.throwIfCancellationRequested(this._cancellationToken);
          if (!this._isNodeInRange(_0xeec147)) {
            return false;
          }
          if (!_0x289670.hasMagicMethodForOperator(this._evaluator, _0xeec147)) {
            return true;
          }
          const _0x2821a7 = this._getOverridenToken(_0xeec147);
          if (!_0x2821a7) {
            return true;
          }
          this._pushToken(_0x2821a7, _0x1ce5df.operator, _0x9ca08.overridden);
          return true;
        }
        _getOverridenToken(_0x331473) {
          if (_0x331473.nodeType === 29) {
            return this._getToken(_0x195969.TextRange.getEnd(_0x331473.d.targetExpr), _0x331473.d.iterableExpr.start, 8);
          }
          if (_0x331473.nodeType !== 5) {
            return _0x331473.d.operatorToken;
          }
          return this._getToken(_0x195969.TextRange.getEnd(_0x331473.d.leftExpr), _0x331473.d.rightExpr.start, 9);
        }
        _getToken(_0x4a0b80, _0x150a88, _0x3a4258) {
          const _0x22cd3b = this._parseResults.tokenizerOutput.tokens.getItemAtPosition(_0x4a0b80);
          const _0x2c444e = this._parseResults.tokenizerOutput.tokens.getItemAtPosition(_0x150a88);
          for (let _0x449f37 = _0x22cd3b; _0x449f37 <= _0x2c444e; _0x449f37++) {
            const _0x5ac6ce = this._parseResults.tokenizerOutput.tokens.getItemAt(_0x449f37);
            if (_0x5ac6ce.type === _0x3a4258) {
              return _0x5ac6ce;
            }
          }
          return undefined;
        }
        _getParameterTokenType(_0x19eb09) {
          var _0x3cea8a;
          var _0x542443;
          const _0x29afff = (_0x3cea8a = _0x19eb09.node.d.name) === null || _0x3cea8a === undefined ? undefined : _0x3cea8a.d.value;
          const _0x2ad79e = _0x19eb09.node.parent;
          if (_0x2ad79e?.nodeType === 31) {
            if (_0x2ad79e.d.params.length > 0 && ((_0x542443 = _0x2ad79e.d.params[0].d.name) === null || _0x542443 === undefined ? undefined : _0x542443.d.value) === _0x29afff) {
              switch (_0x29afff) {
                case 'self':
                  return _0x1ce5df.selfParameter;
                case 'cls':
                  return _0x1ce5df.clsParameter;
                default:
                  return _0x1ce5df.parameter;
              }
            }
          }
          return _0x1ce5df.parameter;
        }
        _getEnclosingDecorator(_0x119011) {
          let _0x7da23d = _0x119011.parent;
          while (_0x7da23d) {
            if (_0x7da23d.nodeType === 16) {
              return _0x7da23d;
            }
            if (_0x7da23d.nodeType === 10 || _0x7da23d.nodeType === 31 || _0x7da23d.nodeType === 41 || _0x7da23d.nodeType === 1) {
              return undefined;
            }
            _0x7da23d = _0x7da23d.parent;
          }
          return undefined;
        }
        _getDecoratorModifiers(_0x39976a) {
          if (this._getEnclosingDecorator(_0x39976a) !== undefined) {
            return _0x9ca08.decorator;
          } else {
            return _0x9ca08.none;
          }
        }
        _getFunctionTokenType(_0x4a0758, _0x407b43) {
          if (_0x53cd42.isDunderName(_0x4a0758.d.value)) {
            return _0x1ce5df.magicFunction;
          } else {
            if (_0x407b43.shared.methodClass) {
              return _0x1ce5df.method;
            } else {
              return _0x1ce5df.function;
            }
          }
        }
        _getBuiltinModifiers(_0x163dfb) {
          if (_0x163dfb === 'builtins') {
            return _0x9ca08.builtin;
          } else {
            return _0x9ca08.none;
          }
        }
        _getTypeAnnotationModifiers(_0x39ea63) {
          if (_0x5bf0a3.isWithinAnnotationComment(_0x39ea63)) {
            return _0x9ca08.typeHintComment;
          } else {
            if (_0x5bf0a3.isWithinTypeAnnotation(_0x39ea63, false)) {
              return _0x9ca08.typeHint;
            } else {
              return _0x9ca08.none;
            }
          }
        }
        _getNameNodeToken(_0xa6dd7) {
          var _0x260661;
          if (this._cachedNodeTokenInfo.has(_0xa6dd7)) {
            return this._cachedNodeTokenInfo.get(_0xa6dd7);
          }
          const _0x418768 = this._evaluator.getDeclInfoForNameNode(_0xa6dd7, true);
          let _0x308186 = _0x418768?.decls;
          if ((!_0x308186 || _0x308186.length === 0) && _0x418768?.synthesizedTypes) {
            for (const _0x2c6660 of _0x418768.synthesizedTypes) {
              if (_0x2c6660.node) {
                const _0x520af7 = this._evaluator.getDeclInfoForNameNode(_0x2c6660.node, true);
                _0x308186 = _0x520af7?.decls;
                break;
              }
            }
          }
          if (_0x308186 && _0x308186.length > 0) {
            const _0xcea603 = this._evaluator.resolveAliasDeclaration(_0x308186[0], true);
            if (_0xcea603) {
              const _0x60033e = this._getBuiltinModifiers(_0xcea603.moduleName);
              const _0xdcce92 = this._getTypeAnnotationModifiers(_0xa6dd7);
              switch (_0xcea603.type) {
                case 0:
                  return {
                    type: _0x1ce5df.variable,
                    modifiers: _0x9ca08.builtin
                  };
                case 2:
                  {
                    const _0x4889cf = _0xa6dd7.parent?.nodeType === 41 ? _0x9ca08.declaration : _0x9ca08.none;
                    return {
                      type: this._getParameterTokenType(_0xcea603),
                      modifiers: _0x4889cf
                    };
                  }
                case 7:
                  return {
                    type: _0x1ce5df.class,
                    modifiers: _0xdcce92 | _0x60033e
                  };
                case 6:
                  {
                    const _0x35fd22 = _0xa6dd7.parent?.nodeType === 10 ? _0x9ca08.declaration : _0x9ca08.none;
                    const _0x22fbcc = this._getDecoratorModifiers(_0xa6dd7);
                    const _0x496228 = this._getOverridenModifiers(_0xa6dd7);
                    const _0xca7425 = this._evaluator.getTypeOfClass(_0xcea603.node);
                    const _0x2ef7e7 = _0xdcce92 | _0x22fbcc | _0x496228 | _0x35fd22 | _0x60033e;
                    if (_0xca7425 && _0x5e51c0.ClassType.isEnumClass(_0xca7425.classType)) {
                      return {
                        type: _0x1ce5df.enum,
                        modifiers: _0x2ef7e7
                      };
                    } else {
                      return {
                        type: _0x1ce5df.class,
                        modifiers: _0x2ef7e7
                      };
                    }
                  }
                case 5:
                  {
                    const _0x461c4d = this._evaluator.getTypeForDeclaration(_0xcea603)?.type;
                    return this._getFunctionSemanticTokenInfo(_0xa6dd7, _0x461c4d, _0xcea603);
                  }
                case 1:
                  {
                    const _0x590a74 = _0xcea603.node.id === _0xa6dd7.id ? _0x9ca08.declaration : _0x9ca08.none;
                    const _0x34e6ed = this._getDecoratorModifiers(_0xa6dd7) | _0x590a74 | _0xdcce92 | _0x60033e;
                    const _0x3aac8c = _0x5bf0a3.getEnclosingClass(_0xcea603.node, true);
                    if (_0x3aac8c) {
                      const _0x3f98f9 = this._evaluator.getTypeOfClass(_0x3aac8c);
                      if (_0x3f98f9 && _0x5e51c0.ClassType.isEnumClass(_0x3f98f9.classType)) {
                        return {
                          type: _0x1ce5df.enumMember,
                          modifiers: _0x34e6ed
                        };
                      } else {
                        return {
                          type: _0x1ce5df.property,
                          modifiers: _0x34e6ed
                        };
                      }
                    } else {
                      if (_0xa6dd7.parent?.nodeType === 35 && ((_0x260661 = _0xa6dd7.parent) === null || _0x260661 === undefined ? undefined : _0x260661.d.member.id) === _0xa6dd7.id) {
                        return {
                          type: _0x1ce5df.property,
                          modifiers: _0x34e6ed
                        };
                      }
                      return {
                        type: _0x1ce5df.variable,
                        modifiers: _0x53cd42.isConstantName(_0xa6dd7.d.value) ? _0x34e6ed | _0x9ca08.readonly : _0x34e6ed
                      };
                    }
                  }
                case 8:
                  {
                    const _0x9a21ab = this._getDecoratorModifiers(_0xa6dd7) | _0xdcce92;
                    return {
                      type: _0x1ce5df.module,
                      modifiers: _0x9a21ab
                    };
                  }
              }
            }
          } else {
            const _0x5d34f1 = this._getDecoratorModifiers(_0xa6dd7);
            const _0x49e003 = this._evaluator.getType(_0xa6dd7);
            if (_0x49e003?.category === 7) {
              return {
                type: _0x1ce5df.module,
                modifiers: _0x5d34f1
              };
            } else {
              if (_0xa6dd7.parent?.nodeType === 37) {
                const _0x1d0d97 = _0xa6dd7.parent;
                if (_0x1d0d97.d.nameParts.length > 1) {
                  const _0x584af8 = _0x1d0d97.d.nameParts[_0x1d0d97.d.nameParts.length - 1];
                  if (_0x584af8 !== _0xa6dd7) {
                    const _0x41a0cc = this._getNameNodeToken(_0x584af8);
                    this._cachedNodeTokenInfo.set(_0x584af8, _0x41a0cc);
                    return _0x41a0cc;
                  }
                }
              } else {
                if (_0x418768?.synthesizedTypes) {
                  return this._getSynthesizedTypeToken(_0xa6dd7, _0x418768.synthesizedTypes);
                }
              }
            }
          }
          return undefined;
        }
        _getSynthesizedTypeToken(_0x77482d, _0x3515f0) {
          for (const _0x4fd90b of _0x3515f0) {
            let _0x6b335b = _0x4fd90b.type;
            if (_0x6b335b.category === 5) {
              const _0x14845d = _0x5e51c0.OverloadedType.getOverloads(_0x6b335b);
              if (_0x14845d.length === 0) {
                return undefined;
              }
              _0x6b335b = _0x14845d[0];
            }
            if (_0x6b335b.category === 4) {
              return this._getFunctionSemanticTokenInfo(_0x77482d, _0x6b335b);
            }
          }
          return undefined;
        }
        _getFunctionSemanticTokenInfo(_0x1b6a19, _0x2e063b, _0x55ccd3) {
          let _0x2e7179 = _0x1ce5df.function;
          const _0x54f33c = _0x1b6a19.parent?.nodeType === 31 ? _0x9ca08.declaration : _0x9ca08.none;
          const _0x3d67da = this._getBuiltinModifiers(_0x55ccd3?.moduleName ?? '');
          let _0x1e2886 = this._getDecoratorModifiers(_0x1b6a19) | this._getOverridenModifiers(_0x1b6a19) | _0x54f33c | _0x3d67da;
          if (_0x2e063b) {
            if (_0x55ccd3?.isMethod && _0x46d1b8.isMaybeDescriptorInstance(_0x2e063b, false)) {
              _0x2e7179 = _0x1ce5df.property;
            }
            if (_0x2e063b.category === 4) {
              _0x2e7179 = this._getFunctionTokenType(_0x1b6a19, _0x2e063b);
              if (_0x2e063b.shared.flags & 8) {
                _0x1e2886 = _0x1e2886 | _0x9ca08.abstract;
              }
              if (_0x2e063b.shared.flags & 4) {
                _0x1e2886 = _0x1e2886 | _0x9ca08.static;
              }
              if (_0x2e063b.shared.flags & 512 || (_0x55ccd3 === null || _0x55ccd3 === undefined ? undefined : _0x55ccd3.node.d.isAsync)) {
                _0x1e2886 = _0x1e2886 | _0x9ca08.async;
              }
            }
          }
          return {
            type: _0x2e7179,
            modifiers: _0x1e2886
          };
        }
        _pushKeywordNotSupportedByTextMate(_0x2109ac) {
          if (this._includeSyntaxToken) {
            return;
          }
          const _0x520179 = _0x3e701e[_0x2109ac.nodeType];
          _0xb869b5.assertDefined(_0x520179, 'unknown keyword');
          this._pushToken(_0x195969.TextRange.create(_0x2109ac.start, _0x520179), _0x1ce5df.keyword, _0x9ca08.none);
        }
        _pushToken(_0x558884, _0x17b4ef, _0x4e7757) {
          if (_0x558884.length === 0) {
            return;
          }
          if (this._range) {
            if (!_0x195969.TextRange.overlapsRange(_0x558884, this._range)) {
              return;
            }
          }
          this._pushQueue.push({
            start: _0x558884.start,
            length: _0x558884.length,
            tokenType: _0x17b4ef,
            tokenModifiers: _0x4e7757
          });
          if (this._previousTokenStart > _0x558884.start) {
            this._sawOutOfOrderTokens = true;
          }
          this._previousTokenStart = _0x558884.start;
        }
        _pushMultiLineToken(_0x1c4e4f, _0x4feddc, _0x2004b0, _0x45a736) {
          const _0xaf5cb9 = _0x1c4e4f + _0x4feddc;
          let _0x11a5bb = this._parseResults.tokenizerOutput.tokens.getItemAtPosition(_0x1c4e4f);
          while (_0x11a5bb >= 0 && _0x11a5bb < this._parseResults.tokenizerOutput.tokens.count) {
            const _0x2bc32d = this._parseResults.tokenizerOutput.tokens.getItemAt(_0x11a5bb);
            if (_0x2bc32d.start >= _0xaf5cb9) {
              break;
            }
            const _0x5f5429 = _0x2bc32d.start + _0x2bc32d.length;
            if (_0x2bc32d.start >= _0x1c4e4f && _0x5f5429 <= _0xaf5cb9) {
              const _0x370caa = _0x1c6793.convertOffsetToPosition(_0x2bc32d.start, this._parseResults.tokenizerOutput.lines);
              this._builder.push(_0x370caa.line, _0x370caa.character, _0x2bc32d.length, _0x2004b0, _0x45a736);
            }
            _0x11a5bb++;
          }
        }
      }
      class _0x3d9c23 {
        constructor(_0x318ab5) {
          this._builder = _0x318ab5;
          this._tokens = [];
        }
        push(_0x7d36d9, _0x214192, _0x18f3cd, _0x1218b0, _0x3c5103) {
          this._tokens.push({
            line: _0x7d36d9,
            character: _0x214192,
            length: _0x18f3cd,
            tokenType: _0x1218b0,
            tokenModifiers: _0x3c5103
          });
        }
        canBuildEdits() {
          return this._builder.canBuildEdits();
        }
        build() {
          this._ensureData();
          return this._builder.build();
        }
        buildEdits() {
          this._ensureData();
          return this._builder.buildEdits();
        }
        _ensureData() {
          this._tokens.sort((_0x506469, _0x2bd9cf) => {
            const _0x218188 = _0x195969.comparePositions(_0x506469, _0x2bd9cf);
            if (_0x218188 !== 0) {
              return _0x218188;
            }
            if (_0x506469.length < _0x2bd9cf.length) {
              return -1;
            } else {
              if (_0x506469.length > _0x2bd9cf.length) {
                return 1;
              } else {
                if (_0x506469.tokenType < _0x2bd9cf.tokenType) {
                  return -1;
                } else {
                  if (_0x506469.tokenType > _0x2bd9cf.tokenType) {
                    return 1;
                  } else {
                    if (_0x506469.tokenModifiers < _0x2bd9cf.tokenModifiers) {
                      return -1;
                    } else {
                      if (_0x506469.tokenModifiers > _0x2bd9cf.tokenModifiers) {
                        return 1;
                      }
                    }
                  }
                }
              }
            }
            return 0;
          });
          this._tokens.forEach(_0x1010e => this._builder.push(_0x1010e.line, _0x1010e.character, _0x1010e.length, _0x1010e.tokenType, _0x1010e.tokenModifiers));
        }
      }
    },
    67619: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ShortLivedCache = undefined;
      class _0x1dc362 {
        constructor(_0x274c83) {
          this._cache = [];
          const _0x11791a = Math.min(_0x274c83, 4096);
          for (let _0x194c68 = 0; _0x194c68 < _0x11791a; _0x194c68++) {
            this._cache.push([]);
          }
        }
        get(_0x24c287) {
          if (_0x24c287?.id === undefined) {
            return undefined;
          }
          const _0x34a1de = _0x24c287.id >> 20;
          const _0x58a5b4 = _0x24c287.id & 1048575;
          if (_0x34a1de >= this._cache.length) {
            return undefined;
          }
          const _0x189609 = this._cache[_0x34a1de];
          if (_0x58a5b4 >= _0x189609.length) {
            return undefined;
          }
          return _0x189609[_0x58a5b4];
        }
        add(_0x9ea0f3, _0x2f3ede) {
          const _0x5c2fa0 = _0x9ea0f3 % this._cache.length;
          const _0x4d81a5 = this._cache[_0x5c2fa0];
          const _0x25cfc4 = _0x4d81a5.length;
          _0x4d81a5.push(_0x2f3ede);
          return {
            id: _0x5c2fa0 << 20 | _0x25cfc4
          };
        }
      }
      exports.ShortLivedCache = _0x1dc362;
    },
    48205: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SmartSelectionProvider = undefined;
      const _0x31efb6 = __importStar(require(41557));
      const _0x28a67f = require(91426);
      const _0x3b0ab2 = require(56814);
      const _0x11a006 = require(88754);
      class _0x490cfd {
        static getSmartSelectionRange(_0x3e5e9b, _0x12b7b1, _0x439606) {
          _0x28a67f.throwIfCancellationRequested(_0x439606);
          const _0x162dc7 = _0x31efb6.findNodeByPosition(_0x3e5e9b.parserOutput.parseTree, _0x12b7b1, _0x3e5e9b.tokenizerOutput.lines);
          if (!_0x162dc7) {
            return undefined;
          }
          let _0x1330ae;
          let _0xb9b86f;
          const _0x436587 = _0x3b0ab2.convertPositionToOffset(_0x12b7b1, _0x3e5e9b.tokenizerOutput.lines);
          if (!_0x436587) {
            return undefined;
          }
          for (let _0x5403e1 = _0x162dc7; _0x5403e1 !== undefined; _0x5403e1 = _0x5403e1.parent) {
            if (_0x5403e1.nodeType === 9) {
              _0x50a055(_0x5403e1.d.args);
            } else {
              if (_0x5403e1.nodeType === 31) {
                _0x50a055(_0x5403e1.d.params);
              } else {
                if (_0x5403e1.nodeType === 52) {
                  _0x50a055(_0x5403e1.d.items);
                } else {
                  if (_0x5403e1.nodeType === 33) {
                    _0x50a055(_0x5403e1.d.params);
                  } else {
                    if (_0x5403e1.nodeType === 30) {
                      _0x50a055(_0x5403e1.d.formatExprs);
                      _0x50a055(_0x5403e1.d.fieldExprs);
                    } else {
                      if (_0x5403e1.nodeType === 18) {
                        _0x50a055(_0x5403e1.d.items);
                      } else {
                        if (_0x5403e1.nodeType === 45) {
                          _0x50a055(_0x5403e1.d.items);
                        } else {
                          if (_0x5403e1.nodeType === 34) {
                            _0x50a055(_0x5403e1.d.items);
                          } else {
                            if (_0x5403e1.nodeType === 17) {
                              _0x50a055(_0x5403e1.d.targets);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            _0x4783fc(_0x5403e1);
          }
          return _0x1330ae;
          function _0x50a055(_0x35f38b) {
            const _0x25899b = _0x11a006.TextRange.combine(_0x35f38b);
            if (_0x25899b) {
              const _0x2e6af1 = _0x3b0ab2.convertTextRangeToRange(_0x25899b, _0x3e5e9b.tokenizerOutput.lines);
              _0x4a198a(_0x2e6af1);
            }
          }
          function _0x4783fc(_0x2e14fd) {
            if (_0x2e14fd.nodeType === 50) {
              return;
            }
            const _0x1f55e3 = _0x2e14fd.start;
            const _0x3d6af0 = _0x11a006.TextRange.getEnd(_0x2e14fd);
            if (_0x1f55e3 === _0x3d6af0) {
              return;
            }
            const _0x16ebfa = _0x3b0ab2.convertOffsetsToRange(_0x1f55e3, _0x3d6af0, _0x3e5e9b.tokenizerOutput.lines);
            _0x4a198a(_0x16ebfa);
          }
          function _0x4a198a(_0x1c9d5f) {
            if (!_0x11a006.doesRangeContain(_0x1c9d5f, _0x12b7b1)) {
              return;
            }
            if (!_0xb9b86f) {
              _0x1330ae = {
                range: _0x1c9d5f
              };
              _0xb9b86f = _0x1330ae;
            } else {
              if (!_0x11a006.doesRangeContain(_0xb9b86f.range, _0x1c9d5f)) {
                _0xb9b86f.parent = {
                  range: _0x1c9d5f
                };
                _0xb9b86f = _0xb9b86f.parent;
              }
            }
          }
        }
      }
      exports.SmartSelectionProvider = _0x490cfd;
    },
    34838: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceSourceFile = undefined;
      const _0x34af2d = require(53266);
      const _0x46d13d = require(8398);
      const _0x1c4a78 = require(66609);
      class _0x4268b4 extends _0x34af2d.SourceFile {
        constructor(_0x16bfcf, _0x4a2688, _0x3fbb3e, _0xc24394, _0x311fb1, _0xb95599, _0x3ca842, _0x97c41, _0x309ced, _0x5d6e02) {
          super(_0x4a2688, _0x3fbb3e, _0xc24394, _0x311fb1, _0xb95599, _0x3ca842, _0x97c41, _0x309ced, _0x5d6e02 || _0x46d13d.getIPythonMode(_0x3fbb3e));
          this._getDiagnosticCode = _0x16bfcf;
        }
        createDiagnosticSink() {
          return new _0x1c4a78.PylanceDiagnosticSink(this._getDiagnosticCode);
        }
        createTextRangeDiagnosticSink(_0x16f3e6) {
          return new _0x1c4a78.PylanceTextRangeDiagnosticSink(this._getDiagnosticCode, _0x16f3e6);
        }
      }
      exports.PylanceSourceFile = _0x4268b4;
    },
    54802: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DefaultPylanceSourceFileFactory = undefined;
      exports.createPylanceSourceFile = _0x333fca;
      const _0x39b4bd = require(34838);
      exports.DefaultPylanceSourceFileFactory = {
        createSourceFile(_0x265d44, _0x2daee5, _0x5cd94e, _0x31106c, _0x314b1d, _0x221ccc, _0x3cc2ea, _0x473389, _0x29c329) {
          const _0x5362a0 = _0x15fcd0 => {
            return undefined;
          };
          return _0x333fca(_0x5362a0, _0x265d44, _0x2daee5, _0x5cd94e, _0x31106c, _0x314b1d, _0x221ccc, _0x3cc2ea, _0x473389, _0x29c329);
        }
      };
      function _0x333fca(_0x25e277, _0x45299b, _0x136692, _0x465054, _0x1f2da4, _0x39823c, _0x143031, _0x431657, _0xa568c7, _0x2bd097) {
        return new _0x39b4bd.PylanceSourceFile(_0x25e277, _0x45299b, _0x136692, _0x465054, _0x1f2da4, _0x39823c, _0x143031, _0x431657, _0xa568c7, _0x2bd097);
      }
    },
    60942: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.StringDefinitionHoverProvider = undefined;
      const _0x4b03c1 = require(41557);
      const _0x1b11a8 = require(58253);
      const _0x33d6ae = require(21024);
      const _0x4f9764 = require(92324);
      const _0x1a5abc = require(91426);
      const _0x1571dd = require(56814);
      const _0x2bffa7 = require(88754);
      const _0x154755 = require(79943);
      const _0x20cb4c = require(39426);
      const _0x5a1125 = require(30048);
      class _0x157a93 {
        constructor(_0x404182, _0x37f9c6, _0x515518, _0x915a15, _0x277244) {
          this._program = _0x404182;
          this._fileUri = _0x37f9c6;
          this._position = _0x515518;
          this._format = _0x915a15;
          this._token = _0x277244;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._sourceMapper = this._program.getSourceMapper(this._fileUri, this._token, true);
          this._stringDefinitionFinder = this._program.serviceProvider.tryGet(_0x5a1125.PylanceServiceKeys.stringDefinitionFinder);
        }
        getHover() {
          return _0x154755.convertHoverResults(this._getHoverResult(), this._format);
        }
        get _functionSignatureDisplay() {
          return this._program.configOptions.functionSignatureDisplay;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _getHoverResult() {
          _0x1a5abc.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return null;
          }
          const _0x4f5480 = _0x1571dd.convertPositionToOffset(this._position, this._parseResults.tokenizerOutput.lines);
          if (_0x4f5480 === undefined) {
            return null;
          }
          const _0x194176 = _0x4b03c1.findNodeByOffset(this._parseResults.parserOutput.parseTree, _0x4f5480);
          if (_0x194176 === undefined) {
            return null;
          }
          if (_0x194176.nodeType !== 49) {
            return null;
          }
          const _0x3846dc = this._tryGetDeclarations(_0x194176, _0x4f5480);
          if (_0x3846dc.length === 0) {
            return null;
          }
          const _0xa32fad = this._stringDefinitionFinder.getWordAtOffset(_0x194176, _0x4f5480).split('.');
          if (_0xa32fad.length === 0) {
            return null;
          }
          const _0x3af461 = [];
          const _0x394a6f = _0xa32fad[_0xa32fad.length - 1];
          if (_0x394a6f.length === 0) {
            return null;
          }
          const _0x6472f9 = _0x154755.HoverProvider.getPrimaryDeclaration(_0x3846dc);
          this._addResultsForDeclaration(_0x3af461, _0x6472f9, _0x394a6f);
          if (_0x3af461.length === 0) {
            return null;
          }
          const _0xec0045 = this._getTextRange(_0x194176, _0x4f5480, _0x394a6f);
          return {
            parts: _0x3af461,
            range: {
              start: _0x1571dd.convertOffsetToPosition(_0xec0045.start, this._parseResults.tokenizerOutput.lines),
              end: _0x1571dd.convertOffsetToPosition(_0x2bffa7.TextRange.getEnd(_0xec0045), this._parseResults.tokenizerOutput.lines)
            }
          };
        }
        _getTextRange(_0x11f709, _0x15ff57, _0x59a789) {
          const _0x222f86 = this._parseResults.text.substring(_0x11f709.start, _0x2bffa7.TextRange.getEnd(_0x11f709));
          const _0x5b1557 = _0x15ff57 - _0x11f709.start;
          let _0x334ecb = _0x11f709.start;
          let _0x2404e5 = 0;
          do {
            _0x2404e5 = _0x222f86.indexOf(_0x59a789, _0x2404e5);
            if (_0x2404e5 < 0) {
              return _0x11f709;
            }
            if (_0x2404e5 <= _0x5b1557 && _0x5b1557 <= _0x2404e5 + _0x59a789.length) {
              _0x334ecb = _0x11f709.start + _0x2404e5;
              break;
            }
            _0x2404e5 += _0x59a789.length;
          } while (true);
          return {
            start: _0x334ecb,
            length: _0x59a789.length
          };
        }
        _addResultsForDeclaration(_0x58c834, _0xb99703, _0x492c4c) {
          const _0x1b63ae = this._evaluator.resolveAliasDeclaration(_0xb99703, true, {
            allowExternallyHiddenAccess: true,
            skipFileNeededCheck: true
          });
          if (!_0x1b63ae) {
            return;
          }
          const _0x85948d = this._getTypeForDeclaration(_0x1b63ae);
          if (!_0x85948d.type) {
            return;
          }
          switch (_0x1b63ae.type) {
            case 1:
              {
                const _0x382cc3 = this._getVariableTypeText(_0x1b63ae, _0x492c4c, _0x85948d);
                this._addResultsPart(_0x58c834, _0x382cc3, true);
                this._addDocumentationPartForType(_0x58c834, _0x85948d.type, _0x1b63ae, _0x492c4c);
                break;
              }
            case 6:
            case 7:
              {
                this._addResultsPart(_0x58c834, `(class) ${_0x492c4c}`, true);
                this._addDocumentationPartForType(_0x58c834, _0x85948d.type, _0x1b63ae, _0x492c4c);
                break;
              }
            case 5:
              {
                let _0x291b01 = 'function';
                let _0x3e80e0 = false;
                if (_0x1b63ae.isMethod) {
                  const _0x78e616 = this._evaluator.getTypeForDeclaration(_0x1b63ae)?.type;
                  _0x3e80e0 = !!_0x78e616 && _0x4f9764.isMaybeDescriptorInstance(_0x78e616, false);
                  _0x291b01 = _0x3e80e0 ? 'property' : 'method';
                }
                const _0x531887 = _0x20cb4c.getToolTipForType(_0x85948d.type, _0x291b01, _0x492c4c, this._evaluator, _0x3e80e0, this._functionSignatureDisplay);
                this._addResultsPart(_0x58c834, _0x531887, true);
                this._addDocumentationPartForType(_0x58c834, _0x85948d.type, _0x1b63ae, _0x492c4c);
                break;
              }
            case 8:
              {
                this._addResultsPart(_0x58c834, `(module) ${_0x492c4c}`, true);
                this._addDocumentationPartForType(_0x58c834, _0x85948d.type, _0x1b63ae, _0x492c4c);
                break;
              }
            case 4:
              {
                const _0x9fce8 = _0x492c4c + this._getTypeText(_0x85948d.type, {
                  expandTypeAlias: true
                });
                this._addResultsPart(_0x58c834, `(type alias) ${_0x9fce8}`, true);
                this._addDocumentationPartForType(_0x58c834, _0x85948d.type, _0x1b63ae, _0x492c4c);
                break;
              }
          }
        }
        _getTypeForDeclaration(_0x3f09b1) {
          const _0x3929fd = this._evaluator.getTypeForDeclaration(_0x3f09b1);
          if (_0x3929fd.type) {
            return _0x3929fd;
          }
          const _0x51ac7a = new _0x1b11a8.Symbol(0);
          const _0x294379 = this._evaluator.getInferredTypeOfDeclaration(_0x51ac7a, _0x3f09b1);
          return {
            type: _0x294379,
            isTypeAlias: _0x294379?.props?.typeAliasInfo !== undefined
          };
        }
        _getVariableTypeText(_0x357e9f, _0x253148, _0x272a22) {
          const _0x5b1b4a = _0x272a22.type;
          let _0x4e4d11 = _0x357e9f.isConstant || this._evaluator.isFinalVariableDeclaration(_0x357e9f) ? 'constant' : 'variable';
          let _0x174caa = false;
          let _0x2e7fa8;
          if (_0x272a22.isTypeAlias) {
            const _0x2be33d = _0x33d6ae.getTypeAliasInfo(_0x5b1b4a);
            if ((_0x2be33d === null || _0x2be33d === undefined ? undefined : _0x2be33d.shared.name) === _0x253148) {
              if (_0x33d6ae.isTypeVar(_0x5b1b4a)) {
                _0x4e4d11 = _0x5b1b4a.shared.isTypeParamSyntax ? 'param spec' : 'type variable';
                _0x2e7fa8 = _0x5b1b4a.shared.name;
              } else {
                _0x174caa = true;
                _0x4e4d11 = 'type alias';
              }
            }
          }
          if (_0x5b1b4a.category === 4 || _0x5b1b4a.category === 5) {
            return _0x20cb4c.getToolTipForType(_0x5b1b4a, _0x4e4d11, _0x253148, this._evaluator, false, this._functionSignatureDisplay);
          }
          const _0x4e5884 = _0x2e7fa8 || _0x253148 + ': ' + this._evaluator.printType(_0x5b1b4a, {
            expandTypeAlias: _0x174caa
          });
          return `(${_0x4e4d11}) ${_0x4e5884}`;
        }
        _addDocumentationPartForType(_0x5154fd, _0x4b8898, _0x1d0d39, _0x526261) {
          const _0x5b1398 = _0x20cb4c.getDocumentationPartsForTypeAndDecl(this._sourceMapper, _0x4b8898, _0x1d0d39, this._evaluator, {
            name: _0x526261
          });
          _0x154755.addDocumentationResultsPart(this._program.serviceProvider, _0x5b1398, this._format, _0x5154fd, _0x1d0d39);
          return !!_0x5b1398;
        }
        _addResultsPart(_0x157604, _0x1406ec, _0x4544e7 = false) {
          _0x157604.push({
            python: _0x4544e7,
            text: _0x1406ec
          });
        }
        _getTypeText(_0x45823c, _0x1417cb) {
          return `: ${this._evaluator.printType(_0x45823c, _0x1417cb)}`;
        }
        _tryGetDeclarations(_0x5575e1, _0x3716de) {
          if (!this._stringDefinitionFinder) {
            return [];
          }
          return this._stringDefinitionFinder.tryGetDeclarations(_0x5575e1, _0x3716de, this._token);
        }
      }
      exports.StringDefinitionHoverProvider = _0x157a93;
    },
    37036: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.StringDefinitionFinder = undefined;
      const _0x20e3c7 = require(26687);
      const _0xe7a7dd = require(95952);
      const _0x117b1d = require(91426);
      const _0xdccae2 = require(67032);
      const _0x1dff24 = require(69482);
      function _0x2a99ed(_0x198df7) {
        let _0x243814 = 0;
        while (_0x198df7[_0x243814] === '.') {
          _0x243814++;
        }
        return _0x243814;
      }
      function _0x4d21eb(_0x264a3f, _0x3cb69d) {
        let _0xfb5e82 = 0;
        let _0x43fb3d = 0;
        while (_0xfb5e82 < _0x264a3f.length && _0xfb5e82 < _0x3cb69d) {
          if (_0x264a3f[_0xfb5e82] === ' ' || _0x264a3f[_0xfb5e82] === '\t') {
            _0x43fb3d = _0xfb5e82 + 1;
          }
          _0xfb5e82++;
        }
        let _0x3f9d1e = _0x3cb69d;
        while (_0x3f9d1e < _0x264a3f.length && _0x264a3f[_0x3f9d1e] !== ' ' && _0x264a3f[_0x3f9d1e] !== '\t' && _0x264a3f[_0x3f9d1e] !== '.') {
          _0x3f9d1e++;
        }
        return _0x264a3f.substring(_0x43fb3d, _0x3f9d1e);
      }
      function _0x51a146(_0x2995fe, _0x486383, _0x26754e) {
        return {
          node: _0x2995fe,
          type: 8,
          usesLocalName: false,
          uri: _0x26754e,
          range: {
            start: {
              line: 0,
              character: 0
            },
            end: {
              line: 0,
              character: 0
            }
          },
          loadSymbolsFromPath: false,
          moduleName: _0x486383,
          isInExceptSuite: false
        };
      }
      class _0x2c6c27 {
        constructor(_0x221a88, _0xca747a, _0x3b6a13) {
          this._view = _0x221a88;
          this._mutator = _0xca747a;
          this._telemetryReporter = _0x3b6a13;
          this._enabled = true;
        }
        onUpdateSettings(_0x5e516f) {
          this._enabled = !!_0x5e516f.gotoDefinitionInStringLiteral;
        }
        tryGetDeclarations(_0x2c130a, _0x487799, _0x28f785) {
          const _0x2c8404 = [];
          if (!this._enabled) {
            return _0x2c8404;
          }
          try {
            return this._tryGetDeclarations(_0x2c130a, _0x487799, _0x28f785);
          } finally {
            if (_0x2c130a.nodeType === 49) {
              const _0x1353fe = new _0x1dff24.TelemetryEvent(_0x1dff24.TelemetryEventName.GOTODEF_INSIDE_STRING);
              _0x1353fe.Properties.resultLength = _0x2c8404.length.toString();
              this._telemetryReporter.sendTelemetry(_0x1353fe);
            }
          }
        }
        getWordAtOffset(_0x26a20e, _0x2ecbf9) {
          return _0x4d21eb(_0x26a20e.d.value, _0x2ecbf9 - (_0x26a20e.start + _0x26a20e.d.token.quoteMarkLength));
        }
        _tryGetDeclarations(_0x3f55b7, _0x282a61, _0x36456f) {
          if (_0x3f55b7.nodeType !== 49) {
            return [];
          }
          const _0x3a1979 = this.getWordAtOffset(_0x3f55b7, _0x282a61);
          const _0x3a2f66 = _0x20e3c7.getFileInfo(_0x3f55b7);
          const _0x478ba1 = this._view.importResolver;
          const _0xc227c5 = this._view.configOptions.findExecEnvironment(_0x3a2f66.fileUri);
          if (!_0xc227c5 || !_0x478ba1) {
            return [];
          }
          const _0x512d82 = {
            leadingDots: _0x2a99ed(_0x3a1979),
            nameParts: _0x3a1979.split('.'),
            importedSymbols: new Set()
          };
          const _0x1be2a4 = _0x478ba1.resolveImport(_0x3a2f66.fileUri, _0xc227c5, _0x512d82);
          if (_0x1be2a4 && _0x1be2a4.resolvedUris.length > 0 && _0x1be2a4.isImportFound) {
            return [_0x51a146(_0x3f55b7, _0x1be2a4.importName, _0x1be2a4.resolvedUris[_0x1be2a4.resolvedUris.length - 1])];
          }
          if (_0x512d82.nameParts.length <= 1) {
            return [];
          }
          const _0x5a7537 = _0x512d82.nameParts.pop();
          const _0x3c7ecc = _0x478ba1.resolveImport(_0x3a2f66.fileUri, _0xc227c5, _0x512d82);
          if (_0x3c7ecc && _0x3c7ecc.resolvedUris.length > 0 && _0x5a7537 && _0x3c7ecc.isImportFound) {
            return this._getMemberDeclarations(_0x3c7ecc.resolvedUris[_0x3c7ecc.resolvedUris.length - 1], _0x5a7537, _0x36456f);
          }
          return [];
        }
        _getFileSystem() {
          return this._view.importResolver.fileSystem;
        }
        _getParseResults(_0xf8fe5, _0xc8516a) {
          _0x117b1d.throwIfCancellationRequested(_0xc8516a);
          let _0x42eac4 = this._view.getParseResults(_0xf8fe5);
          if (!_0x42eac4 && this._getFileSystem().existsSync(_0xf8fe5)) {
            this._mutator.addInterimFile(_0xf8fe5);
            _0x42eac4 = this._view.getParseResults(_0xf8fe5);
          }
          return _0x42eac4;
        }
        _getMemberDeclarations(_0x1021e2, _0x38e48e, _0x18b66c) {
          _0x117b1d.throwIfCancellationRequested(_0x18b66c);
          const _0x2683b0 = this._getParseResults(_0x1021e2, _0x18b66c);
          if (!_0x2683b0 || !_0x2683b0.text.includes(_0x38e48e)) {
            return [];
          }
          const _0x12f3d6 = _0xe7a7dd.getScopeForNode(_0x2683b0.parserOutput.parseTree);
          const _0x4a803a = _0x12f3d6 === null || _0x12f3d6 === undefined ? undefined : _0x12f3d6.lookUpSymbol(_0x38e48e);
          if (!_0x4a803a || !_0x4a803a.hasDeclarations()) {
            return [];
          }
          const _0x38213c = [];
          for (const _0x34918e of _0x4a803a.getDeclarations()) {
            const _0x215ff8 = this._view.evaluator.resolveAliasDeclaration(_0x34918e, true, {
              allowExternallyHiddenAccess: true,
              skipFileNeededCheck: true
            });
            if (!_0x215ff8) {
              continue;
            }
            _0xdccae2.addDeclarationIfUnique(_0x38213c, _0x215ff8);
          }
          return _0x38213c;
        }
      }
      exports.StringDefinitionFinder = _0x2c6c27;
    },
    2565: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.WorkspaceSymbolProvider = undefined;
      const _0x423fe2 = require(46292);
      class _0x52e876 extends _0x423fe2.WorkspaceSymbolProvider {
        constructor(_0x1e175f, _0x4da21f, _0x26bb01, _0xa75b72, _0x3f691f) {
          super(_0x4da21f, _0x26bb01, _0xa75b72, _0x3f691f);
          this._globalIndices = _0x1e175f;
        }
        getSymbolsForDocument(_0x391b0f, _0x3d9e77) {
          const _0x13fd95 = this._globalIndices.getIndices(_0x391b0f).getSourceIndex(_0x3d9e77);
          if (_0x13fd95) {
            const _0x295725 = [];
            this.appendWorkspaceSymbolsRecursive(_0x13fd95.symbols, _0x391b0f, _0x3d9e77, '', _0x295725);
            return _0x295725;
          }
          return super.getSymbolsForDocument(_0x391b0f, _0x3d9e77);
        }
      }
      exports.WorkspaceSymbolProvider = _0x52e876;
    },
    15986: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Localizer = undefined;
      exports.setGetRawString = _0x524ddb;
      const _0x3fda38 = require(18721);
      const _0x3394e8 = require(52420);
      const _0x18861a = require(76463);
      const _0x34ca8d = require(32535);
      const _0x5577e7 = require(47011);
      const _0x451b7d = require(94814);
      const _0x186634 = require(29150);
      const _0x3cc7bf = require(14997);
      const _0x186a5a = require(42235);
      const _0x5723f5 = require(6842);
      const _0x1b6242 = require(39452);
      const _0x88eb6f = require(53802);
      const _0x18d44e = require(49381);
      const _0x37f621 = require(70417);
      const _0xc6a301 = require(41101);
      const _0x1b60ba = require(67703);
      const _0x551c3d = 'en-us';
      const _0x27a9b1 = new Map([['cs', _0x3fda38], ['de', _0x3394e8], ['en-us', _0x18861a], ['en', _0x18861a], ['es', _0x34ca8d], ['fr', _0x5577e7], ['it', _0x451b7d], ['ja', _0x186634], ['ko', _0x3cc7bf], ['pl', _0x186a5a], ['pt-br', _0x5723f5], ['qps-ploc', _0x1b6242], ['ru', _0x88eb6f], ['tr', _0x18d44e], ['zh-cn', _0x37f621], ['zh-tw', _0xc6a301]]);
      let _0x157e92 = undefined;
      let _0x5a94af = {};
      function _0x423ffb(_0x1e8c3b) {
        if (_0x157e92 === undefined) {
          _0x157e92 = _0x3db894();
        }
        const _0x1ca5f7 = _0x1e8c3b.split('.');
        const _0x489eef = _0x1b60ba.getRawStringFromMap(_0x157e92, _0x1ca5f7) || _0x1b60ba.getRawStringFromMap(_0x5a94af, _0x1ca5f7);
        if (_0x489eef) {
          return _0x489eef;
        }
        return _0xcc4701(_0x1e8c3b);
      }
      let _0x1da214 = _0x423ffb;
      const _0xcc4701 = _0x1b60ba.setGetRawString(_0x1da214);
      function _0x524ddb(_0x2e3f1a) {
        const _0x4ce32d = _0x1da214;
        _0x1da214 = _0x2e3f1a;
        _0x1b60ba.setGetRawString(_0x2e3f1a);
        return _0x4ce32d;
      }
      function _0x3db894() {
        _0x5a94af = _0x5c18bd();
        const _0x2c58d6 = _0x1b60ba.getLocaleFromEnv();
        return _0x1b60ba.loadStringsForLocale(_0x2c58d6, _0x27a9b1);
      }
      function _0x5c18bd() {
        const _0x5ec7d2 = _0x27a9b1.get(_0x551c3d);
        if (_0x5ec7d2) {
          return _0x5ec7d2;
        }
        console.error('Could not load default strings');
        return {};
      }
      var _0x3222c3;
      (function (_0x4464ce) {
        let _0x53f532;
        (function (_0x17d045) {
          _0x17d045.fixtureNotFound = () => new _0x1b60ba.ParameterizedString(_0x1da214('Pytest.fixtureNotFound'));
          _0x17d045.addTypeAnnnotation = () => new _0x1b60ba.ParameterizedString(_0x1da214('Pytest.addTypeAnnotation'));
          _0x17d045.addTypeAnnnotations = () => _0x1da214('Pytest.addTypeAnnotations');
        })(_0x53f532 = _0x4464ce.Pytest ||= {});
        let _0x3ba804;
        (function (_0x1538df) {
          _0x1538df.moveFile = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFile'));
          _0x1538df.moveFileLabel = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileLabel'));
          _0x1538df.moveFileDescription = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileDescription'));
          _0x1538df.moveFileNotUserFile = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileNotUserFile'));
          _0x1538df.moveFilePrivateSymbol = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFilePrivateSymbol'));
          _0x1538df.moveFileImportableOnly = () => _0x1da214('Refactoring.moveFileImportableOnly');
          _0x1538df.moveFileUnsupportedSymbol = () => _0x1da214('Refactoring.moveFileUnsupportedSymbol');
          _0x1538df.moveFileMultipleDeclarations = () => _0x1da214('Refactoring.moveFileMultipleDeclarations');
          _0x1538df.moveFileSimpleAssignmentsOnly = () => _0x1da214('Refactoring.moveFileSimpleAssignmentsOnly');
          _0x1538df.moveFileExtensionMismatch = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileExtensionMismatch'));
          _0x1538df.moveFileMissingInfo = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileMissingInfo'));
          _0x1538df.moveFileSameFile = () => _0x1da214('Refactoring.moveFileSameFile');
          _0x1538df.moveFileSymbolNotFound = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileSymbolNotFound'));
          _0x1538df.moveFileAbsentSymbol = () => _0x1da214('Refactoring.moveFileAbsentSymbol');
          _0x1538df.moveFileInsertLocation = () => new _0x1b60ba.ParameterizedString(_0x1da214('Refactoring.moveFileInsertLocation'));
        })(_0x3ba804 = _0x4464ce.Refactoring ||= {});
        let _0xf9ae6f;
        (function (_0x156b63) {
          let _0x2e062b;
          (function (_0x3566e2) {
            _0x3566e2.commandTitle = () => _0x1da214('CodeAction.MoveSymbol.commandTitle');
            _0x3566e2.moveSymbolsTo = () => _0x1da214('CodeAction.MoveSymbol.moveSymbolsTo');
            _0x3566e2.moveSymbolsToNewFile = () => _0x1da214('CodeAction.MoveSymbol.moveSymbolsToNewFile');
          })(_0x2e062b = _0x156b63.MoveSymbol ||= {});
          let _0x3c55dd;
          (function (_0x3cc55a) {
            _0x3cc55a.method = () => _0x1da214('CodeAction.Extract.method');
            _0x3cc55a.variable = () => _0x1da214('CodeAction.Extract.variable');
          })(_0x3c55dd = _0x156b63.Extract ||= {});
          let _0x97a65a;
          (function (_0xbeca5c) {
            _0xbeca5c.removeUnusedImport = () => _0x1da214('CodeAction.RemoveUnusedImport.removeUnusedImport');
            _0xbeca5c.removeAllUnusedImports = () => _0x1da214('CodeAction.RemoveUnusedImport.removeAllUnusedImports');
          })(_0x97a65a = _0x156b63.RemoveUnusedImport ||= {});
          let _0x1b24d4;
          (function (_0x469881) {
            _0x469881.convertToRelativePath = () => _0x1da214('CodeAction.ToggleImportPath.convertToRelativePath');
            _0x469881.convertAllToRelativePath = () => _0x1da214('CodeAction.ToggleImportPath.convertAllToRelativePath');
            _0x469881.convertToAbsolutePath = () => _0x1da214('CodeAction.ToggleImportPath.convertToAbsolutePath');
            _0x469881.convertAllToAbsolutePath = () => _0x1da214('CodeAction.ToggleImportPath.convertAllToAbsolutePath');
            _0x469881.convertAllFormat = () => _0x1da214('CodeAction.ToggleImportPath.convertAllFormat');
          })(_0x1b24d4 = _0x156b63.ToggleImportPath ||= {});
          let _0x2449cf;
          (function (_0x354f1e) {
            _0x354f1e.addExtraPath = () => new _0x1b60ba.ParameterizedString(_0x1da214('CodeAction.ExtraPath.addExtraPath'));
          })(_0x2449cf = _0x156b63.ExtraPath ||= {});
          let _0x334915;
          (function (_0xce704b) {
            _0xce704b.addAutoImport = () => new _0x1b60ba.ParameterizedString(_0x1da214('CodeAction.AutoImport.addAutoImport'));
            _0xce704b.searchImport = () => _0x1da214('CodeAction.AutoImport.searchImport');
          })(_0x334915 = _0x156b63.AutoImport ||= {});
          let _0x3aa3d6;
          (function (_0x30882b) {
            _0x30882b.changeSpellingTo = () => new _0x1b60ba.ParameterizedString(_0x1da214('CodeAction.ChangeSpelling.changeSpellingTo'));
          })(_0x3aa3d6 = _0x156b63.ChangeSpelling ||= {});
          let _0x203776;
          (function (_0x3687a3) {
            _0x3687a3.runFixAll = () => _0x1da214('CodeAction.FixAll.runFixAll');
          })(_0x203776 = _0x156b63.FixAll ||= {});
          let _0x2bb794;
          (function (_0x1a58b2) {
            _0x1a58b2.selectInterpreterTitle = () => _0x1da214('CodeAction.UnresolvedImports.selectInterpreterTitle');
            _0x1a58b2.selectKernelTitle = () => _0x1da214('CodeAction.UnresolvedImports.selectKernelTitle');
            _0x1a58b2.learnMoreTitle = () => _0x1da214('CodeAction.UnresolvedImports.learnMoreTitle');
          })(_0x2bb794 = _0x156b63.UnresolvedImports ||= {});
          let _0x2d271f;
          (function (_0x45270e) {
            _0x45270e.implementAllAbstractClasses = () => _0x1da214('CodeAction.ImplementAbstractClass.implementAllAbstractClasses');
            _0x45270e.implementAllAbstractClassesWithCopilot = () => _0x1da214('Copilot.implementAllInheritedAbstractClasseswithCopilot');
          })(_0x2d271f = _0x156b63.ImplementAbstractClass ||= {});
          let _0xda9738;
          (function (_0x21864b) {
            _0x21864b.generateDocstring = () => _0x1da214('DocstringTemplate.GenerateDocstring');
            _0x21864b.generateDocstringWithCopilot = () => _0x1da214('Copilot.GenerateDocstringWithCopilot');
          })(_0xda9738 = _0x156b63.GenerateDocstring ||= {});
        })(_0xf9ae6f = _0x4464ce.CodeAction ||= {});
        let _0x2e0b73;
        (function (_0x340101) {
          _0x340101.importResolveRedirect = () => new _0x1b60ba.ParameterizedString(_0x1da214('Diagnostic.importResolveRedirect'));
        })(_0x2e0b73 = _0x4464ce.Diagnostic ||= {});
        let _0x5edf99;
        (function (_0x4baa77) {
          _0x4baa77.defaultPythonEnvironmentName = () => _0x1da214('Messages.defaultPythonEnvironmentName');
          _0x4baa77.windowsStoreEnvironmentName = () => _0x1da214('Messages.windowsStoreEnvironmentName');
          _0x4baa77.globalEnvironmentName = () => _0x1da214('Messages.globalEnvironmentName');
          _0x4baa77.singularFileAndSingularCellToAnalyze = () => _0x1da214('Messages.singularFileAndSingularCellToAnalyze');
          _0x4baa77.singularFileAndPluralCellsToAnalyze = () => new _0x1b60ba.ParameterizedString(_0x1da214('Messages.singularFileAndPluralCellsToAnalyze'));
          _0x4baa77.pluralFilesAndSingularCellToAnalyze = () => new _0x1b60ba.ParameterizedString(_0x1da214('Messages.pluralFilesAndSingularCellToAnalyze'));
          _0x4baa77.pluralFilesAndPluralCellsToAnalyze = () => new _0x1b60ba.ParameterizedString(_0x1da214('Messages.pluralFilesAndPluralCellsToAnalyze'));
        })(_0x5edf99 = _0x4464ce.Messages ||= {});
        let _0x14a576;
        (function (_0xbae18c) {
          let _0x5a5c21;
          (function (_0x44048f) {
            _0x44048f.profilingDataSaved = () => new _0x1b60ba.ParameterizedString(_0x1da214('Commands.ProfilingCommand.profilingDataSaved'));
          })(_0x5a5c21 = _0xbae18c.ProfilingCommand ||= {});
          let _0x4a937f;
          (function (_0x116940) {
            _0x116940.loggingDataSaved = () => new _0x1b60ba.ParameterizedString(_0x1da214('Commands.LoggingCommand.loggingDataSaved'));
          })(_0x4a937f = _0xbae18c.LoggingCommand ||= {});
          _0xbae18c.gotoOutputCommand = () => _0x1da214('Commands.gotoOutputCommand');
        })(_0x14a576 = _0x4464ce.Commands ||= {});
        let _0x16b5de;
        (function (_0x4f7642) {
          _0x4f7642.title = () => _0x1da214('PerformanceTracking.title');
          _0x4f7642.button = () => _0x1da214('PerformanceTracking.button');
        })(_0x16b5de = _0x4464ce.PerformanceTracking ||= {});
        let _0x482f24;
        (function (_0x3f02f4) {
          _0x3f02f4.docstringForName = () => new _0x1b60ba.ParameterizedString(_0x1da214('DocstringTemplate.docstringForName'));
          _0x3f02f4.description = () => _0x1da214('DocstringTemplate.description');
        })(_0x482f24 = _0x4464ce.DocstringTemplate ||= {});
      })(_0x3222c3 || (exports.Localizer = _0x3222c3 = {}));
    },
    35040: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SyncFileSystemFeature = undefined;
      const _0x502b00 = require(8067);
      const _0x523fee = _0x8a8995 => {
        return class extends _0x8a8995 {
          get fileSystem() {
            return {
              readSync: _0x31668a => {
                var _0xc3118b;
                if (!this._clientConnection) {
                  throw new Error('Client connection not attached');
                }
                const _0x2d1405 = (_0xc3118b = this._clientConnection) === null || _0xc3118b === undefined ? undefined : _0xc3118b.sendRequest('file/readSync', {
                  uri: _0x31668a
                }, new _0x502b00.VariableResult('binary'));
                if (_0x2d1405.errno === 0 && _0x2d1405.data) {
                  return _0x2d1405.data;
                }
                throw new Error(`readSync failed with error ${_0x2d1405.errno}`);
              },
              readDirectorySync: _0x2d98e1 => {
                var _0x5ef81c;
                if (!this._clientConnection) {
                  throw new Error('Client connection not attached');
                }
                const _0x30a850 = (_0x5ef81c = this._clientConnection) === null || _0x5ef81c === undefined ? undefined : _0x5ef81c.sendRequest('file/readDirectorySync', {
                  uri: _0x2d98e1
                }, new _0x502b00.VariableResult('json'));
                if (_0x30a850.errno === 0 && _0x30a850.data) {
                  return _0x30a850.data;
                }
                throw new Error(`readDirectorySync failed with error ${_0x30a850.errno}`);
              },
              statSync: _0x5a69c1 => {
                var _0x29acc5;
                if (!this._clientConnection) {
                  throw new Error('Client connection not attached');
                }
                const _0x4b2c76 = (_0x29acc5 = this._clientConnection) === null || _0x29acc5 === undefined ? undefined : _0x29acc5.sendRequest('file/statSync', {
                  uri: _0x5a69c1
                }, new _0x502b00.VariableResult('json'));
                if (_0x4b2c76.errno === 0 && _0x4b2c76.data) {
                  return _0x4b2c76.data;
                }
                if (_0x4b2c76.errno === 0 && _0x4b2c76.data === null) {
                  return {
                    size: 0,
                    mtime: 0,
                    type: 'unknown'
                  };
                }
                throw new Error(`statSync failed with error ${_0x4b2c76.errno}`);
              }
            };
          }
          attachClient(_0x36f36d) {
            this._clientConnection = _0x36f36d;
          }
        };
      };
      exports.SyncFileSystemFeature = _0x523fee;
    },
    22205: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FilteringWorker = undefined;
      class _0xabbaa8 {
        constructor(_0x3ea55e, _0x5245ad) {
          this._worker = _0x3ea55e;
          this._filter = _0x5245ad;
        }
        get stdin() {
          return this._worker.stdin;
        }
        get stdout() {
          return this._worker.stdout;
        }
        get stderr() {
          return this._worker.stderr;
        }
        get threadId() {
          return this._worker.threadId;
        }
        get performance() {
          return this._worker.performance;
        }
        postMessage(_0x51655d, _0x1e9cae) {
          this._worker.postMessage(_0x51655d, _0x1e9cae);
        }
        postMessageToThread(_0x33475c, _0x6178f3, _0x51696f, _0xfa6fef) {
          if (typeof _0x51696f === 'number' || _0x51696f === undefined) {
            return this._worker.postMessageToThread(_0x33475c, _0x6178f3, _0x51696f);
          } else {
            return this._worker.postMessageToThread(_0x33475c, _0x6178f3, _0x51696f, _0xfa6fef);
          }
        }
        ref() {
          this._worker.ref();
        }
        unref() {
          this._worker.unref();
        }
        terminate() {
          return this._worker.terminate();
        }
        getHeapSnapshot() {
          return this._worker.getHeapSnapshot();
        }
        addListener(_0x4601c7, _0x3e56ea) {
          this._worker.addListener(_0x4601c7, _0x470eca => {
            if (this._filter(_0x470eca)) {
              _0x3e56ea(_0x470eca);
            }
          });
          return this;
        }
        emit(_0x1ea05b, _0x3d75b7, ..._0x12fa07) {
          return this._worker.emit(_0x1ea05b, _0x3d75b7, ..._0x12fa07);
        }
        once(_0x2b5f1c, _0xcaff98) {
          this._worker.once(_0x2b5f1c, _0xcaff98);
          return this;
        }
        prependListener(_0x564a98, _0x19fa39) {
          this._worker.prependListener(_0x564a98, _0x19fa39);
          return this;
        }
        prependOnceListener(_0x15f0e0, _0x3df4ba) {
          this._worker.prependOnceListener(_0x15f0e0, _0x3df4ba);
          return this;
        }
        removeListener(_0x319e26, _0x400cbb) {
          this._worker.removeListener(_0x319e26, _0x400cbb);
          return this;
        }
        off(_0x2a84d2, _0x2c4161) {
          this._worker.off(_0x2a84d2, _0x2c4161);
          return this;
        }
        removeAllListeners(_0xcd2248) {
          this._worker.removeAllListeners(_0xcd2248);
          return this;
        }
        setMaxListeners(_0x2330bb) {
          this._worker.setMaxListeners(_0x2330bb);
          return this;
        }
        getMaxListeners() {
          return this._worker.getMaxListeners();
        }
        listeners(_0x3da709) {
          return this._worker.listeners(_0x3da709);
        }
        rawListeners(_0x481818) {
          return this._worker.rawListeners(_0x481818);
        }
        listenerCount(_0xeacacf) {
          return this._worker.listenerCount(_0xeacacf);
        }
        eventNames() {
          return this._worker.eventNames();
        }
        on(_0x527d12, _0x19d7e1) {
          this._worker.on(_0x527d12, _0x3dbd5d => {
            if (this._filter(_0x3dbd5d)) {
              _0x19d7e1(_0x3dbd5d);
            }
          });
          return this;
        }
      }
      exports.FilteringWorker = _0xabbaa8;
    },
    14852: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.runServer = _0x57fe9c;
      exports.main = _0x486b89;
      const _0x517ddd = require(56911);
      const _0x247b40 = require(25075);
      const _0xfeac07 = require(34487);
      const _0x2e82be = require(27643);
      const _0xadd795 = require(27113);
      const _0x20640f = require(86500);
      const _0x158cfc = require(85417);
      const _0x204c99 = require(67299);
      const _0x21690b = require(99504);
      const _0x4c8726 = require(44889);
      const _0x4daa4d = require(45210);
      const _0x4b8d1b = require(79524);
      const _0x2a61db = require(6452);
      const _0x2d1b94 = require(96627);
      const _0x311cf3 = __dirname;
      function _0x57fe9c(_0x422377, _0x555d8f) {
        const _0x559f20 = new _0x2e82be.RealTempFile();
        const _0x39dbaf = new _0x247b40.ConsoleWithLogLevel(_0x422377.console, process.pid.toString());
        const _0x5a65ca = new _0x2e82be.WorkspaceFileWatcherProvider();
        const _0x4aa019 = _0x2e82be.createFromRealFileSystem(_0x559f20, _0x39dbaf, _0x5a65ca);
        const _0x4a57ea = new _0x4c8726.NotebookUriMapper(_0x559f20);
        const _0x5b9bb0 = _0x4b8d1b.PylanceFileSystem.createWithoutRemote(_0x4aa019, _0x4a57ea);
        const _0x27023f = _0x2d1b94.createNodeServiceProviders(_0x311cf3, _0x422377, _0x5b9bb0, _0x4a57ea, _0x39dbaf, _0x559f20);
        const _0x16946f = _0xadd795.Uri.file(_0x311cf3, _0x27023f, true);
        const _0xa5fce7 = {
          productName: 'Pylance',
          rootDirectory: _0x16946f,
          version: _0x21690b.VERSION + ' (pyright version ' + _0x21690b.PYRIGHT_VERSION + ', commit ' + _0x21690b.PYRIGHT_COMMIT.substring(0, 8) + ')',
          serviceProvider: _0x27023f,
          fileWatcherHandler: _0x5a65ca,
          cancellationProvider: new _0xfeac07.FileBasedCancellationProvider('bg'),
          supportedCommands: _0x204c99.AsyncCommandController.supportedCommands(),
          supportedCodeActions: [_0x517ddd.CodeActionKind.QuickFix, _0x517ddd.CodeActionKind.Refactor, _0x517ddd.CodeActionKind.RefactorExtract, _0x517ddd.CodeActionKind.SourceFixAll, ..._0x4daa4d.pylanceCodeActionKinds],
          supportsTelemetry: true,
          hasVSCodeExtension: _0x555d8f
        };
        new _0x2a61db.PylanceAsyncServer(_0xa5fce7, _0x422377);
      }
      async function _0x486b89(_0xc751ed) {
        await _0x20640f.run(_0x507300 => _0x57fe9c(_0x507300, _0xc751ed), _0x158cfc.runBackgroundThread);
      }
    },
    96627: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.createNodeServiceProviders = _0x56f0d8;
      const _0x18e4aa = require(32720);
      const _0x584af1 = require(27113);
      const _0x90207 = require(61569);
      const _0x45e330 = require(65409);
      const _0x355b5a = require(61231);
      const _0x46fbea = require(84590);
      const _0x53a043 = require(71069);
      const _0x53634f = require(94818);
      const _0x48164f = require(30048);
      const _0x5a138e = require(3777);
      const _0x2a18a0 = require(69482);
      const _0x69b98a = require(77981);
      const _0x18aa61 = require(1044);
      const _0x221844 = require(53062);
      const _0x280b67 = require(31756);
      const _0x662477 = require(77907);
      function _0x56f0d8(_0x308ae7, _0x2a2868, _0x59d4d2, _0x22b941, _0x320076, _0x24f9f2) {
        const _0x4866c4 = new _0x2a18a0.TelemetryService(_0x2a2868);
        const _0x4add29 = new _0x45e330.LogService(_0x320076);
        const _0x44bea5 = new _0x46fbea.Platform();
        const _0x52744b = new _0x18e4aa.CacheManager();
        const _0x411164 = new _0x221844.MRUQueues();
        const _0x4323e3 = new _0x355b5a.LSPService(_0x2a2868);
        const _0x215d26 = _0x584af1.Uri.file(_0x308ae7, _0x24f9f2, true);
        const _0x25a94a = _0x215d26.combinePaths('bundled', 'wasm', 'tree-sitter.wasm');
        const _0x5754ba = _0x215d26.combinePaths('bundled', 'wasm', 'tree-sitter-rst.wasm');
        const _0x231845 = new _0x53a043.PylanceDocStringService(_0x59d4d2, _0x25a94a, _0x5754ba, _0x320076);
        const _0x1a80ce = _0x48164f.createPylanceServiceProvider(_0x59d4d2, _0x22b941, _0x24f9f2, _0x320076, _0x4866c4, _0x4add29, _0x44bea5, new _0x18aa61.IndicesManager(), new _0x69b98a.IntelliCodeService(_0x4add29, _0x44bea5, _0x4866c4), _0x52744b, new _0x5a138e.LimitedSettingTransformer(), _0x411164, _0x4323e3, _0x231845, new _0x280b67.PackageDiscoverer());
        _0x1a80ce.add(_0x48164f.PylanceServiceKeys.backgroundAnalysisFactory, new _0x90207.BackgroundAnalysisFactory(_0x1a80ce));
        _0x1a80ce.add(_0x48164f.PylanceServiceKeys.hostFactory, new _0x53634f.PylanceFullAccessHostFactory(_0x1a80ce));
        _0x1a80ce.add(_0x48164f.PylanceServiceKeys.profilingService, new _0x662477.ProfilingService(_0x1a80ce, 'FG_'));
        return _0x1a80ce;
      }
    },
    31753: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PackageScanner = undefined;
      const _0xab3388 = require(75130);
      const _0x10de65 = require(92031);
      const _0x51a54d = require(12097);
      const _0x5f3cf8 = require(91426);
      const _0x30402a = require(58147);
      const _0x4d31f6 = require(34455);
      const _0xaab1e7 = __importStar(require(48281));
      const _0x487466 = require(27113);
      const _0x10ffc1 = require(5884);
      const _0x547c93 = require(30371);
      const _0x38fc81 = require(77001);
      const _0x21fec7 = require(7587);
      const _0x507f8e = {
        maxDepth: Number.MAX_VALUE,
        includeAllSymbols: false
      };
      class _0x573c20 {
        constructor(_0x399f3a, _0x1ad99b, _0x43539f, _0x25c797, _0x3c4005, _0x41e3e3, _0x25b547) {
          this._stdLibIndices = _0x43539f;
          this._includeThirdParty = _0x25c797;
          this._packageOptions = _0x41e3e3;
          this._indicesPerExecEnv = new _0x38fc81.UriMap();
          this._executionEnvironments = [];
          this._stdLibPaths = new Map();
          this._thirdPartyPaths = new Map();
          this._excludedStdLibModules = new Set(['__future__', 'this', 'antigravity']);
          this._defaultDepthLimit = _0x4d31f6.isNumber(_0x3c4005) ? {
            maxDepth: _0x3c4005,
            includeAllSymbols: false
          } : _0x3c4005;
          this._executionEnvironments = _0x399f3a.getExecutionEnvironments().filter(_0x59ce7f => !!_0x59ce7f.root);
          for (const _0x4d1ee7 of this._executionEnvironments) {
            this._stdLibPaths.set(_0x4d1ee7.root?.key ?? '', _0x1ad99b.getTypeshedStdLibPath(_0x4d1ee7));
            this._thirdPartyPaths.set(_0x4d1ee7.root?.key ?? '', _0x1ad99b.getTypeshedThirdPartyPath(_0x4d1ee7));
          }
          this._bundledStubPath = _0x547c93.getBundledTypeStubsPath(_0x1ad99b.fileSystem.getModulePath());
          this._fs = new _0x4fca22(_0x1ad99b, _0x25b547);
        }
        getFileCache() {
          return this._fs.getFileCache();
        }
        getModuleFilesPerExecEnv() {
          var _0x211a2d;
          const _0x336b7a = new _0x21fec7.ModuleFilesExecEnvMap();
          const _0x514a46 = new Map();
          for (const [_0x55b981, _0x58847d] of this._indicesPerExecEnv) {
            for (const [, _0x11ed92] of _0x58847d) {
              if (!_0x11ed92.isStdLib && _0x11ed92.isStub && !_0x11ed92.shadowed) {
                continue;
              }
              const _0x35d689 = (_0x211a2d = this._stdLibIndices) === null || _0x211a2d === undefined ? undefined : _0x211a2d.get(_0x55b981);
              if (_0x35d689 && _0x11ed92.isStdLib) {
                continue;
              }
              if (!this._includeThirdParty && !_0x11ed92.isStdLib) {
                _0xaab1e7.fail(_0x11ed92.uri + ' shouldn\'t be included with no third party flag on');
              }
              if (!_0x10ffc1.hasPythonExtension(_0x11ed92.uri)) {
                continue;
              }
              _0x514a46.set(_0x11ed92.uri.key, _0x11ed92);
            }
            _0x336b7a.set(_0x55b981, [..._0x514a46.values()]);
            _0x514a46.clear();
          }
          return _0x336b7a;
        }
        scan(_0x2c51f6) {
          var _0x122aa1;
          var _0x48ff01;
          for (const _0xf3f389 of this._executionEnvironments) {
            const _0x5cd905 = this._stdLibPaths.get(_0xf3f389.root?.key ?? '');
            const _0x7af3f6 = this._thirdPartyPaths.get(_0xf3f389.root?.key ?? '');
            const _0x88f8a6 = this._fs.getRoots(_0xf3f389);
            const _0x5e2f67 = (_0x122aa1 = this._stdLibIndices) === null || _0x122aa1 === undefined ? undefined : _0x122aa1.get(_0xf3f389.root ?? _0x487466.Uri.empty());
            if (_0x5e2f67) {
              this._populateStdLibInfo(_0xf3f389);
            }
            const _0x5acccb = new Set(this._fs.getTypeshedStdlibExcludeList(_0xf3f389).map(_0x226159 => _0x226159.key));
            for (const _0x21d77b of _0x88f8a6) {
              const _0x4783aa = _0x5cd905 ? _0x21d77b.startsWith(_0x5cd905) : false;
              if (_0x5e2f67 && _0x4783aa) {
                continue;
              }
              if (!this._includeThirdParty && !_0x4783aa) {
                continue;
              }
              const _0xe5bc43 = _0x7af3f6 ? _0x21d77b.startsWith(_0x7af3f6) : false;
              const _0x31457b = _0x21d77b.startsWith(this._bundledStubPath);
              for (const _0x3655cb of this._fs.readdirEntriesSync(_0x21d77b)) {
                _0x5f3cf8.throwIfCancellationRequested(_0x2c51f6);
                if (_0x4783aa && _0x5acccb.has(_0x3655cb.uri.key)) {
                  continue;
                }
                if (_0x3655cb.isFile) {
                  if (_0x3655cb.isInit) {
                    continue;
                  }
                  if (_0x3655cb.isStub) {
                    const _0x5a5eba = this._fs.getModuleNameForImport(_0x3655cb.uri, _0xf3f389);
                    if (_0x5a5eba) {
                      this._setMap({
                        execEnv: _0xf3f389,
                        isStdLib: _0x4783aa,
                        isTypeshedStub: _0xe5bc43,
                        isBundledStub: _0x31457b,
                        packageName: _0x5a5eba,
                        depthLimit: this._defaultDepthLimit
                      }, _0x5a5eba, false, _0x3655cb, 1);
                    }
                    continue;
                  }
                }
                if (!_0x3655cb.isFile && _0x3655cb.public) {
                  const _0x5ee93b = this._fs.getModuleNameForImport(_0x3655cb.uri, _0xf3f389);
                  const _0x1f9503 = (_0x48ff01 = this._packageOptions) === null || _0x48ff01 === undefined ? undefined : _0x48ff01.get(_0x5ee93b);
                  const _0x7635f8 = 1;
                  const _0x5cd157 = {
                    execEnv: _0xf3f389,
                    isStdLib: _0x4783aa,
                    isTypeshedStub: _0xe5bc43,
                    isBundledStub: _0x31457b,
                    packageName: _0x3655cb.containsInit ? _0x5ee93b : undefined,
                    depthLimit: _0x1f9503 ?? (_0x4783aa ? _0x507f8e : this._defaultDepthLimit)
                  };
                  const _0x272a77 = _0x3655cb.containsPyTyped ?? false;
                  if (this._include(_0x7635f8, _0x5cd157.depthLimit.maxDepth)) {
                    this._scan(_0x88f8a6, _0x5cd157, _0x272a77, _0x3655cb.uri, _0x7635f8, _0x2c51f6);
                  }
                }
              }
            }
          }
        }
        _scan(_0x15da1d, _0x59ca49, _0x742291, _0x3c2cd4, _0x3c6237, _0x3b1029) {
          if (_0x15da1d.some(_0x1aeb7a => _0x3c2cd4.equals(_0x1aeb7a))) {
            return;
          }
          const _0x5ea7b4 = _0x3c6237 + 1;
          for (const _0x39ae40 of this._fs.readdirEntriesSync(_0x3c2cd4)) {
            _0x5f3cf8.throwIfCancellationRequested(_0x3b1029);
            if (_0x39ae40.isFile) {
              if (_0x39ae40.isInit) {
                const _0x30809f = this._fs.getModuleNameForImport(_0x39ae40.uri, _0x59ca49.execEnv);
                if (_0x30809f) {
                  this._setMap(_0x59ca49, _0x30809f, _0x742291, _0x39ae40, _0x3c6237);
                }
                continue;
              }
              if (_0x39ae40.isStub || _0x39ae40.containsInit) {
                const _0xbc8573 = this._fs.getModuleNameForImport(_0x39ae40.uri, _0x59ca49.execEnv);
                if (_0xbc8573) {
                  const _0x47966c = _0x59ca49.packageName ? _0x59ca49 : {
                    ..._0x59ca49,
                    packageName: _0xbc8573
                  };
                  this._setMap(_0x47966c, _0xbc8573, _0x742291, _0x39ae40, _0x5ea7b4);
                }
                continue;
              }
            }
            if (!_0x39ae40.isFile && _0x39ae40.public && this._include(_0x5ea7b4, _0x59ca49.depthLimit.maxDepth)) {
              const _0x305d85 = !_0x39ae40.containsInit || _0x59ca49.packageName ? _0x59ca49 : {
                ..._0x59ca49,
                packageName: this._fs.getModuleNameForImport(_0x39ae40.uri, _0x59ca49.execEnv)
              };
              this._scan(_0x15da1d, _0x305d85, _0x742291, _0x39ae40.uri, _0x5ea7b4, _0x3b1029);
            }
          }
        }
        _populateStdLibInfo(_0x1a0837) {
          const _0xed53fe = this._stdLibIndices.get(_0x1a0837.root ?? _0x487466.Uri.empty());
          for (const _0x3a4577 of _0xed53fe.keys()) {
            const _0x4ea5c3 = _0x3a4577;
            const _0x57cea3 = this._fs.getModuleNameForImport(_0x4ea5c3, _0x1a0837);
            if (_0x57cea3) {
              this._setMap({
                execEnv: _0x1a0837,
                isStdLib: true,
                isTypeshedStub: false,
                isBundledStub: false,
                packageName: undefined,
                depthLimit: this._defaultDepthLimit
              }, _0x57cea3, false, {
                isStub: _0x4ea5c3.hasExtension('.pyi'),
                uri: _0x4ea5c3
              }, 1);
            }
          }
        }
        _setMap(_0x4d1cd8, _0x5634dc, _0x26e8ab, _0x1ed152, _0x3ccdd9) {
          if (_0x4d1cd8.isStdLib && this._excludedStdLibModules.has(_0x5634dc)) {
            return;
          }
          const _0x5bca1f = _0x30402a.getOrAdd(this._indicesPerExecEnv, _0x4d1cd8.execEnv.root ?? _0x487466.Uri.empty(), () => new Map());
          const _0x597909 = _0x5bca1f.get(_0x5634dc);
          if (!_0x597909) {
            if (this._include(_0x3ccdd9, _0x4d1cd8.depthLimit.maxDepth)) {
              _0x5bca1f.set(_0x5634dc, {
                isStdLib: _0x4d1cd8.isStdLib,
                isStub: _0x1ed152.isStub,
                isTypeshedStub: _0x4d1cd8.isTypeshedStub,
                isBundledStub: _0x4d1cd8.isBundledStub,
                packageName: _0x4d1cd8.packageName,
                uri: _0x1ed152.uri,
                shadowed: false,
                pyTypedPackage: _0x26e8ab,
                includeAllSymbols: _0x4d1cd8.depthLimit.includeAllSymbols
              });
            }
            return;
          }
          if (_0x597909.isStub) {
            _0x597909.shadowed = true;
            if (!_0x597909.pyTypedPackage && _0x26e8ab) {
              _0x597909.isStub = false;
              _0x597909.uri = _0x1ed152.uri;
              _0x597909.pyTypedPackage = _0x26e8ab;
            }
            return;
          }
          if (!_0x26e8ab && _0x597909.pyTypedPackage) {
            return;
          }
          _0x597909.uri = _0x1ed152.uri;
          _0x597909.isStub = true;
          _0x597909.shadowed = true;
          _0x597909.pyTypedPackage = _0x26e8ab;
        }
        _include(_0x1b10d8, _0x1891b4) {
          return _0x1b10d8 <= _0x1891b4;
        }
      }
      exports.PackageScanner = _0x573c20;
      class _0x4fca22 {
        constructor(_0x556c65, _0x27aa0e) {
          this._importResolver = _0x556c65;
          this._fileCache = _0x27aa0e ?? new Map();
        }
        getFileCache() {
          return this._fileCache;
        }
        readdirEntriesSync(_0x2c608d) {
          const _0xefe60 = this._fileCache.get(_0x2c608d.key);
          if (_0xefe60) {
            return _0xefe60;
          }
          const _0x36b419 = [];
          const _0x4d28c6 = this._containsInit(_0x2c608d);
          for (const _0x2c7a3d of this._fs.readdirEntriesSync(_0x2c608d)) {
            const _0x5a7d7a = _0x2c608d.combinePaths(_0x2c7a3d.name);
            let _0x207d28 = _0x2c7a3d.isFile();
            let _0x3efd29 = _0x2c7a3d.isDirectory();
            if (_0x2c7a3d.isSymbolicLink()) {
              const _0x2ed218 = _0x10ffc1.tryStat(this._fs, _0x5a7d7a);
              if (_0x2ed218) {
                _0x207d28 = _0x2ed218.isFile();
                _0x3efd29 = _0x2ed218.isDirectory();
              }
            }
            if (_0x207d28) {
              const _0x1300e6 = _0x5a7d7a.lastExtension;
              const _0x5e5030 = _0x1300e6 === '.pyi';
              const _0x15221d = !_0x5e5030 && _0xab3388.supportedFileExtensions.some(_0x3dd51e => _0x3dd51e === _0x1300e6);
              if (!_0x5e5030 && !_0x15221d) {
                continue;
              }
              const _0x3f5018 = _0x2c7a3d.name === '__init__.py' || _0x2c7a3d.name === '__init__.pyi';
              _0x36b419.push({
                name: _0x2c7a3d.name,
                directory: _0x2c608d,
                uri: _0x5a7d7a,
                isFile: true,
                isInit: _0x3f5018,
                containsInit: _0x4d28c6,
                isStub: _0x5e5030,
                public: true
              });
            } else {
              if (_0x3efd29) {
                const _0xf22f52 = this._containsInit(_0x5a7d7a);
                const _0x20c171 = _0xf22f52 && !!_0x10de65.getPyTypedInfo(this._fs, _0x5a7d7a);
                _0x36b419.push({
                  name: _0x2c7a3d.name,
                  uri: _0x5a7d7a,
                  isFile: false,
                  isInit: false,
                  containsInit: _0xf22f52,
                  isStub: false,
                  public: !_0x51a54d.isPrivateOrProtectedName(_0x5a7d7a.fileNameWithoutExtensions),
                  containsPyTyped: _0x20c171
                });
              }
            }
          }
          this._fileCache.set(_0x2c608d.key, _0x36b419);
          return _0x36b419;
        }
        getModuleNameForImport(_0x361cb6, _0x5f3569) {
          return this._importResolver.getModuleNameForImport(_0x361cb6, _0x5f3569).moduleName;
        }
        getRoots(_0x2416e4) {
          return this._importResolver.getImportRoots(_0x2416e4).filter(_0x277873 => _0x277873 !== _0x2416e4.root && this.existsSync(_0x277873));
        }
        getTypeshedStdlibExcludeList(_0x1c80a1) {
          return this._importResolver.getTypeshedStdlibExcludeList(this._importResolver.getConfigOptions().typeshedPath, _0x1c80a1.pythonVersion, _0x1c80a1.pythonPlatform);
        }
        existsSync(_0x35d82f) {
          if (this._fileCache.get(_0x35d82f.key)) {
            return true;
          }
          return this._fs.existsSync(_0x35d82f);
        }
        get _fs() {
          return this._importResolver.fileSystem;
        }
        _containsInit(_0x210d5a) {
          return this._fs.existsSync(_0x210d5a.initPyUri) || this._fs.existsSync(_0x210d5a.initPyiUri);
        }
      }
    },
    35355: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceBackgroundAnalysisProgram = undefined;
      const _0x58810f = require(82695);
      const _0xc82deb = require(71745);
      const _0x1377b0 = require(24122);
      const _0x31e747 = require(71069);
      const _0x59f335 = require(30048);
      const _0x477245 = require(69482);
      const _0x4be30c = require(21575);
      const _0x57f184 = require(96285);
      class _0x97dd1e extends _0x58810f.BackgroundAnalysisProgram {
        constructor(_0x2c0aea, _0x3a30e1, _0x1f5583, _0xf21e6b, _0x2af685, _0x559ec9, _0x2403c7) {
          super(_0x2c0aea, _0x3a30e1, _0x1f5583, _0xf21e6b, _0x2af685, _0x559ec9, _0x2403c7);
          this._globalIndices = _0x3a30e1.tryGet(_0x59f335.PylanceServiceKeys.globalIndices);
        }
        dispose() {
          var _0x40cce0;
          super.dispose();
          if ((_0x40cce0 = this._globalIndices) === null || _0x40cce0 === undefined) {
            undefined;
          } else {
            _0x40cce0.reset(this.serviceId);
          }
        }
        libraryUpdated() {
          var _0x2ac8aa;
          if ((_0x2ac8aa = _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis)) === null || _0x2ac8aa === undefined) {
            return undefined;
          } else {
            return _0x2ac8aa.cancelIndexing();
          }
        }
        invalidateAndForceReanalysis(_0x1458e4) {
          var _0x1126c7;
          if (_0x1458e4 !== _0x58810f.InvalidatedReason.SourceWatcherChanged) {
            if ((_0x1126c7 = _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis)) === null || _0x1126c7 === undefined) {
              undefined;
            } else {
              _0x1126c7.refreshIndexing(this.configOptions, this.importResolver, this.host.kind, {
                changesOnly: _0x1458e4 === _0x58810f.InvalidatedReason.LibraryWatcherContentOnlyChanged
              });
            }
          }
          if (_0x1458e4 === _0x58810f.InvalidatedReason.LibraryWatcherChanged) {
            const _0x1f20c4 = this.program.serviceProvider.tryGet(_0x59f335.PylanceServiceKeys.packageDiscoverer);
            if (_0x1f20c4 === null || _0x1f20c4 === undefined) {
              undefined;
            } else {
              _0x1f20c4.reset(this.program, 'libraryUpdated');
            }
          }
          super.invalidateAndForceReanalysis(_0x1458e4);
        }
        refreshWorkspaceSymbols(_0xb448ce) {
          var _0x3d0430;
          if ((_0x3d0430 = _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis)) === null || _0x3d0430 === undefined) {
            undefined;
          } else {
            _0x3d0430.refreshWorkspaceSymbols(_0xb448ce);
          }
        }
        async getSemanticTokens(_0xfe3f90, _0xf2dab5, _0x48d630, _0x27ba4d, _0x1ecb3b) {
          if (this.backgroundAnalysis) {
            return _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('getSemanticTokens', {
              fileUri: _0xfe3f90,
              range: _0xf2dab5,
              includeSyntaxToken: _0x48d630,
              previousResultId: _0x27ba4d,
              cancellationToken: _0x1ecb3b
            });
          }
          return _0x57f184.getSemanticTokens(this.program, _0xfe3f90, _0xf2dab5, _0x48d630, _0x27ba4d, _0x1ecb3b);
        }
        async onInlayHints(_0x33c756, _0x3e42ae, _0x2340ef, _0x3d72bb) {
          if (this.backgroundAnalysis) {
            return _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('getInlayHints', {
              fileUri: _0x33c756,
              range: _0x3e42ae,
              options: _0x2340ef,
              cancellationToken: _0x3d72bb
            });
          }
          return _0x4be30c.getInlayHints(this.program, _0x33c756, _0x3e42ae, _0x2340ef, _0x3d72bb);
        }
        onResolveInlayHint(_0x475176, _0x15260d, _0xd6a622) {
          return _0x477245.trackPerf(this.program.serviceProvider.tryGet(_0x59f335.PylanceServiceKeys.telemetry), _0x477245.TelemetryEventName.RESOLVE_INLAYHINTS_SLOW, () => {
            return _0x4be30c.resolveInlayHints(this.program, _0x475176, _0x15260d, _0xd6a622);
          }, 2000);
        }
        startIndexing(_0x5ab3f7) {
          var _0x213ded;
          if ((_0x213ded = _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis)) === null || _0x213ded === undefined) {
            undefined;
          } else {
            _0x213ded.startIndexing(_0x5ab3f7, this.configOptions, this.importResolver, this.host.kind);
          }
        }
        getIndices() {
          var _0x55ffdc;
          if ((_0x55ffdc = this._globalIndices) === null || _0x55ffdc === undefined) {
            return undefined;
          } else {
            return _0x55ffdc.getIndices(this.program);
          }
        }
        setExperimentOptions(_0x35e9b9) {
          if (this.backgroundAnalysis) {
            _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('setExperimentOptions', _0x35e9b9);
          }
          const _0x469ecc = this.program.serviceProvider.tryGet(_0xc82deb.ServiceKeys.docStringService);
          if (_0x469ecc instanceof _0x31e747.PylanceDocStringService) {
            const _0x3657a4 = !!_0x35e9b9.supportRestructuredText;
            if (_0x3657a4 !== _0x469ecc.isRestParsingEnabled) {
              _0x469ecc.enableRestParsing(_0x3657a4);
              _0x469ecc.ready.then(() => {
                this.program.markAllFilesDirty(true);
              });
            }
          }
        }
        async startProfiling(_0x2688a3) {
          if (!this.backgroundAnalysis) {
            return undefined;
          }
          return await _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('startProfiling', _0x2688a3);
        }
        async stopProfiling() {
          if (!this.backgroundAnalysis) {
            return undefined;
          }
          return await _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('stopProfiling', undefined);
        }
        setNotebookData(_0x1ebc03) {
          if (this.backgroundAnalysis) {
            _0x1377b0.getBackgroundAnalysis(this.backgroundAnalysis).analysisRequest('setNotebookData', _0x1ebc03);
          }
          const _0x3dd8f6 = this.program.serviceProvider.tryGet(_0xc82deb.ServiceKeys.debugInfoInspector);
          if (_0x3dd8f6) {
            _0x3dd8f6.setNotebookData(_0x1ebc03);
          }
        }
        test_setIndexing(_0x42cf27, _0x39d9e5) {
          var _0x224e0a;
          const _0x11926f = this.getIndices();
          if (!_0x11926f) {
            return;
          }
          for (const [_0x28fbd5, _0x51eaa1] of _0x42cf27) {
            _0x11926f.setWorkspaceIndex(_0x28fbd5, _0x51eaa1);
          }
          for (const [_0x32a987, _0x1ee7ab] of _0x39d9e5) {
            const _0x1ddb85 = this.configOptions.getExecutionEnvironments().find(_0x4d90bd => {
              var _0x1491c4;
              if ((_0x1491c4 = _0x4d90bd.root) === null || _0x1491c4 === undefined) {
                return undefined;
              } else {
                return _0x1491c4.equals(_0x32a987);
              }
            });
            if (!_0x1ddb85) {
              continue;
            }
            for (const [_0x54120c, _0x3df29f] of _0x1ee7ab) {
              if ((_0x224e0a = this._globalIndices) === null || _0x224e0a === undefined) {
                undefined;
              } else {
                _0x224e0a.setIndex(this.serviceId, _0x1ddb85, _0x54120c, _0x3df29f);
              }
            }
          }
        }
      }
      exports.PylanceBackgroundAnalysisProgram = _0x97dd1e;
    },
    89750: function (module, exports, require) {
      'use strict';

      var __importDefault = this && this.__importDefault || function (mod) {
        return mod && mod.__esModule ? mod : {
          "default": mod
        };
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceImportResolver = undefined;
      exports.createPylanceImportResolver = _0x58e983;
      const _0x5d76ee = __importDefault(require(90930));
      const _0x1dd2ab = require(75130);
      const _0x3193c8 = require(58147);
      const _0x3f6751 = require(48281);
      const _0x59fcf1 = require(71745);
      const _0xf9b8ef = require(27113);
      const _0x208598 = require(5884);
      const _0x3a1e56 = require(25747);
      const _0x3569e2 = require(99504);
      const _0x29d795 = require(30371);
      const _0x3ce813 = require(69482);
      class _0x52b71a extends _0x1dd2ab.ImportResolver {
        constructor(_0x1d531a, _0x4a5b5b, _0x58aa6c, _0x4854d8) {
          super(_0x1d531a, _0x4a5b5b, _0x58aa6c);
          this._scrapedTmpFiles = new Map();
          this._cachedExistenceForPath = new Map();
          if (_0x4854d8) {
            this._importMetrics = new _0x58122a(this.cachedParentImportResults, _0x1d531a.fs(), _0x4854d8);
          }
        }
        resolveImport(_0x3d1693, _0x3cec0d, _0x5cd37e) {
          var _0x55c3da;
          const _0x44fcb1 = super.resolveImport(_0x3d1693, _0x3cec0d, _0x5cd37e);
          if ((_0x55c3da = this._importMetrics) === null || _0x55c3da === undefined) {
            undefined;
          } else {
            _0x55c3da.addResultToImportMetrics(_0x3d1693, _0x3cec0d, _0x5cd37e, _0x44fcb1);
          }
          return _0x44fcb1;
        }
        invalidateCache() {
          var _0x5ef9bd;
          if ((_0x5ef9bd = this._importMetrics) === null || _0x5ef9bd === undefined) {
            undefined;
          } else {
            _0x5ef9bd.reset();
          }
          for (const _0x4b8025 of this._scrapedTmpFiles.values()) {
            if (_0x4b8025) {
              try {
                this.fileSystem.unlinkSync(_0x4b8025);
              } catch (_0x1a7ac7) {}
            }
          }
          this._scrapedTmpFiles.clear();
          this._cachedExistenceForPath.clear();
          super.invalidateCache();
        }
        sendTelemetry() {
          var _0x5f10cc;
          if ((_0x5f10cc = this._importMetrics) === null || _0x5f10cc === undefined) {
            undefined;
          } else {
            _0x5f10cc.report();
          }
        }
        getSourceFilesFromStub(_0x1df79a, _0x1b6baa, _0x308b41) {
          if (_0x308b41) {
            const _0x24c2a2 = _0x29d795.getBundledNativeStubsPath(this.fileSystem.getModulePath());
            if (_0x1df79a.startsWith(_0x24c2a2)) {
              return [_0x1df79a];
            }
          }
          const _0x4462f7 = super.getSourceFilesFromStub(_0x1df79a, _0x1b6baa, _0x308b41);
          if (_0x308b41) {
            if (_0x4462f7.length > 0) {
              if (!_0x1df79a.matchesRegex(/stdlib[\\/](decimal|ntpath|posixpath)\.pyi/)) {
                return _0x4462f7;
              }
            }
            if (this._isScrapable(_0x1df79a, _0x1b6baa)) {
              const _0xbc32c6 = this._scrapedPath(_0x1df79a, _0x1b6baa);
              if (_0xbc32c6) {
                _0x4462f7.push(_0xbc32c6);
                return _0x4462f7;
              }
            }
          }
          return _0x4462f7;
        }
        getTypeshedPathEx(_0x260291, _0x4d4bbf) {
          return _0x29d795.getBundledTypeStubsPath(this.fileSystem.getModulePath());
        }
        resolveImportEx(_0x4c9160, _0x98808b, _0x5a3cbf, _0x460308, _0x16a493 = [], _0x384eb9 = true) {
          if (_0x384eb9) {
            const _0xd9ed80 = _0x29d795.getBundledTypeStubsPath(this.fileSystem.getModulePath());
            if (_0xd9ed80) {
              _0x16a493.push(`Looking in bundled stubs path '${_0xd9ed80}'`);
              const _0x6675d = this.resolveAbsoluteImport(_0x4c9160, _0xd9ed80, _0x98808b, _0x5a3cbf, _0x460308, _0x16a493, undefined, undefined, true, _0x384eb9);
              if (_0x6675d && _0x6675d.isImportFound) {
                _0x6675d.importType = 1;
                return _0x6675d;
              }
            }
          }
          return undefined;
        }
        resolveNativeImportEx(_0xe8f10d, _0x552819, _0x1a99e0 = []) {
          var _0x35997f;
          const _0x4c751a = _0x4c81ec(_0xe8f10d);
          if (!_0x4c751a || _0x4c751a.length === 0) {
            return undefined;
          }
          if ((_0x35997f = this._importMetrics) === null || _0x35997f === undefined) {
            undefined;
          } else {
            _0x35997f.addNativeModule(_0x552819);
          }
          const _0x96e324 = _0x29d795.getBundledNativeStubsPath(this.fileSystem.getModulePath());
          const _0x1081d4 = this._findNativeStub(_0x4c751a, _0x96e324);
          if (_0x1081d4) {
            return _0x1081d4;
          }
          const _0x4e700f = `Unable to find stub for native module ${_0x552819}, file ${_0xe8f10d} in ${_0x96e324}`;
          _0x1a99e0.push(_0x4e700f);
          return undefined;
        }
        dirExistsCached(_0x29417a) {
          var _0x3b2b71;
          if (_0x3a1e56.WebUri.isWebUri(_0x29417a)) {
            if (!this._cachedExistenceForPath.has(_0x29417a.key)) {
              let _0x147f69 = false;
              let _0x4ffdf0 = _0x208598.tryStat(this.fileSystem, _0x29417a);
              if (_0x4ffdf0 === null || _0x4ffdf0 === undefined ? undefined : _0x4ffdf0.isSymbolicLink()) {
                const _0x105d14 = _0x208598.tryRealpath(this.fileSystem, _0x29417a);
                if (_0x105d14) {
                  _0x4ffdf0 = _0x208598.tryStat(this.fileSystem, _0x105d14);
                }
              }
              _0x147f69 = (_0x4ffdf0 === null || _0x4ffdf0 === undefined ? undefined : _0x4ffdf0.isDirectory()) ?? false;
              this._cachedExistenceForPath.set(_0x29417a.key, _0x147f69);
            }
            if ((_0x3b2b71 = this._cachedExistenceForPath.get(_0x29417a.key)) !== null && _0x3b2b71 !== undefined) {
              return _0x3b2b71;
            } else {
              return false;
            }
          }
          return super.dirExistsCached(_0x29417a);
        }
        _isScrapable(_0x19a1b1, _0x55bbe9) {
          if (!this.getConfigOptions().pythonPath) {
            return false;
          }
          const _0x29275a = this.getTypeshedStdLibPath(_0x55bbe9);
          if (!_0x29275a || !_0x19a1b1.isChild(_0x29275a)) {
            return false;
          }
          return true;
        }
        _scrapedPath(_0x1f6539, _0x455c6b) {
          return _0x3193c8.getOrAdd(this._scrapedTmpFiles, _0x1f6539.key, () => this._scrapeModuleToTmpFile(_0x1f6539, _0x455c6b)) || undefined;
        }
        _scrapeModuleToTmpFile(_0x15f66f, _0x3530c5) {
          var _0x267d1e;
          const {
            moduleName: _0x7b4326
          } = this.getModuleNameForImport(_0x15f66f, _0x3530c5);
          try {
            if (this.host.kind !== 0) {
              return false;
            }
            const _0x216e39 = this.host.scrapeModuleFromPython(_0x7b4326, this.getConfigOptions().pythonPath);
            if (!_0x216e39) {
              return false;
            }
            const _0x251786 = (_0x267d1e = this.serviceProvider.tryGet(_0x59fcf1.ServiceKeys.tempFile)) === null || _0x267d1e === undefined ? undefined : _0x267d1e.tmpfile({
              prefix: _0x7b4326,
              postfix: '.py'
            });
            if (_0x251786 === undefined) {
              return false;
            }
            this.fileSystem.writeFileSync(_0x251786, _0x216e39, 'utf8');
            return _0x251786;
          } catch {
            return false;
          }
        }
        _findNativeStub(_0xe363d4, _0x5c624c) {
          const _0x42079e = _0x5c624c.combinePaths(..._0xe363d4);
          const _0x12a76a = this.getNativeModuleName(_0x42079e);
          if (!_0x12a76a) {
            return;
          }
          const _0x455557 = _0xe363d4.slice(0, -1);
          const _0x1fd3cb = _0x5c624c.combinePaths(..._0x455557, _0x12a76a + '.pyi');
          if (this.fileSystem.existsSync(_0x1fd3cb)) {
            return _0x1fd3cb;
          } else {
            return undefined;
          }
        }
      }
      exports.PylanceImportResolver = _0x52b71a;
      function _0x58e983(_0x4a45bd, _0x2b3748, _0xb6ba7e, _0x3f1091) {
        return new _0x52b71a(_0x4a45bd, _0x2b3748, _0xb6ba7e, _0x3f1091);
      }
      function _0x4ad928(_0x2e03ba, _0x59957e, _0x2ca4f7 = false) {
        if (_0x2e03ba.length > _0x59957e.length) {
          [_0x2e03ba, _0x59957e] = [_0x59957e, _0x2e03ba];
        }
        if (_0x59957e.startsWith(_0x2e03ba) && (!_0x2ca4f7 || !_0x59957e.startsWith(_0x2e03ba + '.'))) {
          return 1;
        }
        return _0x5d76ee.default(_0x59957e, _0x2e03ba);
      }
      function _0x4c81ec(_0x25c903) {
        const _0x228f51 = _0x25c903.getPathComponents();
        const _0x48f1ac = _0x228f51.findIndex(_0x360019 => _0x360019 === _0x574dbb || _0x360019 === _0x221a24);
        if (_0x48f1ac < 0) {
          return [];
        }
        return _0x228f51.slice(_0x48f1ac + 1);
      }
      const _0x574dbb = 'site-packages';
      const _0x221a24 = 'dist-packages';
      const _0x34aa41 = 100;
      class _0x58122a {
        constructor(_0x50af4f, _0x28b570, _0x2e240c) {
          this._cachedParentImportResults = _0x50af4f;
          this._fileSystem = _0x28b570;
          this._telemetry = _0x2e240c;
          this._currentNativeModules = new Set();
          this._reportedNativeModules = new Set();
          this._currentUnresolvedModules = new Set();
          this._reportedUnresolvedModules = new Set();
          this._countedAbsolute = new Map();
          this._countedRelative = new Map();
          this._changed = false;
          this._metrics = _0x58122a._getMetricsInitialValue();
        }
        reset() {
          this._metrics = _0x58122a._getMetricsInitialValue();
        }
        addNativeModule(_0x542fea) {
          this._addModule(this._reportedNativeModules, this._currentNativeModules, _0x542fea);
        }
        addUnresolvedModule(_0x1a4bff) {
          if (!_0x3569e2.IS_RELEASE) {
            this._addModule(this._reportedUnresolvedModules, this._currentUnresolvedModules, _0x1a4bff);
          }
        }
        addResultToImportMetrics(_0x8c2573, _0x2a5953, _0x2ff342, _0x695255) {
          const _0x475a0d = _0x1dd2ab.formatImportName(_0x2ff342);
          const _0x2493ac = _0x2ff342.leadingDots > 0;
          const _0x6062d3 = _0x695255.resolvedUris.length > 0 ? _0x695255.resolvedUris[_0x695255.resolvedUris.length - 1] : _0xf9b8ef.Uri.empty();
          const _0x1a5ba0 = _0x3193c8.getOrAdd(_0x2493ac ? this._countedRelative : this._countedAbsolute, _0x6062d3.key, () => new Set());
          const _0x5456b3 = _0x1a5ba0.has(_0x475a0d);
          if (_0x5456b3) {
            return;
          }
          _0x1a5ba0.add(_0x475a0d);
          this._setChanged();
          this._metrics.total += 1;
          this._metrics.stubs += _0x695255.isStubFile ? 1 : 0;
          if (_0x2493ac) {
            this._metrics.relativeTotal += 1;
            this._metrics.relativeStubs += _0x695255.isStubFile ? 1 : 0;
          } else {
            this._metrics.absoluteTotal += 1;
            this._metrics.absoluteStubs += _0x695255.isStubFile ? 1 : 0;
          }
          if (!_0x695255.isImportFound) {
            let _0x2853b9 = true;
            if (this._lastUnresolvedImportName) {
              const _0x2c2b69 = _0x4ad928(this._lastUnresolvedImportName, _0x475a0d, true);
              if (_0x2c2b69 < 2) {
                _0x2853b9 = false;
              }
            }
            let _0x380cbe = _0x2853b9 && !_0x2493ac;
            if (_0x380cbe) {
              const _0x5e093c = _0x1dd2ab.getParentImportResolutionRoot(_0x8c2573, _0x2a5953.root);
              _0x380cbe = this._cachedParentImportResults.checkValidPath(this._fileSystem, _0x8c2573, _0x5e093c);
            }
            if (_0x380cbe && this._telemetry) {
              this.addUnresolvedModule(_0x475a0d);
            }
            this._lastUnresolvedImportName = _0x475a0d;
            this._metrics.absoluteUserUnresolved += _0x380cbe ? 1 : 0;
            this._metrics.unresolvedTotal += _0x2853b9 ? 1 : 0;
            if (_0x2493ac) {
              this._metrics.relativeUnresolved += _0x2853b9 ? 1 : 0;
            } else {
              this._metrics.absoluteUnresolved += _0x2853b9 ? 1 : 0;
            }
            return;
          }
          if (_0x2493ac) {
            return;
          }
          switch (_0x695255.importType) {
            case 1:
              {
                this._metrics.thirdPartyImportTotal += 1;
                this._metrics.thirdPartyImportStubs += _0x695255.isStubFile ? 1 : 0;
                break;
              }
            case 2:
              {
                this._metrics.localImportTotal += 1;
                this._metrics.localImportStubs += _0x695255.isStubFile ? 1 : 0;
                break;
              }
            case 0:
              {
                this._metrics.builtinImportTotal += 1;
                this._metrics.builtinImportStubs += _0x695255.isStubFile ? 1 : 0;
                break;
              }
            default:
              _0x3f6751.assertNever(_0x695255.importType);
          }
        }
        report() {
          if (!this._changed) {
            return;
          }
          this._changed = false;
          const _0x1e1cd1 = new _0x3ce813.TelemetryEvent(_0x3ce813.TelemetryEventName.IMPORT_METRICS);
          _0x3ce813.addMapToEvent(_0x1e1cd1, this._metrics);
          _0x4cd4c5('Native', this._getAndResetModuleNames(this._reportedNativeModules, this._currentNativeModules));
          _0x4cd4c5('Unresolved', this._getAndResetModuleNames(this._reportedUnresolvedModules, this._currentUnresolvedModules));
          this._telemetry.sendTelemetry(_0x1e1cd1);
          function _0x4cd4c5(_0x115243, _0x279802) {
            if (_0x279802.length > 0) {
              _0x3ce813.hashModuleNamesAndAddToEvent(_0x1e1cd1, _0x115243, _0x279802, _0x115243 === 'Unresolved');
            }
          }
        }
        static _getMetricsInitialValue() {
          return {
            total: 0,
            stubs: 0,
            unresolvedTotal: 0,
            absoluteTotal: 0,
            absoluteStubs: 0,
            absoluteUnresolved: 0,
            absoluteUserUnresolved: 0,
            thirdPartyImportTotal: 0,
            thirdPartyImportStubs: 0,
            localImportTotal: 0,
            localImportStubs: 0,
            builtinImportTotal: 0,
            builtinImportStubs: 0,
            relativeTotal: 0,
            relativeStubs: 0,
            relativeUnresolved: 0
          };
        }
        _setChanged() {
          this._changed = true;
        }
        _addModule(_0x4667b1, _0x3621e1, _0x598d4e) {
          if (_0x4667b1.size > _0x34aa41 || _0x3621e1.size > _0x34aa41) {
            return;
          }
          if (!_0x4667b1.has(_0x598d4e)) {
            this._setChanged();
            _0x3621e1.add(_0x598d4e);
          }
        }
        _getAndResetModuleNames(_0x190710, _0xfc30f2) {
          _0xfc30f2.forEach(_0x43783e => _0x190710.add(_0x43783e));
          const _0x40a4a3 = [..._0xfc30f2];
          _0xfc30f2.clear();
          return _0x40a4a3;
        }
      }
    },
    72412: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.BackgroundRemoteFileSystem = exports.ForegroundFileRequestHandler = undefined;
      const _0x27a7bd = require(18851);
      const _0x3e6033 = require(39023);
      const _0x51d8fa = require(28167);
      const _0x2069d1 = require(5884);
      const _0x28f16d = require(35040);
      const _0x3c5161 = require(22205);
      class _0x294635 {
        constructor(_0x4f85ee, _0x18cb44) {
          this._disposed = false;
          this._encoder = new _0x3e6033.TextEncoder();
          const _0x165572 = new _0x3c5161.FilteringWorker(_0x4f85ee, _0xd4ea3c => !!_0xd4ea3c.byteLength);
          this._connection = new _0x27a7bd.ServiceConnection(_0x165572);
          this._connection.onRequest('file/readSync', async _0xf00202 => {
            if (!this._disposed) {
              const _0x47588e = _0x18cb44.readFileSync(_0x2069d1.UriEx.parse(_0xf00202.uri), 'utf-8');
              const _0x14fbb6 = this._encoder.encode(_0x47588e);
              return {
                errno: 0,
                data: _0x14fbb6
              };
            }
            return {
              errno: -1
            };
          });
          this._connection.onRequest('file/readDirectorySync', async _0x7a5312 => {
            if (!this._disposed) {
              const _0x2f78b4 = _0x18cb44.readdirEntriesSync(_0x2069d1.UriEx.parse(_0x7a5312.uri));
              const _0x2a879a = _0x2f78b4.map(_0x3ca2ec => [_0x3ca2ec.name, _0x3ca2ec.isFile() ? 1 : 2]);
              return {
                errno: 0,
                data: _0x2a879a
              };
            }
            return {
              errno: -1
            };
          });
          this._connection.onRequest('file/statSync', async _0x26cf03 => {
            if (!this._disposed) {
              try {
                const _0x4164b9 = _0x18cb44.statSync(_0x2069d1.UriEx.parse(_0x26cf03.uri));
                const _0x1e0869 = {
                  size: _0x4164b9.size,
                  mtime: _0x4164b9.mtimeMs,
                  type: _0x4164b9.isFile() ? 'file' : _0x4164b9.isDirectory() ? 'directory' : 'unknown'
                };
                return {
                  errno: 0,
                  data: _0x1e0869
                };
              } catch {
                const _0x48c6df = {
                  size: 0,
                  mtime: 0,
                  type: 'unknown'
                };
                return {
                  errno: 0,
                  data: _0x48c6df
                };
              }
            }
            return {
              errno: -1
            };
          });
        }
        dispose() {
          this._disposed = true;
        }
      }
      exports.ForegroundFileRequestHandler = _0x294635;
      class _0x4f1a50 {
        get connection() {
          throw new Error('Method not implemented.');
        }
        applyEdit(_0x32c9d0) {
          throw new Error('Method not implemented.');
        }
        initialize(_0x2233bd) {
          throw new Error('Method not implemented.');
        }
        fillServerCapabilities(_0x2892b) {
          throw new Error('Method not implemented.');
        }
      }
      class _0xf65d37 {
        constructor() {
          const _0x1d60d1 = new _0x27a7bd.ClientConnection(_0x51d8fa.parentPort);
          const _0x2e898d = _0x28f16d.SyncFileSystemFeature(_0x4f1a50);
          this._syncRequest = new _0x2e898d();
          this._syncRequest.attachClient(_0x1d60d1);
        }
        readSync(_0x410b1f) {
          return this._syncRequest.fileSystem.readSync(_0x410b1f);
        }
        readDirectorySync(_0x2a7543) {
          return this._syncRequest.fileSystem.readDirectorySync(_0x2a7543);
        }
        statSync(_0x455c22) {
          return this._syncRequest.fileSystem.statSync(_0x455c22);
        }
      }
      exports.BackgroundRemoteFileSystem = _0xf65d37;
    },
    21368: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.WorkspacePythonPathKind = undefined;
      var _0x3900d4;
      (function (_0x5cef4a) {
        _0x5cef4a.Immutable = 'immutable';
        _0x5cef4a.Mutable = 'mutable';
      })(_0x3900d4 || (exports.WorkspacePythonPathKind = _0x3900d4 = {}));
    },
    56910: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AddAllFixtureTypeAnnotationsCommand = undefined;
      const _0x35c2c3 = require(41557);
      const _0x530a0f = require(91426);
      const _0x4e98ea = require(34455);
      const _0x2d806c = require(56814);
      const _0x303a25 = require(27113);
      const _0xab7cb2 = require(27130);
      const _0x382c5d = require(19013);
      const _0x279b07 = require(30048);
      const _0x218873 = require(34365);
      const _0xcbf91f = require(25430);
      class _0x200fc6 {
        execute(_0x4f8bb1, _0xaac508, _0x3343d9) {
          _0x530a0f.throwIfCancellationRequested(_0x3343d9);
          const _0x37d855 = _0x4f8bb1;
          const _0x596bd4 = _0x37d855.service.serviceProvider.tryGet(_0x279b07.PylanceServiceKeys.fixtureFinder);
          if (!_0x596bd4) {
            return;
          }
          if (_0xaac508.command !== _0xab7cb2.Commands.addAllFixtureTypeAnnotations || _0xaac508.arguments?.length !== 1) {
            return;
          }
          const _0x139f2d = _0xaac508.arguments;
          return _0x4f8bb1.service.run(_0x480b24 => {
            const _0x558718 = _0x303a25.Uri.parse(_0x139f2d[0], _0x480b24.serviceProvider);
            const _0x418909 = _0x480b24.getParseResults(_0x558718);
            if (!_0x418909) {
              return undefined;
            }
            const _0x20b2d9 = _0x382c5d.getNodesInRange(_0x418909, 41, _0x3343d9);
            const _0x25563d = _0x20b2d9.filter(_0x399010 => !_0x399010.d.annotation && !_0x399010.d.annotationComment && _0x218873.possibleFixtureLocation(_0x596bd4, _0x480b24.evaluator, _0x399010) && _0x218873.findFixtureFunction(_0x480b24, _0x399010, _0x3343d9)).map(_0x2a5a39 => _0x2d806c.convertTextRangeToRange(_0x2a5a39, _0x418909.tokenizerOutput.lines));
            const _0x59b5f4 = _0x25563d.map(_0x47fd3e => _0x35c2c3.findNodeByPosition(_0x418909.parserOutput.parseTree, _0x47fd3e.start, _0x418909.tokenizerOutput.lines)).filter(_0x4e98ea.isDefined);
            if (_0x59b5f4.length === 0) {
              return undefined;
            }
            return _0xcbf91f.createParameterTypeAnnotationEdits(_0x480b24, _0x59b5f4, _0x558718, _0x37d855.importFormat, _0x3343d9);
          }, _0x3343d9);
        }
        getFile(_0x4ba030) {
          if (_0x4ba030.command !== _0xab7cb2.Commands.addAllFixtureTypeAnnotations || _0x4ba030.arguments?.length !== 1) {
            return;
          }
          return _0x4ba030.arguments[0];
        }
      }
      exports.AddAllFixtureTypeAnnotationsCommand = _0x200fc6;
    },
    89644: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AddFixtureTypeAnnotationCommand = undefined;
      const _0x3f507a = require(41557);
      const _0x5932f1 = require(91426);
      const _0xf577c6 = require(27113);
      const _0x3657a7 = require(27130);
      const _0x1ce8cf = require(30048);
      const _0x535596 = require(25430);
      class _0x259c73 {
        execute(_0x29f059, _0x49a1ee, _0x5eb279) {
          _0x5932f1.throwIfCancellationRequested(_0x5eb279);
          const _0x31f408 = _0x29f059;
          const _0x23e47c = _0x31f408.service.serviceProvider.tryGet(_0x1ce8cf.PylanceServiceKeys.fixtureFinder);
          if (!_0x23e47c) {
            return;
          }
          if (_0x49a1ee.command !== _0x3657a7.Commands.addFixtureTypeAnnotation || _0x49a1ee.arguments?.length !== 2) {
            return;
          }
          const _0x21a92f = _0x49a1ee.arguments;
          return _0x29f059.service.run(_0x3d544a => {
            const _0x56596e = _0xf577c6.Uri.parse(_0x21a92f[0], _0x3d544a.serviceProvider);
            const _0x451d8a = _0x21a92f[1];
            const _0x2a8bf4 = _0x3d544a.getParseResults(_0x56596e);
            if (!_0x2a8bf4) {
              return undefined;
            }
            const _0x1598e2 = _0x2a8bf4 ? _0x3f507a.findNodeByPosition(_0x2a8bf4.parserOutput.parseTree, _0x451d8a.start, _0x2a8bf4.tokenizerOutput.lines) : undefined;
            if (!_0x1598e2) {
              return undefined;
            }
            return _0x535596.createParameterTypeAnnotationEdits(_0x3d544a, [_0x1598e2], _0x56596e, _0x31f408.importFormat, _0x5eb279);
          }, _0x5eb279);
        }
        getFile(_0x467309) {
          if (_0x467309.command !== _0x3657a7.Commands.addFixtureTypeAnnotation || _0x467309.arguments?.length !== 2) {
            return;
          }
          return _0x467309.arguments[0];
        }
      }
      exports.AddFixtureTypeAnnotationCommand = _0x259c73;
    },
    25430: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.createParameterTypeAnnotationEdits = _0x80af54;
      exports.createTypeAnnotationEdits = _0x207ecd;
      const _0x535486 = require(56911);
      const _0x2ada36 = require(41557);
      const _0x43b7b0 = require(34455);
      const _0x4b5f3e = require(56814);
      const _0x1ed807 = require(88754);
      const _0xeb1d45 = require(74382);
      const _0x5ed888 = require(30048);
      const _0xaef3ea = require(19995);
      const _0x42211a = require(13234);
      const _0x11f843 = require(34365);
      function _0x80af54(_0x5b18a7, _0x4f8715, _0x4d50b2, _0x37518c, _0x5b2dcd) {
        if (_0x4f8715.length === 0) {
          return _0xeb1d45.convertToWorkspaceEdit(_0x5b18a7.fileSystem, []);
        }
        const _0x3d6375 = _0x4f8715[0].start;
        const _0x20e172 = _0x5b18a7.getParseResults(_0x4d50b2);
        const _0x28fecc = _0x5b18a7.evaluator;
        const _0x2fc15b = _0x5b18a7.serviceProvider.get(_0x5ed888.PylanceServiceKeys.fixtureFinder);
        const _0x3bbd5f = new _0xaef3ea.ImportAdder(_0x5b18a7, {
          useTypeAlias: true
        });
        const _0x5b5a80 = _0x4f8715.map(_0x1fe41a => {
          const _0x415320 = _0x2ada36.getEnclosingParam(_0x1fe41a);
          if (!_0x415320 || !_0x415320.d.name || _0x415320.d.annotation || _0x415320.d.annotationComment) {
            return undefined;
          }
          const _0x577329 = _0x11f843.tryGetParameterNodeType(_0x2fc15b, _0x28fecc, _0x415320, _0x5b2dcd);
          if (!_0x577329) {
            return undefined;
          }
          return {
            type: _0x577329,
            node: _0x415320.d.name
          };
        }).filter(_0x43b7b0.isDefined);
        _0x3bbd5f.appendImportInfoForTypes(_0x4d50b2, _0x5b5a80, _0x5b2dcd);
        _0x3bbd5f.updateImportInfoForTypeWithAutoImport(_0x4d50b2, _0x20e172, _0x3d6375, _0x5b5a80.map(_0x4bb8cb => _0x4bb8cb.type), _0x5b2dcd);
        const _0xea6fd9 = new _0x42211a.TypeStringGenerator(_0x5b18a7, _0x4d50b2, _0x5b2dcd, _0x3bbd5f);
        const _0x4fad8a = _0x5b5a80.map(_0x1e8ea9 => {
          const _0x228028 = _0x1ed807.TextRange.getEnd(_0x1e8ea9.node);
          const _0x3d8fc8 = _0x207ecd(_0xea6fd9.getTypeString(_0x1e8ea9.type), _0x4b5f3e.convertOffsetToPosition(_0x228028, _0x20e172.tokenizerOutput.lines), ': ');
          return {
            fileUri: _0x4d50b2,
            range: _0x3d8fc8.range,
            replacementText: _0x3d8fc8.newText
          };
        }).flat().filter(_0x32b8b6 => !!_0x32b8b6);
        const _0x2b6e45 = _0x3bbd5f.applyImports(_0x4d50b2, _0x20e172, _0x3d6375, _0x37518c ?? 'absolute', _0x5b2dcd);
        _0x4fad8a.push(..._0x2b6e45.map(_0x1d09e8 => ({
          fileUri: _0x4d50b2,
          range: _0x1d09e8.range,
          replacementText: _0x1d09e8.replacementText
        })));
        return _0xeb1d45.convertToWorkspaceEdit(_0x5b18a7.fileSystem, _0x4fad8a.filter(_0x5b75be => !!_0x5b75be));
      }
      function _0x207ecd(_0x3a1b9a, _0x4654a9, _0x4df771) {
        const _0xc09a8a = `${_0x4df771}${_0x3a1b9a}`;
        return _0x535486.TextEdit.insert(_0x4654a9, _0xc09a8a);
      }
    },
    59198: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FixtureFinder = undefined;
      exports.tryAddFixtureFinder = _0x14a734;
      const _0x360125 = require(90355);
      const _0x311c8f = require(26687);
      const _0x1efb65 = require(28445);
      const _0xb0994b = require(41557);
      const _0x3a542d = require(91426);
      const _0x10b120 = require(56507);
      const _0xec2b80 = require(56814);
      const _0x1a63c5 = require(71745);
      const _0x24677c = require(30048);
      const _0x598b2e = require(34365);
      const _0x213c30 = require(22985);
      const _0x55f548 = ['cacheprovider.py', 'capture.py', 'doctest.py', 'fixtures.py', 'junitxml.py', 'legacypath.py', 'logging.py', 'monkeypatch.py', 'recwarn.py', 'tmpdir.py'];
      const _0x15e03c = 'conftest';
      function _0x14a734(_0x48afed, _0x24d560, _0x2c7f4a, _0x3b79ce) {
        const _0x5e7b49 = _0x48afed.tryGet(_0x24677c.PylanceServiceKeys.fixtureFinder);
        if (_0x5e7b49) {
          if (!_0x24d560.enablePytestSupport) {
            _0x24677c.registerServices(_0x48afed, undefined, _0x24677c.PylanceServiceKeys.fixtureFinder);
            return undefined;
          }
          return _0x5e7b49;
        }
        if (!_0x24d560.enablePytestSupport) {
          return undefined;
        }
        const _0x3fb1a3 = new _0x1ceb05(_0x2c7f4a, _0x3b79ce);
        _0x24677c.registerServices(_0x48afed, _0x3fb1a3, _0x24677c.PylanceServiceKeys.fixtureFinder, _0x1a63c5.ServiceKeys.stateMutationListeners, _0x1a63c5.ServiceKeys.symbolDefinitionProvider, _0x1a63c5.ServiceKeys.symbolUsageProviderFactory);
        return _0x3fb1a3;
      }
      class _0x1ceb05 {
        constructor(_0x14595f, _0x4bedfa) {
          this._programView = _0x14595f;
          this._programMutator = _0x4bedfa;
          this._defaultQueryOptions = {
            classes: [/^Test.*/],
            files: [/^test_.*?\.py$/, /^.*?_test\.py$/],
            functions: [/^test.*/]
          };
          this._pytestQueryEngine = new _0x213c30.PytestQueryEngine();
          this._cachedUserFixturesMap = new Map();
          this._cachedPredefinedFixturesMap = new Map();
          this._cachedPredefinedFixtures = [];
          this._updateQueryOptions();
        }
        tryCreateProvider(_0x548abc, _0x50683d, _0x3dc427) {
          const _0x15083d = _0x2017cb(this, _0x548abc, this._programView.evaluator, _0x50683d, _0x3dc427);
          if (!_0x15083d || _0x15083d.length === 0) {
            return undefined;
          }
          return new _0x35690f(this._programView, this, _0x548abc, _0x15083d, _0x3dc427);
        }
        isTestFunction(_0x49084e) {
          const _0x587461 = _0x49084e.nodeType === 31 ? _0x49084e : _0x49084e.parent?.nodeType === 31 ? _0x49084e.parent : undefined;
          if (!_0x587461) {
            return false;
          }
          const _0xe249fd = _0x311c8f.getFileInfo(_0x587461);
          if (this.isTestFile(_0xe249fd.fileUri) && this._isTestFunction(_0x587461)) {
            const _0x275715 = _0x587461.parent ? _0xb0994b.getEnclosingClass(_0x587461.parent) : undefined;
            if (!_0x275715 || this._isTestClass(_0x275715)) {
              return this.hasPytest();
            }
          }
          return false;
        }
        isTestFile(_0x183b54) {
          const _0x2bcb8c = this._getQueryOptions();
          const _0x5121b0 = _0x183b54.fileName;
          return _0x2bcb8c.files.some(_0x33a76e => _0x33a76e.test(_0x5121b0));
        }
        isFixtureFunction(_0x2d3a2e, _0x4d8638) {
          return _0x598b2e.isFixtureFunction(_0x2d3a2e, _0x4d8638) || this._getPredefinedFixtureFunctions(_0x2d3a2e).some(_0x56cdc7 => _0x56cdc7.id === _0x4d8638.id);
        }
        hasPytest() {
          return !!this._getPathToPytest();
        }
        findMatchingFixtures(_0x413008, _0x3c8560, _0x314604, _0x5127ef) {
          return this._getAllowedFixtures(_0x413008, _0x3c8560, _0x5127ef).filter(_0x314604);
        }
        tryGetDeclarations(_0xea1b4a, _0x10111e, _0x10e894) {
          const _0x4bf6c2 = [];
          const _0x113dab = this._programView.evaluator;
          if (_0xea1b4a.parent?.nodeType === 41) {
            if (_0x598b2e.isInsideTestFunction(this, _0xea1b4a.parent) || _0x598b2e.isInsideFixtureFunction(this, _0x113dab, _0xea1b4a.parent)) {
              const _0x3b0fd7 = _0x598b2e.findFixtureFunction(this, _0x113dab, _0xea1b4a.parent, _0x10e894);
              if (_0x3b0fd7) {
                _0x4bf6c2.push(_0x598b2e.getDeclarationForFixture(_0x3b0fd7));
              }
            }
          } else {
            if (_0xea1b4a.parent?.nodeType === 31 && this.isFixtureFunction(_0x113dab, _0xea1b4a.parent)) {
              _0x4bf6c2.push(_0x598b2e.getDeclarationForFixture(_0xea1b4a.parent));
            }
          }
          return _0x4bf6c2;
        }
        onUpdateSettings(_0x134757) {
          this._updatePythonPaths();
        }
        onFileDirty(_0x533de4) {
          this._cachedUserFixturesMap.delete(_0x533de4.key);
          if (this._cachedPredefinedFixturesMap.delete(_0x533de4.key)) {
            this._cachedPredefinedFixtures = [];
          }
        }
        onClearCache() {
          this._cachedPytestPath = undefined;
          this._cachedPredefinedFixturePaths = undefined;
          this._cachedPredefinedFixtures = [];
          this._cachedPredefinedFixturesMap.clear();
          this._cachedUserFixturesMap.clear();
        }
        get _fileSystem() {
          return this._programView.importResolver.fileSystem;
        }
        _updatePythonPaths() {
          this._cachedPytestPath = undefined;
          this._cachedPredefinedFixturePaths = undefined;
          this._cachedPredefinedFixtures = [];
          this._cachedPredefinedFixturesMap.clear();
          if (this._pytestQueryEngine) {
            this._updateQueryOptions();
          }
        }
        _isTestFunction(_0x166419) {
          const _0x40a989 = this._getQueryOptions();
          return _0x40a989.functions.some(_0x5fc8e1 => _0x5fc8e1.test(_0x166419.d.name.d.value));
        }
        _isTestClass(_0x3b0250) {
          const _0x217a00 = this._getQueryOptions();
          return _0x217a00.classes.some(_0x14e209 => _0x14e209.test(_0x3b0250.d.name.d.value));
        }
        _getQueryOptions() {
          if (this._cachedQueryOptions) {
            return this._cachedQueryOptions;
          }
          return this._defaultQueryOptions;
        }
        async _updateQueryOptions() {
          const _0x4c8585 = this._programView.importResolver.host;
          const _0x26f5ef = this._programView.configOptions;
          const _0x474120 = this._programView.importResolver.fileSystem;
          const _0x168af9 = await this._pytestQueryEngine.getOptions(_0x4c8585, _0x474120, this._programView.rootPath, _0x26f5ef, _0x1ceb05.queryTimeout);
          const _0xdb4d5a = this._programView.serviceProvider.tryGet(_0x1a63c5.ServiceKeys.console);
          if (_0xdb4d5a) {
            _0xdb4d5a.log(`pytest configurations: ${JSON.stringify(_0x168af9)}`);
          }
          this._cachedQueryOptions = this._generateQueryOptionsRegexes(_0x168af9);
        }
        _generateQueryOptionsRegexes(_0x256508) {
          const _0x431b33 = _0x5dad63 => {
            _0x5dad63 = _0x5dad63.replace(/\./g, '\\.');
            if (_0x5dad63.includes('*')) {
              _0x5dad63 = `^${_0x5dad63.replace(/\*/g, '.*?')}\$`;
            } else {
              _0x5dad63 = `^${_0x5dad63}.*`;
            }
            return RegExp(_0x5dad63);
          };
          return {
            classes: _0x256508.classes.map(_0x431b33),
            files: _0x256508.files.map(_0x431b33),
            functions: _0x256508.functions.map(_0x431b33)
          };
        }
        _getAllowedFixtures(_0x3e34b8, _0x59f854, _0x10dbc3) {
          const _0x17f0c3 = this._getAllowedFixtureNodes(_0x3e34b8, _0x59f854, _0x10dbc3);
          const _0x644c77 = this._getPredefinedFixtureFunctions(_0x3e34b8);
          return [..._0x17f0c3, ..._0x644c77];
        }
        _getPythonSearchPaths() {
          const _0x590f54 = [];
          return this._programView.importResolver.getPythonSearchPaths(_0x590f54);
        }
        _getPathToPytest() {
          if (!this._cachedPytestPath) {
            const _0x3e999c = this._getPythonSearchPaths();
            for (const _0x7f6365 of _0x3e999c) {
              const _0x4a2590 = _0x7f6365.combinePaths('_pytest');
              if (this._fileSystem.existsSync(_0x4a2590)) {
                this._cachedPytestPath = _0x4a2590;
                break;
              }
            }
          }
          return this._cachedPytestPath;
        }
        _getPredefinedFixturePaths(_0x713119) {
          if (!_0x713119) {
            return [];
          }
          if (!this._cachedPredefinedFixturePaths) {
            this._cachedPredefinedFixturePaths = _0x713119 ? _0x55f548.map(_0x47b01f => _0x713119.combinePaths(_0x47b01f)) : [];
          }
          return this._cachedPredefinedFixturePaths;
        }
        _getPredefinedFixtureFunctionsFromPytestPath(_0x4df690, _0x38805f) {
          const _0x4c103e = [...this._getPredefinedFixturePaths(_0x38805f)];
          _0x4c103e.forEach(_0x25f92 => {
            const _0x3ab436 = this._cachedPredefinedFixturesMap.get(_0x25f92.key);
            if (_0x3ab436) {
              return;
            }
            const _0x5f059b = this._getModuleNode(_0x25f92);
            if (!_0x5f059b) {
              return;
            }
            const _0x5a0549 = _0x598b2e.getModuleFixtureNodes(_0x4df690, _0x5f059b);
            if (_0x311c8f.getFileInfo(_0x5f059b).fileUri.fileName === 'fixtures.py') {
              const _0xc1e586 = _0x5f059b.d.statements.find(_0x2182cc => _0x2182cc.nodeType === 10 && _0x2182cc.d.name.d.value === 'FixtureRequest');
              if (_0xc1e586) {
                const _0x2755ae = _0xc1e586.d.suite.d.statements.find(_0x37aaf4 => _0x37aaf4.nodeType === 31 && _0x37aaf4.d.name.d.value === '__init__');
                if (_0x2755ae) {
                  _0x5a0549.push(_0x2755ae);
                }
              }
            }
            this._cachedPredefinedFixturesMap.set(_0x25f92.key, _0x5a0549);
          });
          const _0x1141e0 = _0x38805f.getDirectory();
          const _0xf2ff68 = this._fileSystem.readdirEntriesSync(_0x1141e0);
          const _0x5e9de0 = new Map();
          _0xf2ff68.forEach(_0x6e16d7 => {
            if (_0x6e16d7.isDirectory() && _0x6e16d7.name.startsWith('pytest_')) {
              const _0x3480ff = _0x1141e0.combinePaths(_0x6e16d7.name);
              const _0x13c20c = this._fileSystem.readdirEntriesSync(_0x3480ff).filter(_0x2e7c8a => _0x2e7c8a.isFile()).map(_0x3fc7b2 => _0x3fc7b2.name);
              _0x13c20c.forEach(_0x5ddf99 => this._getFileFixtureNodes(_0x4df690, _0x3480ff.combinePaths(_0x5ddf99), this._cachedPredefinedFixturesMap, _0x5e9de0, _0x360125.CancellationToken.None, 2));
            }
          });
          return [...this._cachedPredefinedFixturesMap.values()].flat();
        }
        _getPredefinedFixtureFunctions(_0x51f351) {
          const _0x27b922 = this._getPathToPytest();
          if (this._cachedPredefinedFixtures.length === 0 && _0x27b922) {
            this._cachedPredefinedFixtures = this._getPredefinedFixtureFunctionsFromPytestPath(_0x51f351, _0x27b922);
          }
          return this._cachedPredefinedFixtures;
        }
        _getSourceFileInfo(_0x3156c6) {
          const _0x4db598 = this._programView.getSourceFileInfo(_0x3156c6);
          if (_0x4db598) {
            return _0x4db598;
          }
          if (!this._fileSystem.existsSync(_0x3156c6)) {
            return undefined;
          }
          this._programMutator.addInterimFile(_0x3156c6);
          return this._programView.getSourceFileInfo(_0x3156c6);
        }
        _getModuleNode(_0x10f2ab) {
          var _0x5d4b92;
          if (!this._getSourceFileInfo(_0x10f2ab)) {
            return undefined;
          }
          if ((_0x5d4b92 = this._programView.getParseResults(_0x10f2ab)) === null || _0x5d4b92 === undefined) {
            return undefined;
          } else {
            return _0x5d4b92.parserOutput.parseTree;
          }
        }
        _getFileFixtureNodes(_0x1a0e22, _0x2ef080, _0x2cbf0b, _0x123bf6, _0x1e8fbe, _0x5ae8dd = 0) {
          _0x3a542d.throwIfCancellationRequested(_0x1e8fbe);
          const _0x5ddeff = this._getSourceFileInfo(_0x2ef080);
          if (!_0x5ddeff) {
            return;
          }
          let _0x514976;
          if (!this._cachedUserFixturesMap.has(_0x2ef080.key)) {
            const _0x6fdfa2 = this._getModuleNode(_0x2ef080);
            if (_0x6fdfa2) {
              _0x514976 = _0x598b2e.getModuleFixtureNodes(_0x1a0e22, _0x6fdfa2);
              this._cachedUserFixturesMap.set(_0x2ef080.key, _0x514976);
            }
          }
          _0x514976 = _0x514976 ?? this._cachedUserFixturesMap.get(_0x2ef080.key);
          if (!_0x2cbf0b.has(_0x2ef080.key) && _0x514976 && _0x514976.length > 0) {
            _0x2cbf0b.set(_0x2ef080.key, _0x514976);
          }
          const _0x16c6fe = _0x123bf6.get(_0x2ef080.key);
          if (_0x16c6fe === undefined || _0x5ae8dd < _0x16c6fe) {
            _0x123bf6.set(_0x2ef080.key, _0x5ae8dd);
          }
          if (_0x5ae8dd <= 2) {
            _0x3a542d.throwIfCancellationRequested(_0x1e8fbe);
            const _0x3ff5af = this._getPredefinedFixturePaths(this._getPathToPytest());
            _0x5ddeff.imports.forEach(_0x19ed50 => {
              const _0x469e43 = _0x19ed50.sourceFile.getUri();
              if (_0x3ff5af.some(_0xab611c => _0xab611c.equals(_0x469e43))) {
                return;
              }
              const _0x30587c = _0x5ae8dd + 1;
              const _0x4287ff = _0x123bf6.get(_0x469e43.key) ?? Number.MAX_SAFE_INTEGER;
              if (_0x4287ff <= _0x30587c) {
                return;
              }
              this._getFileFixtureNodes(_0x1a0e22, _0x469e43, _0x2cbf0b, _0x123bf6, _0x1e8fbe, _0x30587c);
            });
          }
        }
        _getPluginFiles(_0x3b818f) {
          const _0x36e501 = this._getModuleNode(_0x3b818f);
          if (!_0x36e501) {
            return [];
          }
          const _0x5b2af6 = this._programView.importResolver;
          const _0x4eac79 = this._programView.configOptions.findExecEnvironment(_0x3b818f);
          const _0x28875b = _0x36e501.d.statements.filter(_0x4c1016 => _0x4c1016.nodeType === 47);
          const _0x154acc = _0x28875b.map(_0x327a40 => _0x327a40.d.statements).flat().filter(_0x521c47 => _0x521c47.nodeType === 3);
          const _0x597755 = _0x154acc.find(_0x8d15fd => _0x8d15fd.d.leftExpr.nodeType === 38 && _0x8d15fd.d.leftExpr.d.value === 'pytest_plugins');
          if (_0x597755 && _0x597755.d.rightExpr.nodeType === 34) {
            const _0x233353 = _0x598b2e.getStringEntries(_0x597755.d.rightExpr);
            return _0x233353.map(_0x3c9ce5 => _0x5b2af6.resolveImport(_0x3b818f, _0x4eac79, {
              nameParts: _0x3c9ce5.d.value.split('.'),
              leadingDots: 0,
              importedSymbols: new Set()
            }).resolvedUris).flat().filter(_0xb069ee => !_0xb069ee.isEmpty());
          }
          return [];
        }
        _getPluginFixtureNodes(_0x758e39, _0x4f04c0, _0x4691e2, _0x53b3e2, _0x1ace7b) {
          const _0x247d6f = this._getPluginFiles(_0x4f04c0);
          _0x247d6f.forEach(_0x414f14 => this._getFileFixtureNodes(_0x758e39, _0x414f14, _0x4691e2, _0x53b3e2, _0x1ace7b));
        }
        _getConfFixtureNodes(_0x482954, _0x1068f3, _0x34b413, _0x31b26d, _0x19e4a2) {
          this._getFileFixtureNodes(_0x482954, _0x1068f3, _0x34b413, _0x31b26d, _0x19e4a2);
          this._getPluginFixtureNodes(_0x482954, _0x1068f3, _0x34b413, _0x31b26d, _0x19e4a2);
        }
        _getModuleFixtureNodesRecursive(_0x77db00, _0x4ee1d3, _0x265a6c) {
          const _0x196236 = new Map();
          const _0x51f047 = new Map();
          const _0xbb12d2 = _0x311c8f.getFileInfo(_0x4ee1d3);
          this._getFileFixtureNodes(_0x77db00, _0xbb12d2.fileUri, _0x196236, _0x51f047, _0x265a6c);
          let _0x3903ba = _0xbb12d2.fileUri.getDirectory();
          if (_0xbb12d2.moduleName !== _0x15e03c) {
            this._getConfFixtureNodes(_0x77db00, _0x3903ba.combinePaths(_0x15e03c + '.py'), _0x196236, _0x51f047, _0x265a6c);
            this._getPluginFixtureNodes(_0x77db00, _0xbb12d2.fileUri, _0x196236, _0x51f047, _0x265a6c);
          }
          _0x3903ba = _0x3903ba.getDirectory();
          while (_0x3903ba && this._fileSystem.existsSync(_0x3903ba) && (_0x3903ba.equals(this._programView.rootPath) || _0x3903ba.isChild(this._programView.rootPath))) {
            _0x3a542d.throwIfCancellationRequested(_0x265a6c);
            this._getConfFixtureNodes(_0x77db00, _0x3903ba.combinePaths(_0x15e03c + '.py'), _0x196236, _0x51f047, _0x265a6c);
            const _0x1bc00a = _0x3903ba.getDirectory();
            if (!_0x1bc00a || _0x1bc00a.equals(_0x3903ba)) {
              break;
            }
            _0x3903ba = _0x1bc00a;
          }
          return [..._0x196236.values()].flat();
        }
        _getAllowedFixtureNodes(_0x56916b, _0x29379c, _0x21275e) {
          const _0x2ddb98 = [];
          const _0x1445ba = _0xb0994b.getEnclosingParam(_0x29379c);
          if (_0x1445ba) {
            const _0x591124 = _0xb0994b.getEnclosingFunction(_0x1445ba);
            const _0x102aa0 = _0x591124 ? _0x598b2e.getMarkParameterizedDecorators(_0x56916b, _0x591124) : [];
            _0x102aa0.forEach(_0x201762 => {
              if (_0x201762.d.expr.nodeType === 9) {
                const _0x1a2892 = _0x201762.d.expr.d.args[0].d.valueExpr;
                if (_0x1a2892.nodeType === 48) {
                  const _0x4f0224 = _0x1a2892.d.strings.map(_0x11c09b => {
                    return _0x11c09b.d.value.split(',').map((_0x54be03, _0x185fa8) => {
                      const _0x3efc74 = {
                        ..._0x11c09b,
                        index: _0x185fa8,
                        subvalue: _0x54be03.trim(),
                        parameter: _0x1445ba
                      };
                      return _0x3efc74;
                    });
                  }).flat();
                  _0x2ddb98.push(..._0x4f0224);
                }
              }
            });
          }
          const _0x470164 = this._getModuleFixtureNodesRecursive(_0x56916b, _0xb0994b.getModuleNode(_0x29379c), _0x21275e);
          const _0x5c5ebc = _0x29379c.parent ? _0xb0994b.getEnclosingClass(_0x29379c.parent) : undefined;
          const _0x16cdcc = _0x470164.filter(_0x3f30de => {
            if (_0x3f30de.parent?.parent?.nodeType === 10 && _0x5c5ebc) {
              return _0x5c5ebc.id === _0x3f30de.parent.parent.id;
            }
            return true;
          });
          return [..._0x2ddb98, ..._0x16cdcc];
        }
      }
      exports.FixtureFinder = _0x1ceb05;
      _0x1ceb05.queryTimeout = 10000;
      class _0x35690f {
        constructor(_0x328fb4, _0x4c8b99, _0x2dc82e, _0x1b1d03, _0x2610bc) {
          this._view = _0x328fb4;
          this._fixtureFinder = _0x4c8b99;
          this._useCase = _0x2dc82e;
          this._declarations = _0x1b1d03;
          this._token = _0x2610bc;
        }
        appendSymbolNamesTo(_0x5aab0b) {}
        appendDeclarationsTo(_0x13c414) {
          _0x13c414.push(...this._declarations);
        }
        appendDeclarationsAt(_0x2ff583, _0x24e94f, _0x1d43d6) {
          _0x1d43d6.push(...(_0x2017cb(this._fixtureFinder, this._useCase, this._view.evaluator, _0x24e94f, this._token) ?? []));
        }
      }
      function _0x2017cb(_0x5424d9, _0x506b4d, _0x6bdd30, _0x229da5, _0x37b77d) {
        const _0x37ff6c = _0x229da5.find(_0x1efb65.isParamDeclaration);
        if (_0x37ff6c) {
          const _0x46d14e = _0x37ff6c.node;
          if (!_0x598b2e.isInsideTestFunction(_0x5424d9, _0x46d14e) && !_0x598b2e.isInsideFixtureFunction(_0x5424d9, _0x6bdd30, _0x46d14e)) {
            return undefined;
          }
          const _0x36ee8b = _0x598b2e.findFixtureFunction(_0x5424d9, _0x6bdd30, _0x46d14e, _0x37b77d);
          if (!_0x36ee8b) {
            return undefined;
          }
          if (_0x36ee8b.nodeType === 31 && _0x506b4d === _0x10b120.ReferenceUseCase.Rename) {
            const _0x44f2b6 = _0x598b2e.getFixtureNameDecoratorString(_0x36ee8b);
            const _0x5ea065 = _0x44f2b6?.parent;
            if (_0x5ea065 && _0x44f2b6) {
              const _0x3a3363 = _0x311c8f.getFileInfo(_0x44f2b6);
              return [{
                type: 1,
                node: _0x5ea065,
                uri: _0x3a3363.fileUri,
                range: _0xec2b80.convertTextRangeToRange(_0x5ea065, _0x3a3363.lines),
                moduleName: _0x3a3363.moduleName,
                isInExceptSuite: false
              }];
            }
          }
          return [_0x598b2e.getDeclarationForFixture(_0x36ee8b)];
        }
        const _0x45c571 = _0x229da5.find(_0x1efb65.isFunctionDeclaration);
        if (!_0x45c571) {
          return undefined;
        }
        const _0x54ac39 = _0x45c571.node;
        if (!_0x5424d9.isFixtureFunction(_0x6bdd30, _0x54ac39)) {
          return undefined;
        }
        return [_0x598b2e.getDeclarationForFixture(_0x54ac39)];
      }
    },
    34365: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.isFixtureFunction = _0xa60211;
      exports.getMarkParameterizedDecorators = _0x126d81;
      exports.getTypeNodes = _0x2fdaee;
      exports.getStringEntries = _0x5d2967;
      exports.getFixtureNameDecoratorString = _0x2cc104;
      exports.getFixtureName = _0x20449a;
      exports.getModuleFixtureNodes = _0x296c17;
      exports.getModuleTestFunctions = _0x1f8092;
      exports.findFixtureFunction = _0x5e7f6d;
      exports.possibleFixtureLocation = _0x3610a4;
      exports.tryGetParameterNodeType = _0x3a8ea5;
      exports.isInsideTestFunction = _0x122acf;
      exports.isInsideFixtureFunction = _0x593b39;
      exports.getFixtureType = _0x29971f;
      exports.getDeclarationForFixture = _0x251bfa;
      const _0x3ea603 = require(26687);
      const _0x579c8e = require(41557);
      const _0x56685a = require(88744);
      const _0x1046c0 = require(21024);
      const _0xf4d784 = require(56814);
      const _0x36edf7 = require(39426);
      const _0x2f954f = require(30048);
      function _0x58a3f4(_0x3ecff9, _0x46be37) {
        if (_0x1046c0.isFunction(_0x3ecff9)) {
          return _0x46be37.some(_0x43c265 => _0x43c265 === _0x3ecff9.shared.fullName);
        }
        if (_0x1046c0.isClassInstance(_0x3ecff9)) {
          return _0x46be37.some(_0x5ccaca => _0x5ccaca === _0x3ecff9.shared.fullName);
        }
        if (_0x1046c0.isUnion(_0x3ecff9)) {
          return _0x3ecff9.priv.subtypes.some(_0x4db65c => _0x58a3f4(_0x4db65c, _0x46be37));
        }
        if (_0x1046c0.isOverloaded(_0x3ecff9)) {
          if (_0x1046c0.OverloadedType.getOverloads(_0x3ecff9).some(_0x56c00e => _0x58a3f4(_0x56c00e, _0x46be37))) {
            return true;
          }
          const _0x3564ff = _0x1046c0.OverloadedType.getImplementation(_0x3ecff9);
          return !!_0x3564ff && _0x58a3f4(_0x3564ff, _0x46be37);
        }
        return false;
      }
      function _0x27b13c(_0x58f9df, _0x3372e3, _0x123dec) {
        return _0x3372e3.d.decorators.filter(_0x1d325d => {
          _0x5a9c42(_0x58f9df, _0x1d325d.d.expr);
          const _0x16c436 = _0x58f9df.getType(_0x1d325d.d.expr);
          if (_0x16c436) {
            return _0x58a3f4(_0x16c436, _0x123dec);
          } else {
            return false;
          }
        });
      }
      function _0x5a9c42(_0x20305f, _0x156d3a) {
        var _0x277e58;
        if (_0x156d3a.nodeType !== 38 && _0x156d3a.nodeType !== 35) {
          return;
        }
        const _0xef4b58 = _0x579c8e.getFirstNameOfDottedName(_0x156d3a);
        if (!_0xef4b58) {
          return;
        }
        if ((_0x277e58 = _0x20305f.getDeclInfoForNameNode(_0xef4b58, false)?.decls) === null || _0x277e58 === undefined) {
          undefined;
        } else {
          _0x277e58.forEach(_0x2faed9 => _0x20305f.resolveAliasDeclaration(_0x2faed9, true, {
            allowExternallyHiddenAccess: true,
            skipFileNeededCheck: true
          }));
        }
      }
      function _0xa60211(_0x5e45a3, _0xf3a753) {
        const _0x30d9db = _0x27b13c(_0x5e45a3, _0xf3a753, ['pytest.fixture', 'pytest.yield_fixture', '_pytest.fixtures.fixture', '_pytest.fixtures.yield_fixture', 'pytest.FixtureFunction', 'pytest.FixtureFunctionMarker', '_pytest.fixtures.FixtureFunction', '_pytest.fixtures.FixtureFunctionMarker']);
        return _0x30d9db.length > 0;
      }
      function _0x126d81(_0x2b6c4c, _0x476e38) {
        return _0x27b13c(_0x2b6c4c, _0x476e38, ['pytest.MarkDecorator', 'pytest.MarkGenerator', '_pytest.mark.structures.MarkDecorator', '_pytest.mark.structures.MarkGenerator']).filter(_0x337f31 => {
          return _0x337f31.d.expr.nodeType === 9 && _0x337f31.d.expr.d.leftExpr.nodeType === 35 && _0x337f31.d.expr.d.leftExpr.d.member.d.value === 'parametrize';
        });
      }
      function _0x25221f(_0x1ad2fc, _0x451310) {
        return _0x451310.map(_0xc7aa30 => {
          if (_0xc7aa30.nodeType === 52) {
            return _0xc7aa30.d.items[_0x1ad2fc.index];
          } else {
            if (_0xc7aa30.nodeType === 9 && _0xc7aa30.d.leftExpr.nodeType === 35 && _0xc7aa30.d.leftExpr.d.member.d.value === 'param' && _0xc7aa30.d.leftExpr.d.leftExpr.nodeType === 38 && _0xc7aa30.d.leftExpr.d.leftExpr.d.value === 'pytest') {
              return _0xc7aa30.d.args[_0x1ad2fc.index].d.valueExpr;
            }
          }
          return _0xc7aa30;
        });
      }
      function _0x2fdaee(_0x504d1c) {
        const _0x143486 = _0x504d1c.parent;
        const _0x5e62ba = _0x143486.parent?.parent;
        const _0x26a575 = (_0x5e62ba === null || _0x5e62ba === undefined ? undefined : _0x5e62ba.d.args) && (_0x5e62ba === null || _0x5e62ba === undefined ? undefined : _0x5e62ba.d.args.length) > 0 ? _0x5e62ba.d.args[1].d.valueExpr : undefined;
        let _0x97e0a8 = [];
        if (_0x26a575 && _0x26a575.nodeType === 34) {
          _0x97e0a8 = _0x25221f(_0x504d1c, _0x26a575.d.items);
        } else {
          if (_0x26a575 && _0x26a575.nodeType === 52) {
            _0x97e0a8 = _0x25221f(_0x504d1c, _0x26a575.d.items);
          } else {
            if (_0x26a575) {
              _0x97e0a8 = [_0x26a575];
            }
          }
        }
        return _0x97e0a8;
      }
      function _0x5d2967(_0x3ea959) {
        const _0x2610fc = [];
        if (_0x3ea959.nodeType === 34) {
          _0x3ea959.d.items.forEach(_0x89df5c => {
            if (_0x89df5c.nodeType === 48) {
              _0x2610fc.push(..._0x89df5c.d.strings);
            } else {
              if (_0x89df5c.nodeType === 9 && _0x89df5c.d.leftExpr.nodeType === 38 && _0x89df5c.d.leftExpr.d.value === 'str') {
                const _0x489669 = _0x89df5c.d.args.filter(_0x32a14d => _0x32a14d.d.valueExpr.nodeType === 48).map(_0x2998d9 => _0x2998d9.d.valueExpr.d.strings).flat();
                _0x2610fc.push(..._0x489669);
              }
            }
          });
        } else {
          _0x2610fc.push(..._0x3ea959.d.strings);
        }
        return _0x2610fc;
      }
      function _0x2cc104(_0x162aba) {
        const _0x30ca6f = _0x162aba.d.decorators.find(_0x3780fd => {
          var _0x4ce154;
          if ((_0x4ce154 = _0x579c8e.getDecoratorName(_0x3780fd)) === null || _0x4ce154 === undefined) {
            return undefined;
          } else {
            return _0x4ce154.includes('fixture');
          }
        });
        const _0x5c1872 = (_0x30ca6f === null || _0x30ca6f === undefined ? undefined : _0x30ca6f.d.expr.nodeType) === 9 ? _0x30ca6f.d.expr.d.args.find(_0x568a2a => {
          var _0x1d52a8;
          return ((_0x1d52a8 = _0x568a2a.d.name) === null || _0x1d52a8 === undefined ? undefined : _0x1d52a8.d.value) === 'name';
        }) : undefined;
        const _0x4118eb = _0x5c1872 && (_0x5c1872 === null || _0x5c1872 === undefined ? undefined : _0x5c1872.d.valueExpr.nodeType) === 48 ? _0x5d2967(_0x5c1872 === null || _0x5c1872 === undefined ? undefined : _0x5c1872.d.valueExpr).filter(_0x5acdc5 => _0x5acdc5.nodeType === 49) : [];
        if (_0x4118eb && _0x4118eb.length > 0) {
          return _0x4118eb[0];
        } else {
          return undefined;
        }
      }
      function _0x20449a(_0x40d1e7, _0x3b069f) {
        if (_0x40d1e7.nodeType === 31) {
          if (_0x40d1e7.d.name.d.value === '__init__' && _0x40d1e7.parent) {
            const _0x5c08cc = _0x579c8e.getEnclosingClass(_0x40d1e7.parent);
            if (_0x5c08cc && _0x5c08cc.d.name.d.value === 'FixtureRequest') {
              return 'request';
            }
          }
          if (_0x3b069f) {
            const _0x183daf = _0x2cc104(_0x40d1e7);
            if (_0x183daf) {
              return _0x183daf.d.value;
            } else {
              return _0x40d1e7.d.name.d.value;
            }
          }
          return _0x40d1e7.d.name.d.value;
        } else {
          if (_0x40d1e7.nodeType === 38) {
            return _0x40d1e7.d.value;
          } else {
            return _0x40d1e7.subvalue;
          }
        }
      }
      function _0x296c17(_0x58de1e, _0x3d7c11) {
        const _0x6a9125 = _0x3d7c11.d.statements.filter(_0x44e381 => _0x44e381.nodeType === 31 && _0xa60211(_0x58de1e, _0x44e381));
        const _0x556e67 = _0x3d7c11.d.statements.filter(_0x2bd513 => _0x2bd513.nodeType === 10);
        const _0x5996c0 = _0x556e67.map(_0x50bcc8 => _0x50bcc8.d.suite).flat().map(_0x2f2506 => _0x2f2506.d.statements).flat().filter(_0x3b5771 => _0x3b5771.nodeType === 31 && _0xa60211(_0x58de1e, _0x3b5771));
        const _0x3f9c5f = _0x3d7c11.d.statements.map(_0x417ecb => {
          if (_0x417ecb.nodeType === 47 && _0x417ecb.d.statements.length === 1 && _0x417ecb.d.statements[0].nodeType === 3 && _0x417ecb.d.statements[0].d.rightExpr.nodeType === 9 && _0x417ecb.d.statements[0].d.rightExpr.d.leftExpr.nodeType === 9 && _0x417ecb.d.statements[0].d.rightExpr.d.leftExpr.d.leftExpr.nodeType === 35 && _0x417ecb.d.statements[0].d.rightExpr.d.leftExpr.d.leftExpr.d.member.d.value === 'fixture' && _0x417ecb.d.statements[0].d.rightExpr.d.leftExpr.d.leftExpr.d.leftExpr.nodeType === 38 && _0x417ecb.d.statements[0].d.rightExpr.d.leftExpr.d.leftExpr.d.leftExpr.d.value === 'pytest' && _0x417ecb.d.statements[0].d.leftExpr.nodeType === 38 && _0x417ecb.d.statements[0].d.rightExpr.d.args.length === 1) {
            return {
              ..._0x417ecb.d.statements[0].d.leftExpr,
              alternativeTypeNode: _0x417ecb.d.statements[0].d.rightExpr.d.args[0].d.valueExpr
            };
          }
          return undefined;
        }).filter(_0x3501f8 => !!_0x3501f8);
        return [..._0x6a9125, ..._0x5996c0, ..._0x3f9c5f];
      }
      function _0x1f8092(_0x22f60d, _0x59c5fb) {
        const _0x487eda = [];
        class _0x38dcb7 extends _0x56685a.ParseTreeWalker {
          visitClass(_0x1d475a) {
            return _0x59c5fb.classes.some(_0x4b982e => _0x4b982e.test(_0x1d475a.d.name.d.value));
          }
          visitFunction(_0x9d9071) {
            if (_0x59c5fb.functions.some(_0x5454e5 => _0x5454e5.test(_0x9d9071.d.name.d.value))) {
              _0x487eda.push(_0x9d9071);
            }
            return false;
          }
        }
        const _0x35c8cf = new _0x38dcb7();
        _0x35c8cf.walk(_0x22f60d);
        return _0x487eda;
      }
      function _0x5e7f6d(_0x119cec, _0x511fb0, _0x675930, _0x313151) {
        if (_0x313151) {
          return _0x2145f6(_0x119cec, _0x511fb0, _0x675930, _0x313151);
        }
        return _0x289c51(_0x119cec, _0x511fb0, _0x675930);
      }
      function _0x289c51(_0x5e1149, _0x10f57a, _0x4db8da) {
        const _0x1e680f = _0x5e1149.serviceProvider.tryGet(_0x2f954f.PylanceServiceKeys.fixtureFinder);
        const _0x439bb0 = _0x5e1149.evaluator;
        if (_0x1e680f && _0x439bb0) {
          return _0x2145f6(_0x1e680f, _0x439bb0, _0x10f57a, _0x4db8da);
        } else {
          return undefined;
        }
      }
      function _0x2145f6(_0x462cb1, _0x3ff507, _0x10cc47, _0x5e38c0) {
        if (_0x10cc47.d.name) {
          return _0x462cb1.findMatchingFixtures(_0x3ff507, _0x10cc47, _0x1d4390 => _0x12592a(_0x1d4390, _0x10cc47.d.name.d.value), _0x5e38c0)[0];
        } else {
          return undefined;
        }
        function _0x12592a(_0x311dab, _0x5371b3) {
          return _0x20449a(_0x311dab, true) === _0x5371b3;
        }
      }
      function _0x3610a4(_0x4d5930, _0x4a911e, _0x17e3f6) {
        return _0x122acf(_0x4d5930, _0x17e3f6) || _0x593b39(_0x4d5930, _0x4a911e, _0x17e3f6);
      }
      function _0x3a8ea5(_0x43b75d, _0x54473b, _0x5cb4a0, _0x379813) {
        if (!_0x3610a4(_0x43b75d, _0x54473b, _0x5cb4a0)) {
          return undefined;
        }
        const _0x53f0f6 = _0x2145f6(_0x43b75d, _0x54473b, _0x5cb4a0, _0x379813);
        if (!_0x53f0f6) {
          return undefined;
        }
        return _0x29971f(_0x43b75d, _0x54473b, _0x53f0f6, true, _0x379813);
      }
      function _0x122acf(_0x165b75, _0xcdadcf) {
        return _0xcdadcf.parent?.nodeType === 31 && _0x165b75.isTestFunction(_0xcdadcf.parent);
      }
      function _0x593b39(_0x4ce490, _0x135a64, _0x5ed498) {
        return _0x5ed498.parent?.nodeType === 31 && _0x4ce490.isFixtureFunction(_0x135a64, _0x5ed498.parent);
      }
      function _0x29971f(_0x973e3c, _0xac94c5, _0x4e5dd4, _0x19f8f3, _0x44d83b) {
        let _0x7926a8;
        if (_0x4e5dd4.nodeType === 31) {
          if (_0x4e5dd4.d.name.d.value === '__init__' && _0x4e5dd4.parent?.parent?.nodeType === 10) {
            const _0x320846 = _0xac94c5.getTypeOfClass(_0x4e5dd4.parent.parent);
            _0x7926a8 = _0x320846?.classType;
          } else {
            const _0x3386c5 = _0xac94c5.getTypeOfFunction(_0x4e5dd4);
            if (_0x19f8f3 && _0x3386c5) {
              _0x7926a8 = _0x3386c5?.functionType?.shared?.declaredReturnType ?? _0xac94c5.getInferredReturnType(_0x3386c5?.functionType);
              if (_0x7926a8 && _0x1046c0.isClassInstance(_0x7926a8) && _0x1046c0.ClassType.isBuiltIn(_0x7926a8, 'Generator') && _0x7926a8.priv.typeArgs && _0x7926a8.priv.typeArgs.length) {
                _0x7926a8 = _0x7926a8.priv.typeArgs[0];
              }
            } else {
              if (_0x3386c5?.functionType) {
                const _0x1ff844 = {
                  ..._0x3386c5.functionType,
                  shared: {
                    ..._0x3386c5.functionType.shared,
                    parameters: _0x3386c5.functionType.shared.parameters.map((_0x50764f, _0x509b6c) => {
                      if (_0x50764f._type.category === 1) {
                        return {
                          ..._0x50764f,
                          type: _0x3a8ea5(_0x973e3c, _0xac94c5, _0x4e5dd4.d.params[_0x509b6c], _0x44d83b) ?? _0x50764f._type
                        };
                      }
                      return _0x50764f;
                    })
                  }
                };
                _0x7926a8 = _0x1ff844;
              }
            }
          }
        } else {
          if (_0x4e5dd4.nodeType === 38) {
            _0x7926a8 = _0x36edf7.combineExpressionTypes([_0x4e5dd4.alternativeTypeNode], _0xac94c5);
          } else {
            const _0x26dfc6 = _0x251bfa(_0x4e5dd4);
            if (_0x26dfc6.type === 2 && _0x26dfc6.inferredTypeNodes) {
              _0x7926a8 = _0x36edf7.combineExpressionTypes(_0x26dfc6.inferredTypeNodes, _0xac94c5);
            }
          }
        }
        if (_0x7926a8 !== null && _0x7926a8 !== undefined) {
          return _0x7926a8;
        } else {
          return _0x1046c0.UnknownType.create();
        }
      }
      function _0x251bfa(_0x37f133) {
        const _0x563d98 = _0x3ea603.getFileInfo(_0x37f133);
        if (_0x37f133.nodeType === 31 && _0x37f133.d.name.d.value === '__init__' && _0x37f133.parent?.parent?.nodeType === 10) {
          return {
            type: 6,
            node: _0x37f133.parent.parent,
            uri: _0x563d98.fileUri,
            range: _0xf4d784.convertTextRangeToRange(_0x37f133.parent.parent.d.name, _0x563d98.lines),
            moduleName: _0x563d98.moduleName,
            isInExceptSuite: false
          };
        }
        if (_0x37f133.nodeType === 31) {
          return {
            type: 5,
            isMethod: _0x37f133.parent?.parent?.nodeType === 10,
            isGenerator: false,
            moduleName: _0x563d98.moduleName,
            isInExceptSuite: false,
            node: _0x37f133,
            uri: _0x563d98.fileUri,
            range: _0xf4d784.convertTextRangeToRange(_0x37f133.d.name, _0x563d98.lines)
          };
        }
        if (_0x37f133.nodeType === 38) {
          return {
            type: 1,
            isInExceptSuite: false,
            alternativeTypeNode: _0x37f133.alternativeTypeNode,
            moduleName: _0x563d98.moduleName,
            node: _0x37f133,
            uri: _0x563d98.fileUri,
            range: _0xf4d784.convertTextRangeToRange(_0x37f133, _0x563d98.lines)
          };
        }
        return {
          type: 2,
          node: _0x37f133.parameter,
          uri: _0x563d98.fileUri,
          range: _0xf4d784.convertTextRangeToRange(_0x37f133, _0x563d98.lines),
          moduleName: _0x563d98.moduleName,
          isInExceptSuite: false,
          inferredTypeNodes: _0x2fdaee(_0x37f133),
          inferredName: _0x37f133.subvalue
        };
      }
    },
    93115: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.pyTestCodeAction = undefined;
      const _0x45839c = require(56911);
      const _0x181bff = require(91426);
      const _0x485fb9 = require(23574);
      const _0x25f980 = require(56814);
      const _0x373a9e = require(27130);
      const _0x3294b0 = require(19013);
      const _0xdc6e6f = require(30048);
      const _0x1a2b49 = require(15986);
      const _0x8c8a40 = require(34365);
      class _0x5cf072 {
        static addCodeActions(_0x42f2c9, _0x4385e5, _0x494f48, _0x33b82a, _0x22c781, _0x1969a7) {
          _0x181bff.throwIfCancellationRequested(_0x1969a7);
          _0x42f2c9.service.run(_0x44c793 => {
            const _0xe46a25 = _0x44c793.serviceProvider.tryGet(_0xdc6e6f.PylanceServiceKeys.fixtureFinder);
            if (!_0xe46a25 || !_0xe46a25.hasPytest()) {
              return;
            }
            if (!_0xe46a25.isTestFile(_0x4385e5)) {
              return;
            }
            const _0x58b387 = [];
            const _0x3c85bd = _0x3294b0.getNodesInRange(_0x33b82a, 41, _0x1969a7, _0x494f48);
            _0x3c85bd.forEach(_0x545f26 => {
              var _0x3313c0;
              if (_0x545f26.d.annotation || _0x545f26.d.annotationComment || !_0x8c8a40.possibleFixtureLocation(_0xe46a25, _0x44c793.evaluator, _0x545f26) || !_0x8c8a40.findFixtureFunction(_0x44c793, _0x545f26, _0x1969a7)) {
                return;
              }
              const _0x5a0945 = _0x25f980.convertTextRangeToRange(_0x545f26, _0x33b82a.tokenizerOutput.lines);
              const _0x358738 = _0x1a2b49.Localizer.Pytest.addTypeAnnnotation().format({
                name: ((_0x3313c0 = _0x545f26.d.name) === null || _0x3313c0 === undefined ? undefined : _0x3313c0.d.value) || ''
              });
              _0x58b387.push(_0x45839c.CodeAction.create(_0x358738, _0x485fb9.createCommand(_0x358738, _0x373a9e.Commands.addFixtureTypeAnnotation, _0x4385e5.toString(), _0x5a0945), _0x45839c.CodeActionKind.RefactorInline));
            });
            if (_0x58b387.length > 0) {
              const _0x1f86eb = _0x1a2b49.Localizer.Pytest.addTypeAnnnotations();
              _0x58b387.push(_0x45839c.CodeAction.create(_0x1f86eb, _0x485fb9.createCommand(_0x1f86eb, _0x373a9e.Commands.addAllFixtureTypeAnnotations, _0x4385e5.toString()), _0x45839c.CodeActionKind.RefactorInline));
              _0x22c781.push(..._0x58b387);
              return;
            }
            const _0x572b0a = _0x3294b0.getNodesInRange(_0x33b82a, 41, _0x1969a7);
            for (const _0x46c792 of _0x572b0a) {
              _0x181bff.throwIfCancellationRequested(_0x1969a7);
              if (_0x46c792.d.annotation || _0x46c792.d.annotationComment || !_0x8c8a40.possibleFixtureLocation(_0xe46a25, _0x44c793.evaluator, _0x46c792) || !_0x8c8a40.findFixtureFunction(_0x44c793, _0x46c792, _0x1969a7)) {
                continue;
              }
              const _0x1c7a6f = _0x1a2b49.Localizer.Pytest.addTypeAnnnotations();
              _0x22c781.push(_0x45839c.CodeAction.create(_0x1c7a6f, _0x485fb9.createCommand(_0x1c7a6f, _0x373a9e.Commands.addAllFixtureTypeAnnotations, _0x4385e5.toString()), _0x45839c.CodeActionKind.RefactorInline));
              return;
            }
          }, _0x1969a7);
        }
      }
      exports.pyTestCodeAction = _0x5cf072;
    },
    30579: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PyTestCompletionProvider = undefined;
      const _0x22b5a9 = require(56911);
      const _0x428ed8 = require(41557);
      const _0x542101 = require(51868);
      const _0x478c97 = require(39426);
      const _0x5d5a89 = require(30048);
      const _0xc5ead2 = require(72086);
      const _0x38ef3e = require(34365);
      class _0x23b9bd {
        constructor(_0x4a5b01, _0xa64ab7, _0x58b53b, _0xebe4c3, _0x467a1d) {
          this._program = _0x4a5b01;
          this._fileUri = _0xa64ab7;
          this._position = _0x58b53b;
          this._options = _0xebe4c3;
          this._token = _0x467a1d;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._sourceMapper = this._program.getSourceMapper(this._fileUri, this._token, true);
          this._fixtureFinder = this._program.serviceProvider.tryGet(_0x5d5a89.PylanceServiceKeys.fixtureFinder);
        }
        getSlowCompletionInfo() {
          return this._slowCompletionInfo;
        }
        getCompletions() {
          if (!this._fixtureFinder || !this._parseResults) {
            return null;
          }
          const _0x102f7f = _0x428ed8.findNodeByPosition(this._parseResults.parserOutput.parseTree, this._position, this._parseResults.tokenizerOutput.lines);
          if (_0x102f7f?.nodeType !== 38 || _0x102f7f.parent?.nodeType !== 41) {
            return null;
          }
          if (!_0x38ef3e.isInsideTestFunction(this._fixtureFinder, _0x102f7f.parent) && !_0x38ef3e.isInsideFixtureFunction(this._fixtureFinder, this._evaluator, _0x102f7f.parent)) {
            return null;
          }
          const _0x200dc0 = _0x22b5a9.CompletionList.create();
          const _0x573bb8 = this._fixtureFinder.findMatchingFixtures(this._evaluator, _0x102f7f, _0x5cf989 => this._fixtureStartsWith(_0x5cf989, _0x102f7f.d.value), this._token).map(_0x4ad902 => {
            return {
              fixture: _0x4ad902,
              label: _0x38ef3e.getFixtureName(_0x4ad902, true),
              type: _0x38ef3e.getFixtureType(this._fixtureFinder, this._evaluator, _0x4ad902, false, this._token)
            };
          }).flat();
          _0x573bb8.forEach(_0x37e4ba => {
            const _0x6d3bb3 = _0x22b5a9.CompletionItem.create(_0x37e4ba.label);
            const _0x5c824a = _0x38ef3e.getDeclarationForFixture(_0x37e4ba.fixture);
            _0x6d3bb3.sortText = _0x37e4ba.label;
            const _0x310489 = {
              funcParensDisabled: true,
              uri: _0x5c824a.uri.toString(),
              position: _0x5c824a.range.start
            };
            _0x6d3bb3.data = _0x310489;
            _0x6d3bb3.kind = _0x22b5a9.CompletionItemKind.Function;
            const _0x2a8b93 = _0x5c824a.type === 6 || _0x5c824a.type === 5 ? _0x5c824a.node.d.name.d.value : _0x37e4ba.label;
            const _0x461108 = _0x478c97.getDocumentationPartsForTypeAndDecl(this._sourceMapper, _0x37e4ba.type, _0x5c824a, this._evaluator);
            const _0x10146b = _0x37e4ba.type ? _0x542101.getTypeDetail(this._evaluator, _0x37e4ba.type, _0x5c824a, _0x2a8b93, undefined, this._program.configOptions.functionSignatureDisplay) : undefined;
            _0x6d3bb3.documentation = _0x542101.getCompletionItemDocumentation(this._program.serviceProvider, _0x10146b, _0x461108, this._options.format, _0x5c824a);
            _0x200dc0.items.push(_0x6d3bb3);
          });
          this._slowCompletionInfo = {
            completionType: 'pytest',
            fileType: _0xc5ead2.getSlowCompletionInfoFileType(this._fileUri)
          };
          return _0x200dc0;
        }
        resolveCompletionItem(_0x408cb7) {}
        get _evaluator() {
          return this._program.evaluator;
        }
        _fixtureStartsWith(_0x6b08fd, _0x60ed42) {
          return _0x38ef3e.getFixtureName(_0x6b08fd, true).startsWith(_0x60ed42);
        }
      }
      exports.PyTestCompletionProvider = _0x23b9bd;
    },
    84826: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PyTestDocumentTransformer = undefined;
      const _0x1a9f58 = require(41557);
      const _0x15f13d = require(91426);
      const _0x469f74 = require(56814);
      const _0x5c2a8f = require(88754);
      const _0x261b01 = require(74382);
      const _0x35f680 = require(30048);
      const _0x4efa55 = require(72086);
      const _0x48952d = require(19995);
      const _0x5323ec = require(34365);
      class _0x566e9f {
        constructor() {}
        canApply(_0x568220, _0x103313, _0x549500, _0x421e9c) {
          _0x15f13d.throwIfCancellationRequested(_0x421e9c);
          const _0x4634ae = this._tryGetFixtureFinder(_0x568220);
          if (!_0x4634ae || !_0x4634ae.isTestFile(_0x103313)) {
            return false;
          }
          const _0x37ddfd = this._tryGetContainingFunctionNode(_0x568220, _0x103313, _0x549500);
          if (!_0x37ddfd) {
            return false;
          }
          return _0x4634ae.isTestFunction(_0x37ddfd) || _0x4634ae.isFixtureFunction(_0x568220.evaluator, _0x37ddfd);
        }
        apply(_0x10fa0e, _0x4411ed, _0x18fa34, _0x6bd530, _0x31cdef) {
          var _0x5ec680;
          const _0x2ef383 = this._tryGetFixtureFinder(_0x10fa0e);
          const _0x53c42c = this._tryGetContainingFunctionNode(_0x10fa0e, _0x4411ed, _0x18fa34);
          const _0x792dbe = [];
          const _0x151f2c = _0x10fa0e.getParseResults(_0x4411ed);
          const _0x59b79e = _0x10fa0e.evaluator;
          const _0x9aef3b = new Map();
          for (const _0x40539c of _0x53c42c.d.params) {
            _0x15f13d.throwIfCancellationRequested(_0x31cdef);
            if (!_0x40539c.d.name || !!_0x40539c.d.annotation || !!_0x40539c.d.annotationComment || !!_0x40539c.d.defaultValue) {
              continue;
            }
            const _0x1a86c5 = _0x2ef383.findMatchingFixtures(_0x59b79e, _0x40539c, _0x4a5e00 => this._fixtureEquals(_0x4a5e00, _0x40539c.d.name.d.value), _0x31cdef);
            if (_0x1a86c5.length === 0) {
              continue;
            }
            const _0x2f9e57 = _0x1a86c5[0];
            const _0x1faaa3 = _0x5323ec.getFixtureType(_0x2ef383, _0x59b79e, _0x2f9e57, true, _0x31cdef);
            _0x9aef3b.set(_0x40539c, _0x1faaa3);
            const _0x2aefc5 = _0x469f74.convertOffsetToPosition(_0x5c2a8f.TextRange.getEnd(_0x40539c), _0x151f2c === null || _0x151f2c === undefined ? undefined : _0x151f2c.tokenizerOutput.lines);
            const _0x2536fa = _0x59b79e.printType(_0x1faaa3, {
              expandTypeAlias: true,
              enforcePythonSyntax: true
            });
            _0x792dbe.push({
              range: {
                start: _0x2aefc5,
                end: _0x2aefc5
              },
              replacementText: ` : ${_0x2536fa}`
            });
          }
          const _0x1a97c9 = _0x4411ed.addPath(`_chained_${_0x4efa55.SkipMarker}.py`);
          const _0x1b6d50 = _0x10fa0e.getSourceFileInfo(_0x4411ed);
          const _0x4f0525 = this._updateChainedFile(_0x10fa0e, _0x1b6d50, _0x9aef3b, _0x1a97c9, _0x31cdef);
          _0x10fa0e.setFileOpened(_0x1a97c9, 0, _0x4f0525, {
            chainedFileUri: (_0x5ec680 = _0x1b6d50.chainedSourceFile) === null || _0x5ec680 === undefined ? undefined : _0x5ec680.sourceFile.getUri(),
            ipythonMode: _0x1b6d50.sourceFile.getIPythonMode(),
            isTracked: false
          });
          _0x6bd530.applyChanges(_0x792dbe);
          _0x10fa0e.setFileOpened(_0x4411ed, _0x1b6d50.sourceFile.getClientVersion() ?? 0, _0x6bd530.currentDocument, {
            chainedFileUri: _0x1a97c9,
            ipythonMode: _0x1b6d50.sourceFile.getIPythonMode(),
            isTracked: _0x1b6d50.isTracked
          });
          _0x10fa0e.updateChainedUri(_0x4411ed, _0x1a97c9);
          return true;
        }
        _updateChainedFile(_0x4161ec, _0x352130, _0x4fde31, _0x2de1b4, _0x54de41) {
          var _0x531e95;
          const _0x408eb4 = '';
          _0x4161ec.setFileOpened(_0x2de1b4, 0, _0x408eb4, {
            chainedFileUri: (_0x531e95 = _0x352130.chainedSourceFile) === null || _0x531e95 === undefined ? undefined : _0x531e95.sourceFile.getUri(),
            ipythonMode: _0x352130.sourceFile.getIPythonMode(),
            isTracked: false
          });
          const _0x463daa = new _0x48952d.ImportAdder(_0x4161ec);
          _0x463daa.appendImportInfoForTypes(_0x352130.sourceFile.getUri(), [..._0x4fde31.entries()].map(_0x41ba95 => ({
            type: _0x41ba95[1],
            node: _0x41ba95[0].d.name
          })), _0x54de41);
          const _0x204a7e = _0x4161ec.getParseResults(_0x2de1b4);
          const _0x399b61 = _0x463daa.applyImports(_0x2de1b4, _0x204a7e, 0, 'absolute', _0x54de41);
          return _0x261b01.applyTextEditsToString(_0x399b61, _0x204a7e.tokenizerOutput.lines, _0x408eb4);
        }
        _fixtureEquals(_0xe803a7, _0x5d5dec) {
          return _0x5323ec.getFixtureName(_0xe803a7, true) === _0x5d5dec;
        }
        _tryGetFixtureFinder(_0x2ed422) {
          return _0x2ed422.serviceProvider.tryGet(_0x35f680.PylanceServiceKeys.fixtureFinder);
        }
        _tryGetContainingFunctionNode(_0x4c3c97, _0xcd3f2a, _0x9438ed) {
          const _0x385781 = _0x4c3c97.getParseResults(_0xcd3f2a);
          if (!_0x385781) {
            return undefined;
          }
          const _0x2bde26 = _0x469f74.convertPositionToOffset(_0x9438ed, _0x385781.tokenizerOutput.lines);
          if (!_0x2bde26) {
            return undefined;
          }
          const _0x203115 = _0x1a9f58.findNodeByOffset(_0x385781.parserOutput.parseTree, _0x2bde26);
          if (!_0x203115) {
            return undefined;
          }
          return this._tryGetModuleLevelFunctionNode(_0x203115);
        }
        _tryGetModuleLevelFunctionNode(_0xa3483b) {
          const _0x1757cc = _0x1a9f58.getEnclosingFunction(_0xa3483b);
          if (!_0x1757cc) {
            return undefined;
          }
          if (_0x1757cc.parent?.nodeType === 36) {
            return _0x1757cc;
          }
          return this._tryGetModuleLevelFunctionNode(_0x1757cc);
        }
      }
      exports.PyTestDocumentTransformer = _0x566e9f;
    },
    23169: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PyTestHoverProvider = undefined;
      const _0x583115 = require(28445);
      const _0x368cde = require(41557);
      const _0x289124 = require(21024);
      const _0xa9c924 = require(92324);
      const _0xc14662 = require(91426);
      const _0x525a46 = require(56814);
      const _0x57501b = require(88754);
      const _0x40c26e = require(79943);
      const _0x3ca1fa = require(39426);
      const _0x257346 = require(85114);
      const _0x4e77bb = require(30048);
      const _0x41d2b9 = require(34365);
      class _0x45519f {
        constructor(_0x12183d, _0x26ba98, _0x592dc9, _0x33f37a, _0x1f4f7e) {
          this._program = _0x12183d;
          this._fileUri = _0x26ba98;
          this._position = _0x592dc9;
          this._format = _0x33f37a;
          this._token = _0x1f4f7e;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._sourceMapper = this._program.getSourceMapper(this._fileUri, this._token, true);
          this._fixtureFinder = this._program.serviceProvider.tryGet(_0x4e77bb.PylanceServiceKeys.fixtureFinder);
        }
        getHover() {
          return _0x40c26e.convertHoverResults(this._getHoverResult(), this._format);
        }
        get _functionSignatureDisplay() {
          return this._program.configOptions.functionSignatureDisplay;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _getHoverResult() {
          _0xc14662.throwIfCancellationRequested(this._token);
          if (!this._parseResults) {
            return null;
          }
          const _0x1abd1d = _0x525a46.convertPositionToOffset(this._position, this._parseResults.tokenizerOutput.lines);
          if (_0x1abd1d === undefined) {
            return null;
          }
          const _0x3aa915 = _0x368cde.findNodeByOffset(this._parseResults.parserOutput.parseTree, _0x1abd1d);
          if (_0x3aa915 === undefined) {
            return null;
          }
          if (_0x3aa915.nodeType !== 38) {
            return null;
          }
          const _0x63d038 = this._tryGetDeclarations(_0x3aa915);
          if (_0x63d038.length === 0) {
            return null;
          }
          const _0x444ba6 = [];
          const _0x4ea3ba = _0x40c26e.HoverProvider.getPrimaryDeclaration(_0x63d038);
          this._addResultsForDeclaration(_0x444ba6, _0x4ea3ba, _0x3aa915);
          if (_0x444ba6.length === 0) {
            return null;
          }
          return {
            parts: _0x444ba6,
            range: {
              start: _0x525a46.convertOffsetToPosition(_0x3aa915.start, this._parseResults.tokenizerOutput.lines),
              end: _0x525a46.convertOffsetToPosition(_0x57501b.TextRange.getEnd(_0x3aa915), this._parseResults.tokenizerOutput.lines)
            }
          };
        }
        _addResultsForDeclaration(_0xcc15f8, _0x566437, _0x39dd57) {
          if (_0x583115.isParamDeclaration(_0x566437)) {
            this._addResultsForParameterDeclaration(_0xcc15f8, _0x566437, _0x39dd57);
            return;
          }
          if (_0x583115.isVariableDeclaration(_0x566437)) {
            this._addResultsForVariableDeclaration(_0xcc15f8, _0x566437, _0x39dd57);
            return;
          }
          if (_0x583115.isFunctionDeclaration(_0x566437)) {
            this._addResultsForFunctionDeclaration(_0xcc15f8, _0x566437, _0x39dd57);
            return;
          }
          if (_0x583115.isClassDeclaration(_0x566437)) {
            this._addResultsForClassDeclaration(_0xcc15f8, _0x566437, _0x39dd57);
            return;
          }
        }
        _addResultsForClassDeclaration(_0x1909f1, _0x1b9706, _0x4ee298) {
          const _0x2a5796 = _0x1b9706.node.d.name;
          this._addResultsPart(_0x1909f1, `(class) ${_0x2a5796.d.value}`, true);
          this._addDocumentationPart(_0x1909f1, _0x4ee298, _0x1b9706);
        }
        _addResultsForParameterDeclaration(_0x2188d3, _0x3956cb, _0x397b19) {
          if (_0x3956cb.inferredName === undefined || _0x3956cb.inferredTypeNodes === undefined) {
            return;
          }
          this._addResultsPart(_0x2188d3, `(parameter) ${_0x3956cb.inferredName}${this._getTypesText(_0x3956cb.inferredTypeNodes)}`, true);
          _0x40c26e.addParameterResultsPart(this._program.serviceProvider, _0x397b19, _0x3956cb, this._format, _0x2188d3);
          this._addDocumentationPart(_0x2188d3, _0x397b19, _0x3956cb);
        }
        _addResultsForVariableDeclaration(_0xa93734, _0x515d8e, _0x5a84fe) {
          let _0x6142dc = _0x5a84fe;
          let _0x10bfd6 = this._getType(_0x6142dc);
          if (_0x289124.isUnknown(_0x10bfd6) && _0x515d8e.alternativeTypeNode && _0x257346.isExpressionNode(_0x515d8e.alternativeTypeNode)) {
            const _0x4dbb34 = this._getType(_0x515d8e.alternativeTypeNode);
            if (!_0x289124.isUnknown(_0x4dbb34)) {
              _0x10bfd6 = _0x4dbb34;
              _0x6142dc = _0x515d8e.alternativeTypeNode;
            }
          }
          const _0x273085 = _0x40c26e.getVariableTypeText(this._evaluator, _0x515d8e, _0x5a84fe.d.value, _0x10bfd6, _0x6142dc, this._functionSignatureDisplay);
          this._addResultsPart(_0xa93734, _0x273085, true);
          this._addDocumentationPart(_0xa93734, _0x5a84fe, _0x515d8e);
        }
        _addResultsForFunctionDeclaration(_0x29555b, _0x195d30, _0x14a559) {
          const _0x455db7 = this._tryGetFunctionNodeType(_0x195d30.node);
          if (!_0x455db7) {
            return;
          }
          let _0x133e61 = 'function';
          let _0x4e572f = false;
          if (_0x195d30.isMethod) {
            const _0x38ad07 = this._evaluator.getTypeForDeclaration(_0x195d30)?.type;
            _0x4e572f = !!_0x38ad07 && _0xa9c924.isMaybeDescriptorInstance(_0x38ad07, false);
            _0x133e61 = _0x4e572f ? 'property' : 'method';
          }
          const _0x40ce41 = _0x3ca1fa.getToolTipForType(_0x455db7, _0x133e61, _0x14a559.d.value, this._evaluator, _0x4e572f, this._functionSignatureDisplay);
          this._addResultsPart(_0x29555b, _0x40ce41, true);
          this._addDocumentationPart(_0x29555b, _0x14a559, _0x195d30);
        }
        _addDocumentationPart(_0x1ae1b7, _0x3bd2be, _0x1fe3a5) {
          const _0xc1cfcd = this._getType(_0x3bd2be);
          this._addDocumentationPartForType(_0x1ae1b7, _0xc1cfcd, _0x1fe3a5, _0x3bd2be.d.value);
        }
        _addDocumentationPartForType(_0x2da023, _0x11bdc0, _0xfab4ab, _0x221937) {
          const _0x389b5d = _0x3ca1fa.getDocumentationPartsForTypeAndDecl(this._sourceMapper, _0x11bdc0, _0xfab4ab, this._evaluator, {
            name: _0x221937
          });
          _0x40c26e.addDocumentationResultsPart(this._program.serviceProvider, _0x389b5d, this._format, _0x2da023, _0xfab4ab);
          return !!_0x389b5d;
        }
        _addResultsPart(_0x50371, _0x5991c2, _0x5d77cf = false) {
          _0x50371.push({
            python: _0x5d77cf,
            text: _0x5991c2
          });
        }
        _getTypesText(_0x3c6d01, _0x2feecb) {
          const _0x5a23d6 = _0x3ca1fa.combineExpressionTypes(_0x3c6d01, this._evaluator);
          return `: ${this._evaluator.printType(_0x5a23d6, _0x2feecb)}`;
        }
        _getType(_0x5e25ed) {
          return _0x3ca1fa.getTypeForToolTip(this._evaluator, _0x5e25ed);
        }
        _tryGetFunctionNodeType(_0x4a9a52) {
          if (this._fixtureFinder && this._fixtureFinder.isFixtureFunction(this._evaluator, _0x4a9a52)) {
            return _0x41d2b9.getFixtureType(this._fixtureFinder, this._evaluator, _0x4a9a52, false, this._token);
          }
          return undefined;
        }
        _tryGetDeclarations(_0x2338c9) {
          if (!this._fixtureFinder) {
            return [];
          }
          return this._fixtureFinder.tryGetDeclarations(_0x2338c9, _0x2338c9.start, this._token);
        }
      }
      exports.PyTestHoverProvider = _0x45519f;
    },
    22985: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PytestQueryEngine = undefined;
      const _0x57e760 = require(56911);
      const _0x3dccaf = require(91426);
      const _0x52a690 = require(30371);
      const _0x2c8a7c = /Python classes: \[(.*?)\]/;
      const _0xe27270 = /Python files: \[(.*?)\]/;
      const _0x3e62e9 = /Python functions: \[(.*?)\]/;
      class _0x4af1ee {
        constructor() {
          this._cancelSource = new _0x57e760.CancellationTokenSource();
        }
        async getOptions(_0x4240c4, _0x49245b, _0x2bc1ea, _0x411d1d, _0x1ba02d) {
          this._cancelSource.cancel();
          const _0x23ff98 = _0x52a690.getBundledFilesPath(_0x49245b.getModulePath()).combinePaths('get_pytest_options.py');
          let _0x167855 = 'default';
          let _0x1c692e = ['Test'];
          let _0x3b9fbe = ['test_*.py', '*_test.py'];
          let _0x5412b8 = ['test'];
          const _0x2fe7f8 = this._getExtraArgs(_0x411d1d);
          this._cancelSource = new _0x57e760.CancellationTokenSource();
          const _0x2b1f40 = setTimeout(() => this._cancelSource.cancel(), _0x1ba02d);
          try {
            const _0x5b9162 = await _0x3dccaf.raceCancellation(this._cancelSource.token, _0x4240c4.runScript(_0x411d1d.pythonPath, _0x23ff98, _0x2fe7f8, _0x2bc1ea, _0x57e760.CancellationToken.None));
            if (!_0x5b9162) {
              throw new _0x3dccaf.OperationCanceledException();
            }
            const _0xc2c2c4 = _0x5b9162.stdout.split('\n');
            _0xc2c2c4.forEach(_0x245fff => {
              const _0x11cccf = _0x245fff.trim();
              const _0x17f754 = _0x2c8a7c.exec(_0x11cccf);
              const _0x2e22bb = _0xe27270.exec(_0x11cccf);
              const _0x2737a2 = _0x3e62e9.exec(_0x11cccf);
              if (_0x17f754) {
                _0x1c692e = _0x17f754[1].replace(/'/g, '').split(',').map(_0x4e0425 => _0x4e0425.trim());
              } else {
                if (_0x2e22bb) {
                  _0x3b9fbe = _0x2e22bb[1].replace(/'/g, '').split(',').map(_0x41e582 => _0x41e582.trim());
                } else {
                  if (_0x2737a2) {
                    _0x5412b8 = _0x2737a2[1].replace(/'/g, '').split(',').map(_0x5487b2 => _0x5487b2.trim());
                  }
                }
              }
            });
            _0x167855 = 'script';
          } catch (_0x421c1d) {
            _0x167855 = _0x421c1d.message;
          } finally {
            clearTimeout(_0x2b1f40);
          }
          return {
            message: _0x167855,
            classes: _0x1c692e,
            files: _0x3b9fbe,
            functions: _0x5412b8
          };
        }
        _getExtraArgs(_0x3eab43) {
          const _0x148e58 = [];
          if (Array.isArray(_0x3eab43.testing?.pytestArgs)) {
            _0x148e58.push(..._0x3eab43.testing?.pytestArgs);
          }
          return _0x148e58;
        }
      }
      exports.PytestQueryEngine = _0x4af1ee;
    },
    27651: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AsyncNotebookManager = undefined;
      const _0x12d71d = require(55890);
      const _0x3f3b18 = require(53266);
      const _0x47bd8f = __importStar(require(48281));
      const _0x56e1db = require(51507);
      const _0x32374c = require(71745);
      const _0x25e570 = require(27113);
      const _0x2a59a7 = require(30741);
      const _0x5f5d39 = require(93980);
      const _0x52621c = require(24122);
      const _0x484e9b = require(44889);
      const _0x3e17e7 = require(30048);
      const _0x56e7ee = require(95349);
      const _0x24fb08 = require(8398);
      class _0x3ae305 {
        constructor(_0x12035b, _0xad75cf, _0x5dae49, _0x4ceb68, _0x357471, _0x561fa2) {
          this._connection = _0x12035b;
          this._serviceProvider = _0xad75cf;
          this._workspaceFactory = _0x5dae49;
          this._getConfiguration = _0x4ceb68;
          this._waitForClientResponse = _0x357471;
          this._testing = _0x561fa2;
          this._eventQueue = new _0x5f5d39.Sequencer();
          this._notebookMap = new Map();
        }
        async getNotebookDataForPythonPath(_0x440d86) {
          const _0xc8987c = await Promise.all([...this._notebookMap.values()]);
          return _0xc8987c.find(_0x385725 => _0x385725.pythonPath === _0x440d86);
        }
        async getNotebookDataForCell(_0x39f040) {
          _0x47bd8f.assert(_0x484e9b.NotebookUriMapper.isNotebookCell(_0x39f040));
          const _0x367c6a = this._uriMapper.getNotebookUriFromCell(_0x39f040);
          return await this._getNotebookData(_0x367c6a);
        }
        onDidOpenNotebookDocument(_0x379496) {
          const _0xd5f47a = this._uriMapper.parseNotebookOpen(_0x379496);
          const _0x37eb4d = this._chainNotebookData(_0xd5f47a);
          this._eventQueue.queue(async () => {
            let _0xd49e9b = await _0x37eb4d.old;
            try {
              const _0x26228b = this._workspaceFactory.getContainingWorkspace(_0xd5f47a);
              const _0x4451aa = await this._getPythonInformation(_0xd5f47a, _0x26228b?.rootUri);
              const _0x482c61 = await this._getNotebookPrefixCellContents(_0x26228b);
              _0xd49e9b = _0x24fb08.createNotebookData(_0xd5f47a, _0x379496.cellTextDocuments, this._uriMapper, this._caseSensitivityDetector, _0x482c61, _0x4451aa?.pythonPath || _0x25e570.Uri.empty(), _0x4451aa?.pythonEnvironmentName);
              const _0x31de66 = await this._getNotebookWorkspace(_0xd49e9b.prefixCellUri, _0xd49e9b.pythonPath);
              _0x24fb08.openNotebookCellChain(_0x379496.cellTextDocuments, _0xd49e9b, this._uriMapper, _0x31de66);
              _0x24fb08.verifyCellChainIsLinear(_0xd49e9b, _0x31de66);
              _0x52621c.getBackgroundAnalysisProgram(_0x31de66).setNotebookData({
                kind: 'open',
                fileUri: _0xd5f47a,
                data: _0xd49e9b
              });
            } finally {
              _0x37eb4d.new.resolve(_0xd49e9b);
            }
            if (this._testing) {
              _0x56e7ee.CustomLSP.sendNotification(this._connection, _0x56e7ee.CustomLSP.Notifications.TestSignal, {
                uri: _0x379496.notebookDocument.uri,
                kind: _0x56e7ee.CustomLSP.TestSignalKinds.DidOpenNotebookDocument
              });
            }
          });
        }
        onDidChangeNotebookDocument(_0x1c3fe8) {
          this._recordUserInteractionTime();
          const _0x2e9327 = this._uriMapper.parseNotebookChange(_0x1c3fe8);
          if (this._notebookMap.get(_0x2e9327.key) === undefined) {
            _0x47bd8f.fail(`Notebook was never opened but we got a change event for it (${_0x2e9327})`);
          }
          const _0x489077 = this._chainNotebookData(_0x2e9327);
          this._eventQueue.queue(async () => {
            var _0x40f2ed;
            var _0x2bdc7c;
            var _0xaae9f5;
            const _0x43659c = await _0x489077.old;
            try {
              let _0x241fde = await this._getNotebookWorkspace(_0x43659c.prefixCellUri, _0x43659c.pythonPath);
              if (_0x24fb08.isNotebookKernelChange(_0x1c3fe8)) {
                const _0x115aab = await this._getPythonInformation(_0x2e9327, _0x241fde.rootUri);
                _0x43659c.pythonPath = _0x115aab?.pythonPath || _0x43659c.pythonPath;
                _0x43659c.pythonEnvironmentName = _0x115aab?.pythonEnvironmentName;
                const _0x5431e8 = await this._getNotebookWorkspace(_0x43659c.prefixCellUri, _0x115aab?.pythonPath);
                if ((_0x5431e8.pythonPath || _0x241fde.pythonPath) && !((_0x40f2ed = _0x5431e8.pythonPath) === null || _0x40f2ed === undefined ? undefined : _0x40f2ed.equals(_0x241fde.pythonPath)) || (_0x5431e8.rootUri || _0x241fde.rootUri) && !((_0x2bdc7c = _0x5431e8.rootUri) === null || _0x2bdc7c === undefined ? undefined : _0x2bdc7c.equals(_0x241fde.rootUri))) {
                  if (_0x43659c) {
                    const _0x3fc7f9 = [_0x43659c.prefixCellUri, ..._0x43659c.mappedCellUris];
                    this._workspaceFactory.moveFiles(_0x3fc7f9, _0x241fde, _0x5431e8);
                  }
                  _0x241fde = _0x5431e8;
                }
                _0x241fde.pythonEnvironmentName = _0x115aab?.pythonEnvironmentName;
              }
              if (_0x1c3fe8.change.cells?.structure) {
                const _0x50a545 = _0x1c3fe8.change.cells.structure;
                _0x24fb08.updateNotebookStructure(_0x50a545, _0x43659c, this._uriMapper, _0x241fde);
              }
              if ((_0xaae9f5 = _0x1c3fe8.change.cells?.textContent) === null || _0xaae9f5 === undefined) {
                undefined;
              } else {
                _0xaae9f5.forEach(_0x386de1 => {
                  var _0x184cb2;
                  const _0x5cdca4 = this._uriMapper.getMappedCellUri(_0x25e570.Uri.parse(_0x386de1.document.uri, this._caseSensitivityDetector));
                  const _0x585482 = ((_0x184cb2 = _0x241fde.service.getSourceFile(_0x5cdca4)) === null || _0x184cb2 === undefined ? undefined : _0x184cb2.getFileContent()) || '';
                  const _0x16f06c = _0x12d71d.TextDocument.create(_0x386de1.document.uri, 'python', _0x386de1.document.version - 1, _0x585482);
                  _0x12d71d.TextDocument.update(_0x16f06c, _0x386de1.changes, _0x386de1.document.version);
                  _0x241fde.service.updateOpenFileContents(_0x5cdca4, _0x386de1.document.version, _0x16f06c.getText(), _0x3f3b18.IPythonMode.CellDocs);
                });
              }
              _0x52621c.getBackgroundAnalysisProgram(_0x241fde).setNotebookData({
                kind: 'change',
                fileUri: _0x2e9327,
                data: _0x43659c
              });
            } finally {
              _0x489077.new.resolve(_0x43659c);
            }
            if (this._testing) {
              _0x56e7ee.CustomLSP.sendNotification(this._connection, _0x56e7ee.CustomLSP.Notifications.TestSignal, {
                uri: _0x1c3fe8.notebookDocument.uri,
                kind: _0x56e7ee.CustomLSP.TestSignalKinds.DidChangeNotebookDocument
              });
            }
          });
        }
        onDidCloseNotebookDocument(_0x40aca4) {
          const _0x3935f0 = this._uriMapper.parseNotebookClose(_0x40aca4);
          const _0x1235a2 = this._chainNotebookData(_0x3935f0);
          this._eventQueue.queue(async () => {
            const _0x244771 = await _0x1235a2.old;
            try {
              const _0x9efb41 = await this._getNotebookWorkspace(_0x244771.prefixCellUri, _0x244771.pythonPath);
              const _0x4a3382 = [_0x244771.prefixCellUri, ..._0x244771.mappedCellUris];
              _0x4a3382.forEach(_0x52df08 => {
                _0x9efb41.service.setFileClosed(_0x52df08, false);
              });
              this._workspaceFactory.removeUnused(_0x9efb41);
              const _0x8ff080 = this._notebookMap.get(_0x3935f0.key);
              if (_0x8ff080 === _0x1235a2.continuation) {
                this._notebookMap.delete(_0x3935f0.key);
              }
              _0x52621c.getBackgroundAnalysisProgram(_0x9efb41).setNotebookData({
                kind: 'close',
                fileUri: _0x3935f0,
                data: _0x244771
              });
            } finally {
              _0x1235a2.new.resolve(_0x244771);
            }
          });
        }
        test_getNotebookData(_0x4e0786) {
          return this._getNotebookData(_0x4e0786);
        }
        get _console() {
          return this._serviceProvider.console();
        }
        get _uriMapper() {
          return this._serviceProvider.uriMapper();
        }
        get _caseSensitivityDetector() {
          return this._serviceProvider.get(_0x32374c.ServiceKeys.caseSensitivityDetector);
        }
        _getNotebookData(_0x520948) {
          const _0x33b74b = this._notebookMap.get(_0x520948.key);
          if (_0x33b74b) {
            return _0x33b74b;
          } else {
            return Promise.resolve(undefined);
          }
        }
        _recordUserInteractionTime() {
          this._workspaceFactory.items().forEach(_0x48ac80 => {
            _0x48ac80.service.recordUserInteractionTime();
          });
        }
        async _getNotebookWorkspace(_0x182be7, _0x531451) {
          if (_0x531451 === undefined && _0x484e9b.NotebookUriMapper.isNotebookCell(_0x182be7)) {
            const _0x284eb4 = await this.getNotebookDataForCell(_0x182be7);
            _0x531451 = _0x284eb4?.pythonPath;
          }
          if (this._waitForClientResponse) {
            await _0x56e7ee.CustomLSP.sendRequest(this._connection, _0x56e7ee.CustomLSP.Requests.Wait, {
              timeout: 5000
            });
          }
          return this._workspaceFactory.getWorkspaceForFile(_0x182be7, _0x531451);
        }
        _chainNotebookData(_0x337312) {
          const _0x3e6086 = this._notebookMap.get(_0x337312.key) || Promise.resolve({
            notebookUri: _0x337312,
            mappedCellUris: [],
            prefixCellContents: '',
            prefixCellUri: _0x484e9b.NotebookUriMapper.getNotebookPrefixUri(_0x337312),
            pythonPath: undefined,
            pythonEnvironmentName: undefined,
            operations: ['updated']
          });
          const _0x1d1ce4 = _0x56e1db.createDeferred();
          const _0x56a973 = _0x3e6086.then(() => _0x1d1ce4.promise);
          this._notebookMap.set(_0x337312.key, _0x56a973);
          return {
            old: _0x3e6086,
            new: _0x1d1ce4,
            continuation: _0x56a973
          };
        }
        async _getNotebookPrefixCellContents(_0x34cd3c) {
          const _0x26369f = _0x34cd3c ? await this._getSettings(_0x34cd3c) : undefined;
          return _0x24fb08.getPrefixCellContents(_0x26369f);
        }
        async _getPythonInformation(_0x3b6ea2, _0x2fdf2f) {
          const _0x46a8fd = await this._getConfiguration(_0x3b6ea2, _0x24fb08.Settings.pythonSectionName);
          const _0x3c764e = this._workspaceFactory.getNonDefaultWorkspaces(_0x2a59a7.WellKnownWorkspaceKinds.Regular);
          return _0x24fb08.getPythonInformation(_0x2fdf2f, _0x46a8fd, this._caseSensitivityDetector, _0x3c764e);
        }
        async _getSettings(_0x46a6e9) {
          const _0x48033e = {};
          try {
            const _0xc24dff = this._workspaceFactory.getNonDefaultWorkspaces(_0x2a59a7.WellKnownWorkspaceKinds.Regular);
            const _0xe7ec7a = await this._getConfiguration(_0x46a6e9.rootUri, _0x24fb08.Settings.pythonSectionName);
            if (_0xe7ec7a) {
              _0x24fb08.updatePythonSection(_0x48033e, _0x46a6e9, _0xe7ec7a, _0xc24dff);
            }
            const _0x8731a8 = await this._getConfiguration(_0x46a6e9.rootUri, _0x24fb08.Settings.pythonAnalysisSectionName);
            if (_0x8731a8) {
              _0x24fb08.updatePylanceSection(_0x48033e, _0x46a6e9, _0x8731a8, _0xc24dff);
            }
            const _0x42caf4 = await this._getConfiguration(_0x46a6e9.rootUri, _0x24fb08.Settings.jupyterSectionName);
            if (_0x42caf4) {
              _0x24fb08.updateJupyterSection(_0x48033e, _0x46a6e9, _0x42caf4);
            }
          } catch (_0x51bf3d) {
            this._console.error(`Error reading settings: ${_0x51bf3d}`);
          }
          const _0x4f29e0 = this._serviceProvider.get(_0x3e17e7.PylanceServiceKeys.settingTransformer).transformSettings(_0x48033e, _0x46a6e9);
          this._console.log(`Notebook settings returned for workspace: ${_0x46a6e9.rootUri}: ${JSON.stringify(_0x4f29e0, null, 2)}`);
          return _0x4f29e0;
        }
      }
      exports.AsyncNotebookManager = _0x3ae305;
    },
    6452: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceAsyncServer = undefined;
      exports.getProgressReporter = _0x860997;
      const _0x4ebd39 = require(56911);
      const _0x58eedf = require(16259);
      const _0x863136 = require(33970);
      const _0x126420 = require(91426);
      const _0x1537f5 = require(58147);
      const _0x4d298b = require(25075);
      const _0x386319 = __importStar(require(48281));
      const _0x2d0f74 = require(56412);
      const _0x59b8f5 = require(30442);
      const _0x57adf3 = require(71745);
      const _0x40e989 = require(27113);
      const _0x58b432 = require(30741);
      const _0x529f41 = require(67299);
      const _0x23901a = require(93980);
      const _0x417bec = require(54700);
      const _0x1be200 = require(24122);
      const _0x220d4f = require(22669);
      const _0x14213c = require(48536);
      const _0x3ebc76 = require(44889);
      const _0x165141 = require(30371);
      const _0x414088 = require(30048);
      const _0xe33297 = require(69482);
      const _0x12f4ff = require(95349);
      const _0x1fe651 = require(83244);
      const _0x5685df = require(89750);
      const _0x5dd6df = require(21368);
      const _0x5e288b = require(46154);
      const _0x125e16 = require(39545);
      const _0x429dd4 = require(83329);
      const _0x49266a = require(27651);
      const _0x2e6213 = require(8398);
      const _0x5af334 = require(33595);
      async function _0x860997(_0xfa131a, _0x3cfe96, _0x2a9285, _0x470b89, _0x28974d) {
        if (!_0x2d0f74.isNullProgressReporter(_0x2a9285)) {
          return {
            reporter: _0x2a9285,
            source: _0x126420.CancelAfter(_0x3cfe96, _0x28974d)
          };
        }
        const _0x3519fe = await _0xfa131a.window.createWorkDoneProgress();
        _0x3519fe.begin(_0x470b89, undefined, undefined, true);
        return {
          reporter: _0x3519fe,
          source: _0x126420.CancelAfter(_0x3cfe96, _0x28974d, _0x3519fe.token)
        };
      }
      class _0x40fb42 {
        constructor(_0x2fea1b, _0x2001ca) {
          this._connection = _0x2001ca;
          this._initialized = false;
          this._disposed = false;
          this._documentsWithDiagnostics = new Set();
          this._diagnosticReporterQueue = new _0x23901a.Sequencer();
          this._languageService = new _0x5af334.LanguageService(_0x2fea1b);
          this.console.info(_0x2fea1b.productName + ' language server ' + (_0x2fea1b.version && _0x2fea1b.version + ' ') + 'starting');
          this._workspaceFactory = new _0x429dd4.PylanceWorkspaceFactory(this.console, false, this._createAnalyzerServiceForWorkspace.bind(this), this._isPythonPathImmutable.bind(this), this._onWorkspaceCreated.bind(this), this._onWorkspaceRemoved.bind(this), this.serviceProvider);
          this._setupConnection(_0x2fea1b.supportedCommands ?? [], _0x2fea1b.supportedCodeActions ?? []);
          this._progressReporter = new _0x59b8f5.ProgressReportTracker(this._languageService.createProgressReporter(this._connection));
          this._languageService.initialize({
            getWorkspaceForFile: this.getWorkspaceForFile.bind(this),
            getWorkspaces: () => this._workspaceFactory.items(),
            getProgressReporter: (_0x246974, _0xa2ef16, _0x3f1212) => _0x860997(this._connection, this._serverOptions.cancellationProvider, _0x246974, _0xa2ef16, _0x3f1212),
            executeCommand: this._executeCommand.bind(this),
            isLongRunningCommand: this._isLongRunningCommand.bind(this),
            isRefactoringCommand: this._isRefactoringCommand.bind(this),
            applyWorkspaceEdit: this._connection.workspace.applyEdit.bind(this._connection.workspace)
          });
          this._analysisTracker = new _0x5e288b.AnalysisTracker();
          this._controller = new _0x529f41.AsyncCommandController(this, this._intelliCode, this._telemetry, !!this._state.serverOptions.hasVSCodeExtension);
          this._notebookManager = new _0x49266a.AsyncNotebookManager(_0x2001ca, this._serverOptions.serviceProvider, this._workspaceFactory, this._getConfiguration.bind(this), this._serverOptions.waitForClientResponse ?? false, this._serverOptions.testing ?? false);
          this._connection.listen();
        }
        get console() {
          return this._serverOptions.serviceProvider.console();
        }
        get window() {
          return this._connection.window;
        }
        get client() {
          return this._state.client;
        }
        get supportAdvancedEdits() {
          return this.client.hasDocumentChangeCapability && this.client.hasDocumentAnnotationCapability;
        }
        get serviceProvider() {
          return this._serverOptions.serviceProvider;
        }
        createBackgroundAnalysis(_0x859148) {
          var _0x21d573;
          if (!_0x126420.getCancellationFolderName() && !this._serverOptions.testing) {
            return undefined;
          }
          if ((_0x21d573 = this.serviceProvider.tryGet(_0x414088.PylanceServiceKeys.backgroundAnalysisFactory)) === null || _0x21d573 === undefined) {
            return undefined;
          } else {
            return _0x21d573.createBackgroundAnalysis(_0x859148);
          }
        }
        reanalyze() {
          this._languageService.reanalyze();
        }
        restart() {
          this._languageService.restart();
        }
        async getWorkspaces() {
          const _0x1b9353 = this._workspaceFactory.items();
          for (const _0x3c188d of _0x1b9353) {
            await _0x3c188d.isInitialized.promise;
          }
          return _0x1b9353;
        }
        async getWorkspaceForFile(_0x595280, _0x579fbd) {
          if (_0x3ebc76.NotebookUriMapper.isNotebookFile(_0x595280)) {
            _0x386319.fail(`Notebook file should not be passed to getWorkspaceForFile: ${_0x595280}`);
          }
          if (_0x579fbd === undefined && _0x3ebc76.NotebookUriMapper.isNotebookCell(_0x595280)) {
            const _0x1da38c = await this._notebookManager.getNotebookDataForCell(_0x595280);
            _0x579fbd = _0x1da38c?.pythonPath;
          }
          if (this._serverOptions.waitForClientResponse) {
            await _0x12f4ff.CustomLSP.sendRequest(this._connection, _0x12f4ff.CustomLSP.Requests.Wait, {
              timeout: 5000
            });
          }
          return await this._workspaceFactory.getWorkspaceForFile(_0x595280, _0x579fbd);
        }
        async getSettings(_0x1f0bf9) {
          const _0x295470 = await this._getConfiguration(_0x1f0bf9.rootUri, _0x2e6213.Settings.pythonSectionName);
          let _0x1cfd65 = await this._getConfiguration(_0x1f0bf9.rootUri, _0x2e6213.Settings.pythonAnalysisSectionName);
          const _0x2608ca = await this._getConfiguration(_0x1f0bf9.rootUri, _0x2e6213.Settings.jupyterSectionName);
          const _0x2ed2a1 = await this._getConfiguration(_0x1f0bf9.rootUri, _0x2e6213.Settings.editorSectionName);
          const _0x52e3fe = await this._inExperiment('copilotImplementAbstractClasses');
          const _0x5e0461 = _0x1cfd65?.aiCodeActions?.implementAbstractClasses !== undefined;
          if (!_0x1cfd65) {
            _0x1cfd65 = {};
          }
          if (!_0x1cfd65.aiCodeActions) {
            _0x1cfd65.aiCodeActions = {};
          }
          if (!_0x5e0461 && _0x52e3fe !== undefined) {
            _0x1cfd65.aiCodeActions.implementAbstractClasses = _0x52e3fe;
          }
          const _0x3ce5c5 = this._languageService.handleSettings(this._workspaceFactory.getNonDefaultWorkspaces(_0x58b432.WellKnownWorkspaceKinds.Regular), _0x1f0bf9, _0x295470, _0x1cfd65, _0x2608ca, _0x2ed2a1);
          this._state.hostKind = await this._getHostKind();
          return _0x3ce5c5;
        }
        test_getNotebookData(_0x5ac822) {
          return this._notebookManager.test_getNotebookData(_0x5ac822);
        }
        test_onDidChangeWatchedFiles(_0x112af1) {
          this._languageService.handleDidChangeWatchedFiles(_0x112af1);
        }
        test_convertDiagnostics(_0x3317f7) {
          return this._languageService.convertDiagnostics(this._fs, _0x3317f7);
        }
        dispose() {
          var _0x5f3a60;
          this._disposed = true;
          this._workspaceFactory.clear();
          this._documentsWithDiagnostics.clear();
          if ((_0x5f3a60 = this._workspaceFoldersChangedDisposable) === null || _0x5f3a60 === undefined) {
            undefined;
          } else {
            _0x5f3a60.dispose();
          }
          this._languageService.dispose();
        }
        get _fs() {
          return this.serviceProvider.fs();
        }
        get _state() {
          return this._languageService.state;
        }
        get _serverOptions() {
          return this._state.serverOptions;
        }
        get _caseSensitiveDetector() {
          return this.serviceProvider.get(_0x57adf3.ServiceKeys.caseSensitivityDetector);
        }
        get _uriMapper() {
          return this.serviceProvider.uriMapper();
        }
        get _telemetry() {
          return this.serviceProvider.get(_0x414088.PylanceServiceKeys.telemetry);
        }
        get _intelliCode() {
          return this.serviceProvider.tryGet(_0x414088.PylanceServiceKeys.intelliCode);
        }
        async _getContainingWorkspacesForFile(_0x5f03ea) {
          if (_0x3ebc76.NotebookUriMapper.isNotebookCell(_0x5f03ea)) {
            await this._notebookManager.getNotebookDataForCell(_0x5f03ea);
          }
          return this._workspaceFactory.getContainingWorkspacesForFile(_0x5f03ea);
        }
        _updateSettingsForAllWorkspaces() {
          const _0x580abf = [];
          this._workspaceFactory.items().forEach(_0x431a6e => {
            _0x431a6e.isInitialized = _0x431a6e.isInitialized.reset();
            _0x580abf.push(this._updateSettingsForWorkspace(_0x431a6e, _0x431a6e.isInitialized));
          });
          Promise.all(_0x580abf).then(() => {
            this._languageService.registerDynamicFeatures();
          });
          if (this._state.client.hasInlayHintRefreshCapability) {
            this._connection.sendRequest(_0x4ebd39.InlayHintRefreshRequest.method).ignoreErrors();
          }
        }
        _createAnalyzerService(_0x1066b2, _0x2b63fa, _0x2e69c3) {
          this.console.info(`Starting service instance "${_0x1066b2}"`);
          const _0x1dd0cb = _0x863136.getNextServiceId(_0x1066b2);
          const _0x59529d = new _0x125e16.PylanceAnalyzerService(_0x1066b2, this.serviceProvider, {
            console: this.console,
            hostFactory: this._createHost.bind(this),
            importResolverFactory: this._createImportResolver.bind(this),
            backgroundAnalysis: _0x2b63fa ? _0x2b63fa.backgroundAnalysis : this.createBackgroundAnalysis(_0x1dd0cb),
            maxAnalysisTime: this._serverOptions.maxAnalysisTimeInForeground,
            backgroundAnalysisProgramFactory: this._createBackgroundAnalysisProgram.bind(this),
            cancellationProvider: this._serverOptions.cancellationProvider,
            libraryReanalysisTimeProvider: _0x2e69c3,
            serviceId: _0x1dd0cb,
            fileSystem: _0x2b63fa?.fs ?? this._serverOptions.serviceProvider.fs()
          }, this._connection);
          return _0x59529d;
        }
        _createAnalyzerServiceForWorkspace(_0x489c66, _0x4fe3cc, _0x127b80, _0x56a68b) {
          if (!_0x56a68b && _0x127b80.includes(_0x58b432.WellKnownWorkspaceKinds.Limited)) {
            this.console.info(`virtual workspace: ${_0x4fe3cc}`);
            const _0x123b4f = [];
            _0x417bec.AddIfNotNull(_0x123b4f, _0x58eedf.getTypeShedFallbackPath(this._fs));
            _0x417bec.AddIfNotNull(_0x123b4f, _0x165141.getBundledTypeStubsPath(this._fs.getModulePath()));
            _0x417bec.AddIfNotNull(_0x123b4f, _0x165141.getBundledNativeStubsPath(this._fs.getModulePath()));
            const _0x31dcfe = new _0x14213c.LimitedFileSystem(_0x4fe3cc, _0x123b4f, this._serverOptions.serviceProvider.fs());
            _0x56a68b = {
              fs: _0x31dcfe,
              backgroundAnalysis: undefined
            };
          }
          const _0x449a39 = _0x220d4f.createReanalysisTimeProviderFromWorkspace(this._workspaceFactory, _0x127b80);
          return this._createAnalyzerService(_0x489c66, _0x56a68b, _0x449a39);
        }
        async _updateSettingsForWorkspace(_0x4639f7, _0x3f191e, _0x204564) {
          var _0xccbb9c;
          var _0xf4365c;
          try {
            if (_0x3f191e === null || _0x3f191e === undefined) {
              undefined;
            } else {
              _0x3f191e.markCalled();
            }
            _0x204564 = _0x204564 ?? (await this.getSettings(_0x4639f7));
            _0x2e6213.addPylanceProgramServices(_0x4639f7, _0x204564);
            _0x4639f7.pythonEnvironmentName = _0x204564.pythonEnvironmentName;
            this.console.level = _0x204564.logLevel ?? _0x4d298b.LogLevel.Info;
            _0x204564.pythonPath = this._workspaceFactory.applyPythonPath(_0x4639f7, _0x204564.pythonPath ? _0x204564.pythonPath : undefined);
            this._languageService.updateDynamicFeatures(_0x204564);
            this._languageService.updateOptionsAndRestartService(_0x4639f7, _0x204564);
          } finally {
            if (_0x3f191e === null || _0x3f191e === undefined) {
              undefined;
            } else {
              _0x3f191e.resolve();
            }
          }
          _0x4639f7.pythonEnvironmentName = await this._computeWorkspaceEnvironmentName(_0x4639f7, _0x204564.pythonEnvironmentName);
          this._languageService.handleUpdateSettingsForWorkspace(_0x4639f7, _0x204564, this._workspaceFactory);
          if (_0x4639f7.disableLanguageServices) {
            return;
          }
          _0x1be200.getBackgroundAnalysisProgram(_0x4639f7).startIndexing(_0x4639f7.indexOptions ?? _0x1be200.getEmptyIndexOptions());
          if (_0x4639f7.kinds.some(_0x1f736d => _0x1f736d === _0x58b432.WellKnownWorkspaceKinds.Limited) && _0x4639f7.service.fs instanceof _0x14213c.LimitedFileSystem) {
            _0x4639f7.service.fs.setAllowedRoots((_0xccbb9c = _0x58eedf.findPythonSearchPaths(this._fs, _0x4639f7.service.getConfigOptions(), _0x4639f7.service.getImportResolver().host, [])) === null || _0xccbb9c === undefined ? undefined : _0xccbb9c.map(_0x149d5e => _0x4639f7.service.fs.realCasePath(_0x149d5e)));
          }
          if (this._serverOptions.testing) {
            _0x12f4ff.CustomLSP.sendNotification(this._connection, _0x12f4ff.CustomLSP.Notifications.TestSignal, {
              uri: ((_0xf4365c = _0x4639f7.rootUri) === null || _0xf4365c === undefined ? undefined : _0xf4365c.toString()) ?? '',
              kind: _0x12f4ff.CustomLSP.TestSignalKinds.Initialization
            });
          }
        }
        _isPythonPathImmutable(_0x454c2a) {
          return _0x3ebc76.NotebookUriMapper.isNotebookCell(_0x454c2a);
        }
        async _getConfiguration(_0x40fab7, _0x2adb1a) {
          if (this.client.hasConfigurationCapability) {
            const _0x54f67e = {};
            if (_0x40fab7 !== undefined) {
              _0x54f67e.scopeUri = _0x40fab7.toString();
            }
            if (_0x2adb1a !== undefined) {
              _0x54f67e.section = _0x2adb1a;
            }
            return this._connection.workspace.getConfiguration(_0x54f67e);
          }
          if (this._defaultClientConfig) {
            return _0x1537f5.getNestedProperty(this._defaultClientConfig, _0x2adb1a);
          }
          return undefined;
        }
        _setupConnection(_0x5b5fc8, _0x2f52cd) {
          this._languageService.addDisposables(this._connection.onInitialize(_0x2f8878 => this._onInitialize(_0x2f8878, _0x5b5fc8, _0x2f52cd)), this._connection.onInitialized(() => this._onInitialized()), this._connection.onDidChangeConfiguration(_0x1e06ab => this._onDidChangeConfiguration(_0x1e06ab)), this._connection.onDidOpenTextDocument(async _0x15d12d => this._onDidOpenTextDocument(_0x15d12d)), this._connection.onDidChangeTextDocument(async _0x5cb426 => this._onDidChangeTextDocument(_0x5cb426)), this._connection.onDidCloseTextDocument(async _0x406e06 => this._onDidCloseTextDocument(_0x406e06)), this._connection.onShutdown(async _0x94fc66 => this._onShutdown(_0x94fc66)), this._connection.workspace.onWillRenameFiles((_0x549f94, _0x126569) => _0x1fe651.RenameFileProvider.renameFiles(this, this._telemetry, _0x549f94, _0x126569)), this._connection.notebooks.synchronization.onDidOpenNotebookDocument(_0x1bd741 => this._notebookManager.onDidOpenNotebookDocument(_0x1bd741)), this._connection.notebooks.synchronization.onDidChangeNotebookDocument(_0x194908 => this._notebookManager.onDidChangeNotebookDocument(_0x194908)), this._connection.notebooks.synchronization.onDidCloseNotebookDocument(_0x38a235 => this._notebookManager.onDidCloseNotebookDocument(_0x38a235)), _0x12f4ff.CustomLSP.onNotification(this._connection, _0x12f4ff.CustomLSP.Notifications.AskForWait, _0x3f7af0 => {
            this._serverOptions.waitForClientResponse = true;
          }));
          this._languageService.registerHandlers(this._connection);
        }
        _onInitialize(_0x2a4031, _0x491f54, _0x8c6666) {
          return this._languageService.handleInitialize(_0x2a4031, this._connection, this._workspaceFactory, _0x491f54, _0x8c6666);
        }
        _onInitialized() {
          this._initialized = true;
          if (!this.client.hasWorkspaceFoldersCapability) {
            this._updateSettingsForAllWorkspaces();
            return;
          }
          this._workspaceFoldersChangedDisposable = this._connection.workspace.onDidChangeWorkspaceFolders(async _0x102ddc => {
            const _0x45db2a = [];
            this._workspaceFactory.items().forEach(_0x53e989 => {
              _0x53e989.isInitialized = _0x53e989.isInitialized.reset();
            });
            const _0x1e5dd5 = await this._connection.workspace.getWorkspaceFolders();
            this._workspaceFactory.handleWorkspaceFoldersChanged(_0x102ddc, _0x1e5dd5);
            this._workspaceFactory.items().forEach(_0x86d898 => {
              _0x45db2a.push(this._updateSettingsForWorkspace(_0x86d898, _0x86d898.isInitialized));
            });
            await Promise.all(_0x45db2a);
            this._languageService.registerDynamicFeatures();
          });
          this._languageService.registerDynamicFeatures();
        }
        _onDidChangeConfiguration(_0x51036c) {
          this.console.log('Received updated settings');
          if (_0x51036c?.settings) {
            this._defaultClientConfig = _0x51036c?.settings;
          }
          this._updateSettingsForAllWorkspaces();
        }
        async _onDidOpenTextDocument(_0x516cc3, _0x47a660) {
          var _0x13539e;
          const _0x15bd2e = this._languageService.convertLspUriStringToUri(_0x516cc3.textDocument.uri);
          const _0x59db07 = await this._getContainingWorkspacesForFile(_0x15bd2e);
          this._languageService.handleDidOpenTextDocument(_0x59db07, _0x516cc3, _0x47a660);
          if (this._serverOptions.testing && !this._disposed) {
            const _0x2bbd23 = await this.getWorkspaceForFile(_0x15bd2e);
            await _0x12f4ff.CustomLSP.sendNotification(this._connection, _0x12f4ff.CustomLSP.Notifications.TestSignal, {
              uri: ((_0x13539e = _0x2bbd23.rootUri) === null || _0x13539e === undefined ? undefined : _0x13539e.toString()) ?? '',
              kind: _0x12f4ff.CustomLSP.TestSignalKinds.DidOpenDocument
            });
          }
        }
        async _onDidChangeTextDocument(_0x217a90, _0xc8b6c5) {
          var _0x19573e;
          const _0x502d34 = this._languageService.convertLspUriStringToUri(_0x217a90.textDocument.uri);
          const _0x2de011 = await this._getContainingWorkspacesForFile(_0x502d34);
          this._languageService.handleDidChangeTextDocument(_0x2de011, _0x217a90, _0xc8b6c5);
          if (this._serverOptions.testing && !this._disposed) {
            const _0x47bf1d = await this.getWorkspaceForFile(_0x502d34);
            await _0x12f4ff.CustomLSP.sendNotification(this._connection, _0x12f4ff.CustomLSP.Notifications.TestSignal, {
              uri: ((_0x19573e = _0x47bf1d.rootUri) === null || _0x19573e === undefined ? undefined : _0x19573e.toString()) ?? '',
              kind: _0x12f4ff.CustomLSP.TestSignalKinds.DidChangeDocument
            });
          }
        }
        async _onDidCloseTextDocument(_0x272bf4) {
          const _0x33c152 = this._languageService.convertLspUriStringToUri(_0x272bf4.textDocument.uri);
          const _0x497de9 = await this._getContainingWorkspacesForFile(_0x33c152);
          this._languageService.handleDidCloseTextDocument(_0x497de9, _0x272bf4);
        }
        _onShutdown(_0x3081ff) {
          this._workspaceFactory.clear();
          this._languageService.handleShutdown(_0x3081ff);
          return Promise.resolve();
        }
        _createHost() {
          return this._languageService.createHost();
        }
        _createBackgroundAnalysisProgram(_0x45e1fa, _0x20998b, _0x2dd4e6, _0x5473a6, _0x34f69b, _0x479665) {
          return this._languageService.createBackgroundAnalysisProgram(_0x45e1fa, _0x20998b, _0x2dd4e6, _0x5473a6, _0x34f69b, _0x479665);
        }
        _isLongRunningCommand(_0x39bcaf) {
          return this._controller.isLongRunningCommand(_0x39bcaf);
        }
        _isRefactoringCommand(_0x4946cc) {
          return this._controller.isRefactoringCommand(_0x4946cc);
        }
        _executeCommand(_0x4a9711, _0x3f32f7) {
          return this._controller.execute(_0x4a9711, _0x3f32f7);
        }
        _createImportResolver(_0x4e6179, _0xc67211, _0x168ec9) {
          return _0x5685df.createPylanceImportResolver(_0x4e6179, _0xc67211, _0x168ec9);
        }
        _onWorkspaceAnalysisCompletedHandler(_0x449374, _0x505e20) {
          if (this._disposed) {
            return;
          }
          this._diagnosticReporterQueue.queue(async () => {
            await this._filterResultsToCurrentWorkspace(_0x449374, _0x505e20);
            this._languageService.handleAnalysisCompletedHandler(_0x449374.service.fs, _0x505e20, this._progressReporter, this._sendDiagnostics.bind(this));
            if (_0x505e20.error) {
              _0xe33297.sendExceptionTelemetry(this._telemetry, _0xe33297.TelemetryEventName.ANALYSIS_EXCEPTION, _0x505e20.error);
            }
            if (_0x505e20.diagnostics.length === 0 && _0x505e20.requiringAnalysisCount.files + _0x505e20.requiringAnalysisCount.cells > 0 && _0x505e20.elapsedTime === 0) {
              return;
            }
            if (_0x505e20.requiringAnalysisCount.files + _0x505e20.requiringAnalysisCount.cells === 0 && _0x505e20.elapsedTime > 0) {
              if (this._state.client.hasSemanticTokensRefreshCapability) {
                this._connection.sendRequest(_0x4ebd39.SemanticTokensRefreshRequest.method).ignoreErrors();
              }
            }
            this._sendTelemetry(_0x505e20);
          });
        }
        _sendDiagnostics(_0x4c6c79) {
          for (const _0x166cca of _0x4c6c79) {
            if (_0x166cca.diagnostics.length === 0) {
              this._documentsWithDiagnostics.delete(_0x166cca.uri);
            } else {
              this._documentsWithDiagnostics.add(_0x166cca.uri);
            }
            this._connection.sendDiagnostics(_0x166cca);
            this._uriMapper.markUsing(_0x40e989.Uri.parse(_0x166cca.uri, this._caseSensitiveDetector), _0x166cca.diagnostics.length > 0);
          }
        }
        _onWorkspaceCreated(_0x432fb4) {
          if (this._initialized) {
            this._updateSettingsForWorkspace(_0x432fb4, _0x432fb4.isInitialized).ignoreErrors();
          }
          _0x432fb4.completeFunctionParens = false;
          _0x432fb4.enableExtractCodeAction = false;
          _0x432fb4.service.setCompletionCallback(_0x7700c4 => this._onWorkspaceAnalysisCompletedHandler(_0x432fb4, _0x7700c4));
        }
        _onWorkspaceRemoved(_0x46ac1c) {
          const _0x2e7fd0 = [...this._documentsWithDiagnostics];
          const _0xb871f = this._workspaceFactory.items().filter(_0x285e62 => _0x285e62 !== _0x46ac1c);
          for (const _0x5c6d12 of _0x2e7fd0) {
            const _0x382565 = this._languageService.convertLspUriStringToUri(_0x5c6d12);
            if (_0x46ac1c.service.isTracked(_0x382565)) {
              if (_0xb871f.some(_0x325d93 => _0x325d93.service.isTracked(_0x382565))) {
                continue;
              }
              this._sendDiagnostics([{
                uri: _0x5c6d12,
                diagnostics: []
              }]);
            }
          }
        }
        async _filterResultsToCurrentWorkspace(_0x3232c0, _0x333915) {
          const _0x2e6220 = await this.getWorkspaces();
          if (_0x2e6220.length <= 1) {
            return;
          }
          const _0x50ad70 = await Promise.all(_0x333915.diagnostics.map(async _0x16e465 => {
            const _0x445e59 = await this.getWorkspaceForFile(_0x16e465.fileUri);
            if (_0x445e59 === _0x3232c0) {
              return _0x16e465;
            }
            return undefined;
          }));
          _0x333915.diagnostics = _0x50ad70.filter(_0x4c5f92 => _0x4c5f92 !== undefined);
        }
        async _computeWorkspaceEnvironmentName(_0x542d32, _0x5ae7c2) {
          if (_0x542d32.pythonPathKind === _0x5dd6df.WorkspacePythonPathKind.Immutable) {
            const _0x2dc117 = await this._notebookManager.getNotebookDataForPythonPath(_0x542d32.pythonPath);
            if (_0x2dc117) {
              return _0x2dc117.pythonEnvironmentName;
            }
          }
          return _0x5ae7c2;
        }
        _sendTelemetry(_0x45c2a1) {
          const _0x27a462 = this._analysisTracker.updateTelemetry(_0x45c2a1);
          if (!_0x27a462) {
            return;
          }
          this._telemetry.sendTelemetry(_0x27a462);
        }
        async _getHostKind() {
          if (!this._state.client.hasTrustedWorkspaceSupport) {
            return 0;
          }
          const {
            isTrusted: _0x43cd0f
          } = await _0x12f4ff.CustomLSP.sendRequest(this._connection, _0x12f4ff.CustomLSP.Requests.IsTrustedWorkspace, undefined);
          if (_0x43cd0f) {
            return 0;
          } else {
            return 1;
          }
        }
        async _inExperiment(_0xe53bc4) {
          if (!this._state.client.hasExperimentationSupport) {
            return undefined;
          }
          const _0x5604a5 = this._state.inExperimentCache.get(_0xe53bc4);
          if (_0x5604a5 !== undefined) {
            return _0x5604a5;
          }
          const {
            inExperiment: _0x481509
          } = await _0x12f4ff.CustomLSP.sendRequest(this._connection, _0x12f4ff.CustomLSP.Requests.InExperiment, {
            experimentName: _0xe53bc4
          });
          this._state.inExperimentCache.set(_0xe53bc4, _0x481509);
          return _0x481509;
        }
      }
      exports.PylanceAsyncServer = _0x40fb42;
    },
    8398: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IHostFactory = exports.defaultIndexOptions = exports.Settings = exports.AnyNotebookDocumentSelector = exports.NotebookDocumentSelector = undefined;
      exports.updateInsertTextForAutoParensIfNeeded = _0x628c3d;
      exports.createNotebookData = _0x55fad5;
      exports.verifyCellChainIsLinear = _0x2a371a;
      exports.getPrefixCellContents = _0x1be7f6;
      exports.openNotebookCellChain = _0x1b8806;
      exports.updateNotebookStructure = _0xad599b;
      exports.getDocumentationUrlForDiagnostic = _0xe5f587;
      exports.addPylanceProgramServices = _0x83cc0;
      exports.createDocumentRangeWithReferenceKind = _0x4424b5;
      exports.convertDocumentRangeToLocationWithReferenceKind = _0x4f3231;
      exports.updatePythonSection = _0x8d0d0d;
      exports.updatePylanceSection = _0x57507f;
      exports.updateJupyterSection = _0x5625d4;
      exports.updateEditorSection = _0x2b9caf;
      exports.getPythonInformation = _0x246047;
      exports.convertLspUriStringToUri = _0x514c71;
      exports.isNotebookKernelChange = _0x1935ed;
      exports.getDocumentOnTypeFormattingOption = _0x37cb09;
      exports.getIPythonMode = _0x33645b;
      exports.setPackageDiscovery = _0x2fc13a;
      exports.enableExtraTelemetry = _0x23ec85;
      exports.sendCompilerFlagsTelemetry = _0x1556e3;
      const _0x4a3110 = __importStar(require(16928));
      const _0x3d7d0d = require(56911);
      const _0x3df1b0 = __importStar(require(41557));
      const _0x55f1a8 = require(16259);
      const _0x452d56 = require(39045);
      const _0x2d058e = require(53266);
      const _0x522f42 = require(25463);
      const _0x3505cf = require(12522);
      const _0x519707 = require(25075);
      const _0x1bf901 = require(34455);
      const _0x40070a = __importStar(require(48281));
      const _0x1c3799 = require(11479);
      const _0x2b4949 = require(10775);
      const _0x16a30e = require(54010);
      const _0x181844 = require(71745);
      const _0x41b633 = require(27113);
      const _0x14baa6 = require(47091);
      const _0x3139a2 = require(26005);
      const _0x1d2c29 = require(30741);
      const _0x3e5765 = require(27130);
      const _0x2aa9f3 = require(23898);
      const _0x3b13bd = require(54700);
      const _0x1268d9 = require(24122);
      const _0x53454b = require(59133);
      const _0x9add10 = require(44889);
      const _0x5230b1 = require(52471);
      const _0x4f0835 = require(30048);
      const _0x5753ee = require(69482);
      const _0x1c48c7 = require(47351);
      const _0x68605b = require(66609);
      const _0x2f247a = require(37036);
      const _0xffbcea = require(59198);
      const _0xd1e7e6 = require(90836);
      const _0x18b69c = require(48316);
      const _0x31435b = require(76246);
      const _0x992df2 = require(44657);
      exports.NotebookDocumentSelector = {
        notebookSelector: [{
          notebook: {
            scheme: 'file'
          },
          cells: [{
            language: 'python'
          }]
        }, {
          notebook: {
            scheme: 'untitled'
          },
          cells: [{
            language: 'python'
          }]
        }]
      };
      exports.AnyNotebookDocumentSelector = {
        notebookSelector: [{
          notebook: undefined,
          cells: [{
            language: 'python'
          }]
        }]
      };
      var _0x1d1654;
      (function (_0x25f363) {
        _0x25f363.pythonSectionName = 'python';
        _0x25f363.pythonAnalysisSectionName = 'python.analysis';
        _0x25f363.editorSectionName = 'editor';
        _0x25f363.jupyterSectionName = 'jupyter';
      })(_0x1d1654 || (exports.Settings = _0x1d1654 = {}));
      exports.defaultIndexOptions = {
        packageDepths: [['', 1, false], ['sklearn', 2, false], ['matplotlib', 2, false], ['scipy', 2, false], ['django', 2, false]],
        regenerateStdLibIndices: false
      };
      var _0x2318b7;
      (function (_0x3d78a5) {
        function _0x4ecf38(_0x3d69f0) {
          return _0x3d69f0.createHost !== undefined;
        }
        _0x3d78a5.is = _0x4ecf38;
      })(_0x2318b7 || (exports.IHostFactory = _0x2318b7 = {}));
      function _0x628c3d(_0x40d0fe, _0xdb855c, _0x263980) {
        const _0x233113 = _0x1c48c7.CompletionListConverter.fromLSP(_0x40d0fe).data;
        const _0x12b4d6 = _0x233113?.funcParensDisabled;
        if (_0x12b4d6) {
          return;
        }
        if (_0x40d0fe.kind === _0x3d7d0d.CompletionItemKind.Function || _0x40d0fe.kind === _0x3d7d0d.CompletionItemKind.Method || _0x40d0fe.kind === _0x3d7d0d.CompletionItemKind.Class) {
          if (_0x40d0fe.textEdit) {
            _0x40d0fe.textEdit.newText = _0x40d0fe.textEdit.newText + '($0)';
          } else {
            _0x40d0fe.insertText = (_0x40d0fe.insertText ?? _0x40d0fe.label) + '($0)';
          }
          _0x40d0fe.insertTextFormat = _0x3d7d0d.InsertTextFormat.Snippet;
          if (_0x263980) {
            _0x40d0fe.command = _0x2aa9f3.mergeCommands(_0x40d0fe.command, {
              title: '',
              command: _0x3e5765.ClientCommands.triggerParameterHints,
              arguments: [_0xdb855c]
            });
          }
          if (_0x40d0fe.commitCharacters) {
            _0x40d0fe.commitCharacters = undefined;
          }
        }
      }
      function _0x55fad5(_0x5dde84, _0x2931f7, _0x58af84, _0x57b0f4, _0x1be998, _0x487f9b, _0x42c814) {
        const _0x20e9dd = {
          notebookUri: _0x5dde84,
          mappedCellUris: _0x2931f7.map(_0x234cbf => _0x58af84.getMappedCellUri(_0x41b633.Uri.parse(_0x234cbf.uri, _0x57b0f4))),
          prefixCellUri: _0x9add10.NotebookUriMapper.getNotebookPrefixUri(_0x5dde84),
          prefixCellContents: _0x1be998 || '',
          pythonPath: _0x487f9b,
          pythonEnvironmentName: _0x42c814,
          operations: [`Created ${_0x2931f7.length} cells`]
        };
        return _0x20e9dd;
      }
      function _0x2a371a(_0x28c892, _0x884d71) {
        if (!_0x28c892.mappedCellUris) {
          _0x40070a.fail('All notebooks should have mapped cell Uris');
        }
        const _0xbcd6cb = new Set(_0x28c892.mappedCellUris.map(_0x3bef81 => _0x3bef81.key));
        if (_0xbcd6cb.size !== _0x28c892.mappedCellUris.length) {
          let _0x33bd4f = `Duplicate path in cellFilePaths (${_0xbcd6cb.size}) (${_0x28c892.mappedCellUris.length}):
`;
          for (let _0x75c26a = 0; _0x75c26a < _0x28c892.mappedCellUris.length; _0x75c26a++) {
            const _0x31e7e2 = _0x28c892.mappedCellUris[_0x75c26a];
            if (_0x31e7e2) {
              if (_0x31e7e2.isEmpty()) {
                _0x33bd4f += _0x75c26a + ' == empty\n';
              } else {
                _0x33bd4f += _0x75c26a + ' == ' + _0x31e7e2.toUserVisibleString() + '\n';
              }
            } else {
              _0x33bd4f += _0x75c26a + ' == undefined\n';
            }
          }
          _0x33bd4f += '\n';
          _0x33bd4f += _0x28c892.operations.join('\n');
          _0x40070a.fail(_0x33bd4f);
        }
        for (let _0x496748 = _0x28c892.mappedCellUris.length - 1; _0x496748 >= 0; --_0x496748) {
          const _0x486bd3 = _0x884d71.service.getChainedUri(_0x28c892.mappedCellUris[_0x496748]);
          if (_0x496748 > 0) {
            _0x40070a.assert(_0x486bd3 === null || _0x486bd3 === undefined ? undefined : _0x486bd3.equals(_0x28c892.mappedCellUris[_0x496748 - 1]), `Chained file path ${_0x486bd3} doesn't match cellFilePaths ${_0x28c892.mappedCellUris[_0x496748 - 1]} with ${_0x28c892.operations.join('\n')}`);
          } else {
            _0x40070a.assert(_0x486bd3 === null || _0x486bd3 === undefined ? undefined : _0x486bd3.equals(_0x28c892.prefixCellUri), `Chained file path ${_0x486bd3} doesn't match prefixCellFilePath with ${_0x28c892.operations.join('\n')}`);
          }
        }
      }
      function _0x1be7f6(_0x20de8f) {
        const _0x115f22 = _0x20de8f?.notebookRunStartupCommands || '';
        if (_0x20de8f && _0x20de8f.implicitImportsInNotebooks === false) {
          return _0x115f22;
        }
        return `from IPython.display import *
${_0x115f22}

`;
      }
      function _0x1b8806(_0x2f8636, _0x17a714, _0x29a231, _0x136fef, _0x256a8d) {
        if (_0x256a8d === undefined) {
          _0x256a8d = _0x17a714.prefixCellUri;
          _0x136fef.service.setFileOpened(_0x256a8d, 0, _0x17a714.prefixCellContents, _0x2d058e.IPythonMode.CellDocs);
        }
        _0x2f8636.forEach(_0x304e3f => {
          const _0x16c24a = _0x29a231.getMappedCellUri(_0x41b633.Uri.parse(_0x304e3f.uri, _0x136fef.service.serviceProvider));
          _0x136fef.service.setFileOpened(_0x16c24a, _0x304e3f.version, _0x304e3f.text, _0x2d058e.IPythonMode.CellDocs, _0x256a8d);
          _0x256a8d = _0x16c24a;
        });
      }
      function _0x47f6f8(_0x30017e, _0x4e4f6b, _0x477ab0, _0x143b2c) {
        if (!_0x4e4f6b.mappedCellUris) {
          return;
        }
        if (_0x30017e.array.deleteCount > 0) {
          _0x4e4f6b.mappedCellUris.splice(_0x30017e.array.start, _0x30017e.array.deleteCount);
          _0x4e4f6b.operations.push('Deleted');
        }
        if (_0x30017e.array.cells) {
          if (_0x30017e.array.start < _0x4e4f6b.mappedCellUris.length) {
            const _0x2a78f6 = new Array(_0x30017e.array.cells.length);
            _0x4e4f6b.mappedCellUris.splice(_0x30017e.array.start, 0, ..._0x2a78f6);
            _0x4e4f6b.operations.push('Inserted');
          }
          for (let _0x2f10f9 = 0; _0x2f10f9 < _0x30017e.array.cells.length; ++_0x2f10f9) {
            _0x4e4f6b.mappedCellUris[_0x30017e.array.start + _0x2f10f9] = _0x477ab0.getMappedCellUri(_0x41b633.Uri.parse(_0x30017e.array.cells[_0x2f10f9].document, _0x143b2c.service.serviceProvider));
            _0x4e4f6b.operations.push(`Added at position ${_0x30017e.array.start + _0x2f10f9}:${_0x30017e.array.cells.length}`);
          }
        }
      }
      function _0x322534(_0x10dfd3, _0x370a45, _0x17d46f, _0x5f84bf) {
        if (!_0x370a45.mappedCellUris) {
          return;
        }
        if (_0x10dfd3.didClose && _0x10dfd3.didClose.length > 0) {
          _0x10dfd3.didClose.forEach(_0x3cfb90 => {
            const _0x4defc9 = _0x17d46f.getMappedCellUri(_0x41b633.Uri.parse(_0x3cfb90.uri, _0x5f84bf.service.serviceProvider));
            _0x5f84bf.service.setFileClosed(_0x4defc9, false);
          });
        }
        if (_0x10dfd3.didOpen && _0x10dfd3.didOpen.length > 0) {
          const _0x406046 = _0x10dfd3.array.start > 0 ? _0x370a45.mappedCellUris[_0x10dfd3.array.start - 1] : _0x370a45.prefixCellUri;
          _0x1b8806(_0x10dfd3.didOpen, _0x370a45, _0x17d46f, _0x5f84bf, _0x406046);
        }
      }
      function _0x4a89af(_0x36a5c0, _0xb46ad, _0x25ee2f) {
        if (!_0xb46ad.mappedCellUris) {
          return;
        }
        if (_0x36a5c0.array.cells && (!_0x36a5c0.didOpen || _0x36a5c0.array.cells.length !== _0x36a5c0.didOpen.length)) {
          for (let _0xfb2da2 = _0x36a5c0.array.start; _0xfb2da2 < _0x36a5c0.array.start + _0x36a5c0.array.cells.length; ++_0xfb2da2) {
            _0x36dac9(_0xb46ad, _0x25ee2f, _0xfb2da2);
          }
        }
        const _0x3bf96e = _0x36a5c0.array.start + (_0x36a5c0.array.cells?.length ?? 0);
        if (_0x3bf96e >= 0 && _0x3bf96e < _0xb46ad.mappedCellUris.length) {
          _0x36dac9(_0xb46ad, _0x25ee2f, _0x3bf96e);
        }
        _0x2a371a(_0xb46ad, _0x25ee2f);
      }
      function _0x36dac9(_0x548055, _0x1ca6ee, _0x28d4d3) {
        _0x1ca6ee.service.updateChainedUri(_0x548055.mappedCellUris[_0x28d4d3], _0x28d4d3 > 0 ? _0x548055.mappedCellUris[_0x28d4d3 - 1] : _0x548055.prefixCellUri);
      }
      function _0xad599b(_0x369b9a, _0x5e33ff, _0x51cb12, _0x4ffa46) {
        _0x47f6f8(_0x369b9a, _0x5e33ff, _0x51cb12, _0x4ffa46);
        _0x322534(_0x369b9a, _0x5e33ff, _0x51cb12, _0x4ffa46);
        _0x4a89af(_0x369b9a, _0x5e33ff, _0x4ffa46);
      }
      const _0x76a7f8 = new Map([]);
      function _0xe5f587(_0x3ed8d4) {
        const _0x17eb0d = _0x68605b.getDiagnosticCode(_0x3ed8d4);
        if (_0x17eb0d && _0x76a7f8.has(_0x17eb0d)) {
          return _0x76a7f8.get(_0x17eb0d);
        }
        const _0x15c157 = _0x3ed8d4.getRule();
        if (_0x15c157) {
          return `https://github.com/microsoft/pyright/blob/main/docs/configuration.md#${_0x15c157}`;
        }
        return undefined;
      }
      function _0x83cc0(_0x2200b5, _0x3a0c4f) {
        _0xffbcea.tryAddFixtureFinder(_0x2200b5.service.serviceProvider, _0x3a0c4f, _0x2200b5.service.backgroundAnalysisProgram.program, _0x2200b5.service);
        const _0x1befd2 = _0x2200b5.service.serviceProvider.get(_0x4f0835.PylanceServiceKeys.telemetry);
        _0x4f0835.registerServices(_0x2200b5.service.serviceProvider, new _0x2f247a.StringDefinitionFinder(_0x2200b5.service.backgroundAnalysisProgram.program, _0x2200b5.service, _0x1befd2), _0x4f0835.PylanceServiceKeys.stringDefinitionFinder, _0x181844.ServiceKeys.stateMutationListeners, _0x181844.ServiceKeys.symbolDefinitionProvider);
        _0x4f0835.registerServices(_0x2200b5.service.serviceProvider, new _0xd1e7e6.ConstructorUsageProviderFactory(_0x2200b5.service.backgroundAnalysisProgram.program), _0x4f0835.PylanceServiceKeys.constructorUsageProviderFactory, _0x181844.ServiceKeys.symbolUsageProviderFactory);
        _0x4f0835.registerServices(_0x2200b5.service.serviceProvider, new _0x31435b.OverrideUsageProviderFactory(_0x2200b5.service.backgroundAnalysisProgram.program), _0x4f0835.PylanceServiceKeys.overrideUsageProviderFactory, _0x181844.ServiceKeys.symbolUsageProviderFactory);
        _0x4f0835.registerServices(_0x2200b5.service.serviceProvider, new _0x18b69c.DeclarationFinder(_0x2200b5.service.backgroundAnalysisProgram.program), _0x4f0835.PylanceServiceKeys.declarationFinder, _0x181844.ServiceKeys.stateMutationListeners);
        _0x4f0835.registerServices(_0x2200b5.service.serviceProvider, _0x1c48c7.CompletionListConverter.get(), _0x4f0835.PylanceServiceKeys.completionListConverter, _0x181844.ServiceKeys.stateMutationListeners);
        if (!_0x2200b5.service.serviceProvider.tryGet(_0x181844.ServiceKeys.debugInfoInspector)) {
          _0x2200b5.service.serviceProvider.add(_0x181844.ServiceKeys.debugInfoInspector, new _0x5230b1.PylanceDebugInfoInspector());
        }
      }
      function _0x4424b5(_0x27d409, _0x36ad91, _0x49476e) {
        const _0x21c3c6 = _0x3139a2.FindReferencesTreeWalker.createDocumentRange(_0x27d409, _0x36ad91, _0x49476e);
        if (_0x36ad91.node.nodeType === 38) {
          _0x21c3c6.kind = _0x3df1b0.isWriteAccess(_0x36ad91.node) ? 'write' : 'read';
        }
        return _0x21c3c6;
      }
      function _0x4f3231(_0x40c8b0, _0x4203ba) {
        const _0xc7a766 = _0x14baa6.convertDocumentRangeToLocation(_0x40c8b0, _0x4203ba);
        _0xc7a766.kind = _0x4203ba.kind;
        return _0xc7a766;
      }
      function _0x5bdb49(_0x52b427) {
        const _0x5862a5 = _0x52b427;
        if (_0x3505cf.getDiagLevelDiagnosticRules().includes(_0x5862a5)) {
          return _0x5862a5;
        }
        return undefined;
      }
      function _0x1e592e(_0x55d0b5) {
        const _0x35d477 = _0x55d0b5;
        if (_0x3505cf.getBooleanDiagnosticRules(true).includes(_0x35d477)) {
          return _0x35d477;
        }
        return undefined;
      }
      function _0x4a45c0(_0x2572cd) {
        const _0x1e924f = _0x3505cf.parseDiagLevel(_0x2572cd);
        if (!_0x1e924f) {
          return undefined;
        }
        if (_0x522f42.getDiagnosticSeverityOverrides().includes(_0x1e924f)) {
          return _0x1e924f;
        }
        return undefined;
      }
      function _0x26281c(_0x2d5ecd) {
        return _0x2d5ecd !== 'workspace';
      }
      function _0x2c2529(_0x2e448d) {
        const _0x313390 = [];
        for (const _0x59a538 of _0x2e448d) {
          if (Array.isArray(_0x59a538)) {
            if (_0x59a538.length >= 2 && _0x59a538.length <= 3 && _0x1bf901.isString(_0x59a538[0]) && _0x1bf901.isNumber(_0x59a538[1]) && (_0x59a538.length !== 3 || _0x1bf901.isBoolean(_0x59a538[2]))) {
              _0x313390.push([_0x59a538[0], _0x59a538[1], _0x59a538[2] ?? false]);
            }
            continue;
          }
          if (_0x59a538 && _0x59a538.name !== undefined) {
            _0x313390.push([_0x59a538.name, _0x59a538.depth ?? 1, _0x59a538.includeAllSymbols ?? false]);
          }
        }
        return _0x313390;
      }
      function _0x8d0d0d(_0x338df4, _0x252ad6, _0x28f2ed, _0x225348) {
        if (_0x28f2ed) {
          const _0x4692d5 = _0x28f2ed.pythonPath;
          if (_0x4692d5 && _0x1bf901.isString(_0x4692d5) && !_0x55f1a8.isPythonBinary(_0x4692d5)) {
            _0x338df4.pythonPath = _0x2b4949.resolvePathWithEnvVariables(_0x252ad6, _0x4692d5, _0x225348);
          }
          const _0x464702 = _0x28f2ed.venvPath;
          if (_0x464702 && _0x1bf901.isString(_0x464702)) {
            _0x338df4.venvPath = _0x2b4949.resolvePathWithEnvVariables(_0x252ad6, _0x464702, _0x225348);
          }
          const _0x541695 = _0x28f2ed._envPYTHONPATH;
          if (_0x541695 && _0x1bf901.isString(_0x541695)) {
            _0x338df4.extraPaths = _0x541695.split(_0x4a3110.delimiter).filter(_0x4695bb => _0x4695bb && _0x1bf901.isString(_0x4695bb)).map(_0xb667be => _0x2b4949.resolvePathWithEnvVariables(_0x252ad6, _0xb667be, _0x225348)).filter(_0x1bf901.isDefined);
          }
          const _0xcf89cc = _0x28f2ed.pythonEnvironmentName;
          if (_0xcf89cc && _0x1bf901.isString(_0xcf89cc)) {
            _0x338df4.pythonEnvironmentName = _0xcf89cc;
          }
        }
      }
      function _0x57507f(_0x4ca8eb, _0x3ab3f7, _0x24e5c9, _0x5ddefa) {
        const _0x220548 = new Set(_0x24e5c9.setByDefault ?? []);
        const _0x5c6157 = _0x24e5c9.taskListTokens;
        if (_0x5c6157 && Array.isArray(_0x5c6157) && _0x5c6157.length > 0) {
          const _0x3ea6e8 = _0x5c6157.filter(_0x33dc26 => {
            return _0x33dc26.text && _0x33dc26.priority && _0x33dc26.priority in _0x1c3799.TaskListPriority;
          }).map(_0x38fd2e => {
            return {
              text: _0x38fd2e.text,
              priority: _0x38fd2e.priority
            };
          });
          _0x4ca8eb.taskListTokens = _0x3ea6e8;
        }
        const _0x14a9ac = _0x24e5c9.typeshedPaths;
        if (_0x14a9ac && Array.isArray(_0x14a9ac) && _0x14a9ac.length > 0) {
          const _0x1ffa3f = _0x14a9ac[0];
          if (_0x1ffa3f && _0x1bf901.isString(_0x1ffa3f)) {
            _0x4ca8eb.typeshedPath = _0x2b4949.resolvePathWithEnvVariables(_0x3ab3f7, _0x1ffa3f, _0x5ddefa);
          }
        }
        const _0xe2588 = _0x24e5c9.stubPath;
        if (_0xe2588 && _0x1bf901.isString(_0xe2588)) {
          const _0x496570 = _0x2b4949.resolvePathWithEnvVariables(_0x3ab3f7, _0xe2588, _0x5ddefa);
          if (!_0x220548.has('stubpath')) {
            _0x4ca8eb.stubPath = _0x496570;
          } else {
            if (_0x496570 && _0x3ab3f7.service.fs.existsSync(_0x496570)) {
              _0x4ca8eb.stubPath = _0x496570;
            }
          }
        }
        const _0x489e35 = _0x24e5c9.diagnosticSeverityOverrides;
        if (_0x489e35) {
          for (const [_0x1544d6, _0x4290a5] of Object.entries(_0x489e35)) {
            const _0x411db3 = _0x5bdb49(_0x1544d6);
            const _0x255662 = _0x4a45c0(_0x4290a5);
            if (_0x411db3 && _0x255662) {
              if (_0x4ca8eb.diagnosticSeverityOverrides === undefined) {
                _0x4ca8eb.diagnosticSeverityOverrides = {};
              }
              _0x4ca8eb.diagnosticSeverityOverrides[_0x411db3] = _0x255662;
            }
          }
        }
        const _0x709e73 = _0x24e5c9.typeEvaluation;
        if (_0x709e73) {
          for (const [_0x432b4f, _0x2f45bd] of Object.entries(_0x709e73)) {
            const _0x4a1ab5 = _0x1e592e(_0x432b4f);
            if (_0x4a1ab5 && _0x1bf901.isBoolean(_0x2f45bd)) {
              if (_0x4ca8eb.diagnosticBooleanOverrides === undefined) {
                _0x4ca8eb.diagnosticBooleanOverrides = {};
              }
              _0x4ca8eb.diagnosticBooleanOverrides[_0x4a1ab5] = _0x2f45bd;
            }
          }
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.disableTaggedHints)) {
          _0x4ca8eb.disableTaggedHints = _0x24e5c9.disableTaggedHints;
        }
        _0x4ca8eb.logLevel = _0x519707.convertLogLevel(_0x24e5c9.logLevel);
        _0x4ca8eb.openFilesOnly = _0x26281c(_0x24e5c9.diagnosticMode);
        if (_0x1bf901.isBoolean(_0x24e5c9.useLibraryCodeForTypes)) {
          _0x4ca8eb.useLibraryCodeForTypes = _0x24e5c9.useLibraryCodeForTypes;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.autoSearchPaths)) {
          _0x4ca8eb.autoSearchPaths = _0x24e5c9.autoSearchPaths;
        }
        if (['off', 'basic', 'standard', 'strict'].includes(_0x24e5c9.typeCheckingMode)) {
          _0x4ca8eb.typeCheckingMode = _0x24e5c9.typeCheckingMode;
        }
        if (['auto', 'absolute', 'relative'].includes(_0x24e5c9.importFormat)) {
          _0x4ca8eb.importFormat = _0x24e5c9.importFormat;
        }
        const _0x681921 = _0x24e5c9.extraPaths;
        if (_0x681921 && Array.isArray(_0x681921) && _0x681921.length > 0) {
          const _0x49e9dc = _0x681921.filter(_0x5b9c53 => _0x5b9c53 && _0x1bf901.isString(_0x5b9c53)).map(_0x1f080b => _0x2b4949.resolvePathWithEnvVariables(_0x3ab3f7, _0x1f080b, _0x5ddefa)).filter(_0x1bf901.isDefined);
          if (_0x4ca8eb.extraPaths) {
            _0x4ca8eb.extraPaths = _0x49e9dc.concat(_0x4ca8eb.extraPaths);
          } else {
            _0x4ca8eb.extraPaths = _0x49e9dc;
          }
        }
        _0x4ca8eb.includeFileSpecs = _0x401f65(_0x3ab3f7.workspaceName, _0x24e5c9.include);
        _0x4ca8eb.excludeFileSpecs = _0x401f65(_0x3ab3f7.workspaceName, _0x24e5c9.exclude);
        _0x4ca8eb.ignoreFileSpecs = _0x401f65(_0x3ab3f7.workspaceName, _0x24e5c9.ignore);
        _0x4ca8eb.fixAll = _0x3b13bd.tryGetStringValues(_0x24e5c9.fixAll);
        if (_0x1bf901.isBoolean(_0x24e5c9.autoImportCompletions)) {
          _0x4ca8eb.autoImportCompletions = _0x24e5c9.autoImportCompletions;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.showOnlyDirectDependenciesInAutoImport)) {
          _0x4ca8eb.showOnlyDirectDependenciesInAutoImport = _0x24e5c9.showOnlyDirectDependenciesInAutoImport;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.completeFunctionParens)) {
          _0x4ca8eb.completeFunctionParens = _0x24e5c9.completeFunctionParens;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.extraCommitChars)) {
          _0x4ca8eb.extraCommitChars = _0x24e5c9.extraCommitChars;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.indexing)) {
          _0x4ca8eb.indexing = _0x24e5c9.indexing;
          _0x4ca8eb.indexOptions = _0x4ca8eb.indexOptions ?? _0x1268d9.getEmptyIndexOptions();
          const _0x41a5f1 = _0x24e5c9.packageIndexDepths;
          if (_0x41a5f1 && Array.isArray(_0x41a5f1) && _0x41a5f1.length > 0) {
            _0x4ca8eb.indexOptions.packageDepths = _0x2c2529(_0x41a5f1);
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.regenerateStdLibIndices)) {
            _0x4ca8eb.indexOptions.regenerateStdLibIndices = _0x24e5c9.regenerateStdLibIndices;
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.persistAllIndices)) {
            _0x4ca8eb.indexOptions.localStorageUri = _0x24e5c9.persistAllIndices ? _0x3ab3f7.rootUri : undefined;
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.includeAliasesFromUserFiles)) {
            _0x4ca8eb.indexOptions.includeAliasesFromUserFiles = _0x24e5c9.includeAliasesFromUserFiles;
          }
          const _0x3f454a = _0x24e5c9.userFileIndexingLimit;
          if (_0x1bf901.isNumber(_0x3f454a)) {
            _0x4ca8eb.indexOptions.userFileIndexingLimit = _0x3f454a;
          }
        }
        if (_0x4ca8eb.logLevel === _0x519707.LogLevel.Log && _0x1bf901.isBoolean(_0x24e5c9.logTypeEvaluationTime)) {
          _0x4ca8eb.logTypeEvaluationTime = _0x24e5c9.logTypeEvaluationTime;
        }
        if (_0x1bf901.isNumber(_0x24e5c9.typeEvaluationTimeThreshold)) {
          _0x4ca8eb.typeEvaluationTimeThreshold = _0x24e5c9.typeEvaluationTimeThreshold;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.enableExtractCodeAction)) {
          _0x4ca8eb.enableExtractCodeAction = _0x24e5c9.enableExtractCodeAction;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.disableWorkspaceSymbol)) {
          _0x4ca8eb.disableWorkspaceSymbol = _0x24e5c9.disableWorkspaceSymbol;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.watchForLibraryChanges)) {
          _0x4ca8eb.watchForLibraryChanges = _0x24e5c9.watchForLibraryChanges;
        }
        if (!_0x3ab3f7.rootUri || _0x3ab3f7.kinds.includes(_0x1d2c29.WellKnownWorkspaceKinds.Default)) {
          _0x4ca8eb.indexing = false;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.enablePytestSupport)) {
          _0x4ca8eb.enablePytestSupport = _0x24e5c9.enablePytestSupport;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.gotoDefinitionInStringLiteral)) {
          _0x4ca8eb.gotoDefinitionInStringLiteral = _0x24e5c9.gotoDefinitionInStringLiteral;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.remapDiagnostics)) {
          _0x4ca8eb.remapDiagnostics = _0x24e5c9.remapDiagnostics;
        }
        if (_0x24e5c9.inlayHints) {
          if (_0x1bf901.isBoolean(_0x24e5c9.inlayHints.variableTypes)) {
            _0x4ca8eb.variableInlayTypeHints = _0x24e5c9.inlayHints.variableTypes;
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.inlayHints.functionReturnTypes)) {
            _0x4ca8eb.functionReturnInlayTypeHints = _0x24e5c9.inlayHints.functionReturnTypes;
          }
          const _0x2f9b64 = _0x24e5c9.inlayHints.callArgumentNames;
          if (Object.values(_0x992df2.CallArgumentNameModes).includes(_0x2f9b64)) {
            _0x4ca8eb.callArgumentNameInlayHints = _0x2f9b64;
          } else {
            if (_0x1bf901.isBoolean(_0x2f9b64)) {
              _0x4ca8eb.callArgumentNameInlayHints = _0x2f9b64 ? _0x992df2.CallArgumentNameModes.all : _0x992df2.CallArgumentNameModes.off;
            }
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.inlayHints.pytestParameters)) {
            _0x4ca8eb.pytestParametersInlayTypeHints = _0x24e5c9.inlayHints.pytestParameters;
          }
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.intelliCodeEnabled)) {
          _0x4ca8eb.intelliCodeEnabled = _0x24e5c9.intelliCodeEnabled;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.implicitImportsInNotebooks)) {
          _0x4ca8eb.implicitImportsInNotebooks = _0x24e5c9.implicitImportsInNotebooks;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.autoFormatStrings)) {
          _0x4ca8eb.autoFormatStrings = _0x24e5c9.autoFormatStrings;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.autoIndent)) {
          _0x4ca8eb.autoIndent = _0x24e5c9.autoIndent;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.supportRestructuredText)) {
          _0x4ca8eb.supportRestructuredText = _0x24e5c9.supportRestructuredText;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.cacheLSPData)) {
          _0x4ca8eb.cacheLSPData = _0x24e5c9.cacheLSPData;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.reportExtraTelemetry)) {
          _0x4ca8eb.reportExtraTelemetry = _0x24e5c9.reportExtraTelemetry;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.supportDocstringTemplate)) {
          _0x4ca8eb.supportDocstringTemplate = _0x24e5c9.supportDocstringTemplate;
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.displayEnglishDiagnostics)) {
          _0x4ca8eb.displayEnglishDiagnostics = _0x24e5c9.displayEnglishDiagnostics;
        }
        if (_0x24e5c9.aiCodeActions) {
          if (!_0x4ca8eb.aiCodeActions) {
            _0x4ca8eb.aiCodeActions = {};
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.aiCodeActions.implementAbstractClasses)) {
            _0x4ca8eb.aiCodeActions.implementAbstractClasses = _0x24e5c9.aiCodeActions.implementAbstractClasses;
          }
          if (_0x1bf901.isBoolean(_0x24e5c9.aiCodeActions.generateDocstring)) {
            _0x4ca8eb.aiCodeActions.generateDocstring = _0x24e5c9.aiCodeActions.generateDocstring;
          }
        }
        if (_0x1bf901.isBoolean(_0x24e5c9.generateWithTypeAnnotation)) {
          _0x4ca8eb.generateWithTypeAnnotation = _0x220548.has('generatewithtypeannotation') ? _0x4ca8eb.typeCheckingMode !== 'off' : _0x24e5c9.generateWithTypeAnnotation;
        }
        _0x4ca8eb.nodeExecutable = _0x24e5c9.nodeExecutable;
        if (_0x1bf901.isString(_0x24e5c9.languageServerMode)) {
          _0x2d1e82(_0x24e5c9.languageServerMode, _0x220548, _0x4ca8eb);
        }
      }
      function _0x5625d4(_0xd40ff2, _0x5ccfde, _0x42e375) {
        if (_0x1bf901.isString(_0x42e375.runStartupCommands)) {
          _0xd40ff2.notebookRunStartupCommands = _0x42e375.runStartupCommands;
        } else {
          if (_0x1bf901.isArray(_0x42e375.runStartupCommands)) {
            _0xd40ff2.notebookRunStartupCommands = _0x42e375.runStartupCommands.join('\n');
          }
        }
      }
      function _0x2b9caf(_0x55ef81, _0x585042, _0x592ca8) {
        if (_0x1bf901.isBoolean(_0x592ca8.formatOnType)) {
          _0x55ef81.formatOnType = _0x592ca8.formatOnType;
        }
        const _0x2f7372 = {
          defaultTabSequence: _0x53454b.DefaultEditorIndentConfig.defaultTabSequence,
          tabSize: _0x53454b.DefaultEditorIndentConfig.tabSize
        };
        if (_0x1bf901.isBoolean(_0x592ca8.insertSpaces)) {
          if (_0x592ca8.insertSpaces) {
            if (_0x1bf901.isNumber(_0x592ca8.indentSize)) {
              _0x2f7372.defaultTabSequence = ' '.repeat(_0x592ca8.indentSize);
            } else {
              if (_0x592ca8.indentSize === 'tabSize' && _0x1bf901.isNumber(_0x592ca8.tabSize)) {
                _0x2f7372.defaultTabSequence = ' '.repeat(_0x592ca8.tabSize);
              }
            }
          } else {
            _0x2f7372.defaultTabSequence = '\t';
          }
        }
        if (_0x1bf901.isNumber(_0x592ca8.tabSize)) {
          _0x2f7372.tabSize = _0x592ca8.tabSize;
        }
        _0x55ef81.editorIndentConfig = _0x2f7372;
      }
      function _0x246047(_0x17b89b, _0x34ff9f, _0x128233, _0x48803) {
        if (_0x34ff9f) {
          let _0x5161ee;
          if (_0x1bf901.isString(_0x34ff9f.pythonPath) && !_0x55f1a8.isPythonBinary(_0x34ff9f.pythonPath)) {
            _0x5161ee = _0x17b89b ? _0x17b89b.resolvePaths(_0x2b4949.expandPathVariables(_0x34ff9f.pythonPath, _0x17b89b, _0x48803)) : _0x41b633.Uri.file(_0x34ff9f.pythonPath, _0x128233, true);
          }
          const _0x22bf99 = _0x34ff9f.pythonEnvironmentName || (_0x5161ee === null || _0x5161ee === undefined ? undefined : _0x5161ee.toUserVisibleString());
          return {
            pythonPath: _0x5161ee,
            pythonEnvironmentName: _0x22bf99
          };
        }
        return undefined;
      }
      function _0x514c71(_0x500a61, _0x37f509, _0x567558) {
        const _0x2ea70a = _0x41b633.Uri.parse(_0x500a61, _0x37f509);
        if (_0x9add10.NotebookUriMapper.isNotebookCell(_0x2ea70a)) {
          return _0x567558.getMappedCellUri(_0x2ea70a);
        }
        return _0x2ea70a;
      }
      function _0x1935ed(_0x1e3cd2) {
        return _0x1e3cd2.change.metadata?.custom?.metadata?.kernelspec || _0x1e3cd2.change.metadata?.metadata?.kernelspec;
      }
      function _0x37cb09(_0x4f9511, _0x186d35, _0x58d550) {
        const _0x2c7d79 = [];
        if (_0x4f9511) {
          _0x2c7d79.push('\n');
          _0x2c7d79.push(':');
        }
        if (_0x186d35) {
          _0x2c7d79.push('{');
        }
        if (_0x2c7d79.length > 0) {
          return {
            firstTriggerCharacter: _0x2c7d79[0],
            moreTriggerCharacter: _0x2c7d79.slice(1)
          };
        } else {
          return undefined;
        }
      }
      function _0x33645b(_0x4b734f) {
        if (_0x9add10.NotebookUriMapper.isNotebookCell(_0x4b734f) || _0x4b734f.fileName === 'notebook_ipython_mode.py') {
          return _0x2d058e.IPythonMode.CellDocs;
        } else {
          return _0x2d058e.IPythonMode.None;
        }
      }
      function _0x401f65(_0x37c57a, _0x4a2e5f) {
        const _0x3ee66a = '${workspaceFolder:';
        const _0x233fd4 = `${_0x3ee66a}${_0x37c57a}}`;
        const _0x40324a = [];
        for (let _0xb51ffe of _0x3b13bd.tryGetStringValues(_0x4a2e5f)) {
          if (_0xb51ffe.startsWith(_0x3ee66a)) {
            if (!_0xb51ffe.startsWith(_0x233fd4)) {
              continue;
            }
            _0xb51ffe = _0x16a30e.normalizeSlashes(_0xb51ffe.substring(_0x233fd4.length), '/');
            if (_0xb51ffe.startsWith('/')) {
              _0xb51ffe = _0xb51ffe.substring(1);
            }
          }
          _0x40324a.push(_0xb51ffe);
        }
        return _0x40324a;
      }
      function _0x2fc13a(_0x2d2a6f, _0x47c7e7) {
        const _0x50eeef = _0x47c7e7;
        const _0x53df00 = _0x2d2a6f.service.serviceProvider.tryGet(_0x4f0835.PylanceServiceKeys.packageDiscoverer);
        if (_0x50eeef.showOnlyDirectDependenciesInAutoImport) {
          if (_0x53df00 === null || _0x53df00 === undefined) {
            undefined;
          } else {
            _0x53df00.ensureDistributionToPackageMap(_0x2d2a6f.service.backgroundAnalysisProgram.program);
          }
        }
        if (_0x50eeef.reportExtraTelemetry) {
          if (_0x53df00 === null || _0x53df00 === undefined) {
            undefined;
          } else {
            _0x53df00.computeInstalledPackages(_0x2d2a6f.service.backgroundAnalysisProgram.program);
          }
          if (_0x53df00 === null || _0x53df00 === undefined) {
            undefined;
          } else {
            _0x53df00.report(_0x2d2a6f.service.backgroundAnalysisProgram.program);
          }
        } else {
          if (_0x53df00 === null || _0x53df00 === undefined) {
            undefined;
          } else {
            _0x53df00.reset(_0x2d2a6f.service.backgroundAnalysisProgram.program, 'serviceRestarted');
          }
        }
      }
      function _0x23ec85(_0x335a22, _0x5c848e) {
        const _0x255b9f = _0x335a22;
        if (_0x255b9f.enableExtra) {
          _0x255b9f.enableExtra(!!_0x5c848e.reportExtraTelemetry);
        }
      }
      function _0x1556e3(_0x5b0219, _0x110830, _0x470470) {
        const _0x103e99 = _0x470470.typeCheckingMode && _0x470470.typeCheckingMode !== 'off';
        const _0x58886d = _0x470470.diagnosticSeverityOverrides && Object.keys(_0x470470.diagnosticSeverityOverrides).some(_0x44ac1c => _0x44ac1c !== 'reportShadowedImports' || _0x470470.diagnosticSeverityOverrides[_0x44ac1c] !== 'warning');
        if (_0x110830.rootUri && !_0x110830.rootUri.isEmpty() && (_0x103e99 || _0x58886d)) {
          const _0x9e5ccd = _0x452d56.findConfigFile(_0x110830.service.fs, _0x110830.rootUri);
          const _0x53b506 = _0x452d56.findPyprojectTomlFile(_0x110830.service.fs, _0x110830.rootUri);
          const _0x2227f8 = _0x9e5ccd || _0x53b506 && _0x110830.service.fs.readFileSync(_0x53b506, 'utf8').includes('[tool.pyright]');
          if (_0x2227f8) {
            _0x5b0219.addPropertyToNextEvent(_0x5753ee.TelemetryEventName.SETTINGS, 'unusableCompilerFlags', 'true');
          } else {
            _0x5b0219.addPropertyToNextEvent(_0x5753ee.TelemetryEventName.SETTINGS, 'unusableCompilerFlags', 'false');
          }
        } else {
          _0x5b0219.addPropertyToNextEvent(_0x5753ee.TelemetryEventName.SETTINGS, 'unusableCompilerFlags', 'false');
        }
      }
      function _0x2d1e82(_0x590c58, _0x9881c8, _0x2fcb4c) {
        _0x2fcb4c.languageServerMode = _0x590c58;
        if (_0x590c58 === 'light') {
          if (_0x9881c8.has('exclude')) {
            _0x2fcb4c.excludeFileSpecs = ['**'];
          }
          if (_0x9881c8.has('indexing')) {
            _0x2fcb4c.indexing = false;
          }
          if (_0x9881c8.has('enablepytestsupport')) {
            _0x2fcb4c.enablePytestSupport = false;
          }
          if (_0x9881c8.has('typecheckingmode')) {
            _0x2fcb4c.typeCheckingMode = 'off';
          }
          if (_0x9881c8.has('uselibrarycodefortypes')) {
            _0x2fcb4c.useLibraryCodeForTypes = false;
          }
          return;
        }
        if (_0x590c58 === 'full') {
          if (_0x9881c8.has('autoimportcompletions')) {
            _0x2fcb4c.autoImportCompletions = true;
          }
          if (_0x9881c8.has('showonlydirectdependenciesinautoimport')) {
            _0x2fcb4c.showOnlyDirectDependenciesInAutoImport = true;
          }
          if (_0x9881c8.has('packageindexdepths')) {
            _0x2fcb4c.indexOptions = _0x2fcb4c.indexOptions ?? _0x1268d9.getEmptyIndexOptions();
            _0x2fcb4c.indexOptions.packageDepths = [['', 4, true]];
          }
          if (_0x9881c8.has('regeneratestdlibindices')) {
            _0x2fcb4c.indexOptions = _0x2fcb4c.indexOptions ?? _0x1268d9.getEmptyIndexOptions();
            _0x2fcb4c.indexOptions.regenerateStdLibIndices = true;
          }
          if (_0x9881c8.has('userfileindexinglimit')) {
            _0x2fcb4c.indexOptions = _0x2fcb4c.indexOptions ?? _0x1268d9.getEmptyIndexOptions();
            _0x2fcb4c.indexOptions.userFileIndexingLimit = -1;
          }
          if (_0x9881c8.has('includealiasesfromuserfiles')) {
            _0x2fcb4c.indexOptions = _0x2fcb4c.indexOptions ?? _0x1268d9.getEmptyIndexOptions();
            _0x2fcb4c.indexOptions.includeAliasesFromUserFiles = true;
          }
          if (_0x9881c8.has('inlayhints.functionreturntypes')) {
            _0x2fcb4c.functionReturnInlayTypeHints = true;
          }
          if (_0x9881c8.has('inlayhints.pytestparameters')) {
            _0x2fcb4c.pytestParametersInlayTypeHints = true;
          }
          if (_0x9881c8.has('supportrestructuredtext')) {
            _0x2fcb4c.supportRestructuredText = true;
          }
          if (_0x9881c8.has('supportdocstringtemplate')) {
            _0x2fcb4c.supportDocstringTemplate = true;
          }
          return;
        }
      }
    },
    78843: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AsynchronousFeatures = undefined;
      const _0x1da617 = require(56911);
      const _0x37fc98 = require(18177);
      const _0x3ca32f = require(34455);
      const _0x27fd1c = __importStar(require(48281));
      const _0x23a799 = require(29512);
      const _0x69eee3 = require(5737);
      const _0x499983 = require(84754);
      const _0x4de181 = require(23898);
      const _0x333d0d = require(24122);
      const _0x4ba58c = require(13259);
      const _0x3ae850 = require(30048);
      const _0x153fa3 = require(69482);
      const _0x17522e = require(17920);
      const _0x1880f6 = require(78459);
      const _0x100b7a = require(27555);
      const _0x485bbd = require(74899);
      const _0x21a146 = require(44657);
      const _0x48b0e2 = require(8398);
      const _0x5dddca = require(60722);
      class _0x385985 extends _0x5dddca.FeaturesBase {
        constructor(_0x1ae997) {
          super(_0x1ae997);
          this._lastTriggerKind = _0x1da617.CompletionTriggerKind.Invoked;
          this._telemetry = this.serviceProvider.get(_0x3ae850.PylanceServiceKeys.telemetry);
          this._completionCoverage = new _0x153fa3.CompletionCoverage.CompletionTelemetry(this._telemetry);
        }
        async handleCodeAction(_0x378302, _0x3643de, _0x26af56) {
          _0x5dddca.recordUserInteractionTime(_0x378302);
          const _0x58052e = this.state.convertLspUriStringToUri(_0x3643de.textDocument.uri);
          const _0x13ab18 = await _0x23a799.CodeActionProvider.getCodeActionsForPosition(_0x378302, _0x58052e, _0x3643de.range, _0x3643de.context.only, _0x26af56);
          const _0x38a01b = await _0x100b7a.CodeActionProvider.getCodeActionsForPosition(_0x378302, _0x58052e, _0x3643de.range, _0x3643de.context, !!this.state.serverOptions.hasVSCodeExtension, _0x26af56);
          return [..._0x13ab18, ..._0x38a01b];
        }
        async handleCompletion(_0x3dda12, _0x2783b0, _0x112332) {
          if (_0x3dda12.disableLanguageServices) {
            return null;
          }
          if (this.state.client.hasVisualStudioExtensionsCapability) {
            const _0x43a62d = _0x2783b0.context;
            if (_0x43a62d?._vs_invokeKind === 2) {
              return null;
            }
          }
          const _0x4ccbe5 = this.getCompletionOptions(_0x3dda12, _0x2783b0);
          const _0x22de3f = this.state.convertLspUriStringToUri(_0x2783b0.textDocument.uri);
          return await _0x153fa3.trackPerf(_0x3dda12, _0x153fa3.TelemetryEventName.COMPLETION_SLOW, async _0x2acac9 => {
            const _0x7a27c4 = this.state.documentTransformer.runWithPosition(_0x3dda12, _0x2783b0, (_0x3d35f0, _0x177522) => {
              const _0x424fe5 = new _0x1880f6.AggregatedCompletionProvider(_0x3d35f0, _0x22de3f, _0x177522, _0x4ccbe5, {
                nameMap: _0x4ba58c.wellKnownAbbreviationMap,
                indices: _0x485bbd.SymbolIndexer.getIndices(_0x3dda12)
              }, _0x3dda12.supportDocstringTemplate ?? false, !!this.state.serverOptions.supportsTelemetry, _0x112332);
              const _0x278396 = _0x424fe5.getCompletions();
              const _0x4e5fea = _0x424fe5.getMemberAccessInfo();
              if (_0x278396) {
                for (const _0x2f6f2b of _0x278396.items) {
                  const _0x3056ef = _0x2f6f2b.kind === _0x1da617.CompletionItemKind.Keyword ? _0x499983.normalKeywordCompletionAcceptedCommand : _0x2f6f2b.detail === _0x69eee3.autoImportDetail ? _0x499983.autoImportAcceptedCommand : _0x2f6f2b.detail === _0x69eee3.indexValueDetail ? _0x499983.indexValueAcceptedCommand : _0x4e5fea ? _0x499983.normalMemberAccessCompletionAcceptedCommand : _0x499983.normalCompletionAcceptedCommand;
                  _0x2f6f2b.command = _0x4de181.mergeCommands(_0x2f6f2b.command, _0x3056ef);
                }
              }
              this._setCompletionIncomplete(_0x2783b0, _0x278396);
              if (_0x278396 && this.state.client.hasVisualStudioExtensionsCapability) {
                const _0x54fe8f = ['Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Mn', 'Mc', 'Lo', 'Me', 'Nd', 'Nl', 'No', 'Pc'];
                _0x278396._vsext_continueCharacters = _0x54fe8f.map(_0x5a0be5 => ({
                  type: 'unicodeClass',
                  unicodeClass: _0x5a0be5
                }));
              }
              if (_0x278396 && _0x3dda12.completeFunctionParens && !_0x112332.isCancellationRequested) {
                for (const _0x347a73 of _0x278396.items) {
                  _0x48b0e2.updateInsertTextForAutoParensIfNeeded(_0x347a73, _0x2783b0.textDocument.uri, !!this.state.serverOptions.hasVSCodeExtension);
                }
              }
              _0x2acac9.addCustomMeasure('completionItems', (_0x278396 === null || _0x278396 === undefined ? undefined : _0x278396.items.length) ?? -1);
              const _0x2a354b = _0x424fe5.getAutoImportInfo();
              if (_0x2a354b) {
                const _0x5df6ec = 1;
                _0x2acac9.addCustomMeasure('autoImportAdditionTimeInMS', _0x2a354b.additionTimeInMS);
                _0x2acac9.addCustomMeasure('autoImportIndexUsed', _0x2a354b.indexUsed ? 1 : 0);
                _0x2acac9.addCustomMeasure('autoImportTotalTimeInMS', _0x2a354b.totalTimeInMS);
                _0x2acac9.addCustomMeasure('autoImportItemCount', _0x2a354b.itemCount, _0x5df6ec);
                _0x2acac9.addCustomMeasure('autoImportSymbolCount', _0x2a354b.symbolCount, _0x5df6ec);
                _0x2acac9.addCustomMeasure('autoImportIndexCount', _0x2a354b.indexCount, _0x5df6ec);
                _0x2acac9.addCustomMeasure('autoImportImportAliasCount', _0x2a354b.importAliasCount, _0x5df6ec);
                _0x2acac9.addCustomMeasure('autoImportModuleTimeInMS', _0x2a354b.moduleTimeInMS);
                _0x2acac9.addCustomMeasure('autoImportIndexTimeInMS', _0x2a354b.indexTimeInMS);
                _0x2acac9.addCustomMeasure('autoImportImportAliasTimeInMS', _0x2a354b.importAliasTimeInMS);
              }
              const _0x3319d0 = _0x424fe5.getSlowCompletionInfo();
              if (_0x3319d0) {
                _0x2acac9.addCustomProperty('completionType', _0x3319d0.completionType);
                _0x2acac9.addCustomProperty('fileType', _0x3319d0.fileType);
              }
              _0x153fa3.StubTelemetry.sendStubCompletionTelemetryForMissingTypes(this._telemetry, _0x278396, _0x4e5fea);
              this._completionCoverage.update(_0x278396, _0x4e5fea);
              return _0x278396;
            }, _0x112332);
            if (!_0x7a27c4) {
              return _0x7a27c4;
            }
            const _0x9f21b1 = new _0x17522e.IntelliCodeCompletionAugmenter(_0x3dda12.service.backgroundAnalysisProgram.program, _0x22de3f, _0x2783b0.position, _0x4ccbe5, _0x112332);
            const _0x261438 = _0x9f21b1.getExtensionInfo();
            if (_0x261438) {
              _0x2acac9.setCorrelationId(_0x261438.correlationId);
              _0x2acac9.addCustomMeasure('selectedItemTelemetryBuildTimeInMs', _0x261438.selectedItemTelemetryTimeInMS);
              _0x2acac9.addCustomMeasure('completionItemTelemetryBuildTimeInMs', _0x261438.itemTelemetryTimeInMS);
              _0x2acac9.addCustomMeasure('extensionTotalTimeInMS', _0x261438.totalTimeInMS);
            }
            await _0x9f21b1.addCompletionItems(_0x7a27c4);
            return _0x7a27c4;
          }, 1000);
        }
        async handleExecuteCommand(_0x153be7, _0x2dba2e, _0x354248, _0x16c846, _0x381708, _0x303bd7, _0x481392) {
          if (this._pendingCommandCancellationSource) {
            this._pendingCommandCancellationSource.cancel();
            this._pendingCommandCancellationSource = undefined;
          }
          const _0x2cd001 = async _0x447213 => {
            const _0x308a29 = _0x354248(_0x153be7, _0x447213);
            const _0x43f0d9 = _0x3ca32f.isThenable(_0x308a29) ? await _0x308a29 : _0x308a29;
            if (_0x1da617.WorkspaceEdit.is(_0x43f0d9)) {
              await _0x16c846({
                label: `Command '${_0x153be7.command}'`,
                edit: _0x43f0d9,
                metadata: {
                  isRefactoring: _0x381708
                }
              });
            }
            if (_0x37fc98.CommandResult.is(_0x43f0d9)) {
              await _0x16c846({
                label: _0x43f0d9.label,
                edit: _0x43f0d9.edits,
                metadata: {
                  isRefactoring: _0x381708
                }
              });
            }
            return _0x43f0d9;
          };
          if (_0x303bd7) {
            const _0x1b51ae = await _0x2dba2e();
            const _0x22b074 = _0x1b51ae.source;
            this._pendingCommandCancellationSource = _0x22b074;
            try {
              const _0x109325 = await _0x2cd001(_0x22b074.token);
              return _0x109325;
            } finally {
              _0x1b51ae.reporter.done();
              _0x22b074.dispose();
            }
          } else {
            const _0x4d232d = await _0x2cd001(_0x481392);
            return _0x4d232d;
          }
        }
        async handleSemanticTokens(_0x276b13, _0x572fc3, _0x3b49a4) {
          if (_0x276b13.disableLanguageServices) {
            return {
              data: []
            };
          }
          const _0x4b4d1d = this.state.convertLspUriStringToUri(_0x572fc3.textDocument.uri);
          const _0x504e7d = await _0x333d0d.getBackgroundAnalysisProgram(_0x276b13).getSemanticTokens(_0x4b4d1d, undefined, !this.state.client.hasAugmentsSyntaxTokensCapability, undefined, _0x3b49a4);
          _0x27fd1c.assert(_0x1da617.SemanticTokens.is(_0x504e7d), 'onSemanticTokens should only return SemanticTokens');
          return _0x504e7d;
        }
        async handleDelta(_0x3b2caf, _0x3361f7, _0x5f33e4) {
          if (_0x3b2caf.disableLanguageServices) {
            return {
              data: []
            };
          }
          const _0x55256e = this.state.convertLspUriStringToUri(_0x3361f7.textDocument.uri);
          const _0x22467e = await _0x333d0d.getBackgroundAnalysisProgram(_0x3b2caf).getSemanticTokens(_0x55256e, undefined, !this.state.client.hasAugmentsSyntaxTokensCapability, _0x3361f7.previousResultId, _0x5f33e4);
          return _0x22467e;
        }
        async handleRange(_0x2dd68a, _0x343f6b, _0x331480) {
          if (_0x2dd68a.disableLanguageServices) {
            return {
              data: []
            };
          }
          const _0x274acb = this.state.convertLspUriStringToUri(_0x343f6b.textDocument.uri);
          const _0x4bdd2e = await _0x333d0d.getBackgroundAnalysisProgram(_0x2dd68a).getSemanticTokens(_0x274acb, _0x343f6b.range, !this.state.client.hasAugmentsSyntaxTokensCapability, undefined, _0x331480);
          _0x27fd1c.assert(_0x1da617.SemanticTokens.is(_0x4bdd2e), 'onRange should only return SemanticTokens');
          return _0x4bdd2e;
        }
        async handleInlayHints(_0x23839f, _0x374685, _0x3fdec4) {
          if (_0x23839f.disableLanguageServices) {
            return null;
          }
          const _0x3d44d7 = this.state.convertLspUriStringToUri(_0x374685.textDocument.uri);
          if (_0x3d44d7.hasExtension('.pyi')) {
            return null;
          }
          const _0x2de009 = {
            variableInlayTypeHints: _0x23839f?.variableInlayTypeHints ?? false,
            functionReturnInlayTypeHints: _0x23839f?.functionReturnInlayTypeHints ?? false,
            callArgumentNameInlayHints: _0x23839f?.callArgumentNameInlayHints ?? _0x21a146.CallArgumentNameModes.off,
            pytestParametersInlayTypeHints: _0x23839f?.pytestParameterInlayTypeHints ?? false,
            supportedResolveSet: this.state.client.supportedInlayResolveCapabilitySet,
            lazyEdit: true
          };
          if (!_0x2de009.functionReturnInlayTypeHints && !_0x2de009.variableInlayTypeHints && !_0x2de009.pytestParametersInlayTypeHints && _0x2de009.callArgumentNameInlayHints === _0x21a146.CallArgumentNameModes.off) {
            return null;
          }
          return await _0x333d0d.getBackgroundAnalysisProgram(_0x23839f).onInlayHints(_0x3d44d7, _0x374685.range, _0x2de009, _0x3fdec4);
        }
        dispose() {
          var _0x1afd6e;
          var _0x44accd;
          if ((_0x1afd6e = this._pendingCommandCancellationSource) === null || _0x1afd6e === undefined) {
            undefined;
          } else {
            _0x1afd6e.cancel();
          }
          if ((_0x44accd = this._pendingCommandCancellationSource) === null || _0x44accd === undefined) {
            undefined;
          } else {
            _0x44accd.dispose();
          }
        }
        _setCompletionIncomplete(_0x9c081b, _0x237fb5) {
          const _0x4025d3 = this._lastTriggerKind !== _0x1da617.CompletionTriggerKind.TriggerForIncompleteCompletions || _0x9c081b.context?.triggerKind !== _0x1da617.CompletionTriggerKind.TriggerForIncompleteCompletions;
          this._lastTriggerKind = _0x9c081b.context?.triggerKind;
          if (_0x237fb5) {
            _0x237fb5.isIncomplete = _0x4025d3;
          }
        }
      }
      exports.AsynchronousFeatures = _0x385985;
    },
    60722: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FeaturesBase = undefined;
      exports.canNavigateToFile = _0x12bf8a;
      exports.recordUserInteractionTime = _0x29ee4c;
      const _0x5382f8 = require(34455);
      const _0x3cc640 = require(47091);
      const _0x4127a6 = require(44889);
      function _0x12bf8a(_0x553575, _0x11bc84) {
        if (!_0x3cc640.canNavigateToFile(_0x11bc84, _0x553575)) {
          return false;
        }
        return !_0x4127a6.NotebookUriMapper.isNotebookPrefixCell(_0x553575);
      }
      function _0x29ee4c(_0x1b079d) {
        if (_0x5382f8.isArray(_0x1b079d)) {
          _0x1b079d.forEach(_0x451125 => _0x451125.service.recordUserInteractionTime());
          return;
        }
        _0x1b079d.service.recordUserInteractionTime();
      }
      class _0x3f55b9 {
        constructor(_0x175c1e) {
          this.state = _0x175c1e;
        }
        get serviceProvider() {
          return this.state.serverOptions.serviceProvider;
        }
        getCompletionOptions(_0x4921ae, _0xf695cb) {
          const _0x3ef904 = this.state.client.hasCompletionCommitCharCapability && !!_0x4921ae.extraCommitChars;
          const _0x1da013 = _0x4921ae.importFormat ?? 'absolute';
          const _0x184619 = _0xf695cb ? !_0xf695cb.isCell : true;
          const _0x5221bb = {
            format: this.state.client.completionDocFormat,
            snippet: this.state.client.completionSupportsSnippet,
            lazyEdit: this.state.client.completionItemResolveSupportsAdditionalTextEdits,
            triggerCharacter: _0xf695cb?.context?.triggerCharacter,
            extraCommitChars: _0x3ef904,
            importFormat: _0x1da013,
            autoImport: _0x184619,
            dontAddTypeAnnotation: !_0x4921ae.generateWithTypeAnnotation,
            includeAliasesFromUserFiles: _0x4921ae.indexOptions?.includeAliasesFromUserFiles ?? false,
            showOnlyDirectDependenciesInAutoImport: !!_0x4921ae.showOnlyDirectDependenciesInAutoImport
          };
          return _0x5221bb;
        }
      }
      exports.FeaturesBase = _0x3f55b9;
    },
    33595: function (module, exports, require) {
      'use strict';

      var _0x34f9e7 = this && this.__decorate || function (_0x3f0163, _0x24aa0d, _0x46b762, _0x33e69e) {
        var _0x197e87 = arguments.length;
        var _0xbade20 = _0x197e87 < 3 ? _0x24aa0d : _0x33e69e === null ? _0x33e69e = Object.getOwnPropertyDescriptor(_0x24aa0d, _0x46b762) : _0x33e69e;
        var _0x2eafb6;
        if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') {
          _0xbade20 = Reflect.decorate(_0x3f0163, _0x24aa0d, _0x46b762, _0x33e69e);
        } else {
          for (var _0x3fe550 = _0x3f0163.length - 1; _0x3fe550 >= 0; _0x3fe550--) {
            if (_0x2eafb6 = _0x3f0163[_0x3fe550]) {
              _0xbade20 = (_0x197e87 < 3 ? _0x2eafb6(_0xbade20) : _0x197e87 > 3 ? _0x2eafb6(_0x24aa0d, _0x46b762, _0xbade20) : _0x2eafb6(_0x24aa0d, _0x46b762)) || _0xbade20;
            }
          }
        }
        if (_0x197e87 > 3 && _0xbade20) {
          Object.defineProperty(_0x24aa0d, _0x46b762, _0xbade20);
        }
        return _0xbade20;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.LanguageService = undefined;
      const _0x584677 = require(56911);
      const _0x4f1d5d = require(55890);
      const _0x1e6327 = require(82695);
      const _0x48d24f = require(75130);
      const _0x2bf3ff = require(53266);
      const _0xb2b25b = require(25075);
      const _0x4e7e08 = require(34455);
      const _0x347502 = require(11479);
      const _0x1f861b = require(65880);
      const _0x1003bb = require(56412);
      const _0x75df84 = require(71745);
      const _0x373fa3 = require(27113);
      const _0x42d093 = require(5884);
      const _0x125a68 = require(92196);
      const _0x1cada9 = require(86846);
      const _0x18b7ba = require(86295);
      const _0x4bdea2 = require(67703);
      const _0x5d80c1 = require(67703);
      const _0x493633 = require(30741);
      const _0x302b50 = require(23073);
      const _0x19b871 = require(24122);
      const _0x2ff2a7 = require(30048);
      const _0x41ed10 = require(69482);
      const _0xa0ed35 = require(95349);
      const _0xdd0c08 = require(47351);
      const _0x235a36 = require(68021);
      const _0x2ee860 = require(4866);
      const _0x2adc37 = require(96285);
      const _0x11e5c1 = require(15986);
      const _0x426cf5 = require(35355);
      const _0x204ab5 = require(44657);
      const _0x57896c = require(8398);
      const _0x23e3ad = require(78843);
      const _0x328c97 = require(60722);
      const _0x2e94ef = require(80165);
      const _0x270b76 = require(78212);
      class _0x2b6f27 {
        constructor(_0x5211ae) {
          this._diagnosticsRemapper = new _0x235a36.DiagnosticsRemapper();
          const _0x32af53 = new _0x2e94ef.FeatureState(_0x5211ae);
          this._syncLS = new _0x270b76.SynchronousFeatures(_0x32af53);
          this._asyncLS = new _0x23e3ad.AsynchronousFeatures(_0x32af53);
          this._telemetry = this._serverOptions.serviceProvider.get(_0x2ff2a7.PylanceServiceKeys.telemetry);
        }
        get state() {
          return this._syncLS.state;
        }
        initialize(_0x29a708) {
          this._providerOpt = _0x29a708;
        }
        convertLspUriStringToUri(_0x4e3309) {
          return this._syncLS.state.convertLspUriStringToUri(_0x4e3309);
        }
        handleDidChangeWatchedFiles(_0x38823d) {
          _0x38823d.changes.forEach(_0x34ee48 => {
            const _0x8c525f = this._fs.realCasePath(this.convertLspUriStringToUri(_0x34ee48.uri));
            const _0x5e79bf = _0x34ee48.type === 1 ? 'add' : 'change';
            this._serverOptions.fileWatcherHandler.onFileChange(_0x5e79bf, _0x8c525f);
          });
        }
        handleDidOpenTextDocument(_0x4d8bdb, _0x514f76, _0x519bb9 = _0x2bf3ff.IPythonMode.None) {
          const _0x23197b = this.convertLspUriStringToUri(_0x514f76.textDocument.uri);
          let _0x109739 = this.state.openFileMap.get(_0x23197b.key);
          if (_0x109739) {
            this._console.error(`Received redundant open text document command for ${_0x23197b}`);
            _0x4f1d5d.TextDocument.update(_0x109739, [{
              text: _0x514f76.textDocument.text
            }], _0x514f76.textDocument.version);
          } else {
            _0x109739 = _0x4f1d5d.TextDocument.create(_0x514f76.textDocument.uri, 'python', _0x514f76.textDocument.version, _0x514f76.textDocument.text);
          }
          this.state.openFileMap.set(_0x23197b.key, _0x109739);
          _0x4d8bdb.forEach(_0x55f2b5 => {
            _0x55f2b5.service.setFileOpened(_0x23197b, _0x514f76.textDocument.version, _0x514f76.textDocument.text, _0x519bb9);
          });
        }
        handleDidChangeTextDocument(_0x770f5f, _0x795f0f, _0x5f4be6 = _0x2bf3ff.IPythonMode.None) {
          _0x328c97.recordUserInteractionTime(_0x770f5f);
          const _0x519f43 = this.convertLspUriStringToUri(_0x795f0f.textDocument.uri);
          const _0x23a148 = this.state.openFileMap.get(_0x519f43.key);
          if (!_0x23a148) {
            this._console.error(`Received change text document command for closed file ${_0x519f43}`);
            return;
          }
          _0x4f1d5d.TextDocument.update(_0x23a148, _0x795f0f.contentChanges, _0x795f0f.textDocument.version);
          const _0x236035 = _0x23a148.getText();
          _0x770f5f.forEach(_0x5232ff => {
            _0x5232ff.service.updateOpenFileContents(_0x519f43, _0x795f0f.textDocument.version, _0x236035, _0x5f4be6);
          });
        }
        handleDidCloseTextDocument(_0x846d76, _0x2f0f58) {
          const _0x553a6b = this.convertLspUriStringToUri(_0x2f0f58.textDocument.uri);
          _0x846d76.forEach(_0x614354 => {
            _0x614354.service.setFileClosed(_0x553a6b);
          });
          this.state.openFileMap.delete(_0x553a6b.key);
        }
        handleShutdown(_0x79c9a2) {
          this.state.openFileMap.clear();
        }
        addDisposables(..._0x4cc814) {
          this.state.disposable.push(..._0x4cc814);
        }
        handleAnalysisCompletedHandler(_0xdd927b, _0x240b41, _0x222502, _0x396c15) {
          _0x240b41.diagnostics.forEach(_0x4c316b => {
            if (!_0x328c97.canNavigateToFile(_0x4c316b.fileUri, _0xdd927b)) {
              return;
            }
            _0x396c15(this.convertDiagnostics(_0xdd927b, _0x4c316b));
          });
          if (!_0x222502.isEnabled(_0x240b41)) {
            _0x222502.end();
            return;
          }
          const _0xbaa5f3 = this._getProgressMessage(_0x240b41);
          if (_0xbaa5f3) {
            _0x222502.begin();
            _0x222502.report(_0xbaa5f3);
          } else {
            _0x222502.end();
          }
        }
        updateOptionsAndRestartService(_0x55f269, _0x328ad8, _0x598ae3) {
          _0x125a68.AnalyzerServiceExecutor.runWithOptions(_0x55f269, _0x328ad8, {
            typeStubTargetImportName: _0x598ae3,
            pythonEnvironmentName: _0x55f269.pythonEnvironmentName
          });
          _0x55f269.searchPathsToWatch = _0x55f269.service.librarySearchUrisToWatch ?? [];
          _0x55f269.disableLanguageServices = !!_0x328ad8.disableLanguageServices;
          _0x55f269.disableTaggedHints = !!_0x328ad8.disableTaggedHints;
          _0x55f269.disableOrganizeImports = !!_0x328ad8.disableOrganizeImports;
          _0x57896c.enableExtraTelemetry(this._telemetry, _0x328ad8);
          _0x57896c.setPackageDiscovery(_0x55f269, _0x328ad8);
          _0x57896c.sendCompilerFlagsTelemetry(this._telemetry, _0x55f269, _0x328ad8);
        }
        reanalyze() {
          this._provider.getWorkspaces().forEach(_0x4f6cd1 => _0x4f6cd1.service.invalidateAndForceReanalysis(_0x1e6327.InvalidatedReason.Reanalyzed));
        }
        restart() {
          this._provider.getWorkspaces().forEach(_0x6e107 => _0x6e107.service.restart());
        }
        registerDynamicFeatures() {
          this.state.registerDynamicFeatures();
        }
        updateDynamicFeatures(_0x431ae6) {
          this.state.updateDynamicFeatures(_0x431ae6);
        }
        convertDiagnostics(_0xde875d, _0x50e2bd) {
          return [{
            uri: _0x42d093.convertUriToLspUriString(_0xde875d, _0x50e2bd.fileUri),
            version: _0x50e2bd.version,
            diagnostics: this._convertDiagnostics(_0xde875d, _0x50e2bd.diagnostics)
          }];
        }
        handleInitialize(_0x503dea, _0x327b09, _0xbc60af, _0x2a18f3, _0x2a9e50) {
          var _0x6f8465;
          const _0x3acc7c = _0x503dea.initializationOptions ?? {};
          if (this._serverOptions.hasVSCodeExtension) {
            _0x302b50.verifyClient(_0x3acc7c.clientVerification);
          }
          if (_0x503dea.locale) {
            _0x4bdea2.setLocaleOverride(_0x503dea.locale);
          }
          const _0x2272cb = _0x503dea.capabilities;
          this._client.hasConfigurationCapability = !!_0x2272cb.workspace?.configuration;
          this._client.hasWatchFileCapability = !!_0x2272cb.workspace?.didChangeWatchedFiles?.dynamicRegistration;
          this._client.hasWatchFileRelativePathCapability = !!_0x2272cb.workspace?.didChangeWatchedFiles?.relativePatternSupport;
          this._client.hasWorkspaceFoldersCapability = !!_0x2272cb.workspace?.workspaceFolders;
          this._client.hasVisualStudioExtensionsCapability = !!_0x2272cb._vs_supportsVisualStudioExtensions;
          this._client.hasActiveParameterCapability = !!_0x2272cb.textDocument?.signatureHelp?.signatureInformation?.activeParameterSupport;
          this._client.hasSignatureLabelOffsetCapability = !!_0x2272cb.textDocument?.signatureHelp?.signatureInformation?.parameterInformation?.labelOffsetSupport;
          this._client.hasHierarchicalDocumentSymbolCapability = !!_0x2272cb.textDocument?.documentSymbol?.hierarchicalDocumentSymbolSupport;
          this._client.hasDocumentChangeCapability = !!_0x2272cb.workspace?.workspaceEdit?.documentChanges && !!_0x2272cb.workspace.workspaceEdit?.resourceOperations;
          this._client.hasDocumentAnnotationCapability = !!_0x2272cb.workspace?.workspaceEdit?.changeAnnotationSupport;
          this._client.hasCompletionCommitCharCapability = !!_0x2272cb.textDocument?.completion?.completionList?.itemDefaults && !!_0x2272cb.textDocument.completion.completionItem?.commitCharactersSupport;
          this._client.hoverContentFormat = this._getCompatibleMarkupKind(_0x2272cb.textDocument?.hover?.contentFormat);
          this._client.completionDocFormat = this._getCompatibleMarkupKind(_0x2272cb.textDocument?.completion?.completionItem?.documentationFormat);
          this._client.completionSupportsSnippet = !!_0x2272cb.textDocument?.completion?.completionItem?.snippetSupport;
          this._client.signatureDocFormat = this._getCompatibleMarkupKind(_0x2272cb.textDocument?.signatureHelp?.signatureInformation?.documentationFormat);
          const _0x346dcc = _0x2272cb.textDocument?.publishDiagnostics?.tagSupport?.valueSet || [];
          this._client.supportsUnnecessaryDiagnosticTag = _0x346dcc.some(_0x19f096 => _0x19f096 === _0x584677.DiagnosticTag.Unnecessary);
          this._client.supportsDeprecatedDiagnosticTag = _0x346dcc.some(_0x4e2103 => _0x4e2103 === _0x584677.DiagnosticTag.Deprecated);
          this._client.supportsTaskItemDiagnosticTag = this._client.hasVisualStudioExtensionsCapability;
          this._client.hasWindowProgressCapability = !!_0x2272cb.window?.workDoneProgress;
          this._client.hasGoToDeclarationCapability = !!_0x2272cb.textDocument?.declaration;
          this._client.completionItemResolveSupportsAdditionalTextEdits = !!((_0x6f8465 = _0x2272cb.textDocument?.completion?.completionItem?.resolveSupport) === null || _0x6f8465 === undefined ? undefined : _0x6f8465.properties.some(_0x117975 => _0x117975 === 'additionalTextEdits'));
          _0xbc60af.handleInitialize(_0x503dea);
          if (this._client.hasWatchFileCapability) {
            this._addDynamicFeature(new _0x18b7ba.FileWatcherDynamicFeature(_0x327b09, this._client.hasWatchFileRelativePathCapability, this._fs, _0xbc60af));
          }
          const _0x3e199f = {
            capabilities: {
              textDocumentSync: _0x584677.TextDocumentSyncKind.Incremental,
              definitionProvider: {
                workDoneProgress: true
              },
              declarationProvider: {
                workDoneProgress: true
              },
              typeDefinitionProvider: {
                workDoneProgress: true
              },
              referencesProvider: {
                workDoneProgress: true
              },
              documentSymbolProvider: {
                workDoneProgress: true
              },
              workspaceSymbolProvider: {
                workDoneProgress: true
              },
              hoverProvider: {
                workDoneProgress: true
              },
              documentHighlightProvider: {
                workDoneProgress: true
              },
              renameProvider: {
                prepareProvider: true,
                workDoneProgress: true
              },
              completionProvider: {
                triggerCharacters: this._client.hasVisualStudioExtensionsCapability ? ['.', '[', '@', '"', '\''] : ['.', '[', '"', '\''],
                resolveProvider: true,
                workDoneProgress: true,
                completionItem: {
                  labelDetailsSupport: true
                }
              },
              signatureHelpProvider: {
                triggerCharacters: ['(', ',', ')'],
                workDoneProgress: true
              },
              codeActionProvider: {
                codeActionKinds: _0x2a9e50,
                workDoneProgress: true
              },
              executeCommandProvider: {
                commands: _0x2a18f3,
                workDoneProgress: true
              },
              callHierarchyProvider: true,
              workspace: {
                workspaceFolders: {
                  supported: true,
                  changeNotifications: true
                }
              }
            }
          };
          this._client.allowAskingUsersPerformanceReporting = _0x3acc7c?.allowAskingUsersPerformanceReporting ?? false;
          const _0x474aa6 = _0x2272cb.textDocument?.semanticTokens;
          if (_0x474aa6) {
            const _0x11d568 = _0x2adc37.SemanticTokenProvider.computeLegend(_0x474aa6);
            _0x3e199f.capabilities.semanticTokensProvider = {
              legend: _0x11d568,
              range: true,
              full: {
                delta: true
              }
            };
            this._client.hasSemanticTokensRefreshCapability = !!_0x2272cb.workspace?.semanticTokens?.refreshSupport;
            this._client.hasAugmentsSyntaxTokensCapability = _0x474aa6.augmentsSyntaxTokens ? true : _0x474aa6.augmentsSyntaxTokens === undefined ? true : false;
          }
          this._client.hasExperimentationSupport = _0x3acc7c?.experimentationSupport ?? false;
          this._client.hasTrustedWorkspaceSupport = _0x3acc7c?.trustedWorkspaceSupport ?? false;
          if (this._serverOptions.disableClientFileWatching) {
            this._client.hasWatchFileCapability = false;
          }
          const _0x21ebfd = _0x2272cb.textDocument?.inlayHint;
          if (_0x21ebfd) {
            this._client.hasInlayHintRefreshCapability = !!_0x2272cb.workspace?.inlayHint?.refreshSupport;
            this._client.supportedInlayResolveCapabilitySet = new Set(_0x3acc7c?.resolveInlayHintEdit ? _0x21ebfd.resolveSupport?.properties : []);
          }
          if (_0x503dea.capabilities.workspace?.fileOperations?.willRename) {
            _0x3e199f.capabilities.workspace = {
              fileOperations: {
                willRename: {
                  filters: [{
                    pattern: {
                      glob: `**/*.{${_0x48d24f.supportedFileExtensions.map(_0x11b853 => _0x11b853.substr(1)).join(',')}}`,
                      matches: 'file'
                    }
                  }, {
                    pattern: {
                      glob: '**',
                      matches: 'folder'
                    }
                  }]
                }
              }
            };
          }
          const _0xc9aaa3 = _0x503dea.capabilities.textDocument?.onTypeFormatting?.dynamicRegistration ?? false;
          if (_0xc9aaa3 && _0x3acc7c.documentSelector) {
            this._addDynamicFeature(new _0x2ee860.FormatOnTypeDynamicFeature(_0x327b09, _0x3acc7c.documentSelector, _0x3acc7c.autoIndent ?? false, _0x3acc7c.autoFormatStrings ?? false));
          } else {
            _0x3e199f.capabilities.documentOnTypeFormattingProvider = _0x57896c.getDocumentOnTypeFormattingOption(_0x3acc7c.autoIndent ?? false, _0x3acc7c.autoFormatStrings ?? false, console);
          }
          _0x3e199f.capabilities.foldingRangeProvider = true;
          _0x3e199f.capabilities.selectionRangeProvider = true;
          _0x3e199f.capabilities.inlayHintProvider = {
            resolveProvider: _0x3acc7c.resolveInlayHintEdit ?? false
          };
          _0x3e199f.capabilities.notebookDocumentSync = _0x3acc7c.regularWorkspace ? _0x57896c.NotebookDocumentSelector : _0x57896c.AnyNotebookDocumentSelector;
          _0x3e199f.capabilities.typeHierarchyProvider = true;
          return _0x3e199f;
        }
        handleSettings(_0x456d7c, _0x194bf4, _0x70dce1, _0xd41914, _0x5d4999, _0x491a2f) {
          const _0x300e4f = {
            autoSearchPaths: true,
            disableLanguageServices: false,
            openFilesOnly: true,
            useLibraryCodeForTypes: true,
            watchForSourceChanges: true,
            watchForLibraryChanges: true,
            watchForConfigChanges: true,
            typeCheckingMode: 'off',
            diagnosticSeverityOverrides: {},
            diagnosticBooleanOverrides: {},
            logLevel: _0xb2b25b.LogLevel.Info,
            autoImportCompletions: true,
            indexing: true,
            completeFunctionParens: false,
            enableExtractCodeAction: true,
            indexOptions: _0x19b871.cloneSimpleObject(_0x57896c.defaultIndexOptions),
            variableInlayTypeHints: false,
            callArgumentNameInlayHints: _0x204ab5.CallArgumentNameModes.off,
            functionReturnInlayTypeHints: false,
            pytestParametersInlayTypeHints: false,
            importFormat: 'absolute',
            includeFileSpecs: [],
            excludeFileSpecs: [],
            ignoreFileSpecs: [],
            formatOnType: true,
            taskListTokens: [],
            enablePytestSupport: true,
            gotoDefinitionInStringLiteral: false,
            remapDiagnostics: false,
            intelliCodeEnabled: true,
            aiCodeActions: {},
            generateWithTypeAnnotation: false,
            languageServerMode: 'default'
          };
          let _0x286801 = false;
          const _0x409f1f = _0x194bf4.service.serviceProvider.console();
          try {
            if (_0x70dce1) {
              _0x57896c.updatePythonSection(_0x300e4f, _0x194bf4, _0x70dce1, _0x456d7c);
            }
            if (_0xd41914) {
              _0x57896c.updatePylanceSection(_0x300e4f, _0x194bf4, _0xd41914, _0x456d7c);
              this._applyPylanceDiagnosticOverrides(_0x300e4f);
              _0x286801 = !!_0xd41914._forceProgressBar;
            }
            if (_0x5d4999) {
              _0x57896c.updateJupyterSection(_0x300e4f, _0x194bf4, _0x5d4999);
            }
            if (_0x491a2f) {
              _0x57896c.updateEditorSection(_0x300e4f, _0x194bf4, _0x491a2f);
            }
          } catch (_0x28fe29) {
            _0x409f1f.error(`Error reading settings: ${_0x28fe29}`);
          }
          const _0x2eccaa = _0x194bf4.service.serviceProvider.get(_0x2ff2a7.PylanceServiceKeys.settingTransformer).transformSettings(_0x300e4f, _0x194bf4);
          this._progressBarEnabled = _0x286801 || _0x300e4f.typeCheckingMode !== 'off' || Object.values(_0x300e4f.diagnosticSeverityOverrides).some(_0x58cd2d => _0x58cd2d !== 'none');
          _0x409f1f.log(`Server settings returned for workspace: ${_0x194bf4.rootUri}: ${JSON.stringify(_0x2eccaa, null, 2)}`);
          return _0x2eccaa;
        }
        handleUpdateSettingsForWorkspace(_0x38825b, _0x70e94, _0x4952ab) {
          var _0x43b98e;
          this._updateExtensionSettings(_0x38825b, _0x70e94);
          if ((_0x43b98e = this._intelliCode) === null || _0x43b98e === undefined) {
            undefined;
          } else {
            _0x43b98e.enable(!!_0x70e94.intelliCodeEnabled);
          }
          _0x38825b.completeFunctionParens = !!_0x70e94.completeFunctionParens;
          _0x38825b.enableExtractCodeAction = !!_0x70e94.enableExtractCodeAction;
          _0x38825b.disableWorkspaceSymbol = !!_0x70e94.disableWorkspaceSymbol;
          _0x38825b.variableInlayTypeHints = !!_0x70e94.variableInlayTypeHints;
          _0x38825b.functionReturnInlayTypeHints = !!_0x70e94.functionReturnInlayTypeHints;
          _0x38825b.pytestParameterInlayTypeHints = !!_0x70e94.pytestParametersInlayTypeHints;
          _0x38825b.callArgumentNameInlayHints = _0x70e94.callArgumentNameInlayHints;
          _0x38825b.extraCommitChars = !!_0x70e94.extraCommitChars;
          _0x38825b.fixAll = _0x70e94.fixAll;
          _0x38825b.importFormat = _0x70e94.importFormat;
          _0x38825b.editorIndentConfig = _0x70e94.editorIndentConfig;
          _0x38825b.allowAskingUsersPerformanceReporting = this.state.client.allowAskingUsersPerformanceReporting;
          _0x38825b.supportDocstringTemplate = !!_0x70e94.supportDocstringTemplate;
          _0x38825b.aiCodeActions = _0x70e94.aiCodeActions;
          _0x38825b.indexOptions = _0x70e94.indexOptions;
          _0x38825b.generateWithTypeAnnotation = _0x70e94.generateWithTypeAnnotation;
          _0x38825b.showOnlyDirectDependenciesInAutoImport = _0x70e94.showOnlyDirectDependenciesInAutoImport;
          _0x19b871.getBackgroundAnalysisProgram(_0x38825b).setExperimentOptions(_0x70e94);
          const _0x521a1f = _0x38825b.service.getConfigOptions();
          const _0x188d96 = new _0x41ed10.TelemetryEvent(_0x41ed10.TelemetryEventName.SETTINGS);
          _0x188d96.Properties.openFilesOnly = `${_0x70e94.openFilesOnly}`;
          _0x188d96.Properties.typeCheckingMode = `${_0x70e94.typeCheckingMode}`;
          _0x188d96.Properties.useLibraryCodeForTypes = `${_0x521a1f.useLibraryCodeForTypes}`;
          _0x188d96.Properties.autoSearchPaths = `${_0x70e94.autoSearchPaths}`;
          _0x188d96.Properties.autoImportCompletions = `${_0x70e94.autoImportCompletions}`;
          _0x188d96.Properties.indexing = `${_0x70e94.indexing}`;
          _0x188d96.Properties.regenerateStdLibIndices = `${!!_0x70e94.indexOptions?.regenerateStdLibIndices}`;
          _0x188d96.Properties.persistAllIndices = `${!!_0x70e94.indexOptions?.localStorageUri}`;
          _0x188d96.Properties.includeAliasesFromUserFiles = `${!!_0x70e94.indexOptions?.includeAliasesFromUserFiles}`;
          _0x188d96.Properties.completeFunctionParens = `${_0x70e94.completeFunctionParens}`;
          _0x188d96.Properties.enableExtractCodeAction = `${_0x70e94.enableExtractCodeAction}`;
          _0x188d96.Properties.hasExtraPaths = `${!!_0x70e94.extraPaths?.length}`;
          _0x188d96.Properties.hasConfigFile = `${_0x521a1f.initializedFromJson}`;
          _0x188d96.Properties.disableWorkspaceSymbol = `${_0x70e94.disableWorkspaceSymbol}`;
          _0x188d96.Properties.watchForLibraryChanges = `${_0x70e94.watchForLibraryChanges}`;
          _0x188d96.Properties.variableInlayTypeHints = `${_0x70e94.variableInlayTypeHints}`;
          _0x188d96.Properties.pytestParameterInlayTypeHints = `${_0x70e94.pytestParametersInlayTypeHints}`;
          _0x188d96.Properties.importFormat = `${_0x70e94.importFormat}`;
          _0x188d96.Properties.functionReturnInlayTypeHints = `${_0x70e94.functionReturnInlayTypeHints}`;
          _0x188d96.Properties.callArgumentNameInlayHints = `${_0x70e94.callArgumentNameInlayHints}`;
          _0x188d96.Properties.formatOnType = `${_0x70e94.formatOnType}`;
          _0x188d96.Properties.extraCommitChars = `${_0x70e94.extraCommitChars}`;
          _0x188d96.Properties.enablePytestSupport = `${_0x70e94.enablePytestSupport}`;
          _0x188d96.Properties.intelliCodeEnabled = `${_0x70e94.intelliCodeEnabled}`;
          _0x188d96.Properties.disableTaggedHints = `${_0x70e94.disableTaggedHints}`;
          _0x188d96.Properties.languageServerMode = `${_0x70e94.languageServerMode}`;
          _0x188d96.Properties.aiCodeActionsImplementAbstractClasses = `${_0x70e94.aiCodeActions?.implementAbstractClasses}`;
          _0x188d96.Properties.nodeExecutable = _0x70e94.nodeExecutable && _0x70e94.nodeExecutable.length > 1 ? 'true' : 'false';
          _0x188d96.Properties.aiCodeActionsGenerateDocstring = `${_0x70e94.aiCodeActions?.generateDocstring}`;
          _0x188d96.Measurements.workspaceCount = _0x4952ab.getNonDefaultWorkspaces(_0x493633.WellKnownWorkspaceKinds.Regular).length;
          this._telemetry.sendTelemetry(_0x188d96);
        }
        registerHandlers(_0x4a2561) {
          const _0x2f6f7e = _0x4a2561.languages.callHierarchy;
          const _0x170db3 = _0x4a2561.languages.typeHierarchy;
          this.addDisposables(_0x4a2561.onCodeAction((_0x1e3ea9, _0x26dfb2) => this._onCodeAction(_0x1e3ea9, _0x26dfb2)), _0x4a2561.onDefinition(async (_0x475ce1, _0x328d68) => this._onDefinition(_0x475ce1, _0x328d68)), _0x4a2561.onDeclaration(async (_0x3caee2, _0xadabed) => this._onDeclaration(_0x3caee2, _0xadabed)), _0x4a2561.onTypeDefinition(async (_0x22e5c6, _0xe948b4) => this._onTypeDefinition(_0x22e5c6, _0xe948b4)), _0x4a2561.onReferences(async (_0x328a92, _0x3741ca, _0x126fa4, _0x43af37) => this._onReferences(_0x328a92, _0x3741ca, _0x126fa4, _0x43af37)), _0x4a2561.onDocumentSymbol(async (_0x3ff26f, _0x53c77c) => this._onDocumentSymbol(_0x3ff26f, _0x53c77c)), _0x4a2561.onWorkspaceSymbol(async (_0x321860, _0x476dd6, _0xaed3e6, _0x2a9ea2) => this._onWorkspaceSymbol(_0x321860, _0x476dd6, _0x2a9ea2)), _0x4a2561.onHover(async (_0x500231, _0x320c98) => this._onHover(_0x500231, _0x320c98)), _0x4a2561.onDocumentHighlight(async (_0x586975, _0x1a4910) => this._onDocumentHighlight(_0x586975, _0x1a4910)), _0x4a2561.onSignatureHelp(async (_0x445366, _0x9db576) => this._onSignatureHelp(_0x445366, _0x9db576)), _0x4a2561.onCompletion((_0x30023d, _0x16e6f9) => this._onCompletion(_0x30023d, _0x16e6f9)), _0x4a2561.onCompletionResolve(async (_0x47f122, _0x2fadd6) => this._onCompletionResolve(_0x47f122, _0x2fadd6)), _0x4a2561.onPrepareRename(async (_0x5d71b6, _0x46c10e) => this._onPrepareRenameRequest(_0x5d71b6, _0x46c10e)), _0x4a2561.onRenameRequest(async (_0x10c579, _0x931fc4) => this._onRenameRequest(_0x10c579, _0x931fc4)), _0x2f6f7e.onPrepare(async (_0x179e81, _0x4152d6) => this._onCallHierarchyPrepare(_0x179e81, _0x4152d6)), _0x2f6f7e.onIncomingCalls(async (_0xf8b818, _0x25f4ca) => this._onCallHierarchyIncomingCalls(_0xf8b818, _0x25f4ca)), _0x2f6f7e.onOutgoingCalls(async (_0xb8b313, _0x9917a4) => this._onCallHierarchyOutgoingCalls(_0xb8b313, _0x9917a4)), _0x4a2561.onExecuteCommand(async (_0x597426, _0x1f6ac6, _0x173c19) => this._onExecuteCommand(_0x597426, _0x1f6ac6, _0x173c19)), _0x4a2561.onDidChangeWatchedFiles(_0x1027d6 => this.handleDidChangeWatchedFiles(_0x1027d6)), _0x4a2561.onDocumentOnTypeFormatting((_0x26335f, _0x102dcc) => this._onDocumentOnTypeFormatting(_0x26335f, _0x102dcc, _0x4a2561)), _0x4a2561.onFoldingRanges((_0x3d8ad2, _0x3f0da4) => this._onFoldingRanges(_0x3d8ad2, _0x3f0da4)), _0x4a2561.onSelectionRanges((_0x3c480b, _0x43a245) => this._onSelectionRanges(_0x3c480b, _0x43a245)), _0x4a2561.languages.semanticTokens.on((_0x214fd6, _0x25006a) => this._onSemanticTokens(_0x214fd6, _0x25006a)), _0x4a2561.languages.semanticTokens.onDelta((_0xe7a020, _0x187a21) => this._onDelta(_0xe7a020, _0x187a21)), _0x4a2561.languages.semanticTokens.onRange((_0x285d75, _0x1e63a8) => this._onRange(_0x285d75, _0x1e63a8)), _0x4a2561.languages.inlayHint.on((_0x4fb667, _0x3dee06) => this._onInlayHints(_0x4fb667, _0x3dee06)), _0x4a2561.languages.inlayHint.resolve((_0x908b99, _0x3f9bc4) => this._onResolveInlayHint(_0x908b99, _0x3f9bc4)), _0x170db3.onPrepare((_0x26a4a3, _0x5b29e1) => this._onTypeHierarchyPrepare(_0x26a4a3, _0x5b29e1)), _0x170db3.onSupertypes((_0x2c07f0, _0x108316) => this._onTypeHierarchySupertypes(_0x2c07f0, _0x108316)), _0x170db3.onSubtypes((_0x20a9b4, _0x1c5818) => this._onTypeHierarchySubtypes(_0x20a9b4, _0x1c5818)), _0xa0ed35.CustomLSP.onNotification(_0x4a2561, _0xa0ed35.CustomLSP.Notifications.WorkspaceTrusted, _0x28b34c => {
            this.state.hostKind = _0x28b34c.isTrusted ? 0 : 1;
            this.restart();
          }), _0xa0ed35.CustomLSP.onRequest(_0x4a2561, _0xa0ed35.CustomLSP.Requests.JupyterDocumentSymbols, (_0x33ceb5, _0x345996) => this._onJupyterDocumentSymbols(_0x33ceb5, _0x345996)), _0xa0ed35.CustomLSP.onRequest(_0x4a2561, _0xa0ed35.CustomLSP.Requests.JupyterReferences, (_0x395cb7, _0xac9c8e) => {
            return this._onReferences(_0x395cb7, _0xac9c8e, _0x4a2561.languages.attachWorkDoneProgress(_0x395cb7), _0x4a2561.languages.attachPartialResultProgress(_0x584677.ReferencesRequest.type, _0x395cb7));
          }), _0xa0ed35.CustomLSP.onRequest(_0x4a2561, _0xa0ed35.CustomLSP.Requests.GetConfigInfo, (_0x28bb46, _0x35bf79) => this._onGetConfigInfo(_0x28bb46)));
        }
        createProgressReporter(_0x280a71) {
          return {
            isEnabled: _0x4ac1c4 => !!this._progressBarEnabled,
            begin: () => {
              _0xa0ed35.CustomLSP.sendNotification(_0x280a71, _0xa0ed35.CustomLSP.Notifications.BeginProgress, undefined);
            },
            report: _0x9a1a8b => {
              _0xa0ed35.CustomLSP.sendNotification(_0x280a71, _0xa0ed35.CustomLSP.Notifications.ReportProgress, _0x9a1a8b);
            },
            end: () => {
              _0xa0ed35.CustomLSP.sendNotification(_0x280a71, _0xa0ed35.CustomLSP.Notifications.EndProgress, undefined);
            }
          };
        }
        createHost() {
          return this._serverOptions.serviceProvider.get(_0x2ff2a7.PylanceServiceKeys.hostFactory).createHost(this.state.hostKind);
        }
        createBackgroundAnalysisProgram(_0x3f74f5, _0x4450c3, _0x1e311f, _0x489673, _0x36bf67, _0x4ea573) {
          _0x4450c3.add(_0x75df84.ServiceKeys.sourceFileFactory, this._diagnosticsRemapper);
          return new _0x426cf5.PylanceBackgroundAnalysisProgram(_0x3f74f5, _0x4450c3, _0x1e311f, _0x489673, _0x36bf67, _0x4ea573, this._serverOptions.disableChecker);
        }
        dispose() {
          this.state.dispose();
          this._syncLS.dispose();
          this._asyncLS.dispose();
        }
        get _fs() {
          return this._serverOptions.serviceProvider.fs();
        }
        get _provider() {
          return this._providerOpt;
        }
        get _client() {
          return this.state.client;
        }
        get _console() {
          return this._serverOptions.serviceProvider.console();
        }
        get _intelliCode() {
          return this._serverOptions.serviceProvider.tryGet(_0x2ff2a7.PylanceServiceKeys.intelliCode);
        }
        get _serverOptions() {
          return this.state.serverOptions;
        }
        _getDocumentationUrlForDiagnostic(_0x9b8c9a) {
          return _0x57896c.getDocumentationUrlForDiagnostic(_0x9b8c9a);
        }
        _getDiagCode(_0x4b7a0e, _0x52e180) {
          return _0x52e180;
        }
        _onCodeAction(_0xde8bdb, _0x2667f3) {
          const _0x472185 = this.convertLspUriStringToUri(_0xde8bdb.textDocument.uri);
          const _0x24ceab = this._provider.getWorkspaceForFile(_0x472185);
          return this._run(_0x24ceab, _0x2b9ba0 => this._asyncLS.handleCodeAction(_0x2b9ba0, _0xde8bdb, _0x2667f3));
        }
        _onDefinition(_0x216f13, _0x329684) {
          const _0x5e63a2 = this.convertLspUriStringToUri(_0x216f13.textDocument.uri);
          const _0x242ffc = this._provider.getWorkspaceForFile(_0x5e63a2);
          return this._run(_0x242ffc, _0xd1fd95 => this._syncLS.handleDefinition(_0xd1fd95, _0x216f13, _0x329684));
        }
        _onDeclaration(_0x2f5d8d, _0x1c854d) {
          const _0x475a30 = this.convertLspUriStringToUri(_0x2f5d8d.textDocument.uri);
          const _0x4e6d4d = this._provider.getWorkspaceForFile(_0x475a30);
          return this._run(_0x4e6d4d, _0x451dd2 => this._syncLS.handleDeclaration(_0x451dd2, _0x2f5d8d, _0x1c854d));
        }
        _onTypeDefinition(_0x184d3e, _0x3482f2) {
          const _0x4306eb = this.convertLspUriStringToUri(_0x184d3e.textDocument.uri);
          const _0x18c1e3 = this._provider.getWorkspaceForFile(_0x4306eb);
          return this._run(_0x18c1e3, _0x58dd30 => this._syncLS.handleTypeDefinition(_0x58dd30, _0x184d3e, _0x3482f2));
        }
        _onReferences(_0x5b0db8, _0x204204, _0x5e78a2, _0x3a7967) {
          const _0x5a7c60 = this.convertLspUriStringToUri(_0x5b0db8.textDocument.uri);
          const _0x27a4bc = this._provider.getWorkspaceForFile(_0x5a7c60);
          return this._run(_0x27a4bc, _0x41a030 => {
            const _0x1e152b = this._provider.getProgressReporter(_0x5e78a2, _0x5d80c1.Localizer.CodeAction.findingReferences(), _0x204204);
            return this._run(_0x1e152b, _0x4bd156 => this._syncLS.handleReferences(_0x41a030, _0x5b0db8, _0x4bd156.reporter, _0x4bd156.source, _0x3a7967, _0x57896c.createDocumentRangeWithReferenceKind, _0x57896c.convertDocumentRangeToLocationWithReferenceKind));
          });
        }
        _onDocumentSymbol(_0x2835b0, _0x225442) {
          const _0x2845b7 = this.convertLspUriStringToUri(_0x2835b0.textDocument.uri);
          const _0x55b624 = this._provider.getWorkspaceForFile(_0x2845b7);
          return this._run(_0x55b624, _0x5bdde0 => this._syncLS.handleDocumentSymbol(_0x5bdde0, _0x2835b0, _0x225442));
        }
        _onWorkspaceSymbol(_0x4198ac, _0x470fd6, _0x34db13) {
          return this._syncLS.handleWorkspaceSymbol(this._provider.getWorkspaces(), _0x4198ac, _0x470fd6, _0x34db13);
        }
        _onHover(_0x3c53e5, _0x507b09) {
          const _0x2d23a2 = this.convertLspUriStringToUri(_0x3c53e5.textDocument.uri);
          const _0x502f3d = this._provider.getWorkspaceForFile(_0x2d23a2);
          return this._run(_0x502f3d, _0xd1da0b => this._syncLS.handleHover(_0xd1da0b, _0x3c53e5, _0x507b09));
        }
        _onDocumentHighlight(_0x528950, _0x337beb) {
          const _0x3d40e3 = this.convertLspUriStringToUri(_0x528950.textDocument.uri);
          const _0x592eb3 = this._provider.getWorkspaceForFile(_0x3d40e3);
          return this._run(_0x592eb3, _0x3130b5 => this._syncLS.handleDocumentHighlight(_0x3130b5, _0x528950, _0x337beb));
        }
        _onSignatureHelp(_0x3ad04f, _0x3a94a7) {
          const _0x209ab4 = this.convertLspUriStringToUri(_0x3ad04f.textDocument.uri);
          const _0x476d58 = this._provider.getWorkspaceForFile(_0x209ab4);
          return this._run(_0x476d58, _0x4a7b5e => this._syncLS.handleSignatureHelp(_0x4a7b5e, _0x3ad04f, _0x3a94a7));
        }
        _onCompletion(_0x51c7d0, _0x570aa8) {
          const _0xed1c5b = this.convertLspUriStringToUri(_0x51c7d0.textDocument.uri);
          const _0x30f19d = this._provider.getWorkspaceForFile(_0xed1c5b);
          return this._run(_0x30f19d, _0x13832f => this._asyncLS.handleCompletion(_0x13832f, _0x51c7d0, _0x570aa8));
        }
        _onCompletionResolve(_0xbb6ad, _0x1452f5) {
          const _0x432165 = _0xdd0c08.CompletionListConverter.fromLSP(_0xbb6ad).data;
          if (!_0x432165 || !_0x432165.uri) {
            return _0xbb6ad;
          }
          const _0x25ca3a = this.convertLspUriStringToUri(_0x432165.uri);
          const _0x36b0c9 = this._provider.getWorkspaceForFile(_0x25ca3a);
          return this._run(_0x36b0c9, _0x4f4fab => this._syncLS.handleCompletionResolve(_0x4f4fab, _0xbb6ad, _0x1452f5));
        }
        _onPrepareRenameRequest(_0x54b06f, _0x43ad1f) {
          const _0x41031c = this.convertLspUriStringToUri(_0x54b06f.textDocument.uri);
          const _0x275b2d = this._provider.getWorkspaceForFile(_0x41031c);
          return this._run(_0x275b2d, _0x5cbc86 => this._syncLS.handlePrepareRenameRequest(_0x5cbc86, _0x54b06f, _0x43ad1f));
        }
        _onRenameRequest(_0x234dd5, _0x504b0d) {
          const _0x2cbc36 = this.convertLspUriStringToUri(_0x234dd5.textDocument.uri);
          const _0x257583 = this._provider.getWorkspaceForFile(_0x2cbc36);
          return this._run(_0x257583, _0x589155 => this._syncLS.handleRenameRequest(_0x589155, _0x234dd5, _0x504b0d));
        }
        _onCallHierarchyPrepare(_0x2a60ed, _0x1bbcdc) {
          const _0xddacc0 = this.convertLspUriStringToUri(_0x2a60ed.textDocument.uri);
          const _0x33e3ff = this._provider.getWorkspaceForFile(_0xddacc0);
          return this._run(_0x33e3ff, _0x94e56d => this._syncLS.handleCallHierarchyPrepare(_0x94e56d, _0x2a60ed, _0x1bbcdc));
        }
        _onCallHierarchyIncomingCalls(_0x3c6424, _0x4060f6) {
          const _0x34c723 = this.convertLspUriStringToUri(_0x3c6424.item.uri);
          const _0x269fb8 = this._provider.getWorkspaceForFile(_0x34c723);
          return this._run(_0x269fb8, _0x202e72 => this._syncLS.handleCallHierarchyIncomingCalls(_0x202e72, _0x3c6424, _0x4060f6));
        }
        _onCallHierarchyOutgoingCalls(_0x29c5ba, _0x508b98) {
          const _0x224e25 = this.convertLspUriStringToUri(_0x29c5ba.item.uri);
          const _0x35dd16 = this._provider.getWorkspaceForFile(_0x224e25);
          return this._run(_0x35dd16, _0x1de51c => this._syncLS.handleCallHierarchyOutgoingCalls(_0x1de51c, _0x29c5ba, _0x508b98));
        }
        _onExecuteCommand(_0x28764a, _0x14f733, _0x49950e) {
          return this._asyncLS.handleExecuteCommand(_0x28764a, () => this._provider.getProgressReporter(_0x49950e, _0x5d80c1.Localizer.CodeAction.executingCommand(), _0x14f733), this._provider.executeCommand, this._provider.applyWorkspaceEdit, this._provider.isRefactoringCommand(_0x28764a.command), this._provider.isLongRunningCommand(_0x28764a.command), _0x14f733);
        }
        _onTypeHierarchyPrepare(_0x5d30d6, _0x499b86) {
          const _0x42885e = this.convertLspUriStringToUri(_0x5d30d6.textDocument.uri);
          const _0x5cffc5 = this._provider.getWorkspaceForFile(_0x42885e);
          return this._run(_0x5cffc5, _0x1776a2 => this._syncLS.handleTypeHierarchyPrepare(_0x1776a2, _0x5d30d6, _0x499b86));
        }
        _onTypeHierarchySupertypes(_0x4fc5e2, _0x4e3661) {
          const _0x365ea = this.convertLspUriStringToUri(_0x4fc5e2.item.uri);
          const _0x359af8 = this._provider.getWorkspaceForFile(_0x365ea);
          return this._run(_0x359af8, _0x2f37f6 => this._syncLS.handleTypeHierarchySupertypes(_0x2f37f6, _0x4fc5e2, _0x4e3661));
        }
        _onTypeHierarchySubtypes(_0x195a5d, _0x511870) {
          const _0x5a82a2 = this.convertLspUriStringToUri(_0x195a5d.item.uri);
          const _0x154432 = this._provider.getWorkspaceForFile(_0x5a82a2);
          return this._run(_0x154432, _0x2afb02 => this._syncLS.handleTypeHierarchySubtypes(_0x2afb02, _0x195a5d, _0x511870));
        }
        _onRange(_0x2883a8, _0x2dd3fb) {
          const _0x3dedb7 = this.convertLspUriStringToUri(_0x2883a8.textDocument.uri);
          const _0x223d41 = this._provider.getWorkspaceForFile(_0x3dedb7);
          return this._run(_0x223d41, _0x409620 => this._asyncLS.handleRange(_0x409620, _0x2883a8, _0x2dd3fb));
        }
        _onDelta(_0x1ac498, _0x53eb54) {
          const _0x33ba0a = this.convertLspUriStringToUri(_0x1ac498.textDocument.uri);
          const _0x5cbc95 = this._provider.getWorkspaceForFile(_0x33ba0a);
          return this._run(_0x5cbc95, _0x16c493 => this._asyncLS.handleDelta(_0x16c493, _0x1ac498, _0x53eb54));
        }
        _onSemanticTokens(_0x260fad, _0x3c40a3) {
          const _0x5d3a7d = this.convertLspUriStringToUri(_0x260fad.textDocument.uri);
          const _0x4cf382 = this._provider.getWorkspaceForFile(_0x5d3a7d);
          return this._run(_0x4cf382, _0x4c0cf6 => this._asyncLS.handleSemanticTokens(_0x4c0cf6, _0x260fad, _0x3c40a3));
        }
        _onFoldingRanges(_0x5681f3, _0x1519da) {
          const _0x124d49 = this.convertLspUriStringToUri(_0x5681f3.textDocument.uri);
          const _0x29f198 = this._provider.getWorkspaceForFile(_0x124d49);
          return this._run(_0x29f198, _0x1b5679 => this._syncLS.handleFoldingRanges(_0x1b5679, _0x5681f3, _0x1519da));
        }
        _onSelectionRanges(_0x564ff1, _0x371215) {
          const _0x4f6ad9 = this.convertLspUriStringToUri(_0x564ff1.textDocument.uri);
          const _0x1e22cc = this._provider.getWorkspaceForFile(_0x4f6ad9);
          return this._run(_0x1e22cc, _0x1f885a => this._syncLS.handleSelectionRanges(_0x1f885a, _0x564ff1, _0x371215));
        }
        _onInlayHints(_0x13c914, _0x53a801) {
          const _0x295c37 = this.convertLspUriStringToUri(_0x13c914.textDocument.uri);
          const _0x2e6054 = this._provider.getWorkspaceForFile(_0x295c37);
          return this._run(_0x2e6054, _0x39c3ea => this._asyncLS.handleInlayHints(_0x39c3ea, _0x13c914, _0x53a801));
        }
        _onResolveInlayHint(_0x569fab, _0xa89122) {
          const _0x442c8e = _0x1003bb.fromLSPAny(_0x569fab.data);
          if (!_0x442c8e || !_0x442c8e.fileUri) {
            return _0x569fab;
          }
          const _0x283744 = _0x373fa3.Uri.parse(_0x442c8e.fileUri, this._serverOptions.serviceProvider);
          const _0xc2179d = this._provider.getWorkspaceForFile(_0x283744);
          return this._run(_0xc2179d, _0xa41969 => this._syncLS.handleResolveInlayHint(_0xa41969, _0x569fab, _0xa89122));
        }
        _onDocumentOnTypeFormatting(_0x5035c6, _0x387228, _0xcac309) {
          const _0x18c6ae = this.convertLspUriStringToUri(_0x5035c6.textDocument.uri);
          const _0x208932 = this._provider.getWorkspaceForFile(_0x18c6ae);
          return this._run(_0x208932, _0x4f0b70 => this._syncLS.handleDocumentOnTypeFormatting(_0x4f0b70, _0x5035c6, _0x387228, _0xcac309));
        }
        _run(_0x1c1a39, _0x5a1d40) {
          if (_0x4e7e08.isThenable(_0x1c1a39)) {
            return _0x1c1a39.then(_0x571a40 => _0x5a1d40(_0x571a40));
          }
          return _0x5a1d40(_0x1c1a39);
        }
        _addDynamicFeature(_0x4782ee) {
          this.state.addDynamicFeature(_0x4782ee);
        }
        _getProgressMessage(_0x2f72fd) {
          const _0x4de255 = _0x2f72fd.requiringAnalysisCount.files;
          const _0x2085a5 = _0x2f72fd.requiringAnalysisCount.cells;
          if (_0x4de255 + _0x2085a5 === 0) {
            return undefined;
          }
          const _0x5765f9 = _0x4de255 === 1 && _0x2085a5 === 1 ? _0x11e5c1.Localizer.Messages.singularFileAndSingularCellToAnalyze() : _0x4de255 === 1 && _0x2085a5 !== 1 ? _0x11e5c1.Localizer.Messages.singularFileAndPluralCellsToAnalyze().format({
            cellCount: _0x2085a5
          }) : _0x4de255 !== 1 && _0x2085a5 === 1 ? _0x11e5c1.Localizer.Messages.pluralFilesAndSingularCellToAnalyze().format({
            fileCount: _0x4de255
          }) : _0x11e5c1.Localizer.Messages.pluralFilesAndPluralCellsToAnalyze().format({
            fileCount: _0x4de255,
            cellCount: _0x2085a5
          });
          return _0x5765f9;
        }
        _getCompatibleMarkupKind(_0xf222f2) {
          const _0x28e8b4 = [_0x584677.MarkupKind.PlainText, _0x584677.MarkupKind.Markdown];
          for (const _0x4144f2 of _0xf222f2 ?? []) {
            if (_0x28e8b4.includes(_0x4144f2)) {
              return _0x4144f2;
            }
          }
          return _0x584677.MarkupKind.PlainText;
        }
        _onJupyterDocumentSymbols(_0x3a0034, _0x46f5ac) {
          const _0x39e041 = this.convertLspUriStringToUri(_0x3a0034.textDocument.uri);
          const _0xd684bb = this._provider.getWorkspaceForFile(_0x39e041);
          return this._run(_0xd684bb, _0x6e1daa => {
            return _0x6e1daa.service.run(_0x575f60 => {
              return new _0x1cada9.DocumentSymbolProvider(_0x575f60, _0x39e041, this._client.hasHierarchicalDocumentSymbolCapability, {
                includeAliases: true
              }, _0x46f5ac).getSymbols();
            }, _0x46f5ac);
          });
        }
        _applyPylanceDiagnosticOverrides(_0x4ddaab) {
          _0x4ddaab.diagnosticSeverityOverrides = this._applyPylanceDiagnosticOverride(_0x4ddaab.diagnosticSeverityOverrides, _0x1f861b.DiagnosticRule.reportShadowedImports, 'warning');
        }
        _applyPylanceDiagnosticOverride(_0x46e800, _0x4f5c55, _0x2c7295) {
          const _0x5724e4 = _0x46e800 || {};
          const _0x559af6 = _0x4f5c55;
          if (!_0x5724e4[_0x559af6]) {
            _0x5724e4[_0x559af6] = _0x2c7295;
          }
          return _0x5724e4;
        }
        _updateExtensionSettings(_0x560760, _0x134fcd) {
          var _0x1df241;
          if ((_0x1df241 = _0x560760.service.serviceProvider.tryGet(_0x75df84.ServiceKeys.stateMutationListeners)) === null || _0x1df241 === undefined) {
            undefined;
          } else {
            _0x1df241.forEach(_0x3f47c9 => {
              var _0x116bb2;
              if ((_0x116bb2 = _0x3f47c9.onUpdateSettings) === null || _0x116bb2 === undefined) {
                return undefined;
              } else {
                return _0x116bb2.call(_0x3f47c9, _0x134fcd);
              }
            });
          }
        }
        _convertDiagnostics(_0x4e51e3, _0x2b9363) {
          const _0x96d614 = [];
          _0x2b9363.forEach(_0x57f4bb => {
            const _0x1897b7 = _0x105644(_0x57f4bb.category);
            const _0x2e29b5 = _0x57f4bb.getRule();
            const _0x378ea8 = this._getDiagCode(_0x57f4bb, _0x2e29b5);
            const _0x564362 = _0x584677.Diagnostic.create(_0x57f4bb.range, _0x57f4bb.message, _0x1897b7, _0x378ea8, this._serverOptions.productName);
            if (_0x57f4bb.category === 3 || _0x57f4bb.category === 4) {
              _0x564362.tags = [_0x584677.DiagnosticTag.Unnecessary];
              _0x564362.severity = _0x584677.DiagnosticSeverity.Hint;
              if (!this.state.client.supportsUnnecessaryDiagnosticTag) {
                return;
              }
            } else {
              if (_0x57f4bb.category === 5) {
                _0x564362.tags = [_0x584677.DiagnosticTag.Deprecated];
                _0x564362.severity = _0x584677.DiagnosticSeverity.Hint;
                if (!this.state.client.supportsDeprecatedDiagnosticTag) {
                  return;
                }
              } else {
                if (_0x57f4bb.category === 6) {
                  _0x564362.tags = [_0x218c17.TaskItem];
                  switch (_0x57f4bb.priority) {
                    case _0x347502.TaskListPriority.High:
                      _0x564362._vs_diagnosticRank = _0x39ad4e.High;
                      break;
                    case _0x347502.TaskListPriority.Normal:
                      _0x564362._vs_diagnosticRank = _0x39ad4e.Default;
                      break;
                    case _0x347502.TaskListPriority.Low:
                      _0x564362._vs_diagnosticRank = _0x39ad4e.Low;
                      break;
                  }
                  if (!this.state.client.supportsTaskItemDiagnosticTag) {
                    return;
                  }
                }
              }
            }
            if (_0x2e29b5) {
              const _0x17cb78 = this._getDocumentationUrlForDiagnostic(_0x57f4bb);
              if (_0x17cb78) {
                _0x564362.codeDescription = {
                  href: _0x17cb78
                };
              }
            }
            const _0x2a1626 = _0x57f4bb.getRelatedInfo();
            if (_0x2a1626.length > 0) {
              _0x564362.relatedInformation = _0x2a1626.filter(_0x2169bf => _0x328c97.canNavigateToFile(_0x2169bf.uri, _0x4e51e3)).map(_0x3e3bec => _0x584677.DiagnosticRelatedInformation.create(_0x584677.Location.create(_0x42d093.convertUriToLspUriString(_0x4e51e3, _0x3e3bec.uri), _0x3e3bec.range), _0x3e3bec.message));
            }
            _0x96d614.push(_0x564362);
          });
          function _0x105644(_0x5b0b81) {
            switch (_0x5b0b81) {
              case 0:
                return _0x584677.DiagnosticSeverity.Error;
              case 1:
                return _0x584677.DiagnosticSeverity.Warning;
              case 2:
              case 6:
                return _0x584677.DiagnosticSeverity.Information;
              case 3:
              case 4:
              case 5:
                return _0x584677.DiagnosticSeverity.Hint;
            }
          }
          return _0x96d614;
        }
        _onGetConfigInfo(_0x4c7f5e) {
          const _0x40f37d = this.convertLspUriStringToUri(_0x4c7f5e.workspaceUri);
          const _0x168ea0 = this._provider.getWorkspaceForFile(_0x40f37d);
          return this._run(_0x168ea0, _0x269a31 => {
            var _0x21c972;
            var _0x296977;
            const _0x33c31c = _0x269a31.service.getConfigOptions();
            return {
              projectRoot: ((_0x21c972 = _0x269a31.rootUri) === null || _0x21c972 === undefined ? undefined : _0x21c972.toString()) || '',
              configFileSource: (_0x296977 = _0x33c31c.configFileSource) === null || _0x296977 === undefined ? undefined : _0x296977.toString(),
              typeCheckingMode: _0x33c31c.effectiveTypeCheckingMode
            };
          });
        }
      }
      exports.LanguageService = _0x2b6f27;
      _0x34f9e7([_0x41ed10.lspCodeActionRequestTelemetry()], _0x2b6f27.prototype, '_onCodeAction', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/definition')], _0x2b6f27.prototype, '_onDefinition', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/declaration')], _0x2b6f27.prototype, '_onDeclaration', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/typeDefinition')], _0x2b6f27.prototype, '_onTypeDefinition', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/references')], _0x2b6f27.prototype, '_onReferences', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/documentSymbol')], _0x2b6f27.prototype, '_onDocumentSymbol', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('workspace/symbol')], _0x2b6f27.prototype, '_onWorkspaceSymbol', null);
      _0x34f9e7([_0x41ed10.lspHoverRequestTelemetry()], _0x2b6f27.prototype, '_onHover', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/documentHighlight')], _0x2b6f27.prototype, '_onDocumentHighlight', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/signatureHelp')], _0x2b6f27.prototype, '_onSignatureHelp', null);
      _0x34f9e7([_0x41ed10.lspCompletionRequestTelemetry()], _0x2b6f27.prototype, '_onCompletion', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('completionItem/resolve')], _0x2b6f27.prototype, '_onCompletionResolve', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/prepareRename')], _0x2b6f27.prototype, '_onPrepareRenameRequest', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/rename')], _0x2b6f27.prototype, '_onRenameRequest', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/prepareCallHierarchy')], _0x2b6f27.prototype, '_onCallHierarchyPrepare', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('callHierarchy/incomingCalls')], _0x2b6f27.prototype, '_onCallHierarchyIncomingCalls', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('callHierarchy/outgoingCalls')], _0x2b6f27.prototype, '_onCallHierarchyOutgoingCalls', null);
      _0x34f9e7([_0x41ed10.lspExecuteCommandRequestTelemetry()], _0x2b6f27.prototype, '_onExecuteCommand', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/prepareTypeHierarchy')], _0x2b6f27.prototype, '_onTypeHierarchyPrepare', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('typeHierarchy/supertypes')], _0x2b6f27.prototype, '_onTypeHierarchySupertypes', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('typeHierarchy/subtypes')], _0x2b6f27.prototype, '_onTypeHierarchySubtypes', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/semanticTokens/range')], _0x2b6f27.prototype, '_onRange', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/semanticTokens/full/delta')], _0x2b6f27.prototype, '_onDelta', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/semanticTokens/full')], _0x2b6f27.prototype, '_onSemanticTokens', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/foldingRange')], _0x2b6f27.prototype, '_onFoldingRanges', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/selectionRange')], _0x2b6f27.prototype, '_onSelectionRanges', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/inlayHint')], _0x2b6f27.prototype, '_onInlayHints', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('inlayHint/resolve')], _0x2b6f27.prototype, '_onResolveInlayHint', null);
      _0x34f9e7([_0x41ed10.lspRequestTelemetry('textDocument/onTypeFormatting')], _0x2b6f27.prototype, '_onDocumentOnTypeFormatting', null);
      var _0x218c17;
      (function (_0x4838fa) {
        _0x4838fa.BuildError = -1;
        _0x4838fa.IntellisenseError = -2;
        _0x4838fa.PotentialDuplicate = -3;
        _0x4838fa.HiddenInErrorList = -4;
        _0x4838fa.VisibleInErrorList = -5;
        _0x4838fa.HiddenInEditor = -6;
        _0x4838fa.SuppressEditorToolTip = -7;
        _0x4838fa.EditAndContinueError = -8;
        _0x4838fa.TaskItem = -9;
      })(_0x218c17 ||= {});
      var _0x39ad4e;
      (function (_0x3b88ab) {
        _0x3b88ab.Highest = 100;
        _0x3b88ab.High = 200;
        _0x3b88ab.Default = 300;
        _0x3b88ab.Low = 400;
        _0x3b88ab.Lowest = 500;
      })(_0x39ad4e ||= {});
    },
    80165: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.FeatureState = undefined;
      const _0xaf159a = require(56911);
      const _0x5fbfe8 = __importStar(require(48281));
      const _0x5cda2b = __importStar(require(4883));
      const _0x59e278 = require(71745);
      const _0x2ad93d = require(55275);
      const _0x14802a = require(6665);
      const _0x4a366b = require(84826);
      const _0x5cfbee = require(8398);
      class _0x21a649 {
        constructor(_0x1f5a35) {
          this.serverOptions = _0x1f5a35;
          this._dynamicFeatures = new _0x2ad93d.DynamicFeatures();
          this._hostKind = 1;
          this.openFileMap = new Map();
          this.disposable = [];
          this.client = {
            hasConfigurationCapability: false,
            hasVisualStudioExtensionsCapability: false,
            hasWorkspaceFoldersCapability: false,
            hasWatchFileCapability: false,
            hasWatchFileRelativePathCapability: false,
            hasActiveParameterCapability: false,
            hasSignatureLabelOffsetCapability: false,
            hasHierarchicalDocumentSymbolCapability: false,
            hasWindowProgressCapability: false,
            hasGoToDeclarationCapability: false,
            hasDocumentChangeCapability: false,
            hasDocumentAnnotationCapability: false,
            hasCompletionCommitCharCapability: false,
            hoverContentFormat: _0xaf159a.MarkupKind.PlainText,
            completionDocFormat: _0xaf159a.MarkupKind.PlainText,
            completionSupportsSnippet: false,
            signatureDocFormat: _0xaf159a.MarkupKind.PlainText,
            supportsDeprecatedDiagnosticTag: false,
            supportsUnnecessaryDiagnosticTag: false,
            supportsTaskItemDiagnosticTag: false,
            completionItemResolveSupportsAdditionalTextEdits: false
          };
          this.inExperimentCache = new Map();
          global.__rootDirectory = _0x1f5a35.rootDirectory.getFilePath();
          this._console.info(`Server root directory: ${_0x1f5a35.rootDirectory}`);
          const _0x175c66 = _0x1f5a35.serviceProvider.fs();
          const _0x5ae9f5 = _0x175c66.getModulePath();
          if (_0x5ae9f5 && _0x175c66.existsSync(_0x5ae9f5)) {
            _0x175c66.chdir(_0x5ae9f5);
          }
          _0x5fbfe8.assert(_0x175c66.existsSync(_0x1f5a35.rootDirectory.combinePaths(_0x5cda2b.typeshedFallback)), `Unable to locate typeshed fallback folder at '${_0x1f5a35.rootDirectory}'`);
          this.documentTransformer = new _0x14802a.DocumentTransformer([new _0x4a366b.PyTestDocumentTransformer()]);
        }
        get hostKind() {
          return this._hostKind;
        }
        set hostKind(_0x135baf) {
          this._hostKind = _0x135baf;
        }
        convertLspUriStringToUri(_0xfd6b03) {
          return _0x5cfbee.convertLspUriStringToUri(_0xfd6b03, this._caseSensitiveDetector, this._uriMapper);
        }
        registerDynamicFeatures() {
          this._dynamicFeatures.register();
        }
        updateDynamicFeatures(_0x1168bc) {
          this._dynamicFeatures.update(_0x1168bc);
        }
        addDynamicFeature(_0x53dcf5) {
          this._dynamicFeatures.add(_0x53dcf5);
        }
        dispose() {
          this.openFileMap.clear();
          this._dynamicFeatures.unregister();
          this.disposable.forEach(_0x75e7a9 => _0x75e7a9.dispose());
          this.disposable.length = 0;
          this.inExperimentCache.clear();
        }
        get _console() {
          return this.serverOptions.serviceProvider.console();
        }
        get _uriMapper() {
          return this.serverOptions.serviceProvider.uriMapper();
        }
        get _caseSensitiveDetector() {
          return this.serverOptions.serviceProvider.get(_0x59e278.ServiceKeys.caseSensitivityDetector);
        }
      }
      exports.FeatureState = _0x21a649;
    },
    78212: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SynchronousFeatures = undefined;
      const _0x14ce98 = require(56911);
      const _0x4dd38e = require(56412);
      const _0x241a4f = require(88754);
      const _0x363863 = require(5884);
      const _0x4c834f = require(10518);
      const _0x4b6b0b = require(65574);
      const _0x4b1cf3 = require(42634);
      const _0x54deb0 = require(26005);
      const _0x31a191 = require(7380);
      const _0x13b1c3 = require(30741);
      const _0x4ab583 = require(24122);
      const _0x4dce79 = require(13259);
      const _0x250468 = require(30048);
      const _0x596bb6 = require(69482);
      const _0x20c999 = require(78459);
      const _0x12b45e = require(95456);
      const _0x237b4b = require(84584);
      const _0x19875f = require(90463);
      const _0x21ad27 = require(30041);
      const _0x10dc83 = require(29215);
      const _0x1fe695 = require(44078);
      const _0x560649 = require(47351);
      const _0x38b1c4 = require(84014);
      const _0x99b364 = require(48205);
      const _0x1d6e6c = require(8239);
      const _0x467273 = require(1044);
      const _0x285c19 = require(74899);
      const _0x309c07 = require(60722);
      class _0x1a0277 extends _0x309c07.FeaturesBase {
        constructor(_0x2e09fc) {
          super(_0x2e09fc);
        }
        handleDefinition(_0x19b45c, _0x40020d, _0x43b129) {
          return this._getDefinitions(_0x19b45c, _0x40020d, _0x5b485e => this.state.documentTransformer.runWithPosition(_0x19b45c, _0x40020d, (_0x500e66, _0x2699ac) => {
            return new _0x12b45e.AggregatedDefinitionProvider(_0x500e66, _0x5b485e, _0x2699ac, this.state.client.hasGoToDeclarationCapability ? _0x4b6b0b.DefinitionFilter.PreferSource : _0x4b6b0b.DefinitionFilter.All, _0x43b129).getDefinitions();
          }, _0x43b129));
        }
        handleDeclaration(_0x567cff, _0x1bff6a, _0x5b60bd) {
          return this._getDefinitions(_0x567cff, _0x1bff6a, _0x91e60d => this.state.documentTransformer.runWithPosition(_0x567cff, _0x1bff6a, (_0x415d1f, _0x669364) => {
            return new _0x12b45e.AggregatedDefinitionProvider(_0x415d1f, _0x91e60d, _0x669364, this.state.client.hasGoToDeclarationCapability ? _0x4b6b0b.DefinitionFilter.PreferStubs : _0x4b6b0b.DefinitionFilter.All, _0x5b60bd).getDefinitions();
          }, _0x5b60bd));
        }
        handleTypeDefinition(_0x2cf562, _0x1f9d58, _0x42b649) {
          return this._getDefinitions(_0x2cf562, _0x1f9d58, _0x142233 => this.state.documentTransformer.runWithPosition(_0x2cf562, _0x1f9d58, (_0x556f35, _0x221d2d) => {
            return new _0x4b6b0b.TypeDefinitionProvider(_0x556f35, _0x142233, _0x221d2d, _0x42b649).getDefinitions();
          }, _0x42b649));
        }
        handleDocumentSymbol(_0x48506a, _0x4bd4fb, _0x16813a) {
          _0x309c07.recordUserInteractionTime(_0x48506a);
          if (_0x48506a.disableLanguageServices) {
            return null;
          }
          const _0x1f41bf = this.state.convertLspUriStringToUri(_0x4bd4fb.textDocument.uri);
          return _0x48506a.service.run(_0x470747 => {
            return new _0x237b4b.AggregatedDocumentSymbolProvider(this._globalIndices ?? _0x467273.IndicesManager.empty, _0x470747, _0x1f41bf, this.state.client.hasHierarchicalDocumentSymbolCapability, _0x16813a).getSymbols();
          }, _0x16813a);
        }
        handleWorkspaceSymbol(_0x246589, _0x1e2ab5, _0x367d2b, _0x25895d) {
          const _0x4ab4a3 = new _0x1fe695.AggregatedWorkspaceSymbolProvider(this._globalIndices ?? _0x467273.IndicesManager.empty, _0x246589, _0x25895d, _0x1e2ab5.query, _0x367d2b).reportSymbols();
          return _0x4ab4a3;
        }
        handleHover(_0x41df94, _0x2d8c24, _0x312f6b) {
          return _0x596bb6.trackPerf(_0x41df94, _0x596bb6.TelemetryEventName.HOVER_SLOW, _0x46bd0b => {
            const _0x553671 = this.state.convertLspUriStringToUri(_0x2d8c24.textDocument.uri);
            return this.state.documentTransformer.runWithPosition(_0x41df94, _0x2d8c24, (_0xf14663, _0x38b4e1) => {
              return new _0x21ad27.AggregatedHoverProvider(_0xf14663, _0x553671, _0x38b4e1, this.state.client.hoverContentFormat, !!this.state.serverOptions.supportsTelemetry, _0x312f6b).getHover();
            }, _0x312f6b);
          }, 2000);
        }
        handleReferences(_0x6d8b8d, _0x2dd8f3, _0x318d8d, _0x355ecf, _0x295025, _0x3e3d4c, _0xb740be) {
          if (this._pendingFindAllRefsCancellationSource) {
            this._pendingFindAllRefsCancellationSource.cancel();
            this._pendingFindAllRefsCancellationSource = undefined;
          }
          this._pendingFindAllRefsCancellationSource = _0x355ecf;
          try {
            if (_0x6d8b8d.disableLanguageServices) {
              return null;
            }
            const _0x37a3e7 = this.state.convertLspUriStringToUri(_0x2dd8f3.textDocument.uri);
            return _0x6d8b8d.service.run(_0xa601d8 => {
              return new _0x54deb0.ReferencesProvider(_0xa601d8, _0x355ecf.token, _0x3e3d4c, _0xb740be).reportReferences(_0x37a3e7, _0x2dd8f3.position, _0x2dd8f3.context.includeDeclaration, _0x295025);
            }, _0x355ecf.token);
          } finally {
            _0x318d8d.done();
            _0x355ecf.dispose();
          }
        }
        handleDocumentHighlight(_0x294690, _0xefa5a0, _0x28b6da) {
          const _0x4a52c8 = this.state.convertLspUriStringToUri(_0xefa5a0.textDocument.uri);
          return _0x294690.service.run(_0x210e59 => {
            return new _0x4b1cf3.DocumentHighlightProvider(_0x210e59, _0x4a52c8, _0xefa5a0.position, _0x28b6da).getDocumentHighlight();
          }, _0x28b6da);
        }
        handleSignatureHelp(_0x12b8fc, _0x16f7d3, _0xd0fe3b) {
          if (_0x12b8fc.disableLanguageServices) {
            return;
          }
          const _0x17dd88 = this.state.convertLspUriStringToUri(_0x16f7d3.textDocument.uri);
          return this.state.documentTransformer.runWithPosition(_0x12b8fc, _0x16f7d3, (_0x417b0c, _0x5ce63b) => {
            return new _0x31a191.SignatureHelpProvider(_0x417b0c, _0x17dd88, _0x5ce63b, this.state.client.signatureDocFormat, this.state.client.hasSignatureLabelOffsetCapability, this.state.client.hasActiveParameterCapability, _0x16f7d3.context, _0x417b0c.serviceProvider.docStringService(), _0xd0fe3b).getSignatureHelp();
          }, _0xd0fe3b);
        }
        handleCompletionResolve(_0x4de01f, _0x421f8e, _0x50e92b) {
          const _0xb8525 = _0x560649.CompletionListConverter.fromLSP(_0x421f8e).data;
          if (!_0xb8525 || !_0xb8525.uri) {
            return _0x421f8e;
          }
          const _0x581497 = this.state.convertLspUriStringToUri(_0xb8525.uri);
          return this.state.documentTransformer.run(_0x4de01f, _0x421f8e, (_0x640ae6, _0x2e609b) => {
            const _0x196597 = _0x560649.CompletionListConverter.fromLSP(_0x2e609b).data;
            new _0x20c999.AggregatedCompletionProvider(_0x640ae6, _0x581497, _0x196597.position, this.getCompletionOptions(_0x4de01f), {
              nameMap: _0x4dce79.wellKnownAbbreviationMap,
              indices: _0x285c19.SymbolIndexer.getIndices(_0x4de01f)
            }, _0x4de01f.supportDocstringTemplate ?? false, !!this.state.serverOptions.supportsTelemetry, _0x50e92b).resolveCompletionItem(_0x2e609b);
            return _0x2e609b;
          }, _0x50e92b);
        }
        handlePrepareRenameRequest(_0x2429d8, _0x2b3d0e, _0x4732a9) {
          if (_0x2429d8.disableLanguageServices) {
            return null;
          }
          const _0x1b7674 = this.state.convertLspUriStringToUri(_0x2b3d0e.textDocument.uri);
          const _0x4712b5 = _0x1b7674.isUntitled();
          return _0x2429d8.service.run(_0x199474 => {
            return new _0x10dc83.AggregatedRenameProvider(_0x199474, _0x1b7674, _0x2b3d0e.position, _0x4732a9).canRenameSymbol(_0x2429d8.kinds.includes(_0x13b1c3.WellKnownWorkspaceKinds.Default), _0x4712b5);
          }, _0x4732a9);
        }
        handleRenameRequest(_0x8ba77b, _0x2396de, _0x176236) {
          if (_0x8ba77b.disableLanguageServices) {
            return;
          }
          const _0x3f8a89 = this.state.convertLspUriStringToUri(_0x2396de.textDocument.uri);
          const _0x47e0d8 = _0x3f8a89.isUntitled();
          return _0x8ba77b.service.run(_0x45fe15 => {
            return new _0x10dc83.AggregatedRenameProvider(_0x45fe15, _0x3f8a89, _0x2396de.position, _0x176236).renameSymbol(_0x2396de.newName, _0x8ba77b.kinds.includes(_0x13b1c3.WellKnownWorkspaceKinds.Default), _0x47e0d8);
          }, _0x176236);
        }
        handleCallHierarchyPrepare(_0xce7121, _0x115ee3, _0x57344d) {
          if (_0xce7121.disableLanguageServices) {
            return null;
          }
          const _0x30c2bc = this.state.convertLspUriStringToUri(_0x115ee3.textDocument.uri);
          return _0xce7121.service.run(_0x1a4df9 => {
            return new _0x4c834f.CallHierarchyProvider(_0x1a4df9, _0x30c2bc, _0x115ee3.position, _0x57344d).onPrepare();
          }, _0x57344d);
        }
        handleCallHierarchyIncomingCalls(_0x460eeb, _0xa54ce4, _0x37be37) {
          if (_0x460eeb.disableLanguageServices) {
            return null;
          }
          const _0x2c53ce = this.state.convertLspUriStringToUri(_0xa54ce4.item.uri);
          return _0x460eeb.service.run(_0x28ef9d => {
            return new _0x4c834f.CallHierarchyProvider(_0x28ef9d, _0x2c53ce, _0xa54ce4.item.range.start, _0x37be37).getIncomingCalls();
          }, _0x37be37);
        }
        handleCallHierarchyOutgoingCalls(_0x25f51d, _0x14afd3, _0xfd3823) {
          if (_0x25f51d.disableLanguageServices) {
            return null;
          }
          const _0xe2241e = this.state.convertLspUriStringToUri(_0x14afd3.item.uri);
          return _0x25f51d.service.run(_0x4ef04a => {
            return new _0x4c834f.CallHierarchyProvider(_0x4ef04a, _0xe2241e, _0x14afd3.item.range.start, _0xfd3823).getOutgoingCalls();
          }, _0xfd3823);
        }
        handleDocumentOnTypeFormatting(_0xf1330e, _0x2684b2, _0x200e43, _0x48762f) {
          if (_0xf1330e.disableLanguageServices) {
            return [];
          }
          const _0x1c1448 = this.state.convertLspUriStringToUri(_0x2684b2.textDocument.uri);
          const _0x3eb5c2 = _0xf1330e.service.getSourceFile(_0x1c1448);
          if (!_0x3eb5c2) {
            return [];
          }
          return _0x596bb6.trackPerf(_0xf1330e, _0x596bb6.TelemetryEventName.FORMATONTYPE_SLOW, () => {
            var _0x4b422b;
            if ((_0x4b422b = new _0x19875f.AggregatedFormatOnTypeProvider(this._fs, _0x3eb5c2, _0x2684b2.position, _0x2684b2.ch, _0xf1330e.editorIndentConfig, _0x48762f, _0x200e43).formatOnType()) !== null && _0x4b422b !== undefined) {
              return _0x4b422b;
            } else {
              return [];
            }
          }, 2000);
        }
        handleFoldingRanges(_0x522e3b, _0x63d2ef, _0x5b78ee) {
          if (_0x522e3b.disableLanguageServices) {
            return [];
          }
          const _0x2b668e = this.state.convertLspUriStringToUri(_0x63d2ef.textDocument.uri);
          const _0x4d4eed = _0x522e3b.service.getParseResults(_0x2b668e);
          if (!_0x4d4eed) {
            return [];
          }
          return _0x38b1c4.FoldingRangeProvider.getFoldingRanges(_0x4d4eed, _0x5b78ee);
        }
        handleSelectionRanges(_0x1c9934, _0x10c839, _0x57931b) {
          if (_0x1c9934.disableLanguageServices) {
            return [];
          }
          const _0x2945f = this.state.convertLspUriStringToUri(_0x10c839.textDocument.uri);
          const _0x3dafd0 = _0x1c9934.service.getParseResults(_0x2945f);
          if (!_0x3dafd0) {
            return [];
          }
          const _0x2900eb = _0x10c839.positions.map(_0x10851a => {
            return {
              line: _0x10851a.line,
              character: _0x10851a.character
            };
          });
          return _0x2900eb.map(_0xe10c57 => {
            var _0x511b14;
            if ((_0x511b14 = _0x99b364.SmartSelectionProvider.getSmartSelectionRange(_0x3dafd0, _0xe10c57, _0x57931b)) !== null && _0x511b14 !== undefined) {
              return _0x511b14;
            } else {
              return _0x14ce98.SelectionRange.create(_0x241a4f.getEmptyRange(), undefined);
            }
          });
        }
        handleResolveInlayHint(_0x515a9f, _0x3dbdf8, _0x112c33) {
          if (_0x515a9f.disableLanguageServices) {
            return _0x3dbdf8;
          }
          const _0x26ae8c = _0x4dd38e.fromLSPAny(_0x3dbdf8.data);
          if (!_0x26ae8c || !_0x26ae8c.fileUri) {
            return _0x3dbdf8;
          }
          if (!this.state.client.supportedInlayResolveCapabilitySet) {
            return _0x3dbdf8;
          }
          const _0x298b73 = _0x4ab583.getBackgroundAnalysisProgram(_0x515a9f).onResolveInlayHint(_0x3dbdf8, this.state.client.supportedInlayResolveCapabilitySet, _0x112c33);
          return _0x298b73;
        }
        handleTypeHierarchyPrepare(_0x336614, _0x3fa66c, _0x3b76ac) {
          if (_0x336614.disableLanguageServices) {
            return null;
          }
          const _0x488307 = this.state.convertLspUriStringToUri(_0x3fa66c.textDocument.uri);
          return _0x336614.service.run(_0x134e19 => {
            return new _0x1d6e6c.TypeHierarchyProvider(_0x134e19, _0x488307, _0x3fa66c.position, _0x3b76ac).onPrepare();
          }, _0x3b76ac);
        }
        handleTypeHierarchySupertypes(_0x44a1a8, _0x773ba5, _0x1be4de) {
          if (_0x44a1a8.disableLanguageServices) {
            return null;
          }
          const _0x4623df = this.state.convertLspUriStringToUri(_0x773ba5.item.uri);
          return _0x44a1a8.service.run(_0x304b15 => {
            return new _0x1d6e6c.TypeHierarchyProvider(_0x304b15, _0x4623df, _0x773ba5.item.range.start, _0x1be4de).onSupertypes(_0x773ba5.item);
          }, _0x1be4de);
        }
        handleTypeHierarchySubtypes(_0x137d89, _0x310afe, _0x1948cf) {
          if (_0x137d89.disableLanguageServices) {
            return null;
          }
          const _0x417f22 = this.state.convertLspUriStringToUri(_0x310afe.item.uri);
          return _0x137d89.service.run(_0x39e84a => {
            return new _0x1d6e6c.TypeHierarchyProvider(_0x39e84a, _0x417f22, _0x310afe.item.range.start, _0x1948cf).onSubtypes(_0x310afe.item);
          }, _0x1948cf);
        }
        dispose() {
          var _0x38c2ba;
          var _0x18ef3c;
          if ((_0x38c2ba = this._pendingFindAllRefsCancellationSource) === null || _0x38c2ba === undefined) {
            undefined;
          } else {
            _0x38c2ba.cancel();
          }
          if ((_0x18ef3c = this._pendingFindAllRefsCancellationSource) === null || _0x18ef3c === undefined) {
            undefined;
          } else {
            _0x18ef3c.dispose();
          }
        }
        get _fs() {
          return this.state.serverOptions.serviceProvider.fs();
        }
        get _globalIndices() {
          return this.serviceProvider.tryGet(_0x250468.PylanceServiceKeys.globalIndices);
        }
        _getDefinitions(_0x46efa5, _0x188536, _0x57adef) {
          _0x309c07.recordUserInteractionTime(_0x46efa5);
          if (_0x46efa5.disableLanguageServices) {
            return undefined;
          }
          const _0x5e325c = this.state.convertLspUriStringToUri(_0x188536.textDocument.uri);
          const _0x4ae586 = _0x57adef(_0x5e325c, _0x188536.position);
          if (!_0x4ae586) {
            return undefined;
          }
          return _0x4ae586.filter(_0x1dfc8d => _0x309c07.canNavigateToFile(_0x1dfc8d.uri, _0x46efa5.service.fs)).map(_0x15ad6a => _0x14ce98.Location.create(_0x363863.convertUriToLspUriString(_0x46efa5.service.fs, _0x15ad6a.uri), _0x15ad6a.range));
        }
      }
      exports.SynchronousFeatures = _0x1a0277;
    },
    46154: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AnalysisTracker = undefined;
      const _0x422b9e = require(71582);
      const _0x286459 = require(69482);
      class _0xd8bed5 {
        constructor() {
          this._elapsedSum = 0;
          this._peakRss = 0;
        }
        updateTelemetry(_0x3ac537) {
          const _0xbcf6ca = _0x3ac537.requiringAnalysisCount.files + _0x3ac537.requiringAnalysisCount.cells === 0 && _0x3ac537.elapsedTime !== 0 || _0x3ac537.fatalErrorOccurred;
          const _0x5c5438 = !this._telemetryLimiter;
          this._elapsedSum += _0x3ac537.elapsedTime;
          if (_0x5c5438 && _0xbcf6ca) {
            this._telemetryLimiter = new _0x422b9e.Duration();
          } else {
            if (this._telemetryLimiter && this._telemetryLimiter.getDurationInSeconds() < _0x286459.TelemetryWaitTimeSeconds) {
              if (_0xbcf6ca) {
                this._elapsedSum = 0;
                this._peakRss = 0;
                return undefined;
              }
              this._getMemoryUsage();
              return undefined;
            }
          }
          const _0x40541b = this._getMemoryUsage();
          if (!_0xbcf6ca) {
            return undefined;
          }
          const _0x511960 = this._elapsedSum * 1000;
          this._elapsedSum = 0;
          this._telemetryLimiter = new _0x422b9e.Duration();
          const _0xd1d532 = new _0x286459.TelemetryEvent(_0x286459.TelemetryEventName.ANALYSIS_COMPLETE);
          if (_0x40541b) {
            const _0x5ee8ca = this._peakRss;
            this._peakRss = 0;
            _0xd1d532.Measurements.peakRssMB = _0x5ee8ca / 1024 / 1024;
            _0xd1d532.Measurements.rssMB = _0x40541b.rss / 1024 / 1024;
            _0xd1d532.Measurements.heapTotalMB = _0x40541b.heapTotal / 1024 / 1024;
            _0xd1d532.Measurements.heapUsedMB = _0x40541b.heapUsed / 1024 / 1024;
            _0xd1d532.Measurements.externalMB = _0x40541b.external / 1024 / 1024;
          }
          _0xd1d532.Measurements.elapsedMs = _0x511960;
          _0xd1d532.Measurements.numFilesAnalyzed = -1;
          _0xd1d532.Measurements.numFilesInProgram = _0x3ac537.filesInProgram;
          _0xd1d532.Measurements.fatalErrorOccurred = _0x3ac537.fatalErrorOccurred ? 1 : 0;
          _0xd1d532.Measurements.isFirstRun = _0x5c5438 ? 1 : 0;
          _0xd1d532.Properties.DiagnosticsSeen = _0x3ac537.diagnosticsSeen || '';
          return _0xd1d532;
        }
        _getMemoryUsage() {
          const _0x2a6ee3 = process.memoryUsage();
          if (_0x2a6ee3.rss === 0) {
            return undefined;
          }
          this._peakRss = Math.max(_0x2a6ee3.rss, this._peakRss);
          return _0x2a6ee3;
        }
      }
      exports.AnalysisTracker = _0xd8bed5;
    },
    86615: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AutoImporter = undefined;
      exports.buildModuleSymbolsMap = _0x530aa0;
      exports.getAutoImports = _0x5c0e07;
      exports.createAutoImporter = _0x17486c;
      exports.getMatchingAutoImports = _0x31bc18;
      const _0x383421 = require(56911);
      const _0x5601a2 = require(26687);
      const _0x5becda = require(47610);
      const _0x5af9e9 = require(41557);
      const _0x2d0d50 = require(95952);
      const _0x77834e = require(3433);
      const _0x18a7d5 = __importStar(require(12097));
      const _0xee6ca5 = require(91426);
      const _0x2de9c0 = require(58147);
      const _0x377d2e = require(54010);
      const _0x3db9d1 = require(56814);
      const _0x1b36ad = require(89740);
      const _0x53d398 = require(71582);
      const _0x299262 = require(16835);
      const _0x462a1c = require(5737);
      const _0x2e49a4 = require(76135);
      const _0x560d3e = require(54700);
      const _0x8a5de0 = require(47351);
      const _0x3ff113 = require(74899);
      function _0x530aa0(_0xa696d6, _0x6bb5c6, _0x54b321, _0xf7c21d, _0x166eae, _0x45af7c, _0x2f761f) {
        const _0x354177 = _0xa696d6.getSourceFileInfo(_0xf7c21d);
        const _0x1ab535 = _0x54b321 === null || _0x54b321 === undefined ? undefined : _0x54b321.getLibraryIndices(_0x6bb5c6.root);
        const _0x1733a8 = _0x38cb32 => {
          if (!_0x1ab535) {
            return true;
          }
          if (!_0xa696d6.configOptions.indexing) {
            return _0x1ab535.get(_0x38cb32.sourceFile.getUri()) === undefined;
          }
          return _0x77834e.isUserCode(_0x38cb32);
        };
        const _0x32e610 = _0xa696d6.getSourceFileInfoList().filter(_0x101d63 => _0x101d63 !== _0x354177 && _0x1733a8(_0x101d63));
        const _0x1c049a = new Map();
        _0x32e610.forEach(_0x5df419 => {
          if (_0x5df419.shadows.length > 0) {
            return;
          }
          if (_0x3644be(_0x54b321, _0x5df419, _0x45af7c, _0x1c049a, _0x2f761f)) {
            return;
          }
          const _0x5eea29 = _0x5df419.sourceFile.getModuleSymbolTable();
          if (!_0x5eea29) {
            return;
          }
          _0x1ddd19(_0xa696d6, _0x5df419, _0x166eae, _0x45af7c, _0x1c049a, _0x2f761f);
        });
        return _0x1c049a;
      }
      function _0x1ddd19(_0x29d618, _0x527ad9, _0x2ef3b7, _0x412e82, _0x5af225, _0x5d87c8) {
        _0xee6ca5.throwIfCancellationRequested(_0x5d87c8);
        const _0x23df13 = _0x527ad9.sourceFile.getUri();
        const _0x250253 = _0x377d2e.stripFileExtension(_0x23df13.fileName);
        const _0x869443 = _0x18a7d5.isPrivateOrProtectedName(_0x250253);
        const _0x3b5849 = _0x77834e.isUserCode(_0x527ad9);
        if (_0x869443 && !_0x3b5849) {
          return;
        }
        const _0x57b057 = _0x29d618.getParseResults(_0x527ad9.sourceFile.getUri());
        if (!_0x57b057) {
          return;
        }
        const _0x5f2f7d = _0x3ff113.SymbolIndexer.indexSymbols(_0x57b057, {
          indexingForAutoImportMode: true,
          includeAliasesFromUserFiles: _0x2ef3b7,
          includeAllSymbols: true
        }, _0x5d87c8);
        _0x5af225.set(_0x23df13.key, _0x24a03c({
          uri: _0x23df13,
          privateOrProtected: _0x869443,
          symbols: _0x5f2f7d
        }, !_0x3b5849, _0x412e82));
      }
      function _0x3644be(_0x9180b0, _0x21e150, _0x25600f, _0x290376, _0x364b75) {
        _0xee6ca5.throwIfCancellationRequested(_0x364b75);
        if (!_0x9180b0) {
          return false;
        }
        const _0x4d89d8 = _0x21e150.sourceFile.getUri();
        const _0x43e14d = _0x9180b0.getSourceIndex(_0x4d89d8);
        if (!_0x43e14d) {
          return false;
        }
        const _0x3fbe8a = _0x77834e.isUserCode(_0x21e150);
        if (_0x43e14d.privateOrProtected && !_0x3fbe8a) {
          return true;
        }
        _0x290376.set(_0x4d89d8.key, _0x24a03c(_0x43e14d, !_0x3fbe8a, _0x25600f));
        return true;
      }
      function _0x5c0e07(_0x39cae7, _0x45a1fa, _0x499edb, _0x38b1e8, _0x3edb8a, _0x25e35b, _0x513115) {
        const _0x41a59f = _0x39cae7.getParseResults(_0x45a1fa);
        if (!_0x41a59f) {
          return [];
        }
        const _0x580e8e = _0x3db9d1.convertRangeToTextRange(_0x499edb, _0x41a59f.tokenizerOutput.lines);
        if (!_0x580e8e) {
          return [];
        }
        const _0x80e889 = _0x5af9e9.findNodeByOffset(_0x41a59f.parserOutput.parseTree, _0x580e8e.start);
        if (!_0x80e889) {
          return [];
        }
        const _0x5836ee = {
          ..._0x25e35b,
          patternMatcher: _0x25e35b.patternMatcher ?? ((_0x4df374, _0x1384dd) => _0x1b36ad.computeCompletionSimilarity(_0x4df374, _0x1384dd) > _0x38b1e8)
        };
        const _0x353ae0 = _0x17486c(_0x39cae7, _0x45a1fa, _0x499edb.start, _0x5836ee, _0x513115);
        if (!_0x353ae0) {
          return [];
        }
        const _0x3533df = _0x5836ee.nameToSearch ?? _0x41a59f.text.substr(_0x580e8e.start, _0x580e8e.length);
        return _0x31bc18(_0x353ae0, _0x80e889, _0x3533df, _0x38b1e8, _0x3edb8a, _0x513115);
      }
      function _0x17486c(_0x49cb8c, _0x31c00e, _0x5dc2bb, _0x54f42a, _0x3aca14) {
        const _0x405201 = _0x49cb8c.getParseResults(_0x31c00e);
        if (!_0x405201) {
          return undefined;
        }
        const _0x34f4dc = _0x49cb8c.configOptions.findExecEnvironment(_0x31c00e);
        const _0x44a94c = _0x530aa0(_0x49cb8c, _0x34f4dc, _0x54f42a.indices, _0x31c00e, _0x54f42a.includeAliasesFromUserFiles ?? false, _0x54f42a.allowDuplicatedAliasesFromUserFiles ?? false, _0x3aca14);
        return new _0x49340b(_0x49cb8c, _0x34f4dc, _0x405201, _0x5dc2bb, new _0x462a1c.CompletionMap(), _0x44a94c, _0x54f42a);
      }
      function _0x31bc18(_0x1b335b, _0x1bc53b, _0x15533f, _0x2d525c, _0x27f549, _0x4c1af5) {
        const _0xd5cd62 = [];
        const _0x1b586b = _0x2d0d50.getScopeForNode(_0x1bc53b);
        if (_0x1b586b) {
          const _0x12fa18 = _0x27f549 === null || _0x27f549 === undefined ? undefined : _0x27f549.get(_0x15533f);
          if (_0x12fa18) {
            _0x2de9c0.appendArray(_0xd5cd62, _0x1b335b.getAutoImportCandidatesForAbbr(_0x15533f, _0x12fa18, _0x4c1af5));
          }
          _0xd5cd62.push(..._0x1b335b.getAutoImportCandidates(_0x15533f, _0x2d525c, undefined, _0x4c1af5).filter(_0x1bd3ca => !_0x1b586b.lookUpSymbolRecursive(_0x1bd3ca.name)));
        }
        return _0xd5cd62;
      }
      class _0x49340b extends _0x299262.AutoImporter {
        constructor(_0x35492c, _0x3cd7a3, _0xfdf4fd, _0x1ccffb, _0x2abfaf, _0x4db0aa, _0x35d42d) {
          var _0x4cb129;
          super(_0x35492c, _0x3cd7a3, _0xfdf4fd, _0x1ccffb, _0x2abfaf, _0x4db0aa, _0x35d42d);
          this._stopWatch = new _0x53d398.Duration();
          this._perfInfo = {
            indexUsed: false,
            totalInMs: 0,
            moduleTimeInMS: 0,
            indexTimeInMS: 0,
            importAliasTimeInMS: 0,
            symbolCount: 0,
            indexCount: 0,
            importAliasCount: 0
          };
          this._libraryMap = (_0x4cb129 = this._pylanceOptions.indices) === null || _0x4cb129 === undefined ? undefined : _0x4cb129.getLibraryIndices(_0x3cd7a3.root);
          this._fileUri = _0x5601a2.getFileInfo(this.parseResults.parserOutput.parseTree).fileUri;
          this._perfInfo.indexUsed = !!this._pylanceOptions.indices;
        }
        getAutoImportCandidatesForAbbr(_0x476dc4, _0x4a7394, _0x44bcfb) {
          const _0x4e007f = this.getCandidates(_0x4a7394.importName, 1, _0x476dc4, _0x44bcfb);
          const _0x8d65b8 = _0x4e007f.get(_0x4a7394.importName);
          if (!_0x8d65b8) {
            return [];
          }
          return _0x8d65b8.filter(_0x5db9bf => _0x5db9bf.source === _0x4a7394.importFrom);
        }
        getPerfInfo() {
          this._perfInfo.totalInMs = this._stopWatch.getDurationInMilliseconds();
          return this._perfInfo;
        }
        getCompletionItemData(_0x226f37) {
          return _0x8a5de0.CompletionListConverter.fromLSP(_0x226f37).data;
        }
        getCandidates(_0x154882, _0x422f4a, _0x2c2d49, _0x4e6b58) {
          const _0x36b630 = new Map();
          const _0x3a56ea = new Map();
          this.addImportsFromModuleMap(_0x154882, _0x422f4a, _0x2c2d49, _0x3a56ea, _0x36b630, _0x4e6b58);
          this._addImportsFromLibraryMap(_0x154882, _0x422f4a, _0x2c2d49, _0x3a56ea, _0x36b630, _0x4e6b58);
          this.addImportsFromImportAliasMap(_0x3a56ea, _0x2c2d49, _0x36b630, _0x4e6b58);
          this._applyDirectDependencyFilterIfApplicable(_0x36b630);
          return _0x36b630;
        }
        addImportsFromModuleMap(_0x84eb72, _0x1b7b49, _0x37726c, _0x1e9bf8, _0x1db4e1, _0x580eaa) {
          const _0x1bd1fb = this._stopWatch.getDurationInMilliseconds();
          super.addImportsFromModuleMap(_0x84eb72, _0x1b7b49, _0x37726c, _0x1e9bf8, _0x1db4e1, _0x580eaa);
          this._perfInfo.moduleTimeInMS = this._stopWatch.getDurationInMilliseconds() - _0x1bd1fb;
        }
        addImportsFromImportAliasMap(_0xa12791, _0x4fac7c, _0x2f6d05, _0x310bb0) {
          const _0x29955b = this._stopWatch.getDurationInMilliseconds();
          super.addImportsFromImportAliasMap(_0xa12791, _0x4fac7c, _0x2f6d05, _0x310bb0);
          this._perfInfo.importAliasTimeInMS = this._stopWatch.getDurationInMilliseconds() - _0x29955b;
        }
        getNameForImportFrom(_0x216f12, _0x23a33a) {
          if (this._pylanceOptions.importFormat === 'relative' && !_0x216f12) {
            return _0x5becda.getRelativeModuleName(this.importResolver.fileSystem, this._fileUri, _0x23a33a, this.importResolver.getConfigOptions());
          } else {
            return undefined;
          }
        }
        compareImportAliasData(_0x3f5d6b, _0x2dbf7d) {
          if (_0x3f5d6b.importGroup >= 2 && _0x2dbf7d.importGroup >= 2 && this._pylanceOptions.includeAliasesFromUserFiles) {
            const _0x51e357 = this._calculateRank(_0x3f5d6b);
            const _0x548992 = this._calculateRank(_0x2dbf7d);
            const _0x8869b5 = _0x51e357 - _0x548992;
            if (_0x8869b5 !== 0) {
              return _0x8869b5;
            }
          }
          return super.compareImportAliasData(_0x3f5d6b, _0x2dbf7d);
        }
        shouldIncludeVariable(_0x143174, _0xce7489, _0x557a6a) {
          const _0x2f0597 = super.shouldIncludeVariable(_0x143174, _0xce7489, _0x557a6a);
          if (_0x2f0597) {
            return true;
          }
          return !_0x143174.symbol || _0x143174.symbol.isInDunderAll();
        }
        get _pylanceOptions() {
          return this.options;
        }
        _applyDirectDependencyFilterIfApplicable(_0x501423) {
          if (!this._pylanceOptions.allowOnlyDirectDependencies) {
            return;
          }
          const _0x2675ea = this.program.importResolver.getPythonSearchPaths([]);
          const _0x267716 = [];
          _0x560d3e.AddIfNotNull(_0x267716, this.program.importResolver.getTypeshedThirdPartyPath(this.execEnvironment));
          _0x560d3e.AddIfNotNull(_0x267716, this.program.importResolver.getTypeshedPathEx(this.execEnvironment, []));
          const _0x227bcf = this._pylanceOptions.allowOnlyDirectDependencies;
          for (const [_0x1f50fe, _0xe8fa46] of _0x501423) {
            _0x501423.set(_0x1f50fe, _0xe8fa46.filter(_0x287321 => {
              if (!_0x2675ea.some(_0x4bbf32 => _0x287321.originalDeclUri.startsWith(_0x4bbf32)) && !_0x267716.some(_0x485b2a => _0x287321.originalDeclUri.startsWith(_0x485b2a))) {
                return true;
              }
              if (_0x287321.source) {
                const _0x43206a = _0x50f5c4(_0x287321.source);
                return _0x227bcf.has(_0x43206a);
              }
              if (_0x287321.name && _0x287321.kind === _0x383421.CompletionItemKind.Module) {
                const _0x59ccf6 = _0x50f5c4(_0x287321.name);
                return _0x227bcf.has(_0x59ccf6);
              }
              return true;
            }));
          }
          function _0x50f5c4(_0x5e75c7) {
            const _0x49f78a = _0x5e75c7.split('.');
            return _0x49f78a[0];
          }
        }
        _calculateRank(_0xac7b6d) {
          let _0x4a70fd = 3;
          _0x4a70fd += _0xac7b6d.importParts.fileUri.fileNameWithoutExtensions === '__init__' ? -1 : 0;
          _0x4a70fd += _0xac7b6d.inDunderAll ? -1 : 0;
          _0x4a70fd += _0xac7b6d.hasRedundantAlias ? -1 : 0;
          return _0x4a70fd;
        }
        _addImportsFromLibraryMap(_0x2e8546, _0x126607, _0x569ec7, _0x3941c1, _0x6d1d11, _0x4dfb6f) {
          var _0x419844;
          const _0x228a64 = this._stopWatch.getDurationInMilliseconds();
          if ((_0x419844 = this._libraryMap) === null || _0x419844 === undefined) {
            undefined;
          } else {
            _0x419844.forEach((_0xe715c, _0xbed770) => {
              if (_0xe715c.privateOrProtected) {
                return;
              }
              if (this.moduleSymbolMap.has(_0xbed770.key)) {
                return;
              }
              const _0x4d5f7b = {
                isStub: _0xe715c.uri.hasExtension('.pyi'),
                hasInit: this._hasInit(_0xe715c.uri),
                isUserCode: false
              };
              this.processModuleSymbolTable(_0x24a03c(_0xe715c, true, false), _0xe715c.uri, _0x2e8546, _0x126607, _0x4d5f7b, _0x569ec7, _0x3941c1, _0x6d1d11, _0x4dfb6f);
            });
          }
          this._perfInfo.indexTimeInMS = this._stopWatch.getDurationInMilliseconds() - _0x228a64;
        }
        _hasInit(_0x2dbd2f) {
          var _0x164ae5;
          var _0x153131;
          const _0x575ac8 = _0x2dbd2f.getDirectory();
          const _0x54b4d9 = _0x575ac8.initPyUri;
          const _0x45a900 = _0x575ac8.initPyiUri;
          return ((_0x164ae5 = this._libraryMap) === null || _0x164ae5 === undefined ? undefined : _0x164ae5.has(_0x54b4d9)) || ((_0x153131 = this._libraryMap) === null || _0x153131 === undefined ? undefined : _0x153131.has(_0x45a900)) || false;
        }
      }
      exports.AutoImporter = _0x49340b;
      function _0x24a03c(_0x1ce648, _0x3531ec, _0xb474a3) {
        return {
          uri: _0x1ce648.uri,
          *getSymbols() {
            for (const _0x5ca533 of _0x1ce648.symbols) {
              if (!_0x2e49a4.isIndexSymbolVisibleFlagSet(_0x5ca533, 1)) {
                continue;
              }
              const _0x2c1a59 = _0x2e49a4.isIndexSymbolVisibleFlagSet(_0x5ca533, 2);
              if (_0x5ca533.kind === _0x383421.SymbolKind.Variable && !_0x3531ec && !_0x2c1a59) {
                continue;
              }
              const _0x1948c9 = _0x2e49a4.isIndexSymbolVisibleFlagSet(_0x5ca533, 4);
              const _0x1314c8 = _0xb474a3 && !_0x3531ec ? undefined : _0x5ca533.alias;
              yield {
                symbol: {
                  importAlias: _0x1314c8,
                  kind: _0x5ca533.kind,
                  itemKind: _0x5ca533.itemKind,
                  inDunderAll: _0x2c1a59,
                  hasRedundantAlias: _0x1948c9
                },
                name: _0x5ca533.name,
                library: _0x3531ec
              };
            }
          }
        };
      }
    },
    55648: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AddImports = undefined;
      const _0x16cb00 = require(56911);
      const _0x522156 = require(91426);
      const _0x4df1f1 = require(23574);
      const _0x54d979 = require(65880);
      const _0x4c1482 = require(89740);
      const _0x785a69 = require(39426);
      const _0x1b9700 = require(27130);
      const _0x5af5a1 = require(78031);
      const _0xa3616a = require(13259);
      const _0x1aa99c = require(15986);
      const _0x317152 = require(86615);
      const _0x2397e3 = require(74899);
      class _0x118d45 {
        constructor(_0x3cb4db, _0x5980c7) {
          this._workspace = _0x3cb4db;
          this._hasVSCodeExtension = _0x5980c7;
          this._newImpl = new _0x3974a0(_0x3cb4db);
          this._legacyImpl = new _0x531449(_0x3cb4db);
        }
        appendCodeActions(_0x3aa5d0, _0x6ca704, _0x421b14, _0x32198f) {
          const _0xcdfba4 = _0x6ca704.filter(_0x48fdc3 => _0x48fdc3.getRule() === _0x54d979.DiagnosticRule.reportUnboundVariable || _0x48fdc3.getRule() === _0x54d979.DiagnosticRule.reportUndefinedVariable);
          if (this._hasVSCodeExtension) {
            this._newImpl.appendCodeActions(_0x3aa5d0, _0xcdfba4, _0x421b14, _0x32198f);
          } else {
            this._legacyImpl.appendCodeActions(_0x3aa5d0, _0xcdfba4, _0x421b14, _0x32198f);
          }
        }
      }
      exports.AddImports = _0x118d45;
      const _0x33541c = 3;
      const _0x4d872b = 20;
      const _0x55e083 = 100;
      class _0x3974a0 {
        constructor(_0x4571c4) {
          this._workspace = _0x4571c4;
          this._importRankers = [new _0x5af5a1.MRURanker(_0x4571c4, _0x33541c), new _0x5af5a1.UsedImportRanker(_0x4571c4, _0x4d872b, _0x55e083, _0x33541c), new _0x5af5a1.UriRanker(_0x4571c4)];
        }
        appendCodeActions(_0x4868ab, _0x1394e3, _0x5e82df, _0x2bbc42) {
          if (_0x1394e3.length === 0) {
            return;
          }
          const _0x567d51 = _0x1394e3[0].range;
          const _0x9db2af = this._workspace.service.run(_0x3261c7 => {
            const _0x3f9318 = 1;
            const _0x134346 = (_0x4746bf, _0x585963) => _0x4746bf === _0x585963;
            return _0x317152.getAutoImports(_0x3261c7, _0x4868ab, _0x567d51, _0x3f9318, _0xa3616a.wellKnownAbbreviationMap, {
              lazyEdit: true,
              importFormat: this._workspace.importFormat,
              patternMatcher: _0x134346,
              indices: _0x2397e3.SymbolIndexer.getIndices(this._workspace),
              includeAliasesFromUserFiles: this._workspace.indexOptions?.includeAliasesFromUserFiles,
              allowDuplicatedAliasesFromUserFiles: true
            }, _0x2bbc42);
          }, _0x2bbc42);
          if (_0x9db2af.length === 0) {
            return;
          }
          const _0x18ee0f = this._workspace.service.getTextOnRange(_0x4868ab, _0x567d51, _0x2bbc42);
          if (!_0x18ee0f) {
            return;
          }
          const _0x470f58 = _0xa3616a.wellKnownAbbreviationMap.get(_0x18ee0f)?.importName ?? _0x18ee0f;
          _0x5af5a1.applyRankerToItemsInPlace(this._importRankers, _0x470f58, _0x33541c, _0x9db2af, _0x2bbc42);
          let _0x29fe1c = 0;
          const _0x5e0dda = _0x4868ab.toString();
          for (const _0x1eb96e of _0x9db2af) {
            _0x5e82df.push(_0xc4955e(_0x5e0dda, _0x567d51, _0x1eb96e.name, _0x1eb96e.source, _0x1eb96e.alias));
            if (++_0x29fe1c >= _0x33541c) {
              break;
            }
          }
        }
      }
      class _0x531449 {
        constructor(_0x3e6d25) {
          this._workspace = _0x3e6d25;
        }
        appendCodeActions(_0x323b8b, _0x54e263, _0x98934, _0x2b48eb) {
          if (_0x54e263.length === 0) {
            return;
          }
          const _0x478a7b = _0x54e263[0].range;
          const _0x35812a = this._workspace.service.run(_0x4549b0 => {
            const _0x49dfa0 = (_0x26d4f5, _0xdb6456) => _0x26d4f5 === _0xdb6456;
            return _0x317152.getAutoImports(_0x4549b0, _0x323b8b, _0x478a7b, _0xa3616a.addImportSimilarityLimit, _0xa3616a.wellKnownAbbreviationMap, {
              lazyEdit: true,
              importFormat: this._workspace.importFormat,
              patternMatcher: _0x49dfa0,
              indices: _0x2397e3.SymbolIndexer.getIndices(this._workspace),
              includeAliasesFromUserFiles: this._workspace.indexOptions?.includeAliasesFromUserFiles,
              allowDuplicatedAliasesFromUserFiles: true
            }, _0x2b48eb);
          }, _0x2b48eb);
          const _0x2cc4a6 = _0x323b8b.toString();
          const _0x4a6ca2 = [];
          for (const _0x5b3ef4 of _0x35812a) {
            _0x522156.throwIfCancellationRequested(_0x2b48eb);
            if (_0x5b3ef4.name.startsWith('__')) {
              continue;
            }
            _0x4a6ca2.push(_0xc4955e(_0x2cc4a6, _0x478a7b, _0x5b3ef4.name, _0x5b3ef4.source, _0x5b3ef4.alias));
          }
          const _0xa68695 = this._workspace.service.getTextOnRange(_0x323b8b, _0x478a7b, _0x2b48eb);
          _0x98934.push(..._0x4a6ca2.sort((_0x42981f, _0x53539f) => {
            const _0x54719b = _0x42981f.command.arguments[2];
            const _0x5b9e07 = _0x53539f.command.arguments[2];
            if (_0x54719b === _0x5b9e07) {
              return this._addImportCompare(_0x42981f, _0x53539f);
            }
            if (_0x54719b === _0xa68695) {
              return -1;
            }
            if (_0x5b9e07 === _0xa68695) {
              return 1;
            }
            return this._addImportCompare(_0x42981f, _0x53539f);
          }));
        }
        _addImportCompare(_0x56bfc8, _0x37ec8b) {
          const _0x43d131 = _0x56bfc8.command.arguments[2];
          const _0x3f7307 = _0x37ec8b.command.arguments[2];
          const _0x46ccf1 = _0x56bfc8.command.arguments[3];
          const _0x554751 = _0x37ec8b.command.arguments[3];
          if (!_0x46ccf1 && !_0x554751) {
            return _0x43d131.localeCompare(_0x3f7307);
          }
          if (!_0x46ccf1 && _0x554751) {
            return -1;
          }
          if (_0x46ccf1 && !_0x554751) {
            return 1;
          }
          const _0x4a605f = _0x4c1482.getCharacterCount(_0x46ccf1, '.');
          const _0x11bc22 = _0x4c1482.getCharacterCount(_0x554751, '.');
          const _0x18edd8 = _0x4a605f - _0x11bc22;
          if (_0x18edd8 === 0) {
            return _0x56bfc8.title.localeCompare(_0x37ec8b.title);
          }
          return _0x18edd8;
        }
      }
      function _0xc4955e(_0x5f14ce, _0x401d9b, _0x1da046, _0x3a23f9, _0x212326) {
        const _0x3d0d5a = _0x1aa99c.Localizer.CodeAction.AutoImport.addAutoImport().format({
          importText: _0x785a69.getAutoImportText(_0x1da046, _0x3a23f9, _0x212326)
        });
        return _0x16cb00.CodeAction.create(_0x3d0d5a, _0x4df1f1.createCommand(_0x3d0d5a, _0x1b9700.Commands.addImport, _0x5f14ce, _0x401d9b, _0x1da046, _0x3a23f9, _0x212326), _0x16cb00.CodeActionKind.QuickFix);
      }
    },
    67142: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.AddTypeIgnore = undefined;
      const _0x3aa2ff = require(56911);
      const _0x3e130e = require(26687);
      const _0x55612f = require(41557);
      const _0x1f9775 = require(91426);
      const _0x5d7264 = require(58147);
      const _0x22b54d = require(56814);
      const _0x217c52 = require(5884);
      const _0x4ad5c1 = require(67703);
      const _0x43f512 = '# {name}: ignore{postfix}';
      const _0x1a2447 = 'Add \'# {name}: ignore{postfix}\' to suppress warning';
      class _0xa74b99 {
        static addAddTypeIgnoreCodeActions(_0x27f209, _0x3f9a01, _0x29f3f8, _0x284f8f, _0x3e7d33) {
          const _0x2f8f3b = _0x27f209.service.getParseResults(_0x3f9a01);
          if (!_0x2f8f3b) {
            return;
          }
          const _0xa677ce = _0x2f8f3b.tokenizerOutput.tokens;
          const _0x22ffcf = _0x2f8f3b.tokenizerOutput.lines;
          const _0x5b53e9 = _0x2f8f3b.parserOutput;
          const _0x5bbc31 = _0x29f3f8.filter(_0x24bed5 => !!_0x24bed5.getRule());
          const _0x57efc3 = [];
          for (const _0x48e6d8 of _0x5bbc31) {
            _0x1f9775.throwIfCancellationRequested(_0x3e7d33);
            const _0x286c35 = _0x22b54d.getLineEndOffset(_0x2f8f3b.tokenizerOutput, _0x2f8f3b.text, _0x48e6d8.range.end.line);
            const _0x1e4a97 = _0x55612f.getIndexOfTokenOverlapping(_0xa677ce, _0x286c35);
            const _0x5694ec = _0x55612f.getCommentsAtTokenIndex(_0xa677ce, _0x1e4a97);
            let _0x5af581;
            let _0x55f07d;
            if (_0x5694ec && _0x5694ec.length > 0) {
              const _0x58ad84 = _0x22b54d.convertOffsetToPosition(_0x5694ec[0].start - 1, _0x22ffcf);
              const _0x3970ce = /^\s*pyright:\s*ignore\s*\[/;
              const _0x27409f = _0x3970ce.exec(_0x5694ec[0].value);
              if (_0x27409f) {
                _0x5af581 = {
                  line: _0x58ad84.line,
                  character: _0x58ad84.character + _0x27409f[0].length + 1
                };
                _0x55f07d = _0x48e6d8.getRule() + ', ';
              } else {
                _0x5af581 = _0x58ad84;
                _0x55f07d = this._getTypeIgnoreStatement(_0x2f8f3b.parserOutput, _0x48e6d8) + ' ';
              }
            } else {
              _0x5af581 = _0x22b54d.convertOffsetToPosition(_0x286c35, _0x2f8f3b.tokenizerOutput.lines);
              _0x55f07d = ` ${this._getTypeIgnoreStatement(_0x2f8f3b.parserOutput, _0x48e6d8)}`;
            }
            const _0x783140 = {
              title: this._getTypeIgnoreTitle(_0x5b53e9, _0x48e6d8),
              codeActionPosition: _0x5af581,
              codeActionText: _0x55f07d
            };
            _0x5d7264.addIfUnique(_0x57efc3, _0x783140, (_0x51974e, _0x3faabe) => this._areSame(_0x51974e, _0x3faabe));
          }
          for (const _0x478ea5 of _0x57efc3) {
            _0x284f8f.push(this._createFix(_0x27f209, _0x3f9a01, _0x478ea5.title, _0x478ea5.codeActionPosition, _0x478ea5.codeActionText));
          }
        }
        static _areSame(_0x44302d, _0x8031ce) {
          return _0x44302d.title === _0x8031ce.title && _0x44302d.codeActionPosition.character === _0x8031ce.codeActionPosition.character && _0x44302d.codeActionPosition.line === _0x8031ce.codeActionPosition.line && _0x44302d.codeActionText === _0x8031ce.codeActionText;
        }
        static _createFix(_0x5afa96, _0x59361b, _0x4969ad, _0x5acc93, _0xd0d14a) {
          const _0x2394aa = _0x3aa2ff.CodeAction.create(_0x4969ad, _0x3aa2ff.CodeActionKind.QuickFix);
          _0x2394aa.edit = {
            changes: {
              [_0x217c52.convertUriToLspUriString(_0x5afa96.service.fs, _0x59361b)]: [_0x3aa2ff.TextEdit.insert(_0x5acc93, _0xd0d14a)]
            }
          };
          return _0x2394aa;
        }
        static _getTypeIgnoreStatement(_0x483a96, _0x5d9704) {
          return this._getTemplatedString(_0x483a96, _0x5d9704, new _0x4ad5c1.ParameterizedString(_0x43f512));
        }
        static _getTypeIgnoreTitle(_0x222ade, _0x50ee74) {
          return this._getTemplatedString(_0x222ade, _0x50ee74, new _0x4ad5c1.ParameterizedString(_0x1a2447));
        }
        static _getTemplatedString(_0x4fc402, _0x3faa0d, _0x5696db) {
          const _0x2a0327 = _0x3e130e.getFileInfo(_0x4fc402.parseTree);
          if (!_0x2a0327) {
            return _0x5696db.format({
              name: 'type',
              postfix: ''
            });
          }
          if (_0x2a0327.diagnosticRuleSet.enableTypeIgnoreComments) {
            return _0x5696db.format({
              name: 'type',
              postfix: ''
            });
          } else {
            return _0x5696db.format({
              name: 'pyright',
              postfix: `[${_0x3faa0d.getRule()}]`
            });
          }
        }
      }
      exports.AddTypeIgnore = _0xa74b99;
    },
    64057: function (module, exports, require) {
      'use strict';

      var __importDefault = this && this.__importDefault || function (mod) {
        return mod && mod.__esModule ? mod : {
          "default": mod
        };
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ChangeSpelling = undefined;
      const _0x3f5c37 = __importDefault(require(90930));
      const _0x34cd9b = require(56911);
      const _0x5bce92 = require(41557);
      const _0x4b83ba = require(95952);
      const _0x19b30c = require(4064);
      const _0x18fa2f = require(21024);
      const _0x4cc331 = require(91426);
      const _0x51f1ac = require(58147);
      const _0xd93346 = require(23574);
      const _0x2d6ec6 = require(65880);
      const _0x489fd4 = require(56814);
      const _0x53a8de = require(27130);
      const _0x11d227 = require(13259);
      const _0x371f89 = require(15986);
      const _0x2daae7 = require(86615);
      const _0x31ad53 = require(74899);
      const _0x2abedd = 3;
      const _0x1e7b29 = 3;
      class _0x27b302 {
        constructor(_0x49a4e9, _0x148491) {
          this._workspace = _0x49a4e9;
          this._hasVSCodeExtension = _0x148491;
        }
        appendCodeActions(_0x3b6794, _0x5d6602, _0x27adec, _0x237e96) {
          if (!this._hasVSCodeExtension) {
            return;
          }
          const _0x509ea9 = _0x5d6602.filter(_0x4c31fd => _0x4c31fd.getRule() === _0x2d6ec6.DiagnosticRule.reportUnboundVariable || _0x4c31fd.getRule() === _0x2d6ec6.DiagnosticRule.reportUndefinedVariable);
          if (_0x509ea9.length === 0) {
            return;
          }
          const _0x417a3c = _0x509ea9[0].range;
          this._workspace.service.run(_0x11d24f => {
            const _0x416ba5 = _0x11d24f.getParseResults(_0x3b6794);
            if (!_0x416ba5) {
              return;
            }
            const _0x577310 = _0x489fd4.convertRangeToTextRange(_0x417a3c, _0x416ba5.tokenizerOutput.lines);
            if (!_0x577310) {
              return;
            }
            const _0x17c529 = _0x5bce92.findNodeByOffset(_0x416ba5.parserOutput.parseTree, _0x577310.start);
            if (!_0x17c529) {
              return;
            }
            const _0x5457f9 = new Map();
            const _0x20496a = _0x416ba5.text.substr(_0x577310.start, _0x577310.length);
            if (_0x20496a.length < _0x2abedd) {
              return;
            }
            this._collectCandidatesFromSymbols(_0x11d24f, _0x17c529, _0x20496a, _0x5457f9, _0x237e96);
            this._collectCandidatesFromAddImports(_0x11d24f, _0x3b6794, _0x417a3c, _0x27adec, _0x20496a, _0x5457f9, _0x237e96);
            const _0x29ec7b = this._getBestMatch(_0x5457f9);
            if (!_0x29ec7b) {
              return;
            }
            _0x27adec.push(this._createCodeAction(_0x3b6794, _0x417a3c, _0x29ec7b));
          }, _0x237e96);
        }
        _createCodeAction(_0x18e3b3, _0x4c0860, _0x1859d3) {
          const _0x21629b = _0x371f89.Localizer.CodeAction.ChangeSpelling.changeSpellingTo().format({
            word: _0x1859d3.name
          });
          if (!_0x1859d3.results || _0x1859d3.results.length > 1) {
            return _0x34cd9b.CodeAction.create(_0x21629b, _0xd93346.createCommand(_0x21629b, _0x53a8de.Commands.changeSpelling, _0x18e3b3, _0x4c0860, _0x1859d3.name), _0x34cd9b.CodeActionKind.QuickFix);
          }
          const _0x45ad87 = _0x1859d3.results[0];
          return _0x34cd9b.CodeAction.create(_0x21629b, _0xd93346.createCommand(_0x21629b, _0x53a8de.Commands.addImport, _0x18e3b3, _0x4c0860, _0x45ad87.name, _0x45ad87.source, _0x45ad87.alias), _0x34cd9b.CodeActionKind.QuickFix);
        }
        _getBestMatch(_0x384d22) {
          if (_0x384d22.size === 0) {
            return undefined;
          }
          const _0x52d6a6 = [..._0x384d22.entries()].sort((_0x4ea7ef, _0x4148e6) => {
            if (_0x4ea7ef[1] === _0x4148e6[1]) {
              return _0x4ea7ef[0].localeCompare(_0x4148e6[0]);
            }
            return _0x4ea7ef[1].editDistance - _0x4148e6[1].editDistance;
          });
          return {
            name: _0x52d6a6[0][0],
            results: _0x52d6a6[0][1].results
          };
        }
        _collectCandidatesFromAddImports(_0x26d156, _0x15b573, _0x1025b0, _0x5d5135, _0x5748cd, _0x556420, _0x278264) {
          if (_0x5d5135.some(_0x1183f0 => {
            return _0x1183f0.command?.command === _0x53a8de.Commands.addImport;
          })) {
            return;
          }
          const _0x39ca3d = 0;
          const _0x3c7a6b = _0x2daae7.getAutoImports(_0x26d156, _0x15b573, _0x1025b0, _0x39ca3d, _0x11d227.wellKnownAbbreviationMap, {
            lazyEdit: true,
            importFormat: this._workspace.importFormat,
            patternMatcher: (_0x32d582, _0x1a6b07) => this._patternMatcher(_0x32d582, _0x1a6b07),
            indices: _0x31ad53.SymbolIndexer.getIndices(this._workspace),
            includeAliasesFromUserFiles: this._workspace.indexOptions?.includeAliasesFromUserFiles
          }, _0x278264);
          const _0xd5bb1c = _0x51f1ac.createMapFromItems(_0x3c7a6b, _0x32d312 => _0x32d312.name);
          _0xd5bb1c.forEach((_0x259326, _0x5695c7) => {
            _0x4cc331.throwIfCancellationRequested(_0x278264);
            this._tryAdd(_0x5748cd, _0x5695c7, _0x556420, _0x259326);
          });
        }
        _collectCandidatesFromSymbols(_0x2e2c1a, _0x1958b0, _0x4bd3fc, _0x2185c8, _0x1ecde6) {
          let _0x47b656 = _0x1958b0;
          while (_0x47b656) {
            let _0x8560cb = _0x4b83ba.getScopeForNode(_0x47b656);
            if (!_0x8560cb) {
              _0x47b656 = _0x47b656.parent;
              continue;
            }
            while (_0x8560cb) {
              _0x4cc331.throwIfCancellationRequested(_0x1ecde6);
              _0x8560cb.symbolTable.forEach((_0x24bf45, _0x555b04) => {
                this._tryAdd(_0x4bd3fc, _0x555b04, _0x2185c8);
              });
              _0x8560cb = _0x8560cb.parent;
            }
            if (_0x47b656.nodeType !== 10 || !_0x2e2c1a.evaluator) {
              return;
            }
            const _0x1743ad = _0x2e2c1a.evaluator.getTypeOfClass(_0x47b656);
            if (!_0x1743ad || !_0x18fa2f.isInstantiableClass(_0x1743ad.classType)) {
              return;
            }
            _0x1743ad.classType.shared.mro.forEach((_0x5ce1e2, _0x2075b6) => {
              _0x4cc331.throwIfCancellationRequested(_0x1ecde6);
              if (!_0x18fa2f.isInstantiableClass(_0x5ce1e2)) {
                return;
              }
              _0x5ce1e2.shared.fields.forEach((_0x49e055, _0x465ab1) => {
                if (!_0x19b30c.isVisibleExternally(_0x49e055) || !_0x49e055.isClassMember()) {
                  return;
                }
                this._tryAdd(_0x4bd3fc, _0x465ab1, _0x2185c8);
              });
            });
            return;
          }
        }
        _tryAdd(_0x5a902c, _0x5f53dc, _0x43bb17, _0x2522bc) {
          if (_0x5f53dc.length < _0x2abedd || _0x43bb17.has(_0x5f53dc) || _0x5a902c === _0x5f53dc) {
            return;
          }
          const _0x293f4d = this._getEditDistance(_0x5a902c, _0x5f53dc);
          if (_0x293f4d > _0x1e7b29) {
            return;
          }
          _0x43bb17.set(_0x5f53dc, {
            editDistance: _0x293f4d,
            results: _0x2522bc
          });
        }
        _getEditDistance(_0x4d9862, _0x37f91f) {
          const _0x538847 = _0x3f5c37.default(_0x4d9862, _0x37f91f);
          const _0x20735a = Math.min(_0x1e7b29, Math.floor(_0x4d9862.length / 3));
          if (_0x538847 > _0x20735a) {
            return _0x1e7b29 + 1;
          }
          return _0x538847;
        }
        _patternMatcher(_0x5db9d2, _0x42ee51) {
          return this._getEditDistance(_0x5db9d2, _0x42ee51) <= _0x1e7b29;
        }
      }
      exports.ChangeSpelling = _0x27b302;
    },
    87997: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SearchImports = undefined;
      const _0x3c20ae = require(56911);
      const _0x17ab6f = require(23574);
      const _0x4e2cfa = require(65880);
      const _0x1ec68f = require(30741);
      const _0x408a7e = require(27130);
      const _0x5d441f = require(15986);
      class _0x2a1fc0 {
        constructor(_0x5276bc, _0x3e63e4) {
          this._workspace = _0x5276bc;
          this._hasVSCodeExtension = _0x3e63e4;
        }
        appendCodeActions(_0x40832f, _0x12b389, _0x11fcbc, _0x312008) {
          if (!this._hasVSCodeExtension || this._workspace.kinds.some(_0x1cc6e5 => _0x1cc6e5 === _0x1ec68f.WellKnownWorkspaceKinds.Limited)) {
            return;
          }
          const _0x3cbfdd = _0x12b389.filter(_0x468e40 => _0x468e40.getRule() === _0x4e2cfa.DiagnosticRule.reportUnboundVariable || _0x468e40.getRule() === _0x4e2cfa.DiagnosticRule.reportUndefinedVariable);
          if (_0x3cbfdd.length === 0) {
            return;
          }
          const _0x29d982 = _0x3cbfdd[0].range;
          const _0x4d5849 = this._workspace.service.getTextOnRange(_0x40832f, _0x29d982, _0x312008);
          if (!_0x4d5849 || _0x4d5849.trim().length === 0) {
            return;
          }
          const _0x37fbb4 = _0x5d441f.Localizer.CodeAction.AutoImport.searchImport();
          _0x11fcbc.push(_0x3c20ae.CodeAction.create(_0x37fbb4, _0x17ab6f.createCommand(_0x37fbb4, _0x408a7e.ClientCommands.searchImports, _0x40832f, _0x29d982, _0x4d5849), _0x3c20ae.CodeActionKind.QuickFix));
        }
      }
      exports.SearchImports = _0x2a1fc0;
    },
    90836: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ConstructorUsageProviderFactory = undefined;
      const _0x1a123e = require(28445);
      const _0xd1e31a = require(83760);
      const _0x3c4f66 = require(91426);
      const _0x297821 = require(56507);
      const _0x1fbd86 = require(67032);
      class _0x47dcae {
        constructor(_0xe838ac) {
          this._view = _0xe838ac;
        }
        tryCreateProvider(_0x54da96, _0x401b50, _0x50c54b) {
          var _0x4ad583;
          if (_0x54da96 !== _0x297821.ReferenceUseCase.References) {
            return undefined;
          }
          const _0x77cf43 = _0x401b50.find(this._isInitMethod);
          if (!_0x77cf43) {
            return undefined;
          }
          const _0x3faf0e = _0x77cf43.node.parent.parent;
          const _0x592117 = (_0x4ad583 = this._view.evaluator.getDeclInfoForNameNode(_0x3faf0e.d.name)?.decls) === null || _0x4ad583 === undefined ? undefined : _0x4ad583.find(_0x1a123e.isClassDeclaration);
          if (!_0x592117) {
            return undefined;
          }
          return new _0x1a7b65(this._view, _0x592117, _0x77cf43, _0x50c54b);
        }
        _isInitMethod(_0x1d30e8) {
          return _0x1a123e.isFunctionDeclaration(_0x1d30e8) && _0x1d30e8.isMethod && _0x1d30e8.node.d.name.d.value === '__init__' && _0x1d30e8.node.parent?.parent?.nodeType === 10 && _0x1d30e8.node.parent.parent.d.name.d.value.length > 0;
        }
      }
      exports.ConstructorUsageProviderFactory = _0x47dcae;
      class _0x1a7b65 {
        constructor(_0x57346e, _0xe8c838, _0x3acb2c, _0x1cd059) {
          this._view = _0x57346e;
          this._classDeclaration = _0xe8c838;
          this._initDeclaration = _0x3acb2c;
          this._token = _0x1cd059;
          this._aliasResolver = new _0x1fbd86.AliasResolver(this._view.evaluator);
        }
        appendSymbolNamesTo(_0x3185a9) {
          const _0x3a2e4b = this._classDeclaration.node;
          _0x3185a9.add(_0x3a2e4b.d.name.d.value);
        }
        appendDeclarationsTo(_0x314c86) {}
        appendDeclarationsAt(_0x9b3c7f, _0x17e29d, _0x103a78) {
          _0x3c4f66.throwIfCancellationRequested(this._token);
          if (_0x9b3c7f.nodeType !== 38 || _0x9b3c7f.parent?.nodeType !== 9) {
            return;
          }
          for (const _0x4a67f4 of _0x17e29d) {
            if (_0xd1e31a.areDeclarationsSame(_0x4a67f4, this._classDeclaration)) {
              _0x103a78.push(this._initDeclaration);
              return;
            }
            const _0x6f356f = this._aliasResolver.resolve(_0x4a67f4, true);
            if (_0x6f356f && _0xd1e31a.areDeclarationsSame(_0x6f356f, this._classDeclaration)) {
              _0x103a78.push(this._initDeclaration);
              return;
            }
          }
        }
      }
    },
    48316: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DeclarationFinder = undefined;
      const _0x3f0792 = require(28445);
      const _0x26b7e1 = require(21024);
      const _0x1ab675 = require(91426);
      const _0x4e48e6 = require(34455);
      const _0x303ad5 = require(27594);
      class _0x4494b0 {
        constructor(_0x16ed1b) {
          this._program = _0x16ed1b;
          this._cache = new WeakMap();
        }
        onFileDirty(_0x2ad87d) {
          var _0x4e114d;
          if (!((_0x4e114d = this._typingFileCache?.info) === null || _0x4e114d === undefined ? undefined : _0x4e114d.sourceFile.getUri().equals(_0x2ad87d))) {
            return;
          }
          this._typingFileCache = undefined;
        }
        onClearCache() {
          this._cache = new WeakMap();
          this._typingFileCache = undefined;
        }
        onUpdateSettings(_0xac4d01) {
          this._typingFileCache = undefined;
        }
        getDefinitionFromTypingByName(_0x17b1fa) {
          var _0x2aca7f;
          const _0xd61a19 = this._getTypingSymbols(_0x17b1fa);
          if ((_0x2aca7f = _0xd61a19 === null || _0xd61a19 === undefined ? undefined : _0xd61a19.getDeclarations()) !== null && _0x2aca7f !== undefined) {
            return _0x2aca7f;
          } else {
            return [];
          }
        }
        getDeclarations(_0x589780, _0x1a9760, _0xad3577) {
          const _0x145755 = this._cache.get(_0x589780);
          if (_0x145755) {
            return _0x145755.declarations;
          }
          const _0x41604b = _0x303ad5.EmptyUri.instance;
          const _0x2d62e7 = _0xad3577?.sourceMapper ?? this._program.getSourceMapper(_0x41604b, _0x1a9760, false, true);
          const _0x5e90d1 = this._getDeclarations(_0x589780, _0x2d62e7, _0xad3577 ?? {}, _0x1a9760);
          this._cache.set(_0x589780, _0x5e90d1);
          return _0x5e90d1.declarations;
        }
        _getClassTypeDeclarations(_0x57629c, _0x516c6e, _0x3f4ccd) {
          if (_0x57629c.shared.declaration && (!_0x3f4ccd || !_0x57629c.props?.typeAliasInfo)) {
            return [_0x57629c.shared.declaration];
          }
          const _0x347688 = _0x303ad5.EmptyUri.instance;
          const _0x1cf532 = _0x516c6e.findDeclarationsByType(_0x347688, _0x57629c, _0x3f4ccd);
          if (_0x3f4ccd && _0x57629c.props?.typeAliasInfo) {
            return _0x1cf532.filter(_0x344701 => {
              var _0x584ea6;
              var _0x378523;
              if (_0x3f0792.isVariableDeclaration(_0x344701) && _0x344701.typeAliasName && _0x344701.typeAliasName.d.value === ((_0x584ea6 = _0x57629c.props?.typeAliasInfo) === null || _0x584ea6 === undefined ? undefined : _0x584ea6.shared.name)) {
                return true;
              }
              if (_0x3f0792.isTypeAliasDeclaration(_0x344701) && _0x344701.node.d.name.d.value === ((_0x378523 = _0x57629c.props?.typeAliasInfo) === null || _0x378523 === undefined ? undefined : _0x378523.shared.name)) {
                return true;
              }
              return false;
            });
          }
          return _0x1cf532.filter(_0x26a6dd => _0x3f0792.isClassDeclaration(_0x26a6dd) || _0x3f0792.isSpecialBuiltInClassDeclaration(_0x26a6dd));
        }
        _getTypingFile() {
          if (this._typingFileCache) {
            return this._typingFileCache.info;
          }
          for (const _0x37d79a of this._program.getSourceFileInfoList().filter(_0x404fa3 => _0x404fa3.sourceFile.isTypingStubFile())) {
            this._program.getParseResults(_0x37d79a.sourceFile.getUri());
            const _0x211d63 = this._getSymbol(_0x37d79a, 'Any');
            if (_0x211d63) {
              this._typingFileCache = {
                info: _0x37d79a
              };
              return _0x37d79a;
            }
          }
          this._typingFileCache = {
            info: undefined
          };
          return undefined;
        }
        _getSymbol(_0x596196, _0x4b64ca) {
          const _0x26435b = _0x596196.sourceFile.getModuleSymbolTable();
          if (!_0x26435b) {
            return undefined;
          }
          return _0x26435b.get(_0x4b64ca);
        }
        _getTypingSymbols(_0x308731) {
          const _0x1d8bf7 = this._getTypingFile();
          if (!_0x1d8bf7) {
            return;
          }
          return this._getSymbol(_0x1d8bf7, _0x308731);
        }
        _getDeclarations(_0x42a286, _0x5eccc0, _0x12855f, _0x2d086f) {
          _0x1ab675.throwIfCancellationRequested(_0x2d086f);
          switch (_0x42a286.category) {
            case 2:
              {
                const _0x159444 = this._getTypingSymbols('Any');
                return {
                  declarations: (_0x159444 === null || _0x159444 === undefined ? undefined : _0x159444.getDeclarations()) ?? []
                };
              }
            case 8:
              {
                const _0x20f158 = this._getTypingSymbols('Union');
                return {
                  declarations: (_0x20f158 === null || _0x20f158 === undefined ? undefined : _0x20f158.getDeclarations()) ?? []
                };
              }
            case 3:
              {
                const _0x375c0e = this._getTypingSymbols(_0x42a286.priv.isNoReturn ? 'NoReturn' : 'Never');
                return {
                  declarations: (_0x375c0e === null || _0x375c0e === undefined ? undefined : _0x375c0e.getDeclarations()) ?? []
                };
              }
            case 6:
              {
                const _0x56310d = this._getClassTypeDeclarations(_0x42a286, _0x5eccc0, _0x12855f.useTypeAlias ?? false);
                return {
                  declarations: _0x56310d
                };
              }
            case 4:
              {
                return {
                  declarations: _0x42a286.shared.declaration ? [_0x42a286.shared.declaration] : []
                };
              }
            case 5:
              {
                const _0x567a76 = _0x26b7e1.OverloadedType.getOverloads(_0x42a286).map(_0xddd37e => _0xddd37e.shared.declaration).filter(_0x4e48e6.isDefined);
                const _0x597991 = _0x26b7e1.OverloadedType.getImplementation(_0x42a286);
                if (_0x597991 && _0x26b7e1.isFunction(_0x597991) && _0x597991.shared.declaration && _0x4e48e6.isDefined(_0x597991.shared.declaration)) {
                  _0x567a76.push(_0x597991.shared.declaration);
                }
                return {
                  declarations: _0x567a76
                };
              }
            default:
              return {
                declarations: []
              };
          }
        }
      }
      exports.DeclarationFinder = _0x4494b0;
    },
    1044: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IndicesManager = undefined;
      const _0x375fa6 = require(58147);
      const _0x179441 = require(27113);
      const _0x49496f = require(77001);
      class _0x8fcae7 {
        constructor() {
          this._persistedLibrary = new Map();
          this._indicesPerService = new Map();
        }
        getIndices(_0x1ebe77) {
          const _0x3e5d1e = this._getOrAddMapData(_0x1ebe77.id);
          return {
            setWorkspaceIndex(_0x3e8df8, _0x5a0d9e) {
              const _0x115627 = _0x1ebe77.getSourceFileInfo(_0x3e8df8);
              if (_0x115627) {
                if (_0x3e5d1e === null || _0x3e5d1e === undefined) {
                  undefined;
                } else {
                  _0x3e5d1e.workspace.set(_0x115627, _0x5a0d9e);
                }
              }
            },
            getSourceIndex(_0x52846a) {
              const _0x2b0173 = _0x1ebe77.getSourceFileInfo(_0x52846a);
              if (_0x2b0173) {
                if (_0x3e5d1e === null || _0x3e5d1e === undefined) {
                  return undefined;
                } else {
                  return _0x3e5d1e.workspace.get(_0x2b0173);
                }
              } else {
                return undefined;
              }
            },
            getLibraryIndices(_0x232903) {
              if (_0x3e5d1e === null || _0x3e5d1e === undefined) {
                return undefined;
              } else {
                return _0x3e5d1e.libraryPerExecEnv.get(_0x232903 ?? _0x179441.Uri.empty());
              }
            }
          };
        }
        cloneIndex(_0x33168f, _0x2f2aaf, _0x4db118, _0x9c5f58) {
          if (this._lastLibraryMap && this._usable(this._lastLibraryMap, _0x2f2aaf)) {
            const _0x148dab = this._lastLibraryMap.get(_0x4db118);
            if (this._clonable(_0x148dab, _0x9c5f58)) {
              this.setIndex(_0x33168f, _0x2f2aaf, _0x4db118, _0x148dab, _0x9c5f58);
              return true;
            } else {
              this._lastLibraryMap = undefined;
            }
          }
          for (const _0x7ed204 of this._indicesPerService.values()) {
            for (const _0x3544b6 of _0x7ed204.libraryPerExecEnv.values()) {
              if (!this._usable(_0x3544b6, _0x2f2aaf)) {
                continue;
              }
              const _0x6f0172 = _0x3544b6.get(_0x4db118);
              if (this._clonable(_0x6f0172, _0x9c5f58)) {
                this._lastLibraryMap = _0x3544b6;
                this.setIndex(_0x33168f, _0x2f2aaf, _0x4db118, _0x6f0172, _0x9c5f58);
                return true;
              }
            }
          }
          return false;
        }
        cloneOrSetIndex(_0x4c4801, _0x109598, _0x2ab803, _0x98b579, _0xba585e) {
          if (!_0xba585e || !this.cloneIndex(_0x4c4801, _0x109598, _0x2ab803, _0xba585e)) {
            this.setIndex(_0x4c4801, _0x109598, _0x2ab803, _0x98b579, _0xba585e);
          }
        }
        setIndex(_0x1e1523, _0x51cdb0, _0x454bc7, _0x5ad0a2, _0x4d2fe0) {
          const _0x2dfed6 = this._getOrAddMapData(_0x1e1523);
          const _0x28f206 = _0x375fa6.getOrAdd(_0x2dfed6.libraryPerExecEnv, _0x51cdb0.root ?? _0x179441.Uri.empty(), () => new _0x3fa5d4(_0x51cdb0.pythonVersion, _0x51cdb0.pythonPlatform));
          if (_0x5ad0a2.timestamp === _0x4d2fe0) {
            _0x28f206.set(_0x454bc7, _0x5ad0a2);
          } else {
            _0x28f206.set(_0x454bc7, {
              ..._0x5ad0a2,
              timestamp: _0x4d2fe0
            });
          }
        }
        reset(_0x528a89, _0x2ed953 = false, _0x7ba625 = false) {
          if (_0x7ba625) {
            this._fileCache = undefined;
            this._hostCache = undefined;
            this._persistedLibrary.clear();
          }
          if (_0x2ed953) {
            const _0x1c1db8 = this._indicesPerService.get(_0x528a89);
            if (_0x1c1db8 === null || _0x1c1db8 === undefined) {
              undefined;
            } else {
              _0x1c1db8.libraryPerExecEnv.clear();
            }
            return;
          }
          this._indicesPerService.delete(_0x528a89);
        }
        setFileCache(_0x4eb20e) {
          this._fileCache = _0x4eb20e;
        }
        getFileCache() {
          return this._fileCache;
        }
        setHostCache(_0x5eb55e) {
          this._hostCache = _0x5eb55e;
        }
        getHostCache() {
          return this._hostCache;
        }
        setPersistLibrary(_0x26041f, _0x3c7388) {
          this._persistedLibrary.set(_0x26041f, _0x3c7388);
        }
        getPersistLibrary(_0x39b6f7) {
          return this._persistedLibrary.get(_0x39b6f7);
        }
        requestComplete(_0x3910fa) {}
        _getOrAddMapData(_0x4dcfa5) {
          return _0x375fa6.getOrAdd(this._indicesPerService, _0x4dcfa5, () => ({
            libraryPerExecEnv: new _0x49496f.UriMap(),
            workspace: new WeakMap()
          }));
        }
        _usable(_0x2f517c, _0x453ed0) {
          return _0x2f517c.pythonPlatform === _0x453ed0.pythonPlatform && _0x2f517c.pythonVersion === _0x453ed0.pythonVersion;
        }
        _clonable(_0x172de8, _0x4ff647) {
          if (!_0x172de8) {
            return false;
          }
          if (!_0x172de8.timestamp) {
            return true;
          }
          return _0x172de8.timestamp === _0x4ff647;
        }
      }
      exports.IndicesManager = _0x8fcae7;
      _0x8fcae7.empty = {
        getIndices(_0x2ce0f4) {
          return {
            getSourceIndex: _0x57e157 => undefined,
            getLibraryIndices: _0x36c208 => undefined
          };
        }
      };
      (function (_0x5eaf5a) {
        function _0x3cc6dd(_0x10d824) {
          return _0x10d824 instanceof _0x5eaf5a;
        }
        _0x5eaf5a.is = _0x3cc6dd;
      })(_0x8fcae7 || (exports.IndicesManager = _0x8fcae7 = {}));
      class _0x3fa5d4 extends _0x49496f.UriMap {
        constructor(_0x49fbdb, _0x2ba6ab) {
          super();
          this.pythonVersion = _0x49fbdb;
          this.pythonPlatform = _0x2ba6ab;
        }
      }
    },
    19995: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ImportAdder = undefined;
      const _0x565ec3 = require(26687);
      const _0x1512b9 = require(28445);
      const _0x5132d8 = require(83760);
      const _0x58b4b8 = require(47610);
      const _0x55804c = require(41557);
      const _0x3cc9d6 = require(88744);
      const _0x2714d3 = require(95952);
      const _0x50483d = require(3433);
      const _0x3aa18e = require(21024);
      const _0x2d030a = require(92324);
      const _0x4da78e = require(91426);
      const _0x525f56 = require(58147);
      const _0x1a8968 = require(12522);
      const _0x4a7037 = require(34455);
      const _0x114248 = require(48281);
      const _0x1090d6 = require(56814);
      const _0x16a81a = require(88754);
      const _0x17e1fc = require(5884);
      const _0x2d597e = require(67032);
      const _0x2c127d = require(13259);
      const _0x4f7586 = require(19013);
      const _0xad2419 = require(30048);
      const _0x1b54a8 = require(61904);
      const _0x30a2a5 = require(86615);
      class _0x37ed6d {
        constructor(_0x3d2da5, _0x590b22) {
          this._program = _0x3d2da5;
          this._cachedResolvedModuleNames = new Map();
          this._autoImportProcessedSet = new Set();
          this._deletedDecls = [];
          this.options = {
            usageKind: _0x590b22?.usageKind ?? 'typeGeneration',
            useTypeAlias: _0x590b22?.useTypeAlias ?? false,
            includeAliasesFromUserFiles: _0x590b22?.includeAliasesFromUserFiles ?? false
          };
          this._importData = {
            containsUnreferenceableSymbols: false,
            declarations: new Map()
          };
        }
        collectImportsForSymbolsUsed(_0x1feec4, _0x65e890, _0xf841de) {
          _0x1feec4 = _0x242781(_0x1feec4) ? _0x1feec4.parseTree : _0x1feec4;
          _0x65e890 = _0x4a7037.isArray(_0x65e890) ? _0x65e890 : [_0x65e890];
          const _0x346cc2 = new _0x21e5fe(this._evaluator, _0x1feec4, _0x65e890, {
            ...this.options,
            pep604: this._program.configOptions.diagnosticRuleSet.pep604Printing
          }, _0xf841de);
          _0x346cc2.collect(_0x1feec4);
          this._updateImportData({
            containsUnreferenceableSymbols: _0x346cc2.containsUnreferenceableSymbols,
            declarations: _0x346cc2.declsForSymbols
          });
          return this._importData;
        }
        addImportInfo(_0x15c7ed) {
          this._updateImportInfos([_0x15c7ed]);
          return this._importData;
        }
        removeImportInfo(_0x58bb2b) {
          for (const _0x2d8cd3 of [...this._importData.declarations.keys()]) {
            const _0x5a8523 = this._getImportInfo(_0x2d8cd3);
            if (!_0x5a8523) {
              continue;
            }
            if (this._areImportInfoSame(_0x5a8523, _0x58bb2b)) {
              this._importData.declarations.delete(_0x2d8cd3);
              _0x2d597e.addDeclarationIfUnique(this._deletedDecls, _0x2d8cd3);
              break;
            }
          }
          if (!this._importData.importInfos) {
            return;
          }
          for (let _0x4df8ca = this._importData.importInfos.length - 1; _0x4df8ca >= 0; _0x4df8ca--) {
            const _0x30c3df = this._importData.importInfos[_0x4df8ca];
            if (this._areImportInfoSame(_0x30c3df, _0x58bb2b)) {
              this._importData.importInfos.splice(_0x4df8ca, 1);
            }
          }
        }
        addDeclaration(_0x56d390, _0x3cd8e3) {
          if (_0x56d390.moduleName === 'builtins' || _0x56d390.moduleName === '__builtins__' || _0x56d390.moduleName === '') {
            return undefined;
          }
          const _0x16bba9 = _0x3cd8e3.nodeType === 38 ? _0x3cd8e3 : _0x3cd8e3.nodeType === 35 ? _0x3cd8e3.d.member : undefined;
          if (!_0x16bba9) {
            return undefined;
          }
          _0x525f56.getOrAdd(this._importData.declarations, _0x56d390, () => []).push(_0x16bba9);
          return this._importData;
        }
        removeDeclaration(_0x33f75a) {
          const _0x3ead54 = this._getImportInfo(_0x33f75a);
          if (!_0x3ead54) {
            return;
          }
          this.removeImportInfo(_0x3ead54);
        }
        appendImportInfoForTypes(_0x420d8f, _0x253ac9, _0x2f61f7) {
          _0x4da78e.throwIfCancellationRequested(_0x2f61f7);
          const _0x31d710 = this._program.serviceProvider.tryGet(_0xad2419.PylanceServiceKeys.declarationFinder);
          if (!_0x31d710) {
            return;
          }
          const _0x201f9c = {
            sourceMapper: this._program.getSourceMapper(_0x420d8f, _0x2f61f7, false, true),
            useTypeAlias: this.options.useTypeAlias
          };
          let _0x33d6e8 = undefined;
          const _0x4d864d = new Set();
          const _0x17aa7e = (_0x4c1354, _0x5b6e2f) => {
            var _0x2460f7;
            if (_0x4d864d.has(_0x4c1354)) {
              return;
            }
            _0x4d864d.add(_0x4c1354);
            const _0x50b96b = _0x31d710.getDeclarations(_0x4c1354, _0x2f61f7, _0x201f9c);
            if (_0x50b96b.length === 0) {
              return;
            }
            const _0x2fcc06 = _0x50b96b[0];
            if (!_0x3aa18e.isClass(_0x4c1354)) {
              if (_0x1b54a8.isUnion(_0x4c1354)) {
                if (this._program.configOptions.diagnosticRuleSet.pep604Printing) {
                  return;
                }
                if (_0x1b54a8.isOptional(_0x4c1354)) {
                  this.addImportInfo({
                    fileUri: _0x2fcc06.uri,
                    nameInfo: {
                      name: 'Optional'
                    }
                  });
                  return;
                }
              }
              this.addDeclaration(_0x2fcc06, _0x5b6e2f);
              return;
            }
            if (_0x3aa18e.ClassType.isBuiltIn(_0x4c1354)) {
              const _0x9f42c0 = _0x4c1354.priv.aliasName ?? _0x4c1354.shared.name;
              _0x33d6e8 = this._handleBuiltInType(_0x31d710, _0x4c1354, _0x2fcc06, _0x9f42c0, _0x33d6e8);
            } else {
              this.addDeclaration(_0x2fcc06, _0x5b6e2f);
            }
            if (_0x4c1354.priv.isTypeArgExplicit) {
              if ((_0x2460f7 = _0x4c1354.priv.typeArgs) === null || _0x2460f7 === undefined) {
                undefined;
              } else {
                _0x2460f7.forEach(_0x485de9 => {
                  _0x17aa7e(_0x485de9, _0x5b6e2f);
                  _0x2d030a.doForEachSubtype(_0x485de9, _0x2deb1c => {
                    _0x17aa7e(_0x2deb1c, _0x5b6e2f);
                  });
                });
              }
            }
          };
          _0x253ac9.forEach(_0x4cbd22 => {
            _0x17aa7e(_0x4cbd22.type, _0x4cbd22.node);
            _0x2d030a.doForEachSubtype(_0x4cbd22.type, _0x3d18a2 => {
              _0x17aa7e(_0x3d18a2, _0x4cbd22.node);
            });
          });
        }
        updateImportInfoForTypeWithAutoImport(_0x1d3812, _0xb8f8c6, _0x357078, _0x20f0d0, _0x5d8dc4) {
          const _0x5c149f = this._program.serviceProvider.tryGet(_0xad2419.PylanceServiceKeys.globalIndices);
          if (!_0x5c149f) {
            return;
          }
          const _0x1b0d51 = _0x1090d6.convertOffsetToPosition(_0x357078, _0xb8f8c6.tokenizerOutput.lines);
          const _0x18c3ae = _0x30a2a5.createAutoImporter(this._program, _0x1d3812, _0x1b0d51, {
            indices: _0x5c149f.getIndices(this._program),
            lazyEdit: false,
            includeAliasesFromUserFiles: this.options.includeAliasesFromUserFiles
          }, _0x5d8dc4);
          if (!_0x18c3ae) {
            return;
          }
          const _0x1825c4 = this._program.getSourceMapper(_0x1d3812, _0x5d8dc4, false, true);
          const _0x15963a = _0x55804c.findNodeByOffset(_0xb8f8c6.parserOutput.parseTree, _0x357078) ?? _0xb8f8c6.parserOutput.parseTree;
          _0x20f0d0.forEach(_0x52fc6d => {
            this._applyAutoImport(_0x18c3ae, _0x15963a, _0x1825c4, _0x1d3812, _0x52fc6d, _0x5d8dc4);
            _0x2d030a.doForEachSubtype(_0x52fc6d, _0x5640f2 => {
              this._applyAutoImport(_0x18c3ae, _0x15963a, _0x1825c4, _0x1d3812, _0x5640f2, _0x5d8dc4);
            });
          });
        }
        applyImports(_0x33bf38, _0x2ea7f8, _0x478354, _0x41e5b6, _0x2da79e) {
          _0x4da78e.throwIfCancellationRequested(_0x2da79e);
          const _0x3a011b = [];
          const _0x24e64f = _0x58b4b8.getTopLevelImports(_0x2ea7f8.parserOutput.parseTree);
          const _0x44e693 = this._tryGetApplyImportResult(_0x24e64f, _0x33bf38, _0x2ea7f8, _0x41e5b6, _0x2da79e);
          if (!_0x44e693) {
            return _0x3a011b;
          }
          this._applyImportResultTo(_0x24e64f, _0x44e693, _0x478354, _0x3a011b, _0x2da79e);
          return _0x3a011b;
        }
        applyImportsTo(_0xeeabe5, _0x3c94dd, _0x23fe4f, _0x285b00) {
          _0x4da78e.throwIfCancellationRequested(_0x285b00);
          const _0x2c9f70 = _0x58b4b8.getTopLevelImports(_0xeeabe5.parserOutput.parseTree);
          const _0x32dc86 = _0x565ec3.getFileInfo(_0xeeabe5.parserOutput.parseTree).fileUri;
          const _0x43157b = this._tryGetApplyImportResult(_0x2c9f70, _0x32dc86, _0xeeabe5, _0x3c94dd, _0x285b00);
          if (!_0x43157b) {
            return;
          }
          this._applyImportResultTo(_0x2c9f70, _0x43157b, 0, _0x23fe4f, _0x285b00);
        }
        tryGetImportResult(_0x30f199, _0x57e20e, _0x275170) {
          const _0x2acd48 = _0x565ec3.getFileInfo(_0x57e20e.parserOutput.parseTree).fileUri;
          return this._tryGetApplyImportResult(_0x30f199, _0x2acd48, _0x57e20e, 'absolute', _0x275170);
        }
        get _configOptions() {
          return this._program.configOptions;
        }
        get _importResolver() {
          return this._program.importResolver;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        _handleBuiltInType(_0x123d77, _0x4bc2e3, _0x1d52fd, _0xa77686, _0x1bf54f) {
          if (!_0xa77686) {
            return _0x1bf54f;
          }
          if (_0x4bc2e3.shared.moduleName === 'typing') {
            _0x1bf54f = _0x1bf54f ?? _0x1d52fd.uri;
            if (this._program.configOptions.diagnosticRuleSet.pep604Printing && _0x1b54a8.isOptional(_0x4bc2e3)) {
              return _0x1bf54f;
            }
            this.addImportInfo({
              fileUri: _0x1bf54f,
              nameInfo: {
                name: _0xa77686
              }
            });
            return _0x1bf54f;
          }
          if (_0x4bc2e3.shared.moduleName === 'builtins') {
            if (!_0x1bf54f) {
              const _0x53ef81 = _0x123d77.getDefinitionFromTypingByName('Any');
              if (_0x53ef81.length > 0) {
                _0x1bf54f = _0x53ef81[0].uri;
              }
            }
            if (!_0x1bf54f) {
              return _0x1bf54f;
            }
            if (_0x4bc2e3.priv.aliasName) {
              this.addImportInfo({
                fileUri: _0x1bf54f,
                nameInfo: {
                  name: _0xa77686
                }
              });
            }
            if (_0x4bc2e3.priv.literalValue !== undefined) {
              this.addImportInfo({
                fileUri: _0x1bf54f,
                nameInfo: {
                  name: 'Literal'
                }
              });
            }
          }
          return _0x1bf54f;
        }
        _tryGetApplyImportResult(_0x3b1b47, _0x19aa46, _0x3e3207, _0x22dfab, _0x93c31d) {
          const _0x42ede3 = this._getImportNameWithModuleInfo(_0x3b1b47, _0x19aa46, _0x22dfab);
          const _0x33dfb4 = [];
          const _0x2d5327 = [];
          for (const _0x589a77 of _0x525f56.createMapFromItems(_0x42ede3, _0x54ce75 => _0x54ce75.module.moduleName)) {
            _0x4da78e.throwIfCancellationRequested(_0x93c31d);
            if (!this._tryProcessExistingImports(_0x589a77, _0x3b1b47, _0x19aa46, _0x33dfb4)) {
              _0x525f56.appendArray(_0x2d5327, _0x589a77[1]);
              continue;
            }
          }
          _0x33dfb4.push({
            kind: 'insert',
            info: _0x2d5327
          });
          return {
            parseResults: _0x3e3207,
            applyData: _0x33dfb4
          };
        }
        _applyImportResultTo(_0x487ce0, _0x4205fa, _0x139853, _0x2ddadf, _0x540cf2) {
          const _0x41822e = _0x4205fa.parseResults;
          for (const _0x4731f5 of _0x4205fa.applyData) {
            _0x4da78e.throwIfCancellationRequested(_0x540cf2);
            if (_0x4731f5.kind === 'update') {
              if (_0x4a7037.isArray(_0x2ddadf)) {
                _0x525f56.appendArray(_0x2ddadf, _0x58b4b8.getTextEditsForAutoImportSymbolAddition(_0x4731f5.info, _0x4731f5.importStatement, _0x41822e));
              } else {
                this._addOrUpdateImport(_0x4731f5.moduleAndInfo, _0x487ce0, _0x41822e, _0x4731f5.info, _0x2ddadf);
              }
            } else {
              if (_0x4731f5.kind === 'insert') {
                if (_0x4a7037.isArray(_0x2ddadf)) {
                  _0x2ddadf.push(..._0x58b4b8.getTextEditsForAutoImportInsertions(_0x4731f5.info, _0x487ce0, _0x41822e, _0x1090d6.convertOffsetToPosition(_0x139853, _0x41822e.tokenizerOutput.lines)));
                } else {
                  for (const _0x2500a1 of _0x525f56.createMapFromItems(_0x4731f5.info, _0x296ad2 => _0x296ad2.module.moduleName)) {
                    this._addOrUpdateImport(_0x2500a1, _0x487ce0, _0x41822e, _0x2500a1[1], _0x2ddadf);
                  }
                }
              } else {
                _0x114248.assertNever(_0x4731f5);
              }
            }
          }
        }
        _applyAutoImport(_0x4c34e9, _0x15d91c, _0x1982b7, _0x4a5f6e, _0xa579b5, _0x305dad) {
          if (!_0x3aa18e.isClass(_0xa579b5) || this._autoImportProcessedSet.has(_0xa579b5)) {
            return;
          }
          this._autoImportProcessedSet.add(_0xa579b5);
          const _0xd3f805 = _0x1982b7.findDeclarationsByType(_0x4a5f6e, _0xa579b5, this.options.useTypeAlias);
          const _0x20269d = this._tryGetAutoImportsFor(_0x4c34e9, _0x15d91c, _0xd3f805, _0x305dad);
          if (!_0x20269d) {
            return;
          }
          this.removeImportInfo(_0x20269d.originalDeclInfo);
          const _0x566b77 = {
            fileUri: _0x20269d.declUri,
            nameInfo: {
              name: _0x20269d.name,
              alias: _0x20269d.alias
            }
          };
          this.removeImportInfo(_0x566b77);
          if (!_0x20269d.edits || _0x20269d.edits.length === 0) {
            return;
          }
          this.addImportInfo(_0x566b77);
        }
        _tryGetAutoImportsFor(_0x5c6c41, _0x3e5232, _0x2a9a36, _0x3e158e) {
          for (const _0x11256b of _0x2a9a36) {
            const _0x92abd5 = _0x4f7586.getOutermostClassNameFromDecl(_0x11256b);
            if (!_0x92abd5) {
              continue;
            }
            const _0x5ca2e3 = _0x30a2a5.getMatchingAutoImports(_0x5c6c41, _0x3e5232, _0x92abd5, 1, undefined, _0x3e158e);
            const _0x41711d = this._deletedDecls.concat(...this._importData.declarations.keys());
            for (const _0xc7e4c1 of _0x5ca2e3) {
              for (const _0x423cf3 of _0x41711d) {
                const _0x1653eb = this._evaluator.resolveAliasDeclaration(_0x423cf3, true);
                const _0x219246 = _0x1653eb ? this._getImportInfo(_0x1653eb) : undefined;
                const _0x4c7399 = this._getImportInfo(_0x423cf3);
                if (!_0x4c7399 || !_0x219246) {
                  continue;
                }
                if (this._areImportInfoSame(_0x219246, {
                  fileUri: _0xc7e4c1.originalDeclUri,
                  nameInfo: {
                    name: _0xc7e4c1.name,
                    alias: _0xc7e4c1.alias
                  }
                })) {
                  return {
                    ..._0xc7e4c1,
                    originalDeclInfo: _0x4c7399
                  };
                }
              }
            }
          }
          return undefined;
        }
        _updateImportData(_0x10ec86) {
          _0x10ec86.declarations.forEach((_0x10fc34, _0xd0dc02) => this._importData.declarations.set(_0xd0dc02, _0x10fc34));
          this._importData.containsUnreferenceableSymbols = this._importData.containsUnreferenceableSymbols || _0x10ec86.containsUnreferenceableSymbols;
          this._updateImportInfos(_0x10ec86.importInfos);
        }
        _updateImportInfos(_0x2a6656) {
          if (!_0x2a6656) {
            return;
          }
          if (this._importData.importInfos) {
            this._importData.importInfos.push(..._0x2a6656);
          } else {
            this._importData.importInfos = _0x2a6656;
          }
        }
        _getImportNameWithModuleInfo(_0xcb3b31, _0x47e1b5, _0x20d84e) {
          const _0x375594 = [];
          const _0x2412c6 = this._configOptions.findExecEnvironment(_0x47e1b5);
          for (const _0x466ef7 of this._importData.declarations.keys() ?? []) {
            const _0x359695 = this._getImportInfo(_0x466ef7, _0x47e1b5);
            if (!_0x359695 || _0x1512b9.isUnresolvedAliasDeclaration(_0x466ef7)) {
              continue;
            }
            this._appendImportNameInfo(_0x47e1b5, _0x2412c6, _0x20d84e, _0x359695, _0x375594);
          }
          if (this._importData.importInfos) {
            for (const _0xd44296 of this._importData.importInfos) {
              this._appendImportNameInfo(_0x47e1b5, _0x2412c6, _0x20d84e, _0xd44296, _0x375594);
            }
          }
          if (this.options.usageKind === 'move') {
            return _0x375594;
          }
          return _0x375594.filter(_0x481ba5 => {
            const _0x36cc7f = this._tryGetSymbolForImportName(_0x481ba5);
            if (!_0x36cc7f) {
              return true;
            }
            for (const _0x29848d of _0x36cc7f.getDeclarations()) {
              const _0x3a1128 = this._program.evaluator.getInferredTypeOfDeclaration(_0x36cc7f, _0x29848d);
              if (!_0x3a1128) {
                continue;
              }
              return !_0x2c127d.tryGetExistingImportInfo(this._program, _0xcb3b31, _0x3a1128, _0x29848d);
            }
            return true;
          });
        }
        _appendImportNameInfo(_0x2f5650, _0x4284c5, _0x3810a1, _0x5287d5, _0x26f712) {
          const _0x173de5 = this._importResolver.getModuleNameForImport(_0x5287d5.fileUri, _0x4284c5);
          if (!_0x173de5.moduleName) {
            if (!_0x5287d5.nameInfo.name) {
              return;
            }
            _0x3810a1 = 'relative';
          }
          const _0x5a4cb7 = this._program.getSourceFileInfo(_0x5287d5.fileUri);
          const _0x4c9406 = _0x5a4cb7 ? _0x50483d.isUserCode(_0x5a4cb7) : _0x1a8968.matchFileSpecs(this._configOptions, _0x5287d5.fileUri, _0x17e1fc.isFile(this._importResolver.fileSystem, _0x5287d5.fileUri));
          const _0x5d7400 = _0x3810a1 === 'absolute' || _0x173de5.importType === 0 || _0x173de5.importType === 1 || !_0x4c9406 ? undefined : _0x58b4b8.getRelativeModuleName(this._importResolver.fileSystem, _0x2f5650, _0x5287d5.fileUri, this._configOptions);
          _0x525f56.addIfUnique(_0x26f712, {
            moduleFileUri: _0x5287d5.fileUri,
            name: _0x5287d5.nameInfo.name,
            alias: _0x5287d5.nameInfo.alias,
            module: _0x173de5,
            nameForImportFrom: _0x5d7400
          }, (_0x16186e, _0x10a63d) => this._areSame(_0x16186e, _0x10a63d));
        }
        _tryProcessExistingImports(_0x58ff5f, _0xe870d2, _0xcfe564, _0x209691) {
          const _0x53e88c = this._getMatchingImportStatements(_0x58ff5f, _0xe870d2, _0xcfe564);
          for (const _0x2b0b96 of _0x525f56.createMapFromItems(_0x53e88c, _0x468b37 => _0x468b37.node.nodeType === 23 ? 'import' : 'importFrom')) {
            if (_0x2b0b96[0] === 'importFrom') {
              const _0x259e8b = _0x2b0b96[1].filter(_0x1a38cf => _0x1a38cf.node.nodeType === 25 && !_0x1a38cf.node.d.isWildcardImport);
              if (_0x259e8b.length === 0) {
                continue;
              }
              const _0x11bef1 = _0x58ff5f[1].filter(_0x1302b1 => !_0x259e8b.some(_0x5ac54f => _0x5ac54f.node.nodeType === 25 && _0x5ac54f.node.d.imports.some(_0x3c62c2 => {
                var _0x1ae0fd;
                return _0x3c62c2.d.name.d.value === _0x1302b1.name && ((_0x1ae0fd = _0x3c62c2.d.alias) === null || _0x1ae0fd === undefined ? undefined : _0x1ae0fd.d.value) === _0x1302b1.alias;
              })));
              _0x209691.push({
                kind: 'update',
                moduleAndInfo: _0x58ff5f,
                info: _0x11bef1,
                importStatement: _0x259e8b[0]
              });
              return true;
            }
            if (_0x2b0b96[0] === 'import') {
              _0x525f56.removeArrayElements(_0x58ff5f[1], _0x19d28c => !_0x19d28c.name && _0x2b0b96[1].some(_0x2e32a2 => {
                var _0x456f43;
                var _0x2952fb;
                return _0x19d28c.alias === ((_0x2952fb = (_0x456f43 = _0x2e32a2.subnode) === null || _0x456f43 === undefined ? undefined : _0x456f43.d.alias) === null || _0x2952fb === undefined ? undefined : _0x2952fb.d.value);
              }));
              continue;
            }
          }
          return false;
        }
        _tryGetResolveAliasDeclaration(_0x245804) {
          const _0x2a9482 = this._evaluator.getDeclInfoForNameNode(_0x245804)?.decls;
          const _0x4339d9 = _0x2a9482 === null || _0x2a9482 === undefined ? undefined : _0x2a9482.find(_0x1051b2 => _0x1512b9.isAliasDeclaration(_0x1051b2));
          if (!_0x4339d9) {
            return undefined;
          }
          return this._evaluator.resolveAliasDeclaration(_0x4339d9, true);
        }
        _tryGetResolvedModuleNames(_0x3a35d1, _0x345f45) {
          var _0xeb9dcb;
          if (_0x3a35d1.node.nodeType !== 25) {
            return undefined;
          }
          if (_0x3a35d1.node.d.isWildcardImport) {
            return undefined;
          }
          let _0x3cc3e7 = this._cachedResolvedModuleNames.get(_0x3a35d1);
          if (_0x3cc3e7) {
            return _0x3cc3e7;
          }
          _0x3cc3e7 = new Map();
          for (const _0x48b28d of _0x3a35d1.node.d.imports) {
            const _0x3d3f29 = this._tryGetResolveAliasDeclaration(_0x48b28d.d.alias ?? _0x48b28d.d.name);
            if (!_0x3d3f29 || _0x3d3f29.uri.isEmpty() || _0x1512b9.isAliasDeclaration(_0x3d3f29)) {
              continue;
            }
            const _0x13ae98 = this._importResolver.getModuleNameForImport(_0x3d3f29.uri, _0x345f45);
            if (!_0x13ae98.moduleName) {
              continue;
            }
            _0x3cc3e7.set(_0x13ae98.moduleName, ((_0xeb9dcb = _0x48b28d.d.alias) === null || _0xeb9dcb === undefined ? undefined : _0xeb9dcb.d.value) ?? _0x48b28d.d.name.d.value);
          }
          this._cachedResolvedModuleNames.set(_0x3a35d1, _0x3cc3e7);
          return _0x3cc3e7;
        }
        _tryGetSymbolForImportName(_0x35e8bf) {
          const _0x389e51 = this._program.getSourceFileInfo(_0x35e8bf.moduleFileUri);
          if (!_0x389e51) {
            return undefined;
          }
          this._program.getParseResults(_0x35e8bf.moduleFileUri);
          const _0x1cc735 = _0x389e51.sourceFile.getModuleSymbolTable();
          if (!_0x1cc735) {
            return undefined;
          }
          const _0x2e76ea = _0x35e8bf.alias ?? _0x35e8bf.name;
          if (!_0x2e76ea) {
            return undefined;
          }
          return _0x1cc735.get(_0x2e76ea);
        }
        _getMatchingImportStatements(_0x56e4c1, _0x16b976, _0x4fc04b) {
          const _0x461b5e = this._configOptions.findExecEnvironment(_0x4fc04b);
          return _0x16b976.orderedImports.filter(_0x5b4119 => {
            if (_0x5b4119.moduleName === _0x56e4c1[0]) {
              return true;
            }
            const _0x596b0e = this._tryGetResolvedModuleNames(_0x5b4119, _0x461b5e);
            if (!_0x596b0e || _0x596b0e.size === 0) {
              return false;
            }
            const _0x2f57ea = _0x596b0e.get(_0x56e4c1[0]);
            return _0x56e4c1[1].some(_0x3fe872 => {
              const _0x53140e = _0x3fe872.alias ?? _0x3fe872.name;
              return _0x53140e === _0x2f57ea;
            });
          });
        }
        _addOrUpdateImport(_0x302821, _0x2b42af, _0x431ed5, _0x249a4f, _0x250481) {
          if (_0x249a4f.length === 0) {
            return;
          }
          const _0x502c2b = _0x302821[0];
          const _0x5c3ee7 = _0x302821[1].length === 0 ? undefined : _0x302821[1][0].nameForImportFrom;
          const _0x21a378 = _0x302821[1].length === 0 ? 2 : _0x58b4b8.getImportGroupFromModuleNameAndType(_0x302821[1][0].module);
          _0x250481.addOrUpdateImport(_0x431ed5, _0x2b42af, {
            name: _0x502c2b,
            nameForImportFrom: _0x5c3ee7
          }, _0x21a378, _0x249a4f);
        }
        _getImportInfo(_0x22fc67, _0x26345c) {
          var _0x4f5708;
          var _0x4d4312;
          if (_0x1512b9.isAliasDeclaration(_0x22fc67)) {
            if (!_0x22fc67.node) {
              return {
                fileUri: _0x22fc67.uri,
                nameInfo: {}
              };
            }
            if (_0x22fc67.node.nodeType === 24) {
              const _0x19513d = this._evaluator.getDeclInfoForNameNode(_0x22fc67.node.d.module.d.nameParts[_0x22fc67.node.d.module.d.nameParts.length - 1])?.decls;
              if (!_0x19513d || _0x19513d.length === 0) {
                return undefined;
              }
              return {
                fileUri: _0x19513d[0].uri,
                nameInfo: {
                  alias: _0x22fc67.usesLocalName ? (_0x4f5708 = _0x22fc67.node.d.alias) === null || _0x4f5708 === undefined ? undefined : _0x4f5708.d.value : undefined
                }
              };
            }
            if (_0x22fc67.node.nodeType === 26) {
              let _0x31ce61 = _0x22fc67.uri;
              if (!_0x31ce61 || _0x31ce61.isEmpty()) {
                if (_0x22fc67.submoduleFallback) {
                  _0x31ce61 = _0x22fc67.submoduleFallback.uri.getDirectory();
                }
              }
              if (!_0x31ce61 || _0x31ce61.isEmpty()) {
                return undefined;
              }
              if (_0x26345c && _0x31ce61.equals(_0x26345c) && !_0x22fc67.usesLocalName && !_0x22fc67.submoduleFallback) {
                return undefined;
              }
              return {
                fileUri: _0x31ce61,
                nameInfo: {
                  name: _0x22fc67.symbolName,
                  alias: _0x22fc67.usesLocalName ? (_0x4d4312 = _0x22fc67.node.d.alias) === null || _0x4d4312 === undefined ? undefined : _0x4d4312.d.value : undefined
                }
              };
            }
            if (_0x22fc67.node.nodeType === 25) {
              return {
                fileUri: _0x22fc67.uri,
                nameInfo: {
                  name: _0x22fc67.symbolName
                }
              };
            }
          }
          if (_0x1512b9.isVariableDeclaration(_0x22fc67) || _0x1512b9.isFunctionDeclaration(_0x22fc67) || _0x1512b9.isClassDeclaration(_0x22fc67) || _0x1512b9.isSpecialBuiltInClassDeclaration(_0x22fc67)) {
            const _0x511644 = _0x5132d8.getNameFromDeclaration(_0x22fc67);
            if (!_0x511644) {
              return undefined;
            }
            if (_0x26345c && _0x22fc67.uri.equals(_0x26345c)) {
              return undefined;
            }
            return {
              fileUri: _0x22fc67.uri,
              nameInfo: {
                name: _0x511644
              }
            };
          }
          return undefined;
        }
        _areSame(_0x608989, _0x4b5086) {
          return _0x608989.alias === _0x4b5086.alias && _0x608989.name === _0x4b5086.name && _0x608989.module.importType === _0x4b5086.module.importType && _0x608989.module.isLocalTypingsFile === _0x4b5086.module.isLocalTypingsFile && _0x608989.module.moduleName === _0x4b5086.module.moduleName;
        }
        _areImportInfoSame(_0x9b7aac, _0x24c6ea) {
          return _0x9b7aac === _0x24c6ea || _0x9b7aac.fileUri.equals(_0x24c6ea.fileUri) && _0x9b7aac.nameInfo.name === _0x24c6ea.nameInfo.name && _0x9b7aac.nameInfo.alias === _0x24c6ea.nameInfo.alias;
        }
      }
      exports.ImportAdder = _0x37ed6d;
      class _0x21e5fe extends _0x3cc9d6.ParseTreeWalker {
        constructor(_0xb398d1, _0x21ad0a, _0x30de8f, _0x2c36ea, _0x1ae0f8) {
          super();
          this._evaluator = _0xb398d1;
          this._root = _0x21ad0a;
          this._ranges = _0x30de8f;
          this._options = _0x2c36ea;
          this._token = _0x1ae0f8;
          this.declsForSymbols = new Map();
          this.containsUnreferenceableSymbols = false;
          this._fileUri = _0x565ec3.getFileInfo(this._root).fileUri;
        }
        collect(_0x21ad9f) {
          if (this._ranges.length === 0) {
            return;
          }
          const _0x308d4f = this._ranges.length === 1 ? this._ranges[0].start : Math.min(...this._ranges.map(_0x734611 => _0x734611.start));
          const _0x14692a = this._ranges.length === 1 ? _0x16a81a.TextRange.getEnd(this._ranges[0]) : Math.max(...this._ranges.map(_0x432ff8 => _0x16a81a.TextRange.getEnd(_0x432ff8)));
          const _0x1cd47a = _0x16a81a.TextRange.fromBounds(_0x308d4f, _0x14692a);
          let _0x3ec3b6 = _0x55804c.findNodeByOffset(_0x21ad9f, _0x1cd47a.start);
          if (!_0x3ec3b6) {
            this.walk(_0x21ad9f);
            return;
          }
          while (!_0x16a81a.TextRange.containsRange(_0x3ec3b6, _0x1cd47a)) {
            _0x3ec3b6 = _0x3ec3b6.parent;
            if (!_0x3ec3b6) {
              this.walk(_0x21ad9f);
              return;
            }
          }
          this.walk(_0x3ec3b6);
        }
        walk(_0xda41f9) {
          if (!this._ranges.some(_0x233ccd => _0x16a81a.TextRange.overlapsRange(_0x233ccd, _0xda41f9))) {
            return;
          }
          super.walk(_0xda41f9);
        }
        visitModuleName(_0x23b050) {
          return false;
        }
        visitName(_0x1e09ce) {
          if (!this._ranges.some(_0x5454f5 => _0x16a81a.TextRange.containsRange(_0x5454f5, _0x1e09ce))) {
            return false;
          }
          _0x4da78e.throwIfCancellationRequested(this._token);
          if (!_0x55804c.isLastNameOfDottedName(_0x1e09ce)) {
            return false;
          }
          const _0x38988e = this._evaluator.getType(_0x1e09ce);
          if (_0x38988e?.category === 9) {
            return false;
          }
          if (this._options.pep604 && _0x38988e && (_0x1b54a8.isUnion(_0x38988e) || _0x1b54a8.isOptional(_0x38988e))) {
            return false;
          }
          const _0x3ce009 = _0x55804c.getDottedName(_0x55804c.getDottedNameWithGivenNodeAsLastName(_0x1e09ce));
          if (!_0x3ce009 || _0x3ce009.length === 0) {
            return false;
          }
          const _0x11d318 = this._getNameToCreateImportFor(_0x3ce009);
          if (!_0x11d318) {
            return false;
          }
          const _0x5cdfcc = this._getDeclarationsInModuleFirst(_0x11d318);
          if (!_0x5cdfcc || _0x5cdfcc.length === 0) {
            return false;
          }
          if (_0x3ce009.length === 1) {
            this._handleName(_0x11d318, _0x5cdfcc);
            return false;
          }
          this._addDeclsForSymbols(_0x5cdfcc, _0x11d318, _0x3ce009);
          return false;
        }
        _getNameToCreateImportFor(_0x47ef8a) {
          var _0x1e9a39;
          if (_0x47ef8a.length === 1) {
            return _0x47ef8a[0];
          }
          if (this._options.usageKind === 'move') {
            return _0x47ef8a[0];
          }
          if (this._options.usageKind === 'typeGeneration') {
            let _0x10b201 = undefined;
            for (let _0x38896c = 0; _0x38896c < _0x47ef8a.length; _0x38896c++) {
              const _0x467f11 = _0x47ef8a[_0x38896c];
              const _0x31f355 = (_0x1e9a39 = this._evaluator.getDeclInfoForNameNode(_0x467f11)?.decls) === null || _0x1e9a39 === undefined ? undefined : _0x1e9a39.map(_0x46e6a6 => this._evaluator.resolveAliasDeclaration(_0x46e6a6, true, {
                allowExternallyHiddenAccess: true,
                skipFileNeededCheck: true
              })).filter(_0x4a7037.isDefined);
              if (!_0x31f355) {
                return _0x10b201;
              }
              if (_0x31f355.some(_0x37ecdb => !this._isTopLevelDeclaration(_0x37ecdb))) {
                return _0x10b201;
              }
              _0x10b201 = _0x467f11;
            }
            return _0x10b201;
          }
          _0x114248.assertNever(this._options.usageKind, 'must handle new kind');
        }
        _addDeclsForSymbols(_0x587105, _0x44e785, _0x578df6) {
          const _0x106d2a = _0x578df6.findIndex(_0x346e76 => _0x346e76 === _0x44e785) + 1;
          for (const _0x31454c of _0x587105) {
            if (!_0x1512b9.isAliasDeclaration(_0x31454c) || _0x31454c.node.nodeType !== 24) {
              this._handleName(_0x44e785, [_0x31454c]);
              continue;
            }
            if (_0x31454c.usesLocalName) {
              this._handleName(_0x44e785, [_0x31454c]);
              continue;
            }
            if (_0x106d2a > 0) {
              this._handleImplicitImports(_0x31454c, _0x578df6, _0x106d2a);
            }
          }
        }
        _getDeclarationsInModuleFirst(_0x5020fd) {
          const _0x225977 = this._getDeclarationsInModule(_0x5020fd);
          if (_0x225977 && _0x225977.length > 0) {
            return _0x225977;
          }
          const _0x314f2c = this._evaluator.getDeclInfoForNameNode(_0x5020fd)?.decls;
          if (_0x314f2c && _0x314f2c.length > 0) {
            return _0x314f2c;
          }
          return undefined;
        }
        _getDeclarationsInModule(_0x447bcf) {
          var _0x119b17;
          if ((_0x119b17 = this._evaluator.getDeclInfoForNameNode(_0x447bcf)?.decls) === null || _0x119b17 === undefined) {
            return undefined;
          } else {
            return _0x119b17.filter(_0x1be3b3 => _0x5132d8.isDefinedInFile(_0x1be3b3, this._fileUri));
          }
        }
        _handleImplicitImports(_0x3689b7, _0x5a36fa, _0x29a332) {
          if (_0x5a36fa.length === _0x29a332) {
            return;
          }
          if (!_0x3689b7.implicitImports) {
            this._handleName(_0x5a36fa[_0x29a332 - 1], [_0x5132d8.synthesizeAliasDeclaration(_0x3689b7.uri)]);
            return;
          }
          const _0x3e78a3 = _0x3689b7.implicitImports.get(_0x5a36fa[_0x29a332].d.value);
          if (!_0x3e78a3) {
            this._handleName(_0x5a36fa[_0x29a332 - 1], [_0x5132d8.synthesizeAliasDeclaration(_0x3689b7.uri)]);
            return;
          }
          this._handleImplicitImports(_0x3e78a3, _0x5a36fa, _0x29a332 + 1);
        }
        _handleName(_0xc12f39, _0x186f6f) {
          for (const _0x3b1fa1 of _0x186f6f) {
            if (_0x3b1fa1.node && this._ranges.some(_0xd12041 => _0x16a81a.TextRange.containsRange(_0xd12041, _0x3b1fa1.node))) {
              continue;
            }
            const _0x429ed9 = this._isTopLevelDeclaration(_0x3b1fa1);
            if (!_0x429ed9) {
              this.containsUnreferenceableSymbols = true;
              continue;
            }
            this._addName(_0x3b1fa1, _0xc12f39);
          }
        }
        _isTopLevelDeclaration(_0x33d103) {
          if (_0x1512b9.isParamDeclaration(_0x33d103)) {
            return false;
          }
          if (_0x1512b9.isVariableDeclaration(_0x33d103) || _0x1512b9.isFunctionDeclaration(_0x33d103) || _0x1512b9.isClassDeclaration(_0x33d103)) {
            const _0x43c027 = _0x5132d8.getNameNodeForDeclaration(_0x33d103);
            if (!_0x43c027) {
              return false;
            }
            const _0x296462 = _0x2714d3.getScopeForNode(_0x43c027);
            if (!_0x296462) {
              return false;
            }
            const _0x20c699 = _0x296462.lookUpSymbolRecursive(_0x43c027.d.value);
            if (!_0x20c699 || _0x20c699.scope.type !== 4) {
              return false;
            }
          }
          return true;
        }
        _addName(_0x2aef32, _0x11aa96) {
          _0x525f56.getOrAdd(this.declsForSymbols, _0x2aef32, () => []).push(_0x11aa96);
        }
      }
      function _0x242781(_0x439118) {
        return _0x439118 && _0x439118.parseTree && _0x439118.importedModules && _0x439118.futureImports && _0x439118.containsWildcardImport !== undefined && _0x439118.typingSymbolAliases;
      }
    },
    95604: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.IndexSerializer = undefined;
      exports.getLocalIndicesCachePath = _0x4ac303;
      exports.getGlobalIndicesCachePath = _0x212edf;
      exports.readPersistedIndices = _0xe163d5;
      exports.writePersistedIndices = _0x3bfddd;
      const _0x38c66e = require(58147);
      const _0x5aeebf = __importStar(require(48281));
      const _0x4310a7 = require(27113);
      const _0x51bd79 = require(16835);
      const _0x3a412f = require(49137);
      const _0x37738c = require(69482);
      const _0x3ae6c6 = require(77001);
      function _0x4ac303(_0x1325d1, _0x226ff7, _0x45dc3d) {
        return _0x44740c(_0x3a412f.getSpecialFolder(_0x1325d1, _0x3a412f.SpecialFoldersKind.LocalIndices).combinePaths(_0x37738c.hashString(_0x226ff7.toString())), _0x45dc3d);
      }
      function _0x212edf(_0x4438e6, _0x277ab2) {
        return _0x44740c(_0x3a412f.getSpecialFolder(_0x4438e6, _0x3a412f.SpecialFoldersKind.GlobalIndices), _0x277ab2);
      }
      function _0x44740c(_0x109bb0, _0x1eb642) {
        return _0x109bb0.combinePaths(_0x1eb642 + '.json');
      }
      function _0xe163d5(_0x311270, _0x168cd2, _0x5147e9, _0x3688df) {
        if (!_0x311270.existsSync(_0x5147e9)) {
          if (_0x3688df === null || _0x3688df === undefined) {
            undefined;
          } else {
            _0x3688df.info(`No persisted indices found at ${_0x5147e9}`);
          }
          return undefined;
        }
        let _0x517ac9;
        try {
          _0x517ac9 = _0x311270.readFileSync(_0x5147e9, 'utf8');
          const _0x247486 = JSON.parse(_0x517ac9);
          const _0x1e20e2 = new _0x3ae6c6.UriMap();
          _0x247486.forEach(_0x2924cf => {
            const _0x26ce47 = _0x2924cf[0];
            const _0x55a4a4 = _0x2d30b5(_0x26ce47, _0x168cd2);
            _0x1e20e2.set(_0x55a4a4, {
              uri: _0x55a4a4,
              privateOrProtected: _0x2924cf[1][0],
              symbols: _0x2924cf[1][1].map(_0x2ce2c4 => _0x4faa8e(_0x2ce2c4, _0x168cd2))
            });
          });
          return _0x1e20e2;
        } catch (_0x5a3f9a) {
          if (_0x3688df === null || _0x3688df === undefined) {
            undefined;
          } else {
            _0x3688df.error(`Failed to read ${_0x5147e9}. ${_0x5aeebf.getErrorString(_0x5a3f9a)}`);
          }
          return undefined;
        }
        function _0x4faa8e(_0x3c6e20, _0x4b0273) {
          const _0x1e2f3f = _0x3c6e20[3];
          const _0x196d0e = _0x1e2f3f ? _0x2d30b5(_0x1e2f3f[1], _0x4b0273) : undefined;
          return {
            name: _0x3c6e20[0],
            visibilityFlags: _0x3c6e20[1],
            kind: _0x3c6e20[2],
            itemKind: _0x51bd79.convertSymbolKindToCompletionItemKind(_0x3c6e20[2]),
            alias: _0x1e2f3f ? {
              originalName: _0x1e2f3f[0],
              moduleUri: _0x196d0e,
              kind: _0x1e2f3f[2],
              itemKind: _0x51bd79.convertSymbolKindToCompletionItemKind(_0x1e2f3f[2])
            } : undefined,
            range: undefined,
            selectionRange: undefined,
            children: undefined
          };
        }
      }
      function _0x519930(_0xa24db0, _0x13b6e3) {
        if (_0x13b6e3) {
          return _0x13b6e3.getRelativePathComponents(_0xa24db0).join('/');
        } else {
          return _0xa24db0.toJsonObj();
        }
      }
      function _0x2d30b5(_0x374f97, _0xfdf410) {
        if (_0xfdf410) {
          return _0xfdf410.combinePaths(_0x374f97);
        }
        return _0x4310a7.Uri.fromJsonObj(_0x374f97);
      }
      function _0x3bfddd(_0x1fe24f, _0x36a565, _0x1579d1, _0x2acfb3, _0x4cc3b9) {
        const _0x3c4523 = [];
        for (const _0x44d6cd of [..._0x2acfb3.keys()].sort()) {
          const _0x2ef430 = _0x2acfb3.get(_0x44d6cd);
          const _0x5e8ddf = _0x2ef430.symbols;
          if (_0x36a565) {
            _0x5aeebf.assert(!_0x5e8ddf.some(_0x1594c2 => _0x1594c2.alias && !_0x1594c2.alias.moduleUri.startsWith(_0x36a565)));
          }
          _0x3c4523.push([_0x519930(_0x44d6cd, _0x36a565), [_0x2ef430.privateOrProtected, _0x5e8ddf.map(_0xd8116e => _0x594779(_0xd8116e, _0x36a565))]]);
        }
        const _0x23630f = JSON.stringify(_0x3c4523);
        try {
          _0x1fe24f.writeFileSync(_0x1579d1, _0x23630f, 'utf8');
          return true;
        } catch (_0x1dfa1f) {
          if (_0x4cc3b9 === null || _0x4cc3b9 === undefined) {
            undefined;
          } else {
            _0x4cc3b9.error(`Failed to create ${_0x1579d1}. ${_0x5aeebf.getErrorString(_0x1dfa1f)}`);
          }
          return false;
        }
        function _0x594779(_0x3261dd, _0x30753c) {
          const _0x5b1049 = _0x3261dd.alias;
          _0x5aeebf.assert(!_0x5b1049 || !_0x30753c || _0x5b1049.moduleUri.startsWith(_0x30753c));
          return [_0x3261dd.name, _0x3261dd.visibilityFlags, _0x3261dd.kind, _0x5b1049 ? [_0x5b1049.originalName, _0x519930(_0x5b1049.moduleUri, _0x30753c), _0x5b1049.kind] : undefined];
        }
      }
      class _0x3497a7 {
        constructor(_0x3665fc, _0x566edc, _0x315e04) {
          this._importResolver = _0x3665fc;
          this._regenerateStdLibIndices = _0x566edc;
          this._localStorageUri = _0x315e04;
        }
        tryLoadCachedStubs(_0x21701d, _0x7a0096) {
          const _0x401f7f = new Map();
          for (const _0x35f436 of _0x21701d.values()) {
            const _0x4087d2 = _0x38c66e.createMapFromItems(_0x35f436.filter(_0xdf0651 => this._isUsable(_0xdf0651) && !!_0xdf0651.packageName && !_0x7a0096.has(_0xdf0651.uri)), _0x355835 => _0x355835.packageName);
            for (const [_0x4fee0f, _0x29e02f] of _0x4087d2) {
              const _0xd45e27 = this._tryGetCachePath(_0x29e02f);
              if (!_0xd45e27) {
                continue;
              }
              const _0x4eea71 = _0xe163d5(this._fs, undefined, _0xd45e27);
              if (_0x4eea71) {
                _0x401f7f.set(_0x4fee0f, _0x4eea71);
                _0x29e02f.forEach(_0x210b96 => {
                  const _0x3be2e7 = _0x4eea71.get(_0x210b96.uri);
                  if (_0x3be2e7) {
                    _0x7a0096.set(_0x210b96.uri, _0x3be2e7);
                  }
                });
              }
            }
          }
          return _0x401f7f;
        }
        trySaveCachedStubs(_0x245b02, _0x2bb023, _0x17c1e8) {
          for (const _0x1eba61 of _0x245b02.values()) {
            const _0x52faf5 = _0x38c66e.createMapFromItems(_0x1eba61.filter(_0x2c9075 => {
              var _0x2cde3d;
              return this._isUsable(_0x2c9075) && !!_0x2c9075.packageName && _0x17c1e8.has(_0x2c9075.uri) && !((_0x2cde3d = _0x2bb023.get(_0x2c9075.packageName)) === null || _0x2cde3d === undefined ? undefined : _0x2cde3d.get(_0x2c9075.uri));
            }), _0x2c936f => _0x2c936f.packageName);
            for (const [_0x87e6dd, _0x459afa] of _0x52faf5) {
              const _0xa838c2 = _0x2bb023.get(_0x87e6dd) ?? new _0x3ae6c6.UriMap();
              _0x459afa.forEach(_0x5c035b => _0xa838c2.set(_0x5c035b.uri, _0x17c1e8.get(_0x5c035b.uri)));
              const _0x27cdc6 = this._tryGetCachePath(_0x459afa);
              if (!_0x27cdc6) {
                continue;
              }
              const _0x335925 = _0x27cdc6.getDirectory();
              try {
                this._fs.mkdirSync(_0x335925, {
                  recursive: true
                });
              } catch {
                return;
              }
              if (!_0x3bfddd(this._fs, undefined, _0x27cdc6, _0xa838c2)) {
                return;
              }
            }
          }
        }
        get _fs() {
          return this._importResolver.fileSystem;
        }
        _isUsable(_0xf3a728) {
          const _0x237389 = this._regenerateStdLibIndices || !_0xf3a728.isStdLib;
          if (this._localStorageUri) {
            return _0x237389;
          } else {
            return _0xf3a728.isTypeshedStub || _0xf3a728.isBundledStub;
          }
        }
        _tryGetCachePath(_0x4b83a5) {
          if (_0x4b83a5.length === 0) {
            return undefined;
          }
          const _0xcc9ce3 = _0x4b83a5[0];
          if (_0xcc9ce3.isTypeshedStub || _0xcc9ce3.isBundledStub) {
            return _0x212edf(this._fs, _0xcc9ce3.packageName);
          }
          return _0x4ac303(this._fs, this._localStorageUri, _0xcc9ce3.packageName);
        }
      }
      exports.IndexSerializer = _0x3497a7;
    },
    7587: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ModuleFilesExecEnvMap = exports.IndexingResultMap = exports.BackgroundIndexRunner = exports.Indexer = undefined;
      exports.verifyPersistedIndices = _0x2ec1b5;
      exports.createImportResolverWithPartialStubs = _0x13453c;
      exports.processIndexingRequest = _0x5cceb7;
      const _0x414891 = require(56911);
      const _0x56b101 = require(28167);
      const _0x4a2a8a = require(79253);
      const _0x5e7197 = __importStar(require(16259));
      const _0x1d5cb4 = require(12097);
      const _0x699d69 = require(94953);
      const _0x1ebe38 = require(91426);
      const _0x93137a = require(58147);
      const _0x23b8e0 = require(12522);
      const _0x588620 = require(25075);
      const _0x3de6c7 = __importStar(require(48281));
      const _0x11c8fd = require(51507);
      const _0x4a7454 = require(34487);
      const _0x27e9ff = require(51862);
      const _0x54d8ea = require(71745);
      const _0x182643 = __importStar(require(89740));
      const _0x2a2201 = require(27113);
      const _0x51e866 = require(5884);
      const _0x4be509 = require(85417);
      const _0x115b9c = require(54700);
      const _0x1a192d = require(16589);
      const _0x5f15d4 = require(94818);
      const _0x51817f = require(30048);
      const _0xb1cec9 = require(69482);
      const _0x4012ea = require(77001);
      const _0x247706 = require(54802);
      const _0x4a916e = require(22205);
      const _0x312026 = require(31753);
      const _0x4c7cd3 = require(89750);
      const _0x3a276c = require(72412);
      const _0x20e453 = require(95604);
      const _0x1077df = require(77907);
      const _0x48c184 = require(74899);
      function _0x5aa66f(_0x2d0796, _0x3b37ea) {
        let _0x1b68fc = 0;
        if (_0x2d0796 === _0x3b37ea) {
          return -1;
        }
        while (_0x2d0796[_0x1b68fc] === _0x3b37ea[_0x1b68fc]) {
          _0x1b68fc++;
        }
        return _0x1b68fc;
      }
      function _0x2ec1b5(_0x56024a, _0x56b6c6, _0x82b76a, _0x1f3484) {
        const _0xe59e16 = _0x20e453.readPersistedIndices(_0x56024a, _0x56b6c6, _0x82b76a);
        _0x3de6c7.assert(_0x1f3484.size === _0xe59e16.size);
        for (const _0x50c114 of _0x1f3484.keys()) {
          const _0x33215b = _0x1f3484.get(_0x50c114);
          const _0x3bf0d4 = _0xe59e16.get(_0x50c114);
          const _0x397a5d = _0x4be509.serialize(_0x33215b);
          const _0x92245d = _0x4be509.serialize(_0x3bf0d4);
          if (_0x397a5d !== _0x92245d) {
            _0x3de6c7.assert(`Indice for ${_0x50c114} is different at position ${_0x5aa66f(_0x397a5d, _0x92245d)}.`);
          }
        }
      }
      function _0x13453c(_0x49e731, _0x44d577, _0x35fa20) {
        const _0x4d84a2 = _0x4c7cd3.createPylanceImportResolver(_0x49e731, _0x44d577, _0x35fa20);
        _0x4d84a2.ensurePartialStubPackages(_0x44d577.findExecEnvironment(_0x44d577.projectRoot));
        return _0x4d84a2;
      }
      class _0x2884cb {
        constructor(_0x3113ca, _0x21f933, _0x2af013, _0x3c1e1a, _0x352a28) {
          this._importResolver = _0x3113ca;
          this._indexOptions = _0x2af013;
          this._serviceProvider = _0x3c1e1a;
          this._logTracker = _0x352a28;
          this._configOptions = _0x4be509.clone(_0x21f933);
          this._configOptions.indexGenerationMode = true;
          this._configOptions.useLibraryCodeForTypes = true;
        }
        static requestIndexingFromBackgroundThread(_0x20d49f, _0x220c5b, _0x136c41, _0x55047d, _0x3595b0, _0x5b2f3e, _0x26ee80, _0x456e55) {
          var _0xc4fccd;
          const _0xc6a2f9 = _0x136c41.get(_0x51817f.PylanceServiceKeys.globalIndices);
          if (!_0x3595b0.indexing || _0x26ee80 !== 0) {
            const _0x1d0cba = new _0x27e9ff.LogTracker(_0x136c41.console(), 'IDX(FG)');
            const _0x22f1f8 = new _0x2884cb(_0x5b2f3e, _0x3595b0, _0x55047d, _0x136c41, _0x1d0cba);
            _0x1d0cba.log(`index libraries ${_0x3595b0.projectRoot} (${_0x20d49f})`, _0x3932e9 => {
              const _0x5a8f05 = _0x1d0cba.log('read stdlib indices', _0x24bf2c => {
                return _0x22f1f8.getStdLibIndices();
              });
              _0x3932e9.add(_0x5a8f05 ? 'succeed' : 'failed');
              if (_0x5a8f05) {
                _0xc6a2f9.reset(_0x220c5b);
                _0x5da18a(_0x220c5b, _0x3595b0, _0x5a8f05, _0xc6a2f9);
              }
            });
            return;
          }
          if ((_0xc4fccd = _0x2884cb._workerKillSwitchSource) === null || _0xc4fccd === undefined) {
            undefined;
          } else {
            _0xc4fccd.cancel();
          }
          _0x2884cb._workerKillSwitchSource = new _0x414891.CancellationTokenSource();
          _0x2884cb.cancelIndexingRequest(_0x220c5b);
          const _0x2d7e42 = new _0x4a7454.FileBasedCancellationProvider('indexer');
          const _0x34a67f = _0x2d7e42.createCancellationTokenSource();
          _0x2884cb._cancellationSourcePerWorkspace.set(_0x220c5b, _0x34a67f);
          const _0xc9c610 = _0x2884cb._getWorker(_0x20d49f, _0x136c41);
          const _0x559d4d = _0x2884cb._workerKillSwitchSource.token;
          _0x2884cb._lastRequest = _0x2884cb._lastRequest.then(() => _0x2884cb._processIndexingRequest(_0xc9c610, _0x20d49f, _0x220c5b, _0x5b2f3e.fileSystem, _0x136c41.console(), _0x55047d, _0x3595b0, _0xc6a2f9, _0x456e55, _0x34a67f, _0x559d4d));
        }
        static cancelIndexingRequest(_0x536143) {
          const _0xc3df45 = _0x2884cb._cancellationSourcePerWorkspace.get(_0x536143);
          if (!_0xc3df45) {
            return false;
          }
          _0xc3df45.cancel();
          return true;
        }
        scanPackages(_0x346e35, _0x8e3614) {
          _0x1ebe38.throwIfCancellationRequested(_0x8e3614);
          return this._logTracker.log(`scan packages ${this._configOptions.projectRoot}`, _0x1cc98a => {
            const _0x630d6f = this._logTracker.log('read stdlib indices', _0x880262 => {
              return this.getStdLibIndices();
            });
            const _0x15c1a6 = this._indexOptions.packageDepths.find(_0x5766d3 => !_0x5766d3[0]);
            const _0x306339 = _0x15c1a6 ? {
              maxDepth: _0x15c1a6[1],
              includeAllSymbols: _0x15c1a6[2]
            } : 1;
            const _0x3124e0 = new _0x312026.PackageScanner(this._configOptions, this._importResolver, _0x630d6f, true, _0x306339, new Map(this._indexOptions.packageDepths.filter(_0xbe85da => !!_0xbe85da[0]).map(_0x215cd8 => [_0x215cd8[0], {
              maxDepth: _0x215cd8[1],
              includeAllSymbols: _0x215cd8[2]
            }])), _0x346e35);
            _0x3124e0.scan(_0x8e3614);
            const _0x20fcc4 = _0x3124e0.getModuleFilesPerExecEnv();
            return {
              stdLibIndices: _0x630d6f,
              moduleFilesPerExecEnv: _0x20fcc4,
              fileCache: _0x3124e0.getFileCache()
            };
          });
        }
        indexPackages(_0x1e9e89, _0xfbe93f, _0x22d8f7, _0x5dd5ef) {
          _0x1ebe38.throwIfCancellationRequested(_0x5dd5ef);
          const _0x1a4d0b = new _0x20e453.IndexSerializer(this._importResolver, this._indexOptions.regenerateStdLibIndices, this._indexOptions.localStorageUri);
          return this._logTracker.log(`index packages ${this._configOptions.projectRoot}`, _0x2c0c8f => {
            const _0x3ca893 = new _0x4012ea.UriMap();
            const _0x5d1a66 = _0x1a4d0b.tryLoadCachedStubs(_0xfbe93f, _0x3ca893);
            const _0x48da0e = new _0x496705();
            const _0x3c79da = new _0x4a2a8a.Program(this._importResolver, this._configOptions, this._serviceProvider, this._logTracker);
            for (const [_0x4e62ac, _0x2e1e22] of _0xfbe93f) {
              this._logTracker.log(`index execution environment ${_0x4e62ac}`, _0x38be63 => {
                const _0x54d53a = this._configOptions.getExecutionEnvironments().find(_0x16eba3 => {
                  var _0x2efcd5;
                  if ((_0x2efcd5 = _0x16eba3.root) === null || _0x2efcd5 === undefined) {
                    return undefined;
                  } else {
                    return _0x2efcd5.equals(_0x4e62ac);
                  }
                });
                const _0x53d26e = _0x22d8f7.length <= 0 ? _0x2e1e22 : _0x2e1e22.filter(_0x2f8318 => !_0x22d8f7.some(_0xd6877f => _0x2f8318.uri.startsWith(_0xd6877f)));
                const _0x1cf320 = new _0x4012ea.UriMap();
                for (const _0x224fd1 of _0x53d26e) {
                  const _0x37501e = _0x3ca893.get(_0x224fd1.uri);
                  if (_0x37501e) {
                    _0x1cf320.set(_0x224fd1.uri, _0x37501e);
                  }
                }
                const _0x386829 = _0x53d26e.filter(_0x1929d6 => !_0x1cf320.get(_0x1929d6.uri));
                for (const _0x3971d7 of _0x386829) {
                  _0x3c79da.addTrackedFile(_0x3971d7.uri, true, _0x3971d7.pyTypedPackage);
                }
                this._indexProgram(_0x3c79da, _0x386829.map(_0x35d386 => ({
                  uri: _0x35d386.uri,
                  includeAllSymbols: _0x35d386.includeAllSymbols
                })), _0x1cf320, false, _0x5dd5ef);
                _0x287580(this._importResolver, _0x54d53a, _0x1cf320);
                for (const _0x3b28fb of _0x386829) {
                  const _0x2e0341 = _0x1cf320.get(_0x3b28fb.uri);
                  if (_0x2e0341) {
                    _0x3ca893.set(_0x3b28fb.uri, _0x2e0341);
                  }
                }
                const _0x4af9d8 = _0x1e9e89 === null || _0x1e9e89 === undefined ? undefined : _0x1e9e89.get(_0x4e62ac);
                if (_0x4af9d8) {
                  for (const [_0x5c960c, _0xdfcd4e] of _0x4af9d8) {
                    _0x1cf320.set(_0x5c960c, _0xdfcd4e);
                  }
                }
                _0x38be63.add(`found ${_0x4f582d(_0x1cf320)} in ${_0x1cf320.size} files`);
                _0x48da0e.set(_0x4e62ac, _0x1cf320);
              });
            }
            _0x1a4d0b.trySaveCachedStubs(_0xfbe93f, _0x5d1a66, _0x3ca893);
            _0x2c0c8f.add(`found ${_0x2a49c6(_0x48da0e)} in ${_0xfbe93f.size} exec envs`);
            return _0x48da0e;
          });
          function _0x2a49c6(_0x168ac9) {
            let _0x3ba544 = 0;
            for (const _0x1310e1 of _0x168ac9.values()) {
              _0x3ba544 += _0x4f582d(_0x1310e1);
            }
            return _0x3ba544;
          }
          function _0x4f582d(_0x5639ec) {
            let _0x38a0c3 = 0;
            for (const _0xb40bce of _0x5639ec.values()) {
              _0x38a0c3 += _0xb40bce.symbols.length;
            }
            return _0x38a0c3;
          }
        }
        getStdLibIndices() {
          if (this._indexOptions.regenerateStdLibIndices) {
            return undefined;
          }
          const _0x307961 = _0x5e7197.getTypeShedFallbackPath(this._importResolver.fileSystem);
          if (!_0x307961) {
            return undefined;
          }
          const _0x1ada86 = this._indexOptions.packageDepths.filter(_0x2a6ac7 => !!_0x2a6ac7[0] && _0x2a6ac7[1] === 0).map(_0x5c5ae3 => _0x5c5ae3[0]);
          const _0xe764a = _0x5e7197.getTypeshedSubdirectory(_0x307961, true);
          const _0x54ecf5 = 'stdlib.json';
          const _0x4075e6 = new _0x496705();
          const _0xa4162b = this._serviceProvider.tryGet(_0x51817f.PylanceServiceKeys.globalIndices);
          let _0x560407 = _0xa4162b === null || _0xa4162b === undefined ? undefined : _0xa4162b.getPersistLibrary(_0x54ecf5);
          for (const _0x4adae8 of this._configOptions.getExecutionEnvironments()) {
            const _0x567047 = this._importResolver.getTypeshedStdLibPath(_0x4adae8);
            if (_0x567047 !== _0xe764a) {
              continue;
            }
            if (!_0x560407) {
              const _0xf91504 = this._importResolver.fileSystem.getModulePath().combinePaths('bundled', 'indices', 'stdlib.json');
              _0x560407 = _0x20e453.readPersistedIndices(this._importResolver.fileSystem, _0xe764a, _0xf91504, this._serviceProvider.console());
              if (!_0x560407) {
                return undefined;
              }
              if (_0x1ada86.length > 0) {
                for (const _0x14ca60 of _0x560407.keys()) {
                  const _0x1b66fd = _0x560407.get(_0x14ca60);
                  const _0x189284 = this._importResolver.getModuleNameForImport(_0x1b66fd.uri, _0x4adae8);
                  if (_0x1ada86.some(_0x394e75 => _0x189284.moduleName.startsWith(_0x394e75))) {
                    _0x560407.delete(_0x14ca60);
                  }
                }
              }
              if (_0xa4162b === null || _0xa4162b === undefined) {
                undefined;
              } else {
                _0xa4162b.setPersistLibrary(_0x54ecf5, _0x560407);
              }
            }
            _0x4075e6.set(_0x4adae8.root ?? _0x2a2201.Uri.empty(), _0x560407);
          }
          return _0x4075e6;
        }
        generateStdLibIndices(_0x337d9e) {
          const _0x1ad48f = new _0x23b8e0.ConfigOptions(_0x2a2201.Uri.empty());
          _0x1ad48f.defaultPythonVersion = undefined;
          _0x1ad48f.defaultPythonPlatform = undefined;
          const _0x1b2d49 = this._logTracker.log(`index stdlib ${_0x1ad48f.projectRoot}`, _0x6110f4 => {
            const _0x5e0341 = this._logTracker.log('scan stdlib packages', _0xb756df => {
              const _0x1bcd77 = new _0x312026.PackageScanner(_0x1ad48f, this._importResolver, undefined, false, 1);
              _0x1bcd77.scan(_0x414891.CancellationToken.None);
              const _0x4dec5a = _0x1bcd77.getModuleFilesPerExecEnv().get(_0x1ad48f.projectRoot);
              _0xb756df.add(`found ${_0x4dec5a.length}`);
              return _0x4dec5a.map(_0x47007f => ({
                uri: _0x47007f.uri,
                includeAllSymbols: _0x47007f.includeAllSymbols
              }));
            });
            const _0x168f13 = new _0x4a2a8a.Program(this._importResolver, _0x1ad48f, this._serviceProvider, this._logTracker);
            _0x168f13.setTrackedFiles(_0x5e0341.map(_0x24e030 => _0x24e030.uri));
            const _0x157e6e = new _0x4012ea.UriMap();
            this._indexProgram(_0x168f13, _0x5e0341, _0x157e6e, true, _0x414891.CancellationToken.None);
            _0x287580(this._importResolver, _0x1ad48f.getExecutionEnvironments()[0], _0x157e6e);
            _0x6110f4.add(`found ${[..._0x157e6e.values()].reduce((_0x37bde6, _0x2d5699) => _0x37bde6 + _0x2d5699.symbols.length, 0)}`);
            const _0x5203fc = this._importResolver.getTypeshedStdLibPath(_0x1ad48f.getExecutionEnvironments()[0]);
            if (!_0x5203fc) {
              this._serviceProvider.console().error(`No stdlib path for ${_0x1ad48f.projectRoot}`);
              return false;
            }
            if (_0x20e453.writePersistedIndices(this._importResolver.fileSystem, _0x5203fc, _0x337d9e, _0x157e6e, this._serviceProvider.console())) {
              return _0x157e6e;
            } else {
              return undefined;
            }
          });
          if (!_0x1b2d49) {
            return false;
          }
          this._logTracker.log('verify stdlib indices', _0x6bd208 => {
            const _0x3d38d4 = this._importResolver.getTypeshedStdLibPath(_0x1ad48f.getExecutionEnvironments()[0]);
            _0x2ec1b5(this._importResolver.fileSystem, _0x3d38d4, _0x337d9e, _0x1b2d49);
          });
          return true;
        }
        static _getWorker(_0x26af1b, _0x5ce9bd) {
          var _0x155885;
          let _0xecd554 = _0x2884cb._currentWorker;
          if (_0xecd554 !== undefined) {
            return _0xecd554;
          }
          const _0x56f9e6 = _0x5ce9bd.console();
          const _0x10becc = {
            rootUri: ((_0x155885 = _0x51e866.getRootUri(_0x5ce9bd)) === null || _0x155885 === undefined ? undefined : _0x155885.toString()) ?? '',
            cancellationFolderName: _0x1ebe38.getCancellationFolderName(),
            serviceId: _0x26af1b,
            runner: 'indexer',
            workerIndex: 1,
            profilingInfo: _0x4be509.deepCopy(_0x5ce9bd.tryGet(_0x51817f.PylanceServiceKeys.profilingService)?.currentProfilingInfo)
          };
          _0xecd554 = new _0x4a916e.FilteringWorker(new _0x56b101.Worker(_0x1a192d.mainFilename, {
            workerData: _0x10becc
          }), _0x1b0a80 => !!_0x1b0a80.requestType);
          const _0x15da32 = new _0x3a276c.ForegroundFileRequestHandler(_0xecd554, _0x5ce9bd.fs());
          _0xecd554.on('message', _0x522273 => {
            switch (_0x522273.requestType) {
              case _0x576324.Log:
                {
                  const _0x264818 = _0x4be509.deserialize(_0x522273.data);
                  _0x588620.log(_0x56f9e6, _0x264818.level, _0x264818.message);
                  break;
                }
              case _0x576324.Telemetry:
                {
                  const _0x4db900 = _0x5ce9bd.get(_0x51817f.PylanceServiceKeys.telemetry);
                  _0x4db900.sendTelemetry(_0x4be509.deepRestore(_0x522273.data));
                  break;
                }
              default:
                _0x3de6c7.assertNever(_0x522273, 'can\'t reach here');
            }
          });
          _0xecd554.on('error', _0x195067 => {
            _0x56f9e6.error(`Error occurred on indexer thread: ${JSON.stringify(_0x195067)}`);
          });
          _0xecd554.on('exit', _0x19fa71 => {
            if (_0x19fa71 !== 0) {
              _0x3de6c7.fail(`worker stopped with exit code ${_0x19fa71}`);
            }
            _0x15da32.dispose();
            _0x2884cb._currentWorker = undefined;
          });
          _0x2884cb._currentWorker = _0xecd554;
          return _0xecd554;
        }
        static async _processIndexingRequest(_0x443e0c, _0x44d80f, _0x23495a, _0x50ad7b, _0x6dace3, _0x55de73, _0x28fac3, _0x5d5bfa, _0x63a120, _0x47e1e5, _0x49d910) {
          try {
            await _0x5cceb7(_0x443e0c, _0x44d80f, _0x23495a, _0x50ad7b, _0x55de73, _0x28fac3, _0x5d5bfa, _0x82e641, _0x63a120, _0x47e1e5.token);
          } catch (_0x4cd873) {
            if (_0x1ebe38.OperationCanceledException.is(_0x4cd873)) {
              _0x6dace3.log(`Indexer cancelled (${_0x23495a})`);
              return;
            }
            _0x6dace3.error(`Indexing Failed: ${_0x3de6c7.getErrorString(_0x4cd873)}`);
          } finally {
            if (!_0x49d910.isCancellationRequested) {
              _0x2884cb._currentWorker = undefined;
              await _0x82e641(_0x443e0c, _0x5f4107.Shutdown, undefined, _0x49d910);
            }
            _0x47e1e5.dispose();
            if (_0x2884cb._cancellationSourcePerWorkspace.get(_0x23495a) === _0x47e1e5) {
              _0x2884cb._cancellationSourcePerWorkspace.delete(_0x23495a);
            }
          }
        }
        _indexProgram(_0x59557b, _0x30c02d, _0x24fbf8, _0x53ac37, _0x30782c) {
          for (const _0xc9a57e of _0x30c02d) {
            const _0x1e1fa2 = this._getFileIndex(_0x59557b, _0xc9a57e.uri, _0xc9a57e.includeAllSymbols, _0x30782c);
            if (!_0x1e1fa2) {
              continue;
            }
            if (_0x53ac37 && !_0xc9a57e.includeAllSymbols && _0x1e1fa2.symbols.length === 0) {
              continue;
            }
            _0x24fbf8.set(_0xc9a57e.uri, _0x1e1fa2);
            _0x59557b.handleMemoryHighUsage();
          }
        }
        _getFileIndex(_0x4baa05, _0x2ec3ba, _0x490548, _0x1bfee4) {
          return this._logTracker.log(`indexing: ${_0x27e9ff.getPathForLogging(this._importResolver.fileSystem, _0x2ec3ba)}`, _0x29175f => {
            const _0x2dccda = _0x2ec3ba.fileNameWithoutExtensions;
            const _0x2330f6 = _0x1d5cb4.isPrivateOrProtectedName(_0x2dccda);
            if (_0x2330f6) {
              _0x29175f.add('skipped: private or protected file');
              return {
                uri: _0x2ec3ba,
                privateOrProtected: _0x2330f6,
                symbols: []
              };
            }
            const _0x1f0897 = _0x4baa05.getSourceFileInfo(_0x2ec3ba);
            if (!_0x1f0897) {
              _0x29175f.add('skipped: file not found');
              return undefined;
            }
            const _0x2f24c3 = _0x1f0897.sourceFile.getFileContent() ?? '';
            if (!_0x490548 && !_0x1f0897.sourceFile.isStubFile() && !_0x1f0897.sourceFile.isThirdPartyPyTypedPresent()) {
              if (_0x2f24c3.indexOf('__all__') < 0) {
                _0x29175f.add('skipped: no \'__all__\' defined');
                return {
                  uri: _0x2ec3ba,
                  privateOrProtected: false,
                  symbols: []
                };
              }
            }
            const _0x1cf978 = _0x4baa05.getParseResults(_0x2ec3ba);
            if (!_0x1cf978) {
              _0x29175f.add('skipped: no parse result');
              return undefined;
            }
            const _0x133abf = _0x48c184.SymbolIndexer.indexSymbols(_0x1cf978, {
              indexingForAutoImportMode: true,
              includeAllSymbols: _0x490548
            }, _0x1bfee4);
            _0x29175f.add(`found ${_0x133abf.length}`);
            return {
              uri: _0x2ec3ba,
              privateOrProtected: _0x2330f6,
              symbols: _0x133abf
            };
          });
        }
      }
      exports.Indexer = _0x2884cb;
      _0x2884cb._lastRequest = Promise.resolve();
      _0x2884cb._cancellationSourcePerWorkspace = new Map();
      const _0x4231c7 = 20000;
      class _0x499f5d extends _0x699d69.BackgroundThreadBase {
        constructor(_0x342699) {
          _0x342699.add(_0x51817f.PylanceServiceKeys.profilingService, new _0x1077df.ProfilingService(_0x342699, _0x433c58()));
          _0x342699.add(_0x54d8ea.ServiceKeys.sourceFileFactory, _0x247706.DefaultPylanceSourceFileFactory);
          super(_0x56b101.workerData, _0x342699);
          const _0x1d8c0c = _0x56b101.workerData;
          const _0x2fdb47 = _0x1d8c0c.serviceId;
          this.log(_0x588620.LogLevel.Info, `Indexer background runner(${_0x56b101.threadId}) root directory: ${_0x1d8c0c.rootUri} (${_0x2fdb47})`);
          this._telemetry = {
            sendTelemetry(_0x45d7ae) {
              _0x3cbd49(_0x56b101.parentPort, _0x576324.Telemetry, _0x45d7ae);
            },
            addPropertyToNextEvent(_0xa080a2, _0x337a9d, _0x58a6f3) {}
          };
          this._profilingInfo = _0x4be509.deepRestore(_0x1d8c0c.profilingInfo);
        }
        start() {
          this.log(_0x588620.LogLevel.Info, `Indexing(${_0x56b101.threadId}) started`);
          const _0x139335 = this.getConsole();
          const _0x4365d6 = this.getServiceProvider();
          const _0x1a2ebb = this._getProfilingWaiter(_0x4365d6);
          if (_0x56b101.parentPort === null || _0x56b101.parentPort === undefined) {
            undefined;
          } else {
            _0x56b101.parentPort.on('message', _0x796019 => {
              switch (_0x796019.requestType) {
                case _0x5f4107.Scan:
                  {
                    _0x699d69.run(() => {
                      const _0x569091 = _0x4be509.deepRestore(_0x796019.data);
                      const _0x59eee8 = _0x4a7454.getCancellationTokenFromId(_0x569091.cancellationId);
                      _0x1ebe38.throwIfCancellationRequested(_0x59eee8);
                      const _0x10014c = _0x569091.configOptions;
                      const _0x4b3250 = new _0x5f15d4.PylanceFullAccessHost(this.getServiceProvider(), _0x569091.hostCache);
                      const _0x6c4257 = _0x13453c(_0x4365d6, _0x10014c, _0x4b3250);
                      const _0x3922e8 = new _0x27e9ff.LogTracker(_0x139335, _0x433c58());
                      const _0x185a02 = new _0x2884cb(_0x6c4257, _0x10014c, _0x569091.options, _0x4365d6, _0x3922e8);
                      const _0x1ddc33 = _0x185a02.scanPackages(_0x569091.fileCache, _0x59eee8);
                      let _0x59d362 = 0;
                      const _0x209453 = _0x1ddc33.moduleFilesPerExecEnv;
                      _0x209453.forEach(_0x382697 => _0x59d362 += _0x382697.length);
                      this.log(_0x588620.LogLevel.Info, `scanned(${_0x56b101.threadId}) ${_0x59d362} files over ${_0x209453.size} exec env`);
                      return {
                        ..._0x1ddc33,
                        hostCache: _0x4b3250.getHostCache()
                      };
                    }, _0x796019.port, _0x4be509.deepCopy);
                    break;
                  }
                case _0x5f4107.Index:
                  {
                    _0x699d69.run(() => {
                      const _0x3712d0 = _0x4be509.deepRestore(_0x796019.data);
                      const _0x4e5b2f = _0x4a7454.getCancellationTokenFromId(_0x3712d0.cancellationId);
                      _0x1ebe38.throwIfCancellationRequested(_0x4e5b2f);
                      const _0x29bc59 = _0x3712d0.configOptions;
                      const _0x13b26f = new _0x5f15d4.PylanceFullAccessHost(this.getServiceProvider(), _0x3712d0.hostCache);
                      const _0x3bb24e = _0x13453c(_0x4365d6, _0x29bc59, _0x13b26f);
                      const _0x8d62d4 = new _0x27e9ff.LogTracker(_0x139335, _0x433c58());
                      const _0x100f70 = new _0x2884cb(_0x3bb24e, _0x29bc59, _0x3712d0.options, _0x4365d6, _0x8d62d4);
                      const _0xe0f3ce = _0xb1cec9.trackPerf(this._telemetry, _0xb1cec9.TelemetryEventName.INDEX_SLOW, _0x10a81c => {
                        const _0x451ee1 = _0x100f70.indexPackages(undefined, _0x3712d0.moduleFilesPerExecEnv, [], _0x4e5b2f);
                        let _0xfb4e95 = 0;
                        _0x451ee1.forEach(_0xfca7f7 => _0xfb4e95 += _0xfca7f7.size);
                        this.log(_0x588620.LogLevel.Info, `indexed(${_0x56b101.threadId}) ${_0xfb4e95} files over ${_0x451ee1.size} exec env`);
                        _0x10a81c.addCustomMeasure('count', _0xfb4e95);
                        return _0x451ee1;
                      }, _0x4231c7);
                      return {
                        indexingResult: _0xe0f3ce
                      };
                    }, _0x796019.port, _0x4be509.deepCopy);
                    break;
                  }
                case _0x5f4107.Shutdown:
                  {
                    _0x699d69.run(async () => {
                      this.log(_0x588620.LogLevel.Info, `Indexing finished(${_0x56b101.threadId}).`);
                      await _0x1a2ebb.promise;
                      await this.getServiceProvider().get(_0x51817f.PylanceServiceKeys.profilingService).stopProfiling();
                    }, _0x796019.port, _0x4be509.deepCopy).then(() => _0x56b101.parentPort === null || _0x56b101.parentPort === undefined ? undefined : _0x56b101.parentPort.close());
                    break;
                  }
                default:
                  {
                    _0x3de6c7.assertNever(_0x796019, 'can\'t reach here');
                  }
              }
            });
          }
        }
        _getProfilingWaiter(_0x27d1dc) {
          const _0x3752ab = _0x11c8fd.createDeferred();
          if (!this._profilingInfo) {
            _0x3752ab.resolve(undefined);
            return _0x3752ab;
          }
          _0x27d1dc.get(_0x51817f.PylanceServiceKeys.profilingService).startProfiling(this._profilingInfo).then(() => _0x3752ab.resolve(undefined));
          return _0x3752ab;
        }
      }
      exports.BackgroundIndexRunner = _0x499f5d;
      var _0x5f4107;
      (function (_0x1c5f7d) {
        _0x1c5f7d.Scan = 'scan';
        _0x1c5f7d.Index = 'index';
        _0x1c5f7d.Shutdown = 'shutdown';
      })(_0x5f4107 ||= {});
      var _0x576324;
      (function (_0x1caa6c) {
        _0x1caa6c.Log = 'log';
        _0x1caa6c.Telemetry = 'telemetry';
      })(_0x576324 ||= {});
      class _0x496705 extends _0x4012ea.UriMap {}
      exports.IndexingResultMap = _0x496705;
      class _0xa65bd extends _0x4012ea.UriMap {}
      exports.ModuleFilesExecEnvMap = _0xa65bd;
      function _0x3cbd49(_0x2c2705, _0xf86687, _0x3febeb, _0x4ed01d) {
        if (_0x2c2705 === null || _0x2c2705 === undefined) {
          undefined;
        } else {
          _0x2c2705.postMessage({
            requestType: _0xf86687,
            data: _0x4be509.deepCopy(_0x3febeb)
          }, _0x4ed01d);
        }
      }
      function _0x4b812b(_0x162a12, _0x275115, _0x534920, _0x28919e, _0xb66b69) {
        if (_0x162a12 === null || _0x162a12 === undefined) {
          undefined;
        } else {
          _0x162a12.postMessage({
            requestType: _0x275115,
            data: _0x4be509.deepCopy(_0x534920),
            port: _0x28919e
          }, _0xb66b69);
        }
      }
      const _0x82e641 = async (_0x516714, _0x4d8359, _0x30a0ca, _0xb0a68d) => {
        _0x1ebe38.throwIfCancellationRequested(_0xb0a68d);
        const {
          port1: _0x4d595a,
          port2: _0x37facd
        } = new _0x56b101.MessageChannel();
        const _0x407e87 = _0x699d69.getBackgroundWaiter(_0x4d595a, _0x4be509.deepRestore);
        _0x4b812b(_0x516714, _0x4d8359, _0x30a0ca, _0x37facd, [_0x37facd]);
        const _0x485249 = await _0x407e87;
        _0x37facd.close();
        _0x4d595a.close();
        return _0x485249;
      };
      function _0x287580(_0x429fb4, _0x33969e, _0x4b2f2f) {
        const _0x1ccdb9 = new _0x4012ea.UriMap();
        const _0x264ed8 = new _0x4012ea.UriMap();
        for (const [_0x24081e, _0x4eccc4] of _0x4b2f2f) {
          const _0x3f2692 = _0x4eccc4.uri;
          for (const _0xf21946 of _0x4eccc4.symbols) {
            if (!_0xf21946.alias) {
              continue;
            }
            const _0x200dc5 = _0xf21946.alias.moduleUri;
            const _0x53ecf0 = _0xf21946.alias.originalName;
            const _0x22fd9c = _0x93137a.getOrAdd(_0x1ccdb9, _0x200dc5, () => new Map());
            const _0x5b9c2f = _0x429fb4.getModuleNameForImport(_0x3f2692, _0x33969e);
            const _0x3f9368 = _0x22fd9c.get(_0x53ecf0);
            if (!_0x3f9368) {
              const _0x1f5e1a = _0x4b2f2f.get(_0x200dc5);
              if (!_0x1f5e1a) {
                _0x22fd9c.set(_0x53ecf0, [_0x5b9c2f, _0x3f2692, false, _0xf21946]);
                continue;
              }
              const _0x534698 = _0x1f5e1a.symbols;
              const _0x51a615 = _0x534698.find(_0x46952c => _0x46952c.name === _0x53ecf0);
              if (!_0x51a615) {
                _0x22fd9c.set(_0x53ecf0, [_0x5b9c2f, _0x3f2692, false, _0xf21946]);
                continue;
              }
              const _0x4b26df = _0x429fb4.getModuleNameForImport(_0x200dc5, _0x33969e);
              if (_0x34e094(_0x5b9c2f, _0x3f2692, false, _0x4b26df, _0x200dc5, true) < 0) {
                _0x22fd9c.set(_0x53ecf0, [_0x5b9c2f, _0x3f2692, false, _0xf21946]);
                _0x93137a.getOrAdd(_0x264ed8, _0x200dc5, () => []).push(_0x51a615);
              } else {
                _0x22fd9c.set(_0x53ecf0, [_0x4b26df, _0x200dc5, true, _0x51a615]);
                _0x93137a.getOrAdd(_0x264ed8, _0x24081e, () => []).push(_0xf21946);
              }
            } else {
              if (_0x34e094(_0x5b9c2f, _0x3f2692, false, _0x3f9368[0], _0x3f9368[1], _0x3f9368[2]) < 0) {
                _0x22fd9c.set(_0x53ecf0, [_0x5b9c2f, _0x3f2692, false, _0xf21946]);
                _0x93137a.getOrAdd(_0x264ed8, _0x3f9368[1], () => []).push(_0x3f9368[3]);
              } else {
                _0x93137a.getOrAdd(_0x264ed8, _0x24081e, () => []).push(_0xf21946);
              }
            }
          }
        }
        const _0x35ccd4 = 'typeshed-fallback/stdlib/collections/abc.pyi';
        for (const [_0x402c72, _0x3b4a6d] of _0x264ed8) {
          if (_0x402c72.pathEndsWith(_0x35ccd4)) {
            continue;
          }
          for (const _0x11e9af of _0x3b4a6d) {
            _0x115b9c.deleteElement(_0x4b2f2f.get(_0x402c72).symbols, _0x11e9af);
          }
        }
        function _0x34e094(_0x5f3200, _0x294598, _0x508168, _0x4980ea, _0xcb60d0, _0x2c804b) {
          const _0x1d4abb = _0x182643.getCharacterCount(_0x5f3200.moduleName, '.');
          const _0x20ff31 = _0x182643.getCharacterCount(_0x4980ea.moduleName, '.');
          if (_0x1d4abb === _0x20ff31) {
            if (_0x508168 === _0x2c804b) {
              return _0x182643.compareStringsCaseInsensitive(_0x294598.key, _0xcb60d0.key);
            }
            if (_0x508168) {
              return -1;
            } else {
              return 1;
            }
          }
          return _0x1d4abb - _0x20ff31;
        }
      }
      function _0x116b15(_0x3bc379, _0x545280) {
        return _0x3bc379.getExecutionEnvironments().find(_0x3879d3 => {
          var _0x56770e;
          if ((_0x56770e = _0x3879d3.root) === null || _0x56770e === undefined) {
            return undefined;
          } else {
            return _0x56770e.equals(_0x545280);
          }
        });
      }
      function _0x5da18a(_0x5877e7, _0x4eba58, _0x2d9823, _0x2ccc2d) {
        for (const [_0x307126, _0x2a946b] of _0x2d9823) {
          const _0x4fe15c = _0x116b15(_0x4eba58, _0x307126);
          if (!_0x4fe15c) {
            continue;
          }
          for (const [, _0x16a4e0] of _0x2a946b) {
            _0x2ccc2d.cloneOrSetIndex(_0x5877e7, _0x4fe15c, _0x16a4e0.uri, _0x16a4e0);
          }
        }
      }
      function _0x433c58() {
        return `IDX(${_0x56b101.threadId})`;
      }
      async function _0x5cceb7(_0x264c84, _0x3fcfab, _0x248eb7, _0xb97064, _0x44127c, _0x20ff85, _0x38a336, _0x1f066d, _0x1c5610, _0xc86c56) {
        const _0x42dc7f = _0x1ebe38.getCancellationTokenId(_0xc86c56);
        const _0x509135 = _0x3fcfab === 'refresh' && !_0x1c5610?.changesOnly;
        _0x38a336.reset(_0x248eb7, true, _0x509135);
        const _0xa45992 = await _0x1f066d(_0x264c84, _0x5f4107.Scan, {
          configOptions: _0x20ff85,
          cancellationId: _0x42dc7f,
          options: _0x44127c,
          fileCache: _0x38a336.getFileCache(),
          hostCache: _0x38a336.getHostCache()
        }, _0xc86c56);
        _0x38a336.setFileCache(_0xa45992.fileCache);
        _0x38a336.setHostCache(_0xa45992.hostCache);
        if (_0xa45992.stdLibIndices) {
          _0x5da18a(_0x248eb7, _0x20ff85, _0xa45992.stdLibIndices, _0x38a336);
        }
        const _0x2e9a4e = new _0xa65bd();
        for (const [_0xc9822d, _0x227599] of _0xa45992.moduleFilesPerExecEnv) {
          const _0x34cc0e = _0x116b15(_0x20ff85, _0xc9822d);
          if (!_0x34cc0e) {
            continue;
          }
          const _0x3208e9 = [];
          for (const _0x48b0df of _0x227599) {
            const _0x9faeda = _0x51e866.tryStat(_0xb97064, _0x48b0df.uri);
            if (!_0x9faeda || !_0x38a336.cloneIndex(_0x248eb7, _0x34cc0e, _0x48b0df.uri, _0x9faeda.mtimeMs)) {
              _0x3208e9.push(_0x48b0df);
            }
          }
          if (_0x3208e9.length > 0) {
            _0x2e9a4e.set(_0xc9822d, _0x3208e9);
          }
        }
        if (_0x2e9a4e.size === 0) {
          return;
        }
        const _0x31703a = await _0x1f066d(_0x264c84, _0x5f4107.Index, {
          configOptions: _0x20ff85,
          cancellationId: _0x42dc7f,
          options: _0x44127c,
          hostCache: _0xa45992.hostCache,
          moduleFilesPerExecEnv: _0x2e9a4e
        }, _0xc86c56);
        for (const [_0x193822, _0x6d27e5] of _0x31703a.indexingResult) {
          const _0x1894d5 = _0x116b15(_0x20ff85, _0x193822);
          if (!_0x1894d5) {
            continue;
          }
          for (const [, _0x23adac] of _0x6d27e5) {
            const _0x5b9bf8 = _0x51e866.tryStat(_0xb97064, _0x23adac.uri);
            _0x38a336.cloneOrSetIndex(_0x248eb7, _0x1894d5, _0x23adac.uri, _0x23adac, _0x5b9bf8?.mtimeMs ?? Date.now());
          }
        }
        _0x38a336.requestComplete(_0x248eb7);
      }
    },
    83868: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.createIndexerFileSystem = _0x562664;
      const _0x1e78dc = require(12060);
      const _0x1850c3 = require(27643);
      function _0x562664(_0xe9f1b1, _0x4025ae) {
        return new _0x403941(_0xe9f1b1, _0x4025ae);
      }
      class _0x403941 extends _0x1850c3.RealFileSystem {
        constructor(_0x57b120, _0x28be93) {
          super(_0x57b120, _0x28be93, _0x1e78dc.nullFileWatcherProvider);
          this._cache = new Map();
        }
        existsSync(_0x51bb97) {
          return this._tryGet(_0x51bb97, _0x4139a2 => _0x4139a2.exists, _0x2d0cdc => _0x2d0cdc.exists = super.existsSync(_0x51bb97));
        }
        statSync(_0x31b0c2) {
          return this._tryGet(_0x31b0c2, _0x2a6b25 => _0x2a6b25.stats, _0x6e1db0 => _0x6e1db0.stats = super.statSync(_0x31b0c2));
        }
        realCasePath(_0x58f474) {
          return this._tryGet(_0x58f474, _0x2db126 => _0x2db126.realCasePath, _0x2b1b65 => _0x2b1b65.realCasePath = super.realCasePath(_0x58f474));
        }
        _tryGet(_0x3b08e0, _0x2817e6, _0x209d71) {
          let _0x25cb77 = this._cache.get(_0x3b08e0.key);
          if (!_0x25cb77) {
            _0x25cb77 = {};
            this._cache.set(_0x3b08e0.key, _0x25cb77);
          }
          let _0xbe6ca1 = _0x2817e6(_0x25cb77);
          if (_0xbe6ca1 === undefined) {
            _0xbe6ca1 = _0x209d71(_0x25cb77);
          }
          return _0xbe6ca1;
        }
      }
    },
    97125: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.buildLabel = _0x1281da;
      exports.buildTextEdits = _0x305770;
      const _0x13848c = require(56911);
      const _0x4d302e = require(21024);
      const _0x57c769 = require(8307);
      const _0x14bbc0 = require(34455);
      const _0x4bf77e = require(89740);
      const _0x1f37c2 = require(74382);
      const _0x1b55cf = require(65574);
      const _0x13d953 = require(30048);
      const _0x3905aa = require(21575);
      const _0x594e07 = require(19995);
      const _0x5e911f = require(13234);
      const _0x38fe79 = {
        expandTypeAlias: false,
        enforcePythonSyntax: true
      };
      function _0x1281da(_0x1f66ed, _0x237fdf, _0x3bf3ae, _0x3c5fe5, _0x33ddda, _0x43c36f, _0xf34681) {
        const _0x53daba = new _0x48203e(_0x1f66ed, _0x3bf3ae, _0x43c36f, _0x3c5fe5, _0x33ddda, _0xf34681);
        _0x53daba.walk(_0x237fdf);
        _0x53daba.label.unshift({
          value: _0x33ddda
        });
        return _0x53daba.label;
      }
      class _0x48203e extends _0x57c769.TypeWalker {
        constructor(_0x434571, _0x3dd8ce, _0x3e378d, _0x326d2d, _0x3a69b9, _0x53d541) {
          super();
          this.label = [];
          this._currentLength = 0;
          this._evaluator = _0x434571.evaluator;
          this._declarationFinder = _0x434571.serviceProvider.tryGet(_0x13d953.PylanceServiceKeys.declarationFinder);
          this._isResolveRequest = _0x3e378d;
          this._labelLimit = _0x326d2d;
          this._separator = _0x3a69b9;
          this._cancellationToken = _0x53d541;
          this._sourceMapper = _0x434571.getSourceMapper(_0x3dd8ce, this._cancellationToken);
        }
        visitUnbound(_0x9b3d3e) {
          this._printTypeAndAddToLabel(_0x9b3d3e, this._tryGetTypeLocationByNameOrType('Any'));
        }
        visitAny(_0x2b0c46) {
          this._printTypeAndAddToLabel(_0x2b0c46, _0x2b0c46.priv.isEllipsis ? undefined : this._tryGetTypeLocationByNameOrType('Any'));
        }
        visitUnknown(_0x4b7938) {
          this._printTypeAndAddToLabel(_0x4b7938, this._tryGetTypeLocationByNameOrType('Any'));
        }
        visitNever(_0x309ce6) {
          this._printTypeAndAddToLabel(_0x309ce6, this._tryGetTypeLocationByNameOrType(_0x309ce6.priv.isNoReturn ? 'NoReturn' : 'Never'));
        }
        visitFunction(_0x569ab6) {
          this._printTypeAndAddToLabel(_0x569ab6);
        }
        visitOverloaded(_0x5315ed) {
          this._printTypeAndAddToLabel(_0x5315ed);
        }
        visitClass(_0x17319e) {
          const _0x3c2a31 = this._tryGetTypeLocationByNameOrType(_0x17319e.priv.literalValue !== undefined ? 'Literal' : _0x17319e);
          this._printTypeAndAddToLabel(_0x17319e, _0x3c2a31);
        }
        visitModule(_0x2481ee) {
          this._printTypeAndAddToLabel(_0x2481ee, this._tryGetTypeLocationByNameOrType('Any'));
        }
        visitUnion(_0x83f686) {
          for (let _0x522770 = 0; _0x522770 < _0x83f686.priv.subtypes.length; _0x522770++) {
            const _0x15389a = _0x83f686.priv.subtypes[_0x522770];
            this.walk(_0x15389a);
            if (this._currentLength >= this._labelLimit) {
              break;
            }
            if (_0x522770 < _0x83f686.priv.subtypes.length - 1) {
              this._addTypeToLabel(' | ');
            }
          }
        }
        visitTypeAlias(_0x27b6ad) {
          return;
        }
        visitTypeVar(_0x56204a) {
          const _0x7670b8 = this._printType(_0x56204a) === 'Any' ? this._tryGetTypeLocationByNameOrType('Any') : undefined;
          this._printTypeAndAddToLabel(_0x56204a, _0x7670b8);
        }
        _printTypeAndAddToLabel(_0x735566, _0x305e42) {
          const _0xf1e248 = this._printType(_0x735566);
          if (_0x4d302e.isClass(_0x735566)) {
            this._addClassTypeToLabel(_0xf1e248, _0x735566, _0x305e42);
          } else {
            this._addTypeToLabel(_0xf1e248, _0x305e42);
          }
        }
        _addClassTypeToLabel(_0x46dd7c, _0x47886c, _0x1cacac) {
          if (_0x1cacac === undefined || _0x47886c.priv.literalValue !== undefined || _0x4d302e.ClassType.isBuiltIn(_0x47886c, 'NoneType') || _0x4d302e.ClassType.isPseudoGenericClass(_0x47886c) || _0x47886c.props?.typeAliasInfo) {
            this._addTypeToLabel(_0x46dd7c, _0x1cacac);
            return;
          }
          const _0x299533 = _0x47886c.priv.aliasName ?? _0x47886c.shared.name;
          const _0x3b2e26 = _0x46dd7c.indexOf(_0x299533);
          if (_0x3b2e26 !== -1) {
            if (_0x3b2e26 > 0) {
              const _0x271e44 = _0x46dd7c.slice(0, _0x3b2e26);
              this._addTypeToLabel(_0x271e44);
            }
            this._addTypeToLabel(_0x299533, _0x1cacac);
            const _0x1f75d3 = _0x46dd7c.slice(_0x3b2e26 + _0x299533.length);
            if (_0x1f75d3.length > 0) {
              this._addTypeToLabel(_0x1f75d3);
            }
          } else {
            this._addTypeToLabel(_0x46dd7c);
          }
        }
        _addTypeToLabel(_0x47e7f1, _0xed2d8a) {
          const _0x1a14cb = {
            value: _0x47e7f1
          };
          if (_0xed2d8a) {
            _0x1a14cb.location = {
              uri: _0xed2d8a.uri,
              range: _0xed2d8a.range
            };
          }
          this.label.push(_0x1a14cb);
          this._currentLength += _0x47e7f1.length;
          this._cancelWalkIfExceedsLimit();
        }
        _printType(_0x4d4e55) {
          return this._evaluator.printType(_0x4d4e55, {
            ..._0x38fe79
          });
        }
        _tryGetTypeLocationByNameOrType(_0x376c84) {
          if (!this._isResolveRequest) {
            return undefined;
          }
          if (!this._declarationFinder) {
            return undefined;
          }
          const _0x2b8098 = _0x14bbc0.isString(_0x376c84) ? this._declarationFinder.getDefinitionFromTypingByName(_0x376c84) : this._declarationFinder.getDeclarations(_0x376c84, this._cancellationToken, {
            useTypeAlias: !!_0x376c84.props?.typeAliasInfo
          });
          return this._convertDeclsToLocations(_0x2b8098);
        }
        _convertDeclsToLocations(_0x2c2511) {
          if (!_0x2c2511 || _0x2c2511.length === 0) {
            return undefined;
          }
          const _0x1873d7 = [];
          _0x1b55cf.addDeclarationsToDefinitions(this._evaluator, this._sourceMapper, _0x2c2511, _0x1873d7);
          const _0x500ba2 = _0x1873d7.length;
          if (_0x500ba2 === 0) {
            return undefined;
          }
          return {
            uri: _0x1873d7[_0x500ba2 - 1].uri.toString(),
            range: _0x1873d7[_0x500ba2 - 1].range
          };
        }
        _cancelWalkIfExceedsLimit() {
          if (this._currentLength >= this._labelLimit) {
            const _0x39ccd9 = this.label[this.label.length - 1];
            const _0x1ce3a2 = this._currentLength - this._labelLimit + this._separator.length;
            if (_0x39ccd9.value.length > _0x1ce3a2) {
              this.label[this.label.length - 1].value = _0x4bf77e.truncate(_0x39ccd9.value, _0x39ccd9.value.length - _0x1ce3a2);
            }
            this.cancelWalk();
          }
        }
      }
      function _0x305770(_0x5266e3, _0x3355d3, _0x1e3637, _0x114e50, _0x19bd9f, _0x423852, _0x40683f, _0x57caa9, _0xb5761f, _0x1fb5a4) {
        if (!_0x3905aa.canInsertHintEdit(_0x114e50, _0x423852)) {
          return [];
        }
        if (_0xb5761f) {
          return undefined;
        }
        return _0x291f21(_0x5266e3, _0x3355d3, _0x1e3637, _0x19bd9f, _0x423852, _0x40683f, _0x57caa9, _0x1fb5a4);
      }
      function _0x291f21(_0x496308, _0x1a927b, _0x4ba999, _0x5dec0b, _0x190d59, _0x5955d9, _0x104c51, _0x51d4b0) {
        const _0x3e37b8 = new _0x594e07.ImportAdder(_0x496308);
        _0x3e37b8.appendImportInfoForTypes(_0x4ba999, [{
          type: _0x190d59,
          node: _0x5dec0b
        }], _0x51d4b0);
        _0x3e37b8.updateImportInfoForTypeWithAutoImport(_0x4ba999, _0x1a927b, _0x5dec0b.start, [_0x190d59], _0x51d4b0);
        const _0x30e33b = new _0x5e911f.TypeStringGenerator(_0x496308, _0x4ba999, _0x51d4b0, _0x3e37b8);
        const _0x4d44d8 = _0x30e33b.getTypeString(_0x190d59);
        const _0x186c4d = _0x1f37c2.convertToTextEdits(_0x3e37b8.applyImports(_0x4ba999, _0x1a927b, _0x5dec0b.start, 'absolute', _0x51d4b0));
        _0x186c4d.push(_0x13848c.TextEdit.insert(_0x5955d9, `${_0x104c51}${_0x4d44d8}`));
        return _0x186c4d;
      }
    },
    19892: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MethodSignaturesGenerator = undefined;
      const _0x2feca0 = require(28445);
      const _0x5d75fb = __importStar(require(41557));
      const _0x28012e = require(3113);
      const _0x24100c = require(21024);
      const _0x50a3f9 = require(58147);
      const _0x329c98 = require(88754);
      const _0x205efc = require(30048);
      const _0x1f4973 = require(61904);
      const _0x3019ab = require(13234);
      class _0x4e6080 {
        constructor(_0x18d1a6, _0x3ab465, _0x10d076, _0x568b6d, _0x28cf4f, _0x51281f) {
          this._program = _0x18d1a6;
          this._fileUri = _0x3ab465;
          this._classType = _0x10d076;
          this._funcType = _0x568b6d;
          this._options = _0x28cf4f;
          this._cancellationToken = _0x51281f;
          this._evaluator = this._program.evaluator;
          this._parseResults = this._program.getParseResults(this._fileUri);
          this._getTypeToPrint = (_0xaa3da1, _0x499b2e) => {
            if (_0xaa3da1 && (!_0x24100c.isUnknown(_0xaa3da1) || _0x499b2e?.category === 9)) {
              return _0xaa3da1;
            } else {
              return _0x499b2e;
            }
          };
        }
        getMethodSignatureWithDecorators() {
          let _0x21bdab = {
            methodSignature: '',
            isAsync: false,
            useAwait: false
          };
          const _0x3aafec = [];
          const _0xac7ee5 = this._program.serviceProvider.tryGet(_0x205efc.PylanceServiceKeys.declarationFinder);
          if (!_0xac7ee5) {
            return {
              ..._0x21bdab,
              decoratorTexts: _0x3aafec
            };
          }
          const _0x35ed1c = _0xac7ee5.getDeclarations(this._funcType, this._cancellationToken);
          if (_0x35ed1c.length === 0) {
            return {
              ..._0x21bdab,
              decoratorTexts: _0x3aafec
            };
          }
          const _0x1c98be = _0x35ed1c.find(_0x2feca0.isFunctionDeclaration);
          if (!_0x1c98be) {
            return {
              ..._0x21bdab,
              decoratorTexts: _0x3aafec
            };
          }
          _0x21bdab = this.getMethodSignature();
          const _0x26c7a4 = _0x1c98be.node.d.decorators;
          for (const _0x158407 of _0x26c7a4) {
            if (this._options.decoratorFilter) {
              const _0x4d0a6e = this._evaluator.getType(_0x158407.d.expr);
              if (_0x4d0a6e && _0x24100c.isFunction(_0x4d0a6e) && this._options.decoratorFilter.some(_0x2c873e => _0x2c873e === _0x4d0a6e.shared.name)) {
                continue;
              }
              if (!this._options.enableTrackingAddImports) {
                continue;
              }
              const _0x2b2d8d = _0x5d75fb.getModuleNode(_0x158407);
              this._options.importAdder.collectImportsForSymbolsUsed(_0x2b2d8d, _0x158407.d.expr, this._cancellationToken);
            }
            _0x3aafec.push(_0x5d75fb.printExpression(_0x158407.d.expr));
          }
          return {
            ..._0x21bdab,
            decoratorTexts: _0x3aafec,
            isAsync: this._options.hasAsyncKeyword ?? false
          };
        }
        getMethodSignature() {
          const _0x3bffa2 = this._funcType.shared.declaration;
          let _0x3fd163;
          if (_0x28012e.isStubFile(this._fileUri)) {
            _0x3fd163 = true;
          } else {
            if (this._classType.shared.moduleName === _0x3bffa2.moduleName) {
              _0x3fd163 = false;
            }
          }
          const _0x381099 = _0x28012e.isStubFile(this._fileUri) ? 3 : 2;
          this._updateImportData(_0x3bffa2);
          if (!this._options.enableTrackingAddImports && !this._options.dontAddTypeAnnotation) {
            this._options.importAdder.updateImportInfoForTypeWithAutoImport(this._fileUri, this._parseResults, _0x3bffa2.node.start, this._funcType.shared.parameters.map(_0x235525 => _0x235525._type), this._cancellationToken);
          }
          const _0x1a8182 = new _0x3019ab.TypeStringGenerator(this._program, this._fileUri, this._cancellationToken, this._options.importAdder);
          const _0x19872b = this._funcType.shared.parameters.map((_0x509cf5, _0x5bb003) => {
            let _0x67db5f = '';
            if (_0x509cf5.category === 1) {
              _0x67db5f += '*';
            } else {
              if (_0x509cf5.category === 2) {
                _0x67db5f += '**';
              }
            }
            if (_0x509cf5.name) {
              _0x67db5f += _0x509cf5.name;
            }
            const _0xec00fc = _0x1f4973.getFunctionParameterNode(_0x3bffa2.node, _0x509cf5.name);
            const _0x47e7b9 = _0xec00fc ? _0x1f4973.getParameterAnnotationNode(_0xec00fc) : undefined;
            if (!this._options.dontAddTypeAnnotation && _0x24100c.FunctionParam.isTypeDeclared(_0x509cf5)) {
              const _0x15ae8b = this._funcType.shared.parameters[_0x5bb003]._type;
              const _0x436294 = this._getTypeToPrint(_0x24100c.FunctionType.getParamType(this._funcType, _0x5bb003), _0x15ae8b);
              const _0x325264 = this._isTypeUsableForPrint(_0x436294, _0x15ae8b) ? _0x1a8182.getTypeString(_0x436294) : _0x47e7b9 ? _0x5d75fb.printExpression(_0x47e7b9, _0x381099) : 'Any';
              _0x67db5f += `: ${_0x325264}`;
            }
            if (_0xec00fc === null || _0xec00fc === undefined ? undefined : _0xec00fc.d.defaultValue) {
              _0x67db5f += _0x47e7b9 ? ' = ' : '=';
              const _0x39cfbe = _0x3fd163 ?? !_0x5d75fb.isSimpleDefault(_0xec00fc.d.defaultValue);
              _0x67db5f += _0x39cfbe ? '...' : _0x5d75fb.printExpression(_0xec00fc.d.defaultValue, _0x381099);
            }
            if (!_0x67db5f && !_0x509cf5.name && _0x509cf5.category === 0 && _0x5bb003 < this._funcType.shared.parameters.length - 1) {
              return '/';
            }
            return _0x67db5f;
          });
          for (let _0x37465e = _0x19872b.length - 1; _0x37465e >= 0; _0x37465e--) {
            if (_0x19872b[_0x37465e] !== '') {
              break;
            }
            _0x19872b.pop();
          }
          let _0x4611b3 = this._funcType.shared.name + '(' + _0x19872b.join(', ') + ')';
          const _0x25c12c = this._shouldUseAwait();
          const _0x5e4860 = this._getReturnTypeStr(_0x25c12c, _0x381099, _0x1a8182);
          if (_0x5e4860) {
            _0x4611b3 += ` -> ${_0x5e4860}`;
          }
          return {
            methodSignature: _0x4611b3,
            isAsync: this._options.hasAsyncKeyword ?? false,
            useAwait: _0x25c12c
          };
        }
        _updateImportData(_0x249439) {
          var _0x102c19;
          var _0x763586;
          if (this._options.dontAddTypeAnnotation) {
            return;
          }
          const _0x57ff9c = _0x249439.node;
          const _0x46de96 = [];
          _0x50a3f9.addIfNotNull(_0x46de96, _0x329c98.TextRange.combine(_0x57ff9c.d.params));
          _0x50a3f9.addIfNotNull(_0x46de96, _0x57ff9c.d.returnAnnotation);
          _0x50a3f9.addIfNotNull(_0x46de96, _0x57ff9c.d.funcAnnotationComment);
          if (_0x46de96.length === 0) {
            return;
          }
          const _0x4e88b1 = _0x5d75fb.getModuleNode(_0x57ff9c);
          this._options.importAdder.collectImportsForSymbolsUsed(_0x4e88b1, _0x46de96, this._cancellationToken);
          const _0x126de9 = [];
          this._funcType.shared.parameters.forEach((_0x50782b, _0x5c5b83) => {
            const _0x3aa099 = _0x1f4973.getFunctionParameterNode(_0x249439.node, _0x50782b.name);
            if (!_0x3aa099) {
              return;
            }
            const _0x247ed0 = _0x1f4973.getParameterAnnotationNode(_0x3aa099);
            if (!_0x247ed0) {
              return;
            }
            const _0x8a10c = this._funcType.shared.parameters[_0x5c5b83]._type;
            if (!_0x24100c.isTypeVar(_0x8a10c)) {
              return;
            }
            const _0x10586c = _0x24100c.FunctionType.getParamType(this._funcType, _0x5c5b83);
            _0x126de9.push({
              type: _0x10586c,
              node: _0x247ed0
            });
          });
          const _0x462cef = this._funcType.shared.declaredReturnType;
          if (_0x462cef && _0x24100c.isTypeVar(_0x462cef) && (_0x57ff9c.d.returnAnnotation || ((_0x102c19 = _0x57ff9c.d.funcAnnotationComment) === null || _0x102c19 === undefined ? undefined : _0x102c19.d.returnAnnotation))) {
            _0x126de9.push({
              type: _0x24100c.FunctionType.getEffectiveReturnType(this._funcType),
              node: _0x57ff9c.d.returnAnnotation ?? _0x57ff9c.d.funcAnnotationComment.d.returnAnnotation
            });
          }
          if (!this._options.hasAsyncKeyword && _0x57ff9c.d.isAsync && (_0x57ff9c.d.returnAnnotation || ((_0x763586 = _0x57ff9c.d.funcAnnotationComment) === null || _0x763586 === undefined ? undefined : _0x763586.d.returnAnnotation))) {
            _0x126de9.push({
              type: _0x24100c.FunctionType.getEffectiveReturnType(this._funcType),
              node: _0x57ff9c.d.returnAnnotation ?? _0x57ff9c.d.funcAnnotationComment.d.returnAnnotation
            });
          }
          this._options.importAdder.appendImportInfoForTypes(this._fileUri, _0x126de9, this._cancellationToken);
        }
        _isTypeUsableForPrint(_0x4d387b, _0x18e4b7) {
          if (!_0x4d387b) {
            return false;
          }
          return !_0x24100c.isUnknown(_0x4d387b) || _0x18e4b7?.category === 9;
        }
        _shouldUseAwait() {
          const _0x4a2aba = _0x24100c.FunctionType.getEffectiveReturnType(this._funcType) ?? this._evaluator.getInferredReturnType(this._funcType);
          return !!_0x4a2aba && _0x4a2aba.category === 6 && _0x4a2aba.shared.name === 'Coroutine' && _0x4a2aba.shared.moduleName === 'typing' && !!_0x4a2aba.priv.typeArgs && _0x4a2aba.priv.typeArgs.length === 3;
        }
        _getReturnTypeStr(_0x17f33a, _0xd0a995, _0x29b49b) {
          var _0xcf0562;
          if (this._options.dontAddTypeAnnotation) {
            return undefined;
          }
          const _0x24a935 = this._funcType.shared.declaration.node;
          if (!_0x24a935.d.returnAnnotation && !((_0xcf0562 = _0x24a935.d.funcAnnotationComment) === null || _0xcf0562 === undefined ? undefined : _0xcf0562.d.returnAnnotation)) {
            return undefined;
          }
          let _0xa5ff39 = _0x24100c.FunctionType.getEffectiveReturnType(this._funcType);
          if (this._options.hasAsyncKeyword && _0x17f33a) {
            _0xa5ff39 = _0xa5ff39.priv.typeArgs[2];
          }
          const _0x53d6b3 = this._funcType.shared.declaredReturnType;
          const _0x2be117 = this._getTypeToPrint(_0xa5ff39, _0x53d6b3);
          if (_0x2be117 && this._isTypeUsableForPrint(_0x2be117, _0x53d6b3)) {
            return _0x29b49b.getTypeString(_0x2be117);
          }
          if (_0x24a935.d.returnAnnotation) {
            return _0x5d75fb.printExpression(_0x24a935.d.returnAnnotation, _0xd0a995);
          }
          if (_0x24a935.d.funcAnnotationComment) {
            return _0x5d75fb.printExpression(_0x24a935.d.funcAnnotationComment.d.returnAnnotation, _0xd0a995);
          }
          return undefined;
        }
      }
      exports.MethodSignaturesGenerator = _0x4e6080;
    },
    42580: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ModuleRenamer = undefined;
      const _0x404123 = require(3113);
      const _0x4f042c = require(5884);
      const _0x4508dd = require(82458);
      class _0x22f067 {
        constructor(_0x4d144c, _0x48a9ca, _0x3512b0, _0x50de7) {
          this._program = _0x4d144c;
          this._oldModuleUri = _0x48a9ca;
          this._newModuleUri = _0x3512b0;
          this._token = _0x50de7;
        }
        static getRenameModulePathInfo(_0xcc6cb7, _0x5e2d3c) {
          const _0xc65da8 = _0x414289(_0xcc6cb7);
          const _0xa35bcd = _0x2f7c7b(_0xc65da8, _0x5e2d3c);
          return {
            fileUri: _0xc65da8,
            newFileUri: _0xa35bcd
          };
          function _0x414289(_0x20a9c3) {
            const _0x4a65f3 = _0x20a9c3.fileNameWithoutExtensions;
            if (_0x4a65f3 === '__init__') {
              return _0x20a9c3.getDirectory();
            }
            return _0x20a9c3;
          }
          function _0x2f7c7b(_0x36d0dc, _0xeeb9cb) {
            const _0x58e332 = _0x36d0dc.lastExtension;
            const _0x5bd5a7 = _0x36d0dc.getDirectory();
            return _0x5bd5a7.combinePaths(`${_0xeeb9cb}${_0x58e332}`);
          }
        }
        static getRenameModulePath(_0x2a3c3d) {
          const _0x9d2d5a = _0x2a3c3d.find(_0x13eb98 => !_0x13eb98.node);
          if (_0x9d2d5a) {
            return _0x9d2d5a.uri;
          }
          const _0x424ec8 = [..._0x2a3c3d.reduce((_0x4ac871, _0x119b39) => _0x4ac871.set(_0x119b39.uri.key, _0x119b39.uri), new Map())];
          const _0x536d09 = _0x424ec8.findIndex(_0x2ca4ea => _0x404123.isStubFile(_0x2ca4ea[1]));
          if (_0x536d09 >= 0) {
            return _0x424ec8[_0x536d09][1];
          }
          return _0x424ec8[0][1];
        }
        renameModule() {
          if (_0x4f042c.isFile(this._program.fileSystem, this._oldModuleUri)) {
            const _0x45d6f6 = this._program.getSourceFileInfo(this._oldModuleUri);
            if (!_0x45d6f6) {
              return null;
            }
          }
          const _0x181315 = _0x4508dd.SymbolReferenceUpdator.createForModule(this._program, this._oldModuleUri, this._newModuleUri, this._token);
          if (!_0x181315) {
            return null;
          }
          _0x181315.processModuleReferences(_0x181315.lastModuleName, this._oldModuleUri);
          return {
            edits: _0x181315.getEdits(),
            fileOperations: []
          };
        }
      }
      exports.ModuleRenamer = _0x22f067;
    },
    53062: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.MRUQueues = exports.MRUQueueKey = undefined;
      const _0x4df282 = require(13348);
      class _0x484f16 {
        constructor(_0x2ba785, _0x4a3c8b, _0x310e57 = (_0x47a47e, _0xdcb14c) => _0x47a47e === _0xdcb14c, _0x5c8c08 = 100) {
          this.name = _0x2ba785;
          this.keyGetter = _0x4a3c8b;
          this.equalityChecker = _0x310e57;
          this.maxSize = _0x5c8c08;
        }
      }
      exports.MRUQueueKey = _0x484f16;
      class _0x554457 {
        constructor() {
          this._globalMRUQueueMap = new Map();
          this._programMRUQueueMap = new WeakMap();
        }
        getGlobalMRUQueue(_0x15ab65) {
          return this._getQueue(this._globalMRUQueueMap, _0x15ab65);
        }
        getProgramMRUQueue(_0x5e7479, _0x26b146) {
          let _0x5a15c3 = this._programMRUQueueMap.get(_0x5e7479);
          if (!_0x5a15c3) {
            _0x5a15c3 = new Map();
            this._programMRUQueueMap.set(_0x5e7479, _0x5a15c3);
          }
          return this._getQueue(_0x5a15c3, _0x26b146);
        }
        _getQueue(_0x1e404a, _0x4b568a) {
          let _0x7cb74d = _0x1e404a.get(_0x4b568a.name);
          if (!_0x7cb74d) {
            _0x7cb74d = new _0x4df282.MRUQueue(_0x4b568a.maxSize, _0x4b568a.keyGetter, _0x4b568a.equalityChecker);
            _0x1e404a.set(_0x4b568a.name, _0x7cb74d);
          }
          return _0x7cb74d;
        }
      }
      exports.MRUQueues = _0x554457;
      (function (_0x11c886) {
        function _0x18a1d4(_0xff4fb7) {
          return _0xff4fb7.getGlobalMRUQueue !== undefined && _0xff4fb7.getProgramMRUQueue !== undefined;
        }
        _0x11c886.is = _0x18a1d4;
      })(_0x554457 || (exports.MRUQueues = _0x554457 = {}));
    },
    76246: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.OverrideUsageProviderFactory = undefined;
      const _0x912399 = require(28445);
      const _0x4db0a9 = require(41557);
      const _0x5be32b = require(21024);
      const _0x4438fc = require(92324);
      const _0x3e56c6 = require(91426);
      const _0x100e8b = require(67032);
      class _0x1358c0 {
        constructor(_0x458f91) {
          this._view = _0x458f91;
        }
        tryCreateProvider(_0x332d26, _0x1287e9, _0x1eb024) {
          if (!_0x1287e9.some(_0x146f09)) {
            return undefined;
          }
          return new _0x4151bd(this._view, _0x1287e9, _0x1eb024);
        }
      }
      exports.OverrideUsageProviderFactory = _0x1358c0;
      class _0x4151bd {
        constructor(_0xc81293, _0x4c2451, _0x950f0e) {
          this._view = _0xc81293;
          this._declarations = _0x4c2451;
          this._token = _0x950f0e;
        }
        appendSymbolNamesTo(_0x118dff) {}
        appendDeclarationsTo(_0x3b8d1d) {
          this._appendDeclarationsTo(this._declarations, _0x3b8d1d);
        }
        appendDeclarationsAt(_0x2a5df9, _0x232aff, _0x5b02fc) {
          this._appendDeclarationsTo(_0x232aff, _0x5b02fc);
        }
        get _evaluator() {
          return this._view.evaluator;
        }
        _appendDeclarationsTo(_0xae33eb, _0x1475ea) {
          const _0x3579fe = [];
          for (const _0x21d488 of _0xae33eb.filter(_0x146f09)) {
            const _0x381d82 = _0x21d488;
            const _0x2040bf = _0x4db0a9.getEnclosingClass(_0x381d82.node);
            const _0x37cded = _0x2040bf ? this._evaluator.getTypeOfClass(_0x2040bf) : undefined;
            if (!_0x37cded) {
              continue;
            }
            for (const _0x549831 of _0x37cded.classType.shared.mro) {
              _0x3e56c6.throwIfCancellationRequested(this._token);
              if (!_0x5be32b.isInstantiableClass(_0x549831)) {
                continue;
              }
              const _0x55b11f = _0x4438fc.lookUpClassMember(_0x549831, _0x381d82.node.d.name.d.value);
              const _0x16ff8d = _0x4438fc.lookUpClassMember(_0x549831, _0x381d82.node.d.name.d.value, 1);
              if (_0x55b11f && !_0x16ff8d) {
                _0x55b11f.symbol.getDeclarations().filter(_0x494fe1 => _0x912399.isFunctionDeclaration(_0x494fe1) && _0x494fe1.isMethod).forEach(_0xeea415 => _0x100e8b.addDeclarationIfUnique(_0x3579fe, _0xeea415));
              }
            }
          }
          _0x1475ea.push(..._0x3579fe);
        }
      }
      function _0x146f09(_0x4f0f1d) {
        return _0x912399.isFunctionDeclaration(_0x4f0f1d) && _0x4f0f1d.isMethod && _0x4f0f1d.node.d.name.d.value.length > 0 && _0x4f0f1d.node.d.name.d.value !== '__init__' && _0x4f0f1d.node.d.name.d.value !== '__new__';
      }
    },
    31756: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PackageDiscoverer = undefined;
      const _0x2991d2 = require(75130);
      const _0x2cc435 = require(58147);
      const _0xf1e3e = require(4883);
      const _0x22a18b = require(5884);
      const _0x331a69 = require(99504);
      const _0x1c5a27 = require(8527);
      const _0x2de378 = require(30048);
      const _0x4b6dea = require(69482);
      const _0x4e3b18 = require(28020);
      const _0x5702b4 = 'site-packages';
      const _0x562acc = 'dist-packages';
      class _0x363b9e {
        constructor() {
          this._installedPackageMap = new WeakMap();
          this._distributionToPackageMap = new WeakMap();
          this._packageCache = new Map();
          this._moduleVersionCache = new Map();
        }
        getKnownModuleVersion(_0x53c32c, _0x9ed24) {
          var _0xf93765;
          return ((_0xf93765 = this._installedPackageMap.get(_0x53c32c)) === null || _0xf93765 === undefined ? undefined : _0xf93765.moduleVersions.get(_0x9ed24)) || undefined;
        }
        computeInstalledPackages(_0x44e176) {
          const _0x389154 = _0x2cc435.getOrAdd(this._installedPackageMap, _0x44e176, () => ({
            moduleVersions: new Map(),
            installedPackages: new Set(),
            installedPackagesReported: false
          }));
          this._computeInstalledPackages(_0x44e176, _0x389154.installedPackages, _0x389154.moduleVersions);
        }
        ensureDistributionToPackageMap(_0x5394e0) {
          var _0x49bcb9;
          var _0x40fa57;
          if (this._distributionToPackageMap.has(_0x5394e0)) {
            return;
          }
          const _0x292c79 = _0x2cc435.getOrAdd(this._distributionToPackageMap, _0x5394e0, () => new Set());
          if ((_0x49bcb9 = _0x1c5a27.tryGetDirectDependencies(_0x5394e0.importResolver, _0x5394e0.rootPath.combinePaths(_0xf1e3e.requirementsFileName))) === null || _0x49bcb9 === undefined) {
            undefined;
          } else {
            _0x49bcb9.forEach(_0x196c8f => _0x292c79.add(_0x196c8f));
          }
          if ((_0x40fa57 = _0x1c5a27.tryGetDirectDependencies(_0x5394e0.importResolver, _0x5394e0.rootPath.combinePaths(_0xf1e3e.pyprojectTomlName))) === null || _0x40fa57 === undefined) {
            undefined;
          } else {
            _0x40fa57.forEach(_0x4c7163 => _0x292c79.add(_0x4c7163));
          }
        }
        getDirectDependencies(_0x2c44b4) {
          return this._distributionToPackageMap.get(_0x2c44b4);
        }
        reset(_0x454f3f, _0xf59390) {
          if (_0xf59390 === 'libraryUpdated' || _0xf59390 === 'dependencyUpdated') {
            this._distributionToPackageMap.delete(_0x454f3f);
          }
          if (_0xf59390 === 'libraryUpdated' || _0xf59390 === 'serviceRestarted') {
            this._packageCache.clear();
            this._moduleVersionCache.clear();
            const _0x359352 = this._installedPackageMap.get(_0x454f3f);
            if (_0x359352) {
              _0x359352.installedPackagesReported = false;
              _0x359352.installedPackages.clear();
              _0x359352.moduleVersions.clear();
            }
          }
        }
        report(_0x244df9) {
          const _0x5ed371 = this._installedPackageMap.get(_0x244df9);
          if (!_0x5ed371) {
            return;
          }
          this._sendInstalledPackagesTelemetry(_0x244df9, _0x5ed371);
        }
        logInstalledModuleInfo(_0x21da73) {
          const _0x5d293d = this._installedPackageMap.get(_0x21da73);
          if (!_0x5d293d) {
            return;
          }
          for (const [_0x25007b, _0xb64373] of _0x5d293d.moduleVersions) {
            if (_0xb64373.length > 0) {
              _0x21da73.console.log(`Found module ${_0x25007b} : ${_0xb64373}`);
            }
          }
        }
        _computeInstalledPackages(_0x482163, _0x204ad6, _0x5b95e8) {
          _0x204ad6.clear();
          _0x5b95e8.clear();
          const _0x15ddee = [];
          const _0x3ce88d = new Map();
          for (const _0x55a966 of _0x482163.importResolver.getPythonSearchPaths(_0x15ddee)) {
            const _0x3e5162 = _0x2cc435.getOrAdd(this._packageCache, _0x55a966.key, () => this._computeInstalledPackage(_0x482163.fileSystem, _0x55a966));
            _0x3e5162.installedPackages.forEach(_0x5b4ad4 => _0x204ad6.add(_0x5b4ad4));
            _0x3e5162.thirdPartyPackages.forEach((_0x122f02, _0x5386f8) => _0x3ce88d.set(_0x5386f8, _0x122f02));
          }
          for (const [_0x5b57de, _0x4038fc] of _0x3ce88d) {
            _0x2cc435.getOrAdd(_0x5b95e8, _0x5b57de, () => {
              const _0x23162f = _0x5b57de.toLowerCase();
              return _0x2cc435.getOrAdd(this._moduleVersionCache, _0x4038fc.key + '_' + _0x23162f, () => this._computeModuleVersion(_0x482163.fileSystem, _0x23162f, _0x4038fc));
            });
          }
        }
        _computeInstalledPackage(_0x3c39db, _0x49d2cf) {
          const _0x4f872b = new Set();
          const _0x56e3b5 = new Map();
          const _0x1d547f = _0x49d2cf.getPath().includes(_0x5702b4) || _0x49d2cf.getPath().includes(_0x562acc);
          try {
            const _0x289b82 = _0x22a18b.getFileSystemEntriesFromDirEntries(_0x3c39db.readdirEntriesSync(_0x49d2cf), _0x3c39db, _0x49d2cf);
            for (const _0x44ccdf of _0x289b82.files) {
              const _0x105eb5 = _0x44ccdf.lastExtension.toLowerCase();
              if (_0x2991d2.supportedFileExtensions.some(_0x58dad8 => _0x58dad8 === _0x105eb5)) {
                const _0x5c845d = _0x2991d2.getModuleNameFromPath(_0x49d2cf, _0x44ccdf);
                if (_0x5c845d && !_0x5c845d.startsWith('_')) {
                  _0x4f872b.add(_0x5c845d);
                  if (_0x1d547f) {
                    _0x56e3b5.set(_0x5c845d, _0x49d2cf);
                  }
                }
              }
            }
            for (const _0x21526b of _0x289b82.directories) {
              if (_0x21526b.fileNameWithoutExtensions === '__pycache__') {
                continue;
              }
              if (_0x21526b.fileName.startsWith('_')) {
                continue;
              }
              const _0x4420f4 = _0x2991d2.getModuleNameFromPath(_0x49d2cf, _0x21526b);
              if (_0x4420f4) {
                _0x4f872b.add(_0x4420f4);
                if (_0x1d547f) {
                  _0x56e3b5.set(_0x4420f4, _0x49d2cf);
                }
              }
            }
          } catch {}
          return {
            installedPackages: _0x4f872b,
            thirdPartyPackages: _0x56e3b5
          };
        }
        _sendInstalledPackagesTelemetry(_0x460200, _0x4f80c9) {
          var _0x459657;
          if (_0x4f80c9.installedPackagesReported || _0x4f80c9.installedPackages.size === 0 || _0x331a69.IS_RELEASE) {
            return;
          }
          const _0x88e8c3 = new _0x4b6dea.TelemetryEvent(_0x4b6dea.TelemetryEventName.INSTALLED_PACKAGES);
          _0x88e8c3.Properties.packagesBitArray = this._generateInstalledPackagesBitArray(_0x4f80c9.installedPackages);
          if ((_0x459657 = _0x460200.serviceProvider.tryGet(_0x2de378.PylanceServiceKeys.telemetry)) === null || _0x459657 === undefined) {
            undefined;
          } else {
            _0x459657.sendTelemetry(_0x88e8c3);
          }
          _0x4f80c9.installedPackagesReported = true;
        }
        _generateInstalledPackagesBitArray(_0x42938c) {
          const _0x38a503 = new Uint8Array(_0x4e3b18.ImportPackageFilterList.length);
          _0x42938c.forEach(_0x7d41e7 => {
            const _0x1cae47 = _0x7d41e7.toLowerCase();
            const _0x3b566d = _0x4e3b18.ImportPackageFilterList.findIndex(_0x27144c => _0x27144c === _0x1cae47);
            if (_0x3b566d >= 0) {
              _0x38a503[_0x3b566d] = 1;
            }
          });
          return _0x38a503.toString();
        }
        _computeModuleVersion(_0x1e2820, _0x5adb71, _0x34cfb7) {
          try {
            const _0x344ec7 = _0x1e2820.readdirEntriesSync(_0x34cfb7);
            const _0xaf6271 = _0x344ec7.find(_0x169827 => _0x169827.name.toLowerCase().startsWith(_0x5adb71) && _0x169827.name.toLowerCase() !== _0x5adb71 && _0x169827.isDirectory());
            if (_0xaf6271) {
              const _0x59d0f8 = _0x34cfb7.combinePaths(_0xaf6271.name);
              const _0x57b84b = _0x1e2820.readdirEntriesSync(_0x59d0f8);
              for (let _0x420d7c = 0; _0x420d7c < _0x57b84b.length; _0x420d7c++) {
                if (_0x57b84b[_0x420d7c].name === 'METADATA' || _0x57b84b[_0x420d7c].name === 'PKG-INFO') {
                  const _0x3c6dbc = _0x59d0f8.combinePaths(_0x57b84b[_0x420d7c].name);
                  const _0x3492c1 = _0x1e2820.readFileSync(_0x3c6dbc, 'utf-8');
                  if (_0x3492c1) {
                    const _0x34782b = /^Version:\s+(.*)/gm.exec(_0x3492c1);
                    if (_0x34782b) {
                      return _0x34782b[1];
                    }
                  }
                }
              }
            }
          } catch {}
          return '';
        }
      }
      exports.PackageDiscoverer = _0x363b9e;
      (function (_0x350b89) {
        function _0x410c1a(_0xf67edf) {
          return !!_0xf67edf && !!_0xf67edf._installedPackageMap && !!_0xf67edf._packageCache && !!_0xf67edf._moduleVersionCache;
        }
        _0x350b89.is = _0x410c1a;
      })(_0x363b9e || (exports.PackageDiscoverer = _0x363b9e = {}));
    },
    77907: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ProfilingService = undefined;
      const _0x499df2 = __importStar(require(86592));
      const _0x5e0d20 = require(51507);
      const _0x56b89f = require(71745);
      const _0x50066c = require(99504);
      class _0x197960 {
        constructor(_0xa31b23, _0x42f7fd) {
          this._sp = _0xa31b23;
          this._profileId = 0;
          this._prefix = _0x42f7fd.replace(/[()]/g, '_').toLowerCase();
        }
        get currentProfilingInfo() {
          return this._currentProfilingInfo;
        }
        async startProfiling(_0x3e8f1e) {
          var _0x417ad4;
          if (this._profilingSession) {
            return undefined;
          }
          let _0xbfeb6 = (_0x417ad4 = this._sp.tryGet(_0x56b89f.ServiceKeys.tempFile)) === null || _0x417ad4 === undefined ? undefined : _0x417ad4.tmpdir();
          if (_0x3e8f1e) {
            this._profileId = _0x3e8f1e.profileId;
            _0xbfeb6 = _0x3e8f1e.profilingFolderUri;
          }
          if (!_0xbfeb6) {
            return undefined;
          }
          const _0xeecd1 = this._sp.tryGet(_0x56b89f.ServiceKeys.console);
          const _0x5b05cf = _0x5e0d20.createDeferred();
          const _0x17c269 = new _0x499df2.Session();
          _0x17c269.connect();
          _0x17c269.post('Profiler.enable', () => {
            _0x17c269.post('Profiler.start', () => {
              if (_0xeecd1 === null || _0xeecd1 === undefined) {
                undefined;
              } else {
                _0xeecd1.info(`[${this._getTitle()}] Profiling started`);
              }
              _0x5b05cf.resolve(undefined);
            });
          });
          this._profilingSession = _0x17c269;
          await _0x5b05cf.promise;
          this._currentProfilingInfo = {
            profileId: this._profileId,
            profilingFolderUri: _0xbfeb6
          };
          return this._currentProfilingInfo;
        }
        async stopProfiling() {
          if (!this._profilingSession) {
            return undefined;
          }
          let _0x10ed22;
          const _0x50c54f = _0x5e0d20.createDeferred();
          const _0x287569 = this._profilingSession;
          const _0x269021 = this._sp.tryGet(_0x56b89f.ServiceKeys.console);
          const _0x46c000 = this._currentProfilingInfo?.profilingFolderUri;
          _0x287569.post('Profiler.stop', (_0x4cb704, {
            profile: _0x58b5b2
          }) => {
            if (_0x4cb704) {
              if (_0x269021 === null || _0x269021 === undefined) {
                undefined;
              } else {
                _0x269021.error(`There was an error stopping profiler: ${_0x4cb704}`);
              }
              return;
            }
            const _0x281bcb = this._sp.get(_0x56b89f.ServiceKeys.fs);
            try {
              const _0x2cd818 = this._getTitle();
              if (!_0x46c000) {
                if (_0x269021 === null || _0x269021 === undefined) {
                  undefined;
                } else {
                  _0x269021.info(`[${_0x2cd818}}] Profiling stopped but there is no place to save data.`);
                }
                return;
              }
              this._profileId++;
              const _0x1c4ca1 = _0x46c000.combinePaths(`pylance_${_0x50066c.VERSION}_${_0x2cd818}.cpuprofile`);
              _0x281bcb.writeFileSync(_0x1c4ca1, JSON.stringify(_0x58b5b2), 'utf8');
              _0x10ed22 = _0x1c4ca1;
              if (_0x269021 === null || _0x269021 === undefined) {
                undefined;
              } else {
                _0x269021.info(`[${_0x2cd818}}] Profiling stopped at ${_0x10ed22.getFilePath()}`);
              }
            } catch (_0x1d5db7) {
              if (_0x269021 === null || _0x269021 === undefined) {
                undefined;
              } else {
                _0x269021.error(`There was an error saving profile data: ${_0x1d5db7}`);
              }
              return;
            }
            _0x287569.post('Profiler.disable', () => {
              _0x287569.disconnect();
              _0x50c54f.resolve(undefined);
            });
          });
          this._profilingSession = undefined;
          this._currentProfilingInfo = undefined;
          await _0x50c54f.promise;
          return _0x10ed22;
        }
        _getTitle() {
          return this._prefix + 'id_' + this._profileId;
        }
      }
      exports.ProfilingService = _0x197960;
    },
    39545: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceAnalyzerService = undefined;
      const _0x3f8f6d = require(33970);
      const _0x2fa504 = require(4883);
      const _0x483bd4 = require(30048);
      const _0x4b4945 = require(95349);
      class _0x5913a4 extends _0x3f8f6d.AnalyzerService {
        constructor(_0x33e1bc, _0x4f4728, _0x12421e, _0x3e955e) {
          super(_0x33e1bc, _0x4f4728, _0x12421e);
          this._serverConnection = _0x3e955e;
        }
        applyConfigOptions(_0x4cdf48) {
          super.applyConfigOptions(_0x4cdf48);
          this._updateDependencyWatchers();
          _0x4b4945.CustomLSP.sendNotification(this._serverConnection, _0x4b4945.CustomLSP.Notifications.ConfigOptionsChanged, undefined);
        }
        dispose() {
          super.dispose();
          this._removeDependencyWatchers();
        }
        runAnalysis(_0x90edef) {
          this.backgroundAnalysisProgram.refreshWorkspaceSymbols(_0x90edef);
          super.runAnalysis(_0x90edef);
        }
        _removeDependencyWatchers() {
          if (this._dependencyWatcher) {
            this._dependencyWatcher.close();
            this._dependencyWatcher = undefined;
          }
        }
        _updateDependencyWatchers() {
          this._removeDependencyWatchers();
          const _0x3cb60c = this.options.console;
          const _0x42dfd1 = [this.getConfigOptions().projectRoot.combinePaths(_0x2fa504.requirementsFileName), this.getConfigOptions().projectRoot.combinePaths(_0x2fa504.pyprojectTomlName)];
          try {
            _0x3cb60c.log(`Adding fs watcher for files:
 ${_0x42dfd1.join('\n')}`);
            this._dependencyWatcher = this.fs.createFileSystemWatcher(_0x42dfd1, (_0x422e47, _0x45c7fe) => {
              var _0x3e6369;
              if (!_0x45c7fe) {
                return;
              }
              _0x3cb60c.log(`Dependency: Received fs event '${_0x422e47}' for path '${_0x45c7fe}'`);
              if ((_0x3e6369 = this.serviceProvider.tryGet(_0x483bd4.PylanceServiceKeys.packageDiscoverer)) === null || _0x3e6369 === undefined) {
                undefined;
              } else {
                _0x3e6369.reset(this.backgroundAnalysisProgram.program, 'libraryUpdated');
              }
            });
          } catch {
            _0x3cb60c.error(`Exception caught when installing fs watcher for:
 ${_0x42dfd1.map(_0x2095eb => _0x2095eb.toUserVisibleString()).join('\n')}`);
          }
        }
      }
      exports.PylanceAnalyzerService = _0x5913a4;
    },
    74899: function (module, exports, require) {
      'use strict';

      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            }
          };
        }
        Object.defineProperty(o, k2, desc);
      } : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
        Object.defineProperty(o, "default", {
          enumerable: true,
          value: v
        });
      } : function (o, v) {
        o["default"] = v;
      });
      var __importStar = this && this.__importStar || function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SymbolIndexer = undefined;
      const _0x15178b = require(56911);
      const _0x2c6be1 = __importStar(require(26687));
      const _0x38ced9 = require(83760);
      const _0x44fef5 = require(12097);
      const _0xb798b8 = require(4064);
      const _0x1e85f0 = require(91426);
      const _0x3cfe2d = require(51862);
      const _0x435c80 = require(56412);
      const _0x3e5fd8 = require(56814);
      const _0x4f4463 = require(16835);
      const _0x1713c2 = require(24122);
      class _0x5214ce {
        static getIndices(_0x1b0a30) {
          return _0x1713c2.getBackgroundAnalysisProgram(_0x1b0a30).getIndices();
        }
        static indexSymbols(_0x483730, _0x29236b, _0xc1653a) {
          const _0x27858f = _0x2c6be1.getFileInfo(_0x483730.parserOutput.parseTree);
          if (!_0x27858f) {
            return [];
          }
          const _0x588aa0 = [];
          _0x59c465(_0x27858f, _0x483730, _0x483730.parserOutput.parseTree, _0x29236b, _0x588aa0, _0xc1653a);
          return _0x588aa0;
        }
        static indexWorkspace(_0x342ca8, _0x5cd296, _0x20322b, _0x5b58b7, _0x2523e7, _0x2fab2c, _0x350794) {
          if (!_0x5cd296.configOptions.indexing) {
            return 0;
          }
          let _0x32c7e5 = 0;
          const _0x3e572b = new Set();
          const _0x1e5a73 = _0x5cd296.getUserFiles();
          for (const _0x423ec0 of _0x1e5a73) {
            if (!_0x423ec0.sourceFile.isParseRequired()) {
              _0x3e572b.add(_0x423ec0);
            }
            if (_0x20322b.get(_0x423ec0)) {
              _0x32c7e5++;
            }
          }
          if (_0x32c7e5 >= _0x5b58b7) {
            return 0;
          }
          for (const _0x3fb2f8 of _0x1e5a73) {
            if (_0x20322b.get(_0x3fb2f8)) {
              continue;
            }
            const _0x59d698 = _0x5979ec(_0x3fb2f8.sourceFile.getUri(), _0x3fb2f8.sourceFile.getClientVersion());
            _0x20322b.set(_0x3fb2f8, true);
            if (_0x59d698) {
              if (++_0x32c7e5 > _0x5b58b7) {
                _0x55ff6c(_0x1e5a73, _0x3e572b);
                return _0x32c7e5;
              }
              _0x2fab2c(_0x3fb2f8.sourceFile.getUri(), _0x59d698);
            }
            _0x5cd296.handleMemoryHighUsage();
          }
          _0x55ff6c(_0x1e5a73, _0x3e572b);
          return _0x32c7e5;
          function _0x5979ec(_0x257977, _0xc9abc0) {
            return _0x342ca8.log(`indexing: ${_0x3cfe2d.getPathForLogging(_0x5cd296.fileSystem, _0x257977)}`, _0xc29d9f => {
              const _0x5a3015 = _0x5cd296.getParseResults(_0x257977);
              if (!_0x5a3015) {
                _0xc29d9f.suppress();
                return undefined;
              }
              const _0x1eac44 = _0x5214ce.indexSymbols(_0x5a3015, {
                indexingForAutoImportMode: false,
                includeAliasesFromUserFiles: _0x2523e7
              }, _0x350794);
              _0xc29d9f.add(`found ${_0x1eac44.length}`);
              const _0x209c25 = _0x257977.fileNameWithoutExtensions;
              const _0x4c4794 = _0x44fef5.isPrivateOrProtectedName(_0x209c25);
              return {
                uri: _0x257977,
                privateOrProtected: _0x4c4794,
                symbols: _0x1eac44,
                clientVersion: _0xc9abc0
              };
            });
          }
          function _0x55ff6c(_0x18e1dc, _0x3b88d6) {
            for (const _0x3341f1 of _0x18e1dc) {
              if (_0x3341f1.sourceFile.isParseRequired() || _0x3b88d6.has(_0x3341f1)) {
                continue;
              }
              _0x3341f1.sourceFile.dropParseAndBindInfo();
            }
          }
        }
      }
      exports.SymbolIndexer = _0x5214ce;
      function _0x59c465(_0x5a7712, _0x4235bf, _0x1ed1f2, _0x30f8b7, _0x128b2e, _0x37efda) {
        _0x1e85f0.throwIfCancellationRequested(_0x37efda);
        const _0x1c7216 = _0x2c6be1.getScope(_0x1ed1f2);
        if (!_0x1c7216) {
          return;
        }
        const _0x35d9c2 = _0x1c7216.symbolTable;
        _0x35d9c2.forEach((_0x930a18, _0x50e257) => {
          if (_0x930a18.isIgnoredForProtocolMatch()) {
            return;
          }
          const _0x3ab02e = _0x930a18.isInDunderAll();
          if (_0x30f8b7.indexingForAutoImportMode && !_0x30f8b7.includeAllSymbols && !_0x5a7712.isStubFile && !_0x5a7712.isInPyTypedPackage && !_0x3ab02e) {
            return;
          }
          let _0x3e6965 = _0xb798b8.getLastTypedDeclarationForSymbol(_0x930a18);
          if (!_0x3e6965 && _0x930a18.hasDeclarations()) {
            _0x3e6965 = _0x930a18.getDeclarations()[0];
          }
          if (!_0x3e6965) {
            return;
          }
          if (_0x3e6965.type === 8) {
            if (!_0x30f8b7.indexingForAutoImportMode && !_0x30f8b7.includeAliasesFromUserFiles) {
              return;
            }
            if (!_0x3e6965.loadSymbolsFromPath || _0x3e6965.uri.isEmpty()) {
              return;
            }
          }
          _0x11cf93(_0x5a7712, _0x4235bf, _0x3e6965, _0x30f8b7, _0xb798b8.isVisibleExternally(_0x930a18), _0x3ab02e, _0x50e257, _0x128b2e, _0x37efda);
        });
      }
      function _0x11cf93(_0x4151e9, _0x10598d, _0x8cb992, _0x4e3e3c, _0x26f0a2, _0x1b1393, _0x4e1898, _0x39dc4b, _0x3a0806) {
        if (_0x4e3e3c.indexingForAutoImportMode && !_0x26f0a2) {
          return;
        }
        const _0xca30f1 = _0x435c80.getSymbolKind(_0x8cb992, undefined, _0x4e1898);
        if (_0xca30f1 === undefined) {
          return;
        }
        const _0x20b11d = _0x8cb992.range;
        let _0x120d43 = _0x20b11d;
        const _0x5cf41f = [];
        if (_0x8cb992.type === 6 || _0x8cb992.type === 5) {
          if (!_0x4e3e3c.indexingForAutoImportMode) {
            _0x59c465(_0x4151e9, _0x10598d, _0x8cb992.node, _0x4e3e3c, _0x5cf41f, _0x3a0806);
          }
          _0x120d43 = _0x3e5fd8.convertOffsetsToRange(_0x8cb992.node.start, _0x8cb992.node.start + _0x8cb992.node.length, _0x10598d.tokenizerOutput.lines);
        }
        let _0x49ed1c = undefined;
        if (_0x8cb992.type === 8) {
          _0x49ed1c = _0x4455f3(_0x2c6be1.getFileInfo(_0x10598d.parserOutput.parseTree).importLookup, _0x8cb992);
          if (!_0x49ed1c) {
            return;
          }
        }
        const _0x2b74aa = {
          name: _0x4e1898,
          visibilityFlags: _0x491409(_0x26f0a2, _0x1b1393, _0xecfc1e(_0x8cb992)),
          kind: _0xca30f1,
          itemKind: _0x4f4463.convertSymbolKindToCompletionItemKind(_0xca30f1),
          alias: _0x49ed1c,
          range: _0x4e3e3c.indexingForAutoImportMode ? undefined : _0x120d43,
          selectionRange: _0x4e3e3c.indexingForAutoImportMode ? undefined : _0x20b11d,
          children: _0x4e3e3c.indexingForAutoImportMode ? undefined : _0x5cf41f
        };
        _0x39dc4b.push(_0x2b74aa);
      }
      function _0x491409(_0x107bf7, _0x392e20, _0x5b2255) {
        let _0x892190 = 0;
        if (_0x107bf7) {
          _0x892190 |= 1;
        }
        if (_0x392e20) {
          _0x892190 |= 2;
        }
        if (_0x5b2255) {
          _0x892190 |= 4;
        }
        return _0x892190;
      }
      function _0xecfc1e(_0x19729b) {
        if (_0x19729b.type !== 8) {
          return false;
        }
        if (_0x19729b.node.nodeType === 24) {
          const _0x54bc9a = _0x19729b.node;
          return !!_0x54bc9a.d.alias && _0x54bc9a.d.module.d.nameParts.length === 1 && _0x54bc9a.d.module.d.nameParts[0].d.value === _0x54bc9a.d.alias.d.value;
        }
        if (_0x19729b.node.nodeType === 26) {
          const _0x413ab9 = _0x19729b.node;
          return !!_0x413ab9.d.alias && _0x413ab9.d.name.d.value === _0x413ab9.d.alias.d.value;
        }
        return false;
      }
      function _0x4455f3(_0x14cd84, _0x2e998c) {
        if (!_0x2e998c.symbolName) {
          return undefined;
        }
        const _0x8c2517 = _0x38ced9.resolveAliasDeclaration(_0x14cd84, _0x2e998c, {
          resolveLocalNames: true,
          allowExternallyHiddenAccess: false,
          skipFileNeededCheck: false
        });
        if (!_0x8c2517 || !_0x8c2517.declaration) {
          return undefined;
        }
        if (_0x8c2517.isPrivate) {
          return undefined;
        }
        const _0x1b4f2d = _0x38ced9.getNameFromDeclaration(_0x8c2517.declaration);
        if (!_0x1b4f2d || _0x8c2517.declaration.uri.isEmpty()) {
          return undefined;
        }
        const _0x52cf73 = _0x435c80.getSymbolKind(_0x8c2517.declaration, undefined, _0x1b4f2d) ?? _0x15178b.SymbolKind.Module;
        return {
          originalName: _0x1b4f2d,
          moduleUri: _0x8c2517.declaration.uri,
          kind: _0x52cf73,
          itemKind: _0x4f4463.convertSymbolKindToCompletionItemKind(_0x52cf73)
        };
      }
    },
    82458: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.SymbolReferenceUpdator = undefined;
      const _0x1f5176 = require(56911);
      const _0x36be6d = require(26687);
      const _0x1c4799 = require(28445);
      const _0x5a9316 = require(83760);
      const _0x3d3fd5 = require(75130);
      const _0xccbf33 = require(47610);
      const _0x50ed60 = require(41557);
      const _0x47dff8 = require(88744);
      const _0x5d1e4d = require(3433);
      const _0x382cbf = require(3113);
      const _0x626e7a = require(58147);
      const _0xd4d875 = require(48281);
      const _0x38c88d = require(93779);
      const _0x236ae2 = require(88754);
      const _0x426637 = require(5884);
      const _0x1b3a2d = require(67032);
      const _0xab25fd = require(85114);
      var _0x48d5aa;
      (function (_0x21a245) {
        _0x21a245[_0x21a245.File = 0] = 'File';
        _0x21a245[_0x21a245.Folder = 1] = 'Folder';
        _0x21a245[_0x21a245.Symbol = 2] = 'Symbol';
      })(_0x48d5aa ||= {});
      const _0x5a0899 = {
        treatModuleInImportAndFromImportSame: true,
        skipUnreachableCode: false,
        providers: []
      };
      class _0x41d441 {
        constructor(_0x2d747f, _0x292206, _0x1cdffe, _0x39b71e, _0x1ee0c2, _0x1ce143, _0x5584a4, _0x40a9c8) {
          this._program = _0x2d747f;
          this._moduleUri = _0x292206;
          this._newModuleUri = _0x1cdffe;
          this._moduleNameAndType = _0x39b71e;
          this._newModuleNameAndType = _0x1ee0c2;
          this._type = _0x1ce143;
          this.declarations = _0x5584a4;
          this._token = _0x40a9c8;
          this._aliasIntroduced = new Set();
          this._textEditTracker = new _0x38c88d.TextEditTracker();
          this._moduleNames = this._moduleName.split('.');
          this._newModuleNames = this._newModuleName.split('.');
          this._onlyNameChanged = _0xccbf33.haveSameParentModule(this._moduleNames, this._newModuleNames);
          _0xd4d875.assert(this._type !== _0x48d5aa.Folder || this._onlyNameChanged, 'We only support simple rename for folder');
        }
        get lastModuleName() {
          return this._moduleNames[this._moduleNames.length - 1];
        }
        get textEditTracker() {
          return this._textEditTracker;
        }
        static createForModule(_0x16629b, _0x2f3c4f, _0x235a44, _0x12856b) {
          if (!_0x16629b.fileSystem.existsSync(_0x2f3c4f)) {
            return undefined;
          }
          if (_0x426637.isFile(_0x16629b.fileSystem, _0x2f3c4f)) {
            return this._create(_0x16629b, _0x2f3c4f, _0x235a44, _0x48d5aa.File, _0x12856b);
          } else {
            if (_0x426637.isDirectory(_0x16629b.fileSystem, _0x2f3c4f)) {
              if (_0x426637.getDirectoryChangeKind(_0x16629b.fileSystem, _0x2f3c4f, _0x235a44) !== 'Renamed') {
                return undefined;
              }
              let _0x912e2f = _0x2f3c4f.initPyiUri;
              if (!_0x16629b.fileSystem.existsSync(_0x912e2f)) {
                _0x912e2f = _0x2f3c4f.initPyUri;
                if (!_0x16629b.fileSystem.existsSync(_0x912e2f)) {
                  return undefined;
                }
              }
              return this._create(_0x16629b, _0x912e2f, _0x235a44.combinePaths(_0x912e2f.fileName), _0x48d5aa.Folder, _0x12856b);
            }
          }
          return undefined;
        }
        static createForSymbol(_0x5474eb, _0x5a4cf6, _0x15791e, _0x1503e9, _0x1f85e2) {
          if (!_0x5474eb.fileSystem.existsSync(_0x5a4cf6)) {
            return undefined;
          }
          const _0x43ed2c = _0x1503e9.filter(_0x28ee21 => _0x1c4799.isClassDeclaration(_0x28ee21) || _0x1c4799.isFunctionDeclaration(_0x28ee21) || _0x1c4799.isVariableDeclaration(_0x28ee21));
          if (_0x43ed2c.length === 0) {
            return undefined;
          }
          return this._create(_0x5474eb, _0x5a4cf6, _0x15791e, _0x48d5aa.Symbol, _0x43ed2c, _0x1f85e2);
        }
        getEdits() {
          return this._textEditTracker.getEdits(this._token);
        }
        tryGetFirstSymbolUsage(_0x201c30, _0x354219) {
          const _0x1ff9c0 = _0x354219?.name ?? _0x5a9316.getNameFromDeclaration(this.declarations[0]) ?? '';
          const _0x2626b7 = new _0x1b3a2d.DocumentSymbolCollector(this._program, [_0x1ff9c0], _0x354219?.decls ?? this.declarations, _0x201c30.parseTree, this._token, _0x5a0899);
          for (const _0x22a40b of _0x2626b7.collect().sort((_0x138ea3, _0xdb1be2) => _0x138ea3.range.start - _0xdb1be2.range.start)) {
            if (_0x50ed60.isImportModuleName(_0x22a40b.node) || _0x50ed60.isImportAlias(_0x22a40b.node) || _0x50ed60.isFromImportModuleName(_0x22a40b.node) || _0x50ed60.isFromImportName(_0x22a40b.node) || _0x50ed60.isFromImportAlias(_0x22a40b.node)) {
              continue;
            }
            return _0x22a40b.range.start;
          }
          return undefined;
        }
        processModuleReferences(_0x5e7dcc, _0x5c22eb) {
          for (const _0x4ec851 of this._program.getSourceFileInfoList()) {
            if (!_0x5d1e4d.isUserCode(_0x4ec851)) {
              continue;
            }
            const _0x55cbec = _0x4ec851.sourceFile.getUri();
            const _0x214bbc = _0x4ec851.sourceFile.getFileContent() ?? '';
            if (!_0x55cbec.equals(_0x5c22eb) && _0x214bbc.indexOf(_0x5e7dcc) < 0) {
              continue;
            }
            const _0x1009dc = this._program.getParseResults(_0x4ec851.sourceFile.getUri());
            if (!_0x1009dc) {
              continue;
            }
            this._renameReferences(_0x1009dc);
            this._program.handleMemoryHighUsage();
          }
        }
        get _moduleName() {
          return this._moduleNameAndType.moduleName;
        }
        get _newLastModuleName() {
          return this._newModuleNames[this._newModuleNames.length - 1];
        }
        get _newModuleName() {
          return this._newModuleNameAndType.moduleName;
        }
        get _evaluator() {
          return this._program.evaluator;
        }
        static _create(_0x3356f9, _0x204152, _0x2ca258, _0x406d35, _0x5177c0, _0x554d22) {
          const _0x5711b1 = _0x3356f9.configOptions;
          const _0xb8f4c7 = _0x3356f9.importResolver;
          const _0x1e3fc8 = _0x5711b1.findExecEnvironment(_0x204152);
          const _0x219ca1 = _0xb8f4c7.getModuleNameForImport(_0x204152, _0x1e3fc8);
          if (!_0x219ca1.moduleName) {
            return undefined;
          }
          const _0x5e5b9d = _0xb8f4c7.getModuleNameForImport(_0x2ca258, _0x1e3fc8);
          if (!_0x5e5b9d.moduleName) {
            return undefined;
          }
          _0x554d22 = _0x1f5176.CancellationToken.is(_0x5177c0) ? _0x5177c0 : _0x554d22;
          const _0xf1d3 = _0x1f5176.CancellationToken.is(_0x5177c0) ? [] : _0x5177c0;
          if (_0xf1d3.length === 0) {
            _0xf1d3.push(_0x5a9316.synthesizeAliasDeclaration(_0x204152));
            if (_0x382cbf.isStubFile(_0x204152)) {
              _0xb8f4c7.resolveImport(_0x204152, _0x1e3fc8, _0x3d3fd5.createImportedModuleDescriptor(_0x219ca1.moduleName));
              _0xb8f4c7.getSourceFilesFromStub(_0x204152, _0x1e3fc8, false).forEach(_0x537a72 => _0xf1d3.push(_0x5a9316.synthesizeAliasDeclaration(_0x537a72)));
            }
          }
          return new _0x41d441(_0x3356f9, _0x204152, _0x2ca258, _0x219ca1, _0x5e5b9d, _0x406d35, _0xf1d3, _0x554d22);
        }
        _renameReferences(_0x40219d) {
          switch (this._type) {
            case _0x48d5aa.Folder:
              return this._renameFolderReferences(_0x40219d);
            case _0x48d5aa.File:
              return this._renameModuleReferences(_0x40219d);
            case _0x48d5aa.Symbol:
              return this._updateSymbolReferences(_0x40219d);
            default:
              return _0xd4d875.assertNever(this._type, this._type + ' is unknown');
          }
        }
        _updateSymbolReferences(_0x3af13e) {
          const _0x24094b = _0x36be6d.getFileInfo(_0x3af13e.parserOutput.parseTree).fileUri;
          const _0x30440c = _0x24094b.equals(this._moduleUri);
          const _0x558489 = new _0x1b3a2d.DocumentSymbolCollector(this._program, [_0x5a9316.getNameFromDeclaration(this.declarations[0]) || ''], this.declarations, _0x3af13e.parserOutput.parseTree, this._token, _0x5a0899);
          const _0x1e8958 = _0xccbf33.getTopLevelImports(_0x3af13e.parserOutput.parseTree, true);
          const _0x215dfe = _0x1e8958.orderedImports.find(_0x5a9491 => _0x5a9491.moduleName === this._newModuleName);
          let _0x22aa22 = false;
          const _0x48bea6 = new Map();
          const _0x5ac92c = new Map();
          for (const _0x24bb61 of _0x558489.collect()) {
            const _0x469ee3 = _0x24bb61.node;
            if (_0x469ee3.nodeType === 49) {
              if (_0x30440c) {
                this._textEditTracker.addEditWithTextRange(_0x3af13e, _0x469ee3, '');
              }
              continue;
            }
            if (_0x50ed60.isFromImportName(_0x469ee3)) {
              this._updateNameInFromImportForSymbolReferences(_0x3af13e, _0x1e8958, _0x469ee3);
              continue;
            }
            if (!_0x22aa22) {
              _0x22aa22 = _0x30440c ? !this.declarations.some(_0x39da5a => _0x236ae2.TextRange.containsRange(_0x39da5a.node, _0x469ee3)) : true;
            }
            const _0x1e143f = _0x50ed60.getDottedNameWithGivenNodeAsLastName(_0x469ee3);
            if (_0x1e143f === _0x469ee3 || _0x1e143f.nodeType !== 35) {
              this._collectWildcardImports(_0x469ee3, _0x48bea6);
              continue;
            }
            this._collectSymbolReferencesPerImports(_0x1e143f, _0x5ac92c);
          }
          if (_0x30440c && _0x22aa22) {
            const _0x564db3 = (_0x215dfe === null || _0x215dfe === undefined ? undefined : _0x215dfe.node.nodeType) === 25 ? this._getNewModuleName(_0x24094b, _0x215dfe.node.d.module.d.leadingDots > 0, false) : undefined;
            const _0x84af4d = (_0x215dfe === null || _0x215dfe === undefined ? undefined : _0x215dfe.node.nodeType) === 25 ? {
              currentFromImport: _0x215dfe.node,
              originalModuleName: this._moduleName
            } : undefined;
            this._textEditTracker.addOrUpdateImport(_0x3af13e, _0x1e8958, {
              name: this._newModuleName,
              nameForImportFrom: _0x564db3
            }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), [{
              name: _0x5a9316.getNameFromDeclaration(this.declarations[0])
            }], _0x84af4d);
          }
          this._processSymbolReferenceOffWildcardImports(_0x3af13e, _0x1e8958, _0x48bea6);
          this._processSymbolReferenceOffImports(_0x3af13e, _0x1e8958, _0x215dfe, _0x5ac92c);
        }
        _processSymbolReferenceOffImports(_0x5e8a49, _0x58aed6, _0x40ec14, _0x3956ca) {
          const _0x541643 = _0x36be6d.getFileInfo(_0x5e8a49.parserOutput.parseTree).fileUri;
          const _0x44149c = _0x541643.equals(this._newModuleUri);
          if (_0x44149c) {
            for (const [_0x523777, _0x5cb1ab] of _0x3956ca) {
              if (this._canReplaceImportName(_0x5e8a49.parserOutput, _0x523777, _0x5cb1ab)) {
                this._textEditTracker.deleteImportName(_0x5e8a49, _0x523777);
              }
              for (const _0x4c074d of _0x5cb1ab) {
                this._textEditTracker.addEditWithTextRange(_0x5e8a49, _0x236ae2.TextRange.fromBounds(_0x4c074d.start, _0x4c074d.d.member.start), '');
              }
            }
            return;
          }
          for (const [_0x4a8ae5, _0x5e1739] of _0x3956ca) {
            let _0x144430;
            if (this._canReplaceImportName(_0x5e8a49.parserOutput, _0x4a8ae5, _0x5e1739)) {
              const _0x572a52 = this._getReferenceModuleName(_0x58aed6, _0x40ec14);
              if (_0x4a8ae5.nodeType === 24) {
                if (_0x572a52) {
                  _0x144430 = _0x572a52;
                  this._textEditTracker.deleteImportName(_0x5e8a49, _0x4a8ae5);
                } else {
                  _0x144430 = _0x4a8ae5.d.alias ? _0x4a8ae5.d.alias.d.value : this._newModuleName;
                  this._textEditTracker.addEditWithTextRange(_0x5e8a49, _0x4a8ae5.d.module, this._newModuleName);
                }
              } else {
                if (_0x572a52) {
                  _0x144430 = _0x572a52;
                  this._textEditTracker.deleteImportName(_0x5e8a49, _0x4a8ae5);
                } else {
                  const _0x5b78c4 = _0x4a8ae5.parent;
                  const _0x46ce36 = this._getNewModuleName(_0x541643, _0x5b78c4.d.module.d.leadingDots > 0, true);
                  _0x144430 = _0x4a8ae5.d.alias ? _0x4a8ae5.d.alias.d.value : this._newLastModuleName;
                  this._textEditTracker.addEditWithTextRange(_0x5e8a49, _0x5b78c4.d.module, _0x46ce36);
                  this._textEditTracker.addEditWithTextRange(_0x5e8a49, _0x4a8ae5.d.name, this._newLastModuleName);
                }
              }
            } else {
              const _0x20c7b0 = this._getReferenceModuleName(_0x58aed6, _0x40ec14);
              if (_0x20c7b0) {
                _0x144430 = _0x20c7b0;
              } else {
                _0x144430 = this._newModuleName;
                this._textEditTracker.addOrUpdateImport(_0x5e8a49, _0x58aed6, {
                  name: this._newModuleName
                }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType));
              }
            }
            for (const _0x94530b of _0x5e1739) {
              this._textEditTracker.addEditWithTextRange(_0x5e8a49, _0x94530b.d.leftExpr, _0x144430);
            }
          }
        }
        _processSymbolReferenceOffWildcardImports(_0x181513, _0x3d0419, _0x50c0db) {
          const _0x7751e3 = _0x36be6d.getFileInfo(_0x181513.parserOutput.parseTree).fileUri;
          const _0x5bfc2a = _0x7751e3.equals(this._newModuleUri);
          if (_0x5bfc2a) {
            return;
          }
          for (const [_0x10c654, _0x5f1886] of _0x50c0db) {
            const _0x470ee8 = _0x10c654;
            const _0x2c8ce8 = this._getNewModuleName(_0x7751e3, _0x470ee8.d.module.d.leadingDots > 0, false);
            this._textEditTracker.addOrUpdateImport(_0x181513, _0x3d0419, {
              name: this._newModuleName,
              nameForImportFrom: _0x2c8ce8
            }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), [..._0x5f1886].map(_0x5d0ff2 => ({
              name: _0x5d0ff2
            })), {
              currentFromImport: _0x470ee8,
              originalModuleName: this._moduleName
            });
          }
        }
        _collectSymbolReferencesPerImports(_0x5bc557, _0x58cdb5) {
          var _0x4cd90d;
          const _0x485810 = _0x5bc557.d.leftExpr.nodeType === 35 ? _0x5bc557.d.leftExpr.d.member : _0x5bc557.d.leftExpr.nodeType === 38 ? _0x5bc557.d.leftExpr : undefined;
          if (!_0x485810) {
            return;
          }
          const _0x4ff347 = (_0x4cd90d = this._evaluator.getDeclInfoForNameNode(_0x485810)?.decls) === null || _0x4cd90d === undefined ? undefined : _0x4cd90d.filter(_0x1070e1 => _0x1c4799.isAliasDeclaration(_0x1070e1) && (_0x1070e1.node.nodeType === 24 || _0x1070e1.node.nodeType === 26));
          if (!_0x4ff347 || _0x4ff347.length === 0) {
            return;
          }
          const _0xbf0056 = _0x4ff347[0].node;
          _0x626e7a.getOrAdd(_0x58cdb5, _0xbf0056, () => []).push(_0x5bc557);
        }
        _collectWildcardImports(_0x496447, _0x208970) {
          const _0x233c06 = this._evaluator.getDeclInfoForNameNode(_0x496447)?.decls;
          const _0xc3ba8 = _0x233c06 === null || _0x233c06 === undefined ? undefined : _0x233c06.find(_0x3575e9 => _0x3575e9.node.nodeType === 25 && _0x3575e9.node.d.isWildcardImport);
          if (!_0xc3ba8 || !_0x1c4799.isAliasDeclaration(_0xc3ba8)) {
            return;
          }
          _0x626e7a.getOrAdd(_0x208970, _0xc3ba8.node, () => new Set()).add(_0x496447.d.value);
        }
        _updateNameInFromImportForSymbolReferences(_0x12c11a, _0x2dd87e, _0x5c59aa) {
          var _0xc97598;
          const _0x2e6325 = _0x36be6d.getFileInfo(_0x12c11a.parserOutput.parseTree).fileUri;
          const _0x5af8c1 = _0x2e6325.equals(this._newModuleUri);
          const _0x379453 = _0x5c59aa.parent;
          const _0x204e07 = _0x379453?.parent;
          const _0x28d6f6 = this._getNewModuleName(_0x2e6325, _0x204e07.d.module.d.leadingDots > 0, false);
          if (_0x5af8c1) {
            this._textEditTracker.deleteImportName(_0x12c11a, _0x379453);
            return;
          }
          if (_0x204e07.d.imports.length === 1) {
            this._textEditTracker.addEditWithTextRange(_0x12c11a, _0x204e07.d.module, _0x28d6f6);
            return;
          }
          this._textEditTracker.deleteImportName(_0x12c11a, _0x379453);
          const _0x3bd944 = {
            name: _0x379453.d.name.d.value,
            alias: (_0xc97598 = _0x379453.d.alias) === null || _0xc97598 === undefined ? undefined : _0xc97598.d.value
          };
          this._textEditTracker.addOrUpdateImport(_0x12c11a, _0x2dd87e, {
            name: this._newModuleName,
            nameForImportFrom: _0x28d6f6
          }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), [_0x3bd944], {
            currentFromImport: _0x204e07,
            originalModuleName: this._moduleName
          });
        }
        _getReferenceModuleName(_0x32798a, _0x31cb99) {
          var _0x57c150;
          var _0x28adaa;
          if (_0x31cb99 && _0x31cb99.node.nodeType === 23) {
            if ((_0x57c150 = _0x31cb99.subnode) === null || _0x57c150 === undefined ? undefined : _0x57c150.d.alias) {
              return _0x31cb99.subnode.d.alias.d.value;
            } else {
              return this._newModuleName;
            }
          } else {
            if ((_0x28adaa = _0x32798a.implicitImports) === null || _0x28adaa === undefined ? undefined : _0x28adaa.has(this._newModuleUri.key)) {
              const _0x3f6b0a = _0x32798a.implicitImports.get(this._newModuleUri.key);
              if (_0x3f6b0a.d.alias) {
                return _0x3f6b0a.d.alias.d.value;
              } else {
                return _0x3f6b0a.d.name.d.value;
              }
            }
          }
          return undefined;
        }
        _canReplaceImportName(_0x5150d6, _0x26d74b, _0x26ab6b) {
          const _0x1cbcea = _0x26d74b.d.alias ?? (_0x26d74b.nodeType === 24 ? _0x26d74b.d.module.d.nameParts[_0x26d74b.d.module.d.nameParts.length - 1] : _0x26d74b.d.name);
          const _0x367b = _0x1b3a2d.DocumentSymbolCollector.getDeclarationsForNode(this._program, _0x1cbcea, false, this._token);
          if (_0x367b.length === 0) {
            return false;
          }
          const _0x54b186 = new _0x1b3a2d.DocumentSymbolCollector(this._program, [_0x1cbcea.d.value], _0x367b, _0x5150d6.parseTree, this._token, _0x5a0899);
          for (const _0x47e8f7 of _0x54b186.collect()) {
            if (_0x50ed60.isImportModuleName(_0x47e8f7.node) || _0x50ed60.isImportAlias(_0x47e8f7.node) || _0x50ed60.isFromImportModuleName(_0x47e8f7.node) || _0x50ed60.isFromImportName(_0x47e8f7.node) || _0x50ed60.isFromImportAlias(_0x47e8f7.node)) {
              continue;
            }
            if (!_0x26ab6b.some(_0xf8a222 => _0x236ae2.TextRange.containsRange(_0xf8a222, _0x47e8f7.node))) {
              return false;
            }
          }
          return true;
        }
        _renameFolderReferences(_0x10efd2) {
          const _0x5dae4f = new _0x1b3a2d.DocumentSymbolCollector(this._program, [this.lastModuleName], this.declarations, _0x10efd2.parserOutput.parseTree, this._token, _0x5a0899);
          for (const _0x4f3ddb of _0x5dae4f.collect()) {
            this._textEditTracker.addEditWithTextRange(_0x10efd2, _0x4f3ddb.range, this._newLastModuleName);
          }
        }
        _renameModuleReferences(_0x38ea95) {
          const _0xe1adf = new _0x1b3a2d.DocumentSymbolCollector(this._program, [this.lastModuleName], this.declarations, _0x38ea95.parserOutput.parseTree, this._token, _0x5a0899);
          const _0x1b4491 = _0xe1adf.collect();
          this._updateModuleReferences(_0x38ea95, _0x1b4491);
          this._updateRelativeModuleNamePath(_0x38ea95, _0x1b4491);
        }
        _updateRelativeModuleNamePath(_0x191997, _0x2e70ff) {
          const _0xeec54e = _0x36be6d.getFileInfo(_0x191997.parserOutput.parseTree).fileUri;
          if (!_0xeec54e.equals(this._moduleUri)) {
            return;
          }
          let _0x286147;
          for (const _0x5acb54 of this._getNewRelativeModuleNamesForFileMoved(_0xeec54e, _0x100478.collect(_0x191997.parserOutput.parseTree).filter(_0x384f33 => !_0x2e70ff.some(_0x2158dd => _0x236ae2.TextRange.containsRange(_0x384f33.parent, _0x2158dd.node))))) {
            this._textEditTracker.addEditWithTextRange(_0x191997, _0x5acb54.moduleName, _0x5acb54.newModuleName);
            if (!_0x5acb54.itemsToMove) {
              continue;
            }
            const _0x12aa64 = _0x5acb54.moduleName.parent;
            for (const _0x3a5399 of _0x5acb54.itemsToMove) {
              this._textEditTracker.deleteImportName(_0x191997, _0x3a5399);
            }
            _0x286147 = _0x286147 ?? _0xccbf33.getTopLevelImports(_0x191997.parserOutput.parseTree, false);
            this._textEditTracker.addOrUpdateImport(_0x191997, _0x286147, {
              name: this._newModuleName,
              nameForImportFrom: _0xccbf33.getRelativeModuleName(this._program.fileSystem, this._newModuleUri, this._newModuleUri, this._program.configOptions, false, true)
            }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), _0x5acb54.itemsToMove.map(_0x3dafec => {
              var _0x307420;
              return {
                name: _0x3dafec.d.name.d.value,
                alias: (_0x307420 = _0x3dafec.d.alias) === null || _0x307420 === undefined ? undefined : _0x307420.d.value
              };
            }), {
              currentFromImport: _0x12aa64,
              originalModuleName: this._moduleName
            });
          }
        }
        _updateModuleReferences(_0x3b5077, _0x426909) {
          var _0x580352;
          var _0xb220c2;
          const _0x5cba73 = _0x36be6d.getFileInfo(_0x3b5077.parserOutput.parseTree).fileUri;
          let _0x280a47;
          for (const _0x52680e of _0x426909) {
            const _0x1477f6 = _0x52680e.node;
            if (_0x1477f6.nodeType === 49) {
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              continue;
            }
            if (_0x50ed60.isImportModuleName(_0x1477f6)) {
              if (!_0x50ed60.isLastNameOfModuleName(_0x1477f6)) {
                continue;
              }
              const _0x3e83f7 = _0x50ed60.getFirstAncestorOrSelfOfKind(_0x1477f6, 37);
              if (_0x3e83f7.d.nameParts.length === 1 && _0x3e83f7.parent?.nodeType === 24 && !_0x3e83f7.parent.d.alias && this._newModuleNames.length > 1) {
                this._aliasIntroduced.add(_0x3e83f7.parent);
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x3e83f7, this._newModuleName + ' as ' + this._newLastModuleName);
                continue;
              }
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x3e83f7, this._newModuleName);
              continue;
            }
            if (_0x50ed60.isImportAlias(_0x1477f6)) {
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              continue;
            }
            if (_0x50ed60.isFromImportModuleName(_0x1477f6)) {
              if (!_0x50ed60.isLastNameOfModuleName(_0x1477f6)) {
                continue;
              }
              const _0x16e922 = _0x50ed60.getFirstAncestorOrSelfOfKind(_0x1477f6, 37);
              const _0x34a7fc = _0x16e922.parent;
              const _0x4cc5c0 = [];
              const _0x29ddc5 = [];
              for (const _0x323445 of _0x34a7fc.d.imports) {
                if (this._isExportedSymbol(_0x323445.d.name)) {
                  _0x4cc5c0.push(_0x323445);
                } else {
                  _0x29ddc5.push(_0x323445);
                }
              }
              if (_0x29ddc5.length === 0) {
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x16e922, this._getNewModuleName(_0x5cba73, _0x16e922.d.leadingDots > 0, false));
                continue;
              }
              if (_0x4cc5c0.length === 0) {
                continue;
              }
              if (_0x34a7fc.d.module.d.leadingDots > 0) {
                for (const _0x1a8767 of this._getNewRelativeModuleNamesForFileMoved(_0x5cba73, [_0x34a7fc.d.module])) {
                  this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x1a8767.moduleName, _0x1a8767.newModuleName);
                }
              }
              for (const _0x12ff7c of _0x4cc5c0) {
                this._textEditTracker.deleteImportName(_0x3b5077, _0x12ff7c);
              }
              _0x280a47 = _0x280a47 ?? _0xccbf33.getTopLevelImports(_0x3b5077.parserOutput.parseTree, false);
              this._textEditTracker.addOrUpdateImport(_0x3b5077, _0x280a47, {
                name: this._newModuleName
              }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), _0x4cc5c0.map(_0x3a8934 => {
                var _0x5f472c;
                const _0x37f3e6 = _0x426909.findIndex(_0x5dcdcf => _0x5dcdcf.node === _0x3a8934.d.name) >= 0 ? this._newLastModuleName : _0x3a8934.d.name.d.value;
                const _0x398171 = _0x426909.findIndex(_0x1d863b => _0x1d863b.node === _0x3a8934.d.alias) >= 0 ? this._newLastModuleName : (_0x5f472c = _0x3a8934.d.alias) === null || _0x5f472c === undefined ? undefined : _0x5f472c.d.value;
                return {
                  name: _0x37f3e6,
                  alias: _0x398171
                };
              }), {
                currentFromImport: _0x34a7fc,
                originalModuleName: this._moduleName
              });
              continue;
            }
            if (_0x50ed60.isFromImportName(_0x1477f6)) {
              if (this._textEditTracker.isNodeRemoved(_0x1477f6)) {
                continue;
              }
              const _0x3a395d = _0x1477f6.parent?.parent;
              const _0xfb437b = this._getNewModuleName(_0x5cba73, _0x3a395d.d.module.d.leadingDots > 0, true);
              if (this._isExportedSymbol(_0x1477f6)) {
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
                continue;
              }
              if (_0x3a395d.d.imports.length === 1) {
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x3a395d.d.module, _0xfb437b);
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              } else {
                const _0x4fc8b1 = _0x1477f6.parent;
                if (_0x3a395d.d.module.d.leadingDots > 0) {
                  for (const _0x54e22a of this._getNewRelativeModuleNamesForFileMoved(_0x5cba73, [_0x3a395d.d.module])) {
                    this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x54e22a.moduleName, _0x54e22a.newModuleName);
                  }
                }
                this._textEditTracker.deleteImportName(_0x3b5077, _0x4fc8b1);
                _0x280a47 = _0x280a47 ?? _0xccbf33.getTopLevelImports(_0x3b5077.parserOutput.parseTree, false);
                const _0x1bb690 = {
                  name: this._newLastModuleName,
                  alias: ((_0x580352 = _0x4fc8b1.d.alias) === null || _0x580352 === undefined ? undefined : _0x580352.d.value) === this.lastModuleName ? this._newLastModuleName : (_0xb220c2 = _0x4fc8b1.d.alias) === null || _0xb220c2 === undefined ? undefined : _0xb220c2.d.value
                };
                this._textEditTracker.addOrUpdateImport(_0x3b5077, _0x280a47, {
                  name: this._newModuleName,
                  nameForImportFrom: _0xfb437b
                }, _0xccbf33.getImportGroupFromModuleNameAndType(this._newModuleNameAndType), [_0x1bb690], {
                  currentFromImport: _0x3a395d,
                  originalModuleName: this._moduleName
                });
              }
              continue;
            }
            if (_0x50ed60.isFromImportAlias(_0x1477f6)) {
              if (this._textEditTracker.isNodeRemoved(_0x1477f6)) {
                continue;
              }
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              continue;
            }
            const _0x14a0c9 = _0x1b3a2d.DocumentSymbolCollector.getDeclarationsForNode(this._program, _0x1477f6, false, this._token).filter(_0x3d8785 => _0x1c4799.isAliasDeclaration(_0x3d8785));
            if (this._onlyNameChanged) {
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              continue;
            }
            if (_0x14a0c9 === null || _0x14a0c9 === undefined ? undefined : _0x14a0c9.some(_0x5a3b96 => !_0x5a3b96.usesLocalName && (!_0x5a3b96.node || _0x5a3b96.node.nodeType === 24) && !this._aliasIntroduced.has(_0x5a3b96.node))) {
              const _0x1cd0ce = _0x50ed60.getDottedNameWithGivenNodeAsLastName(_0x1477f6);
              if (_0x1cd0ce.parent?.nodeType !== 35) {
                this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x1cd0ce, this._newModuleName);
                continue;
              }
              const _0x2758fd = this._evaluator.getDeclInfoForNameNode(_0x1cd0ce.parent.d.member)?.decls;
              if (!_0x2758fd || _0x2758fd.length === 0) {
                continue;
              }
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x1cd0ce, this._newModuleName);
              continue;
            }
            if (_0x52680e.node.d.value !== this._newLastModuleName) {
              this._textEditTracker.addEditWithTextRange(_0x3b5077, _0x52680e.range, this._newLastModuleName);
              continue;
            }
          }
        }
        _getNewRelativeModuleNamesForFileMoved(_0x3bec0e, _0x373c6a) {
          if (!_0x3bec0e.equals(this._moduleUri)) {
            return [];
          }
          const _0x3f1890 = _0x3bec0e.fileNameWithoutExtensions;
          const _0x52f896 = _0x3f1890 === '__init__';
          const _0x3f5158 = _0x3bec0e.getDirectory();
          const _0x464ee2 = [];
          for (const _0x1db2dc of _0x373c6a) {
            if (_0x1db2dc.d.leadingDots === 0) {
              continue;
            }
            const _0x3f2fc5 = this._getNewModuleNameInfoForFileMoved(_0x1db2dc, _0x52f896, _0x3f5158);
            if (!_0x3f2fc5) {
              continue;
            }
            const _0x41aa5b = _0xccbf33.getRelativeModuleName(this._program.fileSystem, _0x3f2fc5.src, _0x3f2fc5.dest, this._program.configOptions, false, true);
            if (!_0x41aa5b) {
              continue;
            }
            _0x464ee2.push({
              moduleName: _0x1db2dc,
              newModuleName: _0x41aa5b,
              itemsToMove: _0x3f2fc5.itemsToMove
            });
          }
          return _0x464ee2;
        }
        _getNewModuleNameInfoForFileMoved(_0x445bfd, _0x1fdee1, _0x3d4cc0) {
          const _0x463993 = _0x36be6d.getImportInfo(_0x445bfd);
          if (!_0x463993) {
            return undefined;
          }
          let _0x2dbe1c = _0x463993.resolvedUris[_0x463993.resolvedUris.length - 1];
          if (!_0x2dbe1c || _0x2dbe1c.isEmpty()) {
            if (_0x445bfd.d.nameParts.length === 0) {
              const _0x31b8e8 = _0xccbf33.getDirectoryLeadingDotsPointsTo(_0x3d4cc0, _0x445bfd.d.leadingDots);
              if (!_0x31b8e8) {
                return undefined;
              }
              _0x2dbe1c = _0x31b8e8.initPyUri;
            } else {
              return undefined;
            }
          }
          if (!this._moduleUri.equals(_0x2dbe1c) || !_0x1fdee1) {
            return {
              src: this._newModuleUri,
              dest: _0x2dbe1c
            };
          }
          const _0x4fc953 = [];
          const _0x3582a8 = [];
          for (const _0x5b695c of _0x445bfd.parent.d.imports) {
            if (this._isExportedSymbol(_0x5b695c.d.name)) {
              _0x4fc953.push(_0x5b695c);
            } else {
              _0x3582a8.push(_0x5b695c);
            }
          }
          if (_0x3582a8.length === 0) {
            return {
              src: this._newModuleUri,
              dest: this._newModuleUri
            };
          }
          if (_0x4fc953.length === 0) {
            return {
              src: this._newModuleUri,
              dest: this._moduleUri
            };
          }
          return {
            src: this._newModuleUri,
            dest: this._moduleUri,
            itemsToMove: [..._0x4fc953]
          };
        }
        _isExportedSymbol(_0x2bd426) {
          const _0x580877 = this._evaluator.getDeclInfoForNameNode(_0x2bd426)?.decls;
          if (!_0x580877) {
            return false;
          }
          return !_0x580877.some(_0xaceed7 => _0x1c4799.isAliasDeclaration(_0xaceed7) && _0xaceed7.submoduleFallback);
        }
        _getNewModuleName(_0x881b7e, _0x575339, _0x10ed45) {
          const _0x595bbe = _0x881b7e.equals(this._moduleUri) ? this._newModuleUri : _0x881b7e;
          const _0x37bfb2 = _0x575339 ? _0xccbf33.getRelativeModuleName(this._program.fileSystem, _0x595bbe, this._newModuleUri, this._program.configOptions, _0x10ed45, true) ?? this._newModuleName : this._newModuleName;
          if (_0x10ed45 && _0x37bfb2.endsWith(this._newLastModuleName)) {
            const _0x51845e = _0x37bfb2 === this._newLastModuleName ? 0 : _0x37bfb2.length > this._newLastModuleName.length + 1 ? _0x37bfb2[_0x37bfb2.length - this._newLastModuleName.length - 2] !== '.' ? 1 : 0 : 0;
            const _0x301088 = _0x37bfb2.length - this._newLastModuleName.length - _0x51845e;
            const _0x15bdd0 = _0x37bfb2.substr(0, _0x301088);
            if (_0x15bdd0.length > 0) {
              return _0x15bdd0;
            } else {
              return '.';
            }
          }
          return _0x37bfb2;
        }
      }
      exports.SymbolReferenceUpdator = _0x41d441;
      class _0x100478 extends _0x47dff8.ParseTreeWalker {
        constructor() {
          super(...arguments);
          this._result = [];
        }
        walk(_0x400caa) {
          if (_0xab25fd.isExpressionNode(_0x400caa)) {
            return;
          }
          super.walk(_0x400caa);
        }
        visitModuleName(_0x110bef) {
          this._result.push(_0x110bef);
          return false;
        }
        static collect(_0x52867d) {
          const _0x258d53 = new _0x100478();
          _0x258d53.walk(_0x52867d);
          return _0x258d53._result;
        }
      }
    },
    13234: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.TypeStringGenerator = undefined;
      const _0x4a3041 = require(83760);
      const _0x248fdd = require(47610);
      const _0x201342 = require(41557);
      const _0x12f78d = require(21024);
      const _0x278a2b = require(13259);
      const _0x106cf2 = require(19013);
      const _0x1ea6ba = require(30048);
      const _0x45a6eb = require(61904);
      const _0x397f32 = {
        enforcePythonSyntax: true,
        expandTypeAlias: false,
        omitTypeArgsIfUnknown: true,
        printUnknownWithAny: true
      };
      class _0x53bd63 {
        constructor(_0x3c9e3d, _0x3001f7, _0x4a3863, _0x4049bc) {
          this._program = _0x3c9e3d;
          this._fileUri = _0x3001f7;
          this._token = _0x4a3863;
          this._importAdder = _0x4049bc;
          this._options = this._getTypePrintOptions(!this._useTypeAlias);
          this._parseResults = this._program.getParseResults(this._fileUri);
          if (!this._parseResults) {
            return;
          }
          this._importStatements = _0x248fdd.getTopLevelImports(this._parseResults.parserOutput.parseTree);
        }
        getTypeString(_0x49257f) {
          if (!this._parseResults || !this._importStatements) {
            return this._program.evaluator.printType(_0x49257f, this._options);
          }
          if (_0x12f78d.isAny(_0x49257f) || _0x12f78d.isNever(_0x49257f) || _0x12f78d.isClass(_0x49257f)) {
            return this._getTypeString(_0x49257f);
          }
          if (_0x12f78d.isUnion(_0x49257f)) {
            return this._getUnionTypeString(_0x49257f);
          }
          return this._program.evaluator.printType(_0x49257f, this._options);
        }
        get _useTypeAlias() {
          if (this._importAdder) {
            return this._importAdder.options.useTypeAlias;
          } else {
            return false;
          }
        }
        _getUnionTypeString(_0x7eb13f) {
          if (this._program.configOptions.diagnosticRuleSet.pep604Printing) {
            const _0x559021 = [];
            _0x7eb13f.priv.subtypes.forEach(_0x14f7ff => {
              _0x559021.push(this.getTypeString(_0x14f7ff));
            });
            return _0x559021.join(' | ');
          }
          return this._getTypeString(_0x7eb13f);
        }
        _getTypeString(_0xed92a7) {
          const _0x30f883 = this._program.serviceProvider.tryGet(_0x1ea6ba.PylanceServiceKeys.declarationFinder);
          if (_0x30f883) {
            const _0x3662c1 = _0x30f883.getDeclarations(_0xed92a7, this._token, {
              useTypeAlias: this._useTypeAlias
            });
            for (const _0x23f604 of _0x3662c1) {
              const _0x3763d3 = this._tryGetExistingImportInfo(_0xed92a7, _0x23f604);
              return this._generateText(_0xed92a7, _0x23f604, _0x3763d3);
            }
          }
          return this._program.evaluator.printType(_0xed92a7, this._options);
        }
        _tryGetExistingImportInfo(_0x49b653, _0xab2784) {
          var _0x4e0b44;
          const _0x31691b = _0x106cf2.getOutermostEnclosingClassNameNode(_0xab2784.node);
          const _0x5486e9 = (_0x31691b === null || _0x31691b === undefined ? undefined : _0x31691b.d.value) ?? _0x4a3041.getNameFromDeclaration(_0xab2784);
          const _0x18c77d = (_0x4e0b44 = this._importAdder) === null || _0x4e0b44 === undefined ? undefined : _0x4e0b44.tryGetImportResult(this._importStatements, this._parseResults, this._token);
          if (_0x18c77d) {
            for (const _0x3a7c8f of _0x18c77d.applyData) {
              if (_0x3a7c8f.info.some(_0x36ed8d => _0x36ed8d.name === _0x5486e9 && !_0x36ed8d.alias)) {
                return undefined;
              }
            }
          }
          return _0x278a2b.tryGetExistingImportInfo(this._program, this._importStatements, _0x49b653, _0xab2784);
        }
        _generateText(_0x43ebee, _0x3487e5, _0x250ff1) {
          if (_0x250ff1?.module) {
            return _0x250ff1.module + '.' + this._getInsertionText(_0x43ebee, _0x3487e5, _0x250ff1.outermostName);
          }
          if (_0x250ff1) {
            return this._getInsertionText(_0x43ebee, _0x3487e5, _0x250ff1.outermostName);
          }
          return this._getTypeText(_0x43ebee, _0x3487e5);
        }
        _getTypeText(_0x36ddc2, _0x2a14e9) {
          const _0x1a4401 = this._program.evaluator.printType(_0x36ddc2, this._options);
          if (_0x12f78d.isClass(_0x36ddc2)) {
            const _0x3fe436 = _0x201342.getEnclosingClass(_0x2a14e9.node);
            if (_0x3fe436) {
              return _0x106cf2.getClassFullNameParts(_0x3fe436).join('.') + '.' + _0x1a4401;
            }
          }
          return _0x1a4401;
        }
        _getInsertionText(_0x2d6e76, _0x4a1698, _0x4a997e) {
          var _0x29d1cf;
          if (_0x12f78d.isClass(_0x2d6e76)) {
            const _0x4cf374 = _0x201342.getEnclosingClass(_0x4a1698.node);
            if (_0x4cf374) {
              const _0x1eb437 = _0x106cf2.getClassFullNameParts(_0x4cf374);
              _0x1eb437[0] = _0x4a997e;
              _0x4a997e = _0x1eb437.join('.') + '.' + _0x2d6e76.shared.name;
            }
            if (!_0x2d6e76.priv.typeArgs || _0x2d6e76.priv.typeArgs.length === 0) {
              return _0x4a997e;
            }
            if ((_0x29d1cf = _0x2d6e76.priv.typeArgs) === null || _0x29d1cf === undefined ? undefined : _0x29d1cf.every(_0x144dcd => _0x12f78d.isUnknown(_0x144dcd))) {
              return _0x4a997e;
            }
            const _0x337de6 = _0x2d6e76.priv.typeArgs.map(_0x31c539 => this.getTypeString(_0x31c539));
            return `${_0x4a997e}[${_0x337de6.join(', ')}]`;
          }
          if (_0x12f78d.isUnion(_0x2d6e76)) {
            if (_0x2d6e76.priv.subtypes.length === 0) {
              return _0x4a997e;
            }
            if (_0x2d6e76.priv.subtypes.every(_0x1365c4 => _0x12f78d.isUnknown(_0x1365c4))) {
              return _0x4a997e;
            }
            const _0x170b7e = _0x2d6e76.priv.subtypes.map(_0x5abf39 => this.getTypeString(_0x5abf39));
            if (!_0x45a6eb.isOptional(_0x2d6e76)) {
              return `${_0x4a997e}[${_0x170b7e.join(', ')}]`;
            }
            return `Optional${`[${_0x170b7e.filter(_0x15c5c7 => _0x15c5c7 !== 'None').join(', ')}]`}`;
          }
          return _0x4a997e;
        }
        _getTypePrintOptions(_0x5b06df) {
          return {
            ..._0x397f32,
            expandTypeAlias: _0x5b06df
          };
        }
      }
      exports.TypeStringGenerator = _0x53bd63;
    },
    44657: (module, exports) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CallArgumentNameModes = exports.MoveNewFileMarker = undefined;
      exports.MoveNewFileMarker = '*** new file ***';
      var _0xb3429b;
      (function (_0x1d7cbd) {
        _0x1d7cbd.off = 'off';
        _0x1d7cbd.partial = 'partial';
        _0x1d7cbd.all = 'all';
      })(_0xb3429b || (exports.CallArgumentNameModes = _0xb3429b = {}));
    },
    41976: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ChatBlockWorkspaceFactory = exports.VSCodeChatCodeBlockScheme = undefined;
      const _0x4d3898 = require(30741);
      exports.VSCodeChatCodeBlockScheme = 'vscode-chat-code-block';
      class _0x35dc8d {
        constructor(_0x50f099) {
          this._createService = _0x50f099;
        }
        tryCreate(_0x4b68de) {
          var _0x272112;
          if (!_0x4b68de.kinds.includes(_0x4d3898.WellKnownWorkspaceKinds.Default) || _0x4b68de.requestingUri?.scheme !== exports.VSCodeChatCodeBlockScheme) {
            return undefined;
          }
          const _0x32829b = _0x4b68de.requestingUri.root;
          const _0x3719f1 = [..._0x4b68de.kinds, _0x4d3898.WellKnownWorkspaceKinds.Limited, 'chatBlock'];
          const _0x5bd734 = {
            workspaceName: _0x4b68de.name,
            rootUri: _0x32829b,
            kinds: _0x3719f1,
            pythonPath: _0x4b68de.pythonPath,
            pythonPathKind: _0x4b68de.pythonPathKind,
            service: this._createService(_0x4b68de.name, _0x32829b, _0x3719f1),
            disableLanguageServices: false,
            disableTaggedHints: false,
            disableOrganizeImports: true,
            disableWorkspaceSymbol: true,
            isInitialized: _0x4d3898.createInitStatus(),
            searchPathsToWatch: [],
            pythonEnvironmentName: (_0x272112 = _0x4b68de.pythonPath) === null || _0x272112 === undefined ? undefined : _0x272112.toString()
          };
          return _0x5bd734;
        }
      }
      exports.ChatBlockWorkspaceFactory = _0x35dc8d;
    },
    86521: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.CopilotChatBlockWorkspaceFactory = exports.VSCodeCopilotChatCodeBlockScheme = undefined;
      const _0x13ea12 = require(30741);
      exports.VSCodeCopilotChatCodeBlockScheme = 'vscode-copilot-chat-code-block';
      class _0x53287b {
        constructor(_0x28eb6d) {
          this._createService = _0x28eb6d;
        }
        tryCreate(_0x4b8f26) {
          var _0x342386;
          if (!_0x4b8f26.kinds.includes(_0x13ea12.WellKnownWorkspaceKinds.Default) || _0x4b8f26.requestingUri?.scheme !== exports.VSCodeCopilotChatCodeBlockScheme) {
            return undefined;
          }
          const _0x22a0c4 = _0x4b8f26.requestingUri.root;
          const _0x14bb07 = [..._0x4b8f26.kinds, _0x13ea12.WellKnownWorkspaceKinds.Limited, 'copilotChatBlock'];
          const _0xa501d0 = {
            workspaceName: _0x4b8f26.name,
            rootUri: _0x22a0c4,
            kinds: _0x14bb07,
            pythonPath: _0x4b8f26.pythonPath,
            pythonPathKind: _0x4b8f26.pythonPathKind,
            service: this._createService(_0x4b8f26.name, _0x22a0c4, _0x14bb07),
            disableLanguageServices: false,
            disableTaggedHints: false,
            disableOrganizeImports: true,
            disableWorkspaceSymbol: true,
            isInitialized: _0x13ea12.createInitStatus(),
            searchPathsToWatch: [],
            pythonEnvironmentName: (_0x342386 = _0x4b8f26.pythonPath) === null || _0x342386 === undefined ? undefined : _0x342386.toString()
          };
          return _0xa501d0;
        }
      }
      exports.CopilotChatBlockWorkspaceFactory = _0x53287b;
    },
    58678: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.DefaultWorkspaceFactory = exports.DefaultWorkspacePath = undefined;
      const _0x3d2a24 = require(27113);
      const _0x107ec9 = require(30741);
      exports.DefaultWorkspacePath = '<default>';
      class _0x42cb2c {
        constructor(_0x2c67c6) {
          this._createService = _0x2c67c6;
        }
        tryCreate(_0xd2fdb3) {
          var _0x4e159f;
          if (!_0xd2fdb3.kinds.includes(_0x107ec9.WellKnownWorkspaceKinds.Default)) {
            return undefined;
          }
          const _0x41c84f = {
            workspaceName: _0xd2fdb3.name,
            rootUri: undefined,
            kinds: _0xd2fdb3.kinds,
            pythonPath: _0xd2fdb3.pythonPath,
            pythonPathKind: _0xd2fdb3.pythonPathKind,
            service: this._createService(_0xd2fdb3.name, _0x3d2a24.Uri.empty(), _0xd2fdb3.kinds),
            disableLanguageServices: false,
            disableTaggedHints: false,
            disableOrganizeImports: false,
            disableWorkspaceSymbol: false,
            isInitialized: _0x107ec9.createInitStatus(),
            searchPathsToWatch: [],
            pythonEnvironmentName: (_0x4e159f = _0xd2fdb3.pythonPath) === null || _0x4e159f === undefined ? undefined : _0x4e159f.toString()
          };
          return _0x41c84f;
        }
      }
      exports.DefaultWorkspaceFactory = _0x42cb2c;
    },
    82724: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.NotebookWorkspaceFactory = undefined;
      const _0x4c061e = require(27113);
      const _0x30f56b = require(30741);
      const _0x206523 = require(21368);
      class _0x54e965 {
        constructor(_0xd185aa) {
          this._createService = _0xd185aa;
        }
        tryCreate(_0x3f5f00) {
          var _0x2e0106;
          if (_0x4c061e.Uri.isEmpty(_0x3f5f00.pythonPath) || _0x3f5f00.pythonPathKind !== _0x206523.WorkspacePythonPathKind.Immutable) {
            return undefined;
          }
          const _0x186ffc = {
            workspaceName: _0x3f5f00.name,
            rootUri: _0x3f5f00.rootUri,
            kinds: _0x3f5f00.kinds,
            pythonPath: _0x3f5f00.pythonPath,
            pythonPathKind: _0x3f5f00.pythonPathKind,
            service: this._createService(_0x3f5f00.name, _0x3f5f00.rootUri, _0x3f5f00.kinds),
            disableLanguageServices: false,
            disableTaggedHints: false,
            disableOrganizeImports: false,
            disableWorkspaceSymbol: false,
            isInitialized: _0x30f56b.createInitStatus(),
            searchPathsToWatch: [],
            pythonEnvironmentName: (_0x2e0106 = _0x3f5f00.pythonPath) === null || _0x2e0106 === undefined ? undefined : _0x2e0106.toString()
          };
          return _0x186ffc;
        }
      }
      exports.NotebookWorkspaceFactory = _0x54e965;
    },
    83329: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.PylanceWorkspaceFactory = undefined;
      exports.renameWorkspace = _0x945aac;
      const _0x5eaa52 = require(27113);
      const _0x3afa2c = require(30741);
      const _0x362fdc = require(21368);
      const _0x5e981f = require(58678);
      const _0x3d6596 = require(43085);
      let _0x301583 = 0;
      function _0x945aac(_0x2c5161, _0x32e302) {
        _0x2c5161.workspaceName = _0x32e302;
        _0x2c5161.service.setServiceName(_0x32e302);
      }
      class _0x552f81 {
        constructor(_0x34526d, _0x1a9445, _0x1d571a, _0x429da0, _0x3dc578, _0x3f5fea, _0x385d05) {
          this._console = _0x34526d;
          this._isWeb = _0x1a9445;
          this._isPythonPathImmutable = _0x429da0;
          this._onWorkspaceCreated = _0x3dc578;
          this._onWorkspaceRemoved = _0x3f5fea;
          this._serviceProvider = _0x385d05;
          this._map = new Map();
          this._id = _0x301583++;
          this._console.log(`Pylance WorkspaceFactory ${this._id} created`);
          this._factories = new _0x3d6596.WorkspaceFactories(_0x1d571a);
        }
        handleInitialize(_0x4c72dc) {
          if (_0x4c72dc.workspaceFolders) {
            _0x4c72dc.workspaceFolders.forEach(_0x2af931 => {
              this._add({
                rootUri: _0x5eaa52.Uri.parse(_0x2af931.uri, this._serviceProvider),
                name: _0x2af931.name,
                pythonPathKind: _0x362fdc.WorkspacePythonPathKind.Mutable,
                kinds: [_0x3afa2c.WellKnownWorkspaceKinds.Regular]
              });
            });
          } else {
            if (_0x4c72dc.rootPath) {
              this._add({
                rootUri: _0x5eaa52.Uri.file(_0x4c72dc.rootPath, this._serviceProvider),
                name: _0x5eaa52.Uri.file(_0x4c72dc.rootPath, this._serviceProvider).fileNameWithoutExtensions,
                pythonPathKind: _0x362fdc.WorkspacePythonPathKind.Mutable,
                kinds: [_0x3afa2c.WellKnownWorkspaceKinds.Regular]
              });
            }
          }
        }
        handleWorkspaceFoldersChanged(_0x293218, _0x44ccaf) {
          _0x293218.removed.forEach(_0x52846e => {
            const _0x38b667 = _0x5eaa52.Uri.parse(_0x52846e.uri, this._serviceProvider);
            const _0x3efa41 = this.getNonDefaultWorkspaces().filter(_0x5119e7 => _0x5119e7.rootUri.equals(_0x38b667));
            _0x3efa41.forEach(_0x3cf43a => {
              this._remove(_0x3cf43a);
            });
          });
          _0x293218.added.forEach(_0x1467f5 => {
            const _0xbd3f0 = _0x5eaa52.Uri.parse(_0x1467f5.uri, this._serviceProvider);
            const _0x1eb29c = this.items().filter(_0x2c1d38 => _0xbd3f0.startsWith(_0x2c1d38.rootUri))[0];
            const _0xfae6ce = this._add({
              rootUri: _0xbd3f0,
              name: _0x1467f5.name,
              pythonPathKind: _0x362fdc.WorkspacePythonPathKind.Mutable,
              kinds: [_0x3afa2c.WellKnownWorkspaceKinds.Regular]
            });
            if (_0x1eb29c) {
              this._mimicOpenFiles(_0x1eb29c, _0xfae6ce, _0xb0f688 => _0xb0f688.startsWith(_0xbd3f0));
            }
          });
          const _0x5540cf = (_0x44ccaf === null || _0x44ccaf === undefined ? undefined : _0x44ccaf.filter(_0x356074 => !_0x293218.added.some(_0x255d62 => _0x255d62.uri === _0x356074.uri) && !_0x293218.removed.some(_0x3a13b5 => _0x3a13b5.uri === _0x356074.uri))) ?? [];
          _0x5540cf.forEach(_0x575d73 => {
            const _0x30344f = _0x5eaa52.Uri.parse(_0x575d73.uri, this._serviceProvider);
            const _0x3cd23a = this.getNonDefaultWorkspaces().filter(_0x499e3 => _0x499e3.rootUri.equals(_0x30344f) && _0x499e3.workspaceName !== _0x575d73.name);
            _0x3cd23a.forEach(_0x72f371 => _0x945aac(_0x72f371, _0x575d73.name));
          });
        }
        items() {
          return Array.from(this._map.values());
        }
        applyPythonPath(_0x38a5ca, _0x303ff3) {
          if (_0x38a5ca.pythonPathKind === _0x362fdc.WorkspacePythonPathKind.Mutable && !_0x5eaa52.Uri.isEmpty(_0x303ff3)) {
            const _0x289c80 = _0x38a5ca.pythonPath;
            _0x38a5ca.pythonPath = _0x303ff3;
            const _0x2b1615 = this._factories.getWorkspaceKey(_0x38a5ca);
            const _0x18b520 = this._map.get(_0x2b1615);
            if (_0x18b520) {
              _0x18b520.pythonPath = _0x303ff3;
            }
            if (_0x289c80 && !_0x5eaa52.Uri.equals(_0x303ff3, _0x289c80) && _0x18b520) {
              this._moveImmutableFilesToCorrectWorkspace(_0x289c80, _0x18b520);
            }
          }
          return _0x38a5ca.pythonPath;
        }
        clear() {
          this._map.forEach(_0x280f17 => {
            _0x280f17.isInitialized.resolve();
            _0x280f17.service.dispose();
          });
          this._map.clear();
          this._console.log(`WorkspaceFactory ${this._id} clear`);
        }
        hasMultipleWorkspaces(_0x204e28) {
          if (this._map.size === 0 || this._map.size === 1) {
            return false;
          }
          let _0x849962 = 0;
          for (const _0x22f912 of this._map) {
            if (!_0x204e28 || _0x22f912[1].kinds.some(_0x1bffc1 => _0x1bffc1 === _0x204e28)) {
              _0x849962++;
            }
            if (_0x849962 > 1) {
              return true;
            }
          }
          return false;
        }
        getContainingWorkspace(_0x2ac795, _0x43fc7a) {
          return this._getBestRegularWorkspace(this.getNonDefaultWorkspaces(_0x3afa2c.WellKnownWorkspaceKinds.Regular).filter(_0x4ba015 => _0x2ac795.startsWith(_0x4ba015.rootUri)), _0x43fc7a);
        }
        moveFiles(_0x228c48, _0x1fcc1e, _0x5c3ab9) {
          if (_0x1fcc1e === _0x5c3ab9) {
            return;
          }
          try {
            _0x228c48.forEach(_0x5c9ff3 => {
              var _0x234f30;
              const _0x416679 = _0x1fcc1e.service.backgroundAnalysisProgram.program.getSourceFileInfo(_0x5c9ff3);
              if (_0x416679) {
                const _0x2cf1e0 = _0x416679.sourceFile.getClientVersion() ?? null;
                const _0x459473 = _0x416679.sourceFile.getFileContent() || '';
                const _0x5ce54b = _0x416679.sourceFile.getIPythonMode();
                const _0x3b39bb = (_0x234f30 = _0x416679.chainedSourceFile) === null || _0x234f30 === undefined ? undefined : _0x234f30.sourceFile.getUri();
                _0x1fcc1e.service.setFileClosed(_0x5c9ff3, false);
                _0x5c3ab9.service.setFileOpened(_0x5c9ff3, _0x2cf1e0, _0x459473, _0x5ce54b, _0x3b39bb);
              }
            });
            this.removeUnused(_0x1fcc1e);
          } catch (_0x32b387) {
            this._console.error(_0x32b387.toString());
          }
        }
        getNonDefaultWorkspaces(_0x5a9d21) {
          const _0x507609 = [];
          this._map.forEach(_0x797690 => {
            if (!_0x797690.rootUri) {
              return;
            }
            if (_0x5a9d21 && !_0x797690.kinds.some(_0x393b34 => _0x393b34 === _0x5a9d21)) {
              return;
            }
            _0x507609.push(_0x797690);
          });
          return _0x507609;
        }
        async getWorkspaceForFile(_0x2d75d0, _0xd72d11) {
          await Promise.all(this.items().map(_0x290c5b => _0x290c5b.isInitialized.promise));
          const _0x6021c7 = await this._getOrCreateBestWorkspaceForFile(_0x2d75d0, _0xd72d11);
          await _0x6021c7.isInitialized.promise;
          return _0x6021c7;
        }
        getWorkspaceForFileSync(_0xa8c30a, _0x2141bd) {
          return this._getOrCreateBestWorkspaceFileSync(_0xa8c30a, _0x2141bd);
        }
        async getContainingWorkspacesForFile(_0x140aa2) {
          await Promise.all(this.items().map(_0x57e6c6 => _0x57e6c6.isInitialized.promise));
          const _0x1cbd47 = this.getContainingWorkspacesForFileSync(_0x140aa2);
          await Promise.all(_0x1cbd47.map(_0xbb28ad => _0xbb28ad.isInitialized.promise));
          return _0x1cbd47;
        }
        getContainingWorkspacesForFileSync(_0x2bdd0d) {
          let _0x456629 = this.items().filter(_0x14404e => _0x14404e.service.hasSourceFile(_0x2bdd0d));
          if (_0x456629.length === 0) {
            _0x456629.push(this._getOrCreateBestWorkspaceFileSync(_0x2bdd0d, undefined));
          }
          if (this._isPythonPathImmutable(_0x2bdd0d)) {
            _0x456629 = _0x456629.filter(_0x56911d => _0x56911d.pythonPathKind === _0x362fdc.WorkspacePythonPathKind.Immutable);
          }
          return _0x456629;
        }
        removeUnused(_0x3a0419) {
          if (_0x3a0419.service.getOpenFiles().filter(_0x242ea4 => this._isPythonPathImmutable(_0x242ea4)).length === 0 && _0x3a0419.pythonPathKind === _0x362fdc.WorkspacePythonPathKind.Immutable) {
            this._remove(_0x3a0419);
          }
        }
        async _moveImmutableFilesToCorrectWorkspace(_0x168107, _0x4738f7) {
          const _0x3fbbb4 = _0x4738f7.service.getOpenFiles().filter(_0x2831a6 => this._isPythonPathImmutable(_0x2831a6));
          const _0x8bb25d = this.items().find(_0x27dfb1 => _0x5eaa52.Uri.equals(_0x27dfb1.pythonPath, _0x4738f7.pythonPath) && _0x27dfb1 !== _0x4738f7);
          const _0x4098a9 = (_0x8bb25d === null || _0x8bb25d === undefined ? undefined : _0x8bb25d.service.getOpenFiles().filter(_0x51cf13 => this._isPythonPathImmutable(_0x51cf13))) ?? [];
          if (_0x3fbbb4.length > 0) {
            const _0x411f02 = this._getOrCreateBestWorkspaceFileSync(_0x3fbbb4[0], _0x168107);
            if (_0x411f02 !== _0x4738f7) {
              this.moveFiles(_0x3fbbb4, _0x4738f7, _0x411f02);
            }
          }
          if (_0x8bb25d) {
            this.moveFiles(_0x4098a9, _0x8bb25d, _0x4738f7);
            this.removeUnused(_0x8bb25d);
          }
        }
        _add(_0x3ecbed) {
          const _0x5b9b1c = _0x3ecbed.rootUri ?? _0x5eaa52.Uri.empty();
          if (!_0x3ecbed.kinds.includes(_0x3afa2c.WellKnownWorkspaceKinds.Default) && (!_0x5b9b1c.isLocal() || this._isWeb)) {
            _0x3ecbed.kinds = [..._0x3ecbed.kinds, _0x3afa2c.WellKnownWorkspaceKinds.Limited];
          }
          const _0x2f3f62 = this._factories.createWorkspace(_0x3ecbed);
          const _0x52c0d7 = this._factories.getWorkspaceKey(_0x2f3f62);
          this._remove(_0x2f3f62);
          this._console.log(`WorkspaceFactory ${this._id} add ${_0x52c0d7}`);
          this._map.set(_0x52c0d7, _0x2f3f62);
          this._onWorkspaceCreated(_0x2f3f62);
          return _0x2f3f62;
        }
        _remove(_0x3533ed) {
          const _0x311a56 = this._factories.getWorkspaceKey(_0x3533ed);
          const _0x469667 = this._map.get(_0x311a56);
          if (_0x469667) {
            _0x469667.isInitialized.resolve();
            this._onWorkspaceRemoved(_0x469667);
            _0x469667.service.dispose();
            this._console.log(`WorkspaceFactory ${this._id} remove ${_0x311a56}`);
            this._map.delete(_0x311a56);
          }
        }
        async _getOrCreateBestWorkspaceForFile(_0x4880b2, _0x110de1) {
          var _0x4912ec;
          let _0x4934e9 = await this._getBestWorkspaceForFileAndWaitForInitialize(_0x4880b2, _0x110de1);
          if (!_0x5eaa52.Uri.isEmpty(_0x110de1) && !((_0x4912ec = _0x4934e9.pythonPath) === null || _0x4912ec === undefined ? undefined : _0x4912ec.equals(_0x110de1))) {
            _0x4934e9 = this._createImmutableCopy(_0x4934e9, _0x110de1);
          }
          return _0x4934e9;
        }
        async _getBestWorkspaceForFileAndWaitForInitialize(_0x4719c8, _0xa568f7) {
          const _0x5b7a88 = 100;
          for (let _0x4d1f1e = 0; _0x4d1f1e < _0x5b7a88; ++_0x4d1f1e) {
            const _0x107515 = this._getBestWorkspaceForFile(_0x4719c8, _0xa568f7);
            await _0x107515.isInitialized.promise;
            const _0x39b1ca = this._getBestWorkspaceForFile(_0x4719c8, _0xa568f7);
            if (_0x107515 === _0x39b1ca) {
              return _0x107515;
            }
          }
          throw new Error(`Failed to get the best workspace after ${_0x5b7a88} attempts`);
        }
        _getOrCreateBestWorkspaceFileSync(_0x46f603, _0x239532) {
          var _0x38eda1;
          let _0x103a66 = this._getBestWorkspaceForFile(_0x46f603, _0x239532);
          if (!_0x5eaa52.Uri.isEmpty(_0x239532) && !((_0x38eda1 = _0x103a66.pythonPath) === null || _0x38eda1 === undefined ? undefined : _0x38eda1.equals(_0x239532))) {
            _0x103a66 = this._createImmutableCopy(_0x103a66, _0x239532);
          }
          return _0x103a66;
        }
        _mimicOpenFiles(_0x421f95, _0x27b610, _0x328893) {
          var _0x50981c;
          const _0x37af89 = _0x421f95.service.getOpenFiles().filter(_0x5a7947 => !this._isPythonPathImmutable(_0x5a7947));
          for (const _0x55b0ef of _0x37af89) {
            const _0x2a738b = _0x421f95.service.backgroundAnalysisProgram.program.getSourceFileInfo(_0x55b0ef);
            if (_0x2a738b && _0x328893(_0x55b0ef)) {
              const _0x4ea543 = _0x2a738b.sourceFile;
              const _0x29c25a = _0x4ea543.getFileContent();
              _0x27b610.service.setFileOpened(_0x55b0ef, _0x4ea543.getClientVersion() ?? null, _0x29c25a || '', _0x4ea543.getIPythonMode(), (_0x50981c = _0x2a738b.chainedSourceFile) === null || _0x50981c === undefined ? undefined : _0x50981c.sourceFile.getUri());
            }
          }
        }
        _createImmutableCopy(_0x32a6d3, _0x2cdbfc) {
          const _0x36d815 = this._add({
            rootUri: _0x32a6d3.rootUri,
            name: _0x32a6d3.workspaceName,
            pythonPath: _0x2cdbfc,
            pythonPathKind: _0x362fdc.WorkspacePythonPathKind.Immutable,
            kinds: _0x32a6d3.kinds
          });
          this._mimicOpenFiles(_0x32a6d3, _0x36d815, () => true);
          return _0x36d815;
        }
        _getBestWorkspaceForFile(_0x21a7ef, _0x21f94c) {
          var _0x464b02;
          let _0x3afdd3;
          const _0x3f2788 = this.items().filter(_0x1a5aca => {
            var _0x49eebf;
            return _0x1a5aca.service.isTracked(_0x21a7ef) || ((_0x49eebf = _0x1a5aca.rootUri) === null || _0x49eebf === undefined ? undefined : _0x49eebf.equals(_0x21a7ef));
          }).filter(_0x471497);
          _0x3afdd3 = this._getBestRegularWorkspace(_0x3f2788, _0x21f94c);
          const _0x16ac0c = this.getNonDefaultWorkspaces(_0x3afa2c.WellKnownWorkspaceKinds.Regular);
          if (_0x3afdd3 === undefined && _0x16ac0c.every(_0x1af137 => _0x1af137.rootUri.scheme === _0x16ac0c[0].rootUri.scheme && (_0x1af137.rootUri.scheme === _0x21a7ef.scheme || _0x21a7ef.isUntitled()) && _0x1af137.rootUri.equals(_0x16ac0c[0].rootUri))) {
            _0x3afdd3 = this._getBestRegularWorkspace(_0x16ac0c, _0x21f94c);
          }
          if (_0x3afdd3 === undefined || !((_0x464b02 = _0x3afdd3.pythonPath) === null || _0x464b02 === undefined ? undefined : _0x464b02.equals(_0x21f94c))) {
            _0x3afdd3 = this._getBestRegularWorkspace(_0x16ac0c.filter(_0xb6b100 => _0xb6b100.service.hasSourceFile(_0x21a7ef) && _0xb6b100.rootUri.scheme === _0x21a7ef.scheme), _0x21f94c) || _0x3afdd3;
          }
          if (_0x3afdd3 === undefined) {
            _0x3afdd3 = this._getOrCreateDefaultWorkspace(_0x21a7ef, _0x21f94c);
          }
          return _0x3afdd3;
        }
        _getOrCreateDefaultWorkspace(_0x28fd82, _0x242a4d) {
          let _0x48c3a1 = this._map.get(this._factories.getDefaultWorkspaceKey(_0x28fd82, _0x242a4d));
          if (!_0x48c3a1) {
            _0x48c3a1 = this._add({
              rootUri: undefined,
              name: _0x5e981f.DefaultWorkspacePath,
              pythonPath: _0x242a4d,
              pythonPathKind: !_0x5eaa52.Uri.isEmpty(_0x242a4d) ? _0x362fdc.WorkspacePythonPathKind.Immutable : _0x362fdc.WorkspacePythonPathKind.Mutable,
              kinds: [_0x3afa2c.WellKnownWorkspaceKinds.Default],
              requestingUri: _0x28fd82
            });
          }
          return _0x48c3a1;
        }
        _getLongestPathWorkspace(_0x3e9180) {
          const _0x1a3ec2 = _0x3e9180.reduce((_0xf8b9fd, _0x523a7b) => {
            if (!_0xf8b9fd) {
              return _0x523a7b.rootUri;
            }
            if (_0x523a7b.rootUri.getPathLength() > _0xf8b9fd.getPathLength()) {
              return _0x523a7b.rootUri;
            }
            return _0xf8b9fd;
          }, _0x5eaa52.Uri.empty());
          return _0x3e9180.find(_0x48727a => _0x48727a.rootUri.equals(_0x1a3ec2));
        }
        _getBestRegularWorkspace(_0x4b59e7, _0x18f9f5) {
          if (_0x4b59e7.length === 0) {
            return undefined;
          }
          if (_0x4b59e7.length === 1) {
            return _0x4b59e7[0];
          }
          if (!_0x5eaa52.Uri.isEmpty(_0x18f9f5)) {
            const _0x14f7f4 = _0x4b59e7.filter(_0x4f9e83 => _0x5eaa52.Uri.equals(_0x4f9e83.pythonPath, _0x18f9f5));
            if (_0x14f7f4.length > 0) {
              return this._getLongestPathWorkspace(_0x14f7f4);
            }
          }
          return this._getLongestPathWorkspace(_0x4b59e7);
        }
      }
      exports.PylanceWorkspaceFactory = _0x552f81;
      function _0x471497(_0x3d07a7) {
        return !!_0x3d07a7.rootUri;
      }
    },
    95069: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.RegularWorkspaceFactory = undefined;
      const _0x3fc130 = require(27113);
      const _0x2732cf = require(30741);
      const _0xde8eae = require(21368);
      class _0x44f947 {
        constructor(_0x5b0f3a) {
          this._createService = _0x5b0f3a;
        }
        tryCreate(_0x5c4e99) {
          var _0x866771;
          if (_0x3fc130.Uri.isEmpty(_0x5c4e99.rootUri) || !_0x5c4e99.kinds.includes(_0x2732cf.WellKnownWorkspaceKinds.Regular) || _0x5c4e99.pythonPathKind !== _0xde8eae.WorkspacePythonPathKind.Mutable) {
            return undefined;
          }
          const _0x2dc459 = {
            workspaceName: _0x5c4e99.name,
            rootUri: _0x5c4e99.rootUri,
            kinds: _0x5c4e99.kinds,
            pythonPath: _0x5c4e99.pythonPath,
            pythonPathKind: _0x5c4e99.pythonPathKind,
            service: this._createService(_0x5c4e99.name, _0x5c4e99.rootUri, _0x5c4e99.kinds),
            disableLanguageServices: false,
            disableTaggedHints: false,
            disableOrganizeImports: false,
            disableWorkspaceSymbol: false,
            isInitialized: _0x2732cf.createInitStatus(),
            searchPathsToWatch: [],
            pythonEnvironmentName: (_0x866771 = _0x5c4e99.pythonPath) === null || _0x866771 === undefined ? undefined : _0x866771.toString()
          };
          return _0x2dc459;
        }
      }
      exports.RegularWorkspaceFactory = _0x44f947;
    },
    43085: (module, exports, require) => {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.WorkspaceFactories = undefined;
      const _0x534c53 = require(27113);
      const _0x5991d6 = require(30741);
      const _0x3c443c = require(21368);
      const _0x4b2f4e = require(41976);
      const _0xb6680b = require(86521);
      const _0x21cb49 = require(58678);
      const _0x2d7a5d = require(82724);
      const _0x4b26ae = require(95069);
      class _0x5d66ae {
        constructor(_0x415d42) {
          this._factories = [new _0x4b26ae.RegularWorkspaceFactory(_0x415d42), new _0x2d7a5d.NotebookWorkspaceFactory(_0x415d42), new _0x4b2f4e.ChatBlockWorkspaceFactory(_0x415d42), new _0xb6680b.CopilotChatBlockWorkspaceFactory(_0x415d42), new _0x21cb49.DefaultWorkspaceFactory(_0x415d42)];
        }
        getDefaultWorkspaceKey(_0x17339b, _0x56ce06) {
          const _0x57014a = _0x17339b?.scheme === _0x4b2f4e.VSCodeChatCodeBlockScheme || _0x17339b?.scheme === _0xb6680b.VSCodeCopilotChatCodeBlockScheme;
          const _0x3e77be = _0x57014a ? _0x17339b.root : _0x21cb49.DefaultWorkspacePath;
          return _0x3e77be + ':' + (!_0x534c53.Uri.isEmpty(_0x56ce06) ? _0x56ce06 : _0x3c443c.WorkspacePythonPathKind.Mutable);
        }
        getWorkspaceKey(_0xbb96d1) {
          if (_0xbb96d1.kinds.includes(_0x5991d6.WellKnownWorkspaceKinds.Default)) {
            return this.getDefaultWorkspaceKey(_0xbb96d1.rootUri, _0xbb96d1.pythonPath);
          }
          return _0xbb96d1.rootUri + ':' + (_0xbb96d1.pythonPathKind === _0x3c443c.WorkspacePythonPathKind.Mutable ? _0xbb96d1.pythonPathKind : _0xbb96d1.pythonPath);
        }
        createWorkspace(_0x3773b5) {
          for (const _0x5a091e of this._factories) {
            const _0x425e8f = _0x5a091e.tryCreate(_0x3773b5);
            if (_0x425e8f) {
              return _0x425e8f;
            }
          }
          return this.createWorkspace(_0x3773b5);
        }
      }
      exports.WorkspaceFactories = _0x5d66ae;
    },
    85572: (module, exports, require) => {
      require(14852).main(false);
    },
    20181: module => {
      'use strict';

      module.exports = require('buffer');
    },
    35317: module => {
      'use strict';

      module.exports = require('child_process');
    },
    76982: module => {
      'use strict';

      module.exports = require('crypto');
    },
    24434: module => {
      'use strict';

      module.exports = require('events');
    },
    79896: module => {
      'use strict';

      module.exports = require('fs');
    },
    69278: module => {
      'use strict';

      module.exports = require('net');
    },
    86592: module => {
      'use strict';

      module.exports = require('node:inspector');
    },
    57975: module => {
      'use strict';

      module.exports = require('node:util');
    },
    70857: module => {
      'use strict';

      module.exports = require('os');
    },
    16928: module => {
      'use strict';

      module.exports = require('path');
    },
    82987: module => {
      'use strict';

      module.exports = require('perf_hooks');
    },
    23785: module => {
      'use strict';

      module.exports = require('readline');
    },
    2203: module => {
      'use strict';

      module.exports = require('stream');
    },
    87016: module => {
      'use strict';

      module.exports = require('url');
    },
    39023: module => {
      'use strict';

      module.exports = require('util');
    },
    11493: module => {
      'use strict';

      module.exports = require('v8');
    },
    28167: module => {
      'use strict';

      module.exports = require('worker_threads');
    },
    43106: module => {
      'use strict';

      module.exports = require('zlib');
    },
    23203: module => {
      'use strict';

      module.exports = {
        version: '2024.12.1',
        pyrightCommit: 'ce1325fc36ed42c4f30e0967e5e47c4bb82c88b2',
        pyrightVersion: '1.1.389'
      };
    },
    18721: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Přidat {importText}',
            searchImport: 'Hledat další shody importu'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Změnit pravopis na „{word}“'
          },
          ExtraPath: {
            addExtraPath: 'Přidat „{name}“ do extraPaths'
          },
          Extract: {
            method: 'Extrahovat metodu',
            variable: 'Extrahovat proměnnou'
          },
          FixAll: {
            runFixAll: 'Spustit pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implementovat všechny zděděné abstraktní třídy'
          },
          MoveSymbol: {
            commandTitle: 'Přesunout symbol',
            moveSymbolsTo: 'Přesunout symbol do...',
            moveSymbolsToNewFile: 'Přesunout symbol do nového souboru'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Odstranit všechny nepoužívané importy',
            removeUnusedImport: 'Odebrat nepoužitý import'
          },
          ToggleImportPath: {
            convertAllFormat: 'Převést všechny formáty importu',
            convertAllToAbsolutePath: 'Převést všechny importy na absolutní cestu',
            convertAllToRelativePath: 'Převést všechny importy na relativní cestu',
            convertToAbsolutePath: 'Převést na absolutní cestu',
            convertToRelativePath: 'Převést na relativní cestu'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Další informace o řešení importů',
            selectInterpreterTitle: 'Vyberte jiného interpreta',
            selectKernelTitle: 'Vyberte jiné jádro (kernel) Jupyter'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Data protokolování se uložila do umístění [{filePath}]({uri}). Další podrobnosti najdete v podokně výstupu Python Language Server.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Data profilace se uložila do umístění [{filePath}]({uri}). Další podrobnosti najdete v podokně výstupu „Python Language Server.“'
          },
          gotoOutputCommand: 'Zobrazit výstup'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Generovat Docstring pomocí Copilotu',
          implementAllInheritedAbstractClasseswithCopilot: 'Implementovat všechny zděděné abstraktní třídy pomocí Copilotu'
        },
        Diagnostic: {
          importResolveRedirect: 'Import {importName} se v prostředí {venv} nepovedlo najít.'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Generovat řetězec Docstring',
          description: 'Popis',
          docstringForName: 'Docstring pro {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Výchozí prostředí Pythonu',
          globalEnvironmentName: 'globální',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} soubory/souborů a {cellCount} buňky/buněk k analýze',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} soubory/souborů a 1 buňka k analýze',
          singularFileAndPluralCellsToAnalyze: '1 soubor a {cellCount} buňky/buněk k analýze',
          singularFileAndSingularCellToAnalyze: '1 soubor a 1 buňka k analýze',
          windowsStoreEnvironmentName: 'Microsoft Store'
        },
        PerformanceTracking: {
          button: 'Nahlásit problém',
          title: 'Zjistili jsme problém s výkonem rozšíření Pylance. Chcete nahlásit problém pomocí příkazu Pylance: Nahlásit problém?'
        },
        Pytest: {
          addTypeAnnotation: 'Přidat poznámku typu k názvu {name}',
          addTypeAnnotations: 'Přidat poznámky typu pro všechny odkazy fixture v tomto souboru',
          fixtureNotFound: '„{fixture}“ není známý testovací přípravek (fixture). Testovací metody by měly jako parametry přijímat pouze názvy testovacích přípravků (fixture) nebo parametrizace (parametrization).'
        },
        Refactoring: {
          moveFile: 'Chcete aktualizovat všechny odkazy na import pro {oldModuleName} na {newModuleName}?',
          moveFileAbsentSymbol: 'Nepovedlo se najít symbol, který se má přesunout.',
          moveFileDescription: 'Chcete aktualizovat všechny odkazy na import pro {oldModuleName} na {newModuleName}?',
          moveFileExtensionMismatch: 'Pokud chcete přesunout symbol, musí mít zdrojový soubor ({src}) a cílový soubor ({dest}) stejnou příponu souboru.',
          moveFileImportableOnly: 'Přesouvat se můžou jenom objekty, které se dají importovat z jiných modulů, jako jsou třídy nebo funkce.',
          moveFileInsertLocation: 'Nelze najít umístění pro vložení symbolu. Symbol se stejným názvem už může v {name} existovat.',
          moveFileLabel: 'Chcete aktualizovat všechny odkazy na import pro {oldModuleName} na {newModuleName}?',
          moveFileMissingInfo: 'Nelze najít informace o souboru pro {name}.',
          moveFileMultipleDeclarations: 'Tento symbol nelze přesunout, protože je deklarován vícekrát.',
          moveFileNotUserFile: 'Tento symbol nelze přesunout. Podporují se pouze symboly v souboru projektu nebo uživatele.',
          moveFilePrivateSymbol: '{name} se nedá přesunout, protože se jedná o privátní symbol.',
          moveFileSameFile: 'Symbol nelze přesunout do stejného souboru, ve kterém se právě nachází.',
          moveFileSimpleAssignmentsOnly: 'Tento výraz nejde přesunout. Podporují se pouze jednoduchá přiřazení, například proměnná, které se přiřazuje hodnota.',
          moveFileSymbolNotFound: 'Na pozici {position} nelze najít symbol.',
          moveFileUnsupportedSymbol: 'Tento symbol nelze přesunout. Podporují se pouze proměnné, funkce a třídy na úrovni modulu.'
        }
      };
    },
    52420: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '"{importText}" hinzufügen',
            searchImport: 'Nach zusätzlichen Importübereinstimmungen suchen'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Schreibweise in "{word}" ändern'
          },
          ExtraPath: {
            addExtraPath: '"{name}" zu extraPaths hinzufügen'
          },
          Extract: {
            method: 'Methode extrahieren',
            variable: 'Variable extrahieren'
          },
          FixAll: {
            runFixAll: 'Pylance "Alle korrigieren" ausführen'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Alle geerbten abstrakten Klassen implementieren'
          },
          MoveSymbol: {
            commandTitle: 'Symbol verschieben',
            moveSymbolsTo: 'Symbol verschieben nach...',
            moveSymbolsToNewFile: 'Symbol in neue Datei verschieben'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Alle nicht verwendeten Importe entfernen',
            removeUnusedImport: 'Nicht verwendete Importe entfernen'
          },
          ToggleImportPath: {
            convertAllFormat: 'Alle Importformate konvertieren',
            convertAllToAbsolutePath: 'Alle Importe in absoluten Pfad konvertieren',
            convertAllToRelativePath: 'Alle Importe in relativen Pfad konvertieren',
            convertToAbsolutePath: 'In absoluten Pfad konvertieren',
            convertToRelativePath: 'In relativen Pfad konvertieren'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Weitere Informationen zum Auflösen von Importen',
            selectInterpreterTitle: 'Anderen Interpreter auswählen',
            selectKernelTitle: 'Anderen Jupyter-kernel auswählen'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Protokollierungsdaten wurden unter [{filePath}]({uri}) gespeichert. Weitere Informationen finden Sie im Ausgabebereich „Python-Sprachserver“.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Profilerstellungsdaten wurden unter [{filePath}]({uri}) gespeichert. Weitere Informationen finden Sie im Ausgabebereich „Python-Sprachserver“.'
          },
          gotoOutputCommand: 'Ausgabe anzeigen'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Docstring mit Copilot generieren',
          implementAllInheritedAbstractClasseswithCopilot: 'Alle geerbten abstrakten Klassen mit Copilot implementieren'
        },
        Diagnostic: {
          importResolveRedirect: 'Der Import "{importName}" wurde in der Umgebung "{venv}" nicht gefunden.'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Docstring generieren',
          description: 'Beschreibung',
          docstringForName: 'Docstring für {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Python-Standardumgebung',
          globalEnvironmentName: 'global',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} Dateien und {cellCount} Zellen zu analysieren',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} Dateien und 1 Zeile zu analysieren',
          singularFileAndPluralCellsToAnalyze: '1 Datei und {cellCount} Zellen zu analysieren',
          singularFileAndSingularCellToAnalyze: '1 Datei und 1 Zelle zu analysieren',
          windowsStoreEnvironmentName: 'Microsoft Store'
        },
        PerformanceTracking: {
          button: 'Problem melden',
          title: 'Wir haben ein Leistungsproblem mit Pylance erkannt. Möchten Sie ein Problem mithilfe des Befehls „Pylance: Problem melden“ melden?'
        },
        Pytest: {
          addTypeAnnotation: 'Typanmerkung zu {name} hinzufügen',
          addTypeAnnotations: 'Typanmerkungen für alle fixture Verweise in dieser Datei hinzufügen',
          fixtureNotFound: '\'{fixture}\' ist keine bekannte Test-fixture. Testmethoden dürfen nur fixture- oder parametrization Namen als Parameter empfangen.'
        },
        Refactoring: {
          moveFile: 'Möchten Sie alle Importverweise für "{oldModuleName}" auf "{newModuleName}" aktualisieren?',
          moveFileAbsentSymbol: 'Es wurde kein zu verschiebendes Symbol gefunden.',
          moveFileDescription: 'Alle Importverweise für "{oldModuleName}" auf "{newModuleName}" aktualisieren?',
          moveFileExtensionMismatch: 'Um ein Symbol zu verschieben, müssen die Quelldatei („{src}“) und die Zieldatei („{dest}“) dieselbe Dateierweiterung aufweisen.',
          moveFileImportableOnly: 'Nur Objekte, die aus anderen Modulen importiert werden können, z. B. Klassen oder Funktionen, dürfen verschoben werden.',
          moveFileInsertLocation: 'Es wurde keine Position zum Einfügen des Symbols gefunden. In „{name}“ ist möglicherweise bereits ein Symbol mit diesem Namen vorhanden.',
          moveFileLabel: 'Alle Importverweise für "{oldModuleName}" auf "{newModuleName}" aktualisieren?',
          moveFileMissingInfo: 'Es wurden keine Dateiinformationen für „{name}“ gefunden.',
          moveFileMultipleDeclarations: 'Dieses Symbol kann nicht verschoben werden, da es mehrmals deklariert ist.',
          moveFileNotUserFile: 'Dieses Symbol kann nicht verschoben werden. Nur Symbole in einer Projekt- oder Benutzerdatei werden unterstützt.',
          moveFilePrivateSymbol: '„{name}“ kann nicht verschoben werden, da es sich um ein privates Symbol handelt.',
          moveFileSameFile: 'Ein Symbol kann nicht in dieselbe Datei verschoben werden, in der es sich aktuell befindet.',
          moveFileSimpleAssignmentsOnly: 'Dieser Ausdruck kann nicht verschoben werden. Es werden nur einfache Zuweisungen unterstützt, z. B. eine Variable, der ein Wert zugewiesen wird.',
          moveFileSymbolNotFound: 'An Position „{position}“ wurde kein Symbol gefunden.',
          moveFileUnsupportedSymbol: 'Dieses Symbol kann nicht verschoben werden. Nur Variablen, Funktionen und Klassen auf Modulebene werden unterstützt.'
        }
      };
    },
    76463: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Add "{importText}"',
            searchImport: 'Search for additional import matches'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Change spelling to "{word}"'
          },
          ExtraPath: {
            addExtraPath: {
              message: 'Add "{name}" to extraPaths',
              comment: '{Locked=\'extraPaths\'}'
            }
          },
          Extract: {
            method: 'Extract method',
            variable: 'Extract variable'
          },
          FixAll: {
            runFixAll: 'Run pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implement all inherited abstract classes'
          },
          MoveSymbol: {
            commandTitle: 'Move symbol',
            moveSymbolsTo: {
              message: 'Move symbol to...',
              comment: '{StrEnds=\'...\'}'
            },
            moveSymbolsToNewFile: 'Move symbol to new file'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Remove all unused imports',
            removeUnusedImport: 'Remove unused import'
          },
          ToggleImportPath: {
            convertAllFormat: 'Convert all import formats',
            convertAllToAbsolutePath: 'Convert all imports to absolute path',
            convertAllToRelativePath: 'Convert all imports to relative path',
            convertToAbsolutePath: 'Convert to absolute path',
            convertToRelativePath: 'Convert to relative path'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Learn more about resolving imports',
            selectInterpreterTitle: 'Select a different interpreter',
            selectKernelTitle: {
              message: 'Select a different Jupyter kernel',
              comment: '{Locked=\'Jupyter\',\'kernel\'}'
            }
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Logging data has been saved at [{filePath}]({uri}). See `Python Language Server` output pane for more detail.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Profiling data has been saved at [{filePath}]({uri}). See `Python Language Server` output pane for more detail.'
          },
          gotoOutputCommand: 'Show Output'
        },
        Copilot: {
          implementAllInheritedAbstractClasseswithCopilot: {
            message: 'Implement all inherited abstract classes with Copilot',
            comment: '{Locked=\'Copilot\'}'
          },
          GenerateDocstringWithCopilot: {
            message: 'Generate Docstring with Copilot',
            comment: '{Locked=\'Copilot\', \'Docstring\'}'
          }
        },
        Diagnostic: {
          importResolveRedirect: 'Import "{importName}" could not be found in the "{venv}" environment.'
        },
        DocstringTemplate: {
          description: 'Description',
          docstringForName: {
            message: 'Docstring for {name}',
            comment: '{Locked=\'Docstring\'}'
          },
          GenerateDocstring: {
            message: 'Generate Docstring',
            comment: '{Locked=\'Docstring\'}'
          }
        },
        Messages: {
          defaultPythonEnvironmentName: {
            message: 'Default Python Environment',
            comment: '{Locked=\'Python\'}'
          },
          globalEnvironmentName: 'global',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} files and {cellCount} cells to analyze',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} files and 1 cell to analyze',
          singularFileAndPluralCellsToAnalyze: '1 file and {cellCount} cells to analyze',
          singularFileAndSingularCellToAnalyze: '1 file and 1 cell to analyze',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Report issue',
          title: {
            message: 'We have detected a performance issue with Pylance. Would you like to file an issue using the `Pylance: Report Issue` command?',
            comment: '{Locked=\'Pylance\'}'
          }
        },
        Pytest: {
          addTypeAnnotation: 'Add type annotation to {name}',
          addTypeAnnotations: {
            message: 'Add type annotations for all fixture references in this file',
            comment: '{Locked=\'fixture\'}'
          },
          fixtureNotFound: {
            message: '\'{fixture}\' is not a known test fixture. Test methods should only receive fixture or parametrization names as parameters.',
            comment: '{Locked=\'fixture\',\'parametrization\'}'
          }
        },
        Refactoring: {
          moveFile: 'Do you want to update all import references for "{oldModuleName}" to "{newModuleName}"?',
          moveFileAbsentSymbol: 'Cannot find a symbol to move.',
          moveFileDescription: 'Update all import references for "{oldModuleName}" to "{newModuleName}"?',
          moveFileExtensionMismatch: 'To move a symbol, the source file ("{src}") and destination file ("{dest}") must have the same file extension.',
          moveFileImportableOnly: 'Only objects that can be imported from other modules, such as classes or functions, are allowed to be moved.',
          moveFileInsertLocation: 'Cannot find a location to insert the symbol. A symbol with the same name might already exist in "{name}".',
          moveFileLabel: 'Update all import references for "{oldModuleName}" to "{newModuleName}"?',
          moveFileMissingInfo: 'Cannot find file information for "{name}".',
          moveFileMultipleDeclarations: 'This symbol cannot be moved because it is declared multiple times.',
          moveFileNotUserFile: 'This symbol cannot be moved. Only symbols in a project or user file are supported.',
          moveFilePrivateSymbol: '"{name}" cannot be moved because it is a private symbol.',
          moveFileSameFile: 'A symbol cannot be moved to the same file where it is currently located.',
          moveFileSimpleAssignmentsOnly: 'This expression can\'t be moved. Only simple assignments, such as a variable being assigned a value, are supported.',
          moveFileSymbolNotFound: 'Cannot find a symbol at position "{position}".',
          moveFileUnsupportedSymbol: 'This symbol cannot be moved. Only variables, functions, and classes at the module level are supported.'
        }
      };
    },
    32535: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Agregar "{importText}"',
            searchImport: 'Buscar coincidencias de importación adicionales'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Cambiar la ortografía a "{word}"'
          },
          ExtraPath: {
            addExtraPath: 'Agregar "{name}" a extraPaths'
          },
          Extract: {
            method: 'Extraer método',
            variable: 'Extraer variable'
          },
          FixAll: {
            runFixAll: 'Ejecutar pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implementar todas las clases abstractas heredadas'
          },
          MoveSymbol: {
            commandTitle: 'Mover símbolo',
            moveSymbolsTo: 'Mover símbolo a...',
            moveSymbolsToNewFile: 'Mover el símbolo a un nuevo archivo'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Eliminar todas las importaciones no utilizadas',
            removeUnusedImport: 'Eliminar la importación no utilizada'
          },
          ToggleImportPath: {
            convertAllFormat: 'Convierte todos los formatos de importación',
            convertAllToAbsolutePath: 'Convertir todas las importaciones en rutas absolutas',
            convertAllToRelativePath: 'Convertir todas las importaciones en rutas relativas',
            convertToAbsolutePath: 'Convertir a ruta absoluta',
            convertToRelativePath: 'Convertir en ruta de acceso relativa'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Más información sobre cómo resolver importaciones',
            selectInterpreterTitle: 'Seleccionar otro intérprete',
            selectKernelTitle: 'Seleccionar otro kernel de Jupyter'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Los datos de registro se han guardado en [{filePath}]({uri}). Consulte el panel de salida `Servidor de lenguaje de Python` para obtener más detalles.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Los datos de generación de perfiles se han guardado en [{filePath}]({uri}). Consulte el panel de salida "Servidor de lenguaje de Python" para obtener más detalles.'
          },
          gotoOutputCommand: 'Mostrar salida'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Generar Docstring con Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Implementación de todas las clases abstractas heredadas con Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'No se encontraron "{importName}" de importación en el entorno de "{venv}".'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Generar Docstring',
          description: 'Descripción',
          docstringForName: 'Docstring para {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Entorno de Python predeterminado',
          globalEnvironmentName: 'global',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} archivos y {cellCount} celdas para analizar',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} archivos y 1 celda para analizar',
          singularFileAndPluralCellsToAnalyze: '1 archivo y {cellCount} celdas para analizar',
          singularFileAndSingularCellToAnalyze: '1 archivo y 1 celda para analizar',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Notificar el problema',
          title: 'Hemos detectado un problema de rendimiento con Pylance. ¿Desea notificar un problema mediante el comando `Pylance: Report Issue`?'
        },
        Pytest: {
          addTypeAnnotation: 'Agregar anotación de tipo a {name}',
          addTypeAnnotations: 'Agregar anotaciones de tipo para todas las referencias de fixture en este archivo',
          fixtureNotFound: '\'{fixture}\' no es un fixture de prueba conocido. Los métodos de prueba solo deben recibir nombres de fixture o parametrization como parámetros.'
        },
        Refactoring: {
          moveFile: '¿Desea actualizar todas las referencias de importación de "{oldModuleName}" a "{newModuleName}"?',
          moveFileAbsentSymbol: 'No se encuentra un símbolo para mover.',
          moveFileDescription: '¿Actualizar todas las referencias de importación de "{oldModuleName}" a "{newModuleName}"?',
          moveFileExtensionMismatch: 'Para mover un símbolo, el archivo de origen ("{src}") y el archivo de destino ("{dest}") deben tener la misma extensión de archivo.',
          moveFileImportableOnly: 'Solo se pueden mover los objetos que se pueden importar de otros módulos, como clases o funciones.',
          moveFileInsertLocation: 'No se encuentra una ubicación para insertar el símbolo. Es posible que ya exista un símbolo con el mismo nombre en "{name}".',
          moveFileLabel: '¿Actualizar todas las referencias de importación de "{oldModuleName}" a "{newModuleName}"?',
          moveFileMissingInfo: 'No se encuentra información de archivo para "{name}".',
          moveFileMultipleDeclarations: 'Este símbolo no se puede mover porque está declarado varias veces.',
          moveFileNotUserFile: 'No se puede mover este símbolo. Solo se admiten símbolos en un archivo de proyecto o de usuario.',
          moveFilePrivateSymbol: '"{name}" no se puede mover porque es un símbolo privado.',
          moveFileSameFile: 'No se puede mover un símbolo al mismo archivo en el que se encuentra actualmente.',
          moveFileSimpleAssignmentsOnly: 'Esta expresión no se puede mover. Solo se admiten asignaciones simples, como una variable a la que se asigna un valor.',
          moveFileSymbolNotFound: 'No se encuentra un símbolo en la posición "{position}".',
          moveFileUnsupportedSymbol: 'No se puede mover este símbolo. Solo se admiten variables, funciones y clases en el nivel de módulo.'
        }
      };
    },
    47011: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Ajouter « {importText} »',
            searchImport: 'Rechercher d’autres correspondances d’importation'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Changer l’orthographe en « {word} »'
          },
          ExtraPath: {
            addExtraPath: 'Ajouter "{name}" à extraPaths'
          },
          Extract: {
            method: 'Méthode d\'extraction',
            variable: 'Extraire la variable'
          },
          FixAll: {
            runFixAll: 'Exécutez pylance tout réparer'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implémenter toutes les classes abstraites héritées'
          },
          MoveSymbol: {
            commandTitle: 'Déplacer le symbole',
            moveSymbolsTo: 'Déplacer le symbole vers ...',
            moveSymbolsToNewFile: 'Déplacer le symbole vers un nouveau fichier'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Supprimer toutes les importations inutilisées',
            removeUnusedImport: 'Supprimer l’importation inutilisée'
          },
          ToggleImportPath: {
            convertAllFormat: 'Convertir tous les formats d’importation',
            convertAllToAbsolutePath: 'Convertir toutes les importations en chemin absolu',
            convertAllToRelativePath: 'Convertir toutes les importations en chemin d’accès relatif',
            convertToAbsolutePath: 'Convertir en chemin absolu',
            convertToRelativePath: 'Convertir en chemin relatif'
          },
          UnresolvedImports: {
            learnMoreTitle: 'En savoir plus sur la résolution des importations',
            selectInterpreterTitle: 'Sélectionnez un autre interprète',
            selectKernelTitle: 'Sélectionnez un autre Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Les données de journalisation ont été enregistrées sur [{filePath}]({uri}). Pour obtenir plus d’informations, consultez le volet de sortie `Serveur de langage Python`.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Les données de profilage ont été enregistrées sur [{filePath}]({uri}). Pour plus d’informations, consultez le volet de sortie « Serveur de langage Python ».'
          },
          gotoOutputCommand: 'Afficher la sortie'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Générez une Docstring avec Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Implémenter toutes les classes abstraites héritées avec Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'L\'importation "{importName}" est introuvable dans l\'environnement "{venv}".'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Générer Docstring',
          description: 'Description',
          docstringForName: 'Docstring pour {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Environnement Python par défaut',
          globalEnvironmentName: 'global',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} fichiers et {cellCount} cellules à analyser',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} fichiers et 1 cellule à analyser',
          singularFileAndPluralCellsToAnalyze: '1 fichier et {cellCount} cellules à analyser',
          singularFileAndSingularCellToAnalyze: '1 fichier et 1 cellule à analyser',
          windowsStoreEnvironmentName: 'magasin microsoft'
        },
        PerformanceTracking: {
          button: 'Signaler un problème',
          title: 'Nous avons détecté un problème de performances avec Pylance. Voulez-vous signaler un problème en utilisant la commande `Pylance : signaler un problème` ?'
        },
        Pytest: {
          addTypeAnnotation: 'Ajouter une annotation de type à {name}',
          addTypeAnnotations: 'Ajouter des annotations de type pour toutes les références de fixture dans ce fichier',
          fixtureNotFound: '\'{fixture}\' is not a known test fixture. Test methods should only receive fixture or parametrization names as parameters.'
        },
        Refactoring: {
          moveFile: 'Voulez-vous mettre à jour toutes les références d’importation pour « {oldModuleName} » en « {newModuleName} » ?',
          moveFileAbsentSymbol: 'Symbole à déplacer introuvable.',
          moveFileDescription: 'Mettre à jour toutes les références d’importation pour « {oldModuleName} » sur « {newModuleName} » ?',
          moveFileExtensionMismatch: 'Pour déplacer un symbole, le fichier source (« {src} ») et le fichier de destination (« {dest} ») doivent présenter la même extension de fichier.',
          moveFileImportableOnly: 'Seuls les objets pouvant être importés à partir d’autres modules, tels que des classes, peuvent être déplacés.',
          moveFileInsertLocation: 'Impossible de trouver un emplacement où insérer le symbole. Un symbole portant le même nom existe peut-être déjà dans « {name} ».',
          moveFileLabel: 'Mettre à jour toutes les références d’importation pour « {oldModuleName} » sur « {newModuleName} » ?',
          moveFileMissingInfo: 'Impossible de trouver les informations de fichier pour « {name} ».',
          moveFileMultipleDeclarations: 'Impossible de déplacer ce symbole, car il est déclaré plusieurs fois.',
          moveFileNotUserFile: 'Impossible de déplacer ce symbole. Seuls les symboles d’un projet ou d’un fichier utilisateur sont pris en charge.',
          moveFilePrivateSymbol: '« {name} » ne peut pas être déplacé, car il s’agit d’un symbole privé.',
          moveFileSameFile: 'Un symbole ne peut pas être déplacé vers le même fichier dans lequel il est actuellement.',
          moveFileSimpleAssignmentsOnly: 'Impossible de déplacer cette expression. Seules les affectations simples, telles qu’une variable à laquelle une valeur est attribuée, sont prises en charge.',
          moveFileSymbolNotFound: 'Symbole introuvable à la position « {position} ».',
          moveFileUnsupportedSymbol: 'Impossible de déplacer ce symbole. Seules les variables, fonctions et classes au niveau du module sont prises en charge.'
        }
      };
    },
    94814: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Aggiungi "{importText}"',
            searchImport: 'Cercare corrispondenze di importazione aggiuntive'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Cambiare ortografia in "{word}"'
          },
          ExtraPath: {
            addExtraPath: 'Aggiungi "{name}" a extraPaths'
          },
          Extract: {
            method: 'Estrai il metodo',
            variable: 'Estrarre variabile'
          },
          FixAll: {
            runFixAll: 'Esegui correggi tutto di pylance'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implementare tutte le classi astratte ereditate'
          },
          MoveSymbol: {
            commandTitle: 'Spostare simbolo',
            moveSymbolsTo: 'Sposta simbolo in...',
            moveSymbolsToNewFile: 'Spostare il simbolo in un nuovo file'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Rimuovere tutte le importazioni inutilizzate',
            removeUnusedImport: 'Rimuovere importazioni inutilizzate'
          },
          ToggleImportPath: {
            convertAllFormat: 'Convertire tutti i formati di importazione',
            convertAllToAbsolutePath: 'Converte tutte le importazioni in percorso assoluto',
            convertAllToRelativePath: 'Convertire tutte le importazioni in percorso relativo',
            convertToAbsolutePath: 'Convertire in percorso assoluto',
            convertToRelativePath: 'Converti in percorso relativo'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Altre informazioni sulla risoluzione delle importazioni',
            selectInterpreterTitle: 'Selezionare un interprete diverso',
            selectKernelTitle: 'Selezionare un kernel Jupyter diverso'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'I dati di registrazione sono stati salvati in [{filePath}]({uri}). Per altri dettagli, vedere il riquadro di output del server di linguaggio Python.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'I dati di profilatura sono stati salvati in [{filePath}]({uri}). Per altri dettagli, vedere il riquadro di output del server di linguaggio Python.'
          },
          gotoOutputCommand: 'Mostra output'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Genera Docstring con Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Implementare tutte le classi astratte ereditate con Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'Impossibile trovare l’importazione "{importName}" nell\'ambiente "{venv}".'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Genera Docstring',
          description: 'Descrizione',
          docstringForName: 'Docstring per {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Ambiente Python predefinito',
          globalEnvironmentName: 'globale',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} file e {cellCount} celle da analizzare',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} file e 1 cella da analizzare',
          singularFileAndPluralCellsToAnalyze: '1 file e {cellCount} celle da analizzare',
          singularFileAndSingularCellToAnalyze: '1 file e 1 cella da analizzare',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Segnala problema',
          title: 'È stato rilevato un problema di prestazioni per Pylance. Segnalare un problema usando il comando \'Pylance: Report Issue\'?'
        },
        Pytest: {
          addTypeAnnotation: 'Aggiungi l’annotazione di tipo a {name}',
          addTypeAnnotations: 'Aggiungere annotazioni di tipo per tutti i riferimenti alle fixture in questo file',
          fixtureNotFound: '`{fixture}` non è una fixture di test nota. I metodi di test devono ricevere come parametri solo nomi di fixture o di parametrization.'
        },
        Refactoring: {
          moveFile: 'Aggiornare tutti i riferimenti all\'importazione per "{oldModuleName}" a "{newModuleName}"?',
          moveFileAbsentSymbol: 'Impossibile trovare un simbolo da spostare.',
          moveFileDescription: 'Aggiornare tutti i riferimenti all\'importazione per "{oldModuleName}" a "{newModuleName}"?',
          moveFileExtensionMismatch: 'Per spostare un simbolo, il file di origine ("{src}") e il file di destinazione ("{dest}") devono avere la stessa estensione di file.',
          moveFileImportableOnly: 'È possibile spostare solo gli oggetti che possono essere importati da altri moduli, ad esempio classi o funzioni.',
          moveFileInsertLocation: 'Impossibile trovare una posizione in cui inserire il simbolo. Un simbolo con lo stesso nome potrebbe già esistere in "{name}".',
          moveFileLabel: 'Aggiornare tutti i riferimenti all\'importazione per "{oldModuleName}" a "{newModuleName}"?',
          moveFileMissingInfo: 'Impossibile trovare le informazioni sul file per "{name}".',
          moveFileMultipleDeclarations: 'Impossibile spostare questo simbolo perché è dichiarato più volte.',
          moveFileNotUserFile: 'Impossibile spostare questo simbolo. Sono supportati solo i simboli in un progetto o in un file utente.',
          moveFilePrivateSymbol: 'Impossibile spostare "{name}" perché è un simbolo privato.',
          moveFileSameFile: 'Non è possibile spostare un simbolo nello stesso file in cui si trova attualmente.',
          moveFileSimpleAssignmentsOnly: 'Questa espressione non può essere spostata. Sono supportate solo le assegnazioni semplici, ad esempio una variabile a cui viene assegnato un valore.',
          moveFileSymbolNotFound: 'Impossibile trovare un simbolo nella posizione "{position}".',
          moveFileUnsupportedSymbol: 'Impossibile spostare questo simbolo. Sono supportate solo variabili, funzioni e classi a livello di modulo.'
        }
      };
    },
    29150: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '"{importText}" の追加',
            searchImport: '一致するその他のインポートを検索する'
          },
          ChangeSpelling: {
            changeSpellingTo: 'スペルを "{word}" に変更する'
          },
          ExtraPath: {
            addExtraPath: 'extraPaths に "{name}" を追加する'
          },
          Extract: {
            method: 'メソッドを抽出する',
            variable: '変数の抽出'
          },
          FixAll: {
            runFixAll: 'Pylance fix all を実行する'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: '継承されたすべての抽象クラスを実装します'
          },
          MoveSymbol: {
            commandTitle: 'シンボルの移動',
            moveSymbolsTo: 'シンボルを以下に移動...',
            moveSymbolsToNewFile: 'シンボルを新しいファイルに移動する'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: '未使用のインポートをすべて削除する',
            removeUnusedImport: '未使用のインポートを削除する'
          },
          ToggleImportPath: {
            convertAllFormat: 'すべてのインポート形式を変換する',
            convertAllToAbsolutePath: 'すべてのインポートを絶対パスに変換する',
            convertAllToRelativePath: 'すべてのインポートを相対パスに変換する',
            convertToAbsolutePath: '絶対パスに変換する',
            convertToRelativePath: '相対パスに変換する'
          },
          UnresolvedImports: {
            learnMoreTitle: 'インポートの解決に関する詳細情報',
            selectInterpreterTitle: '別のインタープリターを選択する',
            selectKernelTitle: '別の Jupyter kernel を選択する'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'ログ データは [{filePath}]({uri}) に保存されました。詳細については、\'Python Language Server\' 出力ウィンドウを参照してください。'
          },
          ProfilingCommand: {
            profilingDataSaved: 'プロファイル データは [{filePath}]({uri}) に保存されました。詳細については、\'Python Language Server\' 出力ウィンドウを参照してください。'
          },
          gotoOutputCommand: '出力の表示'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Copilot で Docstring を生成する',
          implementAllInheritedAbstractClasseswithCopilot: 'Copilot を使用して継承されたすべての抽象クラスを実装します'
        },
        Diagnostic: {
          importResolveRedirect: 'インポート "{importName}" が "{venv}" 環境に見つかりませんでした。'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Docstring の生成',
          description: '説明',
          docstringForName: '{name} の Docstring'
        },
        Messages: {
          defaultPythonEnvironmentName: '既定の Python 環境',
          globalEnvironmentName: 'グローバル',
          pluralFilesAndPluralCellsToAnalyze: '分析する {fileCount} 個のファイルと {cellCount} 個のセル',
          pluralFilesAndSingularCellToAnalyze: '分析する {fileCount} 個ファイルと 1 個のセル',
          singularFileAndPluralCellsToAnalyze: '分析する 1 個のファイルと {cellCount} 個のセル',
          singularFileAndSingularCellToAnalyze: '分析する 1 個のファイルと 1 個のセル',
          windowsStoreEnvironmentName: 'Microsoft Store'
        },
        PerformanceTracking: {
          button: '問題の報告',
          title: 'Pylance でパフォーマンスの問題が検出されました。`Pylance: Report Issue` コマンドを使用して問題を報告しますか?'
        },
        Pytest: {
          addTypeAnnotation: '型の注釈を {name} に追加する',
          addTypeAnnotations: 'このファイル内のすべての fixture 参照の型注釈を追加します',
          fixtureNotFound: '\'{fixture}\' は既知のテスト fixture ではありません。テスト メソッドは、fixture 名または parametrization 名のみをパラメーターとして受け取る必要があります。'
        },
        Refactoring: {
          moveFile: '"{oldModuleName}" のすべてのインポート参照を "{newModuleName}" に更新しますか?',
          moveFileAbsentSymbol: '移動するシンボルが見つかりません。',
          moveFileDescription: '"{oldModuleName}" のすべてのインポート参照を "{newModuleName}" に更新しますか?',
          moveFileExtensionMismatch: 'シンボルを移動するには、移動元ファイル ("{src}") と移動先ファイル ("{dest}") のファイル拡張子が同じである必要があります。',
          moveFileImportableOnly: '他のモジュール (クラスまたは関数など) からインポートできるオブジェクトのみを移動できます。',
          moveFileInsertLocation: 'シンボルを挿入する場所が見つかりません。同じ名前のシンボルが既に "{name}" に存在している可能性があります。',
          moveFileLabel: '"{oldModuleName}" のすべてのインポート参照を "{newModuleName}" に更新しますか?',
          moveFileMissingInfo: '"{name}" のファイル情報が見つかりません。',
          moveFileMultipleDeclarations: 'このシンボルは複数回宣言されているため、移動できません。',
          moveFileNotUserFile: 'このシンボルは移動できません。プロジェクトまたはユーザー ファイル内のシンボルのみがサポートされています。',
          moveFilePrivateSymbol: '"{name}" はプライベート シンボルであるため、移動できません。',
          moveFileSameFile: 'シンボルは、現在配置されているファイルと同じファイルに移動できません。',
          moveFileSimpleAssignmentsOnly: 'この式は移動できません。値が割り当てられている変数など、単純な代入のみがサポートされています。',
          moveFileSymbolNotFound: '位置 "{position}" にシンボルが見つかりません。',
          moveFileUnsupportedSymbol: 'このシンボルは移動できません。モジュール レベルの変数、関数、クラスのみがサポートされています。'
        }
      };
    },
    14997: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '"{importText}" 추가',
            searchImport: '추가 가져오기 일치 항목 검색'
          },
          ChangeSpelling: {
            changeSpellingTo: '철자를 "{word}"(으)로 변경'
          },
          ExtraPath: {
            addExtraPath: 'extraPaths에 ‘{name}’ 추가'
          },
          Extract: {
            method: '메서드 추출',
            variable: '변수 추출'
          },
          FixAll: {
            runFixAll: '모두 Pylance 수정 실행'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: '상속된 추상 클래스 모두 구현'
          },
          MoveSymbol: {
            commandTitle: '기호 이동',
            moveSymbolsTo: '기호를 다음으로 이동...',
            moveSymbolsToNewFile: '기호를 새 파일로 이동'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: '사용되지 않는 가져오기 모두 제거',
            removeUnusedImport: '사용되지 않는 가져오기 제거'
          },
          ToggleImportPath: {
            convertAllFormat: '모든 가져오기 형식 변환',
            convertAllToAbsolutePath: '모든 가져오기를 절대 경로로 변환',
            convertAllToRelativePath: '모든 가져오기를 상대 경로로 변환',
            convertToAbsolutePath: '절대 경로로 변환',
            convertToRelativePath: '상대 경로로 변환'
          },
          UnresolvedImports: {
            learnMoreTitle: '가져오기 해결에 대해 자세히 알아보기',
            selectInterpreterTitle: '다른 인터프리터 선택',
            selectKernelTitle: '다른 Jupyter kernel 선택'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: '로깅 데이터가 [{filePath}]({uri})에 저장되었습니다. 자세한 내용은 \'Python 언어 서버\' 출력 창을 참조하세요.'
          },
          ProfilingCommand: {
            profilingDataSaved: '프로파일링 데이터가 [{filePath}]({uri})에 저장되었습니다. 자세한 내용은 \'Python 언어 서버\' 출력 창을 참조하세요.'
          },
          gotoOutputCommand: '출력 표시'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Copilot로 Docstring 생성',
          implementAllInheritedAbstractClasseswithCopilot: 'Copilot을 사용하여 상속된 모든 추상 클래스 구현'
        },
        Diagnostic: {
          importResolveRedirect: '"{venv}" 환경에서 "{importName}" 가져오기를 찾을 수 없습니다.'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Docstring 생성',
          description: '설명',
          docstringForName: '{name}의 Docstring'
        },
        Messages: {
          defaultPythonEnvironmentName: '기본 Python 환경',
          globalEnvironmentName: '글로벌',
          pluralFilesAndPluralCellsToAnalyze: '분석할 파일 {fileCount}개 및 셀 {cellCount}개',
          pluralFilesAndSingularCellToAnalyze: '분석할 파일 {fileCount}개 및 셀 1개',
          singularFileAndPluralCellsToAnalyze: '분석할 파일 1개 및 셀 {cellCount}개',
          singularFileAndSingularCellToAnalyze: '분석할 파일 1개 및 셀 1개',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: '문제 보고',
          title: 'Pylance에서 성능 문제가 발견되었습니다. \'Pylance: Report Issue\' 명령을 사용하여 문제를 제출하시겠습니까?'
        },
        Pytest: {
          addTypeAnnotation: '{name}에 형식 주석 추가',
          addTypeAnnotations: '이 파일의 모든 fixture 참조에 대한 형식 주석 추가',
          fixtureNotFound: '\'{fixture}\'은(는) 알려진 테스트 fixture가 아닙니다. 테스트 메서드는 fixture 또는 parametrization 이름만 매개 변수로 받아야 합니다.'
        },
        Refactoring: {
          moveFile: '"{oldModuleName}"에 대한 모든 가져오기 참조를 "{newModuleName}"(으)로 업데이트하시겠습니까?',
          moveFileAbsentSymbol: '이동할 기호를 찾을 수 없습니다.',
          moveFileDescription: '"{oldModuleName}"에 대한 모든 가져오기 참조를 "{newModuleName}"(으)로 업데이트하시겠습니까?',
          moveFileExtensionMismatch: '기호를 이동하려면 원본 파일("{src}") 및 대상 파일("{dest}")의 파일 확장명이 같아야 합니다.',
          moveFileImportableOnly: '클래스 또는 함수와 같은 다른 모듈에서 가져올 수 있는 개체만 이동할 수 있습니다.',
          moveFileInsertLocation: '기호를 삽입할 위치를 찾을 수 없습니다. 이름이 같은 기호가 "{name}"에 이미 있을 수 있습니다.',
          moveFileLabel: '"{oldModuleName}"에 대한 모든 가져오기 참조를 "{newModuleName}"(으)로 업데이트하시겠습니까?',
          moveFileMissingInfo: '"{name}"에 대한 파일 정보를 찾을 수 없습니다.',
          moveFileMultipleDeclarations: '이 기호는 여러 번 선언되었으므로 이동할 수 없습니다.',
          moveFileNotUserFile: '이 기호를 이동할 수 없습니다. 프로젝트 또는 사용자 파일의 기호만 지원됩니다.',
          moveFilePrivateSymbol: '"{name}"은 프라이빗 기호이므로 이동할 수 없습니다.',
          moveFileSameFile: '기호는 현재 있는 동일한 파일로 이동할 수 없습니다.',
          moveFileSimpleAssignmentsOnly: '이 식을 이동할 수 없습니다. 값이 할당되는 변수와 같은 간단한 할당만 지원됩니다.',
          moveFileSymbolNotFound: '"{position}" 위치에서 기호를 찾을 수 없습니다.',
          moveFileUnsupportedSymbol: '이 기호를 이동할 수 없습니다. 모듈 수준의 변수, 함수, 클래스만 지원됩니다.'
        }
      };
    },
    42235: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Dodaj element „{importText}”',
            searchImport: 'Wyszukaj dodatkowe dopasowania importów'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Zmień pisownię na „{word}”'
          },
          ExtraPath: {
            addExtraPath: 'Dodaj nazwę „{name}” do elementów extraPaths'
          },
          Extract: {
            method: 'Metoda wyodrębniania',
            variable: 'Wyodrębnij zmienną'
          },
          FixAll: {
            runFixAll: 'Uruchom funkcję „Napraw wszystko” rozszerzenia Pylance'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Zaimplementuj wszystkie dziedziczone klasy abstrakcyjne'
          },
          MoveSymbol: {
            commandTitle: 'Przenieś symbol',
            moveSymbolsTo: 'Przenieś symbol do...',
            moveSymbolsToNewFile: 'Przenieś symbol do nowego pliku'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Usuń wszystkie nieużywane importy',
            removeUnusedImport: 'Usuń nieużywany import'
          },
          ToggleImportPath: {
            convertAllFormat: 'Konwertuj wszystkie formaty importu',
            convertAllToAbsolutePath: 'Konwertuj wszystkie importy na ścieżkę bezwzględną',
            convertAllToRelativePath: 'Konwertuj wszystkie importy na ścieżkę względną',
            convertToAbsolutePath: 'Konwertuj na ścieżkę bezwzględną',
            convertToRelativePath: 'Konwertuj na ścieżkę względną'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Dowiedz się więcej o rozwiązywaniu importów',
            selectInterpreterTitle: 'Wybierz inny interpreter',
            selectKernelTitle: 'Select a different Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Dane rejestrowania zostały zapisane w ścieżce [{filePath}]({uri}). Zobacz okienko danych wyjściowych `Python Language Server`, aby uzyskać więcej szczegółów.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Dane profilowania zostały zapisane w ścieżce [{filePath}]({uri}). Zobacz okienko danych wyjściowych „Python Language Server”, aby uzyskać więcej szczegółów.'
          },
          gotoOutputCommand: 'Pokaż dane wyjściowe'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Wygeneruj Docstring za pomocą funkcji Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Zaimplementuj wszystkie dziedziczone klasy abstrakcyjne za pomocą funkcji Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'Nie można odnaleźć importu„{importName}” w środowisku „{venv}”.'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Generuj Docstring',
          description: 'Opis',
          docstringForName: 'Docstring for {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Bieżące środowisko Python',
          globalEnvironmentName: 'globalny',
          pluralFilesAndPluralCellsToAnalyze: 'Pliki ({fileCount}) i komórki ({cellCount}) do przeanalizowania',
          pluralFilesAndSingularCellToAnalyze: '1 komórka i następująca liczba plików do przeanalizowania: {fileCount}',
          singularFileAndPluralCellsToAnalyze: '1 plik i następująca liczba komórek do przeanalizowania: {cellCount}',
          singularFileAndSingularCellToAnalyze: '1 plik i 1 komórka do przeanalizowania',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Zgłoś problem',
          title: 'Wykryliśmy problem z wydajnością usługi Pylance. Czy chcesz zgłosić problem przy użyciu polecenia `Pylance: Problem z raportem`?'
        },
        Pytest: {
          addTypeAnnotation: 'Dodaj adnotację typu do elementu {name}',
          addTypeAnnotations: 'Add type annotations for all fixture references in this file',
          fixtureNotFound: '\'{fixture}\' is not a known test fixture. Test methods should only receive fixture or parametrization names as parameters.'
        },
        Refactoring: {
          moveFile: 'Czy chcesz aktualizować wszystkie odniesienia importu dla modułu „{oldModuleName}” do modułu „{newModuleName}”?',
          moveFileAbsentSymbol: 'Nie można odnaleźć symbolu do przeniesienia.',
          moveFileDescription: 'Aktualizować wszystkie odniesienia importu dla modułu „{oldModuleName}” do modułu „{newModuleName}”?',
          moveFileExtensionMismatch: 'Aby przenieść symbol, plik źródłowy („{src}”) i plik docelowy („{dest}”) muszą mieć to samo rozszerzenie pliku.',
          moveFileImportableOnly: 'Tylko obiekty, które mogą być importowane z innych modułów, takie jak klasy lub funkcje, mogą być przenoszone.',
          moveFileInsertLocation: 'Nie można odnaleźć lokalizacji do wstawienia symbolu. Symbol o tej samej nazwie może już istnieć w elemencie „{name}”.',
          moveFileLabel: 'Aktualizować wszystkie odniesienia importu dla modułu „{oldModuleName}” do modułu „{newModuleName}”?',
          moveFileMissingInfo: 'Nie można odnaleźć informacji o pliku dla „{name}”.',
          moveFileMultipleDeclarations: 'Nie można przenieść tego symbolu, ponieważ jest on zadeklarowany wiele razy.',
          moveFileNotUserFile: 'Nie można przenieść tego symbolu. Obsługiwane są tylko symbole w projekcie lub pliku użytkownika.',
          moveFilePrivateSymbol: 'Nie można przenieść elementu „{name}”, ponieważ jest to symbol prywatny.',
          moveFileSameFile: 'Nie można przenieść symbolu do tego samego pliku, w którym się obecnie znajduje.',
          moveFileSimpleAssignmentsOnly: 'Nie można przenieść tego wyrażenia. Obsługiwane są tylko proste przypisania, takie jak zmienna, do których jest przypisywana wartość.',
          moveFileSymbolNotFound: 'Nie można odnaleźć symbolu na pozycji „{position}”.',
          moveFileUnsupportedSymbol: 'Nie można przenieść tego symbolu. Obsługiwane są tylko zmienne, funkcje i klasy na poziomie modułu.'
        }
      };
    },
    6842: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Adicionar "{importText}"',
            searchImport: 'Procure correspondências de importação adicionais'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Alterar a ortografia para "{word}"'
          },
          ExtraPath: {
            addExtraPath: 'Adicionar "{name}" a extraPaths'
          },
          Extract: {
            method: 'Extrair método',
            variable: 'Extrair variável'
          },
          FixAll: {
            runFixAll: 'Executar fix all do Pylance'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Implementar todas as classes abstratas herdadas'
          },
          MoveSymbol: {
            commandTitle: 'Mover símbolo',
            moveSymbolsTo: 'Mover símbolo para...',
            moveSymbolsToNewFile: 'Mover símbolo para novo arquivo'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Excluir todas as importações não usadas',
            removeUnusedImport: 'Remover Importações não utilizadas'
          },
          ToggleImportPath: {
            convertAllFormat: 'Converter todos os formatos de importação',
            convertAllToAbsolutePath: 'Converter todas as importações em caminho absoluto',
            convertAllToRelativePath: 'Converter todas as importações em caminho relativo',
            convertToAbsolutePath: 'Converter em caminho absoluto',
            convertToRelativePath: 'Converter em caminho relativo'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Saiba mais sobre como resolver importações',
            selectInterpreterTitle: 'Selecionar um intérprete diferente',
            selectKernelTitle: 'Selecionar um kernel do Jupyter diferente'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Os dados de registro em log foram salvos em [{filePath}]({uri}). Consulte o painel de saída `Servidor de Linguagem Python` para obter mais detalhes.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Os dados de criação de perfil foram salvos em [{filePath}]({uri}). Consulte o painel de saída "Servidor de Linguagem Python" para obter mais detalhes.'
          },
          gotoOutputCommand: 'Mostrar Saída'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Gerar Docstring com o Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Implemente todas as classes abstratas herdadas com o Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'Não foi possível localizar a importação "{importName}" no ambiente "{venv}".'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Gerar Docstring',
          description: 'Descrição',
          docstringForName: 'Docstring para {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Ambiente do Python Padrão',
          globalEnvironmentName: 'global',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} arquivos e {cellCount} células para analisar',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} arquivos e 1 célula para analisar',
          singularFileAndPluralCellsToAnalyze: '1 arquivo e {cellCount} células para analisar',
          singularFileAndSingularCellToAnalyze: '1 arquivo e 1 célula para analisar',
          windowsStoreEnvironmentName: 'Microsoft Store'
        },
        PerformanceTracking: {
          button: 'Relatar problema',
          title: 'Detectamos um problema de desempenho com o Pylance. Deseja relatar um problema usando o comando `Pylance: Report Issue`?'
        },
        Pytest: {
          addTypeAnnotation: 'Adicionar anotação de tipo a {name}',
          addTypeAnnotations: 'Adicionar anotações de tipo para todas as referências de fixture de teste neste arquivo',
          fixtureNotFound: '\'{fixture}\' não é um fixture de teste conhecido. Os métodos de teste só devem receber nomes de fixture ou parametrization como parâmetros.'
        },
        Refactoring: {
          moveFile: 'Deseja atualizar todas as referências de importação de "{oldModuleName}" para "{newModuleName}"?',
          moveFileAbsentSymbol: 'Não é possível encontrar um símbolo para mover.',
          moveFileDescription: 'Atualizar todas as referências de importação de "{oldModuleName}" para "{newModuleName}"?',
          moveFileExtensionMismatch: 'Para mover um símbolo, o arquivo de origem ("{src}") e o arquivo de destino ("{dest}") devem ter a mesma extensão de arquivo.',
          moveFileImportableOnly: 'Somente objetos que podem ser importados de outros módulos, como classes ou funções, podem ser movidos.',
          moveFileInsertLocation: 'Não é possível encontrar um local para inserir o símbolo. Um símbolo com o mesmo nome pode já existir em "{name}".',
          moveFileLabel: 'Atualizar todas as referências de importação de "{oldModuleName}" para "{newModuleName}"?',
          moveFileMissingInfo: 'Não foi possível encontrar informações do arquivo "{name}".',
          moveFileMultipleDeclarations: 'Esse símbolo não pode ser movido porque foi declarado várias vezes.',
          moveFileNotUserFile: 'Esse símbolo não pode ser movido. Somente símbolos em um projeto ou arquivo de usuário são suportados.',
          moveFilePrivateSymbol: '"{name}" não pode ser movido porque é um símbolo privado.',
          moveFileSameFile: 'Um símbolo não pode ser movido para o mesmo arquivo onde está localizado atualmente.',
          moveFileSimpleAssignmentsOnly: 'Essa expressão não pode ser movida. Somente atribuições simples, como a atribuição de um valor a uma variável, são suportadas.',
          moveFileSymbolNotFound: 'Não é possível encontrar um símbolo na posição "{position}".',
          moveFileUnsupportedSymbol: 'Esse símbolo não pode ser movido. Somente variáveis, funções e classes no nível do módulo são suportadas.'
        }
      };
    },
    39452: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '[6EOWN][นั้Æðð "{ïmpørtTëxt}"Ấğ倪İЂҰक्นั้ढूँ]',
            searchImport: '[SEcEV][นั้§ëærçh før æððïtïøñæl ïmpørt mætçhësẤğ倪İЂҰक्र्तिृまนั้ढूँ]'
          },
          ChangeSpelling: {
            changeSpellingTo: '[S2wV8][นั้Çhæñgë spëllïñg tø "{wørð}"Ấğ倪İЂҰक्र्तिृนั้ढूँ]'
          },
          ExtraPath: {
            addExtraPath: '[vPbBT][นั้Æðð "{ñæmë}" tø extraPathsẤğ倪İЂҰक्र्นั้ढूँ]'
          },
          Extract: {
            method: '[6CJmj][นั้Ëxtræçt mëthøðẤğ倪İЂҰนั้ढूँ]',
            variable: '[yAhZ4][นั้Ëxtræçt værïæþlëẤğ倪İЂҰนั้ढूँ]'
          },
          FixAll: {
            runFixAll: '[kBeph][นั้Rµñ pÿlæñçë fïx ællẤğ倪İЂҰक्นั้ढूँ]'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: '[jVUSx][นั้Ïmplëmëñt æll ïñhërïtëð æþstræçt çlæssësẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]'
          },
          MoveSymbol: {
            commandTitle: '[tW1Sd][นั้Møvë sÿmþølẤğ倪İนั้ढूँ]',
            moveSymbolsTo: '[jnDNO][นั้Møvë sÿmþøl tøẤğ倪İЂҰนั้ढूँ]...',
            moveSymbolsToNewFile: '[i6bBJ][นั้Møvë sÿmþøl tø ñëw fïlëẤğ倪İЂҰक्र्นั้ढूँ]'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: '[ji2Ww][นั้Rëmøvë æll µñµsëð ïmpørtsẤğ倪İЂҰक्र्นั้ढूँ]',
            removeUnusedImport: '[a0K5t][นั้Rëmøvë µñµsëð ïmpørtẤğ倪İЂҰक्นั้ढूँ]'
          },
          ToggleImportPath: {
            convertAllFormat: '[Xa2Zv][นั้Çøñvërt æll ïmpørt førmætsẤğ倪İЂҰक्र्นั้ढूँ]',
            convertAllToAbsolutePath: '[rYYle][นั้Çøñvërt æll ïmpørts tø æþsølµtë pæthẤğ倪İЂҰक्र्तिृまนั้ढूँ]',
            convertAllToRelativePath: '[q94B6][นั้Çøñvërt æll ïmpørts tø rëlætïvë pæthẤğ倪İЂҰक्र्तिृまนั้ढूँ]',
            convertToAbsolutePath: '[kBV0h][นั้Çøñvërt tø æþsølµtë pæthẤğ倪İЂҰक्र्นั้ढूँ]',
            convertToRelativePath: '[GuQt9][นั้Çøñvërt tø rëlætïvë pæthẤğ倪İЂҰक्र्นั้ढूँ]'
          },
          UnresolvedImports: {
            learnMoreTitle: '[rCXA3][นั้£ëærñ mørë æþøµt rësølvïñg ïmpørtsẤğ倪İЂҰक्र्तिृまนั้ढूँ]',
            selectInterpreterTitle: '[v2LhD][นั้§ëlëçt æ ðïffërëñt ïñtërprëtërẤğ倪İЂҰक्र्तिृนั้ढूँ]',
            selectKernelTitle: '[HutRH][นั้§ëlëçt æ ðïffërëñt Jupyter kernelẤğ倪İЂҰक्र्तिृนั้ढूँ]'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: '[kNaJm][นั้£øggïñg ðætæ hæs þëëñ sævëð æt [{fïlëPæth}]({µrï}). §ëë `Pÿthøñ £æñgµægë §ërvër` øµtpµt pæñë før mørë ðëtæïl.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]'
          },
          ProfilingCommand: {
            profilingDataSaved: '[CpJI3][นั้Prøfïlïñg ðætæ hæs þëëñ sævëð æt [{fïlëPæth}]({µrï}). §ëë `Pÿthøñ £æñgµægë §ërvër` øµtpµt pæñë før mørë ðëtæïl.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]'
          },
          gotoOutputCommand: '[xTS0O][นั้§høw ØµtpµtẤğ倪İนั้ढूँ]'
        },
        Copilot: {
          GenerateDocstringWithCopilot: '[mMtFO][นั้Gëñërætë Docstring wïth CopilotẤğ倪İЂҰक्र्तिृนั้ढूँ]',
          implementAllInheritedAbstractClasseswithCopilot: '[jx3Bq][นั้Ïmplëmëñt æll ïñhërïtëð æþstræçt çlæssës wïth CopilotẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]'
        },
        Diagnostic: {
          importResolveRedirect: '[KGYYn][นั้Ïmpørt "{ïmpørtÑæmë}" çøµlð ñøt þë føµñð ïñ thë "{vëñv}" ëñvïrøñmëñt.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]'
        },
        DocstringTemplate: {
          GenerateDocstring: '[A6Ydq][นั้Gëñërætë DocstringẤğ倪İЂҰक्นั้ढूँ]',
          description: '[ab4Nk][นั้ÐësçrïptïøñẤğ倪İนั้ढूँ]',
          docstringForName: '[3r0Lu][นั้Docstring før {ñæmë}Ấğ倪İЂҰक्นั้ढूँ]'
        },
        Messages: {
          defaultPythonEnvironmentName: '[oW2bW][นั้Ðëfæµlt Python ËñvïrøñmëñtẤğ倪İЂҰक्र्นั้ढूँ]',
          globalEnvironmentName: '[H7OID][นั้gløþælẤğนั้ढूँ]',
          pluralFilesAndPluralCellsToAnalyze: '[EP1hA][นั้{fïlëÇøµñt} fïlës æñð {çëllÇøµñt} çëlls tø æñælÿzëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]',
          pluralFilesAndSingularCellToAnalyze: '[Tg5wq][นั้{fïlëÇøµñt} fïlës æñð 1 çëll tø æñælÿzëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]',
          singularFileAndPluralCellsToAnalyze: '[rwT7l][นั้1 fïlë æñð {çëllÇøµñt} çëlls tø æñælÿzëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]',
          singularFileAndSingularCellToAnalyze: '[Lt1RE][นั้1 fïlë æñð 1 çëll tø æñælÿzëẤğ倪İЂҰक्र्तिृนั้ढूँ]',
          windowsStoreEnvironmentName: '[0RfQa][นั้mïçrøsøft størëẤğ倪İЂҰนั้ढूँ]'
        },
        PerformanceTracking: {
          button: '[PhmTE][นั้Rëpørt ïssµëẤğ倪İЂนั้ढूँ]',
          title: '[6XFDs][นั้Wë hævë ðëtëçtëð æ përførmæñçë ïssµë wïth Pylance. Wøµlð ÿøµ lïkë tø fïlë æñ ïssµë µsïñg thë `Pylance: Rëpørt Ïssµë` çømmæñð?Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]'
        },
        Pytest: {
          addTypeAnnotation: '[fukwx][นั้Æðð tÿpë æññøtætïøñ tø {ñæmë}Ấğ倪İЂҰक्र्तिृนั้ढूँ]',
          addTypeAnnotations: '[ci8Cb][นั้Æðð tÿpë æññøtætïøñs før æll fixture rëfërëñçës ïñ thïs fïlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]',
          fixtureNotFound: '[sIWxh][นั้\'{fixture}\' ïs ñøt æ kñøwñ tëst fixture. Tëst mëthøðs shøµlð øñlÿ rëçëïvë fixture ør parametrization ñæmës æs pæræmëtërs.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]'
        },
        Refactoring: {
          moveFile: '[uzRfT][นั้Ðø ÿøµ wæñt tø µpðætë æll ïmpørt rëfërëñçës før "{ølðMøðµlëÑæmë}" tø "{ñëwMøðµlëÑæmë}"?Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]',
          moveFileAbsentSymbol: '[3hHvF][นั้Çæññøt fïñð æ sÿmþøl tø møvë.Ấğ倪İЂҰक्र्तिृนั้ढूँ]',
          moveFileDescription: '[qbSm6][นั้Üpðætë æll ïmpørt rëfërëñçës før "{ølðMøðµlëÑæmë}" tø "{ñëwMøðµlëÑæmë}"?Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]',
          moveFileExtensionMismatch: '[fpltY][นั้Tø møvë æ sÿmþøl, thë søµrçë fïlë ("{srç}") æñð ðëstïñætïøñ fïlë ("{ðëst}") mµst hævë thë sæmë fïlë ëxtëñsïøñ.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]',
          moveFileImportableOnly: '[CFuY4][นั้Øñlÿ øþjëçts thæt çæñ þë ïmpørtëð frøm øthër møðµlës, sµçh æs çlæssës ør fµñçtïøñs, ærë ælløwëð tø þë møvëð.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]',
          moveFileInsertLocation: '[BJOq2][นั้Çæññøt fïñð æ løçætïøñ tø ïñsërt thë sÿmþøl. Æ sÿmþøl wïth thë sæmë ñæmë mïght ælrëæðÿ ëxïst ïñ "{ñæmë}".Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]',
          moveFileLabel: '[TMnnY][นั้Üpðætë æll ïmpørt rëfërëñçës før "{ølðMøðµlëÑæmë}" tø "{ñëwMøðµlëÑæmë}"?Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]',
          moveFileMissingInfo: '[FctQ6][นั้Çæññøt fïñð fïlë ïñførmætïøñ før "{ñæmë}".Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]',
          moveFileMultipleDeclarations: '[Icw4C][นั้Thïs sÿmþøl çæññøt þë møvëð þëçæµsë ït ïs ðëçlærëð mµltïplë tïmës.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]',
          moveFileNotUserFile: '[3KMZz][นั้Thïs sÿmþøl çæññøt þë møvëð. Øñlÿ sÿmþøls ïñ æ prøjëçt ør µsër fïlë ærë sµppørtëð.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]',
          moveFilePrivateSymbol: '[7EZBN][นั้"{ñæmë}" çæññøt þë møvëð þëçæµsë ït ïs æ prïvætë sÿmþøl.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]',
          moveFileSameFile: '[QQSb2][นั้Æ sÿmþøl çæññøt þë møvëð tø thë sæmë fïlë whërë ït ïs çµrrëñtlÿ løçætëð.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]',
          moveFileSimpleAssignmentsOnly: '[4O7iP][นั้Thïs ëxprëssïøñ çæñ\'t þë møvëð. Øñlÿ sïmplë æssïgñmëñts, sµçh æs æ værïæþlë þëïñg æssïgñëð æ vælµë, ærë sµppørtëð.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]',
          moveFileSymbolNotFound: '[eCktQ][นั้Çæññøt fïñð æ sÿmþøl æt pøsïtïøñ "{pøsïtïøñ}".Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]',
          moveFileUnsupportedSymbol: '[cwXih][นั้Thïs sÿmþøl çæññøt þë møvëð. Øñlÿ værïæþlës, fµñçtïøñs, æñð çlæssës æt thë møðµlë lëvël ærë sµppørtëð.Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]'
        }
      };
    },
    53802: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Добавить "{importText}"',
            searchImport: 'Искать дополнительные совпадающие импортированные данные'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Изменить написание на "{word}"'
          },
          ExtraPath: {
            addExtraPath: 'Добавить "{name}" в extraPaths'
          },
          Extract: {
            method: 'Извлечь метод',
            variable: 'Извлечь переменную'
          },
          FixAll: {
            runFixAll: 'Выполнить pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Реализовать все унаследованные абстрактные классы'
          },
          MoveSymbol: {
            commandTitle: 'Переместить символ',
            moveSymbolsTo: 'Переместить символ в...',
            moveSymbolsToNewFile: 'Переместить символ в новый файл'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Удалите все неиспользуемые операции импорта',
            removeUnusedImport: 'Удалить неиспользованные операторы импорта'
          },
          ToggleImportPath: {
            convertAllFormat: 'Преобразовать все форматы импорта',
            convertAllToAbsolutePath: 'Изменить все операторы импорта так, чтобы они использовали абсолютный путь',
            convertAllToRelativePath: 'Изменить все операторы импорта так, чтобы они использовали относительный путь',
            convertToAbsolutePath: 'Преобразовать в абсолютный путь',
            convertToRelativePath: 'Преобразовать в относительный путь'
          },
          UnresolvedImports: {
            learnMoreTitle: 'Подробнее о решении проблем с импортом',
            selectInterpreterTitle: 'Выберите другой интерпретатор',
            selectKernelTitle: 'Выберите другое Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Данные ведения журнала сохранены в [{filePath}]({uri}). Дополнительные сведения см. в области вывода "Языковой сервер Python".'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Данные профилирования сохранены в [{filePath}]({uri}). Дополнительные сведения см. в области вывода "Языковой сервер Python".'
          },
          gotoOutputCommand: 'Показать вывод'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Создание Docstring с помощью Copilot',
          implementAllInheritedAbstractClasseswithCopilot: 'Реализовать все унаследованные абстрактные классы с помощью Copilot'
        },
        Diagnostic: {
          importResolveRedirect: 'Импорт "{importName}" не найден в среде "{venv}".'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Генерировать Docstring',
          description: 'Описание',
          docstringForName: 'Docstring для {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Среда Python по умолчанию',
          globalEnvironmentName: 'глобальная',
          pluralFilesAndPluralCellsToAnalyze: 'Файлы ({fileCount}) и ячейки ({cellCount}) для анализа',
          pluralFilesAndSingularCellToAnalyze: 'Файлы ({fileCount}) и 1 ячейка для анализа',
          singularFileAndPluralCellsToAnalyze: '1 файл и ячейки ({cellCount}) для анализа',
          singularFileAndSingularCellToAnalyze: '1 файл и 1 ячейка для анализа',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Сообщить о проблеме',
          title: 'Обнаружена проблема производительности с Pylance. Вы хотите отправить сообщение о проблеме с помощью команды "Pylance: сообщить о проблеме"?'
        },
        Pytest: {
          addTypeAnnotation: 'Добавление заметки с типом в {name}',
          addTypeAnnotations: 'Добавить заметки типа для всех fixture на средства в этом файле',
          fixtureNotFound: '"{fixture}" не является известным тестовым fixture тестирования. Методы тестирования должны получать в качестве параметров только имена fixture тестирования или parametrization.'
        },
        Refactoring: {
          moveFile: 'Хотите заменить все импортирующие ссылки на "{oldModuleName}" ссылками на "{newModuleName}"?',
          moveFileAbsentSymbol: 'Не удается найти символ для перемещения.',
          moveFileDescription: 'Заменить все ссылки на "{oldModuleName}" ссылками на "{newModuleName}"?',
          moveFileExtensionMismatch: 'Для перемещения символа исходный файл ("{src}") и конечный файл ("{dest}") должны иметь одинаковое расширение файла.',
          moveFileImportableOnly: 'Разрешено перемещать только объекты, которые можно импортировать из других модулей, таких как классы или функции.',
          moveFileInsertLocation: 'Не удается найти расположение для вставки символа. Возможно, символ с таким именем уже существует в "{name}".',
          moveFileLabel: 'Заменить все ссылки на "{oldModuleName}" ссылками на "{newModuleName}"?',
          moveFileMissingInfo: 'Не удается найти сведения о файле для "{name}".',
          moveFileMultipleDeclarations: 'Невозможно переместить этот символ, так как он объявлен несколько раз.',
          moveFileNotUserFile: 'Этот символ не может быть перемещен. Поддерживаются только символы в проекте или пользовательском файле.',
          moveFilePrivateSymbol: '"{name}" невозможно переместить, так как это закрытый символ.',
          moveFileSameFile: 'Символ нельзя переместить в тот же файл, где он находится в данный момент.',
          moveFileSimpleAssignmentsOnly: 'Невозможно переместить это выражение. Поддерживаются только простые присвоения, например присвоение значения переменной.',
          moveFileSymbolNotFound: 'Не удается найти символ в позиции "{position}".',
          moveFileUnsupportedSymbol: 'Этот символ не может быть перемещен. Поддерживаются только переменные, функции и классы на уровне модуля.'
        }
      };
    },
    49381: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: 'Şunu ekle: "{importText}"',
            searchImport: 'Ek içeri aktarma eşleşmelerini ara'
          },
          ChangeSpelling: {
            changeSpellingTo: 'Yazımı "{word}" olarak değiştir'
          },
          ExtraPath: {
            addExtraPath: 'extraPaths içine "{name}" ekle'
          },
          Extract: {
            method: 'Metodu ayıkla',
            variable: 'Değişken ayıkla'
          },
          FixAll: {
            runFixAll: 'Pylance tümünü düzeltmeyi çalıştır'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: 'Devralınan tüm soyut sınıfları uygula'
          },
          MoveSymbol: {
            commandTitle: 'Simgeyi taşı',
            moveSymbolsTo: 'Simgeyi taşı...',
            moveSymbolsToNewFile: 'Simgeyi yeni dosyaya taşı'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: 'Kullanılmayan tüm içeri aktarmaları kaldır',
            removeUnusedImport: 'Kullanılmayan içeri aktarmaları kaldır'
          },
          ToggleImportPath: {
            convertAllFormat: 'Tüm içeri aktarma biçimlerini dönüştür',
            convertAllToAbsolutePath: 'Tüm içeri aktarmaları mutlak yola dönüştür',
            convertAllToRelativePath: 'Tüm içeri aktarmaları göreli yola dönüştür',
            convertToAbsolutePath: 'Mutlak yola dönüştür',
            convertToRelativePath: 'Göreli yola dönüştür'
          },
          UnresolvedImports: {
            learnMoreTitle: 'İçeri aktarmaları çözümleme hakkında daha fazla bilgi edinin',
            selectInterpreterTitle: 'Farklı bir yorumlayıcı seçin',
            selectKernelTitle: 'Select a different Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: 'Günlük verileri [{filePath}]({uri}) konumuna kaydedildi. Daha fazla ayrıntı için `Python Dil Sunucusu` çıkış bölmesine bakın.'
          },
          ProfilingCommand: {
            profilingDataSaved: 'Profil oluşturma verileri [{filePath}]({uri}) konumuna kaydedildi. Daha fazla ayrıntı için `Python Language Server` çıkış bölmesine bakın.'
          },
          gotoOutputCommand: 'Çıkışı Göster'
        },
        Copilot: {
          GenerateDocstringWithCopilot: 'Copilot ile Docstring oluşturma',
          implementAllInheritedAbstractClasseswithCopilot: 'Copilot ile devralınan tüm soyut sınıfları uygula'
        },
        Diagnostic: {
          importResolveRedirect: '"{importName}", "{venv}" ortamında bulunamadı.'
        },
        DocstringTemplate: {
          GenerateDocstring: 'Docstring Oluşturma',
          description: 'Açıklama',
          docstringForName: 'Docstring for {name}'
        },
        Messages: {
          defaultPythonEnvironmentName: 'Varsayılan Python Ortamı',
          globalEnvironmentName: 'genel',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} dosya ve {cellCount} hücre analiz edilecek',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} dosya ve 1 hücre analiz edilecek',
          singularFileAndPluralCellsToAnalyze: '1 dosya ve {cellCount} hücre analiz edilecek',
          singularFileAndSingularCellToAnalyze: '1 dosya ve 1 hücre analiz edilecek',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: 'Sorun bildir',
          title: 'Pylance ile ilgili bir performans sorunu algılandı. \'Pylance: Sorun Bildir\' komutunu kullanarak bir sorun kaydetmek ister misiniz?'
        },
        Pytest: {
          addTypeAnnotation: '{name} içine tür ek açıklaması ekle',
          addTypeAnnotations: 'Add type annotations for all fixture references in this file',
          fixtureNotFound: '\'{fixture}\' is not a known test fixture. Test methods should only receive fixture or parametrization names as parameters.'
        },
        Refactoring: {
          moveFile: 'Tüm içeri aktarma başvurularını "{oldModuleName}" modülünden "{newModuleName}" modülüne güncelleştirmek istiyor musunuz?',
          moveFileAbsentSymbol: 'Taşınacak simge bulunamıyor.',
          moveFileDescription: 'Tüm içeri aktarma başvuruları "{oldModuleName}" modülünden "{newModuleName}" modülüne güncelleştirilsin mi?',
          moveFileExtensionMismatch: 'Bir simgeyi taşımak için kaynak dosya ("{src}") ile hedef dosyanın ("{dest}") uzantısı aynı olmalıdır.',
          moveFileImportableOnly: 'Yalnızca sınıflar veya işlevler gibi diğer modüllerden içeri aktarılabilen nesnelerin taşınmasına izin verilir.',
          moveFileInsertLocation: 'Simgenin ekleneceği konum bulunamıyor. "{name}" konumunda aynı ada sahip bir simge zaten var olabilir.',
          moveFileLabel: 'Tüm içeri aktarma başvuruları "{oldModuleName}" modülünden "{newModuleName}" modülüne güncelleştirilsin mi?',
          moveFileMissingInfo: '"{name}" için dosya bilgileri bulunamıyor.',
          moveFileMultipleDeclarations: 'Birden çok kez bildirildiği için bu simge taşınamaz.',
          moveFileNotUserFile: 'Bu simge taşınamıyor. Yalnızca bir projedeki veya kullanıcı dosyasındaki simgeler desteklenir.',
          moveFilePrivateSymbol: 'Özel simge olduğundan "{name}" taşınamıyor.',
          moveFileSameFile: 'Simge şu anda bulunduğu dosyaya taşınamıyor.',
          moveFileSimpleAssignmentsOnly: 'Bu ifade taşınamıyor. Yalnızca bir değer atanan değişken gibi basit atamalar desteklenir.',
          moveFileSymbolNotFound: '"{position}" konumunda simge bulunamıyor.',
          moveFileUnsupportedSymbol: 'Bu simge taşınamıyor. Yalnızca modül düzeyindeki değişkenler, işlevler ve sınıflar desteklenir.'
        }
      };
    },
    70417: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '添加“{importText}”',
            searchImport: '搜索其他导入匹配项'
          },
          ChangeSpelling: {
            changeSpellingTo: '将拼写更改为“{word}”'
          },
          ExtraPath: {
            addExtraPath: '将“{name}”添加到 extraPaths'
          },
          Extract: {
            method: '提取方法',
            variable: '提取变量'
          },
          FixAll: {
            runFixAll: '运行 pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: '实现继承的所有抽象类'
          },
          MoveSymbol: {
            commandTitle: '移动符号',
            moveSymbolsTo: '将符号移动到...',
            moveSymbolsToNewFile: '将符号移动到新文件'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: '删除所有未使用的导入',
            removeUnusedImport: '删除未使用的导入'
          },
          ToggleImportPath: {
            convertAllFormat: '转换所有导入格式',
            convertAllToAbsolutePath: '将所有导入转换为绝对路径',
            convertAllToRelativePath: '将所有导入转换为相对路径',
            convertToAbsolutePath: '转换为绝对路径',
            convertToRelativePath: '转换为相对路径'
          },
          UnresolvedImports: {
            learnMoreTitle: '详细了解如何解析导入',
            selectInterpreterTitle: '选择其他解释器',
            selectKernelTitle: '选择其他 Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: '日志记录数据已保存在 [{filePath}]({uri})。有关更多详细信息，请参阅 `Python 语言服务器` 输出窗格。'
          },
          ProfilingCommand: {
            profilingDataSaved: '分析数据已保存在 [{filePath}]({uri})。有关更多详细信息，请参阅 `Python 语言服务器` 输出窗格。'
          },
          gotoOutputCommand: '显示输出'
        },
        Copilot: {
          GenerateDocstringWithCopilot: '使用 Copilot 生成 Docstring',
          implementAllInheritedAbstractClasseswithCopilot: '通过 Copilot 实现继承的所有抽象类'
        },
        Diagnostic: {
          importResolveRedirect: '在“{venv}”环境中找不到导入“{importName}”。'
        },
        DocstringTemplate: {
          GenerateDocstring: '生成 Docstring',
          description: '说明',
          docstringForName: '{name} 的 Docstring'
        },
        Messages: {
          defaultPythonEnvironmentName: '默认 Python 环境',
          globalEnvironmentName: '全局',
          pluralFilesAndPluralCellsToAnalyze: '要分析的 {fileCount} 个文件和 {cellCount} 个单元格',
          pluralFilesAndSingularCellToAnalyze: '要分析的 {fileCount} 个文件和 1 个单元格',
          singularFileAndPluralCellsToAnalyze: '要分析的 1 个文件和 {cellCount} 个单元格',
          singularFileAndSingularCellToAnalyze: '要分析的 1 个文件和 1 个单元格',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: '报告问题',
          title: '我们检测到 Pylance 存在性能问题。是否要使用 `Pylance: Report Issue` 命令提交问题?'
        },
        Pytest: {
          addTypeAnnotation: '将类型批注添加到 {name}',
          addTypeAnnotations: '为此文件中的所有 fixture 引用添加类型注释',
          fixtureNotFound: '\'{fixture}\' 不是已知的测试 fixture。测试方法应只接收 fixture 或 parametrization 名称作为参数。'
        },
        Refactoring: {
          moveFile: '是否要将“{oldModuleName}”的所有导入引用更新为“{newModuleName}”?',
          moveFileAbsentSymbol: '找不到要移动的符号。',
          moveFileDescription: '是否将 “{oldModuleName}” 的所有导入引用更新为 “{newModuleName}”?',
          moveFileExtensionMismatch: '要移动符号，源文件(“{src}”)和目标文件(“{dest}”)必须具有相同的文件扩展名。',
          moveFileImportableOnly: '仅允许移动可从其他模块导入的对象，例如类或函数。',
          moveFileInsertLocation: '找不到要插入符号的位置。“{name}”中可能已存在同名符号。',
          moveFileLabel: '是否将 “{oldModuleName}” 的所有导入引用更新为 “{newModuleName}”?',
          moveFileMissingInfo: '找不到“{name}”的文件信息。',
          moveFileMultipleDeclarations: '无法移动此符号，因为已多次声明它。',
          moveFileNotUserFile: '无法移动此符号。仅支持项目或用户文件中的符号。',
          moveFilePrivateSymbol: '无法移动“{name}”，因为它是专用符号。',
          moveFileSameFile: '无法将符号移动到其当前所在的同一文件。',
          moveFileSimpleAssignmentsOnly: '无法移动此表达式。仅支持简单的赋值，例如为变量赋值。',
          moveFileSymbolNotFound: '在位置“{position}”处找不到符号。',
          moveFileUnsupportedSymbol: '无法移动此符号。仅支持模块级别的变量、函数和类。'
        }
      };
    },
    41101: module => {
      'use strict';

      module.exports = {
        CodeAction: {
          AutoImport: {
            addAutoImport: '新增 "{importText}"',
            searchImport: '搜尋其他匯入相符項目'
          },
          ChangeSpelling: {
            changeSpellingTo: '將拼字變更為 "{word}"'
          },
          ExtraPath: {
            addExtraPath: '新增 "{name}" 至 extraPaths'
          },
          Extract: {
            method: '擷取方法',
            variable: '擷取變數'
          },
          FixAll: {
            runFixAll: '執行 pylance fix all'
          },
          ImplementAbstractClass: {
            implementAllAbstractClasses: '實作所有繼承的抽象類別'
          },
          MoveSymbol: {
            commandTitle: '移動符號',
            moveSymbolsTo: '移動符號至...',
            moveSymbolsToNewFile: '移動符號至新檔案'
          },
          RemoveUnusedImport: {
            removeAllUnusedImports: '移除所有未使用的匯入',
            removeUnusedImport: '移除未使用的匯入'
          },
          ToggleImportPath: {
            convertAllFormat: '轉換所有匯入格式',
            convertAllToAbsolutePath: '將所有匯入轉換為絕對路徑',
            convertAllToRelativePath: '將所有匯入轉換為相對路徑',
            convertToAbsolutePath: '轉換為絕對路徑',
            convertToRelativePath: '轉換成相對路徑'
          },
          UnresolvedImports: {
            learnMoreTitle: '深入了解如何解析匯入',
            selectInterpreterTitle: '選取其他解譯器',
            selectKernelTitle: '選取其他 Jupyter kernel'
          }
        },
        Commands: {
          LoggingCommand: {
            loggingDataSaved: '記錄資料已儲存在 [{filePath}]({uri})。如需詳細資料，請參閱 [Python 語言伺服器] 輸出窗格。'
          },
          ProfilingCommand: {
            profilingDataSaved: '分析資料已儲存在 [{filePath}]({uri})。如需詳細資料，請參閱 [Python 語言伺服器] 輸出窗格。'
          },
          gotoOutputCommand: '顯示輸出'
        },
        Copilot: {
          GenerateDocstringWithCopilot: '使用 Copilot 產生 Docstring',
          implementAllInheritedAbstractClasseswithCopilot: '使用 Copilot 來實作所有繼承的抽象類別'
        },
        Diagnostic: {
          importResolveRedirect: '在 "{venv}" 環境中找不到匯入 "{importName}"。'
        },
        DocstringTemplate: {
          GenerateDocstring: '產生 Docstring',
          description: '說明',
          docstringForName: '{name} 的 Docstring'
        },
        Messages: {
          defaultPythonEnvironmentName: '預設 Python 環境',
          globalEnvironmentName: '全域',
          pluralFilesAndPluralCellsToAnalyze: '{fileCount} 個檔案和 {cellCount} 個儲存格要分析',
          pluralFilesAndSingularCellToAnalyze: '{fileCount} 個檔案和 1 個儲存格要分析',
          singularFileAndPluralCellsToAnalyze: '1 個檔案和 {cellCount} 個儲存格要分析',
          singularFileAndSingularCellToAnalyze: '1 的檔案和 1 個儲存格要分析',
          windowsStoreEnvironmentName: 'microsoft store'
        },
        PerformanceTracking: {
          button: '回報問題',
          title: '偵測到 Pylance 發生效能問題。要使用 `Pylance: Report Issue` 命令提出問題嗎?'
        },
        Pytest: {
          addTypeAnnotation: '新增型別註解至 {name}',
          addTypeAnnotations: '新增此檔案中所有 fixture 參考的類型註釋',
          fixtureNotFound: '\'{fixture}\' 不是已知的測試 fixture。測試方法應該只接收 fixture 或 parametrization 名稱作為參數。'
        },
        Refactoring: {
          moveFile: '是否要將 "{oldModuleName}" 的所有匯入參考更新為 "{newModuleName}"?',
          moveFileAbsentSymbol: '找不到要移動的符號。',
          moveFileDescription: '將 "{oldModuleName}" 的所有匯入參考更新為 "{newModuleName}"?',
          moveFileExtensionMismatch: '若要移動符號，來源檔案 ("{src}") 與目的檔案 ("{dest}") 必須具有相同的檔案副檔名。',
          moveFileImportableOnly: '＝只允許移動可以從其他模組匯入的物件，例如類別或函數。',
          moveFileInsertLocation: '找不到要插入符號的位置。"{name}" 中可能已存在相同名稱的符號。',
          moveFileLabel: '將 "{oldModuleName}" 的所有匯入參考更新為 "{newModuleName}"?',
          moveFileMissingInfo: '找不到 "{name}" 的檔案資訊。',
          moveFileMultipleDeclarations: '無法移動此符號，因為它已遭多次宣告。',
          moveFileNotUserFile: '無法移動此符號。只支援專案或使用者檔案中的符號。',
          moveFilePrivateSymbol: '無法移動 "{name}"，因為它是私人符號。',
          moveFileSameFile: '無法將符號移至其目前所在的同一個檔案中。',
          moveFileSimpleAssignmentsOnly: '無法移動此運算式。只支援例如為變數指派值等簡單的指派。',
          moveFileSymbolNotFound: '在位置 "{position}" 找不到符號。',
          moveFileUnsupportedSymbol: '無法移動此符號。僅支援模組層級的變數、函式和類別。'
        }
      };
    }
  };
  var _0x1a4efd = {};
  function _0x3a5c5b(_0x8d5093) {
    var _0x261b8f = _0x1a4efd[_0x8d5093];
    if (_0x261b8f !== undefined) {
      return _0x261b8f.exports;
    }
    var _0x15eaad = _0x1a4efd[_0x8d5093] = {
      id: _0x8d5093,
      loaded: false,
      exports: {}
    };
    _0x498475[_0x8d5093].call(_0x15eaad.exports, _0x15eaad, _0x15eaad.exports, _0x3a5c5b);
    _0x15eaad.loaded = true;
    return _0x15eaad.exports;
  }
  _0x3a5c5b.m = _0x498475;
  _0x3a5c5b.x = () => {
    var _0x3316ce = _0x3a5c5b.O(undefined, [121, 344], () => _0x3a5c5b(85572));
    _0x3316ce = _0x3a5c5b.O(_0x3316ce);
    return _0x3316ce;
  };
  (() => {
    var _0x1d3f81 = [];
    _0x3a5c5b.O = (_0x185d64, _0xf0011f, _0x4feea6, _0x19b523) => {
      if (_0xf0011f) {
        _0x19b523 = _0x19b523 || 0;
        for (var _0x10e290 = _0x1d3f81.length; _0x10e290 > 0 && _0x1d3f81[_0x10e290 - 1][2] > _0x19b523; _0x10e290--) {
          _0x1d3f81[_0x10e290] = _0x1d3f81[_0x10e290 - 1];
        }
        _0x1d3f81[_0x10e290] = [_0xf0011f, _0x4feea6, _0x19b523];
        return;
      }
      var _0x234164 = Infinity;
      for (var _0x10e290 = 0; _0x10e290 < _0x1d3f81.length; _0x10e290++) {
        var [_0xf0011f, _0x4feea6, _0x19b523] = _0x1d3f81[_0x10e290];
        var _0x266bbf = true;
        for (var _0x36c4d9 = 0; _0x36c4d9 < _0xf0011f.length; _0x36c4d9++) {
          if ((_0x19b523 & 1 === 0 || _0x234164 >= _0x19b523) && Object.keys(_0x3a5c5b.O).every(_0x7f0623 => _0x3a5c5b.O[_0x7f0623](_0xf0011f[_0x36c4d9]))) {
            _0xf0011f.splice(_0x36c4d9--, 1);
          } else {
            _0x266bbf = false;
            if (_0x19b523 < _0x234164) {
              _0x234164 = _0x19b523;
            }
          }
        }
        if (_0x266bbf) {
          _0x1d3f81.splice(_0x10e290--, 1);
          var _0x39d865 = _0x4feea6();
          if (_0x39d865 !== undefined) {
            _0x185d64 = _0x39d865;
          }
        }
      }
      return _0x185d64;
    };
  })();
  (() => {
    _0x3a5c5b.n = _0x465e95 => {
      var _0x326b89 = _0x465e95 && _0x465e95.__esModule ? () => _0x465e95.default : () => _0x465e95;
      _0x3a5c5b.d(_0x326b89, {
        a: _0x326b89
      });
      return _0x326b89;
    };
  })();
  (() => {
    _0x3a5c5b.d = (_0x4e616e, _0x566b5f) => {
      for (var _0x44c9bd in _0x566b5f) {
        if (_0x3a5c5b.o(_0x566b5f, _0x44c9bd) && !_0x3a5c5b.o(_0x4e616e, _0x44c9bd)) {
          Object.defineProperty(_0x4e616e, _0x44c9bd, {
            enumerable: true,
            get: _0x566b5f[_0x44c9bd]
          });
        }
      }
    };
  })();
  (() => {
    _0x3a5c5b.f = {};
    _0x3a5c5b.e = _0x5ba2c2 => {
      return Promise.all(Object.keys(_0x3a5c5b.f).reduce((_0x261562, _0x23259a) => {
        _0x3a5c5b.f[_0x23259a](_0x5ba2c2, _0x261562);
        return _0x261562;
      }, []));
    };
  })();
  (() => {
    _0x3a5c5b.u = _0x1dd5e8 => {
      return `${{
        '121': 'vendor',
        '344': 'pyright'
      }[_0x1dd5e8]}.bundle.js`;
    };
  })();
  (() => {
    _0x3a5c5b.o = (_0x1770dc, _0x1027f9) => Object.prototype.hasOwnProperty.call(_0x1770dc, _0x1027f9);
  })();
  (() => {
    _0x3a5c5b.r = _0x3e2186 => {
      if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        Object.defineProperty(_0x3e2186, Symbol.toStringTag, {
          value: 'Module'
        });
      }
      Object.defineProperty(_0x3e2186, '__esModule', {
        value: true
      });
    };
  })();
  (() => {
    _0x3a5c5b.nmd = _0x29226d => {
      _0x29226d.paths = [];
      if (!_0x29226d.children) {
        _0x29226d.children = [];
      }
      return _0x29226d;
    };
  })();
  (() => {
    _0x3a5c5b.j = 750;
  })();
  (() => {
    var _0x572d1d = {
      750: 1
    };
    _0x3a5c5b.O.require = _0x58aec2 => _0x572d1d[_0x58aec2];
    var _0x250456 = _0x989333 => {
      var _0x40a396 = _0x989333.modules;
      var _0xe449a4 = _0x989333.ids;
      var _0x190a39 = _0x989333.runtime;
      for (var _0x501bfe in _0x40a396) {
        if (_0x3a5c5b.o(_0x40a396, _0x501bfe)) {
          _0x3a5c5b.m[_0x501bfe] = _0x40a396[_0x501bfe];
        }
      }
      if (_0x190a39) {
        _0x190a39(_0x3a5c5b);
      }
      for (var _0x44bbaa = 0; _0x44bbaa < _0xe449a4.length; _0x44bbaa++) {
        _0x572d1d[_0xe449a4[_0x44bbaa]] = 1;
      }
      _0x3a5c5b.O();
    };
    _0x3a5c5b.f.require = (_0x255882, _0x5ee466) => {
      if (!_0x572d1d[_0x255882]) {
        if (true) {
          _0x250456(require(`./${_0x3a5c5b.u(_0x255882)}`));
        } else {
          _0x572d1d[_0x255882] = 1;
        }
      }
    };
  })();
  (() => {
    var _0x50e7e9 = _0x3a5c5b.x;
    _0x3a5c5b.x = () => {
      _0x3a5c5b.e(121);
      _0x3a5c5b.e(344);
      return _0x50e7e9();
    };
  })();
  var _0x572847 = _0x3a5c5b.x();
  module.exports = _0x572847;
})(); //# sourceMappingURL=server.bundle.js.map
//# sourceMappingURL=server.bundle.js.map