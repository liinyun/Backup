/*! For license information please see vendor.bundle.js.LICENSE.txt */
exports.id = 121;
exports.ids = [121];
exports.modules = {
  42689: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseMessageConnection = exports.Cancellation = exports.RAL = undefined;
    __exportStar(require(62417), exports);
    __exportStar(require(33525), exports);
    const a = __importDefault(require(50710));
    exports.RAL = a.default;
    var A = require(4533);
    Object.defineProperty(exports, 'Cancellation', {
      enumerable: true,
      get: function () {
        return A.Cancellation;
      }
    });
    var c = require(54782);
    Object.defineProperty(exports, 'BaseMessageConnection', {
      enumerable: true,
      get: function () {
        return c.BaseMessageConnection;
      }
    });
  },
  62417: function (module, exports, require) {
    "use strict";

    var r;
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    var g;
    var d = this && this.__classPrivateFieldSet || function (e, t, n, r, o) {
      if (r === 'm') {
        throw new TypeError('Private method is not writable');
      }
      if (r === 'a' && !o) {
        throw new TypeError('Private accessor was defined without a setter');
      }
      if (typeof t == 'function' ? e !== t || !o : !t.has(e)) {
        throw new TypeError('Cannot write private member to an object whose class did not declare it');
      }
      if (r === 'a') {
        o.call(e, n);
      } else {
        if (o) {
          o.value = n;
        } else {
          t.set(e, n);
        }
      }
      return n;
    };
    var h = this && this.__classPrivateFieldGet || function (e, t, n, r) {
      if (n === 'a' && !r) {
        throw new TypeError('Private accessor was defined without a getter');
      }
      if (typeof t == 'function' ? e !== t || !r : !t.has(e)) {
        throw new TypeError('Cannot read private member from an object whose class did not declare it');
      }
      if (n === 'm') {
        return r;
      } else {
        if (n === 'a') {
          return r.call(e);
        } else {
          if (r) {
            return r.value;
          } else {
            return t.get(e);
          }
        }
      }
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseServiceConnection = exports.RequestResult = exports.BaseClientConnection = exports.RPCError = exports.RPCErrno = exports.VariableResult = exports.Int64Result = exports.Uint64Result = exports.Int32Result = exports.Uint32Result = exports.Int16Result = exports.Uint16Result = exports.Int8Result = exports.Uint8Result = exports.Notification = exports.Request = undefined;
    const p = __importDefault(require(50710));
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    (function (e) {
      e.is = function (e) {
        return e instanceof Uint8Array || e instanceof Int8Array || e instanceof Uint16Array || e instanceof Int16Array || e instanceof Uint32Array || e instanceof Int32Array || e instanceof BigUint64Array || e instanceof BigInt64Array;
      };
      e.set = function (e, t, n) {
        if (n instanceof Uint8Array) {
          new Uint8Array(e, t, n.length).set(n);
        } else {
          if (n instanceof Int8Array) {
            new Int8Array(e, t, n.length).set(n);
          } else {
            if (n instanceof Uint16Array) {
              new Uint16Array(e, t, n.length).set(n);
            } else {
              if (n instanceof Int16Array) {
                new Int16Array(e, t, n.length).set(n);
              } else {
                if (n instanceof Uint32Array) {
                  new Uint32Array(e, t, n.length).set(n);
                } else {
                  if (n instanceof Int32Array) {
                    new Int32Array(e, t, n.length).set(n);
                  } else {
                    if (n instanceof BigUint64Array) {
                      new BigUint64Array(e, t, n.length).set(n);
                    } else {
                      if (!(n instanceof BigInt64Array)) {
                        throw new Error('Unknown type array type');
                      }
                      new BigInt64Array(e, t, n.length).set(n);
                    }
                  }
                }
              }
            }
          }
        }
      };
    })(m ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string';
      };
    })(I = exports.Request ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string' && t.id === undefined;
      };
    })(exports.Notification ||= {});
    class v {
      constructor() {}
      get kind() {
        return v.kind;
      }
      get byteLength() {
        return 0;
      }
      get length() {
        return 0;
      }
      getPadding(e) {
        return 0;
      }
      createResultArray(e, t) {
        return new Uint8Array(e, t, 0);
      }
    }
    v.kind = 0;
    class b {
      static fromLength(e) {
        return new b(e);
      }
      static fromByteLength(e) {
        return new b(e);
      }
      constructor(e) {
        r.set(this, undefined);
        d(this, r, e, 'f');
      }
      get kind() {
        return b.kind;
      }
      get byteLength() {
        return h(this, r, 'f') * Uint8Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, r, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint8Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint8Array;
      }
    }
    exports.Uint8Result = b;
    r = new WeakMap();
    b.kind = 1;
    class B {
      static fromLength(e) {
        return new B(e);
      }
      static fromByteLength(e) {
        return new B(e);
      }
      constructor(e) {
        o.set(this, undefined);
        d(this, o, e, 'f');
      }
      get kind() {
        return B.kind;
      }
      get byteLength() {
        return h(this, o, 'f') * Int8Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, o, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int8Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int8Array;
      }
    }
    exports.Int8Result = B;
    o = new WeakMap();
    B.kind = 2;
    class Q {
      static fromLength(e) {
        return new Q(e);
      }
      static fromByteLength(e) {
        if (e % Uint16Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Uint16Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new Q(e / Uint16Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        s.set(this, undefined);
        d(this, s, e, 'f');
      }
      get kind() {
        return Q.kind;
      }
      get byteLength() {
        return h(this, s, 'f') * Uint16Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, s, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint16Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint16Array;
      }
    }
    exports.Uint16Result = Q;
    s = new WeakMap();
    Q.kind = 3;
    class D {
      static fromLength(e) {
        return new D(e);
      }
      static fromByteLength(e) {
        if (e % Int16Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Int16Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new D(e / Int16Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        a.set(this, undefined);
        d(this, a, e, 'f');
      }
      get kind() {
        return D.kind;
      }
      get byteLength() {
        return h(this, a, 'f') * Int16Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, a, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int16Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int16Array;
      }
    }
    exports.Int16Result = D;
    a = new WeakMap();
    D.kind = 4;
    class S {
      static fromLength(e) {
        return new S(e);
      }
      static fromByteLength(e) {
        if (e % Uint32Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Uint32Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new S(e / Uint32Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        A.set(this, undefined);
        d(this, A, e, 'f');
      }
      get kind() {
        return S.kind;
      }
      get byteLength() {
        return h(this, A, 'f') * Uint32Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, A, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint32Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint32Array;
      }
    }
    exports.Uint32Result = S;
    A = new WeakMap();
    S.kind = 5;
    class T {
      static fromLength(e) {
        return new T(e);
      }
      static fromByteLength(e) {
        if (e % Int32Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Int32Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new T(e / Int32Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        c.set(this, undefined);
        d(this, c, e, 'f');
      }
      get kind() {
        return T.kind;
      }
      get byteLength() {
        return h(this, c, 'f') * Int32Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, c, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int32Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int32Array;
      }
    }
    exports.Int32Result = T;
    c = new WeakMap();
    T.kind = 6;
    class R {
      static fromLength(e) {
        return new R(e);
      }
      static fromByteLength(e) {
        if (e % BigUint64Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${BigUint64Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new R(e / BigUint64Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        u.set(this, undefined);
        d(this, u, e, 'f');
      }
      get kind() {
        return R.kind;
      }
      get byteLength() {
        return h(this, u, 'f') * BigUint64Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, u, 'f');
      }
      getPadding(e) {
        return BigUint64Array.BYTES_PER_ELEMENT - e % BigUint64Array.BYTES_PER_ELEMENT;
      }
      createResultArray(e, t) {
        return new BigUint64Array(e, t, this.length);
      }
      is(e) {
        return e instanceof BigUint64Array;
      }
    }
    exports.Uint64Result = R;
    u = new WeakMap();
    R.kind = 7;
    class k {
      static fromLength(e) {
        return new k(e);
      }
      static fromByteLength(e) {
        if (e % BigInt64Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${BigInt64Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new k(e / BigInt64Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        l.set(this, undefined);
        d(this, l, e, 'f');
      }
      get kind() {
        return k.kind;
      }
      get byteLength() {
        return h(this, l, 'f') * BigInt64Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, l, 'f');
      }
      getPadding(e) {
        return BigInt64Array.BYTES_PER_ELEMENT - e % BigInt64Array.BYTES_PER_ELEMENT;
      }
      createResultArray(e, t) {
        return new BigInt64Array(e, t, this.length);
      }
      is(e) {
        return e instanceof BigInt64Array;
      }
    }
    exports.Int64Result = k;
    l = new WeakMap();
    k.kind = 8;
    class x {
      constructor(e) {
        g.set(this, undefined);
        d(this, g, e, 'f');
      }
      get kind() {
        return x.kind;
      }
      get mode() {
        return h(this, g, 'f');
      }
      get byteLength() {
        return 0;
      }
      get length() {
        return 0;
      }
      getPadding(e) {
        return 0;
      }
    }
    exports.VariableResult = x;
    g = new WeakMap();
    x.kind = 9;
    (function (e) {
      e.fromByteLength = function (e, t) {
        switch (e) {
          case b.kind:
            return b.fromByteLength(t);
          case B.kind:
            return B.fromByteLength(t);
          case Q.kind:
            return Q.fromByteLength(t);
          case D.kind:
            return D.fromByteLength(t);
          case S.kind:
            return S.fromByteLength(t);
          case T.kind:
            return T.fromByteLength(t);
          case R.kind:
            return R.fromByteLength(t);
          case k.kind:
            return k.fromByteLength(t);
          case x.kind:
            throw new Error('No result array for variable results result type.');
          default:
            throw new Error(`Unknown result kind ${e}`);
        }
      };
      e.getPadding = function (e) {
        return 4 - e % 4;
      };
    })(E ||= {});
    (function (e) {
      e.is = function (e) {
        return e instanceof b || e instanceof B || e instanceof Q || e instanceof D || e instanceof S || e instanceof T || e instanceof R || e instanceof k || e instanceof x || e instanceof v;
      };
    })(y ||= {});
    (function (e) {
      e.Success = 0;
      e.TimedOut = 1;
      e.UnknownError = 16384;
      e.LazyResultFailed = e.UnknownError + 1;
      e.NoHandlerFound = e.LazyResultFailed + 1;
      e.InvalidMessageFormat = e.NoHandlerFound + 1;
      e.$Custom = 32768;
    })(w = exports.RPCErrno ||= {});
    class P extends Error {
      constructor(e, t) {
        super(t);
        this.errno = e;
      }
    }
    exports.RPCError = P;
    exports.BaseClientConnection = class {
      constructor() {
        this.sendRequest = this._sendRequest;
        this.id = 1;
        this.textEncoder = p.default().TextEncoder.create();
        this.textDecoder = p.default().TextDecoder.create();
        this.readyPromise = new Promise((e, t) => {
          this.readyCallbacks = {
            resolve: e,
            reject: t
          };
        });
      }
      serviceReady() {
        return this.readyPromise;
      }
      _sendRequest(e, t, n, r) {
        const o = this.id++;
        const s = {
          id: o,
          method: e
        };
        let a;
        let A;
        let c = new v();
        if (y.is(t)) {
          c = t;
        } else {
          if (typeof t == 'number') {
            A = t;
          } else {
            if (t !== undefined || t !== null) {
              a = t;
            }
          }
        }
        if (typeof n == 'number') {
          A = n;
        } else {
          if (n !== undefined) {
            c = n;
          }
        }
        if (typeof r == 'number') {
          A = r;
        }
        if (a !== undefined) {
          s.params = {};
          for (const e of Object.keys(a)) {
            if (e !== 'binary') {
              s.params[e] = a[e];
            } else {
              s.params.binary = null;
            }
          }
        }
        const u = this.textEncoder.encode(JSON.stringify(s, undefined, 0));
        const l = a?.binary;
        const g = l !== undefined ? l.byteLength : 0;
        const d = 36 + u.byteLength;
        const h = c.byteLength;
        const f = c.getPadding(d + g);
        const m = d + g + f;
        const I = 36 + u.byteLength + g + f + h;
        const E = new SharedArrayBuffer(I);
        const B = new Uint32Array(E, 4, 8);
        B[0] = 36;
        B[1] = u.byteLength;
        B[2] = d;
        B[3] = g;
        B[4] = w.Success;
        B[5] = c.kind;
        B[6] = m;
        B[7] = h;
        const Q = new Uint8Array(E);
        Q.set(u, 36);
        if (l !== undefined) {
          Q.set(l, d);
        }
        const D = new Int32Array(E, 0, 1);
        Atomics.store(D, 0, 0);
        this.postMessage(E);
        switch (Atomics.wait(D, 0, 0, A)) {
          case 'timed-out':
            return {
              errno: w.TimedOut
            };
          case 'not-equal':
            if (Atomics.load(D, 0) !== 1) {
              return {
                errno: w.UnknownError
              };
            }
        }
        const S = B[4];
        if (S !== 0) {
          return {
            errno: S
          };
        }
        switch (c.kind) {
          case v.kind:
            return {
              errno: 0
            };
          case x.kind:
            const e = B[7];
            if (e === 0) {
              return {
                errno: 0,
                data: c.mode === 'binary' ? new Uint8Array(0) : ''
              };
            }
            const t = this._sendRequest('$/fetchResult', {
              resultId: o
            }, b.fromLength(e), A);
            if (t.errno !== 0) {
              return {
                errno: t.errno
              };
            }
            if (!_.hasData(t)) {
              return {
                errno: w.LazyResultFailed
              };
            }
            try {
              return {
                errno: 0,
                data: c.mode === 'binary' ? t.data : JSON.parse(this.textDecoder.decode(t.data.slice()))
              };
            } catch (e) {
              p.default().console.error(e);
              return {
                errno: w.LazyResultFailed
              };
            }
          default:
            return {
              errno: 0,
              data: c.createResultArray(E, m)
            };
        }
      }
      handleMessage(e) {
        if (e.method === '$/ready') {
          this.readyCallbacks.resolve(e.params);
        }
      }
    };
    (function (e) {
      e.hasData = function (e) {
        const t = e;
        return t.errno === 0 && t.data !== undefined;
      };
    })(_ = exports.RequestResult ||= {});
    exports.BaseServiceConnection = class {
      constructor() {
        this.onRequest = this._onRequest;
        this.textDecoder = p.default().TextDecoder.create();
        this.textEncoder = p.default().TextEncoder.create();
        this.requestHandlers = new Map();
        this.requestResults = new Map();
      }
      _onRequest(e, t) {
        this.requestHandlers.set(e, t);
        return {
          dispose: () => this.requestHandlers.delete(e)
        };
      }
      async handleMessage(e) {
        const t = new Uint32Array(e, 4, 8);
        const n = t[0];
        const r = t[1];
        try {
          const o = JSON.parse(this.textDecoder.decode(new Uint8Array(e, n, r).slice()));
          if (I.is(o)) {
            if (o.method === '$/fetchResult') {
              const n = o.params.resultId;
              const r = this.requestResults.get(n);
              this.requestResults.delete(n);
              const s = t[6];
              const a = t[7];
              if (r !== undefined && r.byteLength === a) {
                m.set(e, s, r);
                t[4] = w.Success;
              } else {
                t[4] = w.LazyResultFailed;
              }
            } else {
              if (o.params?.binary === null) {
                const n = t[3];
                const r = t[2];
                const s = new Uint8Array(e, r, n);
                o.params = o.params ?? {};
                o.params.binary = s;
              }
              const n = this.requestHandlers.get(o.method);
              if (n !== undefined) {
                const r = t[5];
                const s = t[6];
                const a = t[7];
                let A;
                let c;
                switch (r) {
                  case v.kind:
                    A = o.params !== undefined ? n(o.params) : n();
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                    break;
                  case x.kind:
                    A = o.params !== undefined ? n(o.params) : n();
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                    if (c.errno === 0 && _.hasData(c)) {
                      const e = c.data;
                      const n = m.is(e) ? e : this.textEncoder.encode(JSON.stringify(e, undefined, 0));
                      t[7] = n.byteLength;
                      if (n.byteLength > 0) {
                        this.requestResults.set(o.id, n);
                      }
                    }
                    break;
                  default:
                    const u = E.fromByteLength(r, a).createResultArray(e, s);
                    A = o.params !== undefined ? n(o.params, u) : n(u);
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                }
              } else {
                t[4] = w.NoHandlerFound;
              }
            }
          } else {
            t[4] = w.InvalidMessageFormat;
          }
        } catch (e) {
          p.default().console.error(e);
          t[4] = w.UnknownError;
        }
        const o = new Int32Array(e, 0, 1);
        Atomics.store(o, 0, 1);
        Atomics.notify(o, 0);
      }
      signalReady(e) {
        const t = {
          method: '$/ready',
          params: e
        };
        this.postMessage(t);
      }
    };
  },
  4533: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Cancellation = undefined;
    (function (e) {
      e.addData = function (e) {
        if (e.$cancellationData !== undefined) {
          throw new Error('Message already has a property $cancellationData');
        }
        const t = new SharedArrayBuffer(4);
        const n = new Int32Array(t, 0, 1);
        n[0] = 0;
        e.$cancellationData = t;
        return () => {
          Atomics.store(n, 0, 1);
        };
      };
      e.retrieveCheck = function (e) {
        const t = e;
        if (!(t.$cancellationData instanceof SharedArrayBuffer)) {
          return () => false;
        }
        const n = new Int32Array(t.$cancellationData, 0, 1);
        return () => Atomics.load(n, 0) === 1;
      };
    })(exports.Cancellation ||= {});
  },
  54782: (module, exports) => {
    "use strict";

    var n;
    var r;
    var o;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseMessageConnection = undefined;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.id == 'number' && typeof t.method == 'string';
      };
    })(n ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string' && t.id === undefined;
      };
    })(r ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.id == 'number' && (t.error !== undefined || t.result !== undefined);
      };
    })(o ||= {});
    class s {
      constructor() {
        this.sendRequest = this._sendRequest;
        this.onRequest = this._onRequest;
        this.sendNotification = this._sendNotification;
        this.onNotification = this._onNotification;
        this.id = 1;
        this.responsePromises = new Map();
        this.requestHandlers = new Map();
        this.notificationHandlers = new Map();
      }
      _sendRequest(e, t, n) {
        if (e === undefined) {
          return Promise.resolve();
        } else {
          return new Promise((r, o) => {
            const s = this.id++;
            const a = {
              id: s,
              method: e
            };
            if (t !== undefined) {
              a.params = t;
            }
            this.responsePromises.set(s, {
              resolve: r,
              reject: o,
              method: a.method
            });
            this.postMessage(a, n);
          });
        }
      }
      _onRequest(e, t) {
        if (e !== undefined && t !== undefined) {
          this.requestHandlers.set(e, t);
        }
      }
      _sendNotification(e, t, n) {
        if (e === undefined) {
          return;
        }
        const r = {
          method: e
        };
        if (t !== undefined) {
          r.params = t;
        }
        this.postMessage(r, n);
      }
      _onNotification(e, t) {
        if (e !== undefined && t !== undefined) {
          this.notificationHandlers.set(e, t);
        }
      }
      async handleMessage(e) {
        if (n.is(e)) {
          const t = e.id;
          const n = this.requestHandlers.get(e.method);
          if (n !== undefined) {
            try {
              const r = await n(e.params);
              this.sendResultResponse(t, r);
            } catch (e) {
              this.sendErrorResponse(t, e);
            }
          }
        } else {
          if (r.is(e)) {
            const t = this.notificationHandlers.get(e.method);
            if (t !== undefined) {
              t(e.params);
            }
          } else {
            if (o.is(e)) {
              const t = e.id;
              const n = this.responsePromises.get(t);
              if (n !== undefined) {
                this.responsePromises.delete(t);
                if (e.result !== undefined) {
                  n.resolve(e.result);
                } else {
                  if (e.error !== undefined) {
                    n.reject(typeof e.error == 'string' ? new Error(e.error) : e.error);
                  } else {
                    n.reject(new Error('Response has neither a result nor an error value'));
                  }
                }
              }
            }
          }
        }
      }
      sendResultResponse(e, t) {
        const n = {
          id: e,
          result: t === undefined ? null : t
        };
        this.postMessage(n);
      }
      sendErrorResponse(e, t) {
        const n = {
          id: e,
          error: t === undefined ? 'Unknown error' : t instanceof Error ? t.message : t
        };
        this.postMessage(n);
      }
    }
    exports.BaseMessageConnection = s;
    (function (e) {
      e.Request = n;
      e.Notification = r;
      e.Response = o;
    })(s = exports.BaseMessageConnection ||= {});
  },
  33525: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DTOs = undefined;
    const r = require(62417);
    (function (e) {
      let t;
      let n;
      let o;
      let s;
      (function (e) {
        e.FileNotFound = r.RPCErrno.$Custom;
        e.FileExists = e.FileNotFound + 1;
        e.FileNotADirectory = e.FileExists + 1;
        e.FileIsADirectory = e.FileNotADirectory + 1;
        e.NoPermissions = e.FileIsADirectory + 1;
        e.Unavailable = e.NoPermissions + 1;
      })(t = e.FileSystemError ||= {});
      (function (e) {
        e[e.Unknown = 0] = 'Unknown';
        e[e.File = 1] = 'File';
        e[e.Directory = 2] = 'Directory';
        e[e.SymbolicLink = 64] = 'SymbolicLink';
      })(n = e.FileType ||= {});
      (function (e) {
        e[e.Readonly = 1] = 'Readonly';
      })(o = e.FilePermission ||= {});
      (function (e) {
        e.typedResult = r.Uint32Result.fromLength(5);
        e.create = function (e) {
          return {
            get type() {
              return e[0];
            },
            set type(t) {
              e[0] = t;
            },
            get ctime() {
              return e[1];
            },
            set ctime(t) {
              e[1] = t;
            },
            get mtime() {
              return e[2];
            },
            set mtime(t) {
              e[2] = t;
            },
            get size() {
              return e[3];
            },
            set size(t) {
              e[3] = t;
            },
            get permission() {
              return e[4];
            },
            set permission(t) {
              e[4] = t;
            }
          };
        };
      })(s = e.Stat ||= {});
    })(exports.DTOs ||= {});
  },
  50710: (module, exports) => {
    "use strict";

    var n;
    let r;
    function o() {
      if (r === undefined) {
        throw new Error('No runtime abstraction layer installed');
      }
      return r;
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports._RALType = undefined;
    (function (e) {
      e[e.Browser = 1] = 'Browser';
      e[e.Node = 2] = 'Node';
    })(n = exports._RALType ||= {});
    (function (e) {
      e.Type = n;
      e.install = function (e) {
        if (e === undefined) {
          throw new Error('No runtime abstraction layer provided');
        }
        r = e;
      };
    })(o ||= {});
    exports.default = o;
  },
  63966: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ServiceConnection = exports.ClientConnection = undefined;
    const o = __importDefault(require(50710));
    const s = require(62417);
    class a extends s.BaseClientConnection {
      constructor(e) {
        super();
        this.port = e;
        this.port.on('message', e => {
          try {
            this.handleMessage(e);
          } catch (e) {
            o.default().console.error(e);
          }
        });
      }
      postMessage(e) {
        this.port.postMessage(e);
      }
    }
    exports.ClientConnection = a;
    class A extends s.BaseServiceConnection {
      constructor(e) {
        super();
        this.port = e;
        this.port.on('message', async e => {
          try {
            await this.handleMessage(e);
          } catch (e) {
            o.default().console.error(e);
          }
        });
      }
      postMessage(e) {
        this.port.postMessage(e);
      }
    }
    exports.ServiceConnection = A;
  },
  8067: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MessageConnection = exports.ClientConnection = exports.ServiceConnection = undefined;
    __importDefault(require(54339)).default.install();
    __exportStar(require(42689), exports);
    var a = require(63966);
    Object.defineProperty(exports, 'ServiceConnection', {
      enumerable: true,
      get: function () {
        return a.ServiceConnection;
      }
    });
    Object.defineProperty(exports, 'ClientConnection', {
      enumerable: true,
      get: function () {
        return a.ClientConnection;
      }
    });
    var A = require(15399);
    Object.defineProperty(exports, 'MessageConnection', {
      enumerable: true,
      get: function () {
        return A.MessageConnection;
      }
    });
  },
  15399: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MessageConnection = undefined;
    const o = __importDefault(require(50710));
    const s = require(28167);
    const a = require(54782);
    class A extends a.BaseMessageConnection {
      constructor(e) {
        super();
        this.port = e;
      }
      postMessage(e, t) {
        this.port.postMessage(e, t);
      }
      listen() {
        this.port.on('message', e => {
          this.handleMessage(e).catch(o.default().console.error);
        });
      }
    }
    exports.MessageConnection = A;
    new A(s.parentPort);
  },
  54339: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const o = require(39023);
    const s = require(28167);
    const a = __importDefault(require(50710));
    const A = require(63966);
    class c extends A.ServiceConnection {
      constructor(e, t) {
        const n = new s.Worker(e, t !== undefined ? {
          argv: [t]
        } : undefined);
        super(n);
        this.worker = n;
      }
      terminate() {
        return this.worker.terminate();
      }
    }
    const u = Object.freeze({
      type: a.default.Type.Node,
      TextEncoder: Object.freeze({
        create: (e = 'utf-8') => ({
          encode: t => Buffer.from(t ?? '', e)
        })
      }),
      TextDecoder: Object.freeze({
        create: (e = 'utf-8') => new o.TextDecoder(e)
      }),
      console,
      timer: Object.freeze({
        setTimeout(e, t, ...n) {
          const r = setTimeout(e, t, ...n);
          return {
            dispose: () => clearTimeout(r)
          };
        },
        setImmediate(e, ...t) {
          const n = setImmediate(e, ...t);
          return {
            dispose: () => clearImmediate(n)
          };
        },
        setInterval(e, t, ...n) {
          const r = setInterval(e, t, ...n);
          return {
            dispose: () => clearInterval(r)
          };
        }
      }),
      $testing: Object.freeze({
        ClientConnection: Object.freeze({
          create() {
            if (!s.parentPort) {
              throw new Error('No parent port defined. Shouldn\'t happen in test setup');
            }
            return new A.ClientConnection(s.parentPort);
          }
        }),
        ServiceConnection: Object.freeze({
          create: (e, t) => new c(e, t)
        }),
        get testCase() {
          return process.argv[2];
        }
      })
    });
    function l() {
      return u;
    }
    (function (e) {
      e.install = function () {
        a.default.install(u);
      };
    })(l ||= {});
    exports.default = l;
  },
  18851: (module, exports, require) => {
    "use strict";

    const r = require(50710);
    module.exports = require(8067);
    module.exports.default = r.default;
  },
  40640: (module, exports, require) => {
    try {
      var r = require(39023);
      if (typeof r.inherits != 'function') {
        throw '';
      }
      module.exports = r.inherits;
    } catch (t) {
      module.exports = require(37051);
    }
  },
  37051: module => {
    if (typeof Object.create == 'function') {
      module.exports = function (e, t) {
        if (t) {
          e.super_ = t;
          e.prototype = Object.create(t.prototype, {
            constructor: {
              value: e,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function (e, t) {
        if (t) {
          e.super_ = t;
          function n() {}
          n.prototype = t.prototype;
          e.prototype = new n();
          e.prototype.constructor = e;
        }
      };
    }
  },
  90930: module => {
    "use strict";

    const t = [];
    const n = [];
    const r = (e, r) => {
      if (e === r) {
        return 0;
      }
      const o = e;
      if (e.length > r.length) {
        e = r;
        r = o;
      }
      let s = e.length;
      let a = r.length;
      while (s > 0 && e.charCodeAt(~-s) === r.charCodeAt(~-a)) {
        s--;
        a--;
      }
      let A;
      let c;
      let u;
      let l;
      let g = 0;
      while (g < s && e.charCodeAt(g) === r.charCodeAt(g)) {
        g++;
      }
      s -= g;
      a -= g;
      if (s === 0) {
        return a;
      }
      let d = 0;
      let h = 0;
      while (d < s) {
        n[d] = e.charCodeAt(g + d);
        t[d] = ++d;
      }
      while (h < a) {
        A = r.charCodeAt(g + h);
        u = h++;
        c = h;
        d = 0;
        for (; d < s; d++) {
          l = A === n[d] ? u : u + 1;
          u = t[d];
          c = t[d] = u > c ? l > c ? c + 1 : l : l > u ? u + 1 : l;
        }
      }
      return c;
    };
    module.exports = r;
    module.exports.default = r;
  },
  41334: (module, exports, require) => {
    let r = require(79896);
    const o = require(39023);
    const s = require(16928);
    const a = require(24434);
    const A = require(43106);
    const c = require(2203);
    const u = 30;
    const l = 67324752;
    const g = 4;
    const d = 6;
    const h = 8;
    const f = 10;
    const p = 14;
    const m = 18;
    const I = 22;
    const E = 26;
    const y = 28;
    const w = 46;
    const _ = 33639248;
    const v = 4;
    const b = 6;
    const B = 8;
    const Q = 10;
    const D = 12;
    const S = 16;
    const T = 20;
    const R = 24;
    const k = 28;
    const x = 30;
    const P = 32;
    const F = 34;
    const M = 36;
    const O = 38;
    const N = 42;
    const L = 22;
    const K = 101010256;
    const U = 80;
    const j = 8;
    const q = 10;
    const G = 12;
    const Y = 16;
    const H = 20;
    const J = 65535;
    const z = 20;
    const $ = 117853008;
    const W = 80;
    const V = 56;
    const X = 101075792;
    const Z = 80;
    const ee = 24;
    const te = 32;
    const ne = 40;
    const re = 48;
    const oe = 0;
    const ie = 8;
    const se = 9;
    const ae = 1;
    const Ae = 1;
    const ce = 4294967295;
    const ue = 65535;
    const le = function (e) {
      let t;
      let n;
      let o;
      let c;
      let l;
      let g;
      const d = this;
      const h = e.storeEntries !== false ? {} : null;
      const f = e.file;
      const p = e.nameEncoding ? new TextDecoder(e.nameEncoding) : null;
      function m() {
        r.fstat(t, (r, s) => {
          if (r) {
            return d.emit('error', r);
          }
          n = s.size;
          o = e.chunkSize || Math.round(n / 1000);
          o = Math.max(Math.min(o, Math.min(131072, n)), Math.min(1024, n));
          (function () {
            const e = Math.min(L + J, n);
            c = {
              win: new me(t),
              totalReadLength: e,
              minPos: n - e,
              lastPos: n,
              chunkSize: Math.min(1024, o),
              firstByte: U,
              sig: K,
              complete: E
            };
            c.win.read(n - c.chunkSize, c.chunkSize, I);
          })();
        });
      }
      function I(e, t) {
        if (e || !t) {
          return d.emit('error', e || new Error('Archive read error'));
        }
        let n = c.lastPos;
        let r = n - c.win.position;
        const o = c.win.buffer;
        const s = c.minPos;
        while (--n >= s && --r >= 0) {
          if (o.length - r >= 4 && o[r] === c.firstByte && o.readUInt32LE(r) === c.sig) {
            c.lastBufferPosition = r;
            c.lastBytesRead = t;
            c.complete();
            return;
          }
        }
        if (n === s) {
          return d.emit('error', new Error('Bad archive'));
        }
        c.lastPos = n + 1;
        c.chunkSize *= 2;
        if (n <= s) {
          return d.emit('error', new Error('Bad archive'));
        }
        const a = Math.min(c.chunkSize, n - s);
        c.win.expandLeft(a, I);
      }
      function E() {
        const e = c.win.buffer;
        const t = c.lastBufferPosition;
        try {
          l = new de();
          l.read(e.slice(t, t + L));
          l.headerOffset = c.win.position + t;
          if (l.commentLength) {
            d.comment = e.slice(t + L, t + L + l.commentLength).toString();
          } else {
            d.comment = null;
          }
          d.entriesCount = l.volumeEntries;
          d.centralDirectory = l;
          if (l.volumeEntries === ue && l.totalEntries === ue || l.size === ce || l.offset === ce) {
            (function () {
              const e = z;
              if (c.lastBufferPosition > e) {
                c.lastBufferPosition -= e;
                y();
              } else {
                c = {
                  win: c.win,
                  totalReadLength: e,
                  minPos: c.win.position - e,
                  lastPos: c.win.position,
                  chunkSize: c.chunkSize,
                  firstByte: W,
                  sig: $,
                  complete: y
                };
                c.win.read(c.lastPos - c.chunkSize, c.chunkSize, I);
              }
            })();
          } else {
            c = {};
            v();
          }
        } catch (e) {
          d.emit('error', e);
        }
      }
      function y() {
        const e = c.win.buffer;
        const t = new he();
        t.read(e.slice(c.lastBufferPosition, c.lastBufferPosition + z));
        const r = n - t.headerOffset;
        c = {
          win: c.win,
          totalReadLength: r,
          minPos: t.headerOffset,
          lastPos: c.lastPos,
          chunkSize: c.chunkSize,
          firstByte: Z,
          sig: X,
          complete: _
        };
        c.win.read(n - c.chunkSize, c.chunkSize, I);
      }
      function _() {
        const e = c.win.buffer;
        const t = new fe();
        t.read(e.slice(c.lastBufferPosition, c.lastBufferPosition + V));
        d.centralDirectory.volumeEntries = t.volumeEntries;
        d.centralDirectory.totalEntries = t.totalEntries;
        d.centralDirectory.size = t.size;
        d.centralDirectory.offset = t.offset;
        d.entriesCount = t.volumeEntries;
        c = {};
        v();
      }
      function v() {
        c = {
          win: new me(t),
          pos: l.offset,
          chunkSize: o,
          entriesLeft: l.volumeEntries
        };
        c.win.read(c.pos, Math.min(o, n - c.pos), b);
      }
      function b(t, n) {
        if (t || !n) {
          return d.emit('error', t || new Error('Entries read error'));
        }
        let r = c.pos - c.win.position;
        let s = c.entry;
        const a = c.win.buffer;
        const A = a.length;
        try {
          while (c.entriesLeft > 0) {
            if (!s) {
              s = new pe();
              s.readHeader(a, r);
              s.headerOffset = c.win.position + r;
              c.entry = s;
              c.pos += w;
              r += w;
            }
            const t = s.fnameLen + s.extraLen + s.comLen;
            if (A - r < t + (c.entriesLeft > 1 ? w : 0)) {
              c.win.moveRight(o, b, r);
              c.move = true;
              return;
            }
            s.read(a, r, p);
            if (!e.skipEntryNameValidation) {
              s.validateName();
            }
            if (h) {
              h[s.name] = s;
            }
            d.emit('entry', s);
            c.entry = s = null;
            c.entriesLeft--;
            c.pos += t;
            r += t;
          }
          d.emit('ready');
        } catch (t) {
          d.emit('error', t);
        }
      }
      function B() {
        if (!h) {
          throw new Error('storeEntries disabled');
        }
      }
      function Q(e) {
        return e.offset + u + e.fnameLen + e.extraLen;
      }
      function D(e) {
        return !!(~e.flags & 8);
      }
      function S(e, n, o) {
        d.stream(e, (s, a) => {
          if (s) {
            o(s);
          } else {
            let s;
            let A;
            a.on('error', e => {
              A = e;
              if (s) {
                a.unpipe(s);
                s.close(() => {
                  o(e);
                });
              }
            });
            r.open(n, 'w', (c, u) => {
              if (c) {
                return o(c);
              }
              if (A) {
                r.close(t, () => {
                  o(A);
                });
              } else {
                s = r.createWriteStream(n, {
                  fd: u
                });
                s.on('finish', () => {
                  d.emit('extract', e, n);
                  if (!A) {
                    o();
                  }
                });
                a.pipe(s);
              }
            });
          }
        });
      }
      function T(e, t, n) {
        if (!t.length) {
          return n();
        }
        let o = t.shift();
        o = s.join(e, s.join(...o));
        r.mkdir(o, {
          recursive: true
        }, r => {
          if (r && r.code !== 'EEXIST') {
            return n(r);
          }
          T(e, t, n);
        });
      }
      function R(e, t, n, r, o) {
        if (!n.length) {
          return r(null, o);
        }
        const a = n.shift();
        const A = s.join(e, a.name.replace(t, ''));
        S(a, A, s => {
          if (s) {
            return r(s, o);
          }
          R(e, t, n, r, o + 1);
        });
      }
      if (e.fd) {
        t = e.fd;
        m();
      } else {
        r.open(f, 'r', (e, n) => {
          if (e) {
            return d.emit('error', e);
          }
          t = n;
          m();
        });
      }
      Object.defineProperty(this, 'ready', {
        get: () => false
      });
      this.entry = function (e) {
        B();
        return h[e];
      };
      this.entries = function () {
        B();
        return h;
      };
      this.stream = function (e, n) {
        return this.openEntry(e, (e, r) => {
          if (e) {
            return n(e);
          }
          const o = Q(r);
          let s = new Ie(t, o, r.compressedSize);
          if (r.method === oe) ;else {
            if (r.method !== ie) {
              return n(new Error(`Unknown compression method: ${r.method}`));
            }
            s = s.pipe(A.createInflateRaw());
          }
          if (D(r)) {
            s = s.pipe(new Ee(s, r.crc, r.size));
          }
          n(null, s);
        }, false);
      };
      this.entryDataSync = function (e) {
        let n = null;
        this.openEntry(e, (t, r) => {
          n = t;
          e = r;
        }, true);
        if (n) {
          throw n;
        }
        let r = Buffer.alloc(e.compressedSize);
        new Ce(t, r, 0, e.compressedSize, Q(e), e => {
          n = e;
        }).read(true);
        if (n) {
          throw n;
        }
        if (e.method === oe) ;else {
          if (e.method !== ie && e.method !== se) {
            throw new Error(`Unknown compression method: ${e.method}`);
          }
          r = A.inflateRawSync(r);
        }
        if (r.length !== e.size) {
          throw new Error('Invalid size');
        }
        if (D(e)) {
          new ye(e.crc, e.size).data(r);
        }
        return r;
      };
      this.openEntry = function (e, n, r) {
        if (typeof e == 'string' && (B(), !(e = h[e]))) {
          return n(new Error('Entry not found'));
        }
        if (!e.isFile) {
          return n(new Error('Entry is not file'));
        }
        if (!t) {
          return n(new Error('Archive closed'));
        }
        const o = Buffer.alloc(u);
        new Ce(t, o, 0, o.length, e.offset, t => {
          if (t) {
            return n(t);
          }
          let r;
          try {
            e.readDataHeader(o);
            if (e.encrypted) {
              r = new Error('Entry encrypted');
            }
          } catch (e) {
            r = e;
          }
          n(r, e);
        }).read(r);
      };
      this.extract = function (e, t, n) {
        let o = e || '';
        if (typeof e == 'string') {
          if (e = this.entry(e)) {
            o = e.name;
          } else {
            if (o.length && o[o.length - 1] !== '/') {
              o += '/';
            }
          }
        }
        if (!e || e.isDirectory) {
          const e = [];
          const r = [];
          const a = {};
          for (const t in h) {
            if (Object.prototype.hasOwnProperty.call(h, t) && t.lastIndexOf(o, 0) === 0) {
              let n = t.replace(o, '');
              const A = h[t];
              if (A.isFile) {
                e.push(A);
                n = s.dirname(n);
              }
              if (n && !a[n] && n !== '.') {
                a[n] = true;
                let e = n.split('/').filter(e => e);
                for (e.length && r.push(e); e.length > 1;) {
                  e = e.slice(0, e.length - 1);
                  const t = e.join('/');
                  if (a[t] || t === '.') {
                    break;
                  }
                  a[t] = true;
                  r.push(e);
                }
              }
            }
          }
          r.sort((e, t) => e.length - t.length);
          if (r.length) {
            T(t, r, r => {
              if (r) {
                n(r);
              } else {
                R(t, o, e, n, 0);
              }
            });
          } else {
            R(t, o, e, n, 0);
          }
        } else {
          r.stat(t, (r, o) => {
            if (o && o.isDirectory()) {
              S(e, s.join(t, s.basename(e.name)), n);
            } else {
              S(e, t, n);
            }
          });
        }
      };
      this.close = function (e) {
        if (g || !t) {
          g = true;
          if (e) {
            e();
          }
        } else {
          g = true;
          r.close(t, n => {
            t = null;
            if (e) {
              e(n);
            }
          });
        }
      };
      const k = a.EventEmitter.prototype.emit;
      this.emit = function (...e) {
        if (!g) {
          return k.call(this, ...e);
        }
      };
    };
    le.setFs = function (e) {
      r = e;
    };
    le.debugLog = (...e) => {
      if (le.debug) {
        console.log(...e);
      }
    };
    o.inherits(le, a.EventEmitter);
    const ge = Symbol('zip');
    le.async = class extends a.EventEmitter {
      constructor(e) {
        super();
        const t = new le(e);
        t.on('entry', e => this.emit('entry', e));
        t.on('extract', (e, t) => this.emit('extract', e, t));
        this[ge] = new Promise((e, n) => {
          t.on('ready', () => {
            t.removeListener('error', n);
            e(t);
          });
          t.on('error', n);
        });
      }
      get entriesCount() {
        return this[ge].then(e => e.entriesCount);
      }
      get comment() {
        return this[ge].then(e => e.comment);
      }
      async entry(e) {
        return (await this[ge]).entry(e);
      }
      async entries() {
        return (await this[ge]).entries();
      }
      async stream(e) {
        const t = await this[ge];
        return new Promise((n, r) => {
          t.stream(e, (e, t) => {
            if (e) {
              r(e);
            } else {
              n(t);
            }
          });
        });
      }
      async entryData(e) {
        const t = await this.stream(e);
        return new Promise((e, n) => {
          const r = [];
          t.on('data', e => r.push(e));
          t.on('end', () => {
            e(Buffer.concat(r));
          });
          t.on('error', e => {
            t.removeAllListeners('end');
            n(e);
          });
        });
      }
      async extract(e, t) {
        const n = await this[ge];
        return new Promise((r, o) => {
          n.extract(e, t, (e, t) => {
            if (e) {
              o(e);
            } else {
              r(t);
            }
          });
        });
      }
      async close() {
        const e = await this[ge];
        return new Promise((t, n) => {
          e.close(e => {
            if (e) {
              n(e);
            } else {
              t();
            }
          });
        });
      }
    };
    class de {
      read(e) {
        if (e.length !== L || e.readUInt32LE(0) !== K) {
          throw new Error('Invalid central directory');
        }
        this.volumeEntries = e.readUInt16LE(j);
        this.totalEntries = e.readUInt16LE(q);
        this.size = e.readUInt32LE(G);
        this.offset = e.readUInt32LE(Y);
        this.commentLength = e.readUInt16LE(H);
      }
    }
    class he {
      read(e) {
        if (e.length !== z || e.readUInt32LE(0) !== $) {
          throw new Error('Invalid zip64 central directory locator');
        }
        this.headerOffset = ve(e, j);
      }
    }
    class fe {
      read(e) {
        if (e.length !== V || e.readUInt32LE(0) !== X) {
          throw new Error('Invalid central directory');
        }
        this.volumeEntries = ve(e, ee);
        this.totalEntries = ve(e, te);
        this.size = ve(e, ne);
        this.offset = ve(e, re);
      }
    }
    class pe {
      readHeader(e, t) {
        if (e.length < t + w || e.readUInt32LE(t) !== _) {
          throw new Error('Invalid entry header');
        }
        this.verMade = e.readUInt16LE(t + v);
        this.version = e.readUInt16LE(t + b);
        this.flags = e.readUInt16LE(t + B);
        this.method = e.readUInt16LE(t + Q);
        const n = e.readUInt16LE(t + D);
        const r = e.readUInt16LE(t + D + 2);
        this.time = we(n, r);
        this.crc = e.readUInt32LE(t + S);
        this.compressedSize = e.readUInt32LE(t + T);
        this.size = e.readUInt32LE(t + R);
        this.fnameLen = e.readUInt16LE(t + k);
        this.extraLen = e.readUInt16LE(t + x);
        this.comLen = e.readUInt16LE(t + P);
        this.diskStart = e.readUInt16LE(t + F);
        this.inattr = e.readUInt16LE(t + M);
        this.attr = e.readUInt32LE(t + O);
        this.offset = e.readUInt32LE(t + N);
      }
      readDataHeader(e) {
        if (e.readUInt32LE(0) !== l) {
          throw new Error('Invalid local header');
        }
        this.version = e.readUInt16LE(g);
        this.flags = e.readUInt16LE(d);
        this.method = e.readUInt16LE(h);
        const t = e.readUInt16LE(f);
        const n = e.readUInt16LE(f + 2);
        this.time = we(t, n);
        this.crc = e.readUInt32LE(p) || this.crc;
        const r = e.readUInt32LE(m);
        if (r && r !== ce) {
          this.compressedSize = r;
        }
        const o = e.readUInt32LE(I);
        if (o && o !== ce) {
          this.size = o;
        }
        this.fnameLen = e.readUInt16LE(E);
        this.extraLen = e.readUInt16LE(y);
      }
      read(e, t, n) {
        const r = e.slice(t, t += this.fnameLen);
        this.name = n ? n.decode(new Uint8Array(r)) : r.toString('utf8');
        const o = e[t - 1];
        this.isDirectory = o === 47 || o === 92;
        if (this.extraLen) {
          this.readExtra(e, t);
          t += this.extraLen;
        }
        this.comment = this.comLen ? e.slice(t, t + this.comLen).toString() : null;
      }
      validateName() {
        if (/\\|^\w+:|^\/|(^|\/)\.\.(\/|$)/.test(this.name)) {
          throw new Error(`Malicious entry: ${this.name}`);
        }
      }
      readExtra(e, t) {
        let n;
        let r;
        const o = t + this.extraLen;
        while (t < o) {
          n = e.readUInt16LE(t);
          t += 2;
          r = e.readUInt16LE(t);
          t += 2;
          if (Ae === n) {
            this.parseZip64Extra(e, t, r);
          }
          t += r;
        }
      }
      parseZip64Extra(e, t, n) {
        if (n >= 8 && this.size === ce) {
          this.size = ve(e, t);
          t += 8;
          n -= 8;
        }
        if (n >= 8 && this.compressedSize === ce) {
          this.compressedSize = ve(e, t);
          t += 8;
          n -= 8;
        }
        if (n >= 8 && this.offset === ce) {
          this.offset = ve(e, t);
          t += 8;
          n -= 8;
        }
        if (n >= 4 && this.diskStart === ue) {
          this.diskStart = e.readUInt32LE(t);
        }
      }
      get encrypted() {
        return (this.flags & ae) === ae;
      }
      get isFile() {
        return !this.isDirectory;
      }
    }
    class Ce {
      constructor(e, t, n, r, o, s) {
        this.fd = e;
        this.buffer = t;
        this.offset = n;
        this.length = r;
        this.position = o;
        this.callback = s;
        this.bytesRead = 0;
        this.waiting = false;
      }
      read(e) {
        let t;
        le.debugLog('read', this.position, this.bytesRead, this.length, this.offset);
        this.waiting = true;
        if (e) {
          let n = 0;
          try {
            n = r.readSync(this.fd, this.buffer, this.offset + this.bytesRead, this.length - this.bytesRead, this.position + this.bytesRead);
          } catch (e) {
            t = e;
          }
          this.readCallback(e, t, t ? n : null);
        } else {
          r.read(this.fd, this.buffer, this.offset + this.bytesRead, this.length - this.bytesRead, this.position + this.bytesRead, this.readCallback.bind(this, e));
        }
      }
      readCallback(e, t, n) {
        if (typeof n == 'number') {
          this.bytesRead += n;
        }
        if (t || !n || this.bytesRead === this.length) {
          this.waiting = false;
          return this.callback(t, this.bytesRead);
        }
        this.read(e);
      }
    }
    class me {
      constructor(e) {
        this.position = 0;
        this.buffer = Buffer.alloc(0);
        this.fd = e;
        this.fsOp = null;
      }
      checkOp() {
        if (this.fsOp && this.fsOp.waiting) {
          throw new Error('Operation in progress');
        }
      }
      read(e, t, n) {
        this.checkOp();
        if (this.buffer.length < t) {
          this.buffer = Buffer.alloc(t);
        }
        this.position = e;
        this.fsOp = new Ce(this.fd, this.buffer, 0, t, this.position, n).read();
      }
      expandLeft(e, t) {
        this.checkOp();
        this.buffer = Buffer.concat([Buffer.alloc(e), this.buffer]);
        this.position -= e;
        if (this.position < 0) {
          this.position = 0;
        }
        this.fsOp = new Ce(this.fd, this.buffer, 0, e, this.position, t).read();
      }
      expandRight(e, t) {
        this.checkOp();
        const n = this.buffer.length;
        this.buffer = Buffer.concat([this.buffer, Buffer.alloc(e)]);
        this.fsOp = new Ce(this.fd, this.buffer, n, e, this.position + n, t).read();
      }
      moveRight(e, t, n) {
        this.checkOp();
        if (n) {
          this.buffer.copy(this.buffer, 0, n);
        } else {
          n = 0;
        }
        this.position += n;
        this.fsOp = new Ce(this.fd, this.buffer, this.buffer.length - n, n, this.position + this.buffer.length - n, t).read();
      }
    }
    class Ie extends c.Readable {
      constructor(e, t, n) {
        super();
        this.fd = e;
        this.offset = t;
        this.length = n;
        this.pos = 0;
        this.readCallback = this.readCallback.bind(this);
      }
      _read(e) {
        const t = Buffer.alloc(Math.min(e, this.length - this.pos));
        if (t.length) {
          r.read(this.fd, t, 0, t.length, this.offset + this.pos, this.readCallback);
        } else {
          this.push(null);
        }
      }
      readCallback(e, t, n) {
        this.pos += t;
        if (e) {
          this.emit('error', e);
          this.push(null);
        } else {
          if (t) {
            if (t !== n.length) {
              n = n.slice(0, t);
            }
            this.push(n);
          } else {
            this.push(null);
          }
        }
      }
    }
    class Ee extends c.Transform {
      constructor(e, t, n) {
        super();
        this.verify = new ye(t, n);
        e.on('error', e => {
          this.emit('error', e);
        });
      }
      _transform(e, t, n) {
        let r;
        try {
          this.verify.data(e);
        } catch (e) {
          r = e;
        }
        n(r, e);
      }
    }
    class ye {
      constructor(e, t) {
        this.crc = e;
        this.size = t;
        this.state = {
          crc: -1,
          size: 0
        };
      }
      data(e) {
        const t = ye.getCrcTable();
        let n = this.state.crc;
        let r = 0;
        let o = e.length;
        while (--o >= 0) {
          n = t[(n ^ e[r++]) & 255] ^ n >>> 8;
        }
        this.state.crc = n;
        this.state.size += e.length;
        if (this.state.size >= this.size) {
          const e = Buffer.alloc(4);
          e.writeInt32LE(~this.state.crc & 4294967295, 0);
          n = e.readUInt32LE(0);
          if (n !== this.crc) {
            throw new Error('Invalid CRC');
          }
          if (this.state.size !== this.size) {
            throw new Error('Invalid size');
          }
        }
      }
      static getCrcTable() {
        let e = ye.crcTable;
        if (!e) {
          ye.crcTable = e = [];
          const t = Buffer.alloc(4);
          for (let n = 0; n < 256; n++) {
            let r = n;
            for (let e = 8; --e >= 0;) {
              if (r & 1) {
                r = r >>> 1 ^ 3988292384;
              } else {
                r >>>= 1;
              }
            }
            if (r < 0) {
              t.writeInt32LE(r, 0);
              r = t.readUInt32LE(0);
            }
            e[n] = r;
          }
        }
        return e;
      }
    }
    function we(e, t) {
      const n = _e(e, 16);
      const r = _e(t, 16);
      const o = {
        h: parseInt(n.slice(0, 5).join(''), 2),
        m: parseInt(n.slice(5, 11).join(''), 2),
        s: parseInt(n.slice(11, 16).join(''), 2) * 2,
        Y: parseInt(r.slice(0, 7).join(''), 2) + 1980,
        M: parseInt(r.slice(7, 11).join(''), 2),
        D: parseInt(r.slice(11, 16).join(''), 2)
      };
      const s = [o.Y, o.M, o.D].join('-') + ' ' + [o.h, o.m, o.s].join(':') + ' GMT+0';
      return new Date(s).getTime();
    }
    function _e(e, t) {
      let n = (e >>> 0).toString(2);
      while (n.length < t) {
        n = `0${n}`;
      }
      return n.split('');
    }
    function ve(e, t) {
      return e.readUInt32LE(t + 4) * 4294967296 + e.readUInt32LE(t);
    }
    module.exports = le;
  },
  94763: (module, exports, require) => {
    (() => {
      var __webpack_modules__ = {
        5716: (_module, _exports, _require) => {
          "use strict";

          _exports.R = undefined;
          const r = _require(6027);
          const o = _require(1723);
          _exports.R = new class {
            async init() {}
            async createSessionHandler(e, t) {
              const n = new r.Session(t);
              await n.loadModel(e);
              return new o.OnnxjsSessionHandler(n);
            }
          }();
        },
        2818: (_module, _exports, _require) => {
          "use strict";

          _exports.c8 = _exports.rX = undefined;
          const r = _require(6207);
          const o = _require(9719);
          const s = _require(9544);
          const a = _require(6640);
          _exports.rX = () => {
            if (typeof r.env.wasm.initTimeout != 'number' || r.env.wasm.initTimeout < 0) {
              r.env.wasm.initTimeout = 0;
            }
            if (typeof r.env.wasm.simd != 'boolean') {
              r.env.wasm.simd = true;
            }
            if (typeof r.env.wasm.proxy != 'boolean') {
              r.env.wasm.proxy = false;
            }
            if (typeof r.env.wasm.numThreads != 'number' || !Number.isInteger(r.env.wasm.numThreads) || r.env.wasm.numThreads <= 0) {
              const e = typeof navigator == 'undefined' ? o.cpus().length : navigator.hardwareConcurrency;
              r.env.wasm.numThreads = Math.min(4, Math.ceil((e || 1) / 2));
            }
          };
          _exports.c8 = new class {
            async init() {
              _exports.rX();
              await s.initializeWebAssemblyInstance();
            }
            async createSessionHandler(e, t) {
              const n = new a.OnnxruntimeWebAssemblySessionHandler();
              await n.loadModel(e, t);
              return Promise.resolve(n);
            }
          }();
        },
        1057: function (_module, _exports, _require) {
          "use strict";

          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __exportStar = this && this.__exportStar || function (m, exports) {
            for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          __exportStar(_require(6207), _exports);
          const s = _require(6207);
          const a = _require(8408);
          {
            const e = _require(5716).R;
            s.registerBackend('webgl', e, -10);
          }
          {
            const e = _require(2818).c8;
            s.registerBackend('cpu', e, 10);
            s.registerBackend('wasm', e, 10);
            s.registerBackend('xnnpack', e, 9);
            s.registerBackend('webnn', e, 9);
          }
          s.env.versions.web = a.version;
        },
        4910: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createAttributeWithCacheKey = undefined;
          class n {
            constructor(e) {
              Object.assign(this, e);
            }
            get cacheKey() {
              if (!this._cacheKey) {
                this._cacheKey = Object.getOwnPropertyNames(this).sort().map(e => `${this[e]}`).join(';');
              }
              return this._cacheKey;
            }
          }
          _exports.createAttributeWithCacheKey = e => new n(e);
        },
        6874: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Attribute = undefined;
          const r = _require(5127);
          const o = _require(2446);
          const s = _require(9240);
          const a = _require(7273);
          var A = r.onnxruntime.experimental.fbs;
          class c {
            constructor(e) {
              this._attributes = new Map();
              if (e != null) {
                for (const t of e) {
                  if (t instanceof o.onnx.AttributeProto) {
                    this._attributes.set(t.name, [c.getValue(t), c.getType(t)]);
                  } else {
                    if (t instanceof A.Attribute) {
                      this._attributes.set(t.name(), [c.getValue(t), c.getType(t)]);
                    }
                  }
                }
                if (this._attributes.size < e.length) {
                  throw new Error('duplicated attribute names');
                }
              }
            }
            set(e, t, n) {
              this._attributes.set(e, [n, t]);
            }
            delete(e) {
              this._attributes.delete(e);
            }
            getFloat(e, t) {
              return this.get(e, 'float', t);
            }
            getInt(e, t) {
              return this.get(e, 'int', t);
            }
            getString(e, t) {
              return this.get(e, 'string', t);
            }
            getTensor(e, t) {
              return this.get(e, 'tensor', t);
            }
            getFloats(e, t) {
              return this.get(e, 'floats', t);
            }
            getInts(e, t) {
              return this.get(e, 'ints', t);
            }
            getStrings(e, t) {
              return this.get(e, 'strings', t);
            }
            getTensors(e, t) {
              return this.get(e, 'tensors', t);
            }
            get(e, t, n) {
              const r = this._attributes.get(e);
              if (r === undefined) {
                if (n !== undefined) {
                  return n;
                }
                throw new Error(`required attribute not found: ${e}`);
              }
              if (r[1] !== t) {
                throw new Error(`type mismatch: expected ${t} but got ${r[1]}`);
              }
              return r[0];
            }
            static getType(e) {
              const t = e instanceof o.onnx.AttributeProto ? e.type : e.type();
              switch (t) {
                case o.onnx.AttributeProto.AttributeType.FLOAT:
                  return 'float';
                case o.onnx.AttributeProto.AttributeType.INT:
                  return 'int';
                case o.onnx.AttributeProto.AttributeType.STRING:
                  return 'string';
                case o.onnx.AttributeProto.AttributeType.TENSOR:
                  return 'tensor';
                case o.onnx.AttributeProto.AttributeType.FLOATS:
                  return 'floats';
                case o.onnx.AttributeProto.AttributeType.INTS:
                  return 'ints';
                case o.onnx.AttributeProto.AttributeType.STRINGS:
                  return 'strings';
                case o.onnx.AttributeProto.AttributeType.TENSORS:
                  return 'tensors';
                default:
                  throw new Error(`attribute type is not supported yet: ${o.onnx.AttributeProto.AttributeType[t]}`);
              }
            }
            static getValue(e) {
              const t = e instanceof o.onnx.AttributeProto ? e.type : e.type();
              if (t === o.onnx.AttributeProto.AttributeType.GRAPH || t === o.onnx.AttributeProto.AttributeType.GRAPHS) {
                throw new Error('graph attribute is not supported yet');
              }
              const n = this.getValueNoCheck(e);
              if (t === o.onnx.AttributeProto.AttributeType.INT && a.LongUtil.isLong(n)) {
                return a.LongUtil.longToNumber(n);
              }
              if (t === o.onnx.AttributeProto.AttributeType.INTS) {
                const e = n;
                const t = new Array(e.length);
                for (let n = 0; n < e.length; n++) {
                  const r = e[n];
                  t[n] = a.LongUtil.longToNumber(r);
                }
                return t;
              }
              if (t === o.onnx.AttributeProto.AttributeType.TENSOR) {
                if (e instanceof o.onnx.AttributeProto) {
                  return s.Tensor.fromProto(n);
                } else {
                  return s.Tensor.fromOrtTensor(n);
                }
              }
              if (t === o.onnx.AttributeProto.AttributeType.TENSORS) {
                if (e instanceof o.onnx.AttributeProto) {
                  return n.map(e => s.Tensor.fromProto(e));
                }
                if (e instanceof A.Attribute) {
                  return n.map(e => s.Tensor.fromOrtTensor(e));
                }
              }
              if (t === o.onnx.AttributeProto.AttributeType.STRING && e instanceof o.onnx.AttributeProto) {
                const e = n;
                return a.decodeUtf8String(e);
              }
              if (t === o.onnx.AttributeProto.AttributeType.STRINGS && e instanceof o.onnx.AttributeProto) {
                return n.map(a.decodeUtf8String);
              } else {
                return n;
              }
            }
            static getValueNoCheck(e) {
              if (e instanceof o.onnx.AttributeProto) {
                return this.getValueNoCheckFromOnnxFormat(e);
              } else {
                return this.getValueNoCheckFromOrtFormat(e);
              }
            }
            static getValueNoCheckFromOnnxFormat(e) {
              switch (e.type) {
                case o.onnx.AttributeProto.AttributeType.FLOAT:
                  return e.f;
                case o.onnx.AttributeProto.AttributeType.INT:
                  return e.i;
                case o.onnx.AttributeProto.AttributeType.STRING:
                  return e.s;
                case o.onnx.AttributeProto.AttributeType.TENSOR:
                  return e.t;
                case o.onnx.AttributeProto.AttributeType.GRAPH:
                  return e.g;
                case o.onnx.AttributeProto.AttributeType.FLOATS:
                  return e.floats;
                case o.onnx.AttributeProto.AttributeType.INTS:
                  return e.ints;
                case o.onnx.AttributeProto.AttributeType.STRINGS:
                  return e.strings;
                case o.onnx.AttributeProto.AttributeType.TENSORS:
                  return e.tensors;
                case o.onnx.AttributeProto.AttributeType.GRAPHS:
                  return e.graphs;
                default:
                  throw new Error(`unsupported attribute type: ${o.onnx.AttributeProto.AttributeType[e.type]}`);
              }
            }
            static getValueNoCheckFromOrtFormat(e) {
              switch (e.type()) {
                case A.AttributeType.FLOAT:
                  return e.f();
                case A.AttributeType.INT:
                  return e.i();
                case A.AttributeType.STRING:
                  return e.s();
                case A.AttributeType.TENSOR:
                  return e.t();
                case A.AttributeType.GRAPH:
                  return e.g();
                case A.AttributeType.FLOATS:
                  return e.floatsArray();
                case A.AttributeType.INTS:
                  {
                    const t = [];
                    for (let n = 0; n < e.intsLength(); n++) {
                      t.push(e.ints(n));
                    }
                    return t;
                  }
                case A.AttributeType.STRINGS:
                  {
                    const t = [];
                    for (let n = 0; n < e.stringsLength(); n++) {
                      t.push(e.strings(n));
                    }
                    return t;
                  }
                case A.AttributeType.TENSORS:
                  {
                    const t = [];
                    for (let n = 0; n < e.tensorsLength(); n++) {
                      t.push(e.tensors(n));
                    }
                    return t;
                  }
                default:
                  throw new Error(`unsupported attribute type: ${A.AttributeType[e.type()]}`);
              }
            }
          }
          _exports.Attribute = c;
        },
        1975: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.resolveBackend = _exports.backend = undefined;
          const r = _require(4418);
          const o = new Map();
          async function s(e) {
            const n = _exports.backend;
            if (n[e] !== undefined && function (e) {
              const t = e;
              return 'initialize' in t && typeof t.initialize == 'function' && 'createSessionHandler' in t && typeof t.createSessionHandler == 'function' && 'dispose' in t && typeof t.dispose == 'function';
            }(n[e])) {
              const t = n[e];
              let r = t.initialize();
              if (typeof r == 'object' && 'then' in r) {
                r = await r;
              }
              if (r) {
                o.set(e, t);
                return t;
              }
            }
          }
          _exports.backend = {
            webgl: new r.WebGLBackend()
          };
          _exports.resolveBackend = async function e(t) {
            if (!t) {
              return e(['webgl']);
            }
            {
              const e = typeof t == 'string' ? [t] : t;
              for (const t of e) {
                const e = o.get(t);
                if (e) {
                  return e;
                }
                const n = await s(t);
                if (n) {
                  return n;
                }
              }
            }
            throw new Error('no available backend to use');
          };
        },
        4418: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.WebGLBackend = undefined;
          const r = _require(6207);
          const o = _require(1315);
          const s = _require(2171);
          const a = _require(3389);
          _exports.WebGLBackend = class {
            get contextId() {
              return r.env.webgl.contextId;
            }
            set contextId(e) {
              r.env.webgl.contextId = e;
            }
            get matmulMaxBatchSize() {
              return r.env.webgl.matmulMaxBatchSize;
            }
            set matmulMaxBatchSize(e) {
              r.env.webgl.matmulMaxBatchSize = e;
            }
            get textureCacheMode() {
              return r.env.webgl.textureCacheMode;
            }
            set textureCacheMode(e) {
              r.env.webgl.textureCacheMode = e;
            }
            get pack() {
              return r.env.webgl.pack;
            }
            set pack(e) {
              r.env.webgl.pack = e;
            }
            get async() {
              return r.env.webgl.async;
            }
            set async(e) {
              r.env.webgl.async = e;
            }
            initialize() {
              try {
                this.glContext = a.createWebGLContext(this.contextId);
                if (typeof this.matmulMaxBatchSize != 'number') {
                  this.matmulMaxBatchSize = 16;
                }
                if (typeof this.textureCacheMode != 'string') {
                  this.textureCacheMode = 'full';
                }
                if (typeof this.pack != 'boolean') {
                  this.pack = false;
                }
                if (typeof this.async != 'boolean') {
                  this.async = false;
                }
                o.Logger.setWithEnv(r.env);
                o.Logger.verbose('WebGLBackend', `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`);
                return true;
              } catch (e) {
                o.Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);
                return false;
              }
            }
            createSessionHandler(e) {
              return new s.WebGLSessionHandler(this, e);
            }
            dispose() {
              this.glContext.dispose();
            }
          };
        },
        6859: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.CoordsGlslLib = undefined;
          const r = _require(7273);
          const o = _require(1997);
          const s = _require(6757);
          const a = _require(7618);
          const A = _require(432);
          class c extends o.GlslLib {
            constructor(e) {
              super(e);
            }
            getFunctions() {
              return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, this.offsetToCoords()), this.coordsToOffset()), this.toVec()), this.valueFrom()), this.getCommonUtilFuncs()), this.getInputsSamplingSnippets()), this.getOutputSamplingSnippet());
            }
            getCustomTypes() {
              return {};
            }
            offsetToCoords() {
              return {
                offsetToCoords: new o.GlslLibRoutine('\n      vec2 offsetToCoords(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      ')
              };
            }
            coordsToOffset() {
              return {
                coordsToOffset: new o.GlslLibRoutine('\n      int coordsToOffset(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      ')
              };
            }
            getOutputSamplingSnippet() {
              const e = this.context.outputTextureLayout;
              if (e.isPacked) {
                return this.getPackedOutputSamplingSnippet(e);
              } else {
                return this.getUnpackedOutputSamplingSnippet(e);
              }
            }
            getPackedOutputSamplingSnippet(e) {
              const t = e.unpackedShape;
              const n = [e.width, e.height];
              const r = {};
              const a = 'getOutputCoords';
              switch (t.length) {
                case 0:
                  r[a] = this.getOutputScalarCoords();
                  break;
                case 1:
                  r[a] = this.getOutputPacked1DCoords(t, n);
                  break;
                case 2:
                  r[a] = this.getOutputPacked2DCoords(t, n);
                  break;
                case 3:
                  r[a] = this.getOutputPacked3DCoords(t, n);
                  break;
                default:
                  r[a] = this.getOutputPackedNDCoords(t, n);
              }
              const A = `\n      void setOutput(vec4 val) {\n        ${s.getGlsl(this.context.glContext.version).output} = val;\n      }\n    `;
              r.floatTextureSetRGBA = new o.GlslLibRoutine(A);
              return r;
            }
            getUnpackedOutputSamplingSnippet(e) {
              const t = e.unpackedShape;
              const n = [e.width, e.height];
              const r = {};
              const a = 'getOutputCoords';
              switch (t.length) {
                case 0:
                  r[a] = this.getOutputScalarCoords();
                  break;
                case 1:
                  r[a] = this.getOutputUnpacked1DCoords(t, n);
                  break;
                case 2:
                  r[a] = this.getOutputUnpacked2DCoords(t, n);
                  break;
                case 3:
                  r[a] = this.getOutputUnpacked3DCoords(t, n);
                  break;
                case 4:
                  r[a] = this.getOutputUnpacked4DCoords(t, n);
                  break;
                case 5:
                  r[a] = this.getOutputUnpacked5DCoords(t, n);
                  break;
                case 6:
                  r[a] = this.getOutputUnpacked6DCoords(t, n);
                  break;
                default:
                  throw new Error(`Unsupported output dimensionality: ${t.length}`);
              }
              const A = `\n        void setOutput(float val) {\n          ${s.getGlsl(this.context.glContext.version).output} = vec4(val, 0, 0, 0);\n        }\n    `;
              r.floatTextureSetR = new o.GlslLibRoutine(A);
              return r;
            }
            getOutputScalarCoords() {
              return new o.GlslLibRoutine('\n      int getOutputCoords() {\n        return 0;\n      }\n    ');
            }
            getOutputPacked1DCoords(e, t) {
              const n = t;
              let r = '';
              if (n[0] === 1) {
                r = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${n[1]}.0);\n          }\n        `;
                return new o.GlslLibRoutine(r);
              } else {
                if (n[1] === 1) {
                  r = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${n[0]}.0);\n          }\n        `;
                  return new o.GlslLibRoutine(r);
                } else {
                  r = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${n[0]}, ${n[1]}));\n          return 2 * (resTexRC.y * ${n[0]} + resTexRC.x);\n        }\n      `;
                  return new o.GlslLibRoutine(r);
                }
              }
            }
            getOutputPacked2DCoords(e, t) {
              let n = '';
              if (r.ArrayUtil.arraysEqual(e, t)) {
                n = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));\n        }\n      `;
                return new o.GlslLibRoutine(n);
              }
              const s = t;
              const a = Math.ceil(e[1] / 2);
              n = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${s[0]}, ${s[1]}));\n\n          int index = resTexRC.y * ${s[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${a}) * 2;\n          int c = 2 * (index / ${a});\n\n          return ivec2(r, c);\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputPacked3DCoords(e, t) {
              const n = [t[0], t[1]];
              const r = Math.ceil(e[2] / 2);
              const s = r * Math.ceil(e[1] / 2);
              const a = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${n[0]}, ${n[1]}));\n          int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n          int b = index / ${s};\n          index -= b * ${s};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${r}) * 2;\n          int c = 2 * (index / ${r});\n\n          return ivec3(b, r, c);\n        }\n      `;
              return new o.GlslLibRoutine(a);
            }
            getOutputPackedNDCoords(e, t) {
              const n = [t[0], t[1]];
              const r = Math.ceil(e[e.length - 1] / 2);
              const s = r * Math.ceil(e[e.length - 2] / 2);
              let a = s;
              let A = '';
              let c = 'b, r, c';
              for (let t = 2; t < e.length - 1; t++) {
                a *= e[e.length - t - 1];
                A = `\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    ${A}`;
                c = `b${t}, ${c}`;
              }
              const u = `\n      ivec${e.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n        ${A}\n\n        int b = index / ${s};\n        index -= b * ${s};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${r}) * 2;\n        int c = 2 * (index / ${r});\n\n        return ivec${e.length}(${c});\n      }\n    `;
              return new o.GlslLibRoutine(u);
            }
            getOutputUnpacked1DCoords(e, t) {
              const n = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          return resTexRC.y * ${t[0]} + resTexRC.x;\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputUnpacked2DCoords(e, t) {
              const n = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          int r = index / ${e[1]};\n          int c = index - r * ${e[1]};\n          return ivec2(r, c);\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputUnpacked3DCoords(e, t) {
              let n = '';
              const r = e.length;
              let s = null;
              if (r < 2) {
                s = [];
              }
              s = new Array(r - 1);
              s[r - 2] = e[r - 1];
              for (let t = r - 3; t >= 0; --t) {
                s[t] = s[t + 1] * e[t + 1];
              }
              const a = ['r', 'c', 'd'];
              const A = s.map((e, t) => `int ${a[t]} = index / ${e}; ${t === s.length - 1 ? `int ${a[t + 1]} = index - ${a[t]} * ${e}` : `index -= ${a[t]} * ${e}`};`).join('');
              n = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${A}\n          return ivec3(r, c, d);\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputUnpacked4DCoords(e, t) {
              let n = '';
              const r = e.length;
              let s = null;
              if (r < 2) {
                s = [];
              }
              s = new Array(r - 1);
              s[r - 2] = e[r - 1];
              for (let t = r - 3; t >= 0; --t) {
                s[t] = s[t + 1] * e[t + 1];
              }
              const a = ['r', 'c', 'd', 'd2'];
              const A = s.map((e, t) => `int ${a[t]} = index / ${e}; ${t === s.length - 1 ? `int ${a[t + 1]} = index - ${a[t]} * ${e}` : `index -= ${a[t]} * ${e}`};`).join('');
              n = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${A}\n          return ivec4(r, c, d, d2);\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputUnpacked5DCoords(e, t) {
              let n = '';
              const r = e.length;
              let s = null;
              if (r < 2) {
                s = [];
              }
              s = new Array(r - 1);
              s[r - 2] = e[r - 1];
              for (let t = r - 3; t >= 0; --t) {
                s[t] = s[t + 1] * e[t + 1];
              }
              const a = ['r', 'c', 'd', 'd2', 'd3'];
              const A = s.map((e, t) => `int ${a[t]} = index / ${e}; ${t === s.length - 1 ? `int ${a[t + 1]} = index - ${a[t]} * ${e}` : `index -= ${a[t]} * ${e}`};`).join('');
              n = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${A}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;
              return new o.GlslLibRoutine(n);
            }
            getOutputUnpacked6DCoords(e, t) {
              let n = '';
              const r = e.length;
              let s = null;
              if (r < 2) {
                s = [];
              }
              s = new Array(r - 1);
              s[r - 2] = e[r - 1];
              for (let t = r - 3; t >= 0; --t) {
                s[t] = s[t + 1] * e[t + 1];
              }
              const a = ['r', 'c', 'd', 'd2', 'd3', 'd4'];
              const A = s.map((e, t) => `int ${a[t]} = index / ${e}; ${t === s.length - 1 ? `int ${a[t + 1]} = index - ${a[t]} * ${e}` : `index -= ${a[t]} * ${e}`};`).join('');
              n = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${t[0]}, ${t[1]}));\n         int index = resTexRC.y * ${t[0]} + resTexRC.x;\n         ${A}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;
              return new o.GlslLibRoutine(n);
            }
            getCommonUtilFuncs() {
              const e = {};
              let t = 'uvFromFlat';
              e[t] = new o.GlslLibRoutine('\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    ');
              t = 'packedUVfrom1D';
              e[t] = new o.GlslLibRoutine('\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      ');
              t = 'packedUVfrom2D';
              e[t] = new o.GlslLibRoutine('\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      ');
              t = 'packedUVfrom3D';
              e[t] = new o.GlslLibRoutine('\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      ');
              t = 'sampleTexture';
              const n = s.getGlsl(this.context.glContext.version);
              e[t] = new o.GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${n.texture2D}(textureSampler, uv).r;\n        }`);
              return e;
            }
            getInputsSamplingSnippets() {
              const e = {};
              const t = this.context.outputTextureLayout;
              this.context.programInfo.inputNames.forEach((n, r) => {
                const o = this.context.inputTextureLayouts[r];
                const s = A.generateShaderFuncNameFromInputSamplerName(n);
                if (o.isPacked) {
                  e[s] = this.getPackedSamplerFromInput(s, n, o);
                } else {
                  e[s] = this.getUnpackedSamplerFromInput(s, n, o);
                }
                const a = A.generateShaderFuncNameFromInputSamplerNameAtOutCoords(n);
                if (o.unpackedShape.length <= t.unpackedShape.length) {
                  if (o.isPacked) {
                    e[a] = this.getPackedSamplerAtOutputCoords(a, o, t, n);
                  } else {
                    e[a] = this.getUnpackedSamplerAtOutputCoords(a, o, t, n);
                  }
                }
              });
              return e;
            }
            getPackedSamplerAtOutputCoords(e, t, n, s) {
              const a = t.unpackedShape;
              const c = n.unpackedShape;
              const u = s;
              const l = A.generateShaderFuncNameFromInputSamplerName(u);
              const g = a.length;
              const d = c.length;
              const h = r.BroadcastUtil.getBroadcastDims(a, c);
              const f = A.getCoordsDataType(d);
              const p = d - g;
              let m;
              const I = A.getGlChannels();
              m = g === 0 ? '' : d < 2 && h.length >= 1 ? 'coords = 0;' : h.map(e => `coords.${I[e + p]} = 0;`).join('\n');
              let E = '';
              E = d < 2 && g > 0 ? 'coords' : a.map((e, t) => `coords.${I[t + p]}`).join(', ');
              let y = 'return outputValue;';
              const w = r.ShapeUtil.size(a) === 1;
              const _ = r.ShapeUtil.size(c) === 1;
              if (g !== 1 || w || _) {
                if (w && !_) {
                  y = d === 1 ? '\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        ' : '\n          return vec4(outputValue.x);\n        ';
                } else {
                  if (h.length) {
                    const e = g - 2;
                    const t = g - 1;
                    if (h.indexOf(e) > -1 && h.indexOf(t) > -1) {
                      y = 'return vec4(outputValue.x);';
                    } else {
                      if (h.indexOf(e) > -1) {
                        y = 'return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);';
                      } else {
                        if (h.indexOf(t) > -1) {
                          y = 'return vec4(outputValue.xx, outputValue.zz);';
                        }
                      }
                    }
                  }
                }
              } else {
                y = '\n        return vec4(outputValue.xy, outputValue.xy);\n      ';
              }
              const v = `\n      vec4 ${e}() {\n        ${f} coords = getOutputCoords();\n        \n        int lastDim = coords.${I[d - 1]};\n        coords.${I[d - 1]} = coords.${I[d - 2]};\n        coords.${I[d - 2]} = lastDim;\n      \n        ${m}\n        vec4 outputValue = ${l}(${E});\n        ${y}\n      }\n    `;
              return new o.GlslLibRoutine(v, ['coordinates.getOutputCoords']);
            }
            getUnpackedSamplerAtOutputCoords(e, t, n, s) {
              const a = [n.width, n.height];
              const c = [t.width, t.height];
              const u = t.unpackedShape.length;
              const l = n.unpackedShape.length;
              const g = t.unpackedShape;
              const d = n.unpackedShape;
              const h = A.generateShaderFuncNameFromInputSamplerName(s);
              if (u === l && r.ArrayUtil.arraysEqual(c, a)) {
                const t = `\n          float ${e}() {\n            return sampleTexture(${s}, TexCoords);\n          }\n        `;
                return new o.GlslLibRoutine(t, ['coordinates.sampleTexture']);
              }
              const f = A.getCoordsDataType(l);
              const p = r.BroadcastUtil.getBroadcastDims(g, d);
              const m = l - u;
              let I;
              const E = A.getGlChannels();
              I = u === 0 ? '' : l < 2 && p.length >= 1 ? 'coords = 0;' : p.map(e => `coords.${E[e + m]} = 0;`).join('\n');
              let y = '';
              y = l < 2 && u > 0 ? 'coords' : t.unpackedShape.map((e, t) => `coords.${E[t + m]}`).join(', ');
              const w = `\n        float ${e}() {\n          ${f} coords = getOutputCoords();\n          ${I}\n          return ${h}(${y});\n        }\n      `;
              return new o.GlslLibRoutine(w, ['coordinates.getOutputCoords']);
            }
            getPackedSamplerFromInput(e, t, n) {
              switch (n.unpackedShape.length) {
                case 0:
                  return this.getPackedSamplerScalar(e, t);
                case 1:
                  return this.getPackedSampler1D(e, t, n);
                case 2:
                  return this.getPackedSampler2D(e, t, n);
                case 3:
                  return this.getPackedSampler3D(e, t, n);
                default:
                  return this.getPackedSamplerND(e, t, n);
              }
            }
            getUnpackedSamplerFromInput(e, t, n) {
              const r = n.unpackedShape;
              switch (r.length) {
                case 0:
                  return this.getUnpackedSamplerScalar(e, t, n);
                case 1:
                  return this.getUnpackedSampler1D(e, t, n);
                case 2:
                  return this.getUnpackedSampler2D(e, t, n);
                case 3:
                  return this.getUnpackedSampler3D(e, t, n);
                case 4:
                  return this.getUnpackedSampler4D(e, t, n);
                case 5:
                  return this.getUnpackedSampler5D(e, t, n);
                case 6:
                  return this.getUnpackedSampler6D(e, t, n);
                default:
                  throw new Error(`Unsupported dimension ${r.length}-D`);
              }
            }
            getPackedSamplerScalar(e, t) {
              const n = `\n          vec4 ${e}() {\n            return ${s.getGlsl(this.context.glContext.version).texture2D}(${t}, halfCR);\n          }\n        `;
              return new o.GlslLibRoutine(n);
            }
            getPackedSampler1D(e, t, n) {
              const r = [n.width, n.height];
              const a = [r[1], r[0]];
              const A = s.getGlsl(this.context.glContext.version);
              const c = `vec4 ${e}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${a[0]}, ${a[1]}, index);\n      return ${A.texture2D}(${t}, uv);\n    }`;
              return new o.GlslLibRoutine(c, ['coordinates.packedUVfrom1D']);
            }
            getPackedSampler2D(e, t, n) {
              const a = n.unpackedShape;
              const A = [n.width, n.height];
              const c = s.getGlsl(this.context.glContext.version);
              const u = A[0];
              const l = A[1];
              if (A != null && r.ArrayUtil.arraysEqual(a, A)) {
                const n = `vec4 ${e}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);\n        return ${c.texture2D}(${t}, uv);\n      }`;
                return new o.GlslLibRoutine(n);
              }
              const g = A;
              const d = Math.ceil(a[1] / 2);
              const h = `vec4 ${e}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${g[1]}, ${g[0]}, ${d}, row, col);\n      return ${c.texture2D}(${t}, uv);\n    }`;
              return new o.GlslLibRoutine(h, ['coordinates.packedUVfrom2D']);
            }
            getPackedSampler3D(e, t, n) {
              const r = n.unpackedShape;
              const a = [n.width, n.height];
              const c = [a[0], a[1]];
              const u = s.getGlsl(this.context.glContext.version);
              if (r[0] === 1) {
                const s = r.slice(1);
                const a = [1, 2];
                const c = A.squeezeInputShape(r, s);
                const u = ['b', 'row', 'col'];
                const l = JSON.parse(JSON.stringify(n));
                l.unpackedShape = c;
                const g = this.getPackedSamplerFromInput(e, t, l);
                const d = `${g.routineBody}\n      vec4 ${e}(int b, int row, int col) {\n        return ${e}(${A.getSqueezedParams(u, a)});\n      } `;
                return new o.GlslLibRoutine(d, g.dependencies);
              }
              const l = c[0];
              const g = c[1];
              const d = Math.ceil(r[2] / 2);
              const h = `vec4 ${e}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${g}, ${l}, ${d * Math.ceil(r[1] / 2)}, ${d}, b, row, col);\n      return ${u.texture2D}(${t}, uv);}`;
              return new o.GlslLibRoutine(h, ['coordinates.packedUVfrom3D']);
            }
            getPackedSamplerND(e, t, n) {
              const r = n.unpackedShape;
              const a = r.length;
              const A = [n.width, n.height];
              const c = s.getGlsl(this.context.glContext.version);
              const u = [A[0], A[1]];
              const l = u[1];
              const g = u[0];
              const d = Math.ceil(r[a - 1] / 2);
              let h = d * Math.ceil(r[a - 2] / 2);
              let f = 'int b, int row, int col';
              let p = `b * ${h} + (row / 2) * ${d} + (col / 2)`;
              for (let e = 2; e < a - 1; e++) {
                f = `int b${e}, ${f}`;
                h *= r[a - e - 1];
                p = `b${e} * ${h} + ${p}`;
              }
              const m = `vec4 ${e}(${f}) {\n      int index = ${p};\n      int texR = index / ${g};\n      int texC = index - texR * ${g};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${g}, ${l});\n      return ${c.texture2D}(${t}, uv);\n    }`;
              return new o.GlslLibRoutine(m);
            }
            getUnpackedSamplerScalar(e, t, n) {
              const [r, s] = [n.width, n.height];
              if (r === 1 && s === 1) {
                const n = `\n          float ${e}() {\n            return sampleTexture(${t}, halfCR);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture']);
              }
              const a = `\n        float ${e}() {\n          int offset_${t} = coordsToOffset(TexCoords, ${r}, ${s});\n          vec2 uv = uvFromFlat(${r}, ${s}, offset_${t});\n          return sampleTexture(${t}, uv);\n        }\n      `;
              return new o.GlslLibRoutine(a, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);
            }
            getUnpackedSampler1D(e, t, n) {
              const r = n.width;
              const s = n.height;
              if (s === 1 && r === 1) {
                const n = `\n        float ${e}(int index) {\n          return sampleTexture(${t}, halfCR);\n        }\n      `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture']);
              }
              if (s === 1) {
                const n = `\n          float ${e}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${r}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture']);
              }
              if (r === 1) {
                const n = `\n          float ${e}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture']);
              }
              const a = `\n        float ${e}(int index) {\n          vec2 uv = uvFromFlat(${r}, ${s}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;
              return new o.GlslLibRoutine(a, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);
            }
            getUnpackedSampler2D(e, t, n) {
              const s = n.unpackedShape;
              const c = [n.height, n.width];
              if (c != null && r.ArrayUtil.arraysEqual(s, c)) {
                const n = `\n          float ${e}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${c[1]}.0, ${c[0]}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture']);
              }
              const {
                newShape: u,
                keptDims: l
              } = a.squeezeShape(s);
              const g = u;
              if (g.length < s.length) {
                const r = A.squeezeInputShape(s, g);
                const a = JSON.parse(JSON.stringify(n));
                a.unpackedShape = r;
                const c = ['col', 'row'];
                const u = `\n          ${this.getUnpackedSamplerFromInput(e, t, a).routineBody}\n          float ${e}(int row, int col) {\n            return ${e}(${A.getSqueezedParams(c, l)});\n          }\n        `;
                return new o.GlslLibRoutine(u, ['coordinates.sampleTexture']);
              }
              const d = c[1];
              const h = c[0];
              if (h === 1) {
                const n = `\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${s[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);
              }
              if (d === 1) {
                const n = `\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${s[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;
                return new o.GlslLibRoutine(n, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);
              }
              const f = `\n        float ${e}(int row, int col) {\n          int index = col * ${s[1]} + row;\n          vec2 uv = uvFromFlat(${d}, ${h}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;
              return new o.GlslLibRoutine(f, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);
            }
            getUnpackedSampler3D(e, t, n) {
              const r = n.unpackedShape;
              const s = r[1] * r[2];
              const c = r[2];
              const {
                newShape: u,
                keptDims: l
              } = a.squeezeShape(r);
              const g = u;
              if (g.length < r.length) {
                const s = A.squeezeInputShape(r, g);
                const a = ['batch', 'col', 'row'];
                const c = JSON.parse(JSON.stringify(n));
                c.unpackedShape = s;
                const u = this.getUnpackedSamplerFromInput(e, t, c);
                const d = l.reverse();
                const h = `\n          ${u.routineBody}\n          float ${e}(int batch, int row, int col) {\n            return ${e}(${A.getSqueezedParams(a, d)});\n          }\n        `;
                return new o.GlslLibRoutine(h, u.dependencies);
              }
              const d = `\n          float ${e}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${s} + col * ${c} + row;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n      `;
              return new o.GlslLibRoutine(d, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);
            }
            getUnpackedSampler4D(e, t, n) {
              const r = n.unpackedShape;
              const s = r[3];
              const a = r[2] * s;
              const A = `\n        float ${e}(int row, int col, int depth, int depth2) {\n          int index = row * ${r[1] * a} + col * ${a} +\n              depth2 * ${s} + depth;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;
              return new o.GlslLibRoutine(A, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);
            }
            getUnpackedSampler5D(e, t, n) {
              const r = n.unpackedShape;
              const s = r[4];
              const c = r[3] * s;
              const u = r[2] * c;
              const l = r[1] * u;
              const {
                newShape: g,
                keptDims: d
              } = a.squeezeShape(r);
              if (g.length < r.length) {
                const s = A.squeezeInputShape(r, g);
                const a = ['row', 'col', 'depth', 'depth2', 'depth3'];
                const c = JSON.parse(JSON.stringify(n));
                c.unpackedShape = s;
                const u = `\n          ${this.getUnpackedSamplerFromInput(e, t, c).routineBody}\n          float ${e}(int row, int col, int depth, int depth2, int depth3) {\n            return ${e}(${A.getSqueezedParams(a, d)});\n          }\n        `;
                return new o.GlslLibRoutine(u, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);
              }
              const h = `\n        float ${e}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${l} + col * ${u} + depth * ${c} +\n          depth3 * ${s} + depth2;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;
              return new o.GlslLibRoutine(h, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);
            }
            getUnpackedSampler6D(e, t, n) {
              const r = n.unpackedShape;
              const s = r[5];
              const c = r[4] * s;
              const u = r[3] * c;
              const l = r[2] * u;
              const g = r[1] * l;
              const {
                newShape: d,
                keptDims: h
              } = a.squeezeShape(r);
              if (d.length < r.length) {
                const s = A.squeezeInputShape(r, d);
                const a = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];
                const c = JSON.parse(JSON.stringify(n));
                c.unpackedShape = s;
                const u = `\n            ${this.getUnpackedSamplerFromInput(e, t, c).routineBody}\n            float ${e}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${e}(${A.getSqueezedParams(a, h)});\n            }\n          `;
                return new o.GlslLibRoutine(u, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);
              }
              const f = `\n          float ${e}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${g} + col * ${l} + depth * ${u} +\n            depth2 * ${c} + depth3 * ${s} + depth4;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n        `;
              return new o.GlslLibRoutine(f, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);
            }
            toVec() {
              const e = this.context.outputTextureLayout;
              const t = e.shape.length;
              const n = e.strides;
              const r = e.width;
              const s = e.height;
              const a = [];
              for (let e = 0; e < t - 1; ++e) {
                a.push(`\n        c[${e}] = offset / ${n[e]};`);
                a.push(`\n        offset -= c[${e}] * ${n[e]};`);
              }
              a.push(`\n        c[${t - 1}] = offset;`);
              const A = `\n      void toVec(vec2 texCoords, out int c[${t}]) {\n        int offset = coordsToOffset(texCoords, ${r}, ${s});\n        ${a.join('')}\n      }\n      void toVec(int offset, out int c[${t}]) {\n        ${a.join('')}\n      }\n    `;
              return {
                toVec: new o.GlslLibRoutine(A, ['coordinates.coordsToOffset'])
              };
            }
            valueFrom() {
              const e = {};
              this.context.programInfo.inputNames.forEach((t, n) => {
                const r = this.context.inputTextureLayouts[n];
                const s = (r.unpackedShape.length > 0 ? r.unpackedShape : r.shape).length;
                let a = `_${t}`;
                e[a] = new o.GlslLibRoutine(this.getValueFromSingle(t, s, r.width, r.height, false), [`shapeUtils.indicesToOffset${a}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);
                a += '_T';
                e[a] = new o.GlslLibRoutine(this.getValueFromSingle(t, s, r.width, r.height, true), [`shapeUtils.indicesToOffset${a}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);
              });
              return e;
            }
            getValueFromSingle(e, t, n, r, o) {
              let a = `_${e}`;
              if (o) {
                a += '_T';
              }
              return `\n        float ${a}(int m[${t}]) {\n          int offset = indicesToOffset${a}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          float value = getColorAsFloat(${s.getGlsl(this.context.glContext.version).texture2D}(${e}, coords));\n          return value;\n        }\n        `;
            }
            getPackedValueFrom(e, t, n, r, o) {
              let a = `_${e}_Pack`;
              if (o) {
                a += '_T';
              }
              return `\n        vec4 ${a}(int m[${t}]) {\n          int offset = indicesToOffset_${e}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          return ${s.getGlsl(this.context.glContext.version).texture2D}(${e}, coords);\n        }\n        `;
            }
          }
          _exports.CoordsGlslLib = c;
        },
        1997: (_module, _exports) => {
          "use strict";

          var n;
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.TopologicalSortGlslRoutines = _exports.GlslLibRoutineNode = _exports.GlslLibRoutine = _exports.GlslLib = _exports.GlslContext = _exports.FunctionType = undefined;
          (n = _exports.FunctionType ||= {})[n.ValueBased = 0] = 'ValueBased';
          n[n.Positional = 1] = 'Positional';
          _exports.GlslContext = class {
            constructor(e, t, n, r) {
              this.glContext = e;
              this.programInfo = t;
              this.inputTextureLayouts = n;
              this.outputTextureLayout = r;
            }
          };
          _exports.GlslLib = class {
            constructor(e) {
              this.context = e;
            }
          };
          _exports.GlslLibRoutine = class {
            constructor(e, t) {
              this.routineBody = e;
              this.dependencies = t;
            }
          };
          _exports.GlslLibRoutineNode = class {
            constructor(e, t, n) {
              this.name = e;
              this.dependencies = n || [];
              if (t) {
                this.routineBody = t;
              }
            }
            addDependency(e) {
              if (e) {
                this.dependencies.push(e);
              }
            }
          };
          _exports.TopologicalSortGlslRoutines = class {
            static returnOrderedNodes(e) {
              if (!e || e.length === 0) {
                return [];
              }
              if (e.length === 1) {
                return e;
              }
              const t = new Set();
              const n = new Set();
              const r = new Array();
              this.createOrderedNodes(e, t, n, r);
              return r;
            }
            static createOrderedNodes(e, t, n, r) {
              for (let o = 0; o < e.length; ++o) {
                this.dfsTraverse(e[o], t, n, r);
              }
            }
            static dfsTraverse(e, t, n, r) {
              if (!e || n.has(e.name)) {
                return;
              }
              if (t.has(e.name)) {
                throw new Error('Cyclic dependency detected. Can\'t topologically sort routines needed for shader.');
              }
              t.add(e.name);
              const o = e.dependencies;
              if (o && o.length > 0) {
                for (let e = 0; e < o.length; ++e) {
                  this.dfsTraverse(o[e], t, n, r);
                }
              }
              r.push(e);
              n.add(e.name);
              t.delete(e.name);
            }
          };
        },
        1371: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.EncodingGlslLib = undefined;
          const r = _require(1997);
          class o extends r.GlslLib {
            constructor(e) {
              super(e);
            }
            getFunctions() {
              return Object.assign(Object.assign({}, this.encodeFloat32()), this.decodeFloat32());
            }
            getCustomTypes() {
              return {};
            }
            encodeFloat32() {
              return {
                encode: new r.GlslLibRoutine('highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        ')
              };
            }
            decodeFloat32() {
              return {
                decode: new r.GlslLibRoutine('highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        ')
              };
            }
            encodeUint8() {
              const e = o.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';
              return {
                encode: new r.GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${e}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)
              };
            }
            decodeUint8() {
              const e = o.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';
              return {
                decode: new r.GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${e}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)
              };
            }
            static isLittleEndian() {
              const e = new ArrayBuffer(4);
              const t = new Uint32Array(e);
              const n = new Uint8Array(e);
              t[0] = 3735928559;
              if (n[0] === 239) {
                return true;
              }
              if (n[0] === 222) {
                return false;
              }
              throw new Error('unknown endianness');
            }
          }
          _exports.EncodingGlslLib = o;
        },
        2691: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.FragColorGlslLib = undefined;
          const r = _require(1997);
          const o = _require(6757);
          class s extends r.GlslLib {
            constructor(e) {
              super(e);
            }
            getFunctions() {
              return Object.assign(Object.assign({}, this.setFragColor()), this.getColorAsFloat());
            }
            getCustomTypes() {
              return {};
            }
            setFragColor() {
              const e = o.getGlsl(this.context.glContext.version);
              return {
                setFragColor: new r.GlslLibRoutine(`\n        void setFragColor(float value) {\n            ${e.output} = encode(value);\n        }\n        `, ['encoding.encode'])
              };
            }
            getColorAsFloat() {
              return {
                getColorAsFloat: new r.GlslLibRoutine('\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        ', ['encoding.decode'])
              };
            }
          }
          _exports.FragColorGlslLib = s;
        },
        3878: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.replaceInlines = undefined;
          const n = /@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;
          _exports.replaceInlines = function (e) {
            const t = {};
            let r;
            while ((r = n.exec(e)) !== null) {
              const e = r[3].split(',').map(e => {
                const t = e.trim().split(' ');
                if (t && t.length === 2) {
                  return {
                    type: t[0],
                    name: t[1]
                  };
                } else {
                  return null;
                }
              }).filter(e => e !== null);
              t[r[2]] = {
                params: e,
                body: r[4]
              };
            }
            for (const n in t) {
              const o = '(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;'.replace('__FUNC__', n);
              const s = new RegExp(o, 'gm');
              while ((r = s.exec(e)) !== null) {
                const o = r[1];
                const s = r[2];
                const a = r[3].split(',');
                const A = o ? `${o} ${s};` : '';
                let c = t[n].body;
                let u = '';
                t[n].params.forEach((e, t) => {
                  if (e) {
                    u += `${e.type} ${e.name} = ${a[t]};\n`;
                  }
                });
                c = `${u}\n ${c}`;
                c = c.replace('return', `${s} = `);
                const l = `\n      ${A}\n      {\n        ${c}\n      }\n      `;
                e = e.replace(r[0], l);
              }
            }
            return e.replace(n, '');
          };
        },
        8897: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.GlslPreprocessor = undefined;
          const r = _require(1997);
          const o = _require(3878);
          const s = _require(1248);
          const a = _require(6757);
          _exports.GlslPreprocessor = class {
            constructor(e, t, n, o) {
              this.libs = {};
              this.glslLibRoutineDependencyGraph = {};
              this.context = new r.GlslContext(e, t, n, o);
              Object.keys(s.glslRegistry).forEach(e => {
                const t = new s.glslRegistry[e](this.context);
                this.libs[e] = t;
              });
              const a = this.glslLibRoutineDependencyGraph;
              for (const e in this.libs) {
                const t = this.libs[e].getFunctions();
                for (const n in t) {
                  const o = e + '.' + n;
                  let s;
                  if (a[o]) {
                    s = a[o];
                    s.routineBody = t[n].routineBody;
                  } else {
                    s = new r.GlslLibRoutineNode(o, t[n].routineBody);
                    a[o] = s;
                  }
                  const A = t[n].dependencies;
                  if (A) {
                    for (let e = 0; e < A.length; ++e) {
                      if (a[A[e]]) {
                        s.addDependency(a[A[e]]);
                      } else {
                        const t = new r.GlslLibRoutineNode(A[e]);
                        a[A[e]] = t;
                        s.addDependency(t);
                      }
                    }
                  }
                }
              }
            }
            preprocess() {
              const e = this.context.programInfo;
              let t = e.shaderSource;
              if (!this.context.programInfo.hasMain) {
                t = `${t}\n      ${a.getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;
              }
              t = o.replaceInlines(t);
              return `${a.getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(e.inputNames, e.variables)}\n    ${this.getImports(t)}\n    ${t}`;
            }
            getImports(e) {
              const t = this.selectGlslLibRoutinesToBeIncluded(e);
              if (t.length === 0) {
                return '';
              }
              let n = '';
              for (let e = 0; e < t.length; ++e) {
                if (!t[e].routineBody) {
                  throw new Error(`Missing body for the Glsl Library routine: ${t[e].name}`);
                }
                n += t[e].routineBody + '\n';
              }
              return n;
            }
            selectGlslLibRoutinesToBeIncluded(e) {
              const t = [];
              Object.keys(this.glslLibRoutineDependencyGraph).forEach(n => {
                const r = n.split('.')[1];
                if (e.indexOf(r) !== -1) {
                  t.push(this.glslLibRoutineDependencyGraph[n]);
                }
              });
              return r.TopologicalSortGlslRoutines.returnOrderedNodes(t);
            }
            getUniforms(e, t) {
              const n = [];
              if (e) {
                for (const t of e) {
                  n.push(`uniform sampler2D ${t};`);
                }
              }
              if (t) {
                for (const e of t) {
                  n.push(`uniform ${e.type} ${e.name}${e.arrayLength ? `[${e.arrayLength}]` : ''};`);
                }
              }
              return n.join('\n');
            }
          };
        },
        1248: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.glslRegistry = undefined;
          const r = _require(6859);
          const o = _require(1371);
          const s = _require(2691);
          const a = _require(9183);
          const A = _require(9314);
          _exports.glslRegistry = {
            encoding: o.EncodingGlslLib,
            fragcolor: s.FragColorGlslLib,
            vec: A.VecGlslLib,
            shapeUtils: a.ShapeUtilsGlslLib,
            coordinates: r.CoordsGlslLib
          };
        },
        9183: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.ShapeUtilsGlslLib = undefined;
          const r = _require(1997);
          class o extends r.GlslLib {
            constructor(e) {
              super(e);
            }
            getFunctions() {
              return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, this.bcastIndex()), this.bcastMatmulIndex()), this.offsetToIndices()), this.indicesToOffset()), this.incrementIndices());
            }
            getCustomTypes() {
              return {};
            }
            bcastIndex() {
              const e = this.context.outputTextureLayout.shape.length;
              const t = {};
              this.context.programInfo.inputNames.forEach((n, o) => {
                const s = this.context.inputTextureLayouts[o].unpackedShape;
                if (s.length <= e) {
                  const o = s.length;
                  const a = e - o;
                  const A = `bcastIndices_${n}`;
                  let c = '';
                  for (let e = 0; e < o; ++e) {
                    c += `\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a + e}]), ${s[e]}.0) );\n          `;
                  }
                  const u = `\n        void ${A} (int bcastedIndices[${e}], out int realIndices[${o}]) {\n          ${c}\n        }\n        `;
                  t[A] = new r.GlslLibRoutine(u);
                }
              });
              return t;
            }
            bcastMatmulIndex() {
              const e = this.context.outputTextureLayout.shape.length;
              const t = {};
              this.context.programInfo.inputNames.forEach((n, o) => {
                const s = this.context.inputTextureLayouts[o].shape;
                if (!(s.length < 2) && !(s.length > e)) {
                  const o = s.length;
                  const a = e - o;
                  const A = `bcastMatmulIndices_${n}`;
                  let c = '';
                  for (let e = 0; e < o - 2; ++e) {
                    c += `\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a + e}]), ${s[e]}.0) );\n          `;
                  }
                  const u = `\n        void ${A}(int bcastedIndices[${e}], out int realIndices[${o}]) {\n          ${c}\n          realIndices[${o - 1}] = bcastedIndices[${e - 1}];\n          realIndices[${o - 2}] = bcastedIndices[${e - 2}];\n        }\n        `;
                  t[A] = new r.GlslLibRoutine(u);
                }
              });
              return t;
            }
            indicesToOffset() {
              const e = {};
              this.context.programInfo.inputNames.forEach((t, n) => {
                const s = this.context.inputTextureLayouts[n].shape;
                const a = this.context.inputTextureLayouts[n].strides;
                const A = s.length;
                let c = `indicesToOffset_${t}`;
                e[c] = new r.GlslLibRoutine(o.indexToOffsetSingle(c, A, a));
                c = `indicesToOffset_${t}_T`;
                e[c] = new r.GlslLibRoutine(o.indexToOffsetSingle(c, A, a.slice().reverse()));
              });
              return e;
            }
            static indexToOffsetSingle(e, t, n) {
              let r = '';
              for (let e = t - 1; e >= 0; --e) {
                r += `\n        offset += indices[${e}] * ${n[e]};\n        `;
              }
              return `\n      int ${e}(int indices[${t}]) {\n        int offset = 0;\n        ${r}\n        return offset;\n      }\n      `;
            }
            offsetToIndices() {
              const e = {};
              this.context.programInfo.inputNames.forEach((t, n) => {
                const s = this.context.inputTextureLayouts[n].shape;
                const a = this.context.inputTextureLayouts[n].strides;
                const A = s.length;
                let c = `offsetToIndices_${t}`;
                e[c] = new r.GlslLibRoutine(o.offsetToIndicesSingle(c, A, a));
                c = `offsetToIndices_${t}_T`;
                e[c] = new r.GlslLibRoutine(o.offsetToIndicesSingle(c, A, a.slice().reverse()));
              });
              return e;
            }
            static offsetToIndicesSingle(e, t, n) {
              const r = [];
              for (let e = 0; e < t - 1; ++e) {
                r.push(`\n      indices[${e}] = offset / ${n[e]};`);
                r.push(`\n        offset -= indices[${e}] * ${n[e]};`);
              }
              r.push(`\n      indices[${t - 1}] = offset;`);
              return `\n      void ${e}(int offset, out int indices[${t}]) {\n        ${r.join('')}\n      }\n      `;
            }
            incrementIndices() {
              const e = {};
              this.context.programInfo.inputNames.forEach((t, n) => {
                const o = this.context.inputTextureLayouts[n].shape;
                const s = o.length;
                const a = `incrementIndices_${t}`;
                let A = '';
                for (let e = 0; e < s; ++e) {
                  A += `\n        shape[${e}] = ${o[e]};`;
                }
                const c = `\n        void ${a}(int axis, out int indices[${s}]) {\n          int shape[${s}];\n          ${A};\n          for(int i = ${s} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;
                e[a] = new r.GlslLibRoutine(c);
              });
              return e;
            }
          }
          _exports.ShapeUtilsGlslLib = o;
        },
        6757: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.getDefaultFragShaderMain = _exports.getFragShaderPreamble = _exports.getVertexShaderSource = _exports.getGlsl = undefined;
          const n = {
            version: '',
            attribute: 'attribute',
            varyingVertex: 'varying',
            varyingFrag: 'varying',
            texture2D: 'texture2D',
            output: 'gl_FragColor',
            outputDeclaration: ''
          };
          const r = {
            version: '#version 300 es',
            attribute: 'in',
            varyingVertex: 'out',
            varyingFrag: 'in',
            texture2D: 'texture',
            output: 'outputColor',
            outputDeclaration: 'out vec4 outputColor;'
          };
          function o(e) {
            if (e === 1) {
              return n;
            } else {
              return r;
            }
          }
          _exports.getGlsl = o;
          _exports.getVertexShaderSource = function (e) {
            const t = o(e);
            return `${t.version}\n      precision highp float;\n      ${t.attribute} vec3 position;\n      ${t.attribute} vec2 textureCoord;\n\n      ${t.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;
          };
          _exports.getFragShaderPreamble = function (e) {
            const t = o(e);
            return `${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFrag} vec2 TexCoords;\n    ${t.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;
          };
          _exports.getDefaultFragShaderMain = function (e, t) {
            return `\n  void main() {\n    int indices[${t}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${o(e).output} = result;\n  }\n  `;
          };
        },
        9314: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.VecGlslLib = undefined;
          const r = _require(1997);
          class o extends r.GlslLib {
            constructor(e) {
              super(e);
            }
            getCustomTypes() {
              return {};
            }
            getFunctions() {
              return Object.assign(Object.assign(Object.assign(Object.assign({}, this.binaryVecFunctions()), this.copyVec()), this.setVecItem()), this.getVecItem());
            }
            binaryVecFunctions() {
              const e = this.context.outputTextureLayout.shape.length;
              const t = {
                add: '+=',
                sub: '-=',
                mul: '*=',
                div: '/='
              };
              const n = {};
              for (const o in t) {
                const s = `${o}Vec`;
                let a = '';
                for (let n = 0; n < e; ++n) {
                  a += `\n          dest[${n}] ${t[o]} src[${n}];\n          `;
                }
                const A = `\n        void ${s}(int src[${e}], out int dest[${e}]) {\n          ${a}\n        }\n        `;
                n[s] = new r.GlslLibRoutine(A);
              }
              return n;
            }
            copyVec() {
              const e = this.context.outputTextureLayout.shape.length;
              let t = '';
              for (let n = 0; n < e; ++n) {
                t += `\n        dest[${n}] = src[${n}];\n        `;
              }
              const n = `\n      void copyVec(int src[${e}], out int dest[${e}]) {\n        ${t}\n      }\n      `;
              return {
                copyVec: new r.GlslLibRoutine(n)
              };
            }
            setVecItem() {
              const e = this.context.outputTextureLayout.shape.length;
              let t = `\n        if(index < 0)\n            index =${e} + index;\n        if (index == 0)\n            m[0] = value;\n        `;
              for (let n = 1; n < e - 1; ++n) {
                t += `\n        else if (index == ${n})\n            m[${n}] = value;\n            `;
              }
              t += `\n        else\n            m[${e - 1}] = value;\n        `;
              const n = `\n      void setVecItem(out int m[${e}], int index, int value) {\n        ${t}\n      }\n        `;
              return {
                setVecItem: new r.GlslLibRoutine(n)
              };
            }
            getVecItem() {
              const e = this.context.outputTextureLayout.shape.length;
              let t = `\n        if(index < 0)\n            index = ${e} + index;\n        if (index == 0)\n            return m[0];\n      `;
              for (let n = 1; n < e - 1; ++n) {
                t += `\n        else if (index == ${n})\n            return m[${n}];\n      `;
              }
              t += `\n        else\n            return m[${e - 1}];\n        `;
              const n = `\n      int getVecItem(int m[${e}], int index) {\n        ${t}\n      }\n    `;
              return {
                getVecItem: new r.GlslLibRoutine(n)
              };
            }
          }
          _exports.VecGlslLib = o;
        },
        7860: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.WebGLInferenceHandler = undefined;
          const r = _require(1315);
          const o = _require(9240);
          const s = _require(7273);
          const a = _require(9);
          const A = _require(7379);
          const c = _require(2488);
          const u = _require(540);
          const l = _require(3314);
          const g = _require(5639);
          _exports.WebGLInferenceHandler = class {
            constructor(e) {
              this.session = e;
              this.packedTextureDataCache = new Map();
              this.unpackedTextureDataCache = new Map();
            }
            calculateTextureWidthAndHeight(e, t) {
              return l.calculateTextureWidthAndHeight(this.session.layoutStrategy, e, t);
            }
            executeProgram(e, t) {
              if (t.length < e.inputNames.length) {
                throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);
              }
              if (e.inputNames.length !== e.inputTypes.length) {
                throw new Error('input names size does not match input types');
              }
              const n = [];
              for (let r = 0; r < e.inputNames.length; ++r) {
                n[r] = this.getOrCreateTextureData(t[r], e.inputTypes[r]);
              }
              const r = ((e, t) => {
                const n = t.map(e => `${e.unpackedShape.join(',')};${e.width}x${e.height}`).join('_');
                let r = e.name;
                if (e.cacheHint) {
                  r += `[${e.cacheHint}]`;
                }
                r += `:${n}`;
                return r;
              })(e, n);
              let o = this.session.programManager.getArtifact(r);
              const s = o ? o.programInfo : typeof e.get == 'function' ? e.get() : e;
              const a = l.createTextureLayoutFromTextureType(this.session.layoutStrategy, s.output.dims, s.output.textureType);
              const A = this.createTextureData(a, s.output.type);
              if (!o) {
                o = this.session.programManager.build(s, n, A);
                this.session.programManager.setArtifact(r, o);
              }
              this.runProgram(o, n, A);
              return A;
            }
            run(e, t) {
              return this.executeProgram(e, t).tensor;
            }
            runProgram(e, t, n) {
              for (let n = 0; n < t.length; ++n) {
                if (!!t[n].isPacked != (e.programInfo.inputTypes[n] === g.TextureType.packed)) {
                  throw new Error(`input[${n}] property packed inconsistent`);
                }
              }
              if (!!n.isPacked != (e.programInfo.output.textureType === g.TextureType.packed)) {
                throw new Error('output property packed inconsistent');
              }
              this.session.programManager.run(e, t, n);
            }
            getOrCreateTextureData(e, t) {
              let n = this.getTextureData(e.dataId, t === g.TextureType.packed);
              if (!n && (n = this.getTextureData(e.dataId, t !== g.TextureType.packed), n)) {
                if (t === g.TextureType.packed) {
                  return this.pack(n);
                } else {
                  return this.unpack(n);
                }
              }
              if (!n) {
                const r = l.createTextureLayoutFromTextureType(this.session.layoutStrategy, e.dims, t);
                if (t === g.TextureType.packedLastDimension) {
                  const n = 1;
                  const r = 4;
                  const o = e.dims;
                  if (o.length === 4) {
                    const s = [o[0], Math.ceil(o[1] * o[2] * o[3] / r)];
                    const a = l.createTextureLayoutFromTextureType(this.session.layoutStrategy, s, t);
                    let A = e.numberData;
                    if (o[1] * o[2] * o[3] % r != 0) {
                      const t = o[0];
                      const s = o[1] * o[2] * o[3];
                      const a = Math.ceil(s * n / r) * r;
                      A = new Float32Array(t * a);
                      for (let r = 0; r < t; ++r) {
                        const t = r * s;
                        const o = r * a + r % n * s;
                        A.set(e.numberData.subarray(t, t + s), o);
                      }
                    }
                    return this.createTextureData(a, e.type, A, e, 1);
                  }
                }
                if (t === g.TextureType.packed) {
                  const t = l.createTextureLayoutFromShape(this.session.layoutStrategy, e.dims, 1, [], {
                    reverseWH: true
                  });
                  const r = this.createTextureData(t, e.type, e.numberData, e, 1);
                  n = this.pack(r);
                } else {
                  n = this.createTextureData(r, e.type, e.numberData, e, 1);
                }
              }
              return n;
            }
            createTextureDataFromLayoutBindTensor(e, t, n, r) {
              return this.createTextureData(e, t, n, r, 1);
            }
            createTextureData(e, t, n, o, s) {
              r.Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(e)}]`);
              const a = this.session.textureManager.createTextureFromLayout(t, e, n, s);
              return this.createTextureDataFromTexture(e, t, a, o);
            }
            reshapeUnpacked(e, t) {
              const n = this.getOrCreateTextureData(e, g.TextureType.unpacked);
              const r = {
                channels: n.channels,
                height: n.height,
                width: n.width,
                shape: t.length !== 0 ? t : [1],
                strides: s.ShapeUtil.computeStrides(t),
                unpackedShape: t
              };
              return this.createTextureDataFromTexture(r, e.type, n.texture).tensor;
            }
            reshapePacked(e, t) {
              const n = this.getOrCreateTextureData(e, g.TextureType.packed);
              if (A.isReshapeCheap(e.dims, t)) {
                const r = {
                  channels: n.channels,
                  height: n.height,
                  width: n.width,
                  shape: t.length !== 0 ? t : [1],
                  strides: s.ShapeUtil.computeStrides(t),
                  unpackedShape: t,
                  isPacked: true
                };
                return this.createTextureDataFromTexture(r, e.type, n.texture).tensor;
              }
              const r = A.processDims3D(e.dims);
              const o = A.processDims3D(t);
              const a = this.reshapePacked(e, r);
              const c = this.run(A.createPackedReshape3DProgramInfoLoader(this, a, o), [a]);
              return this.reshapePacked(c, t);
            }
            cast(e, t) {
              const n = this.getOrCreateTextureData(e, g.TextureType.unpacked);
              return this.createTextureDataFromTexture(n, t, n.texture).tensor;
            }
            createTextureDataFromTexture(e, t, n, r, s) {
              const a = Object.assign(Object.assign({}, e), {
                tensor: r || new o.Tensor(e.unpackedShape, t, e => this.readTexture(a), async e => this.readTextureAsync(a), undefined, s),
                texture: n
              });
              this.setTextureData(a.tensor.dataId, a, e.isPacked);
              return a;
            }
            getTextureData(e, t = false) {
              if (this.session.isInitializer(e)) {
                return this.session.getTextureData(e, t);
              } else {
                if (t) {
                  return this.packedTextureDataCache.get(e);
                } else {
                  return this.unpackedTextureDataCache.get(e);
                }
              }
            }
            setTextureData(e, t, n = false) {
              if (this.session.isInitializer(e)) {
                this.session.setTextureData(e, t, n);
              } else {
                (n ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(e, t);
              }
            }
            isTextureLayoutCached(e, t = false) {
              return !!this.getTextureData(e.dataId, t);
            }
            dispose() {
              this.session.textureManager.clearActiveTextures();
              this.packedTextureDataCache.forEach(e => this.session.textureManager.releaseTexture(e));
              this.packedTextureDataCache = new Map();
              this.unpackedTextureDataCache.forEach(e => this.session.textureManager.releaseTexture(e));
              this.unpackedTextureDataCache = new Map();
            }
            readTexture(e) {
              if (e.isPacked) {
                return this.readTexture(this.unpack(e));
              } else {
                if (this.session.backend.glContext.isFloat32DownloadSupported) {
                  return this.session.textureManager.readTexture(e, e.tensor.type, e.channels);
                } else {
                  return this.session.textureManager.readUint8TextureAsFloat(c.encodeAsUint8(this, e));
                }
              }
            }
            async readTextureAsync(e) {
              if (e.isPacked) {
                return this.readTextureAsync(this.unpack(e));
              } else {
                if (this.session.backend.glContext.isFloat32DownloadSupported) {
                  return this.session.textureManager.readTextureAsync(e, e.tensor.type, e.channels);
                } else {
                  return this.session.textureManager.readUint8TextureAsFloat(c.encodeAsUint8(this, e));
                }
              }
            }
            pack(e) {
              return this.executeProgram(a.createPackProgramInfoLoader(this, e.tensor), [e.tensor]);
            }
            unpack(e) {
              return this.executeProgram(u.createUnpackProgramInfoLoader(this, e.tensor), [e.tensor]);
            }
          };
        },
        4110: function (_module, _exports, _require) {
          "use strict";

          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.WEBGL_OP_RESOLVE_RULES = undefined;
          const a = _require(8817);
          const A = __importStar(_require(5194));
          const c = _require(4752);
          const u = _require(6668);
          const l = _require(9754);
          const g = _require(5042);
          const d = _require(6742);
          const h = _require(4125);
          const f = _require(6149);
          const p = _require(5378);
          const m = _require(6981);
          const I = _require(7413);
          const E = _require(7006);
          const y = _require(8276);
          const w = _require(5565);
          const _ = _require(2834);
          const v = _require(1010);
          const b = _require(8126);
          const B = _require(2801);
          const Q = _require(565);
          const D = _require(2444);
          const S = _require(815);
          const T = _require(564);
          const R = _require(5416);
          const k = _require(1240);
          const x = _require(5944);
          const P = _require(5707);
          const F = __importStar(_require(9087));
          const M = _require(7862);
          const O = _require(3980);
          _exports.WEBGL_OP_RESOLVE_RULES = [['Abs', '', '6+', F.abs], ['Acos', '', '7+', F.acos], ['Add', '', '7+', A.add], ['And', '', '7+', A.and], ['Asin', '', '7+', F.asin], ['Atan', '', '7+', F.atan], ['AveragePool', '', '7+', _.averagePool, _.parseAveragePoolAttributes], ['BatchNormalization', '', '7+', a.batchNormalization, a.parseBatchNormalizationAttributes], ['Cast', '', '6+', c.cast, c.parseCastAttributes], ['Ceil', '', '6+', F.ceil], ['Clip', '', '6-10', F.clip, F.parseClipAttributes], ['Clip', '', '11+', F.clipV11], ['Concat', '', '4+', u.concat, u.parseConcatAttributes], ['Conv', '', '1+', l.conv, l.parseConvAttributes], ['ConvTranspose', '', '1+', g.convTranspose, g.parseConvTransposeAttributes], ['Cos', '', '7+', F.cos], ['Div', '', '7+', A.div], ['Dropout', '', '7+', F.identity], ['DepthToSpace', '', '1+', d.depthToSpace, d.parseDepthToSpaceAttributes], ['Equal', '', '7+', A.equal], ['Elu', '', '6+', F.elu, F.parseEluAttributes], ['Exp', '', '6+', F.exp], ['Flatten', '', '1+', h.flatten, h.parseFlattenAttributes], ['Floor', '', '6+', F.floor], ['FusedConv', 'com.microsoft', '1+', l.conv, l.parseConvAttributes], ['Gather', '', '1+', f.gather, f.parseGatherAttributes], ['Gemm', '', '7-10', p.gemm, p.parseGemmAttributesV7], ['Gemm', '', '11+', p.gemm, p.parseGemmAttributesV11], ['GlobalAveragePool', '', '1+', _.globalAveragePool, _.parseGlobalAveragePoolAttributes], ['GlobalMaxPool', '', '1+', _.globalMaxPool], ['Greater', '', '7+', A.greater], ['Identity', '', '1+', F.identity], ['ImageScaler', '', '1+', m.imageScaler, m.parseImageScalerAttributes], ['InstanceNormalization', '', '6+', I.instanceNormalization, I.parseInstanceNormalizationAttributes], ['LeakyRelu', '', '6+', F.leakyRelu, F.parseLeakyReluAttributes], ['Less', '', '7+', A.less], ['LRN', '', '1+', E.lrn, E.parseLrnAttributes], ['Log', '', '6+', F.log], ['MatMul', '', '1+', y.matMul, y.parseMatMulAttributes], ['MaxPool', '', '1+', _.maxPool, _.parseMaxPoolAttributes], ['Mul', '', '7+', A.mul], ['Neg', '', '6+', F.neg], ['Not', '', '1+', F.not], ['Or', '', '7+', A.or], ['Pad', '', '2-10', w.padV2, w.parsePadAttributesV2], ['Pad', '', '11+', w.padV11, w.parsePadAttributesV11], ['Pow', '', '7+', A.pow], ['PRelu', '', '7+', A.pRelu], ['ReduceLogSum', '', '1+', v.reduceLogSum, v.parseReduceAttributes], ['ReduceMax', '', '1+', v.reduceMax, v.parseReduceAttributes], ['ReduceMean', '', '1+', v.reduceMean, v.parseReduceAttributes], ['ReduceMin', '', '1+', v.reduceMin, v.parseReduceAttributes], ['ReduceProd', '', '1+', v.reduceProd, v.parseReduceAttributes], ['ReduceSum', '', '1-12', v.reduceSum, v.parseReduceAttributes], ['ReduceSumSquare', '', '1+', v.reduceLogSumSquare, v.parseReduceAttributes], ['Relu', '', '6+', F.relu], ['Reshape', '', '5+', b.reshape], ['Resize', '', '10', B.resize, B.parseResizeAttributesV10], ['Resize', '', '11+', B.resize, B.parseResizeAttributesV11], ['Shape', '', '1+', Q.shape], ['Sigmoid', '', '6+', F.sigmoid], ['Sin', '', '7+', F.sin], ['Slice', '', '10+', D.sliceV10], ['Slice', '', '1-9', D.slice, D.parseSliceAttributes], ['Softmax', '', '1-12', S.softmax, S.parseSoftmaxAttributes], ['Softmax', '', '13+', S.softmaxV13, S.parseSoftmaxAttributesV13], ['Split', '', '2-12', T.split, T.parseSplitAttributes], ['Sqrt', '', '6+', F.sqrt], ['Squeeze', '', '1-12', R.squeeze, R.parseSqueezeAttributes], ['Squeeze', '', '13+', R.squeezeV13], ['Sub', '', '7+', A.sub], ['Sum', '', '6+', k.sum], ['Tan', '', '7+', F.tan], ['Tanh', '', '6+', F.tanh], ['Tile', '', '6+', x.tile], ['Transpose', '', '1+', P.transpose, P.parseTransposeAttributes], ['Upsample', '', '7-8', O.upsample, O.parseUpsampleAttributesV7], ['Upsample', '', '9', O.upsample, O.parseUpsampleAttributesV9], ['Unsqueeze', '', '1-12', M.unsqueeze, M.parseUnsqueezeAttributes], ['Unsqueeze', '', '13+', M.unsqueezeV13], ['Xor', '', '7+', A.xor]];
        },
        8817: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseBatchNormalizationAttributes = _exports.batchNormalization = undefined;
          const r = _require(4910);
          const o = _require(6757);
          const s = _require(5639);
          const a = {
            name: 'BatchNormalization',
            inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],
            inputTypes: [s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked]
          };
          _exports.batchNormalization = (e, t, n) => {
            c(t);
            return [e.run(Object.assign(Object.assign({}, a), {
              cacheHint: n.cacheKey,
              get: () => A(e, t, n)
            }), t)];
          };
          _exports.parseBatchNormalizationAttributes = e => {
            const t = e.attributes.getFloat('epsilon', 0.00001);
            const n = e.attributes.getFloat('momentum', 0.9);
            const o = e.attributes.getInt('spatial', 1);
            return r.createAttributeWithCacheKey({
              epsilon: t,
              momentum: n,
              spatial: o
            });
          };
          const A = (e, t, n) => {
            const r = o.getGlsl(e.session.backend.glContext.version);
            const A = t[0].dims.length;
            const [c, u] = e.calculateTextureWidthAndHeight(t[1].dims, s.TextureType.unpacked);
            const l = `\n  float process(int[${A}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${c}, ${u});\n    float scale = getColorAsFloat(${r.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${r.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${r.texture2D}(Variance, position));\n    float b = getColorAsFloat(${r.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;\n  }`;
            return Object.assign(Object.assign({}, a), {
              output: {
                dims: t[0].dims,
                type: t[0].type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: l
            });
          };
          const c = e => {
            if (!e || e.length !== 5) {
              throw new Error('BatchNormalization requires 5 inputs.');
            }
            const t = e[0];
            const n = e[1];
            const r = e[2];
            const o = e[3];
            const s = e[4];
            if (t.dims.length < 3 || n.dims.length !== 1 || r.dims.length !== 1 || o.dims.length !== 1 || s.dims.length !== 1) {
              throw new Error('invalid input shape.');
            }
            if (n.dims[0] !== t.dims[1] || r.dims[0] !== t.dims[1] || o.dims[0] !== t.dims[1] || s.dims[0] !== t.dims[1]) {
              throw new Error('invalid input shape.');
            }
            if (t.type !== 'float32' && t.type !== 'float64' || n.type !== 'float32' && n.type !== 'float64' || r.type !== 'float32' && r.type !== 'float64' || o.type !== 'float32' && o.type !== 'float64' || s.type !== 'float32' && s.type !== 'float64') {
              throw new Error('invalid input tensor types.');
            }
          };
        },
        5194: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.xor = _exports.sub = _exports.pRelu = _exports.pow = _exports.or = _exports.mul = _exports.less = _exports.greater = _exports.equal = _exports.div = _exports.and = _exports.add = _exports.glslPRelu = _exports.glslPow = _exports.glslXor = _exports.glslOr = _exports.glslAnd = _exports.glslLess = _exports.glslGreater = _exports.glslEqual = _exports.glslSub = _exports.glslMul = _exports.glslDiv = _exports.glslAdd = undefined;
          const r = _require(7273);
          const o = _require(1997);
          const s = _require(6757);
          const a = _require(5639);
          function A() {
            const e = 'add_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function c() {
            const e = 'div_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function u() {
            const e = 'mul_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function l() {
            const e = 'sub_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function g() {
            const e = 'equal_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function d() {
            const e = 'greater_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function h() {
            const e = 'less_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function f() {
            const e = 'and_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function p() {
            const e = 'or_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function m() {
            const e = 'xor_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          function I() {
            return function (e) {
              const t = `${e}_`;
              return {
                body: `\n  float ${t}(float a, float b) {\n    return ${e}(a, b);\n  }\n  vec4 ${t}(vec4 v1, vec4 v2) {\n    return ${e}(v1, v2);\n  }\n  `,
                name: t,
                type: o.FunctionType.ValueBased
              };
            }('pow');
          }
          function E() {
            const e = 'prelu_';
            return {
              body: `\n  float ${e}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `,
              name: e,
              type: o.FunctionType.ValueBased
            };
          }
          _exports.glslAdd = A;
          _exports.glslDiv = c;
          _exports.glslMul = u;
          _exports.glslSub = l;
          _exports.glslEqual = g;
          _exports.glslGreater = d;
          _exports.glslLess = h;
          _exports.glslAnd = f;
          _exports.glslOr = p;
          _exports.glslXor = m;
          _exports.glslPow = I;
          _exports.glslPRelu = E;
          const y = (e, t, n, r = t[0].type, o) => {
            const s = e.session.pack ? a.TextureType.packed : a.TextureType.unpacked;
            return {
              name: n.name,
              inputNames: ['A', 'B'],
              inputTypes: [s, s],
              cacheHint: o,
              get: () => w(e, t, n, r)
            };
          };
          const w = (e, t, n, o = t[0].type) => {
            const A = e.session.pack ? a.TextureType.packed : a.TextureType.unpacked;
            const c = !r.ShapeUtil.areEqual(t[0].dims, t[1].dims);
            let u = t[0].dims;
            const l = e.session.pack;
            if (c) {
              const a = r.BroadcastUtil.calcShape(t[0].dims, t[1].dims, false);
              if (!a) {
                throw new Error('Can\'t perform binary op on the given tensors');
              }
              u = a;
              const c = u.length;
              const g = t[0].dims.length !== 0 ? t[0].dims.length : 1;
              const d = t[1].dims.length !== 0 ? t[1].dims.length : 1;
              const h = t[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';
              const f = t[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';
              const p = s.getGlsl(e.session.backend.glContext.version);
              const m = l ? `\n      ${n.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${n.name}(a, b);\n        ${p.output} = result;\n      }` : `\n      ${n.body}\n      float process(int indices[${c}]) {\n        int aindices[${g}];\n        int bindices[${d}];\n        ${h}\n        ${f}\n        return ${n.name}(_A(aindices), _B(bindices));\n      }`;
              return {
                name: n.name,
                inputNames: ['A', 'B'],
                inputTypes: [A, A],
                output: {
                  dims: u,
                  type: o,
                  textureType: A
                },
                shaderSource: m,
                hasMain: l
              };
            }
            const g = s.getGlsl(e.session.backend.glContext.version);
            const d = `\n    ${n.body}\n    void main() {\n      vec4 v1 = ${g.texture2D}(A, TexCoords);\n      vec4 v2 = ${g.texture2D}(B, TexCoords);\n      vec4 result = ${n.name}(v1, v2);\n      ${g.output} = result;\n    }\n    `;
            return {
              name: n.name,
              inputNames: ['A', 'B'],
              inputTypes: [A, A],
              output: {
                dims: t[0].dims,
                type: o,
                textureType: A
              },
              shaderSource: d,
              hasMain: true
            };
          };
          _exports.add = (e, t) => [e.run(y(e, t, A()), t)];
          _exports.and = (e, t) => [e.run(y(e, t, f(), 'bool'), t)];
          _exports.div = (e, t) => [e.run(y(e, t, c()), t)];
          _exports.equal = (e, t) => [e.run(y(e, t, g(), 'bool'), t)];
          _exports.greater = (e, t) => [e.run(y(e, t, d(), 'bool'), t)];
          _exports.less = (e, t) => [e.run(y(e, t, h(), 'bool'), t)];
          _exports.mul = (e, t) => [e.run(y(e, t, u()), t)];
          _exports.or = (e, t) => [e.run(y(e, t, p(), 'bool'), t)];
          _exports.pow = (e, t) => [e.run(y(e, t, I()), t)];
          _exports.pRelu = (e, t) => [e.run(y(e, t, E()), t)];
          _exports.sub = (e, t) => [e.run(y(e, t, l()), t)];
          _exports.xor = (e, t) => [e.run(y(e, t, m(), 'bool'), t)];
        },
        4752: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseCastAttributes = _exports.cast = undefined;
          const r = _require(7273);
          _exports.cast = (e, t, n) => {
            o(t);
            return [e.cast(t[0], n)];
          };
          _exports.parseCastAttributes = e => r.ProtoUtil.tensorDataTypeFromProto(e.attributes.getInt('to'));
          const o = e => {
            if (!e || e.length !== 1) {
              throw new Error('Cast requires 1 input.');
            }
            if (e[0].type === 'string') {
              throw new Error('Invalid input type.');
            }
          };
        },
        4595: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createPackedConcatProgramInfoLoader = undefined;
          const r = _require(6757);
          const o = _require(5639);
          const s = _require(432);
          const a = _require(5614);
          _exports.createPackedConcatProgramInfoLoader = (e, t, n) => {
            u = t.length;
            l = n.cacheKey;
            const c = {
              name: 'Concat (packed)',
              inputNames: Array.from({
                length: u
              }, (e, t) => `X${t}`),
              inputTypes: Array(u).fill(o.TextureType.packed),
              cacheHint: l
            };
            var u;
            var l;
            return Object.assign(Object.assign({}, c), {
              get: () => ((e, t, n, c) => {
                const u = n[0].dims.slice();
                if (c >= u.length || c < u.length * -1) {
                  throw new Error('axis specified for concat doesn\'t match input dimensionality');
                }
                if (c < 0) {
                  c = u.length + c;
                }
                const l = u.slice(0);
                for (let e = 1; e < n.length; e++) {
                  const t = n[e].dims.slice();
                  for (let e = 0; e < u.length; e++) {
                    if (e === c) {
                      l[c] += t[e];
                    } else {
                      if (u[e] !== t[e]) {
                        throw new Error('non concat dimensions must match');
                      }
                    }
                  }
                }
                const g = l.length;
                const d = a.getChannels('coords', g);
                const h = s.getCoordsDataType(g);
                const f = a.unpackFromChannel();
                const p = n.map(e => e.dims);
                const m = s.getGlChannels(g);
                const I = new Array(p.length - 1);
                I[0] = p[0][c];
                for (let e = 1; e < I.length; e++) {
                  I[e] = I[e - 1] + p[e][c];
                }
                const E = m[c];
                const y = m.slice(-2);
                const w = m.join();
                let _ = `if (${E} < ${I[0]}) {\n        return getChannel(\n            getX0(${w}), vec2(${y.join()}));\n        }`;
                for (let e = 1; e < I.length; e++) {
                  const t = I[e - 1];
                  _ += `\n            if (${E} < ${I[e]}  && ${E} >= ${I[e - 1]}) {\n              return getChannel(\n                getX${e}(${A(m, E, t)}),\n                vec2(${A(y, E, t)}));\n            }`;
                }
                const v = I.length;
                const b = I[I.length - 1];
                _ += `\n            return getChannel(\n              getX${v}(${A(m, E, b)}),\n              vec2(${A(y, E, b)}));`;
                const B = r.getGlsl(e.session.backend.glContext.version);
                const Q = `\n          ${f}\n          float getValue(${m.map(e => `int ${e}`)}) {\n            ${_}\n          }\n\n          void main() {\n            ${h} coords = getOutputCoords();\n            int lastDim = coords.${m[g - 1]};\n            coords.${m[g - 1]} = coords.${m[g - 2]};\n            coords.${m[g - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${d}), 0., 0., 0.);\n\n            ${d[g - 1]} = ${d[g - 1]} + 1;\n            if (${d[g - 1]} < ${l[g - 1]}) {\n              result.g = getValue(${d});\n            }\n\n            ${d[g - 2]} = ${d[g - 2]} + 1;\n            if (${d[g - 2]} < ${l[g - 2]}) {\n              result.a = getValue(${d});\n            }\n\n            ${d[g - 1]} = ${d[g - 1]} - 1;\n            if (${d[g - 2]} < ${l[g - 2]} &&\n                ${d[g - 1]} < ${l[g - 1]}) {\n              result.b = getValue(${d});\n            }\n            ${B.output} = result;\n          }\n        `;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: l,
                    type: n[0].type,
                    textureType: o.TextureType.packed
                  },
                  shaderSource: Q,
                  hasMain: true
                });
              })(e, c, t, n.axis)
            });
          };
          const A = (e, t, n) => {
            const r = e.indexOf(t);
            return e.map((e, t) => t === r ? `${e} - ${n}` : e).join();
          };
        },
        6668: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseConcatAttributes = _exports.concat = undefined;
          const r = _require(4910);
          const o = _require(5639);
          const s = _require(4595);
          _exports.concat = (e, t, n) => {
            g(t);
            if (e.session.pack && t[0].dims.length > 1) {
              return [e.run(s.createPackedConcatProgramInfoLoader(e, t, n), t)];
            } else {
              return [e.run(a(e, t, n), t)];
            }
          };
          const a = (e, t, n) => {
            s = t.length;
            a = n.cacheKey;
            const r = {
              name: 'Concat',
              inputNames: Array.from({
                length: s
              }, (e, t) => `X${t}`),
              inputTypes: Array(s).fill(o.TextureType.unpacked),
              cacheHint: a
            };
            var s;
            var a;
            return Object.assign(Object.assign({}, r), {
              get: () => ((e, t, n, r) => {
                const s = n[0].dims.slice();
                if (r >= s.length || r < s.length * -1) {
                  throw new Error('axis specified for concat doesn\'t match input dimensionality');
                }
                if (r < 0) {
                  r = s.length + r;
                }
                const a = s.slice(0);
                for (let e = 1; e < n.length; e++) {
                  const t = n[e].dims.slice();
                  for (let e = 0; e < s.length; e++) {
                    if (e === r) {
                      a[r] += t[e];
                    } else {
                      if (s[e] !== t[e]) {
                        throw new Error('non concat dimensions must match');
                      }
                    }
                  }
                }
                const g = a.length;
                const d = new Array(n.length);
                let h = 0;
                for (let e = 0; e < d.length; ++e) {
                  h += n[e].dims[r];
                  d[e] = h;
                }
                let f = '';
                f = n.length < 5 ? A(d) : c(d);
                const p = `\n        ${u(n.length, g)}\n        ${l(d)}\n        ${f}\n        float process(int indices[${g}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${r}]);\n\n          if(textureIndex != 0) {\n            indices[${r}] = indices[${r}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: a,
                    type: n[0].type,
                    textureType: o.TextureType.unpacked
                  },
                  shaderSource: p
                });
              })(0, r, t, n.axis)
            });
          };
          const A = e => `int getTextureWhereDataResides(int index) {\n      ${e.map((e, t) => `if(index<${e}) {return ${t};}\n`).join('')}\n    }`;
          const c = e => A(e);
          const u = (e, t) => {
            const n = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${t}]) {`];
            for (let t = 0; t < e; ++t) {
              if (t === 0) {
                n.push(`\tif (textureIndex == ${t}) { return _X${t}(indices); }`);
              } else {
                if (t === e - 1) {
                  n.push(`\telse { return _X${t}(indices); }`);
                } else {
                  n.push(`\telse if (textureIndex == ${t}) { return _X${t}(indices); }`);
                }
              }
            }
            n.push('\t}');
            return n.join('\n');
          };
          const l = e => {
            const t = ['int getSizeInConcatAxisValueFromIndex(int index) {'];
            for (let n = 0; n < e.length; ++n) {
              if (n === 0) {
                t.push(`\tif (index == ${n}) { return ${e[n]}; }`);
              } else {
                if (n === e.length - 1) {
                  t.push(`\telse { return ${e[n]}; }`);
                } else {
                  t.push(`\telse if (index == ${n}) { return ${e[n]}; }`);
                }
              }
            }
            t.push('\t}');
            return t.join('\n');
          };
          _exports.parseConcatAttributes = e => r.createAttributeWithCacheKey({
            axis: e.attributes.getInt('axis')
          });
          const g = e => {
            if (!e || e.length < 1) {
              throw new Error('too few inputs');
            }
            const t = e[0].type;
            const n = e[0].dims.length;
            if (t === 'string') {
              throw new Error('string tensor is not supported yet');
            }
            for (const r of e) {
              if (r.type !== t) {
                throw new Error('input tensors should be one type');
              }
              if (r.dims.length !== n) {
                throw new Error('input tensors should have the same shape');
              }
            }
          };
        },
        7825: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createUnpackedGroupedConvProgramInfoLoader = undefined;
          const r = _require(1315);
          const o = _require(6757);
          const s = _require(5639);
          const a = _require(9754);
          const A = _require(2150);
          _exports.createUnpackedGroupedConvProgramInfoLoader = (e, t, n) => {
            u = t.length > 2;
            l = n.cacheKey;
            const c = {
              name: 'GroupedConv',
              inputNames: u ? ['X', 'W', 'Bias'] : ['X', 'W'],
              inputTypes: u ? [s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked] : [s.TextureType.unpacked, s.TextureType.unpacked],
              cacheHint: l
            };
            var u;
            var l;
            return Object.assign(Object.assign({}, c), {
              get: () => ((e, t, n, c) => {
                const u = t.length > 2 ? 'value += getBias(output_channel);' : '';
                const l = t[0].dims.slice();
                const g = t[1].dims.slice();
                const d = g[0] / c.group;
                r.Logger.verbose('GroupedConv', `autpPad:${c.autoPad}, dilations:${c.dilations}, group:${c.group}, kernelShape:${c.kernelShape}, pads:${c.pads}, strides:${c.strides}`);
                const h = a.calculateOutputShape(l, g, c.dilations, c.pads, c.strides);
                const f = o.getGlsl(e.session.backend.glContext.version);
                const {
                  activationFunction: p,
                  applyActivation: m
                } = A.getActivationSnippet(c);
                const I = `\n  const ivec2 strides = ivec2(${c.strides[0]}, ${c.strides[1]});\n  const ivec2 pads = ivec2(${c.pads[0]}, ${c.pads[1]});\n  ${p}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${d};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${g[1]}; wInChannel++) {\n      int input_channel = group_id * ${g[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${g[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${c.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${l[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${g[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${c.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${l[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${u}\n    ${m}\n    ${f.output} = vec4(value, .0, .0, .0);\n  }\n`;
                return Object.assign(Object.assign({}, n), {
                  output: {
                    dims: h,
                    type: t[0].type,
                    textureType: s.TextureType.unpacked
                  },
                  shaderSource: I,
                  hasMain: true
                });
              })(e, t, c, n)
            });
          };
        },
        7708: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.conv2DPacked = _exports.conv2DPackedPointwise = undefined;
          const r = _require(9754);
          const o = _require(5950);
          const s = _require(5632);
          _exports.conv2DPackedPointwise = (e, t, n) => {
            const o = t[0].dims;
            const a = t[1].dims;
            const A = r.calculateOutputShape(o, a, n.dilations, n.pads, n.strides);
            const c = e.reshapePacked(t[0], [o[1], o[2] * o[3]]);
            const u = e.reshapePacked(t[1], [a[0], a[1]]);
            const l = t.length > 2 ? [u, c, t[2]] : [u, c];
            const g = e.run(s.createPackedMatmulProgramInfoLoader(e, l, n), l);
            return e.reshapePacked(g, A);
          };
          _exports.conv2DPacked = (e, t, n) => {
            const a = t[0].dims;
            const A = t[1].dims;
            const c = r.calculateOutputShape(a, A, n.dilations, n.pads, n.strides);
            const u = e.run(o.createPackedIm2ColProgramInfoLoader(e, t[0], t[1], c, n), [t[0]]);
            const l = e.reshapePacked(t[1], [A[0], A[1] * A[2] * A[3]]);
            const g = t.length === 3 ? [l, u, t[2]] : [l, u];
            const d = e.run(s.createPackedMatmulProgramInfoLoader(e, g, n), g);
            return e.reshapePacked(d, c);
          };
        },
        5042: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseConvTransposeAttributes = _exports.convTranspose = undefined;
          const r = _require(4910);
          const o = _require(6757);
          const s = _require(5639);
          const a = _require(2150);
          const A = (e, t, n, r, o, s) => (e - 1) * t + n + (r - 1) * o + 1 - s;
          const c = (e, t, n, r, o) => {
            const s = Math.floor(e / 2);
            if (t === 'SAME_UPPER') {
              n[r] = s;
              n[o] = e - s;
            } else {
              if (t === 'SAME_LOWER') {
                n[r] = e - s;
                n[o] = s;
              }
            }
          };
          _exports.convTranspose = (e, t, n) => {
            d(t, n);
            return u(e, t, n);
          };
          const u = (e, t, n) => {
            const r = g(n, t);
            return [l(e, t, r)];
          };
          const l = (e, t, n) => e.run(((e, t, n) => {
            A = t.length > 2;
            c = n.cacheKey;
            const r = {
              name: 'ConvTranspose',
              inputNames: A ? ['X', 'W', 'B'] : ['X', 'W'],
              inputTypes: A ? [s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked] : [s.TextureType.unpacked, s.TextureType.unpacked],
              cacheHint: c
            };
            var A;
            var c;
            return Object.assign(Object.assign({}, r), {
              get: () => ((e, t, n, r) => {
                const A = t.length > 2 ? 'getB(output_channel)' : '0.0';
                const c = t[0].dims;
                const u = t[1].dims;
                const l = u[1];
                const g = u[0] / r.group;
                const d = [t[0].dims[0], t[1].dims[1] * r.group, ...r.outputShape];
                const h = o.getGlsl(e.session.backend.glContext.version);
                const {
                  activationFunction: f,
                  applyActivation: p
                } = a.getActivationSnippet(r);
                const m = `\n  const ivec2 strides = ivec2(${r.strides[0]}, ${r.strides[1]});\n  const ivec2 pads = ivec2(${r.pads[0]}, ${r.pads[1]});\n  ${f}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${l};\n    int wOutChannel = output_channel - group_id * ${l};\n\n    float value = ${A};\n    for (int inChannelOffset = 0; inChannelOffset < ${g}; inChannelOffset++) {\n      int input_channel = group_id * ${g} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${u[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${u[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${r.dilations[0]}, wHOff * ${r.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${c[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${c[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${p}\n    ${h.output} = vec4(value, .0, .0, .0);\n  }\n`;
                return Object.assign(Object.assign({}, n), {
                  output: {
                    dims: d,
                    type: t[0].type,
                    textureType: s.TextureType.unpacked
                  },
                  shaderSource: m,
                  hasMain: true
                });
              })(e, t, r, n)
            });
          })(e, t, n), t);
          const g = (e, t) => {
            const n = e.kernelShape.slice();
            if (e.kernelShape.length === 0) {
              for (let e = 2; e < t[1].dims.length; ++e) {
                n.push(t[1].dims[e]);
              }
            }
            const r = e.pads.slice();
            const o = e.outputShape.slice();
            ((e, t, n, r, o, s, a, u) => {
              const l = e.length - 2;
              const g = u.length === 0;
              for (let d = 0; d < l; ++d) {
                const h = g ? e[d + 2] * s[d] : u[d];
                const f = A(e[d + 2], s[d], o[d], t[d], n[d], h);
                c(f, r, o, d, d + l);
                if (g) {
                  u.push(s[d] * (e[d + 2] - 1) + a[d] + (t[d] - 1) * n[d] + 1 - o[d] - o[d + l]);
                }
              }
            })(t[0].dims, n, e.dilations, e.autoPad, r, e.strides, e.outputPadding, o);
            const s = Object.assign({}, e);
            Object.assign(s, {
              kernelShape: n,
              pads: r,
              outputShape: o,
              cacheKey: e.cacheKey
            });
            return s;
          };
          _exports.parseConvTransposeAttributes = e => {
            const t = e.attributes;
            const n = a.parseInternalActivationAttributes(t);
            const o = t.getString('auto_pad', 'NOTSET');
            const s = t.getInts('dilations', [1, 1]);
            const A = t.getInt('group', 1);
            const c = t.getInts('kernel_shape', []);
            const u = t.getInts('output_padding', [0, 0]);
            const l = t.getInts('output_shape', []);
            const g = t.getInts('pads', [0, 0, 0, 0]);
            const d = t.getInts('strides', [1, 1]);
            return r.createAttributeWithCacheKey(Object.assign({
              autoPad: o,
              dilations: s,
              group: A,
              kernelShape: c,
              outputPadding: u,
              outputShape: l,
              pads: g,
              strides: d
            }, n));
          };
          const d = (e, t) => {
            if (!e || e.length !== 2 && e.length !== 3) {
              throw new Error('Conv requires 2 or 3 inputs');
            }
            if (e[0].dims.length !== 4 || e[1].dims.length !== 4) {
              throw new Error('currently only support 2-dimensional conv');
            }
            if (e[0].dims[1] !== e[1].dims[0]) {
              throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');
            }
            const n = e[1].dims[1] * t.group;
            if (e.length === 3 && (e[2].dims.length !== 1 || e[2].dims[0] !== n)) {
              throw new Error('invalid bias');
            }
            const r = e[0].dims.length - 2;
            if (t.dilations.length !== r) {
              throw new Error(`dilations should be ${r}D`);
            }
            if (t.strides.length !== r) {
              throw new Error(`strides should be ${r}D`);
            }
            if (t.pads.length !== r * 2) {
              throw new Error(`pads should be ${r * 2}D`);
            }
            if (t.outputPadding.length !== r) {
              throw new Error(`output_padding should be ${r}D`);
            }
            if (t.kernelShape.length !== 0 && t.kernelShape.length !== e[1].dims.length - 2) {
              throw new Error('invalid kernel shape');
            }
            if (t.outputShape.length !== 0 && t.outputShape.length !== e[0].dims.length - 2) {
              throw new Error('invalid output shape');
            }
            if (e[0].type !== 'float32' || e[1].type !== 'float32') {
              throw new Error('ConvTranspose input(X,W) should be float tensor');
            }
            if (e.length === 3 && e[2].type !== 'float32') {
              throw new Error('ConvTranspose input(bias) should be float tensor');
            }
          };
        },
        9754: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseConvAttributes = _exports.conv = _exports.calculateOutputShape = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(7825);
          const a = _require(7708);
          const A = _require(3281);
          const c = _require(2150);
          const u = _require(1625);
          const l = _require(8276);
          _exports.calculateOutputShape = (e, t, n, r, o) => {
            const s = e[0];
            const a = e.slice(2);
            const A = a.length;
            const c = t[0];
            const u = t.slice(2).map((e, t) => e + (e - 1) * (n[t] - 1));
            const l = a.map((e, t) => e + r[t] + r[t + A]);
            const g = l.map((e, t) => Math.floor((e - u[t] + o[t]) / o[t]));
            return [s, c].concat(...g);
          };
          _exports.conv = (e, t, n) => {
            p(t, n);
            return g(e, t, n);
          };
          const g = (e, t, n) => {
            const r = f(n, t);
            const o = e.session.pack;
            const A = r.kernelShape[0] === 1 && r.kernelShape[1] === 1;
            if (r.group > 1) {
              return [e.run(s.createUnpackedGroupedConvProgramInfoLoader(e, t, r), t)];
            } else {
              if (A && o) {
                return [d(e, t, r)];
              } else {
                if (o && t[0].dims.length === 4 && t[0].dims[0] === 1 && !A) {
                  return [a.conv2DPacked(e, t, r)];
                } else {
                  return [h(e, t, r)];
                }
              }
            }
          };
          const d = (e, n, r) => {
            const o = n[0].dims;
            const s = n[1].dims;
            const a = _exports.calculateOutputShape(o, s, r.dilations, r.pads, r.strides);
            const A = e.reshapeUnpacked(n[0], [o[1], o[2] * o[3]]);
            const c = e.reshapeUnpacked(n[1], [s[0], s[1]]);
            const u = n.length > 2 ? [c, A, n[2]] : [c, A];
            const g = e.run(l.createMatmulProgramInfoLoader(u, r), u);
            return e.reshapeUnpacked(g, a);
          };
          const h = (e, n, r) => {
            const o = n[0].dims;
            const s = n[1].dims;
            const a = _exports.calculateOutputShape(o, s, r.dilations, r.pads, r.strides);
            const c = e.run(u.createIm2ColProgramInfoLoader(e, n[0], n[1], a, r), [n[0]]);
            const l = n.length === 3 ? [c, n[1], n[2]] : [c, n[1]];
            return e.run(A.createDotProductProgramInfoLoader(e, n, a, r), l);
          };
          const f = (e, t) => {
            const n = e.kernelShape.slice();
            if (e.kernelShape.length === 0) {
              for (let e = 2; e < t[1].dims.length; ++e) {
                n.push(t[1].dims[e]);
              }
            }
            const r = e.pads.slice();
            o.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims, e.strides, e.dilations, n, r, e.autoPad);
            const s = Object.assign({}, e);
            Object.assign(s, {
              kernelShape: n,
              pads: r,
              cacheKey: e.cacheKey
            });
            return s;
          };
          _exports.parseConvAttributes = e => {
            const t = e.attributes;
            const n = c.parseInternalActivationAttributes(t);
            const o = t.getString('auto_pad', 'NOTSET');
            const s = t.getInts('dilations', [1, 1]);
            const a = t.getInt('group', 1);
            const A = t.getInts('kernel_shape', []);
            const u = t.getInts('pads', [0, 0, 0, 0]);
            const l = t.getInts('strides', [1, 1]);
            return r.createAttributeWithCacheKey(Object.assign({
              autoPad: o,
              dilations: s,
              group: a,
              kernelShape: A,
              pads: u,
              strides: l
            }, n));
          };
          const p = (e, t) => {
            if (!e || e.length !== 2 && e.length !== 3) {
              throw new Error('Conv requires 2 or 3 inputs');
            }
            if (e[0].dims.length !== 4 || e[1].dims.length !== 4) {
              throw new Error('currently only support 2-dimensional conv');
            }
            if (e[0].dims[1] !== e[1].dims[1] * t.group) {
              throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');
            }
            if (e.length === 3 && (e[2].dims.length !== 1 || e[1].dims[0] !== e[2].dims[0])) {
              throw new Error('invalid bias');
            }
            const n = e[0].dims.length - 2;
            if (t.dilations.length !== n) {
              throw new Error(`dilations should be ${n}D`);
            }
            if (t.strides.length !== n) {
              throw new Error(`strides should be ${n}D`);
            }
            if (t.pads.length !== n * 2) {
              throw new Error(`pads should be ${n * 2}D`);
            }
            if (t.kernelShape.length !== 0 && t.kernelShape.length !== e[1].dims.length - 2) {
              throw new Error('invalid kernel shape');
            }
            if (e[0].type !== 'float32' || e[1].type !== 'float32') {
              throw new Error('Conv input(X,W) should be float tensor');
            }
            if (e.length === 3 && e[2].type !== 'float32') {
              throw new Error('Conv input(bias) should be float tensor');
            }
          };
        },
        6742: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseDepthToSpaceAttributes = _exports.depthToSpace = undefined;
          const r = _require(5707);
          _exports.depthToSpace = (e, t, n) => {
            o(t);
            const s = n.blocksize;
            const a = s * s;
            const A = n.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];
            const c = n.mode === 'DCR' ? [t[0].dims[0], s, s, t[0].dims[1] / a, t[0].dims[2], t[0].dims[3]] : [t[0].dims[0], t[0].dims[1] / a, s, s, t[0].dims[2], t[0].dims[3]];
            const u = e.reshapeUnpacked(t[0], c);
            const l = {
              perm: A,
              cacheKey: `${A}`
            };
            const [g] = r.transpose(e, [u], l);
            const d = [t[0].dims[0], t[0].dims[1] / a, t[0].dims[2] * s, t[0].dims[3] * s];
            return [e.reshapeUnpacked(g, d)];
          };
          _exports.parseDepthToSpaceAttributes = e => {
            const t = e.attributes.getInt('blocksize');
            if (t < 1) {
              throw new Error(`blocksize must be >= 1, but got : ${t} for DepthToSpace`);
            }
            const n = e.attributes.getString('mode', 'DCR');
            if (n !== 'DCR' && n !== 'CRD') {
              throw new Error(`unrecognized mode: ${n} for DepthToSpace`);
            }
            return {
              mode: n,
              blocksize: t
            };
          };
          const o = e => {
            if (e.length !== 1) {
              throw new Error(`DepthToSpace expect 1 inputs, but got ${e.length}`);
            }
            if (e[0].type === 'string' || e[0].dims.length !== 4) {
              throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');
            }
          };
        },
        3281: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createDotProductProgramInfoLoader = undefined;
          const r = _require(7273);
          const o = _require(6757);
          const s = _require(5639);
          const a = _require(2150);
          const A = _require(1625);
          _exports.createDotProductProgramInfoLoader = (e, t, n, c) => {
            const u = ((e, t) => ({
              name: 'ConvDotProduct',
              inputNames: e ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],
              inputTypes: e ? [s.TextureType.unpacked, s.TextureType.packedLastDimension, s.TextureType.unpacked] : [s.TextureType.unpacked, s.TextureType.packedLastDimension],
              cacheKey: t.activationCacheKey
            }))(t.length > 2, c);
            return Object.assign(Object.assign({}, u), {
              get: () => ((e, t, n, c, u) => {
                const l = n[0].dims;
                const g = n[1].dims;
                const d = [g[0], Math.ceil(l[1] * g[2] * g[3] / 4)];
                const h = A.calculateIm2ColDims(l, g, c);
                const [f, p] = e.calculateTextureWidthAndHeight(d, s.TextureType.packedLastDimension);
                const m = r.ShapeUtil.computeStrides(h);
                const [I, E] = e.calculateTextureWidthAndHeight(h, s.TextureType.packedLastDimension);
                const y = c.length;
                const w = n.length < 3 ? '0.0' : '_B(b)';
                const _ = Math.ceil(l[1] * g[2] * g[3] / 4);
                const {
                  activationFunction: v,
                  applyActivation: b
                } = a.getActivationSnippet(u);
                const B = o.getGlsl(e.session.backend.glContext.version);
                const Q = `\n${v}\nfloat process(int indices[${y}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${m[0]} + im2col[1] * ${m[1]} + im2col[2] * ${m[2]};\n  int kernelOffset = indices[1] * ${d[1]};\n  float value = ${w};\n  for (int i = 0; i < ${_}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${I}, ${E});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${f}, ${p});\n    value += dot(${B.texture2D}(Im2Col, im2colCoords), ${B.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${b}\n  return value;\n}`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: c,
                    type: n[0].type,
                    textureType: s.TextureType.unpacked
                  },
                  shaderSource: Q
                });
              })(e, u, t, n, c)
            });
          };
        },
        4125: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseFlattenAttributes = _exports.flatten = undefined;
          const r = _require(7273);
          _exports.flatten = (e, t, n) => {
            o(t, n);
            const s = r.ShapeUtil.flattenShape(t[0].dims, n);
            return [e.reshapeUnpacked(t[0], s)];
          };
          _exports.parseFlattenAttributes = e => e.attributes.getInt('axis', 1);
          const o = (e, t) => {
            if (!e || e.length !== 1) {
              throw new Error('Flatten requires 1 input.');
            }
            const n = e[0].dims.length;
            if (n === 0) {
              throw new Error('scalar tensor is not supported.');
            }
            if (t < -n || t > n) {
              throw new Error('Invalid axis');
            }
            if (e[0].type === 'string') {
              throw new Error('string tensor is not supported.');
            }
          };
        },
        2150: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseInternalActivationAttributes = _exports.getActivationSnippet = undefined;
          const r = _require(7273);
          const o = _require(9087);
          _exports.getActivationSnippet = function (e) {
            let t;
            switch (e.activation) {
              case 'Relu':
                t = o.glslRelu();
                break;
              case 'Sigmoid':
                t = o.glslSigmoid();
                break;
              case 'Clip':
                t = o.glslClip(e.clipMin, e.clipMax);
                break;
              default:
                return {
                  activationFunction: '',
                  applyActivation: ''
                };
            }
            const n = t.name;
            return {
              activationFunction: t.body,
              applyActivation: `value = ${n}_(value);`
            };
          };
          _exports.parseInternalActivationAttributes = e => {
            const t = e.getString('activation', '');
            if (t === 'Clip') {
              const [n, o] = e.getFloats('activation_params', [r.MIN_CLIP, r.MAX_CLIP]);
              return {
                activation: t,
                clipMax: o,
                clipMin: n,
                activationCacheKey: `${t}:${n},${o}`
              };
            }
            return {
              activation: t,
              activationCacheKey: t
            };
          };
        },
        6149: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseGatherAttributes = _exports.gather = undefined;
          const r = _require(4910);
          const o = _require(6145);
          const s = _require(7273);
          const a = _require(5639);
          _exports.gather = (e, t, n) => {
            u(t, n.axis);
            return [e.run(c(e, t, n), t)];
          };
          _exports.parseGatherAttributes = e => r.createAttributeWithCacheKey({
            axis: e.attributes.getInt('axis', 0)
          });
          const A = {
            name: 'Gather',
            inputNames: ['A', 'B'],
            inputTypes: [a.TextureType.unpacked, a.TextureType.unpacked]
          };
          const c = (e, t, n) => {
            const r = Object.assign(Object.assign({}, A), {
              cacheHint: n.cacheKey
            });
            return Object.assign(Object.assign({}, r), {
              get: () => ((e, t, n, r) => {
                const o = n[0].dims.slice();
                const A = n[1].dims.slice();
                const c = new Array(o.length + A.length - 1);
                r = s.ShapeUtil.normalizeAxis(r, o.length);
                const u = [];
                for (let e = 0; e < c.length; e++) {
                  if (e < r) {
                    c[e] = o[e];
                    u.push(`inputIdx[${e}] = outputIdx[${e}];`);
                  } else {
                    if (e < r + A.length) {
                      c[e] = A[e - r];
                      u.push(`indexDataIdx[${e - r}] = outputIdx[${e}];`);
                    } else {
                      c[e] = o[e - A.length + 1];
                      u.push(`inputIdx[${e - A.length + 1}] = outputIdx[${e}];`);
                    }
                  }
                }
                const l = `\n      float process(int outputIdx[${c.length || 1}]) {\n        int inputIdx[${o.length}];\n        int indexDataIdx[${A.length || 1}];\n        indexDataIdx[0] = 0;\n        ${u.join('\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${r}] = idx < 0 ? idx + ${o[r]} : idx;\n        return _A(inputIdx);\n      }`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: c,
                    type: n[0].type,
                    textureType: a.TextureType.unpacked
                  },
                  shaderSource: l
                });
              })(0, r, t, n.axis)
            });
          };
          const u = (e, t) => {
            if (!e || e.length !== 2) {
              throw new Error('Gather requires 2 inputs.');
            }
            const n = e[0].dims.length;
            if (n < 1) {
              throw new Error('Invalid input shape.');
            }
            if (t < -n || t > n - 1) {
              throw new Error('Invalid axis.');
            }
            if (o.NUMBER_TYPES.indexOf(e[0].type) === -1) {
              throw new Error('Invaid input type.');
            }
            if (e[1].type !== 'int32' && e[1].type !== 'int16') {
              throw new Error('Invaid input type.');
            }
          };
        },
        5378: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseGemmAttributesV11 = _exports.parseGemmAttributesV7 = _exports.gemm = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(5639);
          _exports.gemm = (e, t, n) => {
            u(t, n);
            return [e.run(A(t, n), t)];
          };
          const a = (e, t) => {
            const n = e.attributes.getInt('transA', 0) !== 0;
            const o = e.attributes.getInt('transB', 0) !== 0;
            const s = e.attributes.getFloat('alpha', 1);
            const a = e.attributes.getFloat('beta', 1);
            return r.createAttributeWithCacheKey({
              transA: n,
              transB: o,
              alpha: s,
              beta: a,
              isOptionalC: t
            });
          };
          _exports.parseGemmAttributesV7 = e => a(e, false);
          _exports.parseGemmAttributesV11 = e => a(e, true);
          const A = (e, t) => {
            const n = {
              name: 'Gemm',
              inputNames: e.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],
              inputTypes: e.length === 3 ? [s.TextureType.unpacked, s.TextureType.unpacked, s.TextureType.unpacked] : [s.TextureType.unpacked, s.TextureType.unpacked],
              key: t.cacheKey
            };
            return Object.assign(Object.assign({}, n), {
              get: () => c(n, e, t)
            });
          };
          const c = (e, t, n) => {
            const r = t[0].dims.slice();
            const a = t[1].dims.slice();
            const [A, c] = o.GemmUtil.getShapeOfGemmResult(r, n.transA, a, n.transB, t.length === 3 ? t[2].dims : undefined);
            const u = [A, c];
            if (!u) {
              throw new Error('Can\'t use gemm on the given tensors');
            }
            let l = r[r.length - 1];
            let g = '';
            if (n.transA) {
              l = r[0];
            }
            if (n.transA && n.transB) {
              g = 'value += _A_T(a) * _B_T(b);';
            } else {
              if (n.transA && !n.transB) {
                g = 'value += _A_T(a) * _B(b);';
              } else {
                if (!n.transA && n.transB) {
                  g = 'value += _A(a) * _B_T(b);';
                } else {
                  if (!n.transA && !n.transB) {
                    g = 'value += _A(a) * _B(b);';
                  }
                }
              }
            }
            const d = u.length;
            const h = `\n      float process(int indices[${d}]) {\n          int a[${d}];\n          int b[${d}];\n          ${t.length === 3 ? `int c[${t[2].dims.length}];` : ''}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${t.length === 3 ? 'bcastIndices_C(indices, c);' : ''}\n\n          float value = 0.0;\n          for (int k=0; k<${l}; ++k) {\n              a[${d - 1}] = k;\n              b[${d - 2}] = k;\n              ${g}\n          }\n\n          value = value * alpha;\n          ${t.length === 3 ? 'value += beta * _C(c);' : ''}\n          return value;\n      }`;
            return Object.assign(Object.assign({}, e), {
              output: {
                dims: u,
                type: t[0].type,
                textureType: s.TextureType.unpacked
              },
              variables: [{
                name: 'alpha',
                type: 'float',
                data: n.alpha
              }, {
                name: 'beta',
                type: 'float',
                data: n.beta
              }],
              shaderSource: h
            });
          };
          const u = (e, t) => {
            if (!e) {
              throw new Error('Input is missing');
            }
            if (t.isOptionalC && (e.length < 2 || e.length > 3)) {
              throw new Error('Invaid input shape.');
            }
            if (!t.isOptionalC && e.length !== 3) {
              throw new Error('Gemm requires 3 inputs');
            }
            if (e.length === 3 && e[2].dims.length !== 1 && e[2].dims.length !== 2) {
              throw new Error('Invalid input shape of C');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64' || e[1].type !== 'float32' && e[1].type !== 'float64' || e.length === 3 && e[2].type !== 'float32' && e[2].type !== 'float64') {
              throw new Error('Invalid input type.');
            }
            if (e[0].type !== e[1].type || e.length === 3 && e[0].type !== e[2].type) {
              throw new Error('Input types are mismatched');
            }
          };
        },
        5950: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createPackedIm2ColProgramInfoLoader = undefined;
          const r = _require(6757);
          const o = _require(5639);
          const s = _require(5614);
          _exports.createPackedIm2ColProgramInfoLoader = (e, t, n, a, A) => {
            u = A.cacheKey;
            const c = {
              name: 'Im2Col (packed)',
              inputNames: ['A'],
              inputTypes: [o.TextureType.packed],
              cacheHint: u
            };
            var u;
            return Object.assign(Object.assign({}, c), {
              get: () => ((e, t, n, a, A, c) => {
                const u = n.dims;
                const l = a.dims;
                const g = A.length;
                const d = [l[1] * l[2] * l[3], A[2] * A[3]];
                const h = l[2] * l[3];
                const f = s.unpackFromChannel();
                const p = r.getGlsl(e.session.backend.glContext.version);
                let m = '';
                for (let e = 0; e <= 1; e++) {
                  for (let t = 0; t <= 1; t++) {
                    m += `\n            blockIndex = rc.x + ${t};\n            pos = rc.y + ${e};\n\n            if(blockIndex < ${d[1]} && pos < ${d[0]}) {\n              offsetY = int(blockIndex / (${A[g - 1]})) * ${c.strides[0]} -\n                ${c.pads[0]};\n              d0 = offsetY + ${c.dilations[0]} * (imod(pos, ${h}) / ${l[2]});\n\n              if(d0 < ${u[2]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${A[g - 1]}) * ${c.strides[1]} -\n                  ${c.pads[1]};\n                d1 = offsetX + ${c.dilations[1]} * imod(imod(pos, ${h}), ${l[2]});\n\n                if(d1 < ${u[3]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${h}.);\n                    innerDims = vec2(d0, d1);\n                    result[${e * 2 + t}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;
                  }
                }
                const I = `\n      ${f}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${m}\n          ${p.output} = result;\n      }\n            `;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: d,
                    type: n.type,
                    textureType: o.TextureType.packed
                  },
                  shaderSource: I,
                  hasMain: true
                });
              })(e, c, t, n, a, A)
            });
          };
        },
        1625: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.calculateIm2ColDims = _exports.createIm2ColProgramInfoLoader = undefined;
          const r = _require(5639);
          _exports.createIm2ColProgramInfoLoader = (e, n, o, s, a) => {
            c = a.cacheKey;
            const A = {
              name: 'Im2Col',
              inputNames: ['X'],
              inputTypes: [r.TextureType.unpacked],
              cacheHint: c
            };
            var c;
            return Object.assign(Object.assign({}, A), {
              get: () => ((e, n, o, s, a, A) => {
                const c = o.dims;
                const u = s.dims;
                const l = a.length;
                const g = _exports.calculateIm2ColDims(c, u, a, 4);
                const d = `\n        const int XC = ${c[1]};\n        const int XH = ${c[2]};\n        const int XW = ${c[3]};\n        const int KH = ${A.kernelShape[0]};\n        const int KW = ${A.kernelShape[1]};\n        const int dilationH = ${A.dilations[0]};\n        const int dilationW = ${A.dilations[1]};\n        const int strideH = ${A.strides[0]};\n        const int strideW = ${A.strides[1]};\n        const int padH = ${A.pads[0]};\n        const int padW = ${A.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${l}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${c.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;
                return Object.assign(Object.assign({}, n), {
                  output: {
                    dims: g,
                    type: o.type,
                    textureType: r.TextureType.packedLastDimension
                  },
                  shaderSource: d
                });
              })(0, A, n, o, s, a)
            });
          };
          _exports.calculateIm2ColDims = (e, t, n, r = 4) => [n[0], n[2], n[3], Math.ceil(e[1] * t[2] * t[3] / r)];
        },
        6981: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseImageScalerAttributes = _exports.imageScaler = undefined;
          const r = _require(4910);
          const o = _require(5639);
          _exports.imageScaler = (e, t, n) => {
            c(t);
            return [e.run(a(e, t, n), t)];
          };
          _exports.parseImageScalerAttributes = e => {
            const t = e.attributes.getFloat('scale');
            const n = e.attributes.getFloats('bias');
            return r.createAttributeWithCacheKey({
              scale: t,
              bias: n
            });
          };
          const s = {
            name: 'ImageScaler',
            inputNames: ['X'],
            inputTypes: [o.TextureType.unpacked]
          };
          const a = (e, t, n) => {
            const r = Object.assign(Object.assign({}, s), {
              cacheHint: n.cacheKey
            });
            return Object.assign(Object.assign({}, r), {
              get: () => ((e, t, n, r) => {
                const s = n[0].dims.slice();
                const a = s.length;
                const c = `\n      ${A(r.bias.length)}\n      float process(int indices[${a}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: s,
                    type: n[0].type,
                    textureType: o.TextureType.unpacked
                  },
                  variables: [{
                    name: 'bias',
                    type: 'float',
                    arrayLength: r.bias.length,
                    data: r.bias
                  }, {
                    name: 'scale',
                    type: 'float',
                    data: r.scale
                  }],
                  shaderSource: c
                });
              })(0, r, t, n)
            });
          };
          const A = e => {
            const t = [`float getBias(float bias[${e}], int channel) {`];
            for (let n = 0; n < e; ++n) {
              if (n === 0) {
                t.push(`\tif (channel == ${n}) { return bias[${n}]; }`);
              } else {
                if (n === e - 1) {
                  t.push(`\telse { return bias[${n}]; }`);
                } else {
                  t.push(`\telse if (channel == ${n}) { return bias[${n}]; }`);
                }
              }
            }
            t.push('\t}');
            return t.join('\n');
          };
          const c = e => {
            if (!e || e.length !== 1) {
              throw new Error('ImageScaler requires 1 input.');
            }
            if (e[0].dims.length !== 4) {
              throw new Error('Invalid input shape.');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('Invalid input type.');
            }
          };
        },
        7413: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseInstanceNormalizationAttributes = _exports.instanceNormalization = undefined;
          const r = _require(6757);
          const o = _require(5639);
          _exports.instanceNormalization = (e, t, n) => {
            u(t);
            const r = e.run(a(t[0]), t);
            return [e.run(c(e, t[0], n, r.dims), [t[0], r, t[1], t[2]])];
          };
          _exports.parseInstanceNormalizationAttributes = e => e.attributes.getFloat('epsilon', 0.00001);
          const s = {
            name: 'InstanceNormalization_MeanAndVariance',
            inputNames: ['X'],
            inputTypes: [o.TextureType.unpacked]
          };
          const a = e => Object.assign(Object.assign({}, s), {
            get: () => ((e, t) => {
              const n = t.dims.slice();
              const r = n[1];
              const s = n[2] * n[3];
              const a = [n[0], r];
              const A = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${s});\n        temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${s});\n\n        return v;\n      }`;
              return Object.assign(Object.assign({}, e), {
                output: {
                  dims: a,
                  type: t.type,
                  textureType: o.TextureType.packedLastDimension
                },
                shaderSource: A
              });
            })(s, e)
          });
          const A = {
            name: 'InstanceNormalization_ComputeOutput',
            inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],
            inputTypes: [o.TextureType.unpacked, o.TextureType.packedLastDimension, o.TextureType.unpacked, o.TextureType.unpacked]
          };
          const c = (e, t, n, s) => {
            const a = Object.assign(Object.assign({}, A), {
              cacheHint: `${n}`
            });
            return Object.assign(Object.assign({}, a), {
              get: () => ((e, t, n, s, a) => {
                const A = r.getGlsl(e.session.backend.glContext.version);
                const [c, u] = e.calculateTextureWidthAndHeight(a, o.TextureType.packedLastDimension);
                const [l, g] = [c / 4, u];
                const d = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${l}, ${g});\n        return ${A.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: n.dims,
                    type: n.type,
                    textureType: o.TextureType.unpacked
                  },
                  variables: [{
                    name: 'epsilon',
                    type: 'float',
                    data: s
                  }],
                  shaderSource: d
                });
              })(e, a, t, n, s)
            });
          };
          const u = e => {
            if (!e || e.length !== 3) {
              throw new Error('InstanceNormalization requires 3 inputs.');
            }
            const t = e[0];
            const n = e[1];
            const r = e[2];
            if (t.dims.length < 3 || n.dims.length !== 1 || r.dims.length !== 1) {
              throw new Error('Invalid input shape.');
            }
            if (n.dims[0] !== t.dims[1] || r.dims[0] !== t.dims[1]) {
              throw new Error('Input shapes are mismatched.');
            }
            if (t.type !== 'float32' && t.type !== 'float64' || n.type !== 'float32' && n.type !== 'float64' || r.type !== 'float32' && r.type !== 'float64') {
              throw new Error('Invalid input type.');
            }
            if (e[0].dims.length !== 4) {
              throw new Error('Only support 4-D input shape.');
            }
          };
        },
        7006: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createLrnProgramInfoLoader = _exports.parseLrnAttributes = _exports.lrn = undefined;
          const r = _require(4910);
          const o = _require(5639);
          _exports.lrn = (e, t, n) => {
            A(t);
            return [e.run(a(t, n), t)];
          };
          _exports.parseLrnAttributes = e => {
            const t = e.attributes.getFloat('alpha', 0.0001);
            const n = e.attributes.getFloat('beta', 0.75);
            const o = e.attributes.getFloat('bias', 1);
            const s = e.attributes.getInt('size');
            return r.createAttributeWithCacheKey({
              alpha: t,
              beta: n,
              bias: o,
              size: s
            });
          };
          const s = {
            name: 'LRN',
            inputNames: ['X'],
            inputTypes: [o.TextureType.unpacked]
          };
          function a(e, t) {
            return Object.assign(Object.assign({}, s), {
              cacheHint: t.cacheKey,
              get: () => function (e, t) {
                const n = e[0].dims[1];
                const r = e[0].dims.length;
                const a = -Math.floor((t.size - 1) / 2);
                const A = Math.ceil((t.size - 1) / 2);
                const c = `float(${t.alpha}) / float(${t.size})`;
                const u = `\n    float process(int indices[${r}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${a}; i <= ${A}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${n}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(float(${t.bias}) + ${c} * square_sum, float(${t.beta}));\n    }`;
                return Object.assign(Object.assign({}, s), {
                  cacheHint: t.cacheKey,
                  output: {
                    dims: e[0].dims,
                    type: e[0].type,
                    textureType: o.TextureType.unpacked
                  },
                  shaderSource: u
                });
              }(e, t)
            });
          }
          _exports.createLrnProgramInfoLoader = a;
          const A = e => {
            if (!e || e.length !== 1) {
              throw new Error('LRN requires 1 input.');
            }
            if (e[0].dims.length !== 4) {
              throw new Error('currently only support LRN for input with "NCHW" format');
            }
            if (e[0].type !== 'float32') {
              throw new Error('input should be float type');
            }
          };
        },
        5632: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createPackedMatmulProgramInfoLoader = undefined;
          const r = _require(7273);
          const o = _require(6757);
          const s = _require(5639);
          const a = _require(432);
          const A = _require(2150);
          const c = _require(8276);
          _exports.createPackedMatmulProgramInfoLoader = (e, t, n) => {
            l = t.length > 2;
            g = n.activationCacheKey;
            const u = {
              name: 'MatMul (packed)',
              inputNames: l ? ['A', 'B', 'Bias'] : ['A', 'B'],
              inputTypes: l ? [s.TextureType.packed, s.TextureType.packed, s.TextureType.packed] : [s.TextureType.packed, s.TextureType.packed],
              cacheHint: g
            };
            var l;
            var g;
            return Object.assign(Object.assign({}, u), {
              get: () => ((e, t, n, u) => {
                const l = n.length > 2;
                const g = l ? 'value += getBiasForMatmul();' : '';
                const d = n[0].dims;
                const h = n[1].dims;
                const f = r.BroadcastUtil.calcShape(d, h, true);
                const p = !r.ShapeUtil.areEqual(n[0].dims, n[1].dims);
                if (!f) {
                  throw new Error('Can\'t use matmul on the given tensors');
                }
                const m = d[d.length - 1];
                const I = Math.ceil(m / 2);
                const E = d.length;
                const y = h.length;
                const w = o.getGlsl(e.session.backend.glContext.version);
                const _ = a.getCoordsDataType(f.length);
                const v = f.length;
                const b = a.getGlChannels();
                const {
                  activationFunction: B,
                  applyActivation: Q
                } = A.getActivationSnippet(u);
                const D = l ? `${c.getBiasForMatmul(_, b, n[2].dims, f, true)}` : '';
                const S = p ? `${function (e, t, n, o) {
                  let s = [];
                  let a = [];
                  const A = n[0].dims;
                  const c = n[1].dims;
                  const u = A.length;
                  const l = c.length;
                  const g = o.length;
                  const d = g - u;
                  const h = g - l;
                  s = A.map((e, n) => `coords.${t[n + d]}`);
                  s[u - 1] = 'i*2';
                  s.join(', ');
                  a = c.map((e, n) => `coords.${t[n + h]}`);
                  a[l - 2] = 'i*2';
                  a.join(', ');
                  const f = r.BroadcastUtil.getBroadcastDims(A, o);
                  const p = r.BroadcastUtil.getBroadcastDims(c, o);
                  const m = f.map(e => `coords.${t[e + d]} = 0;`).join('\n');
                  const I = p.map(e => `coords.${t[e + h]} = 0;`).join('\n');
                  const E = `int lastDim = coords.${t[g - 1]};\n  coords.${t[g - 1]} = coords.${t[g - 2]};\n  coords.${t[g - 2]} = lastDim;`;
                  return `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${E}\n  ${m}\n  vec4 outputValue = getA(${s});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${E}\n  ${I}\n  vec4 outputValue = getB(${a});\n  return outputValue;\n}`;
                }(_, b, n, f)}` : '';
                const T = p ? 'getAAtOutCoordsMatmul(i)' : `getA(${function (e, t) {
                  let n = '';
                  for (let r = 0; r < t - 2; r++) {
                    n += `rc.${e[r]}, `;
                  }
                  n += `rc.${e[t - 2]}, i*2`;
                  return n;
                }(b, E)})`;
                const R = p ? 'getBAtOutCoordsMatmul(i)' : `getB(${function (e, t) {
                  let n = '';
                  for (let r = 0; r < t - 2; r++) {
                    n += `rc.${e[r]}, `;
                  }
                  n += `i*2, rc.${e[t - 1]}`;
                  return n;
                }(b, y)})`;
                const k = `\n            ${S}\n            ${D}\n            ${B}\n            void main() {\n              ${p ? '' : `${_} rc =\n          getOutputCoords(); int lastDim = rc.${b[v - 1]}; rc.${b[v - 1]} =\n          rc.${b[v - 2]}; rc.${b[v - 2]} = lastDim;\n      `}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${I}; i++) {\n                vec4 a = ${T};\n                vec4 b = ${R};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${g}\n              ${Q}\n              ${w.output} = value;\n            }`;
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: f,
                    type: n[0].type,
                    textureType: s.TextureType.packed
                  },
                  shaderSource: k,
                  hasMain: true
                });
              })(e, u, t, n)
            });
          };
        },
        8276: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.getBiasForMatmul = _exports.createMatmulProgramInfoLoader = _exports.parseMatMulAttributes = _exports.matMul = undefined;
          const r = _require(7273);
          const o = _require(5639);
          const s = _require(432);
          const a = _require(2150);
          const A = _require(5632);
          _exports.matMul = (e, t, n) => {
            l(t);
            if (e.session.pack) {
              return [e.run(A.createPackedMatmulProgramInfoLoader(e, t, n), t)];
            } else {
              return [e.run(u(t, n), t)];
            }
          };
          _exports.parseMatMulAttributes = e => a.parseInternalActivationAttributes(e.attributes);
          const c = (e, t) => ({
            name: 'MatMul',
            inputNames: e ? ['A', 'B', 'Bias'] : ['A', 'B'],
            inputTypes: e ? [o.TextureType.unpacked, o.TextureType.unpacked, o.TextureType.unpacked] : [o.TextureType.unpacked, o.TextureType.unpacked],
            cacheHint: t
          });
          function u(e, t) {
            const n = c(e.length > 2, t.activationCacheKey);
            return Object.assign(Object.assign({}, n), {
              get: () => function (e, t, n) {
                const A = t[0].dims;
                const c = t[1].dims;
                const u = r.BroadcastUtil.calcShape(A, c, true);
                if (!u) {
                  throw new Error('Can\'t use matmul on the given tensors');
                }
                const l = s.getCoordsDataType(u.length);
                const d = s.getGlChannels();
                const {
                  activationFunction: h,
                  applyActivation: f
                } = a.getActivationSnippet(n);
                const p = t.length > 2;
                const m = p ? 'value += getBiasForMatmul();' : '';
                const I = p ? `${g(l, d, t[2].dims, u, false)}` : '';
                const E = u.length;
                const y = A.length;
                const w = c.length;
                const _ = `\n    ${h}\n    ${I}\n    float process(int indices[${E}]) {\n        int a[${y}];\n        int b[${w}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${A[A.length - 1]}; ++k) {\n            a[${y - 1}] = k;\n            b[${w - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${m}\n        ${f}\n        return value;\n    }`;
                return Object.assign(Object.assign({}, e), {
                  output: {
                    dims: u,
                    type: t[0].type,
                    textureType: o.TextureType.unpacked
                  },
                  shaderSource: _
                });
              }(n, e, t)
            });
          }
          _exports.createMatmulProgramInfoLoader = u;
          const l = e => {
            if (!e || e.length !== 2) {
              throw new Error('MatMul requires 2 inputs.');
            }
            if (e[0].dims[e[0].dims.length - 1] !== e[1].dims[e[1].dims.length - 2]) {
              throw new Error('shared dimension does not match.');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64' || e[1].type !== 'float32' && e[1].type !== 'float64') {
              throw new Error('inputs should be float type');
            }
            if (e[0].type !== e[1].type) {
              throw new Error('inputs types should match');
            }
          };
          function g(e, t, n, o, s) {
            let a = '';
            const A = n.length;
            const c = o.length;
            const u = c - A;
            a = c < 2 && A > 0 ? 'coords' : n.map((e, n) => `coords.${t[n + u]}`).join(', ');
            const l = r.BroadcastUtil.getBroadcastDims(n, o).map(e => `coords.${t[e + u]} = 0;`).join('\n');
            let g = 'vec4(outputValue.xx, outputValue.yy)';
            if (r.ShapeUtil.size(n) === 1) {
              g = 'vec4(outputValue.x)';
            }
            if (s) {
              return `\nvec4 getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${l}\n  vec4 outputValue = getBias(${a});\n  return ${g};\n}`;
            } else {
              return `\nfloat getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${l}\n  return getBias(coords.x);\n}`;
            }
          }
          _exports.getBiasForMatmul = g;
        },
        9: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createPackProgramInfoLoader = undefined;
          const r = _require(6757);
          const o = _require(5639);
          const s = _require(432);
          const a = _require(5614);
          const A = {
            name: 'pack',
            inputNames: ['A'],
            inputTypes: [o.TextureType.unpackedReversed]
          };
          _exports.createPackProgramInfoLoader = (e, t) => Object.assign(Object.assign({}, A), {
            get: () => ((e, t) => {
              const n = r.getGlsl(e.session.backend.glContext.version);
              const c = t.dims;
              const u = c.length;
              const l = t.dims.length;
              const g = s.getCoordsDataType(l);
              const d = a.getChannels('rc', l);
              f = l;
              p = d;
              m = c[c.length - 2];
              I = c[c.length - 1];
              const h = f === 0 || f === 1 ? '' : `\n    int r = ${p[f - 2]};\n    int c = ${p[f - 1]};\n    int rp1 = ${p[f - 2]} + 1;\n    int cp1 = ${p[f - 1]} + 1;\n    bool rEdge = rp1 >= ${I};\n    bool cEdge = cp1 >= ${m};\n    `;
              var f;
              var p;
              var m;
              var I;
              let E;
              E = u === 0 ? [1, 1] : u === 1 ? [c[0], 1] : [c[l - 1], c[l - 2]];
              const y = function (e, t, n) {
                if (e === 0) {
                  return 'false';
                }
                if (e === 1) {
                  return `rc > ${t[0]}`;
                }
                let r = '';
                for (let o = e - 2; o < e; o++) {
                  r += `${n[o]} >= ${t[o - e + 2]}`;
                  if (o < e - 1) {
                    r += '||';
                  }
                }
                return r;
              }(l, E, d);
              const w = function (e, t) {
                const n = e.length;
                if (n === 0) {
                  return 'getA(), 0, 0, 0';
                }
                if (n === 1) {
                  return `getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;
                }
                let r = '';
                if (n > 2) {
                  for (let e = 0; e < n - 2; ++e) {
                    r += `${t[e]},`;
                  }
                }
                return `getA(${r}r, c),\n          rEdge ? 0. : getA(${r}rp1, c),\n          cEdge ? 0. : getA(${r}r, cp1),\n          rEdge || cEdge ? 0. : getA(${r}rp1, cp1)`;
              }(c, d);
              const _ = `\n        void main() {\n          ${g} rc = getOutputCoords();\n\n          if(${y}) {\n            ${n.output} = vec4(0);\n          } else {\n            ${h}\n\n            ${n.output} = vec4(${w});\n          }\n        }\n      `;
              return Object.assign(Object.assign({}, A), {
                hasMain: true,
                output: {
                  dims: t.dims,
                  type: t.type,
                  textureType: o.TextureType.packed
                },
                shaderSource: _
              });
            })(e, t)
          });
        },
        5614: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.unpackFromChannel = _exports.getChannels = _exports.getVecChannels = undefined;
          const r = _require(432);
          function o(e, t) {
            return r.getGlChannels(t).map(t => `${e}.${t}`);
          }
          _exports.getVecChannels = o;
          _exports.getChannels = function (e, t) {
            if (t === 1) {
              return [e];
            } else {
              return o(e, t);
            }
          };
          _exports.unpackFromChannel = function () {
            return '\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  ';
          };
        },
        5565: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parsePadAttributesV11 = _exports.padV11 = _exports.parsePadAttributesV2 = _exports.padV2 = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(6757);
          const a = _require(5639);
          const A = {
            name: 'Pad',
            inputNames: ['A'],
            inputTypes: [a.TextureType.unpacked]
          };
          _exports.padV2 = (e, t, n) => {
            l(t);
            return [e.run(Object.assign(Object.assign({}, A), {
              cacheHint: n.cacheKey,
              get: () => u(e, t[0], n)
            }), t)];
          };
          _exports.parsePadAttributesV2 = e => {
            const t = e.attributes.getString('mode', 'constant');
            const n = e.attributes.getFloat('value', 0);
            const o = e.attributes.getInts('pads');
            return r.createAttributeWithCacheKey({
              mode: t,
              value: n,
              pads: o
            });
          };
          _exports.padV11 = (e, n, r) => {
            g(n);
            const o = c(e, n, r);
            return _exports.padV2(e, [n[0]], o);
          };
          _exports.parsePadAttributesV11 = e => e.attributes.getString('mode', 'constant');
          const c = (e, t, n) => {
            if (!e.session.isInitializer(t[1].dataId) || t.length >= 3 && !e.session.isInitializer(t[2].dataId)) {
              throw new Error('dynamic pad attributes are not allowed');
            }
            const o = Array.from(t[1].integerData);
            const s = t.length >= 3 ? t[2].floatData[0] : 0;
            return r.createAttributeWithCacheKey({
              mode: n,
              pads: o,
              value: s
            });
          };
          const u = (e, t, n) => {
            const r = o.ShapeUtil.padShape(t.dims.slice(), n.pads);
            const s = r.length;
            const A = `\n      ${d(e, t, n)}\n      float process(int[${s}] indices) {\n          return padA(indices);\n      }`;
            return {
              name: 'Pad',
              inputNames: ['A'],
              inputTypes: [a.TextureType.unpacked],
              output: {
                dims: r,
                type: t.type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: A
            };
          };
          const l = e => {
            if (!e || e.length !== 1) {
              throw new Error('Pad requires 1 input');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('Invalid input type.');
            }
          };
          const g = e => {
            if (!e || e.length !== 2 && e.length !== 3) {
              throw new Error('Pad requires 2 or 3 inputs');
            }
            if (e[1].type !== 'int32') {
              throw new Error('Invalid input type.');
            }
            if (e.length >= 3 && e[2].type === 'string') {
              throw new Error('Invalid input type.');
            }
          };
          const d = (e, t, n) => {
            const r = s.getGlsl(e.session.backend.glContext.version);
            const [A, c] = e.calculateTextureWidthAndHeight(t.dims, a.TextureType.unpacked);
            const u = o.ShapeUtil.computeStrides(t.dims);
            switch (n.mode) {
              case 'constant':
                return h(r, t.dims, u, A, c, n.pads, n.value);
              case 'reflect':
                return f(r, t.dims, u, A, c, n.pads);
              case 'edge':
                return p(r, t.dims, u, A, c, n.pads);
              default:
                throw new Error('Invalid mode');
            }
          };
          const h = (e, t, n, r, o, s, a) => {
            const A = t.length;
            let c = '';
            for (let e = A - 1; e >= 0; --e) {
              c += `\n        k = m[${e}] - ${s[e]};\n        if (k < 0)  return constant;\n        if (k >= ${t[e]}) return constant;\n        offset += k * ${n[e]};\n        `;
            }
            return `\n      float padA(int m[${A}]) {\n        const float constant = float(${a});\n        int offset = 0;\n        int k = 0;\n        ${c}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `;
          };
          const f = (e, t, n, r, o, s) => {
            const a = t.length;
            let A = '';
            for (let e = a - 1; e >= 0; --e) {
              A += `\n        k = m[${e}] - ${s[e]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${(t[e] - 1) * 2};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${t[e]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${n[e]};\n        `;
            }
            return `\n      float padA(int m[${a}]) {\n        int offset = 0;\n        int k = 0;\n        ${A}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `;
          };
          const p = (e, t, n, r, o, s) => {
            const a = t.length;
            let A = '';
            for (let e = a - 1; e >= 0; --e) {
              A += `\n        k = m[${e}] - ${s[e]};\n        if (k < 0)  k = 0;\n        if (k >= ${t[e]}) k = ${t[e] - 1};\n        offset += k * ${n[e]};\n      `;
            }
            return `\n      float padA(int m[${a}]) {\n        int offset = 0;\n        int k = 0;\n        ${A}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `;
          };
        },
        2834: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.globalMaxPool = _exports.parseMaxPoolAttributes = _exports.maxPool = _exports.parseGlobalAveragePoolAttributes = _exports.globalAveragePool = _exports.parseAveragePoolAttributes = _exports.averagePool = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(5639);
          _exports.averagePool = (e, t, n) => {
            g(t);
            const r = {
              name: 'AveragePool',
              inputNames: ['X'],
              inputTypes: [s.TextureType.unpacked],
              cacheHint: n.cacheKey
            };
            return [e.run(Object.assign(Object.assign({}, r), {
              get: () => a(t, r, false, n)
            }), t)];
          };
          _exports.parseAveragePoolAttributes = e => {
            const t = e.attributes.getString('auto_pad', 'NOTSET');
            const n = e.attributes.getInt('ceil_mode', 0);
            const o = e.attributes.getInt('count_include_pad', 0) !== 0;
            const s = e.attributes.getInts('kernel_shape');
            const a = e.attributes.getInts('strides', []);
            const A = e.attributes.getInts('pads', []);
            if (n !== 0) {
              throw new Error('using ceil() in shape computation is not yet supported for AveragePool');
            }
            return r.createAttributeWithCacheKey({
              autoPad: t,
              ceilMode: n,
              countIncludePad: o,
              kernelShape: s,
              strides: a,
              pads: A
            });
          };
          const a = (e, t, n, r) => {
            const [a, A] = c(e, r, n);
            const u = o.ShapeUtil.size(a.kernelShape);
            let l = '';
            if (a.countIncludePad) {
              l += `value /= float(${u});`;
            } else {
              l += `value /= float(${u} - pad);`;
            }
            const g = `\n        ${d(e[0].dims, a, 'value += _X(x);', l, '0.0')}\n      `;
            return Object.assign(Object.assign({}, t), {
              output: {
                dims: A,
                type: e[0].type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: g
            });
          };
          _exports.globalAveragePool = (e, t, n) => {
            g(t);
            const r = {
              name: 'GlobalAveragePool',
              inputNames: ['X'],
              inputTypes: [s.TextureType.unpacked],
              cacheHint: `${n.countIncludePad}`
            };
            return [e.run(Object.assign(Object.assign({}, r), {
              get: () => a(t, r, true, n)
            }), t)];
          };
          _exports.parseGlobalAveragePoolAttributes = e => {
            const t = e.attributes.getInt('count_include_pad', 0) !== 0;
            return r.createAttributeWithCacheKey({
              autoPad: '',
              ceilMode: 0,
              countIncludePad: t,
              kernelShape: [],
              strides: [],
              pads: []
            });
          };
          _exports.maxPool = (e, t, n) => {
            g(t);
            const r = {
              name: 'MaxPool',
              inputNames: ['X'],
              inputTypes: [s.TextureType.unpacked],
              cacheHint: n.cacheKey
            };
            return [e.run(Object.assign(Object.assign({}, r), {
              get: () => A(t, r, false, n)
            }), t)];
          };
          _exports.parseMaxPoolAttributes = e => {
            const t = e.attributes.getString('auto_pad', 'NOTSET');
            const n = e.attributes.getInt('ceil_mode', 0);
            const o = e.attributes.getInts('kernel_shape');
            const s = e.attributes.getInts('strides', []);
            const a = e.attributes.getInts('pads', []);
            const A = e.attributes.getInt('storage_order', 0);
            const c = e.attributes.getInts('dilations', []);
            if (A !== 0) {
              throw new Error('column major storage order is not yet supported for MaxPool');
            }
            if (n !== 0) {
              throw new Error('using ceil() in shape computation is not yet supported for MaxPool');
            }
            return r.createAttributeWithCacheKey({
              autoPad: t,
              ceilMode: n,
              countIncludePad: false,
              kernelShape: o,
              strides: s,
              pads: a,
              storageOrder: A,
              dilations: c
            });
          };
          const A = (e, t, n, r) => {
            const [o, a] = c(e, r, n);
            const A = `\n      ${d(e[0].dims, o, '\n      value = max(_X(x), value);\n    ', '', '-1e5')}\n    `;
            return Object.assign(Object.assign({}, t), {
              output: {
                dims: a,
                type: e[0].type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: A
            });
          };
          const c = (e, t, n) => {
            const r = e[0].dims.slice();
            const s = Object.hasOwnProperty.call(t, 'dilations');
            const a = t.kernelShape.slice();
            const A = t.strides.slice();
            const c = s ? t.dilations.slice() : [];
            const u = t.pads.slice();
            o.PoolConvUtil.adjustPoolAttributes(n, r, a, A, c, u);
            const l = o.PoolConvUtil.computePoolOutputShape(n, r, A, c, a, u, t.autoPad);
            const g = Object.assign({}, t);
            if (s) {
              Object.assign(g, {
                kernelShape: a,
                strides: A,
                pads: u,
                dilations: c,
                cacheKey: t.cacheKey
              });
            } else {
              Object.assign(g, {
                kernelShape: a,
                strides: A,
                pads: u,
                cacheKey: t.cacheKey
              });
            }
            return [g, l];
          };
          const u = {
            autoPad: '',
            ceilMode: 0,
            countIncludePad: false,
            kernelShape: [],
            strides: [],
            pads: [],
            storageOrder: 0,
            dilations: [],
            cacheKey: ''
          };
          const l = {
            name: 'GlobalMaxPool',
            inputNames: ['X'],
            inputTypes: [s.TextureType.unpacked]
          };
          _exports.globalMaxPool = (e, t) => {
            g(t);
            return [e.run(Object.assign(Object.assign({}, l), {
              get: () => A(t, l, true, u)
            }), t)];
          };
          const g = e => {
            if (!e || e.length !== 1) {
              throw new Error('Pool ops requires 1 input.');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('Invalid input type.');
            }
          };
          const d = (e, t, n, r, s) => {
            const a = e.length;
            if (t.kernelShape.length <= 2) {
              const o = t.kernelShape[t.kernelShape.length - 1];
              const A = t.strides[t.strides.length - 1];
              const c = t.pads[t.pads.length / 2 - 1];
              const u = t.pads[t.pads.length - 1];
              const l = e[a - 1];
              let g = '';
              let d = '';
              let h = '';
              g = c + u !== 0 ? `\n          for (int i = 0; i < ${o}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${A} - ${c} + i;\n            if (x[${a} - 1] < 0 || x[${a} - 1] >= ${l}) {\n              pad++;\n              continue;\n            }\n            ${n}\n          }` : `\n          for (int i = 0; i < ${o}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${A} - ${c} + i;\n            ${n}\n          }`;
              if (t.kernelShape.length === 2) {
                const n = t.kernelShape[t.kernelShape.length - 2];
                const r = t.strides[t.strides.length - 2];
                const s = t.pads[t.pads.length / 2 - 2];
                const A = t.pads[t.pads.length - 2];
                const c = e[a - 2];
                d = s + A !== 0 ? `\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${s} + j;\n              if (x[${a} - 2] < 0 || x[${a} - 2] >= ${c}) {\n                pad+= ${o};\n                continue;\n              }\n          ` : `\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${s} + j;\n            `;
                h = '\n          }\n        ';
              }
              return `\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n\n          float value = ${s};\n          int pad = 0;\n          ${d}\n          ${g}\n          ${h}\n          ${r}\n          return value;\n        }\n      `;
            }
            {
              const A = o.ShapeUtil.size(t.kernelShape);
              const c = o.ShapeUtil.computeStrides(t.kernelShape);
              const u = c.length;
              const l = t.pads.length;
              const g = f(u);
              const d = h(e, 'inputDims');
              const p = h(t.pads, 'pads');
              const m = h(c, 'kernelStrides');
              const I = h(t.strides, 'strides');
              let E = '';
              E = t.pads.reduce((e, t) => e + t) ? `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${n}\n          }` : `\n          }\n          ${n}\n        `;
              return `\n        ${g}\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n          int offset[${u}];\n          int pads[${l}];\n          int inputDims[${a}];\n          int kernelStrides[${u}];\n          int strides[${u}];\n          ${p}\n          ${d}\n          ${I}\n          ${m}\n\n          float value = ${s};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${A}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${a} - ${u}; j < ${a}; j++) {\n              x[j] = indices[j] * strides[j - ${a} + ${u}]\n                + offset[j - ${a} + ${u}] - pads[j - 2];\n              ${E}\n          }\n          ${r}\n\n          return value;\n        }\n      `;
            }
          };
          const h = (e, t) => {
            let n = '';
            for (let r = 0; r < e.length; r++) {
              n += `\n      ${t}[${r}] = ${e[r]};\n    `;
            }
            return n;
          };
          const f = e => `\n  void offsetToIndices(int offset, int[${e}] strides, out int[${e}] indices) {\n    if (${e} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${e} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${e} - 1] = offset;\n  }`;
        },
        1010: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.reduceLogSumSquare = _exports.reduceLogSum = _exports.reduceProd = _exports.reduceMin = _exports.reduceMax = _exports.reduceMean = _exports.reduceSum = _exports.parseReduceAttributes = undefined;
          const r = _require(4910);
          const o = _require(6145);
          const s = _require(7273);
          const a = _require(5639);
          const A = (e, t, n, r, o) => {
            u(t);
            const s = {
              name: r,
              inputNames: ['A'],
              inputTypes: [a.TextureType.unpacked]
            };
            return [e.run(Object.assign(Object.assign({}, s), {
              cacheHint: n.cacheKey,
              get: () => c(e, t, n, r, o, s)
            }), t)];
          };
          _exports.parseReduceAttributes = e => {
            const t = e.attributes.getInts('axes', []);
            const n = e.attributes.getInt('keepdims', 1) === 1;
            return r.createAttributeWithCacheKey({
              axes: t,
              keepDims: n
            });
          };
          const c = (e, t, n, r, o, A) => {
            const c = [];
            const u = t[0].dims.length || 1;
            const l = [];
            const g = s.ShapeUtil.normalizeAxes(n.axes, t[0].dims.length);
            const d = o(t, g);
            let h = d[1];
            for (let e = 0; e < t[0].dims.length; e++) {
              if (g.indexOf(e) >= 0 || g.length === 0) {
                if (n.keepDims) {
                  c.push(1);
                }
                h = `\n          for(int j${e} = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n            inputIdx[${e}] = j${e};\n            ${h}\n          }`;
              } else {
                l.push(`inputIdx[${e}] = outputIdx[${c.length}];`);
                c.push(t[0].dims[e]);
              }
            }
            const f = `\n      float process(int outputIdx[${c.length || 1}]) {\n        float value;                 // final result\n        int inputIdx[${u}];      // addressing input data\n        ${l.join('\n')}\n        ${d[0]}       // init ops for reduce max/min\n        ${h}\n        ${d[2]}       // final computation for reduce mean\n        return value;\n      }`;
            return Object.assign(Object.assign({}, A), {
              output: {
                dims: c,
                type: t[0].type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: f
            });
          };
          const u = e => {
            if (!e || e.length !== 1) {
              throw new Error('Reduce op requires 1 input.');
            }
            if (o.NUMBER_TYPES.indexOf(e[0].type) === -1) {
              throw new Error('Invalid input type.');
            }
          };
          _exports.reduceSum = (e, t, n) => A(e, t, n, 'ReduceSum', () => ['value = 0.0;', 'value += _A(inputIdx);', '']);
          _exports.reduceMean = (e, t, n) => A(e, t, n, 'ReduceMean', (e, t) => {
            let n = 1;
            for (let r = 0; r < e[0].dims.length; r++) {
              if (t.indexOf(r) >= 0 || t.length === 0) {
                n *= e[0].dims[r];
              }
            }
            return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${n}.;`];
          });
          _exports.reduceMax = (e, t, n) => A(e, t, n, 'ReduceMax', (e, t) => {
            const n = [];
            for (let r = 0; r < e[0].dims.length; r++) {
              if (t.indexOf(r) >= 0 || t.length === 0) {
                n.push(`inputIdx[${r}] = 0;`);
              }
            }
            return [`${n.join('\n')}\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];
          });
          _exports.reduceMin = (e, t, n) => A(e, t, n, 'ReduceMin', (e, t) => {
            const n = [];
            for (let r = 0; r < e[0].dims.length; r++) {
              if (t.indexOf(r) >= 0 || t.length === 0) {
                n.push(`inputIdx[${r}] = 0;`);
              }
            }
            return [`${n.join('\n')}\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];
          });
          _exports.reduceProd = (e, t, n) => A(e, t, n, 'ReduceProd', () => ['value = 1.0;', 'value *= _A(inputIdx);', '']);
          _exports.reduceLogSum = (e, t, n) => A(e, t, n, 'ReduceLogSum', () => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);']);
          _exports.reduceLogSumSquare = (e, t, n) => A(e, t, n, 'ReduceLogSumSquare', () => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', '']);
        },
        7379: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.isReshapeCheap = _exports.processDims3D = _exports.createPackedReshape3DProgramInfoLoader = undefined;
          const r = _require(7273);
          const o = _require(6757);
          const s = _require(5639);
          const a = _require(5614);
          _exports.createPackedReshape3DProgramInfoLoader = (e, t, n) => {
            const A = (e => ({
              name: 'Reshape (packed)',
              inputTypes: [s.TextureType.packed],
              inputNames: ['A'],
              cacheHint: `${e}`
            }))(n);
            return Object.assign(Object.assign({}, A), {
              get: () => ((e, t, n, A) => {
                const c = t.dims;
                const u = A;
                let l = '';
                for (let e = 0; e < 4; e++) {
                  let t = '';
                  switch (e) {
                    case 0:
                      t = 'outputCoords = rc;';
                      break;
                    case 1:
                      t = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';
                      break;
                    case 2:
                      t = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';
                      break;
                    case 3:
                      t = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';
                      break;
                    default:
                      throw new Error();
                  }
                  l += `\n        ${t}\n        ${e > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${e > 0 ? '}' : ''}\n      `;
                }
                const g = o.getGlsl(e.session.backend.glContext.version);
                const d = `\n      ${function (e) {
                  const t = r.ShapeUtil.computeStrides(e);
                  const n = ['b', 'r', 'c'];
                  const o = 'index';
                  const s = t.map((e, r) => `int ${n[r]} = ${o} / ${e}; ${r === t.length - 1 ? `int ${n[r + 1]} = ${o} - ${n[r]} * ${e}` : `index -= ${n[r]} * ${e}`};`).join('');
                  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s}\n      return ivec3(b, r, c);\n    }\n  `;
                }(c)}\n      ${function (e) {
                  const t = r.ShapeUtil.computeStrides(e);
                  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${t[0]} + coords.z * ${t[1]} + coords.y;\n  }\n`;
                }(u)}\n      ${a.unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${u[2]};\n        int cols = ${u[1]};\n\n        ${l}\n        ${g.output} = result;\n      }\n    `;
                return Object.assign(Object.assign({}, n), {
                  output: {
                    dims: u,
                    type: t.type,
                    textureType: s.TextureType.packed
                  },
                  shaderSource: d,
                  hasMain: true
                });
              })(e, t, A, n)
            });
          };
          _exports.processDims3D = function (e) {
            if (e.length === 0) {
              return [1, 1, 1];
            }
            let t = 1;
            for (let n = 0; n < e.length - 2; ++n) {
              t *= e[n];
            }
            return [t, e.length > 1 ? e[e.length - 2] : 1, e[e.length - 1]];
          };
          _exports.isReshapeCheap = function (e, t) {
            let n = false;
            n = e.length === 0 || t.length === 0 || (e.length < 2 || t.length < 2 ? e[e.length - 1] === t[t.length - 1] : e[e.length - 1] === t[t.length - 1] && e[e.length - 2] === t[t.length - 2]);
            return n;
          };
        },
        8126: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.reshape = undefined;
          const r = _require(7273);
          _exports.reshape = (e, t) => {
            const n = r.ShapeUtil.calculateReshapedDims(t[0].dims, t[1].integerData);
            if (e.session.pack) {
              return [e.reshapePacked(t[0], n)];
            } else {
              return [e.reshapeUnpacked(t[0], n)];
            }
          };
        },
        2801: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseResizeAttributesV11 = _exports.parseResizeAttributesV10 = _exports.resize = undefined;
          const r = _require(6757);
          const o = _require(5639);
          const s = _require(432);
          const a = _require(5614);
          const A = _require(3980);
          const c = {
            name: 'Resize',
            inputNames: ['A'],
            inputTypes: [o.TextureType.packed]
          };
          _exports.resize = (e, t, n) => {
            A.validateInputs(t, n);
            return [e.run(Object.assign(Object.assign({}, c), {
              cacheHint: n.cacheKey,
              get: () => u(e, t, n)
            }), t)];
          };
          _exports.parseResizeAttributesV10 = e => A.parseUpsampleAttributes(e, 10);
          _exports.parseResizeAttributesV11 = e => A.parseUpsampleAttributes(e, 11);
          const u = (e, t, n) => {
            const A = r.getGlsl(e.session.backend.glContext.version);
            const [u, g] = l(t, n);
            if (u.every(e => e === 1) && n.coordinateTransformMode !== 'tf_crop_and_resize') {
              return Object.assign(Object.assign({}, c), {
                output: {
                  dims: g,
                  type: t[0].type,
                  textureType: o.TextureType.packed
                },
                hasMain: true,
                shaderSource: `void main() {\n                    vec4 v = ${A.texture2D}(X, TexCoords);\n                    ${A.output} = v;\n                }`
              });
            }
            const d = g.length;
            if (d < 2) {
              throw new Error(`output dimension should be at least 2, but got ${d}`);
            }
            const h = g[d - 2];
            const f = g[d - 1];
            const p = t[0].dims;
            if (d !== p.length) {
              throw new Error(`output dimension should match input ${p.length}, but got ${d}`);
            }
            const m = p[d - 2];
            const I = p[d - 1];
            const E = u[d - 2];
            const y = u[d - 1];
            let w = '';
            if (n.mode !== 'linear') {
              throw new Error(`resize (packed) does not support mode: '${n.mode}'`);
            }
            switch (n.coordinateTransformMode) {
              case 'asymmetric':
                w = '\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                ';
                break;
              case 'half_pixel':
                w = '\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                ';
                break;
              case 'pytorch_half_pixel':
                w = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${f}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${h}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${f}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${h}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;
                break;
              case 'align_corners':
                w = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${f}.0 - 1.0, ${h}.0 - 1.0, ${f}.0 - 1.0,\n                            ${h}.0 - 1.0);\n                        vec4 original = vec4(${I}.0 - 1.0, ${m}.0 - 1.0, ${I}.0 - 1.0,\n                            ${m}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;
                break;
              default:
                throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`);
            }
            const _ = s.getCoordsDataType(d);
            const v = `\n            const vec2 inputWH = vec2(${m}.0, ${I}.0);\n            const vec4 scaleWHWH = vec4(float(${E}), float(${y}), float(${E}), float(${y}));\n            ${a.unpackFromChannel()}\n            ${w}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${_} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${h - 1};\n                bool hasNextCol = rc.z < ${f - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${A.output} = vec4(newValue);\n            }\n        `;
            return Object.assign(Object.assign({}, c), {
              output: {
                dims: g,
                type: t[0].type,
                textureType: o.TextureType.packed
              },
              hasMain: true,
              shaderSource: v
            });
          };
          const l = (e, t) => {
            const n = e[0].dims;
            let r;
            let o = t.scales;
            if (o.length === 0) {
              const s = e[t.scalesInputIdx];
              if (s && s.size !== 0) {
                if (e[t.sizesInputIdx]) {
                  throw new Error('Only one of scales or sizes must be provided as input.');
                }
                o = g(s, t.mode, t.isResize);
              } else {
                const s = e[t.sizesInputIdx];
                if (!s || s.size === 0) {
                  throw new Error('Either scales or sizes MUST be provided as input.');
                }
                r = Array.from(s.integerData);
                o = d(r, n, t.mode, t.isResize);
              }
            } else {
              if (e[t.sizesInputIdx]) {
                throw new Error('Only one of scales or sizes must be provided as input.');
              }
            }
            const s = r || n.map((e, t) => Math.floor(e * o[t]));
            return [o, s];
          };
          const g = (e, t, n) => {
            const r = Array.from(e.floatData);
            A.scalesValidation(r, t, n);
            return r;
          };
          const d = (e, t, n, r) => {
            const o = t.length;
            const s = new Array(o);
            for (let n = 0, r = o; n < r; n++) {
              if (t[n] === 0) {
                if (e[n] !== 0) {
                  throw new Error('Input dim is zero but required output dim is non-zero.');
                }
                s[n] = 1;
              } else {
                s[n] = e[n] / t[n];
              }
            }
            A.scalesValidation(s, n, r);
            return s;
          };
        },
        565: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.shape = undefined;
          const r = _require(9240);
          _exports.shape = (e, t) => {
            o(t);
            return [new r.Tensor([t[0].dims.length], 'int32', undefined, undefined, new Int32Array(t[0].dims))];
          };
          const o = e => {
            if (!e || e.length !== 1) {
              throw new Error('Shape requires 1 input.');
            }
          };
        },
        2444: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.sliceV10 = _exports.parseSliceAttributes = _exports.slice = undefined;
          const r = _require(4910);
          const o = _require(6145);
          const s = _require(7273);
          const a = _require(5639);
          const A = {
            name: 'Slice',
            inputNames: ['A'],
            inputTypes: [a.TextureType.unpacked]
          };
          _exports.slice = (e, t, n) => {
            u(t);
            return [e.run(Object.assign(Object.assign({}, A), {
              cacheHint: n.cacheKey,
              get: () => c(e, t[0], n)
            }), t)];
          };
          _exports.parseSliceAttributes = e => {
            const t = e.attributes.getInts('starts');
            const n = e.attributes.getInts('ends');
            const o = e.attributes.getInts('axes', []);
            return r.createAttributeWithCacheKey({
              starts: t,
              ends: n,
              axes: o
            });
          };
          const c = (e, t, n) => {
            const r = n.axes.length === 0 ? t.dims.slice(0).map((e, t) => t) : n.axes;
            const o = s.ShapeUtil.normalizeAxes(r, t.dims.length);
            const c = n.starts.map((e, n) => e > t.dims[o[n]] - 1 ? t.dims[o[n]] : s.ShapeUtil.normalizeAxis(e, t.dims[o[n]]));
            const u = n.ends.map((e, n) => e > t.dims[o[n]] - 1 ? t.dims[o[n]] : s.ShapeUtil.normalizeAxis(e, t.dims[o[n]]));
            const l = t.dims.slice();
            const g = [];
            for (let e = 0; e < o.length; e++) {
              l[o[e]] = u[e] - c[e];
              if (c[e] > 0) {
                g.push(`outputIdx[${o[e]}] += ${c[e]};`);
              }
            }
            const d = `\n      float process(int outputIdx[${l.length}]) {\n        ${g.join('\n      ')}\n        return _A(outputIdx);\n      }`;
            return Object.assign(Object.assign({}, A), {
              output: {
                dims: l,
                type: t.type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: d
            });
          };
          const u = e => {
            if (!e || e.length !== 1) {
              throw new Error('Slice requires 1 input.');
            }
            if (o.NUMBER_TYPES.indexOf(e[0].type) === -1) {
              throw new Error('Invalid input type.');
            }
          };
          _exports.sliceV10 = (e, t) => {
            g(t);
            const n = l(e, t);
            return [e.run(Object.assign(Object.assign({}, A), {
              cacheHint: n.cacheKey,
              get: () => c(e, t[0], n)
            }), [t[0]])];
          };
          const l = (e, t) => {
            if (!e.session.isInitializer(t[1].dataId) || !e.session.isInitializer(t[2].dataId) || t.length >= 4 && !e.session.isInitializer(t[3].dataId) || t.length >= 5 && !e.session.isInitializer(t[4].dataId)) {
              throw new Error('dynamic slice attributes are not allowed');
            }
            if (t.length >= 5 && t[4].integerData.some(e => e !== 1)) {
              throw new Error('currently non-1 steps is not supported for Slice');
            }
            const n = Array.from(t[1].integerData);
            const r = Array.from(t[2].integerData);
            const o = t.length >= 4 ? Array.from(t[3].integerData) : [];
            return {
              starts: n,
              ends: r,
              axes: o,
              cacheKey: `${o};${n};${r}`
            };
          };
          const g = e => {
            if (!e || e.length < 3 || e.length > 5) {
              throw new Error('Invalid input number.');
            }
            if (e[1].type !== 'int32' || e[1].dims.length !== 1) {
              throw new Error('Invalid input type.');
            }
            if (e[2].type !== 'int32' || e[2].dims.length !== 1) {
              throw new Error('Invalid input type.');
            }
            if (e.length >= 4 && (e[3].type !== 'int32' || e[3].dims.length !== 1)) {
              throw new Error('Invalid input type.');
            }
            if (e.length >= 5 && (e[4].type !== 'int32' || e[4].dims.length !== 1)) {
              throw new Error('Invalid input type.');
            }
          };
        },
        815: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.softmaxV13 = _exports.parseSoftmaxAttributesV13 = _exports.parseSoftmaxAttributes = _exports.softmax = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(6757);
          const a = _require(5639);
          const A = _require(5707);
          const c = {
            name: 'SoftmaxComputeMax',
            inputNames: ['A'],
            inputTypes: [a.TextureType.unpacked]
          };
          const u = {
            name: 'SoftmaxComputeScale',
            inputNames: ['A', 'Max'],
            inputTypes: [a.TextureType.unpacked, a.TextureType.unpacked]
          };
          const l = {
            name: 'SoftMax',
            inputNames: ['A', 'Max', 'Norm'],
            inputTypes: [a.TextureType.unpacked, a.TextureType.unpacked, a.TextureType.unpacked]
          };
          _exports.softmax = (e, t, n) => {
            p(t);
            const r = t[0].dims.slice();
            const s = o.ShapeUtil.normalizeAxis(n.axis, r.length);
            const a = o.ShapeUtil.sizeToDimension(r, s);
            const A = o.ShapeUtil.sizeFromDimension(r, s);
            return g(e, t, n, a, A);
          };
          _exports.parseSoftmaxAttributes = e => r.createAttributeWithCacheKey({
            axis: e.attributes.getInt('axis', 1)
          });
          _exports.parseSoftmaxAttributesV13 = e => r.createAttributeWithCacheKey({
            axis: e.attributes.getInt('axis', -1)
          });
          _exports.softmaxV13 = (e, t, n) => {
            p(t);
            const s = t[0].dims.slice();
            const a = o.ShapeUtil.normalizeAxis(n.axis, s.length);
            const c = s.length;
            const u = a !== c - 1;
            const l = [];
            let d;
            let h = [];
            let f = [];
            if (u) {
              h = Array.from({
                length: c
              }).map((e, t) => t);
              h[a] = c - 1;
              h[c - 1] = a;
              h.map(e => l.push(s[e]));
              d = r.createAttributeWithCacheKey({
                perm: h
              });
              f = A.transpose(e, t, d);
            }
            const m = u ? o.ShapeUtil.sizeToDimension(l, c - 1) : o.ShapeUtil.sizeToDimension(s, c - 1);
            const I = u ? o.ShapeUtil.sizeFromDimension(l, c - 1) : o.ShapeUtil.sizeFromDimension(s, c - 1);
            const E = g(e, u ? f : t, n, m, I);
            if (u) {
              return A.transpose(e, E, d);
            } else {
              return E;
            }
          };
          const g = (e, t, n, r, o) => {
            const s = d(e, t[0], r, o, [r]);
            const a = e.run(Object.assign(Object.assign({}, c), {
              cacheHint: n.cacheKey,
              get: () => s
            }), t);
            const A = h(e, t[0], r, o, s.output.dims, [r]);
            const g = e.run(Object.assign(Object.assign({}, u), {
              cacheHint: n.cacheKey,
              get: () => A
            }), [t[0], a]);
            const p = f(e, t[0], r, o, s.output.dims, A.output.dims);
            return [e.run(Object.assign(Object.assign({}, l), {
              cacheHint: n.cacheKey,
              get: () => p
            }), [t[0], a, g])];
          };
          const d = (e, t, n, r, o) => {
            const [A, u] = e.calculateTextureWidthAndHeight(t.dims, a.TextureType.unpacked);
            const l = o.length;
            if (n < 1 || r < 1) {
              throw new Error('Logical row count N and feature count D must be greater than or equal to 1');
            }
            if (o.length !== 1) {
              throw new Error('Dimensionality of the output should be 1');
            }
            if (o[0] !== n) {
              throw new Error('Shape of the output should be equal to logical row count');
            }
            const g = s.getGlsl(e.session.backend.glContext.version);
            const d = `\n      float process(int[${l}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float max = getColorAsFloat(${g.texture2D}(A, offsetToCoords(logical_row_start_offset, ${A},\n        ${u} )));\n        for(int i=1; i<${r}; ++i)\n        {\n          float current = getColorAsFloat(${g.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${A}, ${u})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;
            return Object.assign(Object.assign({}, c), {
              output: {
                dims: o,
                type: t.type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: d
            });
          };
          const h = (e, t, n, r, o, A) => {
            const [c, l] = e.calculateTextureWidthAndHeight(t.dims, a.TextureType.unpacked);
            const g = A.length;
            if (n < 1 || r < 1) {
              throw new Error('Logical row count N and feature count D must be greater than or equal to 1');
            }
            if (A.length !== 1) {
              throw new Error('Dimensionality of the output should be 1');
            }
            if (A[0] !== n) {
              throw new Error('Shape of the output should be equal to logical row count');
            }
            if (o.length !== 1) {
              throw new Error('Dimensionality of the intermediate results should be 1');
            }
            if (o[0] !== n) {
              throw new Error('Shape of the intermediate results should be equal to logical row count');
            }
            const d = `\n      float process(int[${g}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${r}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${s.getGlsl(e.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${c}, ${l}))) - max);\n        }\n\n        return norm_factor;\n      }`;
            return Object.assign(Object.assign({}, u), {
              output: {
                dims: A,
                type: t.type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: d
            });
          };
          const f = (e, t, n, r, o, s) => {
            const [A, c] = e.calculateTextureWidthAndHeight(t.dims, a.TextureType.unpacked);
            const u = t.dims.length;
            if (n < 1 || r < 1) {
              throw new Error('Logical row count N and feature count D must be greater than or equal to 1');
            }
            if (o.length !== 1 || s.length !== 1) {
              throw new Error('Dimensionality of the intermediate results should be 1');
            }
            if (o[0] !== n || s[0] !== n) {
              throw new Error('Shape of the intermediate results should be equal to logical row count');
            }
            const g = `\n      float process(int[${u}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${A}, ${c});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${r};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;
            return Object.assign(Object.assign({}, l), {
              output: {
                dims: t.dims,
                type: t.type,
                textureType: a.TextureType.unpacked
              },
              shaderSource: g
            });
          };
          const p = e => {
            if (!e || e.length !== 1) {
              throw new Error('Softmax requires 1 input.');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('Invalid input type');
            }
          };
        },
        564: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseSplitAttributes = _exports.split = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(5639);
          const a = {
            name: 'Split',
            inputNames: ['A'],
            inputTypes: [s.TextureType.unpacked]
          };
          _exports.split = (e, t, n) => {
            u(t);
            const r = o.ShapeUtil.normalizeAxis(n.axis, t[0].dims.length);
            const s = A(e, t, r, n);
            const l = [];
            for (let o = 0; o < s; ++o) {
              l.push(e.run(Object.assign(Object.assign({}, a), {
                cacheHint: `${n.cacheKey};${o}`,
                get: () => c(e, t[0], n, r, o)
              }), t));
            }
            return l;
          };
          _exports.parseSplitAttributes = e => {
            const t = e.attributes.getInt('axis', 0);
            const n = e.attributes.getInts('split', []);
            const o = e.outputs.length;
            return r.createAttributeWithCacheKey({
              axis: t,
              split: n,
              numOutputs: o
            });
          };
          const A = (e, t, n, r) => {
            const [, s] = o.SplitUtil.splitShape(t[0].dims, n, r.split, r.numOutputs);
            return s.length;
          };
          const c = (e, t, n, r, A) => {
            const [c, u] = o.SplitUtil.splitShape(t.dims, r, n.split, n.numOutputs);
            const l = u[A];
            const g = c[A];
            const d = `\n      float process(int indices[${g.length}]) {\n        indices[${r}] += ${l};\n        return _A(indices);\n      }\n    `;
            return Object.assign(Object.assign({}, a), {
              cacheHint: `${n.cacheKey}:${A}`,
              output: {
                dims: g,
                type: t.type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: d
            });
          };
          const u = e => {
            if (!e || e.length !== 1) {
              throw new Error('Split requires one input.');
            }
            if (e[0].type !== 'int8' && e[0].type !== 'uint8' && e[0].type !== 'int16' && e[0].type !== 'uint16' && e[0].type !== 'int32' && e[0].type !== 'uint32' && e[0].type !== 'float32' && e[0].type !== 'float64' && e[0].type !== 'bool') {
              throw new Error('Invalid input type.');
            }
          };
        },
        5416: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseSqueezeAttributes = _exports.squeezeV13 = _exports.squeeze = undefined;
          const r = _require(7273);
          _exports.squeeze = (e, t, n) => {
            o(t);
            const s = r.ShapeUtil.squeezeShape(t[0].dims, n);
            return [e.reshapeUnpacked(t[0], s)];
          };
          _exports.squeezeV13 = (e, n) => {
            s(n);
            return _exports.squeeze(e, [n[0]], Array.from(n[1].integerData));
          };
          _exports.parseSqueezeAttributes = e => e.attributes.getInts('axes');
          const o = e => {
            if (!e || e.length !== 1) {
              throw new Error('Squeeze requires 1 input.');
            }
            if (e[0].type === 'string') {
              throw new Error('invalid input tensor types.');
            }
          };
          const s = e => {
            if (!e || e.length !== 2) {
              throw new Error('Squeeze requires 2 inputs.');
            }
            if (e[1].type !== 'int32') {
              throw new Error('Invalid input type.');
            }
          };
        },
        1240: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.sum = undefined;
          const r = _require(6757);
          const o = _require(5639);
          _exports.sum = (e, t) => {
            a(t);
            const n = {
              name: 'Sum',
              inputNames: t.map((e, t) => `X${t}`),
              inputTypes: new Array(t.length).fill(o.TextureType.unpacked)
            };
            return [e.run(Object.assign(Object.assign({}, n), {
              get: () => s(e, t, n)
            }), t)];
          };
          const s = (e, t, n) => {
            const s = r.getGlsl(e.session.backend.glContext.version);
            const a = t[0].dims.slice();
            const A = `\n      void main() {\n        vec4 result = ${t.map((e, t) => `${s.texture2D}(X${t},TexCoords)`).join(' + ')};\n        ${s.output} = result;\n      }\n    `;
            return Object.assign(Object.assign({}, n), {
              output: {
                dims: a,
                type: t[0].type,
                textureType: o.TextureType.unpacked
              },
              hasMain: true,
              shaderSource: A
            });
          };
          const a = e => {
            if (!e || e.length === 0) {
              throw new Error('Sum requires inputs.');
            }
            const t = e[0].dims.length;
            for (let n = 1; n < e.length; n++) {
              if (t !== e[n].dims.length) {
                throw new Error('Input shapes are mismatched.');
              }
              for (let r = 0; r < t; r++) {
                if (e[0].dims[r] !== e[n].dims[r]) {
                  throw new Error('Input shapes are not matched.');
                }
              }
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('Invalid input type.');
            }
            for (let t = 1; t < e.length; t++) {
              if (e[0].type !== e[t].type) {
                throw new Error('Input types are not matched.');
              }
            }
          };
        },
        5944: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.tile = undefined;
          const r = _require(6145);
          const o = _require(5639);
          _exports.tile = (e, t) => {
            a(t);
            const n = {
              name: 'Tile',
              inputNames: ['A'],
              inputTypes: [o.TextureType.unpacked]
            };
            return [e.run(Object.assign(Object.assign({}, n), {
              get: () => s(e, t, n)
            }), t)];
          };
          const s = (e, t, n) => {
            const r = t[0].dims.slice();
            const s = new Array(r.length);
            const a = [];
            for (let e = 0; e < r.length; e++) {
              s[e] = r[e] * t[1].numberData[e];
              a.push(`inputIdx[${e}] = int(mod(float(outputIdx[${e}]), ${r[e]}.));`);
            }
            const A = s.length;
            const c = `\n      float process(int outputIdx[${A}]) {\n        int inputIdx[${A}];\n        ${a.join('\n')}\n        return _A(inputIdx);\n      }\n    `;
            return Object.assign(Object.assign({}, n), {
              output: {
                dims: s,
                type: t[0].type,
                textureType: o.TextureType.unpacked
              },
              shaderSource: c
            });
          };
          const a = e => {
            if (!e || e.length !== 2) {
              throw new Error('Tile requires 2 input.');
            }
            if (e[1].dims.length !== 1) {
              throw new Error('The second input shape must 1 dimension.');
            }
            if (e[1].dims[0] !== e[0].dims.length) {
              throw new Error('Invalid input shape.');
            }
            if (r.NUMBER_TYPES.indexOf(e[0].type) === -1) {
              throw new Error('Invalid input type.');
            }
            if (e[1].type !== 'int32' && e[1].type !== 'int16') {
              throw new Error('Invalid repeat type.');
            }
          };
        },
        5707: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseTransposeAttributes = _exports.transpose = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(5639);
          const a = {
            name: 'Transpose',
            inputNames: ['A'],
            inputTypes: [s.TextureType.unpacked]
          };
          _exports.transpose = (e, t, n) => {
            g(t);
            return [e.run(Object.assign(Object.assign({}, a), {
              cacheHint: n.cacheKey,
              get: () => A(e, t[0], n.perm)
            }), t)];
          };
          _exports.parseTransposeAttributes = e => r.createAttributeWithCacheKey({
            perm: e.attributes.getInts('perm', [])
          });
          const A = (e, t, n) => {
            const r = t.dims;
            n = c(r, n);
            const o = u(r, n);
            const A = r.length;
            const g = `\n      ${l('perm', n, A)}\n      float process(int indices[${A}]) {\n        int a[${A}];\n        perm(a, indices);\n        return _A(a);\n      }`;
            return Object.assign(Object.assign({}, a), {
              output: {
                dims: o,
                type: t.type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: g
            });
          };
          const c = (e, t) => {
            if (t && t.length !== e.length) {
              t = [...e.keys()].reverse();
            }
            return t;
          };
          const u = (e, t) => {
            t = c(e, t);
            return o.ShapeUtil.sortBasedOnPerm(e, t);
          };
          const l = (e, t, n) => {
            const r = [];
            r.push(`void ${e}(out int a[${n}], int src[${n}]) {`);
            for (let e = 0; e < n; ++e) {
              r.push(`\ta[${t[e]}]=src[${e}];`);
            }
            r.push('\t}');
            return r.join('\n');
          };
          const g = e => {
            if (!e || e.length !== 1) {
              throw new Error('Transpose requires 1 input.');
            }
            if (e[0].type !== 'float32' && e[0].type !== 'float64') {
              throw new Error('input should be float tensor');
            }
          };
        },
        2488: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.encodeAsUint8 = undefined;
          const r = _require(6757);
          const o = _require(5639);
          _exports.encodeAsUint8 = (e, t) => {
            const n = t.shape;
            const s = r.getGlsl(e.session.backend.glContext.version);
            const a = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${s.texture2D}(X,TexCoords).r;\n      ${s.output} = encodeAsUint8(value);\n    }`;
            const A = {
              name: 'Uint8Encode',
              inputTypes: [o.TextureType.unpacked],
              inputNames: ['X'],
              output: {
                dims: n,
                type: t.tensor.type,
                textureType: o.TextureType.downloadUint8AsFloat
              },
              shaderSource: a,
              hasMain: true
            };
            return e.executeProgram(A, [t.tensor]);
          };
        },
        9087: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.tanh = _exports.tan = _exports.sqrt = _exports.sin = _exports.sigmoid = _exports.relu = _exports.not = _exports.neg = _exports.log = _exports.parseLeakyReluAttributes = _exports.leakyRelu = _exports.identity = _exports.floor = _exports.exp = _exports.parseEluAttributes = _exports.elu = _exports.cos = _exports.ceil = _exports.clipV11 = _exports.parseClipAttributes = _exports.clip = _exports.atan = _exports.asin = _exports.acos = _exports.abs = _exports.glslTanh = _exports.glslTan = _exports.glslSqrt = _exports.glslSigmoid = _exports.glslRelu = _exports.glslSin = _exports.glslNot = _exports.glslNeg = _exports.glslLog = _exports.glslLeakyRelu = _exports.glslIdentity = _exports.glslClip = _exports.glslFloor = _exports.glslExp = _exports.glslElu = _exports.glslCos = _exports.glslCeil = _exports.glslAtan = _exports.glslAsin = _exports.glslAcos = _exports.glslAbs = undefined;
          const r = _require(4910);
          const o = _require(7273);
          const s = _require(1997);
          const a = _require(6757);
          const A = _require(5639);
          function c() {
            return R('abs');
          }
          function u() {
            return R('acos');
          }
          function l() {
            return R('asin');
          }
          function g() {
            return R('atan');
          }
          function d() {
            return R('ceil');
          }
          function h() {
            return R('cos');
          }
          function f(e) {
            const t = 'elu';
            return {
              body: `\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,
              name: t,
              type: s.FunctionType.ValueBased
            };
          }
          function p() {
            return R('exp');
          }
          function m() {
            return R('floor');
          }
          function I(e, t) {
            const n = 'clip';
            return {
              body: `\n  const float min = float(${e});\n  const float max = float(${t});\n\n  float ${n}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${n}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `,
              name: n,
              type: s.FunctionType.ValueBased
            };
          }
          function E() {
            const e = 'indentity';
            return {
              body: `\n  float ${e}_(float a) {\n    return a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return v;\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function y(e) {
            const t = 'leakyRelu';
            return {
              body: `\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,
              name: t,
              type: s.FunctionType.ValueBased
            };
          }
          function w() {
            return R('log');
          }
          function _() {
            const e = 'neg';
            return {
              body: `\n  float ${e}_(float a) {\n    return -a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return -v;\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function v() {
            const e = 'not';
            return {
              body: `\n  float ${e}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${e}_(bool a) {\n    return !a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${e}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function b() {
            return R('sin');
          }
          function B() {
            const e = 'relu';
            return {
              body: `\n  float ${e}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${e}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function Q() {
            const e = 'sigmoid';
            return {
              body: `\n  float ${e}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${e}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function D() {
            return R('sqrt');
          }
          function S() {
            return R('tan');
          }
          function T() {
            const e = 'tanh';
            return {
              body: `\n  float ${e}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${e}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          function R(e) {
            return {
              body: `\n  float ${e}_(float a) {\n    return ${e}(a);\n  }\n  vec4 ${e}_(vec4 v) {\n    return ${e}(v);\n  }\n  `,
              name: e,
              type: s.FunctionType.ValueBased
            };
          }
          _exports.glslAbs = c;
          _exports.glslAcos = u;
          _exports.glslAsin = l;
          _exports.glslAtan = g;
          _exports.glslCeil = d;
          _exports.glslCos = h;
          _exports.glslElu = f;
          _exports.glslExp = p;
          _exports.glslFloor = m;
          _exports.glslClip = I;
          _exports.glslIdentity = E;
          _exports.glslLeakyRelu = y;
          _exports.glslLog = w;
          _exports.glslNeg = _;
          _exports.glslNot = v;
          _exports.glslSin = b;
          _exports.glslRelu = B;
          _exports.glslSigmoid = Q;
          _exports.glslSqrt = D;
          _exports.glslTan = S;
          _exports.glslTanh = T;
          const k = (e, t, n, r) => {
            const o = e.session.pack ? A.TextureType.packed : A.TextureType.unpacked;
            const s = {
              name: n.name,
              inputTypes: [o],
              inputNames: ['A'],
              cacheHint: r
            };
            return Object.assign(Object.assign({}, s), {
              get: () => ((e, t, n, r) => {
                const o = e.session.pack ? A.TextureType.packed : A.TextureType.unpacked;
                const s = a.getGlsl(e.session.backend.glContext.version);
                return Object.assign(Object.assign({}, t), {
                  output: {
                    dims: n.dims,
                    type: n.type,
                    textureType: o
                  },
                  shaderSource: `\n     ${r.body}\n     void main() {\n       vec4 v = ${s.texture2D}(A, TexCoords);\n       v = ${r.name}_(v);\n       ${s.output} = v;\n     }\n     `,
                  hasMain: true
                });
              })(e, s, t, n)
            });
          };
          _exports.abs = (e, t) => [e.run(k(e, t[0], c()), t)];
          _exports.acos = (e, t) => [e.run(k(e, t[0], u()), t)];
          _exports.asin = (e, t) => [e.run(k(e, t[0], l()), t)];
          _exports.atan = (e, t) => [e.run(k(e, t[0], g()), t)];
          _exports.clip = (e, t, n) => [e.run(k(e, t[0], I(n.min, n.max), n.cacheKey), t)];
          _exports.parseClipAttributes = e => r.createAttributeWithCacheKey({
            min: e.attributes.getFloat('min', o.MIN_CLIP),
            max: e.attributes.getFloat('max', o.MAX_CLIP)
          });
          _exports.clipV11 = (e, n) => {
            const r = x(e, n);
            return _exports.clip(e, [n[0]], r);
          };
          const x = (e, t) => {
            if (t.length >= 3 && (!e.session.isInitializer(t[1].dataId) || !e.session.isInitializer(t[2].dataId))) {
              throw new Error('dynamic clip attributes are not allowed');
            }
            const n = t.length >= 3 ? t[1].numberData[0] : o.MIN_CLIP;
            const s = t.length >= 3 ? t[2].numberData[0] : o.MAX_CLIP;
            return r.createAttributeWithCacheKey({
              min: n,
              max: s
            });
          };
          _exports.ceil = (e, t) => [e.run(k(e, t[0], d()), t)];
          _exports.cos = (e, t) => [e.run(k(e, t[0], h()), t)];
          _exports.elu = (e, t, n) => [e.run(k(e, t[0], f(n.alpha), n.cacheKey), t)];
          _exports.parseEluAttributes = e => r.createAttributeWithCacheKey({
            alpha: e.attributes.getFloat('alpha', 1)
          });
          _exports.exp = (e, t) => [e.run(k(e, t[0], p()), t)];
          _exports.floor = (e, t) => [e.run(k(e, t[0], m()), t)];
          _exports.identity = (e, t) => [e.run(k(e, t[0], E()), t)];
          _exports.leakyRelu = (e, t, n) => [e.run(k(e, t[0], y(n.alpha), n.cacheKey), t)];
          _exports.parseLeakyReluAttributes = e => r.createAttributeWithCacheKey({
            alpha: e.attributes.getFloat('alpha', 0.01)
          });
          _exports.log = (e, t) => [e.run(k(e, t[0], w()), t)];
          _exports.neg = (e, t) => [e.run(k(e, t[0], _()), t)];
          _exports.not = (e, t) => [e.run(k(e, t[0], v()), t)];
          _exports.relu = (e, t) => [e.run(k(e, t[0], B()), t)];
          _exports.sigmoid = (e, t) => [e.run(k(e, t[0], Q()), t)];
          _exports.sin = (e, t) => [e.run(k(e, t[0], b()), t)];
          _exports.sqrt = (e, t) => [e.run(k(e, t[0], D()), t)];
          _exports.tan = (e, t) => [e.run(k(e, t[0], S()), t)];
          _exports.tanh = (e, t) => [e.run(k(e, t[0], T()), t)];
        },
        540: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createUnpackProgramInfoLoader = _exports.createUnpackProgramInfo = undefined;
          const r = _require(6757);
          const o = _require(5639);
          const s = _require(432);
          const a = _require(5614);
          const A = {
            name: 'unpack',
            inputNames: ['A'],
            inputTypes: [o.TextureType.packed]
          };
          _exports.createUnpackProgramInfo = (e, t) => {
            const n = t.dims.length;
            const c = a.getChannels('rc', n);
            const u = c.slice(-2);
            const l = s.getCoordsDataType(n);
            const g = a.unpackFromChannel();
            const d = t.dims.length === 0 ? '' : function (e, t) {
              if (e === 1) {
                return 'rc';
              }
              let n = '';
              for (let r = 0; r < e; r++) {
                n += t[r];
                if (r < e - 1) {
                  n += ',';
                }
              }
              return n;
            }(n, c);
            const h = n <= 1 ? 'rc' : `vec2(${u.join(',')})`;
            const f = `\n    ${g}\n    void main() {\n      ${l} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${d});\n\n       ${r.getGlsl(e.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${h}), 0, 0, 0);\n     }\n   `;
            return Object.assign(Object.assign({}, A), {
              hasMain: true,
              output: {
                dims: t.dims,
                type: t.type,
                textureType: o.TextureType.unpacked
              },
              shaderSource: f
            });
          };
          _exports.createUnpackProgramInfoLoader = (e, n) => Object.assign(Object.assign({}, A), {
            get: () => _exports.createUnpackProgramInfo(e, n)
          });
        },
        7862: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.parseUnsqueezeAttributes = _exports.unsqueezeV13 = _exports.unsqueeze = undefined;
          const r = _require(7273);
          _exports.unsqueeze = (e, t, n) => {
            o(t);
            const s = r.ShapeUtil.unsqueezeShape(t[0].dims, n);
            return [e.reshapeUnpacked(t[0], s)];
          };
          _exports.unsqueezeV13 = (e, n) => {
            s(n);
            return _exports.unsqueeze(e, [n[0]], Array.from(n[1].integerData));
          };
          _exports.parseUnsqueezeAttributes = e => e.attributes.getInts('axes');
          const o = e => {
            if (!e || e.length !== 1) {
              throw new Error('Unsqueeze requires 1 input.');
            }
            if (e[0].type === 'string') {
              throw new Error('invalid input tensor types.');
            }
          };
          const s = e => {
            if (!e || e.length !== 2) {
              throw new Error('Unsqueeze requires 2 inputs.');
            }
            if (e[1].type !== 'int32') {
              throw new Error('Invalid input type.');
            }
          };
        },
        3980: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.scalesValidation = _exports.validateInputs = _exports.parseUpsampleAttributes = _exports.parseUpsampleAttributesV9 = _exports.parseUpsampleAttributesV7 = _exports.upsample = undefined;
          const r = _require(4910);
          const o = _require(6757);
          const s = _require(5639);
          const a = {
            name: 'Upsample',
            inputNames: ['X'],
            inputTypes: [s.TextureType.unpacked]
          };
          _exports.upsample = (e, n, r) => {
            _exports.validateInputs(n, r);
            return [e.run(Object.assign(Object.assign({}, a), {
              cacheHint: r.cacheKey,
              get: () => A(e, n, r)
            }), n)];
          };
          _exports.parseUpsampleAttributesV7 = e => _exports.parseUpsampleAttributes(e, 7);
          _exports.parseUpsampleAttributesV9 = e => _exports.parseUpsampleAttributes(e, 9);
          _exports.parseUpsampleAttributes = (e, n) => {
            const o = n >= 10;
            const s = e.attributes.getString('mode', 'nearest');
            if (s !== 'nearest' && s !== 'linear' && (n < 11 || s !== 'cubic')) {
              throw new Error(`unrecognized mode: ${s}`);
            }
            let a = [];
            if (n < 9) {
              a = e.attributes.getFloats('scales');
              _exports.scalesValidation(a, s, o);
            }
            const A = e.attributes.getFloat('extrapolation_value', 0);
            const c = n > 10 ? e.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';
            if (['asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'].indexOf(c) === -1) {
              throw new Error(`coordinate_transform_mode '${c}' is not supported`);
            }
            const u = c === 'tf_crop_and_resize';
            const l = u;
            const g = s === 'nearest' && n >= 11 ? e.attributes.getString('nearest_mode', 'round_prefer_floor') : '';
            if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(g) === -1) {
              throw new Error(`nearest_mode '${g}' is not supported`);
            }
            const d = e.attributes.getFloat('cubic_coeff_a', -0.75);
            const h = e.attributes.getInt('exclude_outside', 0) !== 0;
            if (h && s !== 'cubic') {
              throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');
            }
            const f = n < 11 || s === 'nearest' && c === 'asymmetric' && g === 'floor';
            let p = 0;
            let m = 0;
            let I = 0;
            if (n > 10) {
              if (e.inputs.length > 2) {
                p = 1;
                m = 2;
                I = 3;
              } else {
                m = 1;
                I = 2;
              }
            } else {
              if (n === 9) {
                m = 1;
              }
            }
            return r.createAttributeWithCacheKey({
              opset: n,
              isResize: o,
              mode: s,
              scales: a,
              extrapolationValue: A,
              coordinateTransformMode: c,
              useExtrapolation: l,
              needRoiInput: u,
              nearestMode: g,
              cubicCoefficientA: d,
              excludeOutside: h,
              useNearest2xOptimization: f,
              roiInputIdx: p,
              scalesInputIdx: m,
              sizesInputIdx: I
            });
          };
          const A = (e, t, n) => {
            const r = o.getGlsl(e.session.backend.glContext.version);
            const [A, c] = e.calculateTextureWidthAndHeight(t[0].dims, s.TextureType.unpacked);
            const u = t[0].dims.map((e, t) => Math.floor(e * n.scales[t]));
            const [l, g] = e.calculateTextureWidthAndHeight(u, s.TextureType.unpacked);
            const d = u.length;
            const h = new Array(d);
            const f = new Array(d);
            let p = `\n      int output_pitches[${d}];\n      int input_pitches[${d}];\n      `;
            for (let e = d - 1; e >= 0; e--) {
              h[e] = e === d - 1 ? 1 : h[e + 1] * u[e + 1];
              f[e] = e === d - 1 ? 1 : f[e + 1] * t[0].dims[e + 1];
              p += `\n        output_pitches[${e}] = ${h[e]};\n        input_pitches[${e}] = ${f[e]};\n        `;
            }
            const m = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${A}, ${c});\n        float value = getColorAsFloat(${r.texture2D}(X, coords));\n        return value;\n      }\n      `;
            const I = n.mode === 'nearest' ? `\n    ${m}\n    float process(int indices[${d}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${l}, ${g});\n\n      ${p}\n\n      int d, m;\n      for (int dim = 0; dim < ${d}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` : d === 4 ? `\n    ${m}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${l}, ${g});\n\n      ${p}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${t[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` : `\n    ${m}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${l}, ${g});\n\n      ${p}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${t[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;
            return Object.assign(Object.assign({}, a), {
              output: {
                dims: u,
                type: t[0].type,
                textureType: s.TextureType.unpacked
              },
              shaderSource: I,
              variables: [{
                name: 'scales',
                type: 'int',
                arrayLength: n.scales.length,
                data: n.scales.map(e => Math.ceil(e))
              }]
            });
          };
          _exports.validateInputs = (e, t) => {
            if (!e || t.opset < 9 && e.length !== 1 || t.opset >= 9 && t.opset < 11 && e.length !== 2 || t.opset >= 11 && e.length < 2) {
              throw new Error('invalid inputs.');
            }
            if (t.scales.length > 0 && e[0].dims.length !== t.scales.length) {
              throw new Error('Invalid input shape.');
            }
            if (e[0].type === 'string') {
              throw new Error('Invalid input tensor types.');
            }
          };
          _exports.scalesValidation = (e, t, n) => {
            if (n) {
              for (const t of e) {
                if (t <= 0) {
                  throw new Error('Scale value should be greater than 0.');
                }
              }
            } else {
              for (const t of e) {
                if (t < 1) {
                  throw new Error('Scale value should be greater than or equal to 1.');
                }
              }
            }
            if ((t === 'linear' || t === 'cubic') && e.length !== 2 && (e.length !== 4 || e[0] !== 1 || e[1] !== 1)) {
              throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n ? 'Resize' : 'Upsample'} opeartor.`);
            }
          };
        },
        2757: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.ProgramManager = undefined;
          const r = _require(6207);
          const o = _require(1315);
          const s = _require(8897);
          const a = _require(6757);
          _exports.ProgramManager = class {
            constructor(e, t, n) {
              this.profiler = e;
              this.glContext = t;
              this.textureLayoutStrategy = n;
              this.repo = new Map();
              this.attributesBound = false;
            }
            getArtifact(e) {
              return this.repo.get(e);
            }
            setArtifact(e, t) {
              this.repo.set(e, t);
            }
            run(e, t, n) {
              var r;
              this.profiler.event('op', `ProgramManager.run ${(r = e.programInfo.name) !== null && r !== undefined ? r : 'unknown kernel'}`, () => {
                var r;
                const s = this.glContext.gl;
                const a = e.program;
                s.useProgram(a);
                try {
                  this.bindOutput(n);
                  if (!this.attributesBound) {
                    this.bindAttributes(e.attribLocations);
                  }
                  this.bindUniforms(e.uniformLocations, (r = e.programInfo.variables) !== null && r !== undefined ? r : [], t);
                } catch (t) {
                  o.Logger.error('ProgramManager', e.programInfo.shaderSource);
                  throw t;
                }
                this.profiler.event('backend', 'GlContext.draw()', () => {
                  this.glContext.draw();
                });
              }, this.glContext);
            }
            dispose() {
              if (this.vertexShader) {
                this.glContext.deleteShader(this.vertexShader);
              }
              this.repo.forEach(e => this.glContext.deleteProgram(e.program));
            }
            build(e, t, n) {
              return this.profiler.event('backend', 'ProgramManager.build', () => {
                const r = new s.GlslPreprocessor(this.glContext, e, t, n);
                const o = r.preprocess();
                const a = this.compile(o);
                return {
                  programInfo: e,
                  program: a,
                  uniformLocations: this.getUniformLocations(a, r.context.programInfo.inputNames, r.context.programInfo.variables),
                  attribLocations: this.getAttribLocations(a)
                };
              });
            }
            compile(e) {
              if (!this.vertexShader) {
                o.Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');
                const e = a.getVertexShaderSource(this.glContext.version);
                this.vertexShader = this.glContext.compileShader(e, this.glContext.gl.VERTEX_SHADER);
              }
              if (r.env.debug) {
                o.Logger.verbose('ProrgramManager', `FragShader:\n${e}\n`);
              }
              const t = this.glContext.compileShader(e, this.glContext.gl.FRAGMENT_SHADER);
              const n = this.glContext.createProgram(this.vertexShader, t);
              this.glContext.deleteShader(t);
              return n;
            }
            bindOutput(e) {
              const t = e.width;
              const n = e.height;
              o.Logger.verbose('ProrgramManager', `Binding output texture to Framebuffer: w/h=${t}/${n}, shape=${e.shape}, type=${e.tensor.type}`);
              this.glContext.attachFramebuffer(e.texture, t, n);
            }
            bindAttributes(e) {
              const t = e.position;
              const n = e.textureCoord;
              this.glContext.setVertexAttributes(t, n);
              this.attributesBound = true;
            }
            bindUniforms(e, t, n) {
              var r;
              const o = this.glContext.gl;
              let s = 0;
              for (const {
                name: a,
                type: A,
                location: c,
                arrayLength: u
              } of e) {
                const e = (r = t.find(e => e.name === a)) === null || r === undefined ? undefined : r.data;
                if (A !== 'sampler2D' && !e) {
                  throw new Error(`variable '${a}' does not have data defined in program info`);
                }
                switch (A) {
                  case 'sampler2D':
                    this.bindTexture(n[s], c, s);
                    s++;
                    break;
                  case 'float':
                    if (u) {
                      o.uniform1fv(c, e);
                    } else {
                      o.uniform1f(c, e);
                    }
                    break;
                  case 'int':
                    if (u) {
                      o.uniform1iv(c, e);
                    } else {
                      o.uniform1i(c, e);
                    }
                    break;
                  default:
                    throw new Error(`Uniform not implemented: ${A}`);
                }
              }
            }
            bindTexture(e, t, n) {
              this.glContext.bindTextureToUniform(e.texture, n, t);
            }
            getAttribLocations(e) {
              return {
                position: this.getAttribLocation(e, 'position'),
                textureCoord: this.getAttribLocation(e, 'textureCoord')
              };
            }
            getUniformLocations(e, t, n) {
              const r = [];
              if (t) {
                for (const n of t) {
                  r.push({
                    name: n,
                    type: 'sampler2D',
                    location: this.getUniformLocation(e, n)
                  });
                }
              }
              if (n) {
                for (const t of n) {
                  r.push(Object.assign(Object.assign({}, t), {
                    location: this.getUniformLocation(e, t.name)
                  }));
                }
              }
              return r;
            }
            getUniformLocation(e, t) {
              const n = this.glContext.gl.getUniformLocation(e, t);
              if (n === null) {
                throw new Error(`Uniform ${t} not found.`);
              }
              return n;
            }
            getAttribLocation(e, t) {
              return this.glContext.gl.getAttribLocation(e, t);
            }
          };
        },
        2171: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.WebGLSessionHandler = undefined;
          const r = _require(1315);
          const o = _require(5881);
          const s = _require(7860);
          const a = _require(4110);
          const A = _require(2757);
          const c = _require(7618);
          const u = _require(5243);
          _exports.WebGLSessionHandler = class {
            constructor(e, t) {
              this.backend = e;
              this.context = t;
              this.layoutStrategy = new c.PreferLogicalStrategy(e.glContext.maxTextureSize);
              this.programManager = new A.ProgramManager(this.context.profiler, e.glContext, this.layoutStrategy);
              this.textureManager = new u.TextureManager(e.glContext, this.layoutStrategy, this.context.profiler, {
                reuseTextures: e.textureCacheMode === 'full'
              });
              this.packedTextureDataCache = new Map();
              this.unpackedTextureDataCache = new Map();
              this.pack = e.pack;
              this.pack2unpackMap = new Map();
              this.unpack2packMap = new Map();
            }
            createInferenceHandler() {
              return new s.WebGLInferenceHandler(this);
            }
            onGraphInitialized(e) {
              const t = e.getValues().filter(e => e.from === -1 && e.tensor).map(e => e.tensor.dataId);
              this.initializers = new Set(t);
            }
            isInitializer(e) {
              return !!this.initializers && this.initializers.has(e);
            }
            addInitializer(e) {
              this.initializers.add(e);
            }
            getTextureData(e, t) {
              if (t) {
                return this.packedTextureDataCache.get(e);
              } else {
                return this.unpackedTextureDataCache.get(e);
              }
            }
            setTextureData(e, t, n = false) {
              r.Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');
              if (n) {
                this.packedTextureDataCache.set(e, t);
              } else {
                this.unpackedTextureDataCache.set(e, t);
              }
            }
            dispose() {
              this.programManager.dispose();
              this.textureManager.clearActiveTextures();
              this.packedTextureDataCache.forEach(e => this.textureManager.releaseTexture(e, true));
              this.packedTextureDataCache = new Map();
              this.unpackedTextureDataCache.forEach(e => this.textureManager.releaseTexture(e, true));
              this.unpackedTextureDataCache = new Map();
            }
            resolve(e, t, n) {
              const r = o.resolveOperator(e, t, a.WEBGL_OP_RESOLVE_RULES);
              return {
                impl: r.opImpl,
                context: r.opInit ? r.opInit(e, n) : e
              };
            }
          };
        },
        9622: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Uint8DataEncoder = _exports.RGBAFloatDataEncoder = _exports.RedFloat32DataEncoder = undefined;
          const r = _require(1315);
          _exports.RedFloat32DataEncoder = class {
            constructor(e, t = 1) {
              if (t === 1) {
                this.internalFormat = e.R32F;
                this.format = e.RED;
                this.textureType = e.FLOAT;
                this.channelSize = t;
              } else {
                if (t !== 4) {
                  throw new Error(`Invalid number of channels: ${t}`);
                }
                this.internalFormat = e.RGBA32F;
                this.format = e.RGBA;
                this.textureType = e.FLOAT;
                this.channelSize = t;
              }
            }
            encode(e, t) {
              let n;
              let o;
              if (e.constructor !== Float32Array) {
                r.Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');
                o = new Float32Array(e);
              }
              if (t * this.channelSize > e.length) {
                r.Logger.warning('Encoder', 'Source data too small. Allocating larger array');
                o = e;
                n = this.allocate(t * this.channelSize);
                o.forEach((e, t) => n[t] = e);
              } else {
                o = e;
                n = o;
              }
              return n;
            }
            allocate(e) {
              return new Float32Array(e * 4);
            }
            decode(e, t) {
              if (this.channelSize === 1) {
                return e.filter((e, t) => t % 4 == 0).subarray(0, t);
              } else {
                return e.subarray(0, t);
              }
            }
          };
          _exports.RGBAFloatDataEncoder = class {
            constructor(e, t = 1, n) {
              if (t !== 1 && t !== 4) {
                throw new Error(`Invalid number of channels: ${t}`);
              }
              this.internalFormat = e.RGBA;
              this.format = e.RGBA;
              this.channelSize = t;
              this.textureType = n || e.FLOAT;
            }
            encode(e, t) {
              let n = e;
              if (this.channelSize === 1) {
                r.Logger.verbose('Encoder', 'Exploding into a larger array');
                n = this.allocate(t);
                e.forEach((e, t) => n[t * 4] = e);
              }
              return n;
            }
            allocate(e) {
              return new Float32Array(e * 4);
            }
            decode(e, t) {
              if (this.channelSize === 1) {
                return e.filter((e, t) => t % 4 == 0).subarray(0, t);
              } else {
                return e.subarray(0, t);
              }
            }
          };
          _exports.Uint8DataEncoder = class {
            constructor(e, t = 1) {
              this.channelSize = 4;
              if (t === 1) {
                this.internalFormat = e.ALPHA;
                this.format = e.ALPHA;
                this.textureType = e.UNSIGNED_BYTE;
                this.channelSize = t;
              } else {
                if (t !== 4) {
                  throw new Error(`Invalid number of channels: ${t}`);
                }
                this.internalFormat = e.RGBA;
                this.format = e.RGBA;
                this.textureType = e.UNSIGNED_BYTE;
                this.channelSize = t;
              }
            }
            encode(e, t) {
              return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
            }
            allocate(e) {
              return new Uint8Array(e * this.channelSize);
            }
            decode(e, t) {
              if (e instanceof Uint8Array) {
                return e.subarray(0, t);
              }
              throw new Error(`Invalid array type: ${e.constructor}`);
            }
          };
        },
        7618: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.getBatchDim = _exports.sizeToSquarishShape = _exports.getRowsCols = _exports.sizeFromShape = _exports.isInt = _exports.parseAxisParam = _exports.squeezeShape = _exports.PreferLogicalStrategy = _exports.AlwaysKeepOriginalSizeStrategy = undefined;
          const r = _require(1315);
          const o = _require(7273);
          function s(e, t) {
            const n = [];
            const r = [];
            const o = t != null && Array.isArray(t) && t.length === 0;
            const s = t == null || o ? null : a(t, e).sort();
            let A = 0;
            for (let t = 0; t < e.length; ++t) {
              if (s != null) {
                if (s[A] === t && e[t] !== 1) {
                  throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);
                }
                if ((s[A] == null || s[A] > t) && e[t] === 1) {
                  n.push(e[t]);
                  r.push(t);
                }
                if (s[A] <= t) {
                  A++;
                }
              }
              if (e[t] !== 1) {
                n.push(e[t]);
                r.push(t);
              }
            }
            return {
              newShape: n,
              keptDims: r
            };
          }
          function a(e, t) {
            const n = t.length;
            e = e == null ? t.map((e, t) => t) : [].concat(e);
            o.assert(e.every(e => e >= -n && e < n), () => `All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`);
            o.assert(e.every(A), () => `All values in axis param must be integers but got axis ${e}`);
            return e.map(e => e < 0 ? n + e : e);
          }
          function A(e) {
            return e % 1 == 0;
          }
          function c(e) {
            if (e.length === 0) {
              return 1;
            }
            let t = e[0];
            for (let n = 1; n < e.length; n++) {
              t *= e[n];
            }
            return t;
          }
          function u(e) {
            const t = Math.ceil(Math.sqrt(e));
            return [t, Math.ceil(e / t)];
          }
          _exports.AlwaysKeepOriginalSizeStrategy = class {
            constructor(e) {
              this.maxTextureSize = e;
            }
            computeTextureWH(e, t) {
              if (e.length === 0) {
                return [1, 1];
              }
              const n = this.maxTextureSize;
              if (t && t.breakAxis !== undefined) {
                const o = t.breakAxis >= e.length ? 1 : e.slice(t.breakAxis).reduce((e, t) => e * t);
                const s = t.breakAxis <= 0 ? 1 : e.slice(0, t.breakAxis).reduce((e, t) => e * t);
                if (!(o > n) && !(s > n)) {
                  return [o, s];
                }
                r.Logger.verbose('TextureLayout', `Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`);
              }
              const o = e.reduce((e, t) => e * t);
              let s = Math.floor(Math.sqrt(o));
              for (; s < n && s < o && o % s != 0; s++);
              if (s >= n || o % s != 0) {
                throw new Error(`The given dimensions are outside this GPU's boundaries: ${e}`);
              }
              return [s, o / s];
            }
          };
          _exports.PreferLogicalStrategy = class {
            constructor(e) {
              this.maxTextureSize = e;
            }
            computeTextureWH(e, t) {
              const n = this.computeTexture(e, t);
              if (t && t.isPacked) {
                n[0] /= 2;
                n[1] /= 2;
              }
              if (t && t.reverseWH) {
                return [n[1], n[0]];
              } else {
                return n;
              }
            }
            computeTexture(e, t) {
              const n = t && t.isPacked;
              if (e.length === 0) {
                if (n) {
                  return [2, 2];
                } else {
                  return [1, 1];
                }
              }
              let o = this.maxTextureSize;
              if (t && t.breakAxis !== undefined) {
                const n = t.breakAxis >= e.length ? 1 : e.slice(t.breakAxis).reduce((e, t) => e * t);
                const s = t.breakAxis <= 0 ? 1 : e.slice(0, t.breakAxis).reduce((e, t) => e * t);
                if (!(n > o) && !(s > o)) {
                  return [n, s];
                }
                r.Logger.verbose('TextureLayout', `Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`);
              }
              let a = e.slice(0);
              if (n) {
                o *= 2;
                a = a.map((e, t) => t >= a.length - 2 ? a[t] % 2 == 0 ? a[t] : a[t] + 1 : a[t]);
                if (a.length === 1) {
                  a = [2, a[0]];
                }
              }
              if (a.length !== 2) {
                const e = s(a);
                a = e.newShape;
              }
              const A = c(a);
              if (a.length <= 1 && A <= o) {
                return [1, A];
              } else {
                if (a.length === 2 && a[0] <= o && a[1] <= o) {
                  return a;
                } else {
                  if (a.length === 3 && a[0] * a[1] <= o && a[2] <= o) {
                    return [a[0] * a[1], a[2]];
                  } else {
                    if (a.length === 3 && a[0] <= o && a[1] * a[2] <= o) {
                      return [a[0], a[1] * a[2]];
                    } else {
                      if (a.length === 4 && a[0] * a[1] * a[2] <= o && a[3] <= o) {
                        return [a[0] * a[1] * a[2], a[3]];
                      } else {
                        if (a.length === 4 && a[0] <= o && a[1] * a[2] * a[3] <= o) {
                          return [a[0], a[1] * a[2] * a[3]];
                        } else {
                          if (n) {
                            return u(A / 4).map(e => e * 2);
                          } else {
                            return u(A);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          _exports.squeezeShape = s;
          _exports.parseAxisParam = a;
          _exports.isInt = A;
          _exports.sizeFromShape = c;
          _exports.getRowsCols = function (e) {
            if (e.length === 0) {
              throw Error('Cannot get rows and columns of an empty shape array.');
            }
            return [e.length > 1 ? e[e.length - 2] : 1, e[e.length - 1]];
          };
          _exports.sizeToSquarishShape = u;
          _exports.getBatchDim = function (e, t = 2) {
            return c(e.slice(0, e.length - t));
          };
        },
        3314: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createTextureLayoutFromShape = _exports.calculateTextureWidthAndHeight = _exports.createTextureLayoutFromTextureType = undefined;
          const r = _require(7273);
          const o = _require(5639);
          _exports.createTextureLayoutFromTextureType = (e, n, r) => {
            const s = r === o.TextureType.unpacked || r === o.TextureType.unpackedReversed ? 1 : 4;
            const a = r === o.TextureType.packed;
            const A = r === o.TextureType.unpackedReversed || r === o.TextureType.packed;
            const c = r === o.TextureType.packedLastDimension ? n.length - 1 : undefined;
            const u = r === o.TextureType.packedLastDimension ? n.map((e, t) => t === n.length - 1 ? e * 4 : e) : undefined;
            return _exports.createTextureLayoutFromShape(e, n, s, u, {
              isPacked: a,
              reverseWH: A,
              breakAxis: c
            });
          };
          _exports.calculateTextureWidthAndHeight = (e, n, r) => {
            const o = _exports.createTextureLayoutFromTextureType(e, n, r);
            return [o.width, o.height];
          };
          _exports.createTextureLayoutFromShape = (e, t, n = 1, o, s) => {
            const a = !!s && !!s.isPacked;
            const [A, c] = e.computeTextureWH(a && o || t, s);
            const u = t.length;
            let l = t.slice(0);
            if (u === 0) {
              l = [1];
            }
            if (n === 1) {
              o = t;
            } else {
              if (a) {
                if (n !== 4) {
                  throw new Error('a packed texture must be 4-channel');
                }
                o = t;
                if (u > 0) {
                  l[u - 1] = Math.ceil(l[u - 1] / 2);
                }
                if (u > 1) {
                  l[u - 2] = Math.ceil(l[u - 2] / 2);
                }
              } else {
                if (!o) {
                  throw new Error('Unpacked shape is needed when using channels > 1');
                }
              }
            }
            return {
              width: A,
              height: c,
              channels: n,
              isPacked: a,
              shape: l,
              strides: r.ShapeUtil.computeStrides(l),
              unpackedShape: o,
              reversedWH: s && s.reverseWH
            };
          };
        },
        5243: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.TextureManager = undefined;
          const r = _require(1315);
          _exports.TextureManager = class {
            constructor(e, t, n, r) {
              this.glContext = e;
              this.layoutStrategy = t;
              this.profiler = n;
              this.config = r;
              this.pendingRead = new Map();
              if (r.reuseTextures) {
                this.inUseTextures = new Map();
                this.idleTextures = new Map();
                this.textureLookup = new Map();
              }
            }
            createTextureFromLayout(e, t, n, o) {
              const s = this.toEncoderType(e);
              const a = this.glContext.getEncoder(s, t.channels || 1, o);
              if (t.isPacked && o === 1) {
                throw new Error('not implemented');
              }
              const A = t.width;
              const c = t.height;
              let u;
              let l;
              if (this.config.reuseTextures) {
                u = `${A}x${c}_${a.format}_${a.internalFormat}_${a.textureType}`;
                l = this.inUseTextures.get(u);
                if (!l) {
                  l = [];
                  this.inUseTextures.set(u, l);
                }
                const t = this.idleTextures.get(u);
                if (t && t.length > 0) {
                  const r = t.pop();
                  l.push(r);
                  if (o === 1) {
                    this.glContext.updateTexture(r, A, c, a, this.toTextureData(e, n));
                  }
                  return r;
                }
              }
              r.Logger.verbose('TextureManager', `Creating new texture of size ${t.width}x${t.height}`);
              const g = this.glContext.allocateTexture(A, c, a, this.toTextureData(e, n));
              if (this.config.reuseTextures) {
                l.push(g);
                this.textureLookup.set(g, u);
              }
              return g;
            }
            readTexture(e, t, n) {
              if (!n) {
                n = 1;
              }
              return this.profiler.event('backend', 'TextureManager.readTexture', () => {
                const r = e.shape.reduce((e, t) => e * t) * n;
                const o = this.glContext.readTexture(e.texture, e.width, e.height, r, this.toEncoderType(t), n);
                return this.toTensorData(t, o);
              });
            }
            async readTextureAsync(e, t, n) {
              const r = e.tensor.dataId;
              if (!n) {
                n = 1;
              }
              if (this.pendingRead.has(r)) {
                const e = this.pendingRead.get(r);
                return new Promise(t => e == null ? undefined : e.push(t));
              }
              return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {
                this.pendingRead.set(r, []);
                const o = e.shape.reduce((e, t) => e * t) * n;
                await this.glContext.createAndWaitForFence();
                const s = this.glContext.readTexture(e.texture, e.width, e.height, o, this.toEncoderType(t), n);
                const a = this.toTensorData(t, s);
                const A = this.pendingRead.get(r);
                this.pendingRead.delete(r);
                if (A != null) {
                  A.forEach(e => e(a));
                }
                return a;
              });
            }
            readUint8TextureAsFloat(e) {
              return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {
                const t = e.shape.reduce((e, t) => e * t);
                const n = this.glContext.readTexture(e.texture, e.width, e.height, t * 4, 'byte', 4);
                return new Float32Array(n.buffer, n.byteOffset, t);
              });
            }
            releaseTexture(e, t) {
              let n;
              if (this.config.reuseTextures && (n = this.textureLookup.get(e.texture), n)) {
                if (t) {
                  this.textureLookup.delete(n);
                }
                const r = this.inUseTextures.get(n);
                if (r) {
                  const t = r.indexOf(e.texture);
                  if (t !== -1) {
                    r.splice(t, 1);
                    let o = this.idleTextures.get(n);
                    if (!o) {
                      o = [];
                      this.idleTextures.set(n, o);
                    }
                    o.push(e.texture);
                  }
                }
              }
              if (!n || !!t) {
                r.Logger.verbose('TextureManager', `Deleting texture of size ${e.width}x${e.height}`);
                this.glContext.deleteTexture(e.texture);
              }
            }
            toTensorData(e, t) {
              switch (e) {
                case 'int16':
                  if (t instanceof Int16Array) {
                    return t;
                  } else {
                    return Int16Array.from(t);
                  }
                case 'int32':
                  if (t instanceof Int32Array) {
                    return t;
                  } else {
                    return Int32Array.from(t);
                  }
                case 'int8':
                  if (t instanceof Int8Array) {
                    return t;
                  } else {
                    return Int8Array.from(t);
                  }
                case 'uint16':
                  if (t instanceof Uint16Array) {
                    return t;
                  } else {
                    return Uint16Array.from(t);
                  }
                case 'uint32':
                  if (t instanceof Uint32Array) {
                    return t;
                  } else {
                    return Uint32Array.from(t);
                  }
                case 'uint8':
                case 'bool':
                  if (t instanceof Uint8Array) {
                    return t;
                  } else {
                    return Uint8Array.from(t);
                  }
                case 'float32':
                  if (t instanceof Float32Array) {
                    return t;
                  } else {
                    return Float32Array.from(t);
                  }
                case 'float64':
                  if (t instanceof Float64Array) {
                    return t;
                  } else {
                    return Float64Array.from(t);
                  }
                default:
                  throw new Error(`TensorData type ${e} is not supported`);
              }
            }
            toTextureData(e, t) {
              if (t) {
                if (t instanceof Float32Array) {
                  return t;
                } else {
                  return new Float32Array(t);
                }
              }
            }
            toEncoderType(e) {
              return 'float';
            }
            clearActiveTextures() {
              this.glContext.clearActiveTextures();
            }
          };
        },
        5639: (_module, _exports) => {
          "use strict";

          var n;
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.TextureType = undefined;
          (n = _exports.TextureType ||= {})[n.unpacked = 0] = 'unpacked';
          n[n.unpackedReversed = 1] = 'unpackedReversed';
          n[n.packed = 2] = 'packed';
          n[n.downloadUint8AsFloat = 3] = 'downloadUint8AsFloat';
          n[n.packedLastDimension = 4] = 'packedLastDimension';
        },
        432: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.getGlChannels = _exports.getCoordsDataType = _exports.getSqueezedParams = _exports.squeezeInputShape = _exports.generateShaderFuncNameFromInputSamplerNameAtOutCoords = _exports.generateShaderFuncNameFromInputSamplerName = _exports.repeatedTry = _exports.getPackedShape = undefined;
          const r = _require(7273);
          _exports.getPackedShape = function (e) {
            const t = e.length;
            return e.slice(0, t - 1).concat(e[t - 1] / 4);
          };
          _exports.repeatedTry = async function (e, t = e => 0, n) {
            return new Promise((r, o) => {
              let s = 0;
              const a = () => {
                if (e()) {
                  r();
                  return;
                }
                s++;
                const A = t(s);
                if (n != null && s >= n) {
                  o();
                } else {
                  setTimeout(a, A);
                }
              };
              a();
            });
          };
          _exports.generateShaderFuncNameFromInputSamplerName = function (e) {
            r.assert(e !== undefined && e.length !== 0, () => 'empty string found for sampler name');
            return `get${e.charAt(0).toUpperCase()}${e.slice(1)}`;
          };
          _exports.generateShaderFuncNameFromInputSamplerNameAtOutCoords = function (e) {
            r.assert(e !== undefined && e.length !== 0, () => 'empty string found for sampler name');
            return `get${e.charAt(0).toUpperCase()}${e.slice(1)}AtOutCoords`;
          };
          _exports.squeezeInputShape = function (e, t) {
            let n = JSON.parse(JSON.stringify(e));
            n = t;
            return n;
          };
          _exports.getSqueezedParams = function (e, t) {
            return t.map(t => e[t]).join(', ');
          };
          _exports.getCoordsDataType = function (e) {
            if (e <= 1) {
              return 'int';
            }
            if (e === 2) {
              return 'ivec2';
            }
            if (e === 3) {
              return 'ivec3';
            }
            if (e === 4) {
              return 'ivec4';
            }
            if (e === 5) {
              return 'ivec5';
            }
            if (e === 6) {
              return 'ivec6';
            }
            throw Error(`GPU for rank ${e} is not yet supported`);
          };
          _exports.getGlChannels = function (e = 6) {
            return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, e);
          };
        },
        3389: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.createNewWebGLContext = _exports.createWebGLContext = undefined;
          const r = _require(1315);
          const o = _require(3524);
          const s = {};
          function a(e, t) {
            let n;
            const s = {
              alpha: false,
              depth: false,
              antialias: false,
              stencil: false,
              preserveDrawingBuffer: false,
              premultipliedAlpha: false,
              failIfMajorPerformanceCaveat: false
            };
            if ((!t || t === 'webgl2') && (n = e.getContext('webgl2', s), n)) {
              try {
                return new o.WebGLContext(n, 2);
              } catch (e) {
                r.Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${e}`);
              }
            }
            if ((!t || t === 'webgl') && (n = e.getContext('webgl', s) || e.getContext('experimental-webgl', s), n)) {
              try {
                return new o.WebGLContext(n, 1);
              } catch (e) {
                r.Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${e}`);
              }
            }
            throw new Error('WebGL is not supported');
          }
          _exports.createWebGLContext = function e(t) {
            let n;
            if (t && t !== 'webgl2' || !('webgl2' in s)) {
              if ((!t || t === 'webgl') && !!('webgl' in s)) {
                n = s.webgl;
              }
            } else {
              n = s.webgl2;
            }
            if (!n) {
              try {
                n = a(function () {
                  if (typeof OffscreenCanvas == 'undefined') {
                    throw new TypeError('failed to create offscreen canvas: OffscreenCanvas is not supported');
                  }
                  return new OffscreenCanvas(1, 1);
                }(), t);
              } catch (e) {
                n = a(function () {
                  if (typeof document == 'undefined') {
                    throw new TypeError('failed to create canvas: document is not supported');
                  }
                  const e = document.createElement('canvas');
                  e.width = 1;
                  e.height = 1;
                  return e;
                }(), t);
              }
            }
            t = t || n.version === 1 ? 'webgl' : 'webgl2';
            const r = n.gl;
            s[t] = n;
            if (r.isContextLost()) {
              delete s[t];
              return e(t);
            } else {
              r.disable(r.DEPTH_TEST);
              r.disable(r.STENCIL_TEST);
              r.disable(r.BLEND);
              r.disable(r.DITHER);
              r.disable(r.POLYGON_OFFSET_FILL);
              r.disable(r.SAMPLE_COVERAGE);
              r.enable(r.SCISSOR_TEST);
              r.enable(r.CULL_FACE);
              r.cullFace(r.BACK);
              return n;
            }
          };
          _exports.createNewWebGLContext = a;
        },
        3524: function (_module, _exports, _require) {
          "use strict";

          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.WebGLContext = _exports.linearSearchLastTrue = undefined;
          const a = _require(6207);
          const A = __importStar(_require(9622));
          const c = _require(432);
          function u(e) {
            let t = 0;
            for (; t < e.length && e[t](); ++t);
            return t - 1;
          }
          _exports.linearSearchLastTrue = u;
          _exports.WebGLContext = class {
            constructor(e, t) {
              this.frameBufferBound = false;
              this.itemsToPoll = [];
              this.gl = e;
              this.version = t;
              this.getExtensions();
              this.vertexbuffer = this.createVertexbuffer();
              this.framebuffer = this.createFramebuffer();
              this.queryVitalParameters();
            }
            allocateTexture(e, t, n, r) {
              const o = this.gl;
              const s = o.createTexture();
              o.bindTexture(o.TEXTURE_2D, s);
              o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MIN_FILTER, o.NEAREST);
              o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MAG_FILTER, o.NEAREST);
              o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_S, o.CLAMP_TO_EDGE);
              o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_T, o.CLAMP_TO_EDGE);
              const a = r ? n.encode(r, e * t) : null;
              o.texImage2D(o.TEXTURE_2D, 0, n.internalFormat, e, t, 0, n.format, n.textureType, a);
              this.checkError();
              return s;
            }
            updateTexture(e, t, n, r, o) {
              const s = this.gl;
              s.bindTexture(s.TEXTURE_2D, e);
              const a = r.encode(o, t * n);
              s.texSubImage2D(s.TEXTURE_2D, 0, 0, 0, t, n, r.format, r.textureType, a);
              this.checkError();
            }
            attachFramebuffer(e, t, n) {
              const r = this.gl;
              r.bindTexture(r.TEXTURE_2D, e);
              r.bindFramebuffer(r.FRAMEBUFFER, this.framebuffer);
              r.framebufferTexture2D(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0, r.TEXTURE_2D, e, 0);
              this.checkError();
              r.viewport(0, 0, t, n);
              r.scissor(0, 0, t, n);
            }
            readTexture(e, t, n, r, o, s) {
              const a = this.gl;
              if (!s) {
                s = 1;
              }
              if (!this.frameBufferBound) {
                this.attachFramebuffer(e, t, n);
              }
              const A = this.getEncoder(o, s);
              const c = A.allocate(t * n);
              a.bindTexture(a.TEXTURE_2D, e);
              a.framebufferTexture2D(a.FRAMEBUFFER, a.COLOR_ATTACHMENT0, a.TEXTURE_2D, e, 0);
              a.readPixels(0, 0, t, n, a.RGBA, A.textureType, c);
              this.checkError();
              return A.decode(c, r);
            }
            isFramebufferReady() {
              return true;
            }
            getActiveTexture() {
              const e = this.gl;
              return `TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE) - e.TEXTURE0}`;
            }
            getTextureBinding() {
              return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);
            }
            getFramebufferBinding() {
              return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);
            }
            setVertexAttributes(e, t) {
              const n = this.gl;
              n.vertexAttribPointer(e, 3, n.FLOAT, false, 20, 0);
              n.enableVertexAttribArray(e);
              if (t !== -1) {
                n.vertexAttribPointer(t, 2, n.FLOAT, false, 20, 12);
                n.enableVertexAttribArray(t);
              }
              this.checkError();
            }
            createProgram(e, t) {
              const n = this.gl;
              const r = n.createProgram();
              n.attachShader(r, e);
              n.attachShader(r, t);
              n.linkProgram(r);
              return r;
            }
            compileShader(e, t) {
              const n = this.gl;
              const r = n.createShader(t);
              if (!r) {
                throw new Error(`createShader() returned null with type ${t}`);
              }
              n.shaderSource(r, e);
              n.compileShader(r);
              if (n.getShaderParameter(r, n.COMPILE_STATUS) === false) {
                throw new Error(`Failed to compile shader: ${n.getShaderInfoLog(r)}\nShader source:\n${e}`);
              }
              return r;
            }
            deleteShader(e) {
              this.gl.deleteShader(e);
            }
            bindTextureToUniform(e, t, n) {
              const r = this.gl;
              r.activeTexture(r.TEXTURE0 + t);
              this.checkError();
              r.bindTexture(r.TEXTURE_2D, e);
              this.checkError();
              r.uniform1i(n, t);
              this.checkError();
            }
            draw() {
              this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);
              this.checkError();
            }
            checkError() {
              if (a.env.debug) {
                const e = this.gl;
                const t = e.getError();
                let n = '';
                switch (t) {
                  case e.NO_ERROR:
                    return;
                  case e.INVALID_ENUM:
                    n = 'INVALID_ENUM';
                    break;
                  case e.INVALID_VALUE:
                    n = 'INVALID_VALUE';
                    break;
                  case e.INVALID_OPERATION:
                    n = 'INVALID_OPERATION';
                    break;
                  case e.INVALID_FRAMEBUFFER_OPERATION:
                    n = 'INVALID_FRAMEBUFFER_OPERATION';
                    break;
                  case e.OUT_OF_MEMORY:
                    n = 'OUT_OF_MEMORY';
                    break;
                  case e.CONTEXT_LOST_WEBGL:
                    n = 'CONTEXT_LOST_WEBGL';
                    break;
                  default:
                    n = `Unknown WebGL Error: ${t.toString(16)}`;
                }
                throw new Error(n);
              }
            }
            deleteTexture(e) {
              this.gl.deleteTexture(e);
            }
            deleteProgram(e) {
              this.gl.deleteProgram(e);
            }
            getEncoder(e, t, n = 0) {
              if (this.version === 2) {
                return new A.RedFloat32DataEncoder(this.gl, t);
              }
              switch (e) {
                case 'float':
                  if (n === 1 || this.isRenderFloat32Supported) {
                    return new A.RGBAFloatDataEncoder(this.gl, t);
                  } else {
                    return new A.RGBAFloatDataEncoder(this.gl, t, this.textureHalfFloatExtension.HALF_FLOAT_OES);
                  }
                case 'int':
                  throw new Error('not implemented');
                case 'byte':
                  return new A.Uint8DataEncoder(this.gl, t);
                default:
                  throw new Error(`Invalid dataType: ${e}`);
              }
            }
            clearActiveTextures() {
              const e = this.gl;
              for (let t = 0; t < this.maxTextureImageUnits; ++t) {
                e.activeTexture(e.TEXTURE0 + t);
                e.bindTexture(e.TEXTURE_2D, null);
              }
            }
            dispose() {
              if (this.disposed) {
                return;
              }
              const e = this.gl;
              e.bindFramebuffer(e.FRAMEBUFFER, null);
              e.deleteFramebuffer(this.framebuffer);
              e.bindBuffer(e.ARRAY_BUFFER, null);
              e.deleteBuffer(this.vertexbuffer);
              e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, null);
              e.finish();
              this.disposed = true;
            }
            createDefaultGeometry() {
              return new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);
            }
            createVertexbuffer() {
              const e = this.gl;
              const t = e.createBuffer();
              if (!t) {
                throw new Error('createBuffer() returned null');
              }
              const n = this.createDefaultGeometry();
              e.bindBuffer(e.ARRAY_BUFFER, t);
              e.bufferData(e.ARRAY_BUFFER, n, e.STATIC_DRAW);
              this.checkError();
              return t;
            }
            createFramebuffer() {
              const e = this.gl.createFramebuffer();
              if (!e) {
                throw new Error('createFramebuffer returned null');
              }
              return e;
            }
            queryVitalParameters() {
              const e = this.gl;
              this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();
              this.isRenderFloat32Supported = this.checkRenderFloat32();
              this.isFloat32DownloadSupported = this.checkFloat32Download();
              if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {
                throw new Error('both float32 and float16 TextureType are not supported');
              }
              this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();
              this.maxTextureSize = e.getParameter(e.MAX_TEXTURE_SIZE);
              this.maxTextureImageUnits = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);
              this.version;
            }
            getExtensions() {
              if (this.version === 2) {
                this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');
                this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');
              } else {
                this.textureFloatExtension = this.gl.getExtension('OES_texture_float');
                this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');
              }
            }
            checkFloatTextureAttachableToFrameBuffer() {
              const e = this.gl;
              const t = e.createTexture();
              e.bindTexture(e.TEXTURE_2D, t);
              const n = this.version === 2 ? e.RGBA32F : e.RGBA;
              e.texImage2D(e.TEXTURE_2D, 0, n, 1, 1, 0, e.RGBA, e.FLOAT, null);
              const r = e.createFramebuffer();
              e.bindFramebuffer(e.FRAMEBUFFER, r);
              e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t, 0);
              const o = e.checkFramebufferStatus(e.FRAMEBUFFER) === e.FRAMEBUFFER_COMPLETE;
              e.bindTexture(e.TEXTURE_2D, null);
              e.bindFramebuffer(e.FRAMEBUFFER, null);
              e.deleteTexture(t);
              e.deleteFramebuffer(r);
              return o;
            }
            checkRenderFloat32() {
              if (this.version === 2) {
                if (!this.colorBufferFloatExtension) {
                  return false;
                }
              } else {
                if (!this.textureFloatExtension) {
                  return false;
                }
              }
              return this.isFloatTextureAttachableToFrameBuffer;
            }
            checkFloat32Download() {
              if (this.version === 2) {
                if (!this.colorBufferFloatExtension) {
                  return false;
                }
              } else {
                if (!this.textureFloatExtension) {
                  return false;
                }
                if (!this.gl.getExtension('WEBGL_color_buffer_float')) {
                  return false;
                }
              }
              return this.isFloatTextureAttachableToFrameBuffer;
            }
            checkFloat32Blend() {
              const e = this.gl;
              let t;
              let n;
              let r;
              let o;
              let s;
              try {
                t = e.createTexture();
                n = e.createFramebuffer();
                e.bindTexture(e.TEXTURE_2D, t);
                const a = this.version === 2 ? e.RGBA32F : e.RGBA;
                e.texImage2D(e.TEXTURE_2D, 0, a, 1, 1, 0, e.RGBA, e.FLOAT, null);
                e.bindFramebuffer(e.FRAMEBUFFER, n);
                e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t, 0);
                e.enable(e.BLEND);
                r = e.createShader(e.VERTEX_SHADER);
                return !!r && (e.shaderSource(r, 'void main(){}'), e.compileShader(r), o = e.createShader(e.FRAGMENT_SHADER), !!o && (e.shaderSource(o, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}'), e.compileShader(o), s = e.createProgram(), !!s && (e.attachShader(s, r), e.attachShader(s, o), e.linkProgram(s), e.useProgram(s), e.drawArrays(e.POINTS, 0, 1), e.getError() === e.NO_ERROR)));
              } finally {
                e.disable(e.BLEND);
                if (s) {
                  e.deleteProgram(s);
                }
                if (r) {
                  e.deleteShader(r);
                }
                if (o) {
                  e.deleteShader(o);
                }
                if (n) {
                  e.bindFramebuffer(e.FRAMEBUFFER, null);
                  e.deleteFramebuffer(n);
                }
                if (t) {
                  e.bindTexture(e.TEXTURE_2D, null);
                  e.deleteTexture(t);
                }
              }
            }
            beginTimer() {
              if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {
                const e = this.gl;
                const t = this.disjointTimerQueryWebgl2Extension;
                const n = e.createQuery();
                e.beginQuery(t.TIME_ELAPSED_EXT, n);
                return n;
              }
              throw new Error('WebGL1 profiling currently not supported.');
            }
            endTimer() {
              if (this.version !== 2 || !this.disjointTimerQueryWebgl2Extension) {
                throw new Error('WebGL1 profiling currently not supported');
              }
              {
                const e = this.gl;
                const t = this.disjointTimerQueryWebgl2Extension;
                e.endQuery(t.TIME_ELAPSED_EXT);
              }
            }
            isTimerResultAvailable(e) {
              let t = false;
              let n = false;
              if (this.version !== 2 || !this.disjointTimerQueryWebgl2Extension) {
                throw new Error('WebGL1 profiling currently not supported');
              }
              {
                const r = this.gl;
                const o = this.disjointTimerQueryWebgl2Extension;
                t = r.getQueryParameter(e, r.QUERY_RESULT_AVAILABLE);
                n = r.getParameter(o.GPU_DISJOINT_EXT);
              }
              return t && !n;
            }
            getTimerResult(e) {
              let t = 0;
              if (this.version !== 2) {
                throw new Error('WebGL1 profiling currently not supported');
              }
              {
                const n = this.gl;
                t = n.getQueryParameter(e, n.QUERY_RESULT);
                n.deleteQuery(e);
              }
              return t / 1000000;
            }
            async waitForQueryAndGetTime(e) {
              await c.repeatedTry(() => this.isTimerResultAvailable(e));
              return this.getTimerResult(e);
            }
            async createAndWaitForFence() {
              const e = this.createFence(this.gl);
              return this.pollFence(e);
            }
            createFence(e) {
              let t;
              const n = e;
              const r = n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE, 0);
              e.flush();
              t = r === null ? () => true : () => {
                const e = n.clientWaitSync(r, 0, 0);
                return e === n.ALREADY_SIGNALED || e === n.CONDITION_SATISFIED;
              };
              return {
                query: r,
                isFencePassed: t
              };
            }
            async pollFence(e) {
              return new Promise(t => {
                this.addItemToPoll(() => e.isFencePassed(), () => t());
              });
            }
            pollItems() {
              const e = u(this.itemsToPoll.map(e => e.isDoneFn));
              for (let t = 0; t <= e; ++t) {
                const {
                  resolveFn: e
                } = this.itemsToPoll[t];
                e();
              }
              this.itemsToPoll = this.itemsToPoll.slice(e + 1);
            }
            async addItemToPoll(e, t) {
              this.itemsToPoll.push({
                isDoneFn: e,
                resolveFn: t
              });
              if (!(this.itemsToPoll.length > 1)) {
                await c.repeatedTry(() => {
                  this.pollItems();
                  return this.itemsToPoll.length === 0;
                });
              }
            }
          };
        },
        6496: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.ExecutionPlan = undefined;
          const r = _require(1315);
          class o {
            constructor(e, t) {
              this.op = e;
              this.node = t;
            }
          }
          _exports.ExecutionPlan = class {
            constructor(e, t, n) {
              this.graph = e;
              this.profiler = n;
              this.initialize(t);
            }
            initialize(e) {
              this.profiler.event('session', 'ExecutionPlan.initialize', () => {
                const t = this.graph.getNodes();
                if (t.length !== e.length) {
                  throw new Error('The size of nodes and OPs do not match.');
                }
                this._ops = e.map((e, n) => new o(e, t[n]));
                this.reset();
                this._starter = [];
                this._ops.forEach((e, t) => {
                  let n = true;
                  for (const t of e.node.inputs) {
                    if (!this._values[t] && this.graph.getInputIndices().indexOf(t) === -1) {
                      n = false;
                      break;
                    }
                  }
                  if (n) {
                    this._starter.push(t);
                  }
                });
              });
            }
            reset() {
              this._values = this.graph.getValues().map(e => e.tensor);
            }
            async execute(e, t) {
              return this.profiler.event('session', 'ExecutionPlan.execute', async () => {
                this.reset();
                const n = e.createInferenceHandler();
                const o = this.graph.getInputIndices();
                if (t.length !== o.length) {
                  throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${t.length} expected: ${o.length}`);
                }
                t.forEach((e, t) => {
                  const n = o[t];
                  this._values[n] = e;
                });
                const s = this._starter.slice(0);
                const a = this.graph.getValues();
                const A = this.graph.getNodes();
                let c = 0;
                while (c < s.length) {
                  const e = s[c++];
                  const t = this._ops[e];
                  const o = t.node.inputs.map(e => this._values[e]);
                  if (o.indexOf(undefined) !== -1) {
                    throw new Error(`unresolved input detected: op: ${t.node}`);
                  }
                  const u = o;
                  r.Logger.verbose('ExecPlan', `Runing op:${t.node.name} (${u.map((e, n) => `'${t.node.inputs[n]}': ${e.type}[${e.dims.join(',')}]`).join(', ')})`);
                  const l = await this.profiler.event('node', t.node.name, async () => t.op.impl(n, u, t.op.context));
                  if (l.length !== t.node.outputs.length) {
                    throw new Error('the size of output does not match model definition.');
                  }
                  l.forEach((e, n) => {
                    const r = t.node.outputs[n];
                    if (this._values[r]) {
                      throw new Error(`output [${r}] already has value: op:${t.node.name}`);
                    }
                    this._values[r] = e;
                  });
                  const g = new Set();
                  l.forEach((e, n) => {
                    const r = t.node.outputs[n];
                    for (const e of a[r].to) {
                      const t = A[e];
                      let n = true;
                      for (const e of t.inputs) {
                        if (!this._values[e]) {
                          n = false;
                          break;
                        }
                      }
                      if (n) {
                        g.add(e);
                      }
                    }
                  });
                  s.push(...g);
                }
                const u = [];
                for (let e = 0; e < this.graph.getOutputIndices().length; e++) {
                  const t = this.graph.getOutputIndices()[e];
                  const n = this._values[t];
                  if (n === undefined) {
                    throw new Error(`required output [${t}] does not have value`);
                  }
                  if (t === 0) {
                    await n.getData();
                  } else {
                    n.data;
                  }
                  u.push(n);
                }
                r.Logger.verbose('ExecPlan', 'disposing of inferenceHandler');
                n.dispose();
                return u;
              });
            }
          };
        },
        4662: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Graph = undefined;
          const r = _require(6874);
          const o = _require(5127);
          const s = _require(2446);
          const a = _require(9240);
          const A = _require(7273);
          var c = o.onnxruntime.experimental.fbs;
          _exports.Graph = {
            from: (e, t) => new g(e, t)
          };
          class u {
            constructor(e) {
              this._from = undefined;
              this._to = [];
              this.tensor = undefined;
              this.type = undefined;
              if (e) {
                this.type = A.ProtoUtil.tensorValueTypeFromProto(e.type.tensorType);
              }
            }
            get from() {
              return this._from;
            }
            get to() {
              return this._to;
            }
          }
          class l {
            constructor(e, t) {
              if (e instanceof s.onnx.NodeProto) {
                this.name = e.name;
                this.opType = e.opType;
                this.attributes = new r.Attribute(e.attribute);
              } else {
                if (e instanceof c.Node) {
                  this.name = t ?? e.name();
                  this.opType = e.opType();
                  this.attributes = new r.Attribute(A.ProtoUtil.tensorAttributesFromORTFormat(e));
                }
              }
              this.inputs = [];
              this.outputs = [];
              this.executeNode = true;
            }
          }
          class g {
            constructor(e, t) {
              if (!e) {
                throw new TypeError('graph is empty');
              }
              this.buildGraph(e);
              this.transformGraph(t);
              this.checkIsAcyclic();
            }
            getInputIndices() {
              return this._allInputIndices;
            }
            getInputNames() {
              return this._allInputNames;
            }
            getOutputIndices() {
              return this._allOutputIndices;
            }
            getOutputNames() {
              return this._allOutputNames;
            }
            getValues() {
              return this._allData;
            }
            getNodes() {
              return this._nodes;
            }
            buildGraph(e) {
              if (e instanceof s.onnx.GraphProto) {
                this.buildGraphFromOnnxFormat(e);
              } else {
                if (!(e instanceof c.Graph)) {
                  throw new TypeError('Graph type is not supported.');
                }
                this.buildGraphFromOrtFormat(e);
              }
            }
            buildGraphFromOnnxFormat(e) {
              const t = new Map();
              this._allData = [];
              this._allInputIndices = [];
              this._allInputNames = [];
              this._allOutputIndices = [];
              this._allOutputNames = [];
              this._nodes = [];
              const n = new Map();
              if (!e.input) {
                throw new Error('missing information in graph: input');
              }
              const r = [];
              for (const n of e.input) {
                if (t.has(n.name)) {
                  throw new Error(`duplicated input name: ${n.name}`);
                }
                const e = this._allData.push(new u(n)) - 1;
                t.set(n.name, e);
                r.push(n.name);
              }
              if (!e.initializer) {
                throw new Error('missing information in graph: initializer');
              }
              for (const n of e.initializer) {
                let e = t.get(n.name);
                if (e === undefined) {
                  const r = new u();
                  r.type = {
                    shape: {
                      dims: A.ProtoUtil.tensorDimsFromProto(n.dims)
                    },
                    tensorType: A.ProtoUtil.tensorDataTypeFromProto(n.dataType)
                  };
                  e = this._allData.push(r) - 1;
                  t.set(n.name, e);
                }
                this._allData[e]._from = -1;
                this._allData[e].tensor = a.Tensor.fromProto(n);
              }
              for (let e = 0; e < this._allData.length; e++) {
                if (!this._allData[e].tensor) {
                  this._allInputIndices.push(e);
                  this._allInputNames.push(r[e]);
                }
              }
              if (!e.output) {
                throw new Error('missing information in graph: output');
              }
              for (const n of e.output) {
                if (t.has(n.name)) {
                  throw new Error(`duplicated output name: ${n.name}`);
                }
                const e = this._allData.push(new u(n)) - 1;
                t.set(n.name, e);
                this._allOutputIndices.push(e);
                this._allOutputNames.push(n.name);
              }
              if (!e.node) {
                throw new Error('missing information in graph: node');
              }
              for (const t of e.node) {
                if (!t.name) {
                  for (let e = 0;; e++) {
                    const r = `unnamed_${t.opType}_${e}`;
                    if (!n.has(r)) {
                      t.name = r;
                      break;
                    }
                  }
                }
                if (n.has(t.name)) {
                  throw new Error(`duplicated node name: ${t.name}`);
                }
                const e = this._nodes.push(new l(t)) - 1;
                n.set(t.name, e);
              }
              for (let n = 0; n < this._nodes.length; n++) {
                const r = this._nodes[n];
                const o = e.node[n];
                if (!o.output) {
                  throw new Error(`missing output for node: ${o.name}`);
                }
                for (const e of o.output) {
                  let s = t.get(e);
                  if (s === undefined) {
                    s = this._allData.push(new u()) - 1;
                    t.set(e, s);
                  }
                  r.outputs.push(s);
                  if (this._allData[s]._from !== undefined) {
                    throw new Error(`multiple nodes output to one data value: ${s}`);
                  }
                  this._allData[s]._from = n;
                  if (o.opType === 'Constant') {
                    if (!o.attribute || o.attribute.length !== 1 || !o.attribute[0].t) {
                      throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');
                    }
                    if (!o.output || o.output.length !== 1) {
                      throw new Error('missing output or incorrect number of outputs for this Constant operator');
                    }
                    r.outputs.pop();
                    r.executeNode = false;
                    this._allData[s]._from = -1;
                    this._allData[s].tensor = a.Tensor.fromProto(o.attribute[0].t);
                  }
                }
              }
              for (let n = 0; n < this._nodes.length; n++) {
                const r = this._nodes[n];
                const o = e.node[n];
                if (!o.input) {
                  throw new Error(`missing input for node: ${o.name}`);
                }
                for (const e of o.input) {
                  const s = t.get(e);
                  if (s === undefined) {
                    if (e === '' && (o.input.length === 3 || o.input.length === 4) && o.opType === 'Resize') {
                      continue;
                    }
                    throw new Error(`unrecognized input '${e}' for node: ${o.name}`);
                  }
                  r.inputs.push(s);
                  this._allData[s]._to.push(n);
                }
              }
              return true;
            }
            buildGraphFromOrtFormat(e) {
              var t;
              var n;
              var r;
              const o = new Map();
              this._allData = [];
              this._allInputIndices = [];
              this._allInputNames = [];
              this._allOutputIndices = [];
              this._allOutputNames = [];
              this._nodes = [];
              const s = new Map();
              const g = [];
              for (let s = 0; s < e.inputsLength(); s++) {
                const a = e.inputs(s);
                if (o.has(a)) {
                  throw new Error(`duplicated input name: ${a}`);
                }
                for (let s = 0; s < e.nodeArgsLength(); s++) {
                  if (((t = e.nodeArgs(s)) === null || t === undefined ? undefined : t.name()) === a) {
                    const t = new u();
                    if (((r = (n = e.nodeArgs(s)) === null || n === undefined ? undefined : n.type()) === null || r === undefined ? undefined : r.valueType()) !== c.TypeInfoValue.tensor_type) {
                      throw new Error('Unexpected value type for the nodeArg.');
                    }
                    const l = e.nodeArgs(s).type().value(new c.TensorTypeAndShape());
                    const d = A.ProtoUtil.tensorDataTypeFromProto(l.elemType());
                    const h = l.shape();
                    const f = [];
                    for (let e = 0; e < h.dimLength(); e++) {
                      f.push(A.LongUtil.longToNumber(h.dim(e).value().dimValue()));
                    }
                    t.type = {
                      shape: {
                        dims: f
                      },
                      tensorType: d
                    };
                    const p = this._allData.push(t) - 1;
                    o.set(a, p);
                    g.push(a);
                  }
                }
              }
              for (let t = 0; t < e.initializersLength(); t++) {
                const n = e.initializers(t);
                let r = o.get(n.name());
                if (r === undefined) {
                  const e = new u();
                  const t = A.ProtoUtil.tensorDimsFromORTFormat(n);
                  const s = A.ProtoUtil.tensorDataTypeFromProto(n.dataType());
                  e.type = {
                    shape: {
                      dims: t
                    },
                    tensorType: s
                  };
                  r = this._allData.push(e) - 1;
                  o.set(n.name(), r);
                }
                this._allData[r]._from = -1;
                this._allData[r].tensor = a.Tensor.fromOrtTensor(n);
              }
              for (let e = 0; e < this._allData.length; e++) {
                if (!this._allData[e].tensor) {
                  this._allInputIndices.push(e);
                  this._allInputNames.push(g[e]);
                }
              }
              for (let t = 0; t < e.outputsLength(); t++) {
                const n = e.outputs(t);
                if (o.has(n)) {
                  throw new Error(`duplicated output name: ${n}`);
                }
                const r = this._allData.push(new u()) - 1;
                o.set(n, r);
                this._allOutputIndices.push(r);
                this._allOutputNames.push(n);
              }
              if (!e.nodes) {
                throw new Error('missing information in graph: node');
              }
              for (let t = 0; t < e.nodesLength(); t++) {
                const n = e.nodes(t);
                let r = n.name();
                if (!r) {
                  for (let e = 0; r = `unnamed_${n.opType()}_${e}`, s.has(r); e++);
                }
                if (s.has(r)) {
                  throw new Error(`duplicated node name: ${r}`);
                }
                const o = this._nodes.push(new l(n, r)) - 1;
                s.set(r, o);
              }
              for (let t = 0; t < this._nodes.length; t++) {
                const n = this._nodes[t];
                const r = e.nodes(t);
                if (r == null) {
                  throw new Error(`No node exists at index ${t}`);
                }
                if ((r == null ? undefined : r.outputsLength()) === 0) {
                  throw new Error(`missing output for node: ${r.name}`);
                }
                for (let e = 0; e < (r == null ? undefined : r.outputsLength()); e++) {
                  const s = r == null ? undefined : r.outputs(e);
                  let A = o.get(s);
                  if (A === undefined) {
                    A = this._allData.push(new u()) - 1;
                    o.set(s, A);
                  }
                  n.outputs.push(A);
                  if (this._allData[A]._from !== undefined) {
                    throw new Error(`multiple nodes output to one data value: ${A}`);
                  }
                  this._allData[A]._from = t;
                  if (r.opType() === 'Constant') {
                    if (r.attributesLength() !== 1 || !r.attributes(0).t()) {
                      throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');
                    }
                    if (r.outputsLength() !== 1) {
                      throw new Error('missing output or incorrect number of outputs for this Constant operator');
                    }
                    n.outputs.pop();
                    n.executeNode = false;
                    this._allData[A]._from = -1;
                    this._allData[A].tensor = a.Tensor.fromOrtTensor(r.attributes(0).t());
                  }
                }
              }
              for (let t = 0; t < this._nodes.length; t++) {
                const n = this._nodes[t];
                const r = e.nodes(t);
                if (r.inputsLength() === 0) {
                  throw new Error(`missing input for node: ${r.name}`);
                }
                for (let e = 0; e < r.inputsLength(); e++) {
                  const s = r.inputs(e);
                  const a = o.get(s);
                  if (a === undefined) {
                    throw new Error(`unrecognized input '${s}' for node: ${r.name()}`);
                  }
                  n.inputs.push(a);
                  this._allData[a]._to.push(t);
                }
              }
            }
            checkIsAcyclic() {
              const e = new Set();
              this._allInputIndices.forEach(t => {
                this._allData[t]._to.forEach(t => {
                  e.add(t);
                });
              });
              const t = Array.from(e);
              const n = new Array(this._nodes.length).fill('white');
              while (t.length > 0) {
                const e = t.pop();
                if (n[e] === 'gray') {
                  n[e] = 'black';
                } else {
                  t.push(e);
                  n[e] = 'gray';
                  this._nodes[e].outputs.forEach(r => {
                    const o = this._allData[r];
                    if (o.tensor !== undefined) {
                      throw new Error('node outputs should not be initialized');
                    }
                    if (o._from !== e) {
                      throw new Error('from property of the Value object doesn\'t match index of Node being processed');
                    }
                    o._to.forEach(e => {
                      if (n[e] === 'gray') {
                        throw new Error('model graph is cyclic');
                      }
                      if (n[e] === 'white') {
                        t.push(e);
                      }
                    });
                  });
                }
              }
            }
            transformGraph(e) {
              this.removeAllIdentityNodes();
              this.removeAllDropoutNodes();
              this.fuseConvActivationNodes();
              if (e) {
                e.transformGraph(this);
              }
              this.finalizeGraph();
            }
            finalizeGraph() {
              let e = 0;
              const t = new Array(this._nodes.length, 0);
              let n = 0;
              for (let e = 0; e < this._nodes.length; e++) {
                t[e] = n;
                if (this._nodes[e].executeNode) {
                  if (n !== e) {
                    this._nodes[n] = this._nodes[e];
                  }
                  n++;
                } else {
                  this._nodes[e].outputs.forEach(e => {
                    this._allData[e]._from = -2;
                  });
                }
              }
              this._nodes.splice(n, this._nodes.length - n);
              for (let e = 0; e < this._allData.length; e++) {
                const n = this._allData[e];
                if (n._from !== undefined && n._from !== -1 && n._from !== -2) {
                  n._from = t[n._from];
                }
                for (let e = 0; e < n._to.length; e++) {
                  if (!(n._to[e] >= 0)) {
                    throw new Error('Trying to update a removed node');
                  }
                  n._to[e] = t[n._to[e]];
                }
              }
              e = 0;
              for (let t = 0; t < this._allData.length; t++) {
                if (this._allData[t].from !== -2 || this._allOutputIndices.indexOf(t + e) !== -1) {
                  if (e > 0) {
                    let n = -1;
                    if (this._allData[t].from !== undefined && this._allData[t].from !== -1) {
                      n = this._nodes[this._allData[t].from].outputs.indexOf(t + e);
                      if (n !== -1) {
                        this._nodes[this._allData[t].from].outputs[n] = t;
                      }
                    } else {
                      n = this._allInputIndices.indexOf(t + e);
                      if (n !== -1) {
                        this._allInputIndices[n] = t;
                      }
                    }
                    this._allData[t].to.forEach(r => {
                      n = this._nodes[r].inputs.indexOf(t + e);
                      if (n !== -1) {
                        this._nodes[r].inputs[n] = t;
                      }
                    });
                    if (this._allData[t].to.length === 0) {
                      n = this._allOutputIndices.indexOf(t + e);
                      if (n !== -1) {
                        this._allOutputIndices[n] = t;
                      }
                    }
                  }
                } else {
                  e++;
                  this._allData.splice(t, 1);
                  t--;
                }
              }
            }
            deleteNode(e) {
              const t = this._nodes[e];
              if (t.outputs.length > 1) {
                for (let e = 1; e < t.outputs.length; e++) {
                  if (this._allData[t.outputs[e]].to.length > 0) {
                    throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');
                  }
                }
              }
              t.executeNode = false;
              const n = t.inputs[0];
              const r = t.outputs[0];
              const o = this._allData[r].to;
              for (let n = 0; n < t.inputs.length; n++) {
                const r = this._allData[t.inputs[n]].to.indexOf(e);
                if (r === -1) {
                  throw new Error('The Value object doesn\'t have the current Node in it\'s \'to\' property ');
                }
                this._allData[t.inputs[n]].to.splice(r, 1);
              }
              this._allData[r]._to = [];
              const s = this._allOutputIndices.indexOf(r);
              if (s !== -1) {
                this._allOutputIndices[s] = n;
              }
              if (o && o.length > 0) {
                for (const e of o) {
                  const t = this._nodes[e].inputs.indexOf(r);
                  if (t === -1) {
                    throw new Error('The Node object doesn\'t have the output Value in it\'s \'inputs\' property ');
                  }
                  this._nodes[e].inputs[t] = n;
                  this._allData[n].to.push(e);
                }
              }
            }
            removeAllDropoutNodes() {
              let e = 0;
              for (const t of this._nodes) {
                if (t.opType === 'Dropout') {
                  if (t.inputs.length !== 1) {
                    throw new Error('Dropout nodes should only contain one input. ');
                  }
                  if (t.outputs.length !== 1 && t.outputs.length !== 2) {
                    throw new Error('Dropout nodes should contain either 1 or 2 output(s)');
                  }
                  if (t.outputs.length === 2 && this._allData[t.outputs[1]]._to.length !== 0) {
                    throw new Error('Dropout nodes\'s second output should not be referenced by other nodes');
                  }
                  this.deleteNode(e);
                }
                e++;
              }
            }
            removeAllIdentityNodes() {
              let e = 0;
              for (const t of this._nodes) {
                if (t.opType === 'Identity') {
                  this.deleteNode(e);
                }
                e++;
              }
            }
            isActivation(e) {
              switch (e.opType) {
                case 'Relu':
                case 'Sigmoid':
                case 'Clip':
                  return true;
                default:
                  return false;
              }
            }
            fuseConvActivationNodes() {
              for (const e of this._nodes) {
                if (e.opType === 'Conv') {
                  const t = this._allData[e.outputs[0]]._to;
                  if (t.length === 1 && this.isActivation(this._nodes[t[0]])) {
                    const n = this._nodes[t[0]];
                    if (n.opType === 'Clip') {
                      if (n.inputs.length === 1) {
                        try {
                          e.attributes.set('activation_params', 'floats', [n.attributes.getFloat('min'), n.attributes.getFloat('max')]);
                        } catch (t) {
                          e.attributes.set('activation_params', 'floats', [A.MIN_CLIP, A.MAX_CLIP]);
                        }
                      } else {
                        if (!(n.inputs.length >= 3) || this._allData[n.inputs[1]].tensor === undefined || this._allData[n.inputs[2]].tensor === undefined) {
                          continue;
                        }
                        e.attributes.set('activation_params', 'floats', [this._allData[n.inputs[1]].tensor.floatData[0], this._allData[n.inputs[2]].tensor.floatData[0]]);
                      }
                    }
                    e.attributes.set('activation', 'string', n.opType);
                    this.deleteNode(t[0]);
                  }
                }
              }
            }
          }
        },
        1315: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.now = _exports.Profiler = _exports.Logger = undefined;
          const n = {
            verbose: 1000,
            info: 2000,
            warning: 4000,
            error: 5000,
            fatal: 6000
          };
          const r = {
            none: new class {
              log(e, t, n) {}
            }(),
            console: new class {
              log(e, t, n) {
                console.log(`${this.color(e)} ${n ? `[35m${n}[0m ` : ''}${t}`);
              }
              color(e) {
                switch (e) {
                  case 'verbose':
                    return '[34;40mv[0m';
                  case 'info':
                    return '[32mi[0m';
                  case 'warning':
                    return '[30;43mw[0m';
                  case 'error':
                    return '[31;40me[0m';
                  case 'fatal':
                    return '[101mf[0m';
                  default:
                    throw new Error(`unsupported severity: ${e}`);
                }
              }
            }()
          };
          const o = {
            provider: 'console',
            minimalSeverity: 'warning',
            logDateTime: true,
            logSourceLocation: false
          };
          let s = {
            '': o
          };
          function a(e, t, n, r) {
            if (t === undefined) {
              o = e;
              return {
                verbose: a.verbose.bind(null, o),
                info: a.info.bind(null, o),
                warning: a.warning.bind(null, o),
                error: a.error.bind(null, o),
                fatal: a.fatal.bind(null, o)
              };
            }
            if (n === undefined) {
              A(e, t);
            } else {
              if (typeof n == 'number' && r === undefined) {
                A(e, t);
              } else {
                if (typeof n == 'string' && r === undefined) {
                  A(e, n, 0, t);
                } else {
                  if (typeof n != 'string' || typeof r != 'number') {
                    throw new TypeError('input is valid');
                  }
                  A(e, n, 0, t);
                }
              }
            }
            var o;
          }
          function A(e, t, o, a) {
            const A = s[a || ''] || s[''];
            if (!(n[e] < n[A.minimalSeverity])) {
              if (A.logDateTime) {
                t = `${new Date().toISOString()}|${t}`;
              }
              A.logSourceLocation;
              r[A.provider].log(e, t, a);
            }
          }
          (function (e) {
            function t(e) {
              s = {};
              n('', e || {});
            }
            function n(e, n) {
              if (e === '*') {
                t(n);
              } else {
                const t = s[e] || o;
                s[e] = {
                  provider: n.provider || t.provider,
                  minimalSeverity: n.minimalSeverity || t.minimalSeverity,
                  logDateTime: n.logDateTime === undefined ? t.logDateTime : n.logDateTime,
                  logSourceLocation: n.logSourceLocation === undefined ? t.logSourceLocation : n.logSourceLocation
                };
              }
            }
            e.verbose = function (t, n) {
              e('verbose', t, n);
            };
            e.info = function (t, n) {
              e('info', t, n);
            };
            e.warning = function (t, n) {
              e('warning', t, n);
            };
            e.error = function (t, n) {
              e('error', t, n);
            };
            e.fatal = function (t, n) {
              e('fatal', t, n);
            };
            e.reset = t;
            e.set = n;
            e.setWithEnv = function (e) {
              const t = {};
              if (e.logLevel) {
                t.minimalSeverity = e.logLevel;
              }
              n('', t);
            };
          })(a ||= {});
          _exports.Logger = a;
          class c {
            constructor(e, t, n, r, o, s) {
              this.category = e;
              this.name = t;
              this.startTime = n;
              this.endCallback = r;
              this.timer = o;
              this.ctx = s;
            }
            async end() {
              return this.endCallback(this);
            }
            async checkTimer() {
              if (this.ctx === undefined || this.timer === undefined) {
                throw new Error('No webgl timer found');
              }
              this.ctx.endTimer();
              return this.ctx.waitForQueryAndGetTime(this.timer);
            }
          }
          class u {
            constructor(e, t, n, r) {
              this.category = e;
              this.name = t;
              this.startTime = n;
              this.endTime = r;
            }
          }
          _exports.Profiler = class {
            static create(e) {
              if (e === undefined) {
                return new this();
              } else {
                return new this(e.maxNumberEvents, e.flushBatchSize, e.flushIntervalInMilliseconds);
              }
            }
            constructor(e, t, n) {
              this._started = false;
              this._flushPointer = 0;
              this._started = false;
              this._maxNumberEvents = e === undefined ? 10000 : e;
              this._flushBatchSize = t === undefined ? 10 : t;
              this._flushIntervalInMilliseconds = n === undefined ? 5000 : n;
            }
            start() {
              this._started = true;
              this._timingEvents = [];
              this._flushTime = _exports.now();
              this._flushPointer = 0;
            }
            stop() {
              for (this._started = false; this._flushPointer < this._timingEvents.length; this._flushPointer++) {
                this.logOneEvent(this._timingEvents[this._flushPointer]);
              }
            }
            event(e, t, n, r) {
              const o = this._started ? this.begin(e, t, r) : undefined;
              let s = false;
              const a = n();
              if (a && typeof a.then == 'function') {
                s = true;
                return new Promise((e, t) => {
                  a.then(async t => {
                    if (o) {
                      await o.end();
                    }
                    e(t);
                  }, async e => {
                    if (o) {
                      await o.end();
                    }
                    t(e);
                  });
                });
              }
              if (!s && o) {
                const e = o.end();
                if (e && typeof e.then == 'function') {
                  return new Promise((t, n) => {
                    e.then(() => {
                      t(a);
                    }, e => {
                      n(e);
                    });
                  });
                }
              }
              return a;
            }
            begin(e, n, r) {
              if (!this._started) {
                throw new Error('profiler is not started yet');
              }
              if (r === undefined) {
                const r = _exports.now();
                this.flush(r);
                return new c(e, n, r, e => this.endSync(e));
              }
              {
                const t = r.beginTimer();
                return new c(e, n, 0, async e => this.end(e), t, r);
              }
            }
            async end(e) {
              const t = await e.checkTimer();
              if (this._timingEvents.length < this._maxNumberEvents) {
                this._timingEvents.push(new u(e.category, e.name, e.startTime, t));
                this.flush(t);
              }
            }
            endSync(e) {
              const n = _exports.now();
              if (this._timingEvents.length < this._maxNumberEvents) {
                this._timingEvents.push(new u(e.category, e.name, e.startTime, n));
                this.flush(n);
              }
            }
            logOneEvent(e) {
              _exports.Logger.verbose(`Profiler.${e.category}`, `${(e.endTime - e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`);
            }
            flush(e) {
              if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize || e - this._flushTime >= this._flushIntervalInMilliseconds) {
                for (const e = this._flushPointer; this._flushPointer < e + this._flushBatchSize && this._flushPointer < this._timingEvents.length; this._flushPointer++) {
                  this.logOneEvent(this._timingEvents[this._flushPointer]);
                }
                this._flushTime = _exports.now();
              }
            }
            get started() {
              return this._started;
            }
          };
          _exports.now = typeof performance != 'undefined' && performance.now ? () => performance.now() : Date.now;
        },
        1745: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Model = undefined;
          const r = _require(5686);
          const o = _require(4662);
          const s = _require(5127);
          const a = _require(2446);
          const A = _require(7273);
          var c = s.onnxruntime.experimental.fbs;
          _exports.Model = class {
            constructor() {}
            load(e, t, n) {
              if (!n) {
                try {
                  this.loadFromOnnxFormat(e, t);
                  return;
                } catch (e) {
                  if (n !== undefined) {
                    throw e;
                  }
                }
              }
              this.loadFromOrtFormat(e, t);
            }
            loadFromOnnxFormat(e, t) {
              const n = a.onnx.ModelProto.decode(e);
              if (A.LongUtil.longToNumber(n.irVersion) < 3) {
                throw new Error('only support ONNX model with IR_VERSION>=3');
              }
              this._opsets = n.opsetImport.map(e => ({
                domain: e.domain,
                version: A.LongUtil.longToNumber(e.version)
              }));
              this._graph = o.Graph.from(n.graph, t);
            }
            loadFromOrtFormat(e, t) {
              const n = new r.flatbuffers.ByteBuffer(e);
              const s = c.InferenceSession.getRootAsInferenceSession(n).model();
              if (A.LongUtil.longToNumber(s.irVersion()) < 3) {
                throw new Error('only support ONNX model with IR_VERSION>=3');
              }
              this._opsets = [];
              for (let e = 0; e < s.opsetImportLength(); e++) {
                const t = s.opsetImport(e);
                this._opsets.push({
                  domain: t == null ? undefined : t.domain(),
                  version: A.LongUtil.longToNumber(t.version())
                });
              }
              this._graph = o.Graph.from(s.graph(), t);
            }
            get graph() {
              return this._graph;
            }
            get opsets() {
              return this._opsets;
            }
          };
        },
        6145: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.FLOAT_TYPES = _exports.INT_TYPES = _exports.NUMBER_TYPES = undefined;
          _exports.NUMBER_TYPES = ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];
          _exports.INT_TYPES = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];
          _exports.FLOAT_TYPES = ['float32', 'float64'];
        },
        5881: (_module, _exports) => {
          "use strict";

          function n(e, t) {
            if (t.endsWith('+')) {
              const n = Number.parseInt(t.substring(0, t.length - 1), 10);
              return !isNaN(n) && n <= e;
            }
            if (t.split('-').length === 2) {
              const n = t.split('-');
              const r = Number.parseInt(n[0], 10);
              const o = Number.parseInt(n[1], 10);
              return !isNaN(r) && !isNaN(o) && r <= e && e <= o;
            }
            return Number.parseInt(t, 10) === e;
          }
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.resolveOperator = undefined;
          _exports.resolveOperator = function (e, t, r) {
            for (const o of r) {
              const r = o[0];
              const s = o[1];
              const a = o[2];
              const A = o[3];
              const c = o[4];
              if (e.opType === r) {
                for (const e of t) {
                  if ((e.domain === s || e.domain === 'ai.onnx' && s === '') && n(e.version, a)) {
                    return {
                      opImpl: A,
                      opInit: c
                    };
                  }
                }
              }
            }
            throw new TypeError(`cannot resolve operator '${e.opType}' with opsets: ${t.map(e => `${e.domain || 'ai.onnx'} v${e.version}`).join(', ')}`);
          };
        },
        5127: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.onnxruntime = undefined;
          const r = _require(5686);
          (function (e) {
            let t;
            (function (e) {
              e[e.UNDEFINED = 0] = 'UNDEFINED';
              e[e.FLOAT = 1] = 'FLOAT';
              e[e.INT = 2] = 'INT';
              e[e.STRING = 3] = 'STRING';
              e[e.TENSOR = 4] = 'TENSOR';
              e[e.GRAPH = 5] = 'GRAPH';
              e[e.FLOATS = 6] = 'FLOATS';
              e[e.INTS = 7] = 'INTS';
              e[e.STRINGS = 8] = 'STRINGS';
              e[e.TENSORS = 9] = 'TENSORS';
              e[e.GRAPHS = 10] = 'GRAPHS';
              e[e.SPARSE_TENSOR = 11] = 'SPARSE_TENSOR';
              e[e.SPARSE_TENSORS = 12] = 'SPARSE_TENSORS';
            })(t = e.AttributeType ||= {});
          })(((_exports.onnxruntime ||= {}).experimental ||= {}).fbs ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                let t;
                (function (e) {
                  e[e.UNKNOWN = 0] = 'UNKNOWN';
                  e[e.VALUE = 1] = 'VALUE';
                  e[e.PARAM = 2] = 'PARAM';
                })(t = e.DimensionValueType ||= {});
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                let t;
                (function (e) {
                  e[e.UNDEFINED = 0] = 'UNDEFINED';
                  e[e.FLOAT = 1] = 'FLOAT';
                  e[e.UINT8 = 2] = 'UINT8';
                  e[e.INT8 = 3] = 'INT8';
                  e[e.UINT16 = 4] = 'UINT16';
                  e[e.INT16 = 5] = 'INT16';
                  e[e.INT32 = 6] = 'INT32';
                  e[e.INT64 = 7] = 'INT64';
                  e[e.STRING = 8] = 'STRING';
                  e[e.BOOL = 9] = 'BOOL';
                  e[e.FLOAT16 = 10] = 'FLOAT16';
                  e[e.DOUBLE = 11] = 'DOUBLE';
                  e[e.UINT32 = 12] = 'UINT32';
                  e[e.UINT64 = 13] = 'UINT64';
                  e[e.COMPLEX64 = 14] = 'COMPLEX64';
                  e[e.COMPLEX128 = 15] = 'COMPLEX128';
                  e[e.BFLOAT16 = 16] = 'BFLOAT16';
                  e[e.FLOAT8E4M3FN = 17] = 'FLOAT8E4M3FN';
                  e[e.FLOAT8E4M3FNUZ = 18] = 'FLOAT8E4M3FNUZ';
                  e[e.FLOAT8E5M2 = 19] = 'FLOAT8E5M2';
                  e[e.FLOAT8E5M2FNUZ = 20] = 'FLOAT8E5M2FNUZ';
                })(t = e.TensorDataType ||= {});
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                let t;
                (function (e) {
                  e[e.Primitive = 0] = 'Primitive';
                  e[e.Fused = 1] = 'Fused';
                })(t = e.NodeType ||= {});
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                let t;
                (function (e) {
                  e[e.NONE = 0] = 'NONE';
                  e[e.tensor_type = 1] = 'tensor_type';
                  e[e.sequence_type = 2] = 'sequence_type';
                  e[e.map_type = 3] = 'map_type';
                })(t = e.TypeInfoValue ||= {});
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsShape(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsShape(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  dim(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 4);
                    if (r) {
                      return (n || new e.experimental.fbs.Dimension()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  dimLength() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startShape(e) {
                    e.startObject(1);
                  }
                  static addDim(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static createDimVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startDimVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endShape(e) {
                    return e.endObject();
                  }
                  static createShape(e, t) {
                    n.startShape(e);
                    n.addDim(e, t);
                    return n.endShape(e);
                  }
                }
                t.Shape = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsDimension(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsDimension(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  value(t) {
                    let n = this.bb.__offset(this.bb_pos, 4);
                    if (n) {
                      return (t || new e.experimental.fbs.DimensionValue()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  denotation(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  static startDimension(e) {
                    e.startObject(2);
                  }
                  static addValue(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addDenotation(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static endDimension(e) {
                    return e.endObject();
                  }
                  static createDimension(e, t, r) {
                    n.startDimension(e);
                    n.addValue(e, t);
                    n.addDenotation(e, r);
                    return n.endDimension(e);
                  }
                }
                t.Dimension = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsDimensionValue(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsDimensionValue(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  dimType() {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.readInt8(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.DimensionValueType.UNKNOWN;
                    }
                  }
                  dimValue() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.readInt64(this.bb_pos + e);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  dimParam(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  static startDimensionValue(e) {
                    e.startObject(3);
                  }
                  static addDimType(t, n) {
                    t.addFieldInt8(0, n, e.experimental.fbs.DimensionValueType.UNKNOWN);
                  }
                  static addDimValue(e, t) {
                    e.addFieldInt64(1, t, e.createLong(0, 0));
                  }
                  static addDimParam(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static endDimensionValue(e) {
                    return e.endObject();
                  }
                  static createDimensionValue(e, t, r, o) {
                    n.startDimensionValue(e);
                    n.addDimType(e, t);
                    n.addDimValue(e, r);
                    n.addDimParam(e, o);
                    return n.endDimensionValue(e);
                  }
                }
                t.DimensionValue = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsTensorTypeAndShape(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsTensorTypeAndShape(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  elemType() {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.readInt32(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.TensorDataType.UNDEFINED;
                    }
                  }
                  shape(t) {
                    let n = this.bb.__offset(this.bb_pos, 6);
                    if (n) {
                      return (t || new e.experimental.fbs.Shape()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startTensorTypeAndShape(e) {
                    e.startObject(2);
                  }
                  static addElemType(t, n) {
                    t.addFieldInt32(0, n, e.experimental.fbs.TensorDataType.UNDEFINED);
                  }
                  static addShape(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static endTensorTypeAndShape(e) {
                    return e.endObject();
                  }
                  static createTensorTypeAndShape(e, t, r) {
                    n.startTensorTypeAndShape(e);
                    n.addElemType(e, t);
                    n.addShape(e, r);
                    return n.endTensorTypeAndShape(e);
                  }
                }
                t.TensorTypeAndShape = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsMapType(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsMapType(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  keyType() {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.readInt32(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.TensorDataType.UNDEFINED;
                    }
                  }
                  valueType(t) {
                    let n = this.bb.__offset(this.bb_pos, 6);
                    if (n) {
                      return (t || new e.experimental.fbs.TypeInfo()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startMapType(e) {
                    e.startObject(2);
                  }
                  static addKeyType(t, n) {
                    t.addFieldInt32(0, n, e.experimental.fbs.TensorDataType.UNDEFINED);
                  }
                  static addValueType(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static endMapType(e) {
                    return e.endObject();
                  }
                  static createMapType(e, t, r) {
                    n.startMapType(e);
                    n.addKeyType(e, t);
                    n.addValueType(e, r);
                    return n.endMapType(e);
                  }
                }
                t.MapType = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsSequenceType(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsSequenceType(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  elemType(t) {
                    let n = this.bb.__offset(this.bb_pos, 4);
                    if (n) {
                      return (t || new e.experimental.fbs.TypeInfo()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startSequenceType(e) {
                    e.startObject(1);
                  }
                  static addElemType(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static endSequenceType(e) {
                    return e.endObject();
                  }
                  static createSequenceType(e, t) {
                    n.startSequenceType(e);
                    n.addElemType(e, t);
                    return n.endSequenceType(e);
                  }
                }
                t.SequenceType = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (e.fbs ||= {}).EdgeEnd = class {
                constructor() {
                  this.bb = null;
                  this.bb_pos = 0;
                }
                __init(e, t) {
                  this.bb_pos = e;
                  this.bb = t;
                  return this;
                }
                nodeIndex() {
                  return this.bb.readUint32(this.bb_pos);
                }
                srcArgIndex() {
                  return this.bb.readInt32(this.bb_pos + 4);
                }
                dstArgIndex() {
                  return this.bb.readInt32(this.bb_pos + 8);
                }
                static createEdgeEnd(e, t, n, r) {
                  e.prep(4, 12);
                  e.writeInt32(r);
                  e.writeInt32(n);
                  e.writeInt32(t);
                  return e.offset();
                }
              };
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsNodeEdge(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsNodeEdge(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  nodeIndex() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return this.bb.readUint32(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  inputEdges(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 6);
                    if (r) {
                      return (n || new e.experimental.fbs.EdgeEnd()).__init(this.bb.__vector(this.bb_pos + r) + t * 12, this.bb);
                    } else {
                      return null;
                    }
                  }
                  inputEdgesLength() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  outputEdges(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 8);
                    if (r) {
                      return (n || new e.experimental.fbs.EdgeEnd()).__init(this.bb.__vector(this.bb_pos + r) + t * 12, this.bb);
                    } else {
                      return null;
                    }
                  }
                  outputEdgesLength() {
                    let e = this.bb.__offset(this.bb_pos, 8);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startNodeEdge(e) {
                    e.startObject(3);
                  }
                  static addNodeIndex(e, t) {
                    e.addFieldInt32(0, t, 0);
                  }
                  static addInputEdges(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static startInputEdgesVector(e, t) {
                    e.startVector(12, t, 4);
                  }
                  static addOutputEdges(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static startOutputEdgesVector(e, t) {
                    e.startVector(12, t, 4);
                  }
                  static endNodeEdge(e) {
                    return e.endObject();
                  }
                  static createNodeEdge(e, t, r, o) {
                    n.startNodeEdge(e);
                    n.addNodeIndex(e, t);
                    n.addInputEdges(e, r);
                    n.addOutputEdges(e, o);
                    return n.endNodeEdge(e);
                  }
                }
                t.NodeEdge = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsNode(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsNode(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  name(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  docString(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  domain(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  sinceVersion() {
                    let e = this.bb.__offset(this.bb_pos, 10);
                    if (e) {
                      return this.bb.readInt32(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  index() {
                    let e = this.bb.__offset(this.bb_pos, 12);
                    if (e) {
                      return this.bb.readUint32(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  opType(e) {
                    let t = this.bb.__offset(this.bb_pos, 14);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  type() {
                    let t = this.bb.__offset(this.bb_pos, 16);
                    if (t) {
                      return this.bb.readInt32(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.NodeType.Primitive;
                    }
                  }
                  executionProviderType(e) {
                    let t = this.bb.__offset(this.bb_pos, 18);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  inputs(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 20);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  inputsLength() {
                    let e = this.bb.__offset(this.bb_pos, 20);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  outputs(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 22);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  outputsLength() {
                    let e = this.bb.__offset(this.bb_pos, 22);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  attributes(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 24);
                    if (r) {
                      return (n || new e.experimental.fbs.Attribute()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  attributesLength() {
                    let e = this.bb.__offset(this.bb_pos, 24);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  inputArgCounts(e) {
                    let t = this.bb.__offset(this.bb_pos, 26);
                    if (t) {
                      return this.bb.readInt32(this.bb.__vector(this.bb_pos + t) + e * 4);
                    } else {
                      return 0;
                    }
                  }
                  inputArgCountsLength() {
                    let e = this.bb.__offset(this.bb_pos, 26);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  inputArgCountsArray() {
                    let e = this.bb.__offset(this.bb_pos, 26);
                    if (e) {
                      return new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + e), this.bb.__vector_len(this.bb_pos + e));
                    } else {
                      return null;
                    }
                  }
                  implicitInputs(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 28);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  implicitInputsLength() {
                    let e = this.bb.__offset(this.bb_pos, 28);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startNode(e) {
                    e.startObject(13);
                  }
                  static addName(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addDocString(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addDomain(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static addSinceVersion(e, t) {
                    e.addFieldInt32(3, t, 0);
                  }
                  static addIndex(e, t) {
                    e.addFieldInt32(4, t, 0);
                  }
                  static addOpType(e, t) {
                    e.addFieldOffset(5, t, 0);
                  }
                  static addType(t, n) {
                    t.addFieldInt32(6, n, e.experimental.fbs.NodeType.Primitive);
                  }
                  static addExecutionProviderType(e, t) {
                    e.addFieldOffset(7, t, 0);
                  }
                  static addInputs(e, t) {
                    e.addFieldOffset(8, t, 0);
                  }
                  static createInputsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startInputsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addOutputs(e, t) {
                    e.addFieldOffset(9, t, 0);
                  }
                  static createOutputsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startOutputsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addAttributes(e, t) {
                    e.addFieldOffset(10, t, 0);
                  }
                  static createAttributesVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startAttributesVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addInputArgCounts(e, t) {
                    e.addFieldOffset(11, t, 0);
                  }
                  static createInputArgCountsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt32(t[n]);
                    }
                    return e.endVector();
                  }
                  static startInputArgCountsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addImplicitInputs(e, t) {
                    e.addFieldOffset(12, t, 0);
                  }
                  static createImplicitInputsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startImplicitInputsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endNode(e) {
                    return e.endObject();
                  }
                  static createNode(e, t, r, o, s, a, A, c, u, l, g, d, h, f) {
                    n.startNode(e);
                    n.addName(e, t);
                    n.addDocString(e, r);
                    n.addDomain(e, o);
                    n.addSinceVersion(e, s);
                    n.addIndex(e, a);
                    n.addOpType(e, A);
                    n.addType(e, c);
                    n.addExecutionProviderType(e, u);
                    n.addInputs(e, l);
                    n.addOutputs(e, g);
                    n.addAttributes(e, d);
                    n.addInputArgCounts(e, h);
                    n.addImplicitInputs(e, f);
                    return n.endNode(e);
                  }
                }
                t.Node = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsValueInfo(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsValueInfo(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  name(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  docString(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  type(t) {
                    let n = this.bb.__offset(this.bb_pos, 8);
                    if (n) {
                      return (t || new e.experimental.fbs.TypeInfo()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startValueInfo(e) {
                    e.startObject(3);
                  }
                  static addName(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addDocString(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addType(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static endValueInfo(e) {
                    return e.endObject();
                  }
                  static createValueInfo(e, t, r, o) {
                    n.startValueInfo(e);
                    n.addName(e, t);
                    n.addDocString(e, r);
                    n.addType(e, o);
                    return n.endValueInfo(e);
                  }
                }
                t.ValueInfo = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsTypeInfo(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsTypeInfo(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  denotation(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  valueType() {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.readUint8(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.TypeInfoValue.NONE;
                    }
                  }
                  value(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.__union(e, this.bb_pos + t);
                    } else {
                      return null;
                    }
                  }
                  static startTypeInfo(e) {
                    e.startObject(3);
                  }
                  static addDenotation(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addValueType(t, n) {
                    t.addFieldInt8(1, n, e.experimental.fbs.TypeInfoValue.NONE);
                  }
                  static addValue(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static endTypeInfo(e) {
                    return e.endObject();
                  }
                  static createTypeInfo(e, t, r, o) {
                    n.startTypeInfo(e);
                    n.addDenotation(e, t);
                    n.addValueType(e, r);
                    n.addValue(e, o);
                    return n.endTypeInfo(e);
                  }
                }
                t.TypeInfo = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                class t {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsOperatorSetId(e, n) {
                    return (n || new t()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsOperatorSetId(e, n) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (n || new t()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  domain(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  version() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.readInt64(this.bb_pos + e);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  static startOperatorSetId(e) {
                    e.startObject(2);
                  }
                  static addDomain(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addVersion(e, t) {
                    e.addFieldInt64(1, t, e.createLong(0, 0));
                  }
                  static endOperatorSetId(e) {
                    return e.endObject();
                  }
                  static createOperatorSetId(e, n, r) {
                    t.startOperatorSetId(e);
                    t.addDomain(e, n);
                    t.addVersion(e, r);
                    return t.endOperatorSetId(e);
                  }
                }
                e.OperatorSetId = t;
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsTensor(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsTensor(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  name(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  docString(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  dims(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.readInt64(this.bb.__vector(this.bb_pos + t) + e * 8);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  dimsLength() {
                    let e = this.bb.__offset(this.bb_pos, 8);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  dataType() {
                    let t = this.bb.__offset(this.bb_pos, 10);
                    if (t) {
                      return this.bb.readInt32(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.TensorDataType.UNDEFINED;
                    }
                  }
                  rawData(e) {
                    let t = this.bb.__offset(this.bb_pos, 12);
                    if (t) {
                      return this.bb.readUint8(this.bb.__vector(this.bb_pos + t) + e);
                    } else {
                      return 0;
                    }
                  }
                  rawDataLength() {
                    let e = this.bb.__offset(this.bb_pos, 12);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  rawDataArray() {
                    let e = this.bb.__offset(this.bb_pos, 12);
                    if (e) {
                      return new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + e), this.bb.__vector_len(this.bb_pos + e));
                    } else {
                      return null;
                    }
                  }
                  stringData(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 14);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  stringDataLength() {
                    let e = this.bb.__offset(this.bb_pos, 14);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startTensor(e) {
                    e.startObject(6);
                  }
                  static addName(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addDocString(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addDims(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static createDimsVector(e, t) {
                    e.startVector(8, t.length, 8);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt64(t[n]);
                    }
                    return e.endVector();
                  }
                  static startDimsVector(e, t) {
                    e.startVector(8, t, 8);
                  }
                  static addDataType(t, n) {
                    t.addFieldInt32(3, n, e.experimental.fbs.TensorDataType.UNDEFINED);
                  }
                  static addRawData(e, t) {
                    e.addFieldOffset(4, t, 0);
                  }
                  static createRawDataVector(e, t) {
                    e.startVector(1, t.length, 1);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt8(t[n]);
                    }
                    return e.endVector();
                  }
                  static startRawDataVector(e, t) {
                    e.startVector(1, t, 1);
                  }
                  static addStringData(e, t) {
                    e.addFieldOffset(5, t, 0);
                  }
                  static createStringDataVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startStringDataVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endTensor(e) {
                    return e.endObject();
                  }
                  static createTensor(e, t, r, o, s, a, A) {
                    n.startTensor(e);
                    n.addName(e, t);
                    n.addDocString(e, r);
                    n.addDims(e, o);
                    n.addDataType(e, s);
                    n.addRawData(e, a);
                    n.addStringData(e, A);
                    return n.endTensor(e);
                  }
                }
                t.Tensor = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsSparseTensor(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsSparseTensor(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  values(t) {
                    let n = this.bb.__offset(this.bb_pos, 4);
                    if (n) {
                      return (t || new e.experimental.fbs.Tensor()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  indices(t) {
                    let n = this.bb.__offset(this.bb_pos, 6);
                    if (n) {
                      return (t || new e.experimental.fbs.Tensor()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  dims(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.readInt64(this.bb.__vector(this.bb_pos + t) + e * 8);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  dimsLength() {
                    let e = this.bb.__offset(this.bb_pos, 8);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startSparseTensor(e) {
                    e.startObject(3);
                  }
                  static addValues(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addIndices(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addDims(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static createDimsVector(e, t) {
                    e.startVector(8, t.length, 8);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt64(t[n]);
                    }
                    return e.endVector();
                  }
                  static startDimsVector(e, t) {
                    e.startVector(8, t, 8);
                  }
                  static endSparseTensor(e) {
                    return e.endObject();
                  }
                  static createSparseTensor(e, t, r, o) {
                    n.startSparseTensor(e);
                    n.addValues(e, t);
                    n.addIndices(e, r);
                    n.addDims(e, o);
                    return n.endSparseTensor(e);
                  }
                }
                t.SparseTensor = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsAttribute(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsAttribute(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  name(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  docString(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  type() {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.readInt32(this.bb_pos + t);
                    } else {
                      return e.experimental.fbs.AttributeType.UNDEFINED;
                    }
                  }
                  f() {
                    let e = this.bb.__offset(this.bb_pos, 10);
                    if (e) {
                      return this.bb.readFloat32(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  i() {
                    let e = this.bb.__offset(this.bb_pos, 12);
                    if (e) {
                      return this.bb.readInt64(this.bb_pos + e);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  s(e) {
                    let t = this.bb.__offset(this.bb_pos, 14);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  t(t) {
                    let n = this.bb.__offset(this.bb_pos, 16);
                    if (n) {
                      return (t || new e.experimental.fbs.Tensor()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  g(t) {
                    let n = this.bb.__offset(this.bb_pos, 18);
                    if (n) {
                      return (t || new e.experimental.fbs.Graph()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  floats(e) {
                    let t = this.bb.__offset(this.bb_pos, 20);
                    if (t) {
                      return this.bb.readFloat32(this.bb.__vector(this.bb_pos + t) + e * 4);
                    } else {
                      return 0;
                    }
                  }
                  floatsLength() {
                    let e = this.bb.__offset(this.bb_pos, 20);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  floatsArray() {
                    let e = this.bb.__offset(this.bb_pos, 20);
                    if (e) {
                      return new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + e), this.bb.__vector_len(this.bb_pos + e));
                    } else {
                      return null;
                    }
                  }
                  ints(e) {
                    let t = this.bb.__offset(this.bb_pos, 22);
                    if (t) {
                      return this.bb.readInt64(this.bb.__vector(this.bb_pos + t) + e * 8);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  intsLength() {
                    let e = this.bb.__offset(this.bb_pos, 22);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  strings(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 24);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  stringsLength() {
                    let e = this.bb.__offset(this.bb_pos, 24);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  tensors(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 26);
                    if (r) {
                      return (n || new e.experimental.fbs.Tensor()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  tensorsLength() {
                    let e = this.bb.__offset(this.bb_pos, 26);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  graphs(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 28);
                    if (r) {
                      return (n || new e.experimental.fbs.Graph()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  graphsLength() {
                    let e = this.bb.__offset(this.bb_pos, 28);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startAttribute(e) {
                    e.startObject(13);
                  }
                  static addName(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addDocString(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addType(t, n) {
                    t.addFieldInt32(2, n, e.experimental.fbs.AttributeType.UNDEFINED);
                  }
                  static addF(e, t) {
                    e.addFieldFloat32(3, t, 0);
                  }
                  static addI(e, t) {
                    e.addFieldInt64(4, t, e.createLong(0, 0));
                  }
                  static addS(e, t) {
                    e.addFieldOffset(5, t, 0);
                  }
                  static addT(e, t) {
                    e.addFieldOffset(6, t, 0);
                  }
                  static addG(e, t) {
                    e.addFieldOffset(7, t, 0);
                  }
                  static addFloats(e, t) {
                    e.addFieldOffset(8, t, 0);
                  }
                  static createFloatsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addFloat32(t[n]);
                    }
                    return e.endVector();
                  }
                  static startFloatsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addInts(e, t) {
                    e.addFieldOffset(9, t, 0);
                  }
                  static createIntsVector(e, t) {
                    e.startVector(8, t.length, 8);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt64(t[n]);
                    }
                    return e.endVector();
                  }
                  static startIntsVector(e, t) {
                    e.startVector(8, t, 8);
                  }
                  static addStrings(e, t) {
                    e.addFieldOffset(10, t, 0);
                  }
                  static createStringsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startStringsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addTensors(e, t) {
                    e.addFieldOffset(11, t, 0);
                  }
                  static createTensorsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startTensorsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addGraphs(e, t) {
                    e.addFieldOffset(12, t, 0);
                  }
                  static createGraphsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startGraphsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endAttribute(e) {
                    return e.endObject();
                  }
                  static createAttribute(e, t, r, o, s, a, A, c, u, l, g, d, h, f) {
                    n.startAttribute(e);
                    n.addName(e, t);
                    n.addDocString(e, r);
                    n.addType(e, o);
                    n.addF(e, s);
                    n.addI(e, a);
                    n.addS(e, A);
                    n.addT(e, c);
                    n.addG(e, u);
                    n.addFloats(e, l);
                    n.addInts(e, g);
                    n.addStrings(e, d);
                    n.addTensors(e, h);
                    n.addGraphs(e, f);
                    return n.endAttribute(e);
                  }
                }
                t.Attribute = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsGraph(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsGraph(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  initializers(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 4);
                    if (r) {
                      return (n || new e.experimental.fbs.Tensor()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  initializersLength() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  nodeArgs(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 6);
                    if (r) {
                      return (n || new e.experimental.fbs.ValueInfo()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  nodeArgsLength() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  nodes(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 8);
                    if (r) {
                      return (n || new e.experimental.fbs.Node()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  nodesLength() {
                    let e = this.bb.__offset(this.bb_pos, 8);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  maxNodeIndex() {
                    let e = this.bb.__offset(this.bb_pos, 10);
                    if (e) {
                      return this.bb.readUint32(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  nodeEdges(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 12);
                    if (r) {
                      return (n || new e.experimental.fbs.NodeEdge()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  nodeEdgesLength() {
                    let e = this.bb.__offset(this.bb_pos, 12);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  inputs(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 14);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  inputsLength() {
                    let e = this.bb.__offset(this.bb_pos, 14);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  outputs(e, t) {
                    let n = this.bb.__offset(this.bb_pos, 16);
                    if (n) {
                      return this.bb.__string(this.bb.__vector(this.bb_pos + n) + e * 4, t);
                    } else {
                      return null;
                    }
                  }
                  outputsLength() {
                    let e = this.bb.__offset(this.bb_pos, 16);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  sparseInitializers(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 18);
                    if (r) {
                      return (n || new e.experimental.fbs.SparseTensor()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  sparseInitializersLength() {
                    let e = this.bb.__offset(this.bb_pos, 18);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startGraph(e) {
                    e.startObject(8);
                  }
                  static addInitializers(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static createInitializersVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startInitializersVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addNodeArgs(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static createNodeArgsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startNodeArgsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addNodes(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static createNodesVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startNodesVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addMaxNodeIndex(e, t) {
                    e.addFieldInt32(3, t, 0);
                  }
                  static addNodeEdges(e, t) {
                    e.addFieldOffset(4, t, 0);
                  }
                  static createNodeEdgesVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startNodeEdgesVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addInputs(e, t) {
                    e.addFieldOffset(5, t, 0);
                  }
                  static createInputsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startInputsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addOutputs(e, t) {
                    e.addFieldOffset(6, t, 0);
                  }
                  static createOutputsVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startOutputsVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addSparseInitializers(e, t) {
                    e.addFieldOffset(7, t, 0);
                  }
                  static createSparseInitializersVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startSparseInitializersVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endGraph(e) {
                    return e.endObject();
                  }
                  static createGraph(e, t, r, o, s, a, A, c, u) {
                    n.startGraph(e);
                    n.addInitializers(e, t);
                    n.addNodeArgs(e, r);
                    n.addNodes(e, o);
                    n.addMaxNodeIndex(e, s);
                    n.addNodeEdges(e, a);
                    n.addInputs(e, A);
                    n.addOutputs(e, c);
                    n.addSparseInitializers(e, u);
                    return n.endGraph(e);
                  }
                }
                t.Graph = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsModel(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsModel(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  irVersion() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return this.bb.readInt64(this.bb_pos + e);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  opsetImport(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 6);
                    if (r) {
                      return (n || new e.experimental.fbs.OperatorSetId()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  opsetImportLength() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  producerName(e) {
                    let t = this.bb.__offset(this.bb_pos, 8);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  producerVersion(e) {
                    let t = this.bb.__offset(this.bb_pos, 10);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  domain(e) {
                    let t = this.bb.__offset(this.bb_pos, 12);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  modelVersion() {
                    let e = this.bb.__offset(this.bb_pos, 14);
                    if (e) {
                      return this.bb.readInt64(this.bb_pos + e);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  docString(e) {
                    let t = this.bb.__offset(this.bb_pos, 16);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  graph(t) {
                    let n = this.bb.__offset(this.bb_pos, 18);
                    if (n) {
                      return (t || new e.experimental.fbs.Graph()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  graphDocString(e) {
                    let t = this.bb.__offset(this.bb_pos, 20);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  static startModel(e) {
                    e.startObject(9);
                  }
                  static addIrVersion(e, t) {
                    e.addFieldInt64(0, t, e.createLong(0, 0));
                  }
                  static addOpsetImport(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static createOpsetImportVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startOpsetImportVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addProducerName(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static addProducerVersion(e, t) {
                    e.addFieldOffset(3, t, 0);
                  }
                  static addDomain(e, t) {
                    e.addFieldOffset(4, t, 0);
                  }
                  static addModelVersion(e, t) {
                    e.addFieldInt64(5, t, e.createLong(0, 0));
                  }
                  static addDocString(e, t) {
                    e.addFieldOffset(6, t, 0);
                  }
                  static addGraph(e, t) {
                    e.addFieldOffset(7, t, 0);
                  }
                  static addGraphDocString(e, t) {
                    e.addFieldOffset(8, t, 0);
                  }
                  static endModel(e) {
                    return e.endObject();
                  }
                  static createModel(e, t, r, o, s, a, A, c, u, l) {
                    n.startModel(e);
                    n.addIrVersion(e, t);
                    n.addOpsetImport(e, r);
                    n.addProducerName(e, o);
                    n.addProducerVersion(e, s);
                    n.addDomain(e, a);
                    n.addModelVersion(e, A);
                    n.addDocString(e, c);
                    n.addGraph(e, u);
                    n.addGraphDocString(e, l);
                    return n.endModel(e);
                  }
                }
                t.Model = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (e) {
              (function (e) {
                class t {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsKernelCreateInfos(e, n) {
                    return (n || new t()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsKernelCreateInfos(e, n) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (n || new t()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  nodeIndices(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.readUint32(this.bb.__vector(this.bb_pos + t) + e * 4);
                    } else {
                      return 0;
                    }
                  }
                  nodeIndicesLength() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  nodeIndicesArray() {
                    let e = this.bb.__offset(this.bb_pos, 4);
                    if (e) {
                      return new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + e), this.bb.__vector_len(this.bb_pos + e));
                    } else {
                      return null;
                    }
                  }
                  kernelDefHashes(e) {
                    let t = this.bb.__offset(this.bb_pos, 6);
                    if (t) {
                      return this.bb.readUint64(this.bb.__vector(this.bb_pos + t) + e * 8);
                    } else {
                      return this.bb.createLong(0, 0);
                    }
                  }
                  kernelDefHashesLength() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startKernelCreateInfos(e) {
                    e.startObject(2);
                  }
                  static addNodeIndices(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static createNodeIndicesVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt32(t[n]);
                    }
                    return e.endVector();
                  }
                  static startNodeIndicesVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static addKernelDefHashes(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static createKernelDefHashesVector(e, t) {
                    e.startVector(8, t.length, 8);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addInt64(t[n]);
                    }
                    return e.endVector();
                  }
                  static startKernelDefHashesVector(e, t) {
                    e.startVector(8, t, 8);
                  }
                  static endKernelCreateInfos(e) {
                    return e.endObject();
                  }
                  static createKernelCreateInfos(e, n, r) {
                    t.startKernelCreateInfos(e);
                    t.addNodeIndices(e, n);
                    t.addKernelDefHashes(e, r);
                    return t.endKernelCreateInfos(e);
                  }
                }
                e.KernelCreateInfos = t;
              })(e.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsSubGraphSessionState(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsSubGraphSessionState(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  graphId(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  sessionState(t) {
                    let n = this.bb.__offset(this.bb_pos, 6);
                    if (n) {
                      return (t || new e.experimental.fbs.SessionState()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startSubGraphSessionState(e) {
                    e.startObject(2);
                  }
                  static addGraphId(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addSessionState(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static endSubGraphSessionState(e) {
                    let t = e.endObject();
                    e.requiredField(t, 4);
                    return t;
                  }
                  static createSubGraphSessionState(e, t, r) {
                    n.startSubGraphSessionState(e);
                    n.addGraphId(e, t);
                    n.addSessionState(e, r);
                    return n.endSubGraphSessionState(e);
                  }
                }
                t.SubGraphSessionState = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsSessionState(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsSessionState(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  kernels(t) {
                    let n = this.bb.__offset(this.bb_pos, 4);
                    if (n) {
                      return (t || new e.experimental.fbs.KernelCreateInfos()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  subGraphSessionStates(t, n) {
                    let r = this.bb.__offset(this.bb_pos, 6);
                    if (r) {
                      return (n || new e.experimental.fbs.SubGraphSessionState()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + r) + t * 4), this.bb);
                    } else {
                      return null;
                    }
                  }
                  subGraphSessionStatesLength() {
                    let e = this.bb.__offset(this.bb_pos, 6);
                    if (e) {
                      return this.bb.__vector_len(this.bb_pos + e);
                    } else {
                      return 0;
                    }
                  }
                  static startSessionState(e) {
                    e.startObject(2);
                  }
                  static addKernels(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addSubGraphSessionStates(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static createSubGraphSessionStatesVector(e, t) {
                    e.startVector(4, t.length, 4);
                    for (let n = t.length - 1; n >= 0; n--) {
                      e.addOffset(t[n]);
                    }
                    return e.endVector();
                  }
                  static startSubGraphSessionStatesVector(e, t) {
                    e.startVector(4, t, 4);
                  }
                  static endSessionState(e) {
                    return e.endObject();
                  }
                  static createSessionState(e, t, r) {
                    n.startSessionState(e);
                    n.addKernels(e, t);
                    n.addSubGraphSessionStates(e, r);
                    return n.endSessionState(e);
                  }
                }
                t.SessionState = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
          (function (e) {
            (function (t) {
              (function (t) {
                class n {
                  constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                  }
                  __init(e, t) {
                    this.bb_pos = e;
                    this.bb = t;
                    return this;
                  }
                  static getRootAsInferenceSession(e, t) {
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static getSizePrefixedRootAsInferenceSession(e, t) {
                    e.setPosition(e.position() + r.flatbuffers.SIZE_PREFIX_LENGTH);
                    return (t || new n()).__init(e.readInt32(e.position()) + e.position(), e);
                  }
                  static bufferHasIdentifier(e) {
                    return e.__has_identifier('ORTM');
                  }
                  ortVersion(e) {
                    let t = this.bb.__offset(this.bb_pos, 4);
                    if (t) {
                      return this.bb.__string(this.bb_pos + t, e);
                    } else {
                      return null;
                    }
                  }
                  model(t) {
                    let n = this.bb.__offset(this.bb_pos, 6);
                    if (n) {
                      return (t || new e.experimental.fbs.Model()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  sessionState(t) {
                    let n = this.bb.__offset(this.bb_pos, 8);
                    if (n) {
                      return (t || new e.experimental.fbs.SessionState()).__init(this.bb.__indirect(this.bb_pos + n), this.bb);
                    } else {
                      return null;
                    }
                  }
                  static startInferenceSession(e) {
                    e.startObject(3);
                  }
                  static addOrtVersion(e, t) {
                    e.addFieldOffset(0, t, 0);
                  }
                  static addModel(e, t) {
                    e.addFieldOffset(1, t, 0);
                  }
                  static addSessionState(e, t) {
                    e.addFieldOffset(2, t, 0);
                  }
                  static endInferenceSession(e) {
                    return e.endObject();
                  }
                  static finishInferenceSessionBuffer(e, t) {
                    e.finish(t, 'ORTM');
                  }
                  static finishSizePrefixedInferenceSessionBuffer(e, t) {
                    e.finish(t, 'ORTM', true);
                  }
                  static createInferenceSession(e, t, r, o) {
                    n.startInferenceSession(e);
                    n.addOrtVersion(e, t);
                    n.addModel(e, r);
                    n.addSessionState(e, o);
                    return n.endInferenceSession(e);
                  }
                }
                t.InferenceSession = n;
              })(t.fbs ||= {});
            })(e.experimental ||= {});
          })(_exports.onnxruntime ||= {});
        },
        1723: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.OnnxjsSessionHandler = undefined;
          const r = _require(6207);
          const o = _require(9240);
          _exports.OnnxjsSessionHandler = class {
            constructor(e) {
              this.session = e;
              this.inputNames = this.session.inputNames;
              this.outputNames = this.session.outputNames;
            }
            async dispose() {}
            async run(e, t, n) {
              const s = new Map();
              for (const t in e) {
                if (Object.hasOwnProperty.call(e, t)) {
                  const n = e[t];
                  s.set(t, new o.Tensor(n.dims, n.type, undefined, undefined, n.data));
                }
              }
              const a = await this.session.run(s);
              const A = {};
              a.forEach((e, t) => {
                A[t] = new r.Tensor(e.type, e.data, e.dims);
              });
              return A;
            }
            startProfiling() {
              this.session.startProfiling();
            }
            endProfiling() {
              this.session.endProfiling();
            }
          };
        },
        6027: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Session = undefined;
          const r = _require(6231);
          const o = _require(6464);
          const s = _require(1975);
          const a = _require(6496);
          const A = _require(1315);
          const c = _require(1745);
          _exports.Session = class {
            constructor(e = {}) {
              this._initialized = false;
              this.backendHint = e.backendHint;
              this.profiler = A.Profiler.create(e.profiler);
              this.context = {
                profiler: this.profiler,
                graphInputTypes: [],
                graphInputDims: []
              };
            }
            get inputNames() {
              return this._model.graph.getInputNames();
            }
            get outputNames() {
              return this._model.graph.getOutputNames();
            }
            startProfiling() {
              this.profiler.start();
            }
            endProfiling() {
              this.profiler.stop();
            }
            async loadModel(e, t, n) {
              await this.profiler.event('session', 'Session.loadModel', async () => {
                const a = await s.resolveBackend(this.backendHint);
                this.sessionHandler = a.createSessionHandler(this.context);
                this._model = new c.Model();
                if (typeof e == 'string') {
                  const t = e.endsWith('.ort');
                  if (typeof process != 'undefined' && process.versions && process.versions.node) {
                    const n = await o.promisify(r.readFile)(e);
                    this.initialize(n, t);
                  } else {
                    const n = await fetch(e);
                    const r = await n.arrayBuffer();
                    this.initialize(new Uint8Array(r), t);
                  }
                } else {
                  if (ArrayBuffer.isView(e)) {
                    this.initialize(e);
                  } else {
                    const r = new Uint8Array(e, t || 0, n || e.byteLength);
                    this.initialize(r);
                  }
                }
              });
            }
            initialize(e, t) {
              if (this._initialized) {
                throw new Error('already initialized');
              }
              this.profiler.event('session', 'Session.initialize', () => {
                const n = this.sessionHandler.transformGraph ? this.sessionHandler : undefined;
                this._model.load(e, n, t);
                if (this.sessionHandler.onGraphInitialized) {
                  this.sessionHandler.onGraphInitialized(this._model.graph);
                }
                this.initializeOps(this._model.graph);
                this._executionPlan = new a.ExecutionPlan(this._model.graph, this._ops, this.profiler);
              });
              this._initialized = true;
            }
            async run(e) {
              if (!this._initialized) {
                throw new Error('session not initialized yet');
              }
              return this.profiler.event('session', 'Session.run', async () => {
                const t = this.normalizeAndValidateInputs(e);
                const n = await this._executionPlan.execute(this.sessionHandler, t);
                return this.createOutput(n);
              });
            }
            normalizeAndValidateInputs(e) {
              const t = this._model.graph.getInputNames();
              if (Array.isArray(e)) {
                if (e.length !== t.length) {
                  throw new Error(`incorrect input array length: expected ${t.length} but got ${e.length}`);
                }
              } else {
                if (e.size !== t.length) {
                  throw new Error(`incorrect input map size: expected ${t.length} but got ${e.size}`);
                }
                const n = new Array(e.size);
                let r = 0;
                for (let o = 0; o < t.length; ++o) {
                  const s = e.get(t[o]);
                  if (!s) {
                    throw new Error(`missing input tensor for: '${name}'`);
                  }
                  n[r++] = s;
                }
                e = n;
              }
              if (this.context.graphInputTypes && this.context.graphInputTypes.length !== 0 && this.context.graphInputDims && this.context.graphInputDims.length !== 0) {
                this.validateInputTensorDims(this.context.graphInputDims, e, false);
              } else {
                const t = this._model.graph.getInputIndices();
                const n = this._model.graph.getValues();
                const r = new Array(t.length);
                for (let o = 0; o < t.length; ++o) {
                  const s = n[t[o]];
                  r[o] = s.type.shape.dims;
                  this.context.graphInputTypes.push(s.type.tensorType);
                  this.context.graphInputDims.push(e[o].dims);
                }
                this.validateInputTensorDims(r, e, true);
              }
              this.validateInputTensorTypes(this.context.graphInputTypes, e);
              return e;
            }
            validateInputTensorTypes(e, t) {
              for (let n = 0; n < t.length; n++) {
                const r = e[n];
                const o = t[n].type;
                if (r !== o) {
                  throw new Error(`input tensor[${n}] check failed: expected type '${r}' but got ${o}`);
                }
              }
            }
            validateInputTensorDims(e, t, n) {
              for (let r = 0; r < t.length; r++) {
                const o = e[r];
                const s = t[r].dims;
                if (!this.compareTensorDims(o, s, n)) {
                  throw new Error(`input tensor[${r}] check failed: expected shape '[${o.join(',')}]' but got [${s.join(',')}]`);
                }
              }
            }
            compareTensorDims(e, t, n) {
              if (e.length !== t.length) {
                return false;
              }
              for (let r = 0; r < e.length; ++r) {
                if (e[r] !== t[r] && (!n || e[r] !== 0)) {
                  return false;
                }
              }
              return true;
            }
            createOutput(e) {
              const t = this._model.graph.getOutputNames();
              if (e.length !== t.length) {
                throw new Error('expected number of outputs do not match number of generated outputs');
              }
              const n = new Map();
              for (let r = 0; r < t.length; ++r) {
                n.set(t[r], e[r]);
              }
              return n;
            }
            initializeOps(e) {
              const t = e.getNodes();
              this._ops = new Array(t.length);
              for (let n = 0; n < t.length; n++) {
                this._ops[n] = this.sessionHandler.resolve(t[n], this._model.opsets, e);
              }
            }
          };
        },
        9240: function (_module, _exports, _require) {
          "use strict";

          var __importDefault = this && this.__importDefault || function (mod) {
            return mod && mod.__esModule ? mod : {
              "default": mod
            };
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Tensor = undefined;
          const o = _require(3442);
          const s = __importDefault(_require(1583));
          const a = _require(5127);
          const A = _require(2446);
          const c = _require(7273);
          var u = a.onnxruntime.experimental.fbs;
          class l {
            get data() {
              if (this.cache === undefined) {
                const e = this.dataProvider(this.dataId);
                if (e.length !== this.size) {
                  throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');
                }
                this.cache = e;
              }
              return this.cache;
            }
            get stringData() {
              if (this.type !== 'string') {
                throw new TypeError('data type is not string');
              }
              return this.data;
            }
            get integerData() {
              switch (this.type) {
                case 'uint8':
                case 'int8':
                case 'uint16':
                case 'int16':
                case 'int32':
                case 'uint32':
                case 'bool':
                  return this.data;
                default:
                  throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');
              }
            }
            get floatData() {
              switch (this.type) {
                case 'float32':
                case 'float64':
                  return this.data;
                default:
                  throw new TypeError('data type is not float (float32, float64)');
              }
            }
            get numberData() {
              if (this.type !== 'string') {
                return this.data;
              }
              throw new TypeError('type cannot be non-number (string)');
            }
            get(e) {
              return this.data[c.ShapeUtil.indicesToOffset(e, this.strides)];
            }
            set(e, t) {
              this.data[c.ShapeUtil.indicesToOffset(e, this.strides)] = t;
            }
            async getData() {
              if (this.cache === undefined) {
                this.cache = await this.asyncDataProvider(this.dataId);
              }
              return this.cache;
            }
            get strides() {
              if (!this._strides) {
                this._strides = c.ShapeUtil.computeStrides(this.dims);
              }
              return this._strides;
            }
            constructor(e, t, n, r, s, a = o.Guid.create()) {
              this.dims = e;
              this.type = t;
              this.dataProvider = n;
              this.asyncDataProvider = r;
              this.cache = s;
              this.dataId = a;
              this.size = c.ShapeUtil.validateDimsAndCalcSize(e);
              const A = this.size;
              const u = n === undefined && r === undefined && s === undefined;
              if (s !== undefined && s.length !== A) {
                throw new RangeError('Input dims doesn\'t match data length.');
              }
              if (t === 'string') {
                if (s !== undefined && (!Array.isArray(s) || !s.every(e => typeof e == 'string'))) {
                  throw new TypeError('cache should be a string array');
                }
                if (u) {
                  this.cache = new Array(A);
                }
              } else {
                if (s !== undefined) {
                  const e = d(t);
                  if (!(s instanceof e)) {
                    throw new TypeError(`cache should be type ${e.name}`);
                  }
                }
                if (u) {
                  const e = new ArrayBuffer(A * function (e) {
                    switch (e) {
                      case 'bool':
                      case 'int8':
                      case 'uint8':
                        return 1;
                      case 'int16':
                      case 'uint16':
                        return 2;
                      case 'int32':
                      case 'uint32':
                      case 'float32':
                        return 4;
                      case 'float64':
                        return 8;
                      default:
                        throw new Error(`cannot calculate sizeof() on type ${e}`);
                    }
                  }(t));
                  this.cache = function (e, t) {
                    return new (d(t))(e);
                  }(e, t);
                }
              }
            }
            static fromProto(e) {
              if (!e) {
                throw new Error('cannot construct Value from an empty tensor');
              }
              const t = c.ProtoUtil.tensorDataTypeFromProto(e.dataType);
              const n = c.ProtoUtil.tensorDimsFromProto(e.dims);
              const r = new l(n, t);
              if (t === 'string') {
                e.stringData.forEach((e, t) => {
                  r.data[t] = c.decodeUtf8String(e);
                });
              } else {
                if (e.rawData && typeof e.rawData.byteLength == 'number' && e.rawData.byteLength > 0) {
                  const t = r.data;
                  const n = new DataView(e.rawData.buffer, e.rawData.byteOffset, e.rawData.byteLength);
                  const o = g(e.dataType);
                  const s = e.rawData.byteLength / o;
                  if (e.rawData.byteLength % o != 0) {
                    throw new Error('invalid buffer length');
                  }
                  if (t.length !== s) {
                    throw new Error('buffer length mismatch');
                  }
                  for (let r = 0; r < s; r++) {
                    const s = f(n, e.dataType, r * o);
                    t[r] = s;
                  }
                } else {
                  let t;
                  switch (e.dataType) {
                    case A.onnx.TensorProto.DataType.FLOAT:
                      t = e.floatData;
                      break;
                    case A.onnx.TensorProto.DataType.INT32:
                    case A.onnx.TensorProto.DataType.INT16:
                    case A.onnx.TensorProto.DataType.UINT16:
                    case A.onnx.TensorProto.DataType.INT8:
                    case A.onnx.TensorProto.DataType.UINT8:
                    case A.onnx.TensorProto.DataType.BOOL:
                      t = e.int32Data;
                      break;
                    case A.onnx.TensorProto.DataType.INT64:
                      t = e.int64Data;
                      break;
                    case A.onnx.TensorProto.DataType.DOUBLE:
                      t = e.doubleData;
                      break;
                    case A.onnx.TensorProto.DataType.UINT32:
                    case A.onnx.TensorProto.DataType.UINT64:
                      t = e.uint64Data;
                      break;
                    default:
                      throw new Error('unspecific error');
                  }
                  if (t == null) {
                    throw new Error('failed to populate data from a tensorproto value');
                  }
                  const n = r.data;
                  if (n.length !== t.length) {
                    throw new Error('array length mismatch');
                  }
                  for (let r = 0; r < t.length; r++) {
                    const o = t[r];
                    if (s.default.isLong(o)) {
                      n[r] = h(o, e.dataType);
                    } else {
                      n[r] = o;
                    }
                  }
                }
              }
              return r;
            }
            static fromData(e, t, n) {
              return new l(t, n, undefined, undefined, e);
            }
            static fromOrtTensor(e) {
              if (!e) {
                throw new Error('cannot construct Value from an empty tensor');
              }
              const t = c.ProtoUtil.tensorDimsFromORTFormat(e);
              const n = c.ProtoUtil.tensorDataTypeFromProto(e.dataType());
              const r = new l(t, n);
              if (n === 'string') {
                for (let t = 0; t < e.stringDataLength(); t++) {
                  r.data[t] = e.stringData(t);
                }
              } else {
                if (e.rawDataArray() && typeof e.rawDataLength() == 'number' && e.rawDataLength() > 0) {
                  const t = r.data;
                  const n = new DataView(e.rawDataArray().buffer, e.rawDataArray().byteOffset, e.rawDataLength());
                  const o = g(e.dataType());
                  const s = e.rawDataLength() / o;
                  if (e.rawDataLength() % o != 0) {
                    throw new Error('invalid buffer length');
                  }
                  if (t.length !== s) {
                    throw new Error('buffer length mismatch');
                  }
                  for (let r = 0; r < s; r++) {
                    const s = f(n, e.dataType(), r * o);
                    t[r] = s;
                  }
                }
              }
              return r;
            }
          }
          function g(e) {
            switch (e) {
              case A.onnx.TensorProto.DataType.UINT8:
              case A.onnx.TensorProto.DataType.INT8:
              case A.onnx.TensorProto.DataType.BOOL:
                return 1;
              case A.onnx.TensorProto.DataType.UINT16:
              case A.onnx.TensorProto.DataType.INT16:
                return 2;
              case A.onnx.TensorProto.DataType.FLOAT:
              case A.onnx.TensorProto.DataType.INT32:
              case A.onnx.TensorProto.DataType.UINT32:
                return 4;
              case A.onnx.TensorProto.DataType.INT64:
              case A.onnx.TensorProto.DataType.DOUBLE:
              case A.onnx.TensorProto.DataType.UINT64:
                return 8;
              default:
                throw new Error(`cannot calculate sizeof() on type ${A.onnx.TensorProto.DataType[e]}`);
            }
          }
          function d(e) {
            switch (e) {
              case 'bool':
              case 'uint8':
                return Uint8Array;
              case 'int8':
                return Int8Array;
              case 'int16':
                return Int16Array;
              case 'uint16':
                return Uint16Array;
              case 'int32':
                return Int32Array;
              case 'uint32':
                return Uint32Array;
              case 'int64':
                return BigInt64Array;
              case 'float32':
                return Float32Array;
              case 'float64':
                return Float64Array;
              default:
                throw new Error('unspecified error');
            }
          }
          function h(e, t) {
            if (t === A.onnx.TensorProto.DataType.INT64 || t === u.TensorDataType.INT64) {
              if (e.greaterThanOrEqual(2147483648) || e.lessThan(-2147483648)) {
                throw new TypeError('int64 is not supported');
              }
            } else {
              if (t !== A.onnx.TensorProto.DataType.UINT32 && t !== u.TensorDataType.UINT32 && t !== A.onnx.TensorProto.DataType.UINT64 && t !== u.TensorDataType.UINT64) {
                throw new TypeError(`not a LONG type: ${A.onnx.TensorProto.DataType[t]}`);
              }
              if (e.greaterThanOrEqual(4294967296) || e.lessThan(0)) {
                throw new TypeError('uint64 is not supported');
              }
            }
            return e.toNumber();
          }
          function f(e, t, n) {
            switch (t) {
              case A.onnx.TensorProto.DataType.BOOL:
              case A.onnx.TensorProto.DataType.UINT8:
                return e.getUint8(n);
              case A.onnx.TensorProto.DataType.INT8:
                return e.getInt8(n);
              case A.onnx.TensorProto.DataType.UINT16:
                return e.getUint16(n, true);
              case A.onnx.TensorProto.DataType.INT16:
                return e.getInt16(n, true);
              case A.onnx.TensorProto.DataType.FLOAT:
                return e.getFloat32(n, true);
              case A.onnx.TensorProto.DataType.INT32:
                return e.getInt32(n, true);
              case A.onnx.TensorProto.DataType.UINT32:
                return e.getUint32(n, true);
              case A.onnx.TensorProto.DataType.INT64:
                return h(s.default.fromBits(e.getUint32(n, true), e.getUint32(n + 4, true), false), t);
              case A.onnx.TensorProto.DataType.DOUBLE:
                return e.getFloat64(n, true);
              case A.onnx.TensorProto.DataType.UINT64:
                return h(s.default.fromBits(e.getUint32(n, true), e.getUint32(n + 4, true), true), t);
              default:
                throw new Error(`cannot read from DataView for type ${A.onnx.TensorProto.DataType[t]}`);
            }
          }
          _exports.Tensor = l;
        },
        7273: function (_module, _exports, _require) {
          "use strict";

          var __importDefault = this && this.__importDefault || function (mod) {
            return mod && mod.__esModule ? mod : {
              "default": mod
            };
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.decodeUtf8String = _exports.MAX_CLIP = _exports.MIN_CLIP = _exports.PoolConvUtil = _exports.ReduceUtil = _exports.SplitUtil = _exports.MathUtil = _exports.ShapeUtil = _exports.LongUtil = _exports.ProtoUtil = _exports.GemmUtil = _exports.arrayCopyHelper = _exports.BroadcastUtil = _exports.MatMulUtil = _exports.ArrayUtil = _exports.assert = _exports.checkInputsShape = undefined;
          const o = _require(5686);
          const s = __importDefault(_require(1583));
          const a = _require(2446);
          const A = _require(9240);
          _exports.checkInputsShape = function (e, ...t) {
            if (!e || e.length !== t.length) {
              return false;
            }
            for (let n = 0; n < e.length; n++) {
              if (!e[n].dims || e[n].dims.length !== t[n]) {
                return false;
              }
            }
            return true;
          };
          _exports.assert = function (e, t) {
            if (!e) {
              throw new Error(typeof t == 'string' ? t : t());
            }
          };
          _exports.ArrayUtil = class {
            static arraysEqual(e, t) {
              if (e.length !== t.length) {
                return false;
              }
              for (let n = 0; n < e.length; n++) {
                if (e[n] !== t[n]) {
                  return false;
                }
              }
              return true;
            }
          };
          class c {
            static preprocessInputShapes(e, t) {
              return [e.length === 1 ? [1, e[0]] : e, t.length === 1 ? [t[0], 1] : t];
            }
            static postprocessOutputShape(e, t, n) {
              if (t === 1) {
                e.splice(e.length - 2, 1);
              }
              if (n === 1) {
                e.pop();
              }
            }
            static calcMatMulShape(e, t) {
              if (e[1] !== t[0]) {
                return undefined;
              } else {
                return [e[0], t[1]];
              }
            }
          }
          _exports.MatMulUtil = c;
          class u {
            static calcShape(e, t, n = false) {
              const r = e.length;
              const o = t.length;
              if (r === 0) {
                return t;
              }
              if (o === 0) {
                return e;
              }
              const s = Math.max(e.length, t.length);
              const a = new Array(s);
              if (n) {
                if (r < 2 || o < 2) {
                  return;
                }
                const n = c.calcMatMulShape([e[r - 2], e[r - 1]], [t[o - 2], t[o - 1]]);
                if (n === undefined) {
                  return;
                }
                [a[s - 2], a[s - 1]] = n;
              }
              for (let A = n ? 3 : 1; A <= s; A++) {
                const n = r - A < 0 ? 1 : e[r - A];
                const c = o - A < 0 ? 1 : t[o - A];
                if (n !== c && n > 1 && c > 1) {
                  return;
                }
                a[s - A] = Math.max(n, c);
              }
              return a;
            }
            static index(e, t) {
              const n = new Array(t.length);
              u.fillIndex(e, t, n);
              return n;
            }
            static fillIndex(e, t, n) {
              const r = e.length - t.length;
              for (let o = 0; o < t.length; o++) {
                n[o] = e[r + o] % t[o];
              }
            }
            static calc(e, t, n, r, o) {
              const s = u.calcShape(e.dims, t.dims);
              if (s) {
                if (r && !d.areEqual(s, e.dims)) {
                  return;
                }
                const a = d.size(s);
                const c = r ? e : new A.Tensor(s, o || e.type);
                if (s.length === 0) {
                  c.set([], n(e.get([]), t.get([])));
                } else {
                  const r = new Array(s.length);
                  const o = new Array(e.dims.length);
                  const A = new Array(t.dims.length);
                  let l;
                  let g = 0;
                  let d = 0;
                  let h = false;
                  let f = false;
                  if (e.dims.length === 0) {
                    g = e.get([]);
                    h = true;
                  }
                  if (t.dims.length === 0) {
                    d = t.get([]);
                    f = true;
                  }
                  for (let p = 0; p < a; p++) {
                    l = p;
                    for (let e = s.length - 1; e >= 0; e--) {
                      r[e] = l % s[e];
                      l = Math.floor(l / s[e]);
                    }
                    if (!h) {
                      u.fillIndex(r, e.dims, o);
                      g = e.get(o);
                    }
                    if (!f) {
                      u.fillIndex(r, t.dims, A);
                      d = t.get(A);
                    }
                    c.set(r, n(g, d));
                  }
                }
                return c;
              }
            }
            static isValidBroadcast(e, t) {
              const n = e.length;
              const r = t.length;
              if (n > r) {
                return false;
              }
              for (let o = 1; o <= n; o++) {
                if (e[n - o] !== 1 && e[n - o] !== t[r - o]) {
                  return false;
                }
              }
              return true;
            }
            static getBroadcastDims(e, t) {
              const n = e.length;
              const r = [];
              for (let o = 0; o < n; o++) {
                const s = n - 1 - o;
                const a = e[s] || 1;
                if ((t[t.length - 1 - o] || 1) > 1 && a === 1) {
                  r.unshift(s);
                }
              }
              return r;
            }
          }
          _exports.BroadcastUtil = u;
          _exports.arrayCopyHelper = function (e, t, n, r, o) {
            if (r < 0 || r >= t.length) {
              throw new Error('sourceIndex out of bounds');
            }
            if (n < 0 || n >= e.length) {
              throw new Error('targetIndex out of bounds');
            }
            if (r + o > t.length) {
              throw new Error('source indices to be copied are outside bounds');
            }
            if (n + o > e.length) {
              throw new Error('target array is too small to hold result');
            }
            for (let s = 0; s < o; s++) {
              e[n + s] = t[r + s];
            }
          };
          _exports.GemmUtil = class {
            static getShapeOfGemmResult(e, t, n, r, o) {
              if (e.length !== 2 || n.length !== 2) {
                throw new Error('shape need to be of size 2');
              }
              let s;
              let a;
              let A;
              if (t) {
                s = e[1];
                a = e[0];
              } else {
                s = e[0];
                a = e[1];
              }
              let c = -1;
              if (r) {
                A = n[0];
                c = 1;
              } else {
                A = n[1];
                c = 0;
              }
              if (n[c] !== a) {
                throw new Error('dimension mismatch');
              }
              if (s <= 0 || A <= 0 || a <= 0) {
                throw new Error('invalid shape specified');
              }
              if (o && !u.isValidBroadcast(o, [s, A])) {
                throw new Error('gemm: invalid bias shape for broadcast');
              }
              return [s, A, a];
            }
          };
          class l {
            static tensorDataTypeFromProto(e) {
              switch (e) {
                case a.onnx.TensorProto.DataType.INT8:
                  return 'int8';
                case a.onnx.TensorProto.DataType.UINT8:
                  return 'uint8';
                case a.onnx.TensorProto.DataType.BOOL:
                  return 'bool';
                case a.onnx.TensorProto.DataType.INT16:
                  return 'int16';
                case a.onnx.TensorProto.DataType.UINT16:
                  return 'uint16';
                case a.onnx.TensorProto.DataType.INT32:
                  return 'int32';
                case a.onnx.TensorProto.DataType.UINT32:
                  return 'uint32';
                case a.onnx.TensorProto.DataType.FLOAT:
                  return 'float32';
                case a.onnx.TensorProto.DataType.DOUBLE:
                  return 'float64';
                case a.onnx.TensorProto.DataType.STRING:
                  return 'string';
                case a.onnx.TensorProto.DataType.INT64:
                  return 'int32';
                case a.onnx.TensorProto.DataType.UINT64:
                  return 'uint32';
                default:
                  throw new Error(`unsupported data type: ${a.onnx.TensorProto.DataType[e]}`);
              }
            }
            static tensorDataTypeStringToEnum(e) {
              switch (e) {
                case 'int8':
                  return a.onnx.TensorProto.DataType.INT8;
                case 'uint8':
                  return a.onnx.TensorProto.DataType.UINT8;
                case 'bool':
                  return a.onnx.TensorProto.DataType.BOOL;
                case 'int16':
                  return a.onnx.TensorProto.DataType.INT16;
                case 'uint16':
                  return a.onnx.TensorProto.DataType.UINT16;
                case 'int32':
                  return a.onnx.TensorProto.DataType.INT32;
                case 'uint32':
                  return a.onnx.TensorProto.DataType.UINT32;
                case 'float32':
                  return a.onnx.TensorProto.DataType.FLOAT;
                case 'float64':
                  return a.onnx.TensorProto.DataType.DOUBLE;
                case 'string':
                  return a.onnx.TensorProto.DataType.STRING;
                case 'int64':
                  return a.onnx.TensorProto.DataType.INT64;
                case 'uint64':
                  return a.onnx.TensorProto.DataType.UINT64;
                default:
                  throw new Error(`unsupported data type: ${e}`);
              }
            }
            static tensorDimsFromProto(e) {
              return e.map(e => s.default.isLong(e) ? e.toNumber() : e);
            }
            static tensorValueTypeFromProto(e) {
              return {
                tensorType: l.tensorDataTypeFromProto(e.elemType),
                shape: {
                  dims: l.tensorDimsFromProto(e.shape.dim.map(e => e.dimValue))
                }
              };
            }
            static tensorDimsFromORTFormat(e) {
              const t = [];
              for (let n = 0; n < e.dimsLength(); n++) {
                t.push(g.longToNumber(e.dims(n)));
              }
              return t;
            }
            static tensorAttributesFromORTFormat(e) {
              const t = [];
              for (let n = 0; n < e.attributesLength(); n++) {
                t.push(e.attributes(n));
              }
              return t;
            }
          }
          _exports.ProtoUtil = l;
          class g {
            static longToNumber(e, t) {
              if (s.default.isLong(e)) {
                return e.toNumber();
              } else {
                if (e instanceof o.flatbuffers.Long) {
                  return s.default.fromValue({
                    low: e.low,
                    high: e.high,
                    unsigned: t != null && t
                  }).toNumber();
                } else {
                  return e;
                }
              }
            }
            static isLong(e) {
              return s.default.isLong(e) || e instanceof o.flatbuffers.Long;
            }
          }
          _exports.LongUtil = g;
          class d {
            static size(e) {
              return d.getSizeFromDimensionRange(e, 0, e.length);
            }
            static sizeFromDimension(e, t) {
              if (t < 0 || t > e.length) {
                throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);
              }
              return d.getSizeFromDimensionRange(e, t, e.length);
            }
            static sizeToDimension(e, t) {
              if (t < 0 || t > e.length) {
                throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);
              }
              return d.getSizeFromDimensionRange(e, 0, t);
            }
            static getSizeFromDimensionRange(e, t, n) {
              let r = 1;
              for (let o = t; o < n; o++) {
                if (e[o] <= 0) {
                  throw new Error('cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');
                }
                r *= e[o];
              }
              return r;
            }
            static computeStrides(e) {
              const t = e.length;
              if (t === 0) {
                return [];
              }
              if (t === 1) {
                return [1];
              }
              const n = new Array(t);
              n[t - 1] = 1;
              n[t - 2] = e[t - 1];
              for (let r = t - 3; r >= 0; --r) {
                n[r] = n[r + 1] * e[r + 1];
              }
              return n;
            }
            static transpose(e) {
              return e.slice().reverse();
            }
            static indicesToOffset(e, t, n = e.length) {
              let r = 0;
              for (let o = 0; o < n; ++o) {
                r += t[o] * e[o];
              }
              return r;
            }
            static offsetToIndices(e, t) {
              const n = t.length;
              if (n === 0) {
                return [];
              }
              if (n === 1) {
                return [e * t[0]];
              }
              const r = new Array(t.length);
              for (let n = 0; n < r.length - 1; ++n) {
                r[n] = Math.floor(e / t[n]);
                e -= r[n] * t[n];
              }
              r[r.length - 1] = e;
              return r;
            }
            static normalizeAxis(e, t) {
              if (e < -t && e >= t) {
                throw new Error('unsupported axis for this operation.');
              }
              if (e < 0) {
                return e + t;
              } else {
                return e;
              }
            }
            static normalizeAxes(e, t) {
              return e.map(e => this.normalizeAxis(e, t));
            }
            static incrementIndex(e, t, n) {
              if (t.length === 0 || e.length === 0) {
                throw new Error('Index incrementing unsupported for scalar Tensor');
              }
              if (n === undefined) {
                n = t.length;
              } else {
                if (n <= 0 || n > t.length) {
                  throw new Error('Incorrect axis to increment on');
                }
              }
              for (let r = n - 1; r >= 0 && (e[r]++, !(e[r] < t[r])); --r) {
                e[r] = 0;
              }
            }
            static calculateReshapedDims(e, t) {
              if (t.length === 0) {
                if (e.length === 0 || d.size(e) === 1) {
                  return [];
                }
                throw new Error('cannot reshape to a scalar Tensor');
              }
              const n = t.length;
              const r = new Array(n);
              let o = -1;
              let s = 1;
              for (let a = 0; a < n; a++) {
                if (t[a] < -1) {
                  throw new Error('a dimension in shape hints cannot be less than -1');
                }
                if (t[a] === -1) {
                  if (o !== -1) {
                    throw new Error('at most one dimension in shape hints can be -1');
                  }
                  o = a;
                } else {
                  if (t[a] === 0) {
                    if (a >= e.length) {
                      throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');
                    }
                    r[a] = e[a];
                  } else {
                    r[a] = t[a];
                  }
                  s *= r[a];
                }
              }
              const a = d.size(e);
              if (o !== -1) {
                if (a % s != 0) {
                  throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${t}]`);
                }
                r[o] = a / s;
              } else {
                if (s !== a) {
                  throw new Error('reshapedDims and originalDims don\'t have matching sizes');
                }
              }
              return r;
            }
            static sortBasedOnPerm(e, t) {
              if (t) {
                return t.map(t => e[t]);
              } else {
                return e.slice().reverse();
              }
            }
            static padShape(e, t) {
              const n = e.length;
              return e.map((e, r) => e + t[r] + t[r + n]);
            }
            static areEqual(e, t) {
              return e.length === t.length && e.every((e, n) => e === t[n]);
            }
            static validateDimsAndCalcSize(e) {
              if (e.length > 6) {
                throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');
              }
              let t = 1;
              for (const n of e) {
                if (!Number.isInteger(n)) {
                  throw new TypeError(`Invalid shape: ${n} is not an integer`);
                }
                if (n < 0 || n > 2147483647) {
                  throw new TypeError(`Invalid shape: length ${n} is not allowed`);
                }
                t *= n;
              }
              return t;
            }
            static flattenShape(e, t) {
              if (t < 0) {
                t += e.length;
              }
              const n = e.reduce((e, t) => e * t, 1);
              const r = e.slice(t).reduce((e, t) => e * t, 1);
              return [n / r, r];
            }
            static squeezeShape(e, t) {
              const n = new Array();
              t = d.normalizeAxes(t, e.length);
              for (let r = 0; r < e.length; r++) {
                const o = t.indexOf(r) >= 0;
                if (o && e[r] !== 1) {
                  throw new Error('squeeze an axis of size different than 1');
                }
                if (t.length === 0 && e[r] > 1 || t.length > 0 && !o) {
                  n.push(e[r]);
                }
              }
              return n;
            }
            static unsqueezeShape(e, t) {
              const n = new Array(e.length + t.length);
              n.fill(0);
              for (let e = 0; e < t.length; e++) {
                const r = d.normalizeAxis(t[e], n.length);
                if (r >= n.length) {
                  throw new Error('\'axes\' has an out of range axis');
                }
                if (n[r] !== 0) {
                  throw new Error('\'axes\' has a duplicate axis');
                }
                n[r] = 1;
              }
              let r = 0;
              for (let t = 0; t < n.length; t++) {
                if (n[t] === 0) {
                  n[t] = e[r++];
                }
              }
              if (r !== e.length) {
                throw new Error('the unsqueezed dimension could not be established');
              }
              return n;
            }
          }
          _exports.ShapeUtil = d;
          _exports.MathUtil = class {
            static sqr(e, t, n, r, o) {
              if (r < 0 || r >= t.length) {
                throw new Error('sourceIndex out of bounds');
              }
              if (n < 0 || n >= e.length) {
                throw new Error('targetIndex out of bounds');
              }
              if (r + o > t.length) {
                throw new Error('source indices to be copied are outside bounds');
              }
              if (n + o > e.length) {
                throw new Error('target array is too small to hold result');
              }
              for (let s = 0; s < o; s++) {
                e[n + s] += Math.pow(t[r + s], 2);
              }
            }
            static axpy(e, t, n, r, o, s) {
              if (r < 0 || r >= t.length) {
                throw new Error('sourceIndex out of bounds');
              }
              if (n < 0 || n >= e.length) {
                throw new Error('targetIndex out of bounds');
              }
              if (r + o > t.length) {
                throw new Error('source indices to be copied are outside bounds');
              }
              if (n + o > e.length) {
                throw new Error('target array is too small to hold result');
              }
              for (let a = 0; a < o; a++) {
                e[n + a] += s * t[r + a];
              }
            }
            static powx(e, t, n, r, o, s) {
              if (r < 0 || r >= t.length) {
                throw new Error('sourceIndex out of bounds');
              }
              if (n < 0 || n >= e.length) {
                throw new Error('targetIndex out of bounds');
              }
              if (r + o > t.length) {
                throw new Error('source indices to be copied are outside bounds');
              }
              if (n + o > e.length) {
                throw new Error('target array is too small to hold result');
              }
              for (let a = 0; a < o; a++) {
                e[n + a] = Math.pow(t[r + a], s);
              }
            }
            static mul(e, t, n, r, o) {
              if (r < 0 || r >= t.length) {
                throw new Error('sourceIndex out of bounds');
              }
              if (n < 0 || n >= e.length) {
                throw new Error('targetIndex out of bounds');
              }
              if (r + o > t.length) {
                throw new Error('source indices to be copied are outside bounds');
              }
              if (n + o > e.length) {
                throw new Error('target array is too small to hold result');
              }
              for (let s = 0; s < o; s++) {
                e[n + s] = t[r + s] * e[n + s];
              }
            }
          };
          class h {
            static splitShape(e, t, n, r) {
              if (n.length === 0) {
                if (!r) {
                  throw new Error('need to know number of outputs when the \'split\' attribute is not specified');
                }
                h.determineSplit(e[t], r, n);
              }
              const o = [];
              const s = [0];
              for (let r = 0; r < n.length; ++r) {
                if (r !== 0) {
                  s.push(s[r - 1] + n[r - 1]);
                }
                const a = e.slice();
                a[t] = n[r];
                o.push(a);
              }
              return [o, s];
            }
            static determineSplit(e, t, n) {
              if (e % t != 0) {
                throw new Error('cannot split tensor to equal sized parts');
              }
              for (let r = 0; r < t; ++r) {
                n.push(e / t);
              }
            }
          }
          _exports.SplitUtil = h;
          class f {
            static calcReduce(e, t, n, r, o) {
              const s = e.dims.slice(0);
              if (t.length === 0) {
                s.forEach((e, n) => t.push(n));
              }
              const a = f.calcReduceShape(s, t, true);
              const c = d.size(a);
              const l = new A.Tensor(a, e.type);
              const g = d.computeStrides(a);
              const h = d.computeStrides(s);
              const p = new Array(s.length);
              for (let n = 0; n < c; n++) {
                const a = d.offsetToIndices(n, g);
                u.fillIndex(a, s, p);
                l.set(a, f.calcReduceByAxis(e.numberData, t, s, 0, d.indicesToOffset(p, h), r, o));
              }
              if (n) {
                return l;
              } else {
                return new A.Tensor(f.calcReduceShape(s, t, n), l.type, undefined, undefined, l.data, l.dataId);
              }
            }
            static calcReduceByAxis(e, t, n, r, o, s, a) {
              let A = 0;
              if (r >= t.length) {
                return s(e[o]);
              }
              const c = t[r];
              const u = c >= n.length ? 1 : d.size(n.slice(c + 1));
              for (let l = 0; l < n[c]; l++) {
                A = l === 0 ? f.calcReduceByAxis(e, t, n, r + 1, o, s, a) : a(A, f.calcReduceByAxis(e, t, n, r + 1, o, s, a));
                o += u;
              }
              return A;
            }
            static calcReduceShape(e, t, n) {
              const r = e.slice();
              for (let e = 0; e < t.length; e++) {
                r[t[e]] = n ? 1 : 0;
              }
              return r.filter(e => e !== 0);
            }
          }
          _exports.ReduceUtil = f;
          class p {
            static adjustPoolAttributes(e, t, n, r, o, s) {
              if (!e && n.length !== t.length - 2) {
                throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');
              }
              if (e) {
                for (let e = 0; e < t.length - 2; e++) {
                  if (e >= n.length) {
                    n.push(t[e + 2]);
                  } else {
                    n[e] = t[e + 2];
                  }
                }
              }
              for (let e = 0; e < n.length; e++) {
                if (e < r.length) {
                  if (r[e] < 0) {
                    throw new Error('strides should be greater than or equal to 1');
                  }
                } else {
                  r.push(1);
                }
              }
              for (let e = 0; e < n.length; e++) {
                if (e < o.length) {
                  if (o[e] < 0) {
                    throw new Error('dilations should be greater than or equal to 1');
                  }
                } else {
                  o.push(1);
                }
              }
              for (let e = 0; e < n.length * 2; e++) {
                if (e < s.length) {
                  if (s[e] < 0) {
                    throw new Error('pad should be greater than or equal to 1');
                  }
                } else {
                  s.push(0);
                }
              }
              for (let e = 0; e < n.length; e++) {
                if (n[e] <= 0) {
                  throw new Error('kernel shapes need to be greater than 0');
                }
                if (s[e] >= n[e] || s[e + n.length] >= n[e]) {
                  throw new Error('pads should be smaller than kernel');
                }
              }
            }
            static adjustPadsBasedOnAutoPad(e, t, n, r, o, s) {
              if (s) {
                if (o.length !== (e.length - 2) * 2) {
                  throw new Error('length of pads should be twice the length of data dimensions');
                }
                if (t.length !== e.length - 2) {
                  throw new Error('length of strides should be the length of data dimensions');
                }
                if (r.length !== e.length - 2) {
                  throw new Error('length of kernel shapes should be the length of data dimensions');
                }
                for (let a = 0; a < e.length - 2; a++) {
                  p.adjustPadAndReturnShape(e[a + 2], t[a], n[a], r[a], o, a, a + e.length - 2, s);
                }
              }
            }
            static computePoolOutputShape(e, t, n, r, o, s, a) {
              if (t.length <= 0) {
                throw new Error('input shape must be of size greater than 0');
              }
              const A = [t[0], t[1]];
              p.computeShapeHelper(e, t, A, n, r, o, s, a);
              return A;
            }
            static computeConvOutputShape(e, t, n, r, o, s, a) {
              if (e.length <= 0 || t.length <= 0) {
                throw new Error('invalid input tensor dims or invalid filter tensor dims');
              }
              const A = [e[0], t[0]];
              p.computeShapeHelper(false, e, A, n, r, o, s, a);
              return A;
            }
            static computeShapeHelper(e, t, n, r, o, s, a, A) {
              if (e) {
                for (let e = 0; e < t.length - 2; e++) {
                  n.push(1);
                }
              } else {
                for (let e = 0; e < t.length - 2; e++) {
                  n.push(p.adjustPadAndReturnShape(t[e + 2], r[e], o[e], s[e], a, e, e + t.length - 2, A));
                }
              }
            }
            static adjustPadAndReturnShape(e, t, n, r, o, s, a, A) {
              const c = n * (r - 1) + 1;
              if (!A || A === 'NOTSET') {
                return Math.floor((e + o[s] + o[a] - c) / t + 1);
              }
              switch (A) {
                case 'VALID':
                  o[s] = 0;
                  o[a] = 0;
                  return Math.floor((e - c) / t + 1);
                case 'SAME_LOWER':
                case 'SAME_UPPER':
                  if (n !== 1) {
                    throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');
                  }
                  {
                    const n = ((e + t - 1) / t - 1) * t + r - e;
                    o[s] = A === 'SAME_LOWER' ? Math.floor((n + 1) / 2) : Math.floor(n / 2);
                    o[a] = n - o[s];
                    return Math.floor((e + n - r) / t + 1);
                  }
                default:
                  throw new Error('Unsupported AutoPad type');
              }
            }
          }
          _exports.PoolConvUtil = p;
          _exports.MIN_CLIP = -3.4028234663852886e+38;
          _exports.MAX_CLIP = 3.4028234663852886e+38;
          _exports.decodeUtf8String = function (e) {
            return new TextDecoder().decode(e);
          };
        },
        8408: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.version = undefined;
          _exports.version = '1.16.0';
        },
        9544: function (_module, _exports, _require) {
          "use strict";

          var r;
          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.endProfiling = _exports.run = _exports.releaseSession = _exports.createSession = _exports.createSessionFinalize = _exports.createSessionAllocate = _exports.initializeRuntime = _exports.initializeWebAssemblyInstance = undefined;
          const A = _require(6207);
          const c = __importStar(_require(1259));
          const u = _require(263);
          const l = () => !!A.env.wasm.proxy && typeof document != 'undefined';
          let g;
          let d;
          let h;
          let f = false;
          let p = false;
          let m = false;
          const I = [];
          const E = [];
          const y = [];
          const w = [];
          const _ = [];
          const v = [];
          const b = () => {
            if (f || !p || m || !g) {
              throw new Error('worker not ready');
            }
          };
          const B = e => {
            switch (e.data.type) {
              case 'init-wasm':
                f = false;
                if (e.data.err) {
                  m = true;
                  d[1](e.data.err);
                } else {
                  p = true;
                  d[0]();
                }
                break;
              case 'init-ort':
                if (e.data.err) {
                  h[1](e.data.err);
                } else {
                  h[0]();
                }
                break;
              case 'create_allocate':
                if (e.data.err) {
                  I.shift()[1](e.data.err);
                } else {
                  I.shift()[0](e.data.out);
                }
                break;
              case 'create_finalize':
                if (e.data.err) {
                  E.shift()[1](e.data.err);
                } else {
                  E.shift()[0](e.data.out);
                }
                break;
              case 'create':
                if (e.data.err) {
                  y.shift()[1](e.data.err);
                } else {
                  y.shift()[0](e.data.out);
                }
                break;
              case 'release':
                if (e.data.err) {
                  w.shift()[1](e.data.err);
                } else {
                  w.shift()[0]();
                }
                break;
              case 'run':
                if (e.data.err) {
                  _.shift()[1](e.data.err);
                } else {
                  _.shift()[0](e.data.out);
                }
                break;
              case 'end-profiling':
                if (e.data.err) {
                  v.shift()[1](e.data.err);
                } else {
                  v.shift()[0]();
                }
            }
          };
          const Q = typeof document != 'undefined' ? (r = document?.currentScript) === null || r === undefined ? undefined : r.src : undefined;
          _exports.initializeWebAssemblyInstance = async () => {
            if (l()) {
              if (p) {
                return;
              }
              if (f) {
                throw new Error('multiple calls to \'initWasm()\' detected.');
              }
              if (m) {
                throw new Error('previous call to \'initWasm()\' failed.');
              }
              f = true;
              if (A.env.wasm.wasmPaths === undefined && Q && Q.indexOf('blob:') !== 0) {
                A.env.wasm.wasmPaths = Q.substr(0, +Q.lastIndexOf('/') + 1);
              }
              return new Promise((e, t) => {
                if (g != null) {
                  g.terminate();
                }
                g = _require(8050).Z();
                g.onmessage = B;
                d = [e, t];
                const r = {
                  type: 'init-wasm',
                  in: A.env.wasm
                };
                g.postMessage(r);
              });
            }
            return u.initializeWebAssembly(A.env.wasm);
          };
          _exports.initializeRuntime = async e => {
            if (l()) {
              b();
              return new Promise((t, n) => {
                h = [t, n];
                const r = {
                  type: 'init-ort',
                  in: e
                };
                g.postMessage(r);
              });
            }
            await c.initRuntime(e);
          };
          _exports.createSessionAllocate = async e => l() ? (b(), new Promise((t, n) => {
            I.push([t, n]);
            const r = {
              type: 'create_allocate',
              in: {
                model: e
              }
            };
            g.postMessage(r, [e.buffer]);
          })) : c.createSessionAllocate(e);
          _exports.createSessionFinalize = async (e, t) => l() ? (b(), new Promise((n, r) => {
            E.push([n, r]);
            const o = {
              type: 'create_finalize',
              in: {
                modeldata: e,
                options: t
              }
            };
            g.postMessage(o);
          })) : c.createSessionFinalize(e, t);
          _exports.createSession = async (e, t) => l() ? (b(), new Promise((n, r) => {
            y.push([n, r]);
            const o = {
              type: 'create',
              in: {
                model: e,
                options: t
              }
            };
            g.postMessage(o, [e.buffer]);
          })) : c.createSession(e, t);
          _exports.releaseSession = async e => {
            if (l()) {
              b();
              return new Promise((t, n) => {
                w.push([t, n]);
                const r = {
                  type: 'release',
                  in: e
                };
                g.postMessage(r);
              });
            }
            c.releaseSession(e);
          };
          _exports.run = async (e, t, n, r, o) => l() ? (b(), new Promise((s, a) => {
            _.push([s, a]);
            const A = {
              type: 'run',
              in: {
                sessionId: e,
                inputIndices: t,
                inputs: n,
                outputIndices: r,
                options: o
              }
            };
            g.postMessage(A, c.extractTransferableBuffers(n));
          })) : c.run(e, t, n, r, o);
          _exports.endProfiling = async e => {
            if (l()) {
              b();
              return new Promise((t, n) => {
                v.push([t, n]);
                const r = {
                  type: 'end-profiling',
                  in: e
                };
                g.postMessage(r);
              });
            }
            c.endProfiling(e);
          };
        },
        7918: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.setRunOptions = undefined;
          const r = _require(263);
          const o = _require(1497);
          _exports.setRunOptions = e => {
            const t = r.getInstance();
            let n = 0;
            const s = [];
            const a = e || {};
            try {
              if ((e == null ? undefined : e.logSeverityLevel) === undefined) {
                a.logSeverityLevel = 2;
              } else {
                if (typeof e.logSeverityLevel != 'number' || !Number.isInteger(e.logSeverityLevel) || e.logSeverityLevel < 0 || e.logSeverityLevel > 4) {
                  throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);
                }
              }
              if ((e == null ? undefined : e.logVerbosityLevel) === undefined) {
                a.logVerbosityLevel = 0;
              } else {
                if (typeof e.logVerbosityLevel != 'number' || !Number.isInteger(e.logVerbosityLevel)) {
                  throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);
                }
              }
              if ((e == null ? undefined : e.terminate) === undefined) {
                a.terminate = false;
              }
              let r = 0;
              if ((e == null ? undefined : e.tag) !== undefined) {
                r = o.allocWasmString(e.tag, s);
              }
              n = t._OrtCreateRunOptions(a.logSeverityLevel, a.logVerbosityLevel, !!a.terminate, r);
              if (n === 0) {
                o.checkLastError('Can\'t create run options.');
              }
              if ((e == null ? undefined : e.extra) !== undefined) {
                o.iterateExtraOptions(e.extra, '', new WeakSet(), (e, r) => {
                  const a = o.allocWasmString(e, s);
                  const A = o.allocWasmString(r, s);
                  if (t._OrtAddRunConfigEntry(n, a, A) !== 0) {
                    o.checkLastError(`Can't set a run config entry: ${e} - ${r}.`);
                  }
                });
              }
              return [n, s];
            } catch (e) {
              if (n !== 0) {
                t._OrtReleaseRunOptions(n);
              }
              s.forEach(e => t._free(e));
              throw e;
            }
          };
        },
        6640: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.OnnxruntimeWebAssemblySessionHandler = undefined;
          const r = _require(6231);
          const o = _require(6207);
          const s = _require(6464);
          const a = _require(9544);
          let A;
          _exports.OnnxruntimeWebAssemblySessionHandler = class {
            async createSessionAllocate(e) {
              const t = await fetch(e);
              if (t.status !== 200) {
                throw new Error(`failed to load model: ${e}`);
              }
              const n = await t.arrayBuffer();
              return a.createSessionAllocate(new Uint8Array(n));
            }
            async loadModel(e, t) {
              if (!A) {
                await a.initializeRuntime(o.env);
                A = true;
              }
              if (typeof e == 'string') {
                if (typeof process != 'undefined' && process.versions && process.versions.node) {
                  const n = await s.promisify(r.readFile)(e);
                  [this.sessionId, this.inputNames, this.outputNames] = await a.createSession(n, t);
                } else {
                  const n = await this.createSessionAllocate(e);
                  [this.sessionId, this.inputNames, this.outputNames] = await a.createSessionFinalize(n, t);
                }
              } else {
                [this.sessionId, this.inputNames, this.outputNames] = await a.createSession(e, t);
              }
            }
            async dispose() {
              return a.releaseSession(this.sessionId);
            }
            async run(e, t, n) {
              const r = [];
              const s = [];
              Object.entries(e).forEach(e => {
                const t = e[0];
                const n = e[1];
                const o = this.inputNames.indexOf(t);
                if (o === -1) {
                  throw new Error(`invalid input '${t}'`);
                }
                r.push(n);
                s.push(o);
              });
              const A = [];
              Object.entries(t).forEach(e => {
                const t = e[0];
                const n = this.outputNames.indexOf(t);
                if (n === -1) {
                  throw new Error(`invalid output '${t}'`);
                }
                A.push(n);
              });
              const c = await a.run(this.sessionId, s, r.map(e => [e.type, e.dims, e.data]), A, n);
              const u = {};
              for (let e = 0; e < c.length; e++) {
                u[this.outputNames[A[e]]] = new o.Tensor(c[e][0], c[e][2], c[e][1]);
              }
              return u;
            }
            startProfiling() {}
            endProfiling() {
              a.endProfiling(this.sessionId);
            }
          };
        },
        7622: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.setSessionOptions = undefined;
          const r = _require(263);
          const o = _require(1497);
          _exports.setSessionOptions = e => {
            var t;
            var n;
            var s;
            var a;
            const A = r.getInstance();
            let c = 0;
            const u = [];
            const l = e || {};
            (e => {
              if (!e.extra) {
                e.extra = {};
              }
              if (!e.extra.session) {
                e.extra.session = {};
              }
              const t = e.extra.session;
              if (!t.use_ort_model_bytes_directly) {
                t.use_ort_model_bytes_directly = '1';
              }
              if (e.executionProviders && e.executionProviders.some(e => (typeof e == 'string' ? e : e.name) === 'webgpu')) {
                e.enableMemPattern = false;
              }
            })(l);
            try {
              const e = (e => {
                switch (e) {
                  case 'disabled':
                    return 0;
                  case 'basic':
                    return 1;
                  case 'extended':
                    return 2;
                  case 'all':
                    return 99;
                  default:
                    throw new Error(`unsupported graph optimization level: ${e}`);
                }
              })((t = l.graphOptimizationLevel) !== null && t !== undefined ? t : 'all');
              const g = (e => {
                switch (e) {
                  case 'sequential':
                    return 0;
                  case 'parallel':
                    return 1;
                  default:
                    throw new Error(`unsupported execution mode: ${e}`);
                }
              })((n = l.executionMode) !== null && n !== undefined ? n : 'sequential');
              const d = typeof l.logId == 'string' ? o.allocWasmString(l.logId, u) : 0;
              const h = (s = l.logSeverityLevel) !== null && s !== undefined ? s : 2;
              if (!Number.isInteger(h) || h < 0 || h > 4) {
                throw new Error(`log serverity level is not valid: ${h}`);
              }
              const f = (a = l.logVerbosityLevel) !== null && a !== undefined ? a : 0;
              if (!Number.isInteger(f) || f < 0 || f > 4) {
                throw new Error(`log verbosity level is not valid: ${f}`);
              }
              const p = typeof l.optimizedModelFilePath == 'string' ? o.allocWasmString(l.optimizedModelFilePath, u) : 0;
              c = A._OrtCreateSessionOptions(e, !!l.enableCpuMemArena, !!l.enableMemPattern, g, !!l.enableProfiling, 0, d, h, f, p);
              if (c === 0) {
                o.checkLastError('Can\'t create session options.');
              }
              if (l.executionProviders) {
                ((e, t, n) => {
                  for (const s of t) {
                    let t = typeof s == 'string' ? s : s.name;
                    switch (t) {
                      case 'xnnpack':
                        t = 'XNNPACK';
                        break;
                      case 'webnn':
                        t = 'WEBNN';
                        if (typeof s != 'string') {
                          const t = s;
                          if (t == null ? undefined : t.deviceType) {
                            const s = o.allocWasmString('deviceType', n);
                            const a = o.allocWasmString(t.deviceType, n);
                            if (r.getInstance()._OrtAddSessionConfigEntry(e, s, a) !== 0) {
                              o.checkLastError(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`);
                            }
                          }
                          if (t == null ? undefined : t.powerPreference) {
                            const s = o.allocWasmString('powerPreference', n);
                            const a = o.allocWasmString(t.powerPreference, n);
                            if (r.getInstance()._OrtAddSessionConfigEntry(e, s, a) !== 0) {
                              o.checkLastError(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`);
                            }
                          }
                        }
                        break;
                      case 'webgpu':
                        t = 'JS';
                        break;
                      case 'wasm':
                      case 'cpu':
                        continue;
                      default:
                        throw new Error(`not supported execution provider: ${t}`);
                    }
                    const a = o.allocWasmString(t, n);
                    if (r.getInstance()._OrtAppendExecutionProvider(e, a) !== 0) {
                      o.checkLastError(`Can't append execution provider: ${t}.`);
                    }
                  }
                })(c, l.executionProviders, u);
              }
              if (l.extra !== undefined) {
                o.iterateExtraOptions(l.extra, '', new WeakSet(), (e, t) => {
                  const n = o.allocWasmString(e, u);
                  const r = o.allocWasmString(t, u);
                  if (A._OrtAddSessionConfigEntry(c, n, r) !== 0) {
                    o.checkLastError(`Can't set a session config entry: ${e} - ${t}.`);
                  }
                });
              }
              return [c, u];
            } catch (e) {
              if (c !== 0) {
                A._OrtReleaseSessionOptions(c);
              }
              u.forEach(e => A._free(e));
              throw e;
            }
          };
        },
        7917: (_module, _exports) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.logLevelStringToEnum = _exports.tensorTypeToTypedArrayConstructor = _exports.getTensorElementSize = _exports.tensorDataTypeEnumToString = _exports.tensorDataTypeStringToEnum = undefined;
          _exports.tensorDataTypeStringToEnum = e => {
            switch (e) {
              case 'int8':
                return 3;
              case 'uint8':
                return 2;
              case 'bool':
                return 9;
              case 'int16':
                return 5;
              case 'uint16':
                return 4;
              case 'int32':
                return 6;
              case 'uint32':
                return 12;
              case 'float16':
                return 10;
              case 'float32':
                return 1;
              case 'float64':
                return 11;
              case 'string':
                return 8;
              case 'int64':
                return 7;
              case 'uint64':
                return 13;
              default:
                throw new Error(`unsupported data type: ${e}`);
            }
          };
          _exports.tensorDataTypeEnumToString = e => {
            switch (e) {
              case 3:
                return 'int8';
              case 2:
                return 'uint8';
              case 9:
                return 'bool';
              case 5:
                return 'int16';
              case 4:
                return 'uint16';
              case 6:
                return 'int32';
              case 12:
                return 'uint32';
              case 10:
                return 'float16';
              case 1:
                return 'float32';
              case 11:
                return 'float64';
              case 8:
                return 'string';
              case 7:
                return 'int64';
              case 13:
                return 'uint64';
              default:
                throw new Error(`unsupported data type: ${e}`);
            }
          };
          _exports.getTensorElementSize = e => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][e];
          _exports.tensorTypeToTypedArrayConstructor = e => {
            switch (e) {
              case 'float16':
              case 'uint16':
                return Uint16Array;
              case 'float32':
                return Float32Array;
              case 'uint8':
              case 'bool':
                return Uint8Array;
              case 'int8':
                return Int8Array;
              case 'int16':
                return Int16Array;
              case 'int32':
                return Int32Array;
              case 'float64':
                return Float64Array;
              case 'uint32':
                return Uint32Array;
              case 'int64':
                return BigInt64Array;
              case 'uint64':
                return BigUint64Array;
              default:
                throw new Error(`unsupported type: ${e}`);
            }
          };
          _exports.logLevelStringToEnum = e => {
            switch (e) {
              case 'verbose':
                return 0;
              case 'info':
                return 1;
              case 'warning':
                return 2;
              case 'error':
                return 3;
              case 'fatal':
                return 4;
              default:
                throw new Error(`unsupported logging level: ${e}`);
            }
          };
        },
        1259: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.extractTransferableBuffers = _exports.endProfiling = _exports.run = _exports.releaseSession = _exports.createSession = _exports.createSessionFinalize = _exports.createSessionAllocate = _exports.initRuntime = undefined;
          const r = _require(7918);
          const o = _require(7622);
          const s = _require(7917);
          const a = _require(263);
          const A = _require(1497);
          _exports.initRuntime = async e => {
            var t;
            var n;
            t = e.wasm.numThreads;
            n = s.logLevelStringToEnum(e.logLevel);
            if (a.getInstance()._OrtInit(t, n) !== 0) {
              A.checkLastError('Can\'t initialize onnxruntime.');
            }
          };
          const c = new Map();
          _exports.createSessionAllocate = e => {
            const t = a.getInstance();
            const n = t._malloc(e.byteLength);
            if (n === 0) {
              throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);
            }
            t.HEAPU8.set(e, n);
            return [n, e.byteLength];
          };
          _exports.createSessionFinalize = (e, t) => {
            const n = a.getInstance();
            let r = 0;
            let s = 0;
            let u = [];
            const l = [];
            const g = [];
            try {
              [s, u] = o.setSessionOptions(t);
              r = n._OrtCreateSession(e[0], e[1], s);
              if (r === 0) {
                A.checkLastError('Can\'t create a session.');
              }
              const [d, h] = (e => {
                const t = a.getInstance();
                const n = t.stackSave();
                try {
                  const n = t.stackAlloc(8);
                  if (t._OrtGetInputOutputCount(e, n, n + 4) !== 0) {
                    A.checkLastError('Can\'t get session input/output count.');
                  }
                  return [t.HEAP32[n / 4], t.HEAP32[n / 4 + 1]];
                } finally {
                  t.stackRestore(n);
                }
              })(r);
              const f = [];
              const p = [];
              for (let e = 0; e < d; e++) {
                const t = n._OrtGetInputName(r, e);
                if (t === 0) {
                  A.checkLastError('Can\'t get an input name.');
                }
                l.push(t);
                f.push(n.UTF8ToString(t));
              }
              for (let e = 0; e < h; e++) {
                const t = n._OrtGetOutputName(r, e);
                if (t === 0) {
                  A.checkLastError('Can\'t get an output name.');
                }
                g.push(t);
                p.push(n.UTF8ToString(t));
              }
              c.set(r, [r, l, g]);
              return [r, f, p];
            } catch (e) {
              l.forEach(e => n._OrtFree(e));
              g.forEach(e => n._OrtFree(e));
              if (r !== 0) {
                n._OrtReleaseSession(r);
              }
              throw e;
            } finally {
              n._free(e[0]);
              if (s !== 0) {
                n._OrtReleaseSessionOptions(s);
              }
              u.forEach(e => n._free(e));
            }
          };
          _exports.createSession = (e, n) => {
            const r = _exports.createSessionAllocate(e);
            return _exports.createSessionFinalize(r, n);
          };
          _exports.releaseSession = e => {
            const t = a.getInstance();
            const n = c.get(e);
            if (!n) {
              throw new Error(`cannot release session. invalid session id: ${e}`);
            }
            const [r, o, s] = n;
            o.forEach(e => t._OrtFree(e));
            s.forEach(e => t._OrtFree(e));
            t._OrtReleaseSession(r);
            c.delete(e);
          };
          _exports.run = async (e, t, n, o, u) => {
            const l = a.getInstance();
            const g = c.get(e);
            if (!g) {
              throw new Error(`cannot run inference. invalid session id: ${e}`);
            }
            const [d, h, f] = g;
            const p = t.length;
            const m = o.length;
            let I = 0;
            let E = [];
            const y = [];
            const w = [];
            try {
              [I, E] = r.setRunOptions(u);
              for (let e = 0; e < p; e++) {
                const t = n[e][0];
                const r = n[e][1];
                const o = n[e][2];
                let a;
                let c;
                if (Array.isArray(o)) {
                  c = o.length * 4;
                  a = l._malloc(c);
                  w.push(a);
                  let e = a / 4;
                  for (let t = 0; t < o.length; t++) {
                    if (typeof o[t] != 'string') {
                      throw new TypeError(`tensor data at index ${t} is not a string`);
                    }
                    l.HEAPU32[e++] = A.allocWasmString(o[t], w);
                  }
                } else {
                  c = o.byteLength;
                  a = l._malloc(c);
                  w.push(a);
                  l.HEAPU8.set(new Uint8Array(o.buffer, o.byteOffset, c), a);
                }
                const u = l.stackSave();
                const g = l.stackAlloc(r.length * 4);
                try {
                  let n = g / 4;
                  r.forEach(e => l.HEAP32[n++] = e);
                  const o = l._OrtCreateTensor(s.tensorDataTypeStringToEnum(t), a, c, g, r.length);
                  if (o === 0) {
                    A.checkLastError(`Can't create tensor for input[${e}].`);
                  }
                  y.push(o);
                } finally {
                  l.stackRestore(u);
                }
              }
              const e = l.stackSave();
              const a = l.stackAlloc(p * 4);
              const c = l.stackAlloc(p * 4);
              const g = l.stackAlloc(m * 4);
              const _ = l.stackAlloc(m * 4);
              try {
                let e = a / 4;
                let n = c / 4;
                let r = g / 4;
                let u = _ / 4;
                for (let r = 0; r < p; r++) {
                  l.HEAPU32[e++] = y[r];
                  l.HEAPU32[n++] = h[t[r]];
                }
                for (let e = 0; e < m; e++) {
                  l.HEAPU32[r++] = 0;
                  l.HEAPU32[u++] = f[o[e]];
                }
                let E = l._OrtRun(d, c, a, p, _, m, g, I);
                const w = l.jsepRunPromise;
                if (w && w.then !== undefined) {
                  E = await w;
                }
                const v = [];
                if (E !== 0) {
                  A.checkLastError('failed to call OrtRun().');
                }
                for (let e = 0; e < m; e++) {
                  const t = l.HEAPU32[g / 4 + e];
                  const n = l.stackSave();
                  const r = l.stackAlloc(16);
                  let o;
                  let a = 0;
                  try {
                    E = l._OrtGetTensorData(t, r, r + 4, r + 8, r + 12);
                    if (E !== 0) {
                      A.checkLastError(`Can't access output tensor data on index ${e}.`);
                    }
                    let n = r / 4;
                    const c = l.HEAPU32[n++];
                    a = l.HEAPU32[n++];
                    const u = l.HEAPU32[n++];
                    const g = l.HEAPU32[n++];
                    const d = [];
                    for (let e = 0; e < g; e++) {
                      d.push(l.HEAPU32[u / 4 + e]);
                    }
                    l._OrtFree(u);
                    const h = d.length === 0 ? 1 : d.reduce((e, t) => e * t);
                    o = s.tensorDataTypeEnumToString(c);
                    if (o === 'string') {
                      const e = [];
                      let t = a / 4;
                      for (let n = 0; n < h; n++) {
                        const r = l.HEAPU32[t++];
                        const o = n === h - 1 ? undefined : l.HEAPU32[t] - r;
                        e.push(l.UTF8ToString(r, o));
                      }
                      v.push([o, d, e]);
                    } else {
                      const e = new (s.tensorTypeToTypedArrayConstructor(o))(h);
                      new Uint8Array(e.buffer, e.byteOffset, e.byteLength).set(l.HEAPU8.subarray(a, a + e.byteLength));
                      v.push([o, d, e]);
                    }
                  } finally {
                    l.stackRestore(n);
                    if (o === 'string' && a) {
                      l._free(a);
                    }
                    l._OrtReleaseTensor(t);
                  }
                }
                return v;
              } finally {
                l.stackRestore(e);
              }
            } finally {
              y.forEach(e => l._OrtReleaseTensor(e));
              w.forEach(e => l._free(e));
              if (I !== 0) {
                l._OrtReleaseRunOptions(I);
              }
              E.forEach(e => l._free(e));
            }
          };
          _exports.endProfiling = e => {
            const t = a.getInstance();
            const n = c.get(e);
            if (!n) {
              throw new Error('invalid session id');
            }
            const r = n[0];
            const o = t._OrtEndProfiling(r);
            if (o === 0) {
              A.checkLastError('Can\'t get an profile file name.');
            }
            t._OrtFree(o);
          };
          _exports.extractTransferableBuffers = e => {
            const t = [];
            for (const n of e) {
              const e = n[2];
              if (!Array.isArray(e) && e.buffer) {
                t.push(e.buffer);
              }
            }
            return t;
          };
        },
        263: function (_module, _exports, _require) {
          "use strict";

          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.dispose = _exports.getInstance = _exports.initializeWebAssembly = undefined;
          const a = __importStar(_require(1423));
          const A = _require(932);
          const c = _require(3474);
          let u;
          let l = false;
          let g = false;
          let d = false;
          _exports.initializeWebAssembly = async e => {
            if (l) {
              return Promise.resolve();
            }
            if (g) {
              throw new Error('multiple calls to \'initializeWebAssembly()\' detected.');
            }
            if (d) {
              throw new Error('previous call to \'initializeWebAssembly()\' failed.');
            }
            g = true;
            const t = e.initTimeout;
            const r = e.numThreads;
            const o = e.simd;
            const s = r > 1 && (() => {
              try {
                return typeof SharedArrayBuffer != 'undefined' && (typeof MessageChannel != 'undefined' && new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11])));
              } catch (e) {
                return false;
              }
            })();
            const h = o && (() => {
              try {
                return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1, 28, 0, 65, 0, 253, 15, 253, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 186, 1, 26, 11]));
              } catch (e) {
                return false;
              }
            })();
            const f = e.wasmPaths;
            const p = typeof f == 'string' ? f : undefined;
            const m = ((e, t) => t ? e ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm' : e ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm')(h, s);
            const I = typeof f == 'object' ? f[m] : undefined;
            let E = false;
            const y = [];
            if (t > 0) {
              y.push(new Promise(e => {
                setTimeout(() => {
                  E = true;
                  e();
                }, t);
              }));
            }
            y.push(new Promise((e, t) => {
              const r = s ? c : A;
              const o = {
                locateFile: (e, t) => s && e.endsWith('.worker.js') && typeof Blob != 'undefined' ? URL.createObjectURL(new Blob([_require(4154)], {
                  type: 'text/javascript'
                })) : e.endsWith('.wasm') ? I || (p ?? t) + m : t + e
              };
              if (s) {
                if (typeof Blob == 'undefined') {
                  o.mainScriptUrlOrBlob = a.join(__dirname, 'ort-wasm-threaded.js');
                } else {
                  const e = `var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;
                  o.mainScriptUrlOrBlob = new Blob([e], {
                    type: 'text/javascript'
                  });
                }
              }
              r(o).then(t => {
                g = false;
                l = true;
                u = t;
                e();
              }, e => {
                g = false;
                d = true;
                t(e);
              });
            }));
            await Promise.race(y);
            if (E) {
              throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`);
            }
          };
          _exports.getInstance = () => {
            if (l && u) {
              return u;
            }
            throw new Error('WebAssembly is not initialized yet.');
          };
          _exports.dispose = () => {
            var e;
            if (!!l && !g && !d) {
              g = true;
              if ((e = u.PThread) !== null && e !== undefined) {
                e.terminateAllThreads();
              }
              u = undefined;
              g = false;
              l = false;
              d = true;
            }
          };
        },
        1497: (_module, _exports, _require) => {
          "use strict";

          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.checkLastError = _exports.iterateExtraOptions = _exports.allocWasmString = undefined;
          const r = _require(263);
          _exports.allocWasmString = (e, t) => {
            const n = r.getInstance();
            const o = n.lengthBytesUTF8(e) + 1;
            const s = n._malloc(o);
            n.stringToUTF8(e, s, o);
            t.push(s);
            return s;
          };
          _exports.iterateExtraOptions = (e, n, r, o) => {
            if (typeof e == 'object' && e !== null) {
              if (r.has(e)) {
                throw new Error('Circular reference in options');
              }
              r.add(e);
            }
            Object.entries(e).forEach(([e, s]) => {
              const a = n ? n + e : e;
              if (typeof s == 'object') {
                _exports.iterateExtraOptions(s, a + '.', r, o);
              } else {
                if (typeof s == 'string' || typeof s == 'number') {
                  o(a, s.toString());
                } else {
                  if (typeof s != 'boolean') {
                    throw new Error(`Can't handle extra config type: ${typeof s}`);
                  }
                  o(a, s ? '1' : '0');
                }
              }
            });
          };
          _exports.checkLastError = e => {
            const t = r.getInstance();
            const n = t.stackSave();
            try {
              const n = t.stackAlloc(8);
              t._OrtGetLastError(n, n + 4);
              const r = t.HEAP32[n / 4];
              const o = t.HEAPU32[n / 4 + 1];
              const s = o ? t.UTF8ToString(o) : '';
              throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${s}`);
            } finally {
              t.stackRestore(n);
            }
          };
        },
        8050: (_module, _exports, _require) => {
          "use strict";

          _require.d(_exports, {
            Z: () => s
          });
          var r = _require(6614);
          var o = _require.n(r);
          function s() {
            return o()('/*!\n* ONNX Runtime Web v1.16.0\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var e={918:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const n=r(263),a=r(497);t.setRunOptions=e=>{const t=(0,n.getInstance)();let r=0;const o=[],s=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(s.terminate=!1);let n=0;return void 0!==(null==e?void 0:e.tag)&&(n=(0,a.allocWasmString)(e.tag,o)),r=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,n),0===r&&(0,a.checkLastError)("Can\'t create run options."),void 0!==(null==e?void 0:e.extra)&&(0,a.iterateExtraOptions)(e.extra,"",new WeakSet,((e,n)=>{const s=(0,a.allocWasmString)(e,o),i=(0,a.allocWasmString)(n,o);0!==t._OrtAddRunConfigEntry(r,s,i)&&(0,a.checkLastError)(`Can\'t set a run config entry: ${e} - ${n}.`)})),[r,o]}catch(e){throw 0!==r&&t._OrtReleaseRunOptions(r),o.forEach((e=>t._free(e))),e}}},622:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const n=r(263),a=r(497);t.setSessionOptions=e=>{var t,r,o,s;const i=(0,n.getInstance)();let u=0;const c=[],l=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(l);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=l.graphOptimizationLevel)&&void 0!==t?t:"all"),f=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(r=l.executionMode)&&void 0!==r?r:"sequential"),d="string"==typeof l.logId?(0,a.allocWasmString)(l.logId,c):0,p=null!==(o=l.logSeverityLevel)&&void 0!==o?o:2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);const g=null!==(s=l.logVerbosityLevel)&&void 0!==s?s:0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log verbosity level is not valid: ${g}`);const h="string"==typeof l.optimizedModelFilePath?(0,a.allocWasmString)(l.optimizedModelFilePath,c):0;return u=i._OrtCreateSessionOptions(e,!!l.enableCpuMemArena,!!l.enableMemPattern,f,!!l.enableProfiling,0,d,p,g,h),0===u&&(0,a.checkLastError)("Can\'t create session options."),l.executionProviders&&((e,t,r)=>{for(const o of t){let t="string"==typeof o?o:o.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof o){const t=o;if(null==t?void 0:t.deviceType){const o=(0,a.allocWasmString)("deviceType",r),s=(0,a.allocWasmString)(t.deviceType,r);0!==(0,n.getInstance)()._OrtAddSessionConfigEntry(e,o,s)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'deviceType\' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const o=(0,a.allocWasmString)("powerPreference",r),s=(0,a.allocWasmString)(t.powerPreference,r);0!==(0,n.getInstance)()._OrtAddSessionConfigEntry(e,o,s)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'powerPreference\' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const s=(0,a.allocWasmString)(t,r);0!==(0,n.getInstance)()._OrtAppendExecutionProvider(e,s)&&(0,a.checkLastError)(`Can\'t append execution provider: ${t}.`)}})(u,l.executionProviders,c),void 0!==l.extra&&(0,a.iterateExtraOptions)(l.extra,"",new WeakSet,((e,t)=>{const r=(0,a.allocWasmString)(e,c),n=(0,a.allocWasmString)(t,c);0!==i._OrtAddSessionConfigEntry(u,r,n)&&(0,a.checkLastError)(`Can\'t set a session config entry: ${e} - ${t}.`)})),[u,c]}catch(e){throw 0!==u&&i._OrtReleaseSessionOptions(u),c.forEach((e=>i._free(e))),e}}},917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},259:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const n=r(918),a=r(622),o=r(917),s=r(263),i=r(497);t.initRuntime=async e=>{var t,r;t=e.wasm.numThreads,r=(0,o.logLevelStringToEnum)(e.logLevel),0!==(0,s.getInstance)()._OrtInit(t,r)&&(0,i.checkLastError)("Can\'t initialize onnxruntime.")};const u=new Map;t.createSessionAllocate=e=>{const t=(0,s.getInstance)(),r=t._malloc(e.byteLength);if(0===r)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},t.createSessionFinalize=(e,t)=>{const r=(0,s.getInstance)();let n=0,o=0,c=[];const l=[],f=[];try{[o,c]=(0,a.setSessionOptions)(t),n=r._OrtCreateSession(e[0],e[1],o),0===n&&(0,i.checkLastError)("Can\'t create a session.");const[d,p]=(e=>{const t=(0,s.getInstance)(),r=t.stackSave();try{const r=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,r,r+4)&&(0,i.checkLastError)("Can\'t get session input/output count."),[t.HEAP32[r/4],t.HEAP32[r/4+1]]}finally{t.stackRestore(r)}})(n),g=[],h=[];for(let e=0;e<d;e++){const t=r._OrtGetInputName(n,e);0===t&&(0,i.checkLastError)("Can\'t get an input name."),l.push(t),g.push(r.UTF8ToString(t))}for(let e=0;e<p;e++){const t=r._OrtGetOutputName(n,e);0===t&&(0,i.checkLastError)("Can\'t get an output name."),f.push(t),h.push(r.UTF8ToString(t))}return u.set(n,[n,l,f]),[n,g,h]}catch(e){throw l.forEach((e=>r._OrtFree(e))),f.forEach((e=>r._OrtFree(e))),0!==n&&r._OrtReleaseSession(n),e}finally{r._free(e[0]),0!==o&&r._OrtReleaseSessionOptions(o),c.forEach((e=>r._free(e)))}},t.createSession=(e,r)=>{const n=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(n,r)},t.releaseSession=e=>{const t=(0,s.getInstance)(),r=u.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);const[n,a,o]=r;a.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(n),u.delete(e)},t.run=async(e,t,r,a,c)=>{const l=(0,s.getInstance)(),f=u.get(e);if(!f)throw new Error(`cannot run inference. invalid session id: ${e}`);const[d,p,g]=f,h=t.length,m=a.length;let y=0,v=[];const b=[],w=[];try{[y,v]=(0,n.setRunOptions)(c);for(let e=0;e<h;e++){const t=r[e][0],n=r[e][1],a=r[e][2];let s,u;if(Array.isArray(a)){u=4*a.length,s=l._malloc(u),w.push(s);let e=s/4;for(let t=0;t<a.length;t++){if("string"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);l.HEAPU32[e++]=(0,i.allocWasmString)(a[t],w)}}else u=a.byteLength,s=l._malloc(u),w.push(s),l.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),s);const c=l.stackSave(),f=l.stackAlloc(4*n.length);try{let r=f/4;n.forEach((e=>l.HEAP32[r++]=e));const a=l._OrtCreateTensor((0,o.tensorDataTypeStringToEnum)(t),s,u,f,n.length);0===a&&(0,i.checkLastError)(`Can\'t create tensor for input[${e}].`),b.push(a)}finally{l.stackRestore(c)}}const e=l.stackSave(),s=l.stackAlloc(4*h),u=l.stackAlloc(4*h),f=l.stackAlloc(4*m),_=l.stackAlloc(4*m);try{let e=s/4,r=u/4,n=f/4,c=_/4;for(let n=0;n<h;n++)l.HEAPU32[e++]=b[n],l.HEAPU32[r++]=p[t[n]];for(let e=0;e<m;e++)l.HEAPU32[n++]=0,l.HEAPU32[c++]=g[a[e]];let v=l._OrtRun(d,u,s,h,_,m,f,y);const w=l.jsepRunPromise;w&&void 0!==w.then&&(v=await w);const O=[];0!==v&&(0,i.checkLastError)("failed to call OrtRun().");for(let e=0;e<m;e++){const t=l.HEAPU32[f/4+e],r=l.stackSave(),n=l.stackAlloc(16);let a,s=0;try{v=l._OrtGetTensorData(t,n,n+4,n+8,n+12),0!==v&&(0,i.checkLastError)(`Can\'t access output tensor data on index ${e}.`);let r=n/4;const u=l.HEAPU32[r++];s=l.HEAPU32[r++];const c=l.HEAPU32[r++],f=l.HEAPU32[r++],d=[];for(let e=0;e<f;e++)d.push(l.HEAPU32[c/4+e]);l._OrtFree(c);const p=0===d.length?1:d.reduce(((e,t)=>e*t));if(a=(0,o.tensorDataTypeEnumToString)(u),"string"===a){const e=[];let t=s/4;for(let r=0;r<p;r++){const n=l.HEAPU32[t++],a=r===p-1?void 0:l.HEAPU32[t]-n;e.push(l.UTF8ToString(n,a))}O.push([a,d,e])}else{const e=new((0,o.tensorTypeToTypedArrayConstructor)(a))(p);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(l.HEAPU8.subarray(s,s+e.byteLength)),O.push([a,d,e])}}finally{l.stackRestore(r),"string"===a&&s&&l._free(s),l._OrtReleaseTensor(t)}}return O}finally{l.stackRestore(e)}}finally{b.forEach((e=>l._OrtReleaseTensor(e))),w.forEach((e=>l._free(e))),0!==y&&l._OrtReleaseRunOptions(y),v.forEach((e=>l._free(e)))}},t.endProfiling=e=>{const t=(0,s.getInstance)(),r=u.get(e);if(!r)throw new Error("invalid session id");const n=r[0],a=t._OrtEndProfiling(n);0===a&&(0,i.checkLastError)("Can\'t get an profile file name."),t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const r of e){const e=r[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const s=o(r(17)),i=r(932),u=r(474);let c,l=!1,f=!1,d=!1;t.initializeWebAssembly=async e=>{if(l)return Promise.resolve();if(f)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(d)throw new Error("previous call to \'initializeWebAssembly()\' failed.");f=!0;const t=e.initTimeout,n=e.numThreads,a=e.simd,o=n>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),p=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),g=e.wasmPaths,h="string"==typeof g?g:void 0,m=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(p,o),y="object"==typeof g?g[m]:void 0;let v=!1;const b=[];if(t>0&&b.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),b.push(new Promise(((e,t)=>{const n=o?u:i,a={locateFile:(e,t)=>o&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob?URL.createObjectURL(new Blob([r(154)],{type:"text/javascript"})):e.endsWith(".wasm")?y||(null!=h?h:t)+m:t+e};if(o)if("undefined"==typeof Blob)a.mainScriptUrlOrBlob=s.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${n.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}n(a).then((t=>{f=!1,l=!0,c=t,e()}),(e=>{f=!1,d=!0,t(e)}))}))),await Promise.race(b),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(l&&c)return c;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!l||f||d||(f=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,f=!1,l=!1,d=!0)}},497:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const n=r(263);t.allocWasmString=(e,t)=>{const r=(0,n.getInstance)(),a=r.lengthBytesUTF8(e)+1,o=r._malloc(a);return r.stringToUTF8(e,o,a),t.push(o),o},t.iterateExtraOptions=(e,r,n,a)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,o])=>{const s=r?r+e:e;if("object"==typeof o)(0,t.iterateExtraOptions)(o,s+".",n,a);else if("string"==typeof o||"number"==typeof o)a(s,o.toString());else{if("boolean"!=typeof o)throw new Error("Can\'t handle extra config type: "+typeof o);a(s,o?"1":"0")}}))},t.checkLastError=e=>{const t=(0,n.getInstance)(),r=t.stackSave();try{const r=t.stackAlloc(8);t._OrtGetLastError(r,r+4);const n=t.HEAP32[r/4],a=t.HEAPU32[r/4+1],o=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}},474:(e,t,r)=>{var _scriptDir,n=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return k.buffer!=D.buffer&&Y(),D}function n(){return k.buffer!=D.buffer&&Y(),I}function a(){return k.buffer!=D.buffer&&Y(),U}function o(){return k.buffer!=D.buffer&&Y(),L}function s(){return k.buffer!=D.buffer&&Y(),W}var i,u,c=e;c.ready=new Promise(((e,t)=>{i=e,u=t}));var l,f,d,p=Object.assign({},c),g="./this.program",h=(e,t)=>{throw t},m="object"==typeof window,y="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=c.ENVIRONMENT_IS_PTHREAD||!1,w="";function _(e){return c.locateFile?c.locateFile(e,w):w+e}if(v){var O=r(147),S=r(17);let t;w=y?S.dirname(w)+"/":__dirname+"/",l=(e,t)=>(e=e.startsWith("file://")?new URL(e):S.normalize(e),O.readFileSync(e,t?void 0:"utf8")),d=e=>((e=l(e,!0)).buffer||(e=new Uint8Array(e)),e),f=(e,t,r,n=!0)=>{e=e.startsWith("file://")?new URL(e):S.normalize(e),O.readFile(e,n?void 0:"utf8",((e,a)=>{e?r(e):t(n?a.buffer:a)}))},!c.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(e,t)=>{throw process.exitCode=e,t},c.inspect=()=>"[Emscripten Module object]";try{t=r(267)}catch(e){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),e}global.Worker=t.Worker}else(m||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)}));v&&"undefined"==typeof performance&&(global.performance=r(74).performance);var E=console.log.bind(console),A=console.error.bind(console);v&&(E=(...e)=>O.writeSync(1,e.join(" ")+"\\n"),A=(...e)=>O.writeSync(2,e.join(" ")+"\\n"));var T,M=c.print||E,R=c.printErr||A;Object.assign(c,p),p=null,c.thisProgram&&(g=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(T=c.wasmBinary);var F=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&te("no native wasm support detected");var k,C,x,P,D,I,U,L,W,H=!1;function Y(){var e=k.buffer;c.HEAP8=D=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=U=new Int32Array(e),c.HEAPU8=I=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=L=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=W=new Float64Array(e)}var j=c.INITIAL_MEMORY||16777216;if(5242880<=j||te("INITIAL_MEMORY should be larger than STACK_SIZE, was "+j+"! (STACK_SIZE=5242880)"),b)k=c.wasmMemory;else if(c.wasmMemory)k=c.wasmMemory;else if(!((k=new WebAssembly.Memory({initial:j/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&R("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Y(),j=k.buffer.byteLength;var z,G=[],N=[],B=[],$=0;function q(){return F||0<$}var V,J,X=0,K=null,Z=null;function Q(){X++,c.monitorRunDependencies&&c.monitorRunDependencies(X)}function ee(){if(X--,c.monitorRunDependencies&&c.monitorRunDependencies(X),0==X&&(null!==K&&(clearInterval(K),K=null),Z)){var e=Z;Z=null,e()}}function te(e){throw c.onAbort&&c.onAbort(e),R(e="Aborted("+e+")"),H=!0,P=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function re(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){if(e==V&&T)return new Uint8Array(T);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}function ae(e,t,r){return function(e){if(!T&&(m||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>ne(e)));if(f)return new Promise(((t,r)=>{f(e,(e=>t(new Uint8Array(e))),r)}))}return Promise.resolve().then((()=>ne(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(r,(e=>{R("failed to asynchronously prepare wasm: "+e),te(e)}))}function oe(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function se(e){e.terminate(),e.onmessage=()=>{}}function ie(e){(e=ge.Fa[e])||te(),ge.fb(e)}function ue(e){var t=ge.Za();if(!t)return 6;ge.Ia.push(t),ge.Fa[e.Ha]=t,t.Ha=e.Ha;var r={cmd:"run",start_routine:e.gb,arg:e.Ya,pthread_ptr:e.Ha};return v&&t.unref(),t.postMessage(r,e.mb),0}re(V="ort-wasm-threaded.wasm")||(V=_(V));var ce="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,le=(e,t,r)=>{var n=(t>>>=0)+r;for(r=t;e[r]&&!(r>=n);)++r;if(16<r-t&&e.buffer&&ce)return ce.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(n="";t<r;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))n+=String.fromCharCode((31&a)<<6|o);else{var s=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|s:(7&a)<<18|o<<12|s<<6|63&e[t++])?n+=String.fromCharCode(a):(a-=65536,n+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else n+=String.fromCharCode(a)}return n},fe=(e,t)=>(e>>>=0)?le(n(),e,t):"";function de(e){if(b)return qe(1,1,e);P=e,q()||(ge.hb(),c.onExit&&c.onExit(e),H=!0),h(e,new oe(e))}var pe=e=>{if(P=e,b)throw me(e),"unwind";de(e)},ge={La:[],Ia:[],Ta:[],Fa:{},Pa:function(){b?ge.ab():ge.$a()},$a:function(){G.unshift((()=>{Q(),ge.bb((()=>ee()))}))},ab:function(){ge.receiveObjectTransfer=ge.eb,ge.threadInitTLS=ge.Sa,ge.setExitStatus=ge.Ra,F=!1},Ra:function(e){P=e},rb:["$terminateWorker"],hb:function(){for(var e of ge.Ia)se(e);for(e of ge.La)se(e);ge.La=[],ge.Ia=[],ge.Fa=[]},fb:function(e){var t=e.Ha;delete ge.Fa[t],ge.La.push(e),ge.Ia.splice(ge.Ia.indexOf(e),1),e.Ha=0,yt(t)},eb:function(){},Sa:function(){ge.Ta.forEach((e=>e()))},cb:e=>new Promise((t=>{e.onmessage=r=>{var n=(r=r.data).cmd;if(r.targetThread&&r.targetThread!=dt()){var a=ge.Fa[r.qb];a?a.postMessage(r,r.transferList):R(\'Internal error! Worker sent a message "\'+n+\'" to target pthread \'+r.targetThread+", but that thread no longer exists!")}else"checkMailbox"===n?He():"spawnThread"===n?ue(r):"cleanupThread"===n?ie(r.thread):"killThread"===n?(r=r.thread,n=ge.Fa[r],delete ge.Fa[r],se(n),yt(r),ge.Ia.splice(ge.Ia.indexOf(n),1),n.Ha=0):"cancelThread"===n?ge.Fa[r.thread].postMessage({cmd:"cancel"}):"loaded"===n?(e.loaded=!0,t(e)):"alert"===n?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===n?c[r.handler](...r.args):n&&R("worker sent an unknown command "+n)},e.onerror=e=>{throw R("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var r,n=[];for(r of["onExit","onAbort","print","printErr"])c.hasOwnProperty(r)&&n.push(r);e.postMessage({cmd:"load",handlers:n,urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:k,wasmModule:x})})),bb:function(e){e()},Xa:function(){var e=_("ort-wasm-threaded.worker.js");e=new Worker(e),ge.La.push(e)},Za:function(){return 0==ge.La.length&&(ge.Xa(),ge.cb(ge.La[0])),ge.La.pop()}};c.PThread=ge;var he=e=>{for(;0<e.length;)e.shift()(c)};function me(e){if(b)return qe(2,0,e);pe(e)}c.establishStackSpace=function(){var e=dt(),t=a()[e+52>>2>>>0];e=a()[e+56>>2>>>0],_t(t,t-e),St(t)};var ye=[];function ve(e){this.Oa=e-24,this.Wa=function(e){o()[this.Oa+4>>2>>>0]=e},this.Va=function(e){o()[this.Oa+8>>2>>>0]=e},this.Pa=function(e,t){this.Ua(),this.Wa(e),this.Va(t)},this.Ua=function(){o()[this.Oa+16>>2>>>0]=0}}function be(e,t,r,n){return b?qe(3,1,e,t,r,n):we(e,t,r,n)}function we(e,t,r,n){if(e>>>=0,t>>>=0,r>>>=0,n>>>=0,"undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return b&&0===a.length?be(e,t,r,n):(e={gb:r,Ha:e,Ya:n,mb:a},b?(e.ob="spawnThread",postMessage(e,a),0):ue(e))}function _e(e,t,r){return b?qe(4,1,e,t,r):0}function Oe(e,t){if(b)return qe(5,1,e,t)}c.invokeEntryPoint=function(e,t){var r=ye[e];r||(e>=ye.length&&(ye.length=e+1),ye[e]=r=z.get(e)),e=r(t),q()?ge.Ra(e):vt(e)};var Se=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);127>=n?t++:2047>=n?t+=2:55296<=n&&57343>=n?(t+=4,++r):t+=3}return t},Ee=(e,t,r,n)=>{if(!(0<n))return 0;var a=r>>>=0;n=r+n-1;for(var o=0;o<e.length;++o){var s=e.charCodeAt(o);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++o)),127>=s){if(r>=n)break;t[r++>>>0]=s}else{if(2047>=s){if(r+1>=n)break;t[r++>>>0]=192|s>>6}else{if(65535>=s){if(r+2>=n)break;t[r++>>>0]=224|s>>12}else{if(r+3>=n)break;t[r++>>>0]=240|s>>18,t[r++>>>0]=128|s>>12&63}t[r++>>>0]=128|s>>6&63}t[r++>>>0]=128|63&s}}return t[r>>>0]=0,r-a},Ae=(e,t,r)=>Ee(e,n(),t,r);function Te(e,t){if(b)return qe(6,1,e,t)}function Me(e,t,r){if(b)return qe(7,1,e,t,r)}function Re(e,t,r){return b?qe(8,1,e,t,r):0}function Fe(e,t){if(b)return qe(9,1,e,t)}function ke(e,t,r){if(b)return qe(10,1,e,t,r)}function Ce(e,t,r,n){if(b)return qe(11,1,e,t,r,n)}function xe(e,t,r,n){if(b)return qe(12,1,e,t,r,n)}function Pe(e,t,r,n){if(b)return qe(13,1,e,t,r,n)}function De(e){if(b)return qe(14,1,e)}function Ie(e,t){if(b)return qe(15,1,e,t)}function Ue(e,t,r){if(b)return qe(16,1,e,t,r)}var Le=e=>{if(!H)try{if(e(),!q())try{b?vt(P):pe(P)}catch(e){e instanceof oe||"unwind"==e||h(1,e)}}catch(e){e instanceof oe||"unwind"==e||h(1,e)}};function We(e){e>>>=0,"function"==typeof Atomics.nb&&(Atomics.nb(a(),e>>2,e).value.then(He),e+=128,Atomics.store(a(),e>>2,1))}function He(){var e=dt();e&&(We(e),Le((()=>bt())))}c.__emscripten_thread_mailbox_await=We,c.checkMailbox=He;var Ye=e=>0==e%4&&(0!=e%100||0==e%400),je=[0,31,60,91,121,152,182,213,244,274,305,335],ze=[0,31,59,90,120,151,181,212,243,273,304,334];function Ge(e,t,r,n,a,o,s,i){return b?qe(17,1,e,t,r,n,a,o,s,i):-52}function Ne(e,t,r,n,a,o,s){if(b)return qe(18,1,e,t,r,n,a,o,s)}var Be=e=>{var t=Se(e)+1,r=pt(t);return r&&Ae(e,r,t),r},$e=e=>{var t=Ot();return e=e(),St(t),e};function qe(e,t){var r=arguments.length-2,n=arguments;return $e((()=>{for(var a=Et(8*r),o=a>>3,i=0;i<r;i++){var u=n[2+i];s()[o+i>>>0]=u}return mt(e,r,a,t)}))}var Ve,Je=[],Xe={},Ke=()=>{if(!Ve){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"};for(e in Xe)void 0===Xe[e]?delete t[e]:t[e]=Xe[e];var r=[];for(e in t)r.push(`${e}=${t[e]}`);Ve=r}return Ve};function Ze(e,r){if(b)return qe(19,1,e,r);e>>>=0,r>>>=0;var n=0;return Ke().forEach((function(a,s){var i=r+n;for(s=o()[e+4*s>>2>>>0]=i,i=0;i<a.length;++i)t()[s++>>0>>>0]=a.charCodeAt(i);t()[s>>0>>>0]=0,n+=a.length+1})),0}function Qe(e,t){if(b)return qe(20,1,e,t);e>>>=0,t>>>=0;var r=Ke();o()[e>>2>>>0]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),o()[t>>2>>>0]=n,0}function et(e){return b?qe(21,1,e):52}function tt(e,t,r,n){return b?qe(22,1,e,t,r,n):52}function rt(e,t,r,n,a){return b?qe(23,1,e,t,r,n,a):70}var nt=[null,[],[]];function at(e,t,r,a){if(b)return qe(24,1,e,t,r,a);t>>>=0,r>>>=0,a>>>=0;for(var s=0,i=0;i<r;i++){var u=o()[t>>2>>>0],c=o()[t+4>>2>>>0];t+=8;for(var l=0;l<c;l++){var f=n()[u+l>>>0],d=nt[e];0===f||10===f?((1===e?M:R)(le(d,0)),d.length=0):d.push(f)}s+=c}return o()[a>>2>>>0]=s,0}var ot=e=>(ot=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(v)try{var e=r(113);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}te("initRandomDevice")})())(e),st=[31,29,31,30,31,30,31,31,30,31,30,31],it=[31,28,31,30,31,30,31,31,30,31,30,31],ut=(e,r)=>{t().set(e,r>>>0)};function ct(e,t,r,n){function o(e,t,r){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=r[0]+e;return e}function s(e,t){return o(e,t,"0")}function i(e,t){function r(e){return 0>e?-1:0<e?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var t=e.Ja;for(e=new Date(new Date(e.Ka+1900,0,1).getTime());0<t;){var r=e.getMonth(),n=(Ye(e.getFullYear())?st:it)[r];if(!(t>n-e.getDate())){e.setDate(e.getDate()+t);break}t-=n-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return r=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),r=u(r),0>=i(t,e)?0>=i(r,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,r>>>=0,n>>>=0;var l=a()[n+40>>2>>>0];for(var f in n={kb:a()[n>>2>>>0],jb:a()[n+4>>2>>>0],Ma:a()[n+8>>2>>>0],Qa:a()[n+12>>2>>>0],Na:a()[n+16>>2>>>0],Ka:a()[n+20>>2>>>0],Ga:a()[n+24>>2>>>0],Ja:a()[n+28>>2>>>0],sb:a()[n+32>>2>>>0],ib:a()[n+36>>2>>>0],lb:l?fe(l):""},r=fe(r),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(f,"g"),l[f]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(f in l={"%a":e=>d[e.Ga].substring(0,3),"%A":e=>d[e.Ga],"%b":e=>p[e.Na].substring(0,3),"%B":e=>p[e.Na],"%C":e=>s((e.Ka+1900)/100|0,2),"%d":e=>s(e.Qa,2),"%e":e=>o(e.Qa,2," "),"%g":e=>c(e).toString().substring(2),"%G":e=>c(e),"%H":e=>s(e.Ma,2),"%I":e=>(0==(e=e.Ma)?e=12:12<e&&(e-=12),s(e,2)),"%j":e=>{for(var t=0,r=0;r<=e.Na-1;t+=(Ye(e.Ka+1900)?st:it)[r++]);return s(e.Qa+t,3)},"%m":e=>s(e.Na+1,2),"%M":e=>s(e.jb,2),"%n":()=>"\\n","%p":e=>0<=e.Ma&&12>e.Ma?"AM":"PM","%S":e=>s(e.kb,2),"%t":()=>"\\t","%u":e=>e.Ga||7,"%U":e=>s(Math.floor((e.Ja+7-e.Ga)/7),2),"%V":e=>{var t=Math.floor((e.Ja+7-(e.Ga+6)%7)/7);if(2>=(e.Ga+371-e.Ja-2)%7&&t++,t)53==t&&(4==(r=(e.Ga+371-e.Ja)%7)||3==r&&Ye(e.Ka)||(t=1));else{t=52;var r=(e.Ga+7-e.Ja-1)%7;(4==r||5==r&&Ye(e.Ka%400-1))&&t++}return s(t,2)},"%w":e=>e.Ga,"%W":e=>s(Math.floor((e.Ja+7-(e.Ga+6)%7)/7),2),"%y":e=>(e.Ka+1900).toString().substring(2),"%Y":e=>e.Ka+1900,"%z":e=>{var t=0<=(e=e.ib);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.lb,"%%":()=>"%"},r=r.replace(/%%/g,"\\0\\0"),l)r.includes(f)&&(r=r.replace(new RegExp(f,"g"),l[f](n)));return f=function(e){var t=Array(Se(e)+1);return Ee(e,t,0,t.length),t}(r=r.replace(/\\0\\0/g,"%")),f.length>t?0:(ut(f,e),f.length-1)}ge.Pa();var lt=[null,de,me,be,_e,Oe,Te,Me,Re,Fe,ke,Ce,xe,Pe,De,Ie,Ue,Ge,Ne,Ze,Qe,et,tt,rt,at],ft={b:function(e,t,r){throw new ve(e>>>=0).Pa(t>>>0,r>>>0),e},N:function(e){gt(e>>>0,!y,1,!m,131072,!1),ge.Sa()},k:function(e){e>>>=0,b?postMessage({cmd:"cleanupThread",thread:e}):ie(e)},I:we,h:_e,T:Oe,E:Te,G:Me,U:Re,R:Fe,J:ke,Q:Ce,o:xe,F:Pe,C:De,S:Ie,D:Ue,q:()=>!0,A:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>He())):b?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=ge.Fa[e])&&e.postMessage({cmd:"checkMailbox"})},L:function(){return-1},M:We,p:function(e){v&&ge.Fa[e>>>0].ref()},t:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),a()[r>>2>>>0]=e.getUTCSeconds(),a()[r+4>>2>>>0]=e.getUTCMinutes(),a()[r+8>>2>>>0]=e.getUTCHours(),a()[r+12>>2>>>0]=e.getUTCDate(),a()[r+16>>2>>>0]=e.getUTCMonth(),a()[r+20>>2>>>0]=e.getUTCFullYear()-1900,a()[r+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[r+28>>2>>>0]=e},u:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),a()[r>>2>>>0]=e.getSeconds(),a()[r+4>>2>>>0]=e.getMinutes(),a()[r+8>>2>>>0]=e.getHours(),a()[r+12>>2>>>0]=e.getDate(),a()[r+16>>2>>>0]=e.getMonth(),a()[r+20>>2>>>0]=e.getFullYear()-1900,a()[r+24>>2>>>0]=e.getDay(),t=(Ye(e.getFullYear())?je:ze)[e.getMonth()]+e.getDate()-1|0,a()[r+28>>2>>>0]=t,a()[r+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var n=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=n&&e.getTimezoneOffset()==Math.min(n,t)),a()[r+32>>2>>>0]=e},v:function(e){e>>>=0;var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),r=a()[e+32>>2>>>0],n=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),s=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(s,o);return 0>r?a()[e+32>>2>>>0]=Number(o!=s&&i==n):0<r!=(i==n)&&(o=Math.max(s,o),t.setTime(t.getTime()+6e4*((0<r?i:o)-n))),a()[e+24>>2>>>0]=t.getDay(),r=(Ye(t.getFullYear())?je:ze)[t.getMonth()]+t.getDate()-1|0,a()[e+28>>2>>>0]=r,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,wt((J=e,1<=+Math.abs(J)?0<J?+Math.floor(J/4294967296)>>>0:~~+Math.ceil((J-+(~~J>>>0))/4294967296)>>>0:0)),e>>>0},r:Ge,s:Ne,z:function(e,t,r){function n(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,r>>>=0;var s=(new Date).getFullYear(),i=new Date(s,0,1),u=new Date(s,6,1);s=i.getTimezoneOffset();var c=u.getTimezoneOffset(),l=Math.max(s,c);o()[e>>2>>>0]=60*l,a()[t>>2>>>0]=Number(s!=c),e=n(i),t=n(u),e=Be(e),t=Be(t),c<s?(o()[r>>2>>>0]=e,o()[r+4>>2>>>0]=t):(o()[r>>2>>>0]=t,o()[r+4>>2>>>0]=e)},c:()=>{te("")},l:function(){},i:function(){return Date.now()},V:()=>{throw $+=1,"unwind"},B:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return v?r(37).cpus().length:navigator.hardwareConcurrency},K:function(e,t,r,n){for(ge.pb=t>>>0,Je.length=r,t=n>>>0>>3,n=0;n<r;n++)Je[n]=s()[t+n>>>0];return lt[e].apply(null,Je)},y:function(e){e>>>=0;var t=n().length;if(e<=t||4294901760<e)return!1;for(var r=1;4>=r;r*=2){var a=t*(1+.2/r);a=Math.min(a,e+100663296);var o=Math;a=Math.max(e,a);e:{o=o.min.call(o,4294901760,a+(65536-a%65536)%65536)-k.buffer.byteLength+65535>>>16;try{k.grow(o),Y();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},O:Ze,P:Qe,j:pe,g:et,n:tt,w:rt,m:at,x:function(e,t){return e>>>=0,t>>>=0,ot(n().subarray(e>>>0,e+t>>>0)),0},a:k||c.wasmMemory,H:ct,d:function(e,t,r,n){return ct(e>>>0,t>>>0,r>>>0,n>>>0)}};!function(){function e(e,t){return e=e.exports,C=e=function(e){var t=e=>()=>e()>>>0,r=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=r(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=r(e.stackAlloc),e}(e),ge.Ta.push(C.sa),z=C.ta,N.unshift(C.W),x=t,ee(),e}var t={a:ft};if(Q(),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){R("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var r=V;return T||"function"!=typeof WebAssembly.instantiateStreaming||re(r)||r.startsWith("file://")||v||"function"!=typeof fetch?ae(r,e,t):fetch(r,{credentials:"same-origin"}).then((n=>WebAssembly.instantiateStreaming(n,e).then(t,(function(n){return R("wasm streaming compile failed: "+n),R("falling back to ArrayBuffer instantiation"),ae(r,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),c._OrtInit=(e,t)=>(c._OrtInit=C.X)(e,t),c._OrtGetLastError=(e,t)=>(c._OrtGetLastError=C.Y)(e,t),c._OrtCreateSessionOptions=(e,t,r,n,a,o,s,i,u,l)=>(c._OrtCreateSessionOptions=C.Z)(e,t,r,n,a,o,s,i,u,l),c._OrtAppendExecutionProvider=(e,t)=>(c._OrtAppendExecutionProvider=C._)(e,t),c._OrtAddSessionConfigEntry=(e,t,r)=>(c._OrtAddSessionConfigEntry=C.$)(e,t,r),c._OrtReleaseSessionOptions=e=>(c._OrtReleaseSessionOptions=C.aa)(e),c._OrtCreateSession=(e,t,r)=>(c._OrtCreateSession=C.ba)(e,t,r),c._OrtReleaseSession=e=>(c._OrtReleaseSession=C.ca)(e),c._OrtGetInputOutputCount=(e,t,r)=>(c._OrtGetInputOutputCount=C.da)(e,t,r),c._OrtGetInputName=(e,t)=>(c._OrtGetInputName=C.ea)(e,t),c._OrtGetOutputName=(e,t)=>(c._OrtGetOutputName=C.fa)(e,t),c._OrtFree=e=>(c._OrtFree=C.ga)(e),c._OrtCreateTensor=(e,t,r,n,a)=>(c._OrtCreateTensor=C.ha)(e,t,r,n,a),c._OrtGetTensorData=(e,t,r,n,a)=>(c._OrtGetTensorData=C.ia)(e,t,r,n,a),c._OrtReleaseTensor=e=>(c._OrtReleaseTensor=C.ja)(e),c._OrtCreateRunOptions=(e,t,r,n)=>(c._OrtCreateRunOptions=C.ka)(e,t,r,n),c._OrtAddRunConfigEntry=(e,t,r)=>(c._OrtAddRunConfigEntry=C.la)(e,t,r),c._OrtReleaseRunOptions=e=>(c._OrtReleaseRunOptions=C.ma)(e),c._OrtRun=(e,t,r,n,a,o,s,i)=>(c._OrtRun=C.na)(e,t,r,n,a,o,s,i),c._OrtEndProfiling=e=>(c._OrtEndProfiling=C.oa)(e);var dt=c._pthread_self=()=>(dt=c._pthread_self=C.pa)(),pt=c._malloc=e=>(pt=c._malloc=C.qa)(e);c._free=e=>(c._free=C.ra)(e),c.__emscripten_tls_init=()=>(c.__emscripten_tls_init=C.sa)();var gt=c.__emscripten_thread_init=(e,t,r,n,a,o)=>(gt=c.__emscripten_thread_init=C.ua)(e,t,r,n,a,o);c.__emscripten_thread_crashed=()=>(c.__emscripten_thread_crashed=C.va)();var ht,mt=(e,t,r,n)=>(mt=C.wa)(e,t,r,n),yt=e=>(yt=C.xa)(e),vt=c.__emscripten_thread_exit=e=>(vt=c.__emscripten_thread_exit=C.ya)(e),bt=c.__emscripten_check_mailbox=()=>(bt=c.__emscripten_check_mailbox=C.za)(),wt=e=>(wt=C.Aa)(e),_t=(e,t)=>(_t=C.Ba)(e,t),Ot=()=>(Ot=C.Ca)(),St=e=>(St=C.Da)(e),Et=e=>(Et=C.Ea)(e);function At(){function e(){if(!ht&&(ht=!0,c.calledRun=!0,!H)&&(b||he(N),i(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!b)){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();B.unshift(e)}he(B)}}if(!(0<X))if(b)i(c),b||he(N),startWorker(c);else{if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)G.unshift(c.preRun.shift());he(G),0<X||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),e()}),1)):e())}}if(c.keepRuntimeAlive=q,c.wasmMemory=k,c.stackAlloc=Et,c.stackSave=Ot,c.stackRestore=St,c.UTF8ToString=fe,c.stringToUTF8=Ae,c.lengthBytesUTF8=Se,c.ExitStatus=oe,c.PThread=ge,Z=function e(){ht||At(),ht||(Z=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return At(),e.ready});e.exports=n},932:(e,t,r)=>{var _scriptDir,n=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,n,a=e;a.ready=new Promise(((e,r)=>{t=e,n=r}));var o,s,i,u=Object.assign({},a),c="./this.program",l=(e,t)=>{throw t},f="object"==typeof window,d="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";if(p){var h=r(147),m=r(17);g=d?m.dirname(g)+"/":__dirname+"/",o=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),h.readFileSync(e,t?void 0:"utf8")),i=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),s=(e,t,r,n=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),h.readFile(e,n?void 0:"utf8",((e,a)=>{e?r(e):t(n?a.buffer:a)}))},!a.thisProgram&&1<process.argv.length&&(c=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),l=(e,t)=>{throw process.exitCode=e,t},a.inspect=()=>"[Emscripten Module object]"}else(f||d)&&(d?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),s=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)});var y,v=a.print||console.log.bind(console),b=a.printErr||console.error.bind(console);Object.assign(a,u),u=null,a.thisProgram&&(c=a.thisProgram),a.quit&&(l=a.quit),a.wasmBinary&&(y=a.wasmBinary);var w=a.noExitRuntime||!0;"object"!=typeof WebAssembly&&W("no native wasm support detected");var _,O,S,E,A,T,M=!1;function R(){var e=_.buffer;a.HEAP8=S=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=A=new Int32Array(e),a.HEAPU8=E=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=T=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}var F=[],k=[],C=[];function x(){var e=a.preRun.shift();F.unshift(e)}var P,D,I=0,U=null,L=null;function W(e){throw a.onAbort&&a.onAbort(e),b(e="Aborted("+e+")"),M=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),n(e),e}function H(e){return e.startsWith("data:application/octet-stream;base64,")}if(!H(P="ort-wasm.wasm")){var Y=P;P=a.locateFile?a.locateFile(Y,g):g+Y}function j(e){if(e==P&&y)return new Uint8Array(y);if(i)return i(e);throw"both async and sync fetching of the wasm failed"}function z(e,t,r){return function(e){if(!y&&(f||d)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>j(e)));if(s)return new Promise(((t,r)=>{s(e,(e=>t(new Uint8Array(e))),r)}))}return Promise.resolve().then((()=>j(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(r,(e=>{b("failed to asynchronously prepare wasm: "+e),W(e)}))}function G(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var N=e=>{for(;0<e.length;)e.shift()(a)};function B(e){this.qa=e-24,this.va=function(e){T[this.qa+4>>2>>>0]=e},this.ua=function(e){T[this.qa+8>>2>>>0]=e},this.sa=function(e,t){this.ta(),this.va(e),this.ua(t)},this.ta=function(){T[this.qa+16>>2>>>0]=0}}var $,q="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,V=(e,t,r)=>{var n=(t>>>=0)+r;for(r=t;e[r]&&!(r>=n);)++r;if(16<r-t&&e.buffer&&q)return q.decode(e.subarray(t,r));for(n="";t<r;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))n+=String.fromCharCode((31&a)<<6|o);else{var s=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|s:(7&a)<<18|o<<12|s<<6|63&e[t++])?n+=String.fromCharCode(a):(a-=65536,n+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else n+=String.fromCharCode(a)}return n},J=(e,t)=>(e>>>=0)?V(E,e,t):"",X=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);127>=n?t++:2047>=n?t+=2:55296<=n&&57343>=n?(t+=4,++r):t+=3}return t},K=(e,t,r,n)=>{if(!(0<n))return 0;var a=r>>>=0;n=r+n-1;for(var o=0;o<e.length;++o){var s=e.charCodeAt(o);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++o)),127>=s){if(r>=n)break;t[r++>>>0]=s}else{if(2047>=s){if(r+1>=n)break;t[r++>>>0]=192|s>>6}else{if(65535>=s){if(r+2>=n)break;t[r++>>>0]=224|s>>12}else{if(r+3>=n)break;t[r++>>>0]=240|s>>18,t[r++>>>0]=128|s>>12&63}t[r++>>>0]=128|s>>6&63}t[r++>>>0]=128|63&s}}return t[r>>>0]=0,r-a},Z=e=>0==e%4&&(0!=e%100||0==e%400),Q=[0,31,60,91,121,152,182,213,244,274,305,335],ee=[0,31,59,90,120,151,181,212,243,273,304,334],te=e=>{var t=X(e)+1,r=le(t);return r&&K(e,E,r,t),r},re={},ne=()=>{if(!$){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:c||"./this.program"};for(e in re)void 0===re[e]?delete t[e]:t[e]=re[e];var r=[];for(e in t)r.push(`${e}=${t[e]}`);$=r}return $},ae=[null,[],[]],oe=e=>(oe=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>crypto.getRandomValues(e);if(p)try{var e=r(113);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}W("initRandomDevice")})())(e),se=[31,29,31,30,31,30,31,31,30,31,30,31],ie=[31,28,31,30,31,30,31,31,30,31,30,31];function ue(e,t,r,n){function a(e,t,r){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=r[0]+e;return e}function o(e,t){return a(e,t,"0")}function s(e,t){function r(e){return 0>e?-1:0<e?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function i(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.ma;for(e=new Date(new Date(e.na+1900,0,1).getTime());0<t;){var r=e.getMonth(),n=(Z(e.getFullYear())?se:ie)[r];if(!(t>n-e.getDate())){e.setDate(e.getDate()+t);break}t-=n-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return r=new Date(e.getFullYear()+1,0,4),t=i(new Date(e.getFullYear(),0,4)),r=i(r),0>=s(t,e)?0>=s(r,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,r>>>=0;var c=A[40+(n>>>=0)>>2>>>0];for(var l in n={ya:A[n>>2>>>0],xa:A[n+4>>2>>>0],oa:A[n+8>>2>>>0],ra:A[n+12>>2>>>0],pa:A[n+16>>2>>>0],na:A[n+20>>2>>>0],ha:A[n+24>>2>>>0],ma:A[n+28>>2>>>0],Aa:A[n+32>>2>>>0],wa:A[n+36>>2>>>0],za:c?J(c):""},r=J(r),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(l,"g"),c[l]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),d="January February March April May June July August September October November December".split(" ");for(l in c={"%a":e=>f[e.ha].substring(0,3),"%A":e=>f[e.ha],"%b":e=>d[e.pa].substring(0,3),"%B":e=>d[e.pa],"%C":e=>o((e.na+1900)/100|0,2),"%d":e=>o(e.ra,2),"%e":e=>a(e.ra,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>o(e.oa,2),"%I":e=>(0==(e=e.oa)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,r=0;r<=e.pa-1;t+=(Z(e.na+1900)?se:ie)[r++]);return o(e.ra+t,3)},"%m":e=>o(e.pa+1,2),"%M":e=>o(e.xa,2),"%n":()=>"\\n","%p":e=>0<=e.oa&&12>e.oa?"AM":"PM","%S":e=>o(e.ya,2),"%t":()=>"\\t","%u":e=>e.ha||7,"%U":e=>o(Math.floor((e.ma+7-e.ha)/7),2),"%V":e=>{var t=Math.floor((e.ma+7-(e.ha+6)%7)/7);if(2>=(e.ha+371-e.ma-2)%7&&t++,t)53==t&&(4==(r=(e.ha+371-e.ma)%7)||3==r&&Z(e.na)||(t=1));else{t=52;var r=(e.ha+7-e.ma-1)%7;(4==r||5==r&&Z(e.na%400-1))&&t++}return o(t,2)},"%w":e=>e.ha,"%W":e=>o(Math.floor((e.ma+7-(e.ha+6)%7)/7),2),"%y":e=>(e.na+1900).toString().substring(2),"%Y":e=>e.na+1900,"%z":e=>{var t=0<=(e=e.wa);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.za,"%%":()=>"%"},r=r.replace(/%%/g,"\\0\\0"),c)r.includes(l)&&(r=r.replace(new RegExp(l,"g"),c[l](n)));return l=function(e){var t=Array(X(e)+1);return K(e,t,0,t.length),t}(r=r.replace(/\\0\\0/g,"%")),l.length>t?0:(S.set(l,e>>>0),l.length-1)}var ce={a:function(e,t,r){throw new B(e>>>=0).sa(t>>>0,r>>>0),e},e:function(){return 0},I:function(){},y:function(){},A:function(){},K:function(){return 0},G:function(){},B:function(){},F:function(){},g:function(){},z:function(){},w:function(){},H:function(){},x:function(){},k:()=>!0,n:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),A[r>>2>>>0]=e.getUTCSeconds(),A[r+4>>2>>>0]=e.getUTCMinutes(),A[r+8>>2>>>0]=e.getUTCHours(),A[r+12>>2>>>0]=e.getUTCDate(),A[r+16>>2>>>0]=e.getUTCMonth(),A[r+20>>2>>>0]=e.getUTCFullYear()-1900,A[r+24>>2>>>0]=e.getUTCDay(),A[r+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),A[r>>2>>>0]=e.getSeconds(),A[r+4>>2>>>0]=e.getMinutes(),A[r+8>>2>>>0]=e.getHours(),A[r+12>>2>>>0]=e.getDate(),A[r+16>>2>>>0]=e.getMonth(),A[r+20>>2>>>0]=e.getFullYear()-1900,A[r+24>>2>>>0]=e.getDay(),A[r+28>>2>>>0]=(Z(e.getFullYear())?Q:ee)[e.getMonth()]+e.getDate()-1|0,A[r+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var n=new Date(e.getFullYear(),0,1).getTimezoneOffset();A[r+32>>2>>>0]=0|(t!=n&&e.getTimezoneOffset()==Math.min(n,t))},p:function(e){e>>>=0;var t=new Date(A[e+20>>2>>>0]+1900,A[e+16>>2>>>0],A[e+12>>2>>>0],A[e+8>>2>>>0],A[e+4>>2>>>0],A[e>>2>>>0],0),r=A[e+32>>2>>>0],n=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(o,a);return 0>r?A[e+32>>2>>>0]=Number(a!=o&&s==n):0<r!=(s==n)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<r?s:a)-n))),A[e+24>>2>>>0]=t.getDay(),A[e+28>>2>>>0]=(Z(t.getFullYear())?Q:ee)[t.getMonth()]+t.getDate()-1|0,A[e>>2>>>0]=t.getSeconds(),A[e+4>>2>>>0]=t.getMinutes(),A[e+8>>2>>>0]=t.getHours(),A[e+12>>2>>>0]=t.getDate(),A[e+16>>2>>>0]=t.getMonth(),A[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,de((D=e,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)),e>>>0},l:function(){return-52},m:function(){},u:function(e,t,r){function n(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}r>>>=0;var a=(new Date).getFullYear(),o=new Date(a,0,1),s=new Date(a,6,1);a=o.getTimezoneOffset();var i=s.getTimezoneOffset();T[e>>>0>>2>>>0]=60*Math.max(a,i),A[t>>>0>>2>>>0]=Number(a!=i),e=n(o),t=n(s),e=te(e),t=te(t),i<a?(T[r>>2>>>0]=e,T[r+4>>2>>>0]=t):(T[r>>2>>>0]=t,T[r+4>>2>>>0]=e)},d:()=>{W("")},h:function(){return Date.now()},v:function(){return 4294901760},b:()=>performance.now(),J:function(e,t,r){return t>>>=0,E.copyWithin(e>>>0>>>0,t>>>0,t+(r>>>0)>>>0)},t:function(e){e>>>=0;var t=E.length;if(4294901760<e)return!1;for(var r=1;4>=r;r*=2){var n=t*(1+.2/r);n=Math.min(n,e+100663296);var a=Math;n=Math.max(e,n);e:{a=a.min.call(a,4294901760,n+(65536-n%65536)%65536)-_.buffer.byteLength+65535>>>16;try{_.grow(a),R();var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},D:function(e,t){e>>>=0,t>>>=0;var r=0;return ne().forEach((function(n,a){var o=t+r;for(a=T[e+4*a>>2>>>0]=o,o=0;o<n.length;++o)S[a++>>0>>>0]=n.charCodeAt(o);S[a>>0>>>0]=0,r+=n.length+1})),0},E:function(e,t){e>>>=0,t>>>=0;var r=ne();T[e>>2>>>0]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),T[t>>2>>>0]=n,0},s:e=>{w||(a.onExit&&a.onExit(e),M=!0),l(e,new G(e))},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(e,t,r,n){t>>>=0,r>>>=0,n>>>=0;for(var a=0,o=0;o<r;o++){var s=T[t>>2>>>0],i=T[t+4>>2>>>0];t+=8;for(var u=0;u<i;u++){var c=E[s+u>>>0],l=ae[e];0===c||10===c?((1===e?v:b)(V(l,0)),l.length=0):l.push(c)}a+=i}return T[n>>2>>>0]=a,0},r:function(e,t){return e>>>=0,oe(E.subarray(e>>>0,e+(t>>>0)>>>0)),0},C:ue,c:function(e,t,r,n){return ue(e>>>0,t>>>0,r>>>0,n>>>0)}};!function(){function e(e){if(e=e.exports,O=e=function(e){var t=e=>()=>e()>>>0,r=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=r(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=r(e.stackAlloc),e}(e),_=O.L,R(),k.unshift(O.M),I--,a.monitorRunDependencies&&a.monitorRunDependencies(I),0==I&&(null!==U&&(clearInterval(U),U=null),L)){var t=L;L=null,t()}return e}var t={a:ce};if(I++,a.monitorRunDependencies&&a.monitorRunDependencies(I),a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(e){b("Module.instantiateWasm callback failed with error: "+e),n(e)}(function(e,t){var r=P;return y||"function"!=typeof WebAssembly.instantiateStreaming||H(r)||r.startsWith("file://")||p||"function"!=typeof fetch?z(r,e,t):fetch(r,{credentials:"same-origin"}).then((n=>WebAssembly.instantiateStreaming(n,e).then(t,(function(n){return b("wasm streaming compile failed: "+n),b("falling back to ArrayBuffer instantiation"),z(r,e,t)}))))})(t,(function(t){e(t.instance)})).catch(n)}(),a._OrtInit=(e,t)=>(a._OrtInit=O.N)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=O.O)(e,t),a._OrtCreateSessionOptions=(e,t,r,n,o,s,i,u,c,l)=>(a._OrtCreateSessionOptions=O.P)(e,t,r,n,o,s,i,u,c,l),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=O.Q)(e,t),a._OrtAddSessionConfigEntry=(e,t,r)=>(a._OrtAddSessionConfigEntry=O.R)(e,t,r),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=O.S)(e),a._OrtCreateSession=(e,t,r)=>(a._OrtCreateSession=O.T)(e,t,r),a._OrtReleaseSession=e=>(a._OrtReleaseSession=O.U)(e),a._OrtGetInputOutputCount=(e,t,r)=>(a._OrtGetInputOutputCount=O.V)(e,t,r),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=O.W)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=O.X)(e,t),a._OrtFree=e=>(a._OrtFree=O.Y)(e),a._OrtCreateTensor=(e,t,r,n,o)=>(a._OrtCreateTensor=O.Z)(e,t,r,n,o),a._OrtGetTensorData=(e,t,r,n,o)=>(a._OrtGetTensorData=O._)(e,t,r,n,o),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=O.$)(e),a._OrtCreateRunOptions=(e,t,r,n)=>(a._OrtCreateRunOptions=O.aa)(e,t,r,n),a._OrtAddRunConfigEntry=(e,t,r)=>(a._OrtAddRunConfigEntry=O.ba)(e,t,r),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=O.ca)(e),a._OrtRun=(e,t,r,n,o,s,i,u)=>(a._OrtRun=O.da)(e,t,r,n,o,s,i,u),a._OrtEndProfiling=e=>(a._OrtEndProfiling=O.ea)(e);var le=a._malloc=e=>(le=a._malloc=O.fa)(e);a._free=e=>(a._free=O.ga)(e);var fe,de=e=>(de=O.ia)(e),pe=()=>(pe=O.ja)(),ge=e=>(ge=O.ka)(e),he=e=>(he=O.la)(e);function me(){function e(){if(!fe&&(fe=!0,a.calledRun=!0,!M)){if(N(k),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;){var e=a.postRun.shift();C.unshift(e)}N(C)}}if(!(0<I)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)x();N(F),0<I||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),e()}),1)):e())}}if(a.stackAlloc=he,a.stackSave=pe,a.stackRestore=ge,a.UTF8ToString=J,a.stringToUTF8=(e,t,r)=>K(e,E,t,r),a.lengthBytesUTF8=X,L=function e(){fe||me(),fe||(L=e)},a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return me(),e.ready});e.exports=n},154:e=>{"use strict";e.exports=\'"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\n\'},113:e=>{"use strict";e.exports=require("crypto")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")},74:e=>{"use strict";e.exports=require("perf_hooks")},267:e=>{"use strict";e.exports=require("worker_threads")}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(()=>{"use strict";const e=r(259),t=r(263);self.onmessage=r=>{switch(r.data.type){case"init-wasm":try{(0,t.initializeWebAssembly)(r.data.in).then((()=>postMessage({type:"init-wasm"})),(e=>postMessage({type:"init-wasm",err:e})))}catch(e){postMessage({type:"init-wasm",err:e})}break;case"init-ort":try{(0,e.initRuntime)(r.data.in).then((()=>postMessage({type:"init-ort"})),(e=>postMessage({type:"init-ort",err:e}))),postMessage({type:"init-ort"})}catch(e){postMessage({type:"init-ort",err:e})}break;case"create_allocate":try{const{model:t}=r.data.in,n=(0,e.createSessionAllocate)(t);postMessage({type:"create_allocate",out:n})}catch(e){postMessage({type:"create_allocate",err:e})}break;case"create_finalize":try{const{modeldata:t,options:n}=r.data.in,a=(0,e.createSessionFinalize)(t,n);postMessage({type:"create_finalize",out:a})}catch(e){postMessage({type:"create_finalize",err:e})}break;case"create":try{const{model:t,options:n}=r.data.in,a=(0,e.createSession)(t,n);postMessage({type:"create",out:a})}catch(e){postMessage({type:"create",err:e})}break;case"release":try{const t=r.data.in;(0,e.releaseSession)(t),postMessage({type:"release"})}catch(e){postMessage({type:"release",err:e})}break;case"run":try{const{sessionId:t,inputIndices:n,inputs:a,outputIndices:o,options:s}=r.data.in;(0,e.run)(t,n,a,o,s).then((t=>{postMessage({type:"run",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:"run",err:e})}))}catch(e){postMessage({type:"run",err:e})}break;case"end-profiling":try{const t=r.data.in;(0,e.endProfiling)(t),postMessage({type:"end-profiling"})}catch(e){postMessage({type:"end-profiling",err:e})}}}})()})();\n', 'Worker', undefined, undefined);
          }
        },
        6614: _module => {
          "use strict";

          _module.exports = function (e, t, n, r) {
            var o = self || window;
            try {
              try {
                var s;
                try {
                  s = new o.Blob([e]);
                } catch (t) {
                  (s = new (o.BlobBuilder || o.WebKitBlobBuilder || o.MozBlobBuilder || o.MSBlobBuilder)()).append(e);
                  s = s.getBlob();
                }
                var a = o.URL || o.webkitURL;
                var A = a.createObjectURL(s);
                var c = new o[t](A, n);
                a.revokeObjectURL(A);
                return c;
              } catch (r) {
                return new o[t](`data:application/javascript,${encodeURIComponent(e)}`, n);
              }
            } catch (e) {
              if (!r) {
                throw Error('Inline worker is not supported');
              }
              return new o[t](r, n);
            }
          };
        },
        2446: (_module, _exports, _require) => {
          "use strict";

          var r;
          var o;
          var s;
          var a = _require(2100);
          var A = a.Reader;
          var c = a.Writer;
          var u = a.util;
          var l = a.roots.default ||= {};
          (s = {}).Version = (r = {}, (o = Object.create(r))[r[0] = '_START_VERSION'] = 0, o[r[1] = 'IR_VERSION_2017_10_10'] = 1, o[r[2] = 'IR_VERSION_2017_10_30'] = 2, o[r[3] = 'IR_VERSION_2017_11_3'] = 3, o[r[4] = 'IR_VERSION_2019_1_22'] = 4, o[r[5] = 'IR_VERSION_2019_3_18'] = 5, o[r[6] = 'IR_VERSION_2019_9_19'] = 6, o[r[7] = 'IR_VERSION_2020_5_8'] = 7, o[r[8] = 'IR_VERSION_2021_7_30'] = 8, o[r[9] = 'IR_VERSION'] = 9, o);
          s.AttributeProto = function () {
            function e(e) {
              this.floats = [];
              this.ints = [];
              this.strings = [];
              this.tensors = [];
              this.graphs = [];
              this.sparseTensors = [];
              this.typeProtos = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.name = '';
            e.prototype.refAttrName = '';
            e.prototype.docString = '';
            e.prototype.type = 0;
            e.prototype.f = 0;
            e.prototype.i = u.Long ? u.Long.fromBits(0, 0, false) : 0;
            e.prototype.s = u.newBuffer([]);
            e.prototype.t = null;
            e.prototype.g = null;
            e.prototype.sparseTensor = null;
            e.prototype.tp = null;
            e.prototype.floats = u.emptyArray;
            e.prototype.ints = u.emptyArray;
            e.prototype.strings = u.emptyArray;
            e.prototype.tensors = u.emptyArray;
            e.prototype.graphs = u.emptyArray;
            e.prototype.sparseTensors = u.emptyArray;
            e.prototype.typeProtos = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(10).string(e.name);
              }
              if (e.f != null && Object.hasOwnProperty.call(e, 'f')) {
                t.uint32(21).float(e.f);
              }
              if (e.i != null && Object.hasOwnProperty.call(e, 'i')) {
                t.uint32(24).int64(e.i);
              }
              if (e.s != null && Object.hasOwnProperty.call(e, 's')) {
                t.uint32(34).bytes(e.s);
              }
              if (e.t != null && Object.hasOwnProperty.call(e, 't')) {
                l.onnx.TensorProto.encode(e.t, t.uint32(42).fork()).ldelim();
              }
              if (e.g != null && Object.hasOwnProperty.call(e, 'g')) {
                l.onnx.GraphProto.encode(e.g, t.uint32(50).fork()).ldelim();
              }
              if (e.floats != null && e.floats.length) {
                t.uint32(58).fork();
                for (var n = 0; n < e.floats.length; ++n) {
                  t.float(e.floats[n]);
                }
                t.ldelim();
              }
              if (e.ints != null && e.ints.length) {
                t.uint32(66).fork();
                n = 0;
                for (; n < e.ints.length; ++n) {
                  t.int64(e.ints[n]);
                }
                t.ldelim();
              }
              if (e.strings != null && e.strings.length) {
                for (n = 0; n < e.strings.length; ++n) {
                  t.uint32(74).bytes(e.strings[n]);
                }
              }
              if (e.tensors != null && e.tensors.length) {
                for (n = 0; n < e.tensors.length; ++n) {
                  l.onnx.TensorProto.encode(e.tensors[n], t.uint32(82).fork()).ldelim();
                }
              }
              if (e.graphs != null && e.graphs.length) {
                for (n = 0; n < e.graphs.length; ++n) {
                  l.onnx.GraphProto.encode(e.graphs[n], t.uint32(90).fork()).ldelim();
                }
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(106).string(e.docString);
              }
              if (e.tp != null && Object.hasOwnProperty.call(e, 'tp')) {
                l.onnx.TypeProto.encode(e.tp, t.uint32(114).fork()).ldelim();
              }
              if (e.typeProtos != null && e.typeProtos.length) {
                for (n = 0; n < e.typeProtos.length; ++n) {
                  l.onnx.TypeProto.encode(e.typeProtos[n], t.uint32(122).fork()).ldelim();
                }
              }
              if (e.type != null && Object.hasOwnProperty.call(e, 'type')) {
                t.uint32(160).int32(e.type);
              }
              if (e.refAttrName != null && Object.hasOwnProperty.call(e, 'refAttrName')) {
                t.uint32(170).string(e.refAttrName);
              }
              if (e.sparseTensor != null && Object.hasOwnProperty.call(e, 'sparseTensor')) {
                l.onnx.SparseTensorProto.encode(e.sparseTensor, t.uint32(178).fork()).ldelim();
              }
              if (e.sparseTensors != null && e.sparseTensors.length) {
                for (n = 0; n < e.sparseTensors.length; ++n) {
                  l.onnx.SparseTensorProto.encode(e.sparseTensors[n], t.uint32(186).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.AttributeProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.name = e.string();
                    break;
                  case 21:
                    r.refAttrName = e.string();
                    break;
                  case 13:
                    r.docString = e.string();
                    break;
                  case 20:
                    r.type = e.int32();
                    break;
                  case 2:
                    r.f = e.float();
                    break;
                  case 3:
                    r.i = e.int64();
                    break;
                  case 4:
                    r.s = e.bytes();
                    break;
                  case 5:
                    r.t = l.onnx.TensorProto.decode(e, e.uint32());
                    break;
                  case 6:
                    r.g = l.onnx.GraphProto.decode(e, e.uint32());
                    break;
                  case 22:
                    r.sparseTensor = l.onnx.SparseTensorProto.decode(e, e.uint32());
                    break;
                  case 14:
                    r.tp = l.onnx.TypeProto.decode(e, e.uint32());
                    break;
                  case 7:
                    if (!r.floats || !r.floats.length) {
                      r.floats = [];
                    }
                    if ((o & 7) == 2) {
                      for (var s = e.uint32() + e.pos; e.pos < s;) {
                        r.floats.push(e.float());
                      }
                    } else {
                      r.floats.push(e.float());
                    }
                    break;
                  case 8:
                    if (!r.ints || !r.ints.length) {
                      r.ints = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.ints.push(e.int64());
                      }
                    } else {
                      r.ints.push(e.int64());
                    }
                    break;
                  case 9:
                    if (!r.strings || !r.strings.length) {
                      r.strings = [];
                    }
                    r.strings.push(e.bytes());
                    break;
                  case 10:
                    if (!r.tensors || !r.tensors.length) {
                      r.tensors = [];
                    }
                    r.tensors.push(l.onnx.TensorProto.decode(e, e.uint32()));
                    break;
                  case 11:
                    if (!r.graphs || !r.graphs.length) {
                      r.graphs = [];
                    }
                    r.graphs.push(l.onnx.GraphProto.decode(e, e.uint32()));
                    break;
                  case 23:
                    if (!r.sparseTensors || !r.sparseTensors.length) {
                      r.sparseTensors = [];
                    }
                    r.sparseTensors.push(l.onnx.SparseTensorProto.decode(e, e.uint32()));
                    break;
                  case 15:
                    if (!r.typeProtos || !r.typeProtos.length) {
                      r.typeProtos = [];
                    }
                    r.typeProtos.push(l.onnx.TypeProto.decode(e, e.uint32()));
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.refAttrName != null && e.hasOwnProperty('refAttrName') && !u.isString(e.refAttrName)) {
                return 'refAttrName: string expected';
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              }
              if (e.type != null && e.hasOwnProperty('type')) {
                switch (e.type) {
                  default:
                    return 'type: enum value expected';
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                  case 4:
                  case 5:
                  case 11:
                  case 13:
                  case 6:
                  case 7:
                  case 8:
                  case 9:
                  case 10:
                  case 12:
                  case 14:
                }
              }
              if (e.f != null && e.hasOwnProperty('f') && typeof e.f != 'number') {
                return 'f: number expected';
              }
              if (e.i != null && e.hasOwnProperty('i') && !u.isInteger(e.i) && (!e.i || !u.isInteger(e.i.low) || !u.isInteger(e.i.high))) {
                return 'i: integer|Long expected';
              }
              if (e.s != null && e.hasOwnProperty('s') && (!e.s || typeof e.s.length != 'number') && !u.isString(e.s)) {
                return 's: buffer expected';
              }
              if (e.t != null && e.hasOwnProperty('t') && (n = l.onnx.TensorProto.verify(e.t))) {
                return `t.${n}`;
              }
              if (e.g != null && e.hasOwnProperty('g') && (n = l.onnx.GraphProto.verify(e.g))) {
                return `g.${n}`;
              }
              if (e.sparseTensor != null && e.hasOwnProperty('sparseTensor') && (n = l.onnx.SparseTensorProto.verify(e.sparseTensor))) {
                return `sparseTensor.${n}`;
              }
              if (e.tp != null && e.hasOwnProperty('tp') && (n = l.onnx.TypeProto.verify(e.tp))) {
                return `tp.${n}`;
              }
              if (e.floats != null && e.hasOwnProperty('floats')) {
                if (!Array.isArray(e.floats)) {
                  return 'floats: array expected';
                }
                for (var t = 0; t < e.floats.length; ++t) {
                  if (typeof e.floats[t] != 'number') {
                    return 'floats: number[] expected';
                  }
                }
              }
              if (e.ints != null && e.hasOwnProperty('ints')) {
                if (!Array.isArray(e.ints)) {
                  return 'ints: array expected';
                }
                for (t = 0; t < e.ints.length; ++t) {
                  if (!u.isInteger(e.ints[t]) && (!e.ints[t] || !u.isInteger(e.ints[t].low) || !u.isInteger(e.ints[t].high))) {
                    return 'ints: integer|Long[] expected';
                  }
                }
              }
              if (e.strings != null && e.hasOwnProperty('strings')) {
                if (!Array.isArray(e.strings)) {
                  return 'strings: array expected';
                }
                for (t = 0; t < e.strings.length; ++t) {
                  if ((!e.strings[t] || typeof e.strings[t].length != 'number') && !u.isString(e.strings[t])) {
                    return 'strings: buffer[] expected';
                  }
                }
              }
              if (e.tensors != null && e.hasOwnProperty('tensors')) {
                if (!Array.isArray(e.tensors)) {
                  return 'tensors: array expected';
                }
                for (t = 0; t < e.tensors.length; ++t) {
                  if (n = l.onnx.TensorProto.verify(e.tensors[t])) {
                    return `tensors.${n}`;
                  }
                }
              }
              if (e.graphs != null && e.hasOwnProperty('graphs')) {
                if (!Array.isArray(e.graphs)) {
                  return 'graphs: array expected';
                }
                for (t = 0; t < e.graphs.length; ++t) {
                  if (n = l.onnx.GraphProto.verify(e.graphs[t])) {
                    return `graphs.${n}`;
                  }
                }
              }
              if (e.sparseTensors != null && e.hasOwnProperty('sparseTensors')) {
                if (!Array.isArray(e.sparseTensors)) {
                  return 'sparseTensors: array expected';
                }
                for (t = 0; t < e.sparseTensors.length; ++t) {
                  if (n = l.onnx.SparseTensorProto.verify(e.sparseTensors[t])) {
                    return `sparseTensors.${n}`;
                  }
                }
              }
              if (e.typeProtos != null && e.hasOwnProperty('typeProtos')) {
                if (!Array.isArray(e.typeProtos)) {
                  return 'typeProtos: array expected';
                }
                for (t = 0; t < e.typeProtos.length; ++t) {
                  var n;
                  if (n = l.onnx.TypeProto.verify(e.typeProtos[t])) {
                    return `typeProtos.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.AttributeProto) {
                return e;
              }
              var t = new l.onnx.AttributeProto();
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.refAttrName != null) {
                t.refAttrName = String(e.refAttrName);
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              switch (e.type) {
                default:
                  if (typeof e.type == 'number') {
                    t.type = e.type;
                    break;
                  }
                  break;
                case 'UNDEFINED':
                case 0:
                  t.type = 0;
                  break;
                case 'FLOAT':
                case 1:
                  t.type = 1;
                  break;
                case 'INT':
                case 2:
                  t.type = 2;
                  break;
                case 'STRING':
                case 3:
                  t.type = 3;
                  break;
                case 'TENSOR':
                case 4:
                  t.type = 4;
                  break;
                case 'GRAPH':
                case 5:
                  t.type = 5;
                  break;
                case 'SPARSE_TENSOR':
                case 11:
                  t.type = 11;
                  break;
                case 'TYPE_PROTO':
                case 13:
                  t.type = 13;
                  break;
                case 'FLOATS':
                case 6:
                  t.type = 6;
                  break;
                case 'INTS':
                case 7:
                  t.type = 7;
                  break;
                case 'STRINGS':
                case 8:
                  t.type = 8;
                  break;
                case 'TENSORS':
                case 9:
                  t.type = 9;
                  break;
                case 'GRAPHS':
                case 10:
                  t.type = 10;
                  break;
                case 'SPARSE_TENSORS':
                case 12:
                  t.type = 12;
                  break;
                case 'TYPE_PROTOS':
                case 14:
                  t.type = 14;
              }
              if (e.f != null) {
                t.f = Number(e.f);
              }
              if (e.i != null) {
                if (u.Long) {
                  (t.i = u.Long.fromValue(e.i)).unsigned = false;
                } else {
                  if (typeof e.i == 'string') {
                    t.i = parseInt(e.i, 10);
                  } else {
                    if (typeof e.i == 'number') {
                      t.i = e.i;
                    } else {
                      if (typeof e.i == 'object') {
                        t.i = new u.LongBits(e.i.low >>> 0, e.i.high >>> 0).toNumber();
                      }
                    }
                  }
                }
              }
              if (e.s != null) {
                if (typeof e.s == 'string') {
                  u.base64.decode(e.s, t.s = u.newBuffer(u.base64.length(e.s)), 0);
                } else {
                  if (e.s.length >= 0) {
                    t.s = e.s;
                  }
                }
              }
              if (e.t != null) {
                if (typeof e.t != 'object') {
                  throw TypeError('.onnx.AttributeProto.t: object expected');
                }
                t.t = l.onnx.TensorProto.fromObject(e.t);
              }
              if (e.g != null) {
                if (typeof e.g != 'object') {
                  throw TypeError('.onnx.AttributeProto.g: object expected');
                }
                t.g = l.onnx.GraphProto.fromObject(e.g);
              }
              if (e.sparseTensor != null) {
                if (typeof e.sparseTensor != 'object') {
                  throw TypeError('.onnx.AttributeProto.sparseTensor: object expected');
                }
                t.sparseTensor = l.onnx.SparseTensorProto.fromObject(e.sparseTensor);
              }
              if (e.tp != null) {
                if (typeof e.tp != 'object') {
                  throw TypeError('.onnx.AttributeProto.tp: object expected');
                }
                t.tp = l.onnx.TypeProto.fromObject(e.tp);
              }
              if (e.floats) {
                if (!Array.isArray(e.floats)) {
                  throw TypeError('.onnx.AttributeProto.floats: array expected');
                }
                t.floats = [];
                for (var n = 0; n < e.floats.length; ++n) {
                  t.floats[n] = Number(e.floats[n]);
                }
              }
              if (e.ints) {
                if (!Array.isArray(e.ints)) {
                  throw TypeError('.onnx.AttributeProto.ints: array expected');
                }
                t.ints = [];
                n = 0;
                for (; n < e.ints.length; ++n) {
                  if (u.Long) {
                    (t.ints[n] = u.Long.fromValue(e.ints[n])).unsigned = false;
                  } else {
                    if (typeof e.ints[n] == 'string') {
                      t.ints[n] = parseInt(e.ints[n], 10);
                    } else {
                      if (typeof e.ints[n] == 'number') {
                        t.ints[n] = e.ints[n];
                      } else {
                        if (typeof e.ints[n] == 'object') {
                          t.ints[n] = new u.LongBits(e.ints[n].low >>> 0, e.ints[n].high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
              }
              if (e.strings) {
                if (!Array.isArray(e.strings)) {
                  throw TypeError('.onnx.AttributeProto.strings: array expected');
                }
                t.strings = [];
                n = 0;
                for (; n < e.strings.length; ++n) {
                  if (typeof e.strings[n] == 'string') {
                    u.base64.decode(e.strings[n], t.strings[n] = u.newBuffer(u.base64.length(e.strings[n])), 0);
                  } else {
                    if (e.strings[n].length >= 0) {
                      t.strings[n] = e.strings[n];
                    }
                  }
                }
              }
              if (e.tensors) {
                if (!Array.isArray(e.tensors)) {
                  throw TypeError('.onnx.AttributeProto.tensors: array expected');
                }
                t.tensors = [];
                n = 0;
                for (; n < e.tensors.length; ++n) {
                  if (typeof e.tensors[n] != 'object') {
                    throw TypeError('.onnx.AttributeProto.tensors: object expected');
                  }
                  t.tensors[n] = l.onnx.TensorProto.fromObject(e.tensors[n]);
                }
              }
              if (e.graphs) {
                if (!Array.isArray(e.graphs)) {
                  throw TypeError('.onnx.AttributeProto.graphs: array expected');
                }
                t.graphs = [];
                n = 0;
                for (; n < e.graphs.length; ++n) {
                  if (typeof e.graphs[n] != 'object') {
                    throw TypeError('.onnx.AttributeProto.graphs: object expected');
                  }
                  t.graphs[n] = l.onnx.GraphProto.fromObject(e.graphs[n]);
                }
              }
              if (e.sparseTensors) {
                if (!Array.isArray(e.sparseTensors)) {
                  throw TypeError('.onnx.AttributeProto.sparseTensors: array expected');
                }
                t.sparseTensors = [];
                n = 0;
                for (; n < e.sparseTensors.length; ++n) {
                  if (typeof e.sparseTensors[n] != 'object') {
                    throw TypeError('.onnx.AttributeProto.sparseTensors: object expected');
                  }
                  t.sparseTensors[n] = l.onnx.SparseTensorProto.fromObject(e.sparseTensors[n]);
                }
              }
              if (e.typeProtos) {
                if (!Array.isArray(e.typeProtos)) {
                  throw TypeError('.onnx.AttributeProto.typeProtos: array expected');
                }
                t.typeProtos = [];
                n = 0;
                for (; n < e.typeProtos.length; ++n) {
                  if (typeof e.typeProtos[n] != 'object') {
                    throw TypeError('.onnx.AttributeProto.typeProtos: object expected');
                  }
                  t.typeProtos[n] = l.onnx.TypeProto.fromObject(e.typeProtos[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.floats = [];
                n.ints = [];
                n.strings = [];
                n.tensors = [];
                n.graphs = [];
                n.typeProtos = [];
                n.sparseTensors = [];
              }
              if (t.defaults) {
                n.name = '';
                n.f = 0;
                if (u.Long) {
                  var r = new u.Long(0, 0, false);
                  n.i = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                } else {
                  n.i = t.longs === String ? '0' : 0;
                }
                if (t.bytes === String) {
                  n.s = '';
                } else {
                  n.s = [];
                  if (t.bytes !== Array) {
                    n.s = u.newBuffer(n.s);
                  }
                }
                n.t = null;
                n.g = null;
                n.docString = '';
                n.tp = null;
                n.type = t.enums === String ? 'UNDEFINED' : 0;
                n.refAttrName = '';
                n.sparseTensor = null;
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.f != null && e.hasOwnProperty('f')) {
                n.f = t.json && !isFinite(e.f) ? String(e.f) : e.f;
              }
              if (e.i != null && e.hasOwnProperty('i')) {
                if (typeof e.i == 'number') {
                  n.i = t.longs === String ? String(e.i) : e.i;
                } else {
                  n.i = t.longs === String ? u.Long.prototype.toString.call(e.i) : t.longs === Number ? new u.LongBits(e.i.low >>> 0, e.i.high >>> 0).toNumber() : e.i;
                }
              }
              if (e.s != null && e.hasOwnProperty('s')) {
                n.s = t.bytes === String ? u.base64.encode(e.s, 0, e.s.length) : t.bytes === Array ? Array.prototype.slice.call(e.s) : e.s;
              }
              if (e.t != null && e.hasOwnProperty('t')) {
                n.t = l.onnx.TensorProto.toObject(e.t, t);
              }
              if (e.g != null && e.hasOwnProperty('g')) {
                n.g = l.onnx.GraphProto.toObject(e.g, t);
              }
              if (e.floats && e.floats.length) {
                n.floats = [];
                for (var o = 0; o < e.floats.length; ++o) {
                  n.floats[o] = t.json && !isFinite(e.floats[o]) ? String(e.floats[o]) : e.floats[o];
                }
              }
              if (e.ints && e.ints.length) {
                n.ints = [];
                o = 0;
                for (; o < e.ints.length; ++o) {
                  if (typeof e.ints[o] == 'number') {
                    n.ints[o] = t.longs === String ? String(e.ints[o]) : e.ints[o];
                  } else {
                    n.ints[o] = t.longs === String ? u.Long.prototype.toString.call(e.ints[o]) : t.longs === Number ? new u.LongBits(e.ints[o].low >>> 0, e.ints[o].high >>> 0).toNumber() : e.ints[o];
                  }
                }
              }
              if (e.strings && e.strings.length) {
                n.strings = [];
                o = 0;
                for (; o < e.strings.length; ++o) {
                  n.strings[o] = t.bytes === String ? u.base64.encode(e.strings[o], 0, e.strings[o].length) : t.bytes === Array ? Array.prototype.slice.call(e.strings[o]) : e.strings[o];
                }
              }
              if (e.tensors && e.tensors.length) {
                n.tensors = [];
                o = 0;
                for (; o < e.tensors.length; ++o) {
                  n.tensors[o] = l.onnx.TensorProto.toObject(e.tensors[o], t);
                }
              }
              if (e.graphs && e.graphs.length) {
                n.graphs = [];
                o = 0;
                for (; o < e.graphs.length; ++o) {
                  n.graphs[o] = l.onnx.GraphProto.toObject(e.graphs[o], t);
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.tp != null && e.hasOwnProperty('tp')) {
                n.tp = l.onnx.TypeProto.toObject(e.tp, t);
              }
              if (e.typeProtos && e.typeProtos.length) {
                n.typeProtos = [];
                o = 0;
                for (; o < e.typeProtos.length; ++o) {
                  n.typeProtos[o] = l.onnx.TypeProto.toObject(e.typeProtos[o], t);
                }
              }
              if (e.type != null && e.hasOwnProperty('type')) {
                n.type = t.enums === String ? l.onnx.AttributeProto.AttributeType[e.type] === undefined ? e.type : l.onnx.AttributeProto.AttributeType[e.type] : e.type;
              }
              if (e.refAttrName != null && e.hasOwnProperty('refAttrName')) {
                n.refAttrName = e.refAttrName;
              }
              if (e.sparseTensor != null && e.hasOwnProperty('sparseTensor')) {
                n.sparseTensor = l.onnx.SparseTensorProto.toObject(e.sparseTensor, t);
              }
              if (e.sparseTensors && e.sparseTensors.length) {
                n.sparseTensors = [];
                o = 0;
                for (; o < e.sparseTensors.length; ++o) {
                  n.sparseTensors[o] = l.onnx.SparseTensorProto.toObject(e.sparseTensors[o], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.AttributeProto';
            };
            e.AttributeType = function () {
              var e = {};
              var t = Object.create(e);
              t[e[0] = 'UNDEFINED'] = 0;
              t[e[1] = 'FLOAT'] = 1;
              t[e[2] = 'INT'] = 2;
              t[e[3] = 'STRING'] = 3;
              t[e[4] = 'TENSOR'] = 4;
              t[e[5] = 'GRAPH'] = 5;
              t[e[11] = 'SPARSE_TENSOR'] = 11;
              t[e[13] = 'TYPE_PROTO'] = 13;
              t[e[6] = 'FLOATS'] = 6;
              t[e[7] = 'INTS'] = 7;
              t[e[8] = 'STRINGS'] = 8;
              t[e[9] = 'TENSORS'] = 9;
              t[e[10] = 'GRAPHS'] = 10;
              t[e[12] = 'SPARSE_TENSORS'] = 12;
              t[e[14] = 'TYPE_PROTOS'] = 14;
              return t;
            }();
            return e;
          }();
          s.ValueInfoProto = function () {
            function e(e) {
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.name = '';
            e.prototype.type = null;
            e.prototype.docString = '';
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(10).string(e.name);
              }
              if (e.type != null && Object.hasOwnProperty.call(e, 'type')) {
                l.onnx.TypeProto.encode(e.type, t.uint32(18).fork()).ldelim();
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(26).string(e.docString);
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.ValueInfoProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.name = e.string();
                    break;
                  case 2:
                    r.type = l.onnx.TypeProto.decode(e, e.uint32());
                    break;
                  case 3:
                    r.docString = e.string();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.type != null && e.hasOwnProperty('type')) {
                var t = l.onnx.TypeProto.verify(e.type);
                if (t) {
                  return `type.${t}`;
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              } else {
                return null;
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.ValueInfoProto) {
                return e;
              }
              var t = new l.onnx.ValueInfoProto();
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.type != null) {
                if (typeof e.type != 'object') {
                  throw TypeError('.onnx.ValueInfoProto.type: object expected');
                }
                t.type = l.onnx.TypeProto.fromObject(e.type);
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.defaults) {
                n.name = '';
                n.type = null;
                n.docString = '';
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.type != null && e.hasOwnProperty('type')) {
                n.type = l.onnx.TypeProto.toObject(e.type, t);
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.ValueInfoProto';
            };
            return e;
          }();
          s.NodeProto = function () {
            function e(e) {
              this.input = [];
              this.output = [];
              this.attribute = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.input = u.emptyArray;
            e.prototype.output = u.emptyArray;
            e.prototype.name = '';
            e.prototype.opType = '';
            e.prototype.domain = '';
            e.prototype.attribute = u.emptyArray;
            e.prototype.docString = '';
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.input != null && e.input.length) {
                for (var n = 0; n < e.input.length; ++n) {
                  t.uint32(10).string(e.input[n]);
                }
              }
              if (e.output != null && e.output.length) {
                for (n = 0; n < e.output.length; ++n) {
                  t.uint32(18).string(e.output[n]);
                }
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(26).string(e.name);
              }
              if (e.opType != null && Object.hasOwnProperty.call(e, 'opType')) {
                t.uint32(34).string(e.opType);
              }
              if (e.attribute != null && e.attribute.length) {
                for (n = 0; n < e.attribute.length; ++n) {
                  l.onnx.AttributeProto.encode(e.attribute[n], t.uint32(42).fork()).ldelim();
                }
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(50).string(e.docString);
              }
              if (e.domain != null && Object.hasOwnProperty.call(e, 'domain')) {
                t.uint32(58).string(e.domain);
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.NodeProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    if (!r.input || !r.input.length) {
                      r.input = [];
                    }
                    r.input.push(e.string());
                    break;
                  case 2:
                    if (!r.output || !r.output.length) {
                      r.output = [];
                    }
                    r.output.push(e.string());
                    break;
                  case 3:
                    r.name = e.string();
                    break;
                  case 4:
                    r.opType = e.string();
                    break;
                  case 7:
                    r.domain = e.string();
                    break;
                  case 5:
                    if (!r.attribute || !r.attribute.length) {
                      r.attribute = [];
                    }
                    r.attribute.push(l.onnx.AttributeProto.decode(e, e.uint32()));
                    break;
                  case 6:
                    r.docString = e.string();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.input != null && e.hasOwnProperty('input')) {
                if (!Array.isArray(e.input)) {
                  return 'input: array expected';
                }
                for (var t = 0; t < e.input.length; ++t) {
                  if (!u.isString(e.input[t])) {
                    return 'input: string[] expected';
                  }
                }
              }
              if (e.output != null && e.hasOwnProperty('output')) {
                if (!Array.isArray(e.output)) {
                  return 'output: array expected';
                }
                for (t = 0; t < e.output.length; ++t) {
                  if (!u.isString(e.output[t])) {
                    return 'output: string[] expected';
                  }
                }
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.opType != null && e.hasOwnProperty('opType') && !u.isString(e.opType)) {
                return 'opType: string expected';
              }
              if (e.domain != null && e.hasOwnProperty('domain') && !u.isString(e.domain)) {
                return 'domain: string expected';
              }
              if (e.attribute != null && e.hasOwnProperty('attribute')) {
                if (!Array.isArray(e.attribute)) {
                  return 'attribute: array expected';
                }
                for (t = 0; t < e.attribute.length; ++t) {
                  var n = l.onnx.AttributeProto.verify(e.attribute[t]);
                  if (n) {
                    return `attribute.${n}`;
                  }
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              } else {
                return null;
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.NodeProto) {
                return e;
              }
              var t = new l.onnx.NodeProto();
              if (e.input) {
                if (!Array.isArray(e.input)) {
                  throw TypeError('.onnx.NodeProto.input: array expected');
                }
                t.input = [];
                for (var n = 0; n < e.input.length; ++n) {
                  t.input[n] = String(e.input[n]);
                }
              }
              if (e.output) {
                if (!Array.isArray(e.output)) {
                  throw TypeError('.onnx.NodeProto.output: array expected');
                }
                t.output = [];
                n = 0;
                for (; n < e.output.length; ++n) {
                  t.output[n] = String(e.output[n]);
                }
              }
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.opType != null) {
                t.opType = String(e.opType);
              }
              if (e.domain != null) {
                t.domain = String(e.domain);
              }
              if (e.attribute) {
                if (!Array.isArray(e.attribute)) {
                  throw TypeError('.onnx.NodeProto.attribute: array expected');
                }
                t.attribute = [];
                n = 0;
                for (; n < e.attribute.length; ++n) {
                  if (typeof e.attribute[n] != 'object') {
                    throw TypeError('.onnx.NodeProto.attribute: object expected');
                  }
                  t.attribute[n] = l.onnx.AttributeProto.fromObject(e.attribute[n]);
                }
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.input = [];
                n.output = [];
                n.attribute = [];
              }
              if (t.defaults) {
                n.name = '';
                n.opType = '';
                n.docString = '';
                n.domain = '';
              }
              if (e.input && e.input.length) {
                n.input = [];
                for (var r = 0; r < e.input.length; ++r) {
                  n.input[r] = e.input[r];
                }
              }
              if (e.output && e.output.length) {
                n.output = [];
                r = 0;
                for (; r < e.output.length; ++r) {
                  n.output[r] = e.output[r];
                }
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.opType != null && e.hasOwnProperty('opType')) {
                n.opType = e.opType;
              }
              if (e.attribute && e.attribute.length) {
                n.attribute = [];
                r = 0;
                for (; r < e.attribute.length; ++r) {
                  n.attribute[r] = l.onnx.AttributeProto.toObject(e.attribute[r], t);
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.domain != null && e.hasOwnProperty('domain')) {
                n.domain = e.domain;
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.NodeProto';
            };
            return e;
          }();
          s.TrainingInfoProto = function () {
            function e(e) {
              this.initializationBinding = [];
              this.updateBinding = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.initialization = null;
            e.prototype.algorithm = null;
            e.prototype.initializationBinding = u.emptyArray;
            e.prototype.updateBinding = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.initialization != null && Object.hasOwnProperty.call(e, 'initialization')) {
                l.onnx.GraphProto.encode(e.initialization, t.uint32(10).fork()).ldelim();
              }
              if (e.algorithm != null && Object.hasOwnProperty.call(e, 'algorithm')) {
                l.onnx.GraphProto.encode(e.algorithm, t.uint32(18).fork()).ldelim();
              }
              if (e.initializationBinding != null && e.initializationBinding.length) {
                for (var n = 0; n < e.initializationBinding.length; ++n) {
                  l.onnx.StringStringEntryProto.encode(e.initializationBinding[n], t.uint32(26).fork()).ldelim();
                }
              }
              if (e.updateBinding != null && e.updateBinding.length) {
                for (n = 0; n < e.updateBinding.length; ++n) {
                  l.onnx.StringStringEntryProto.encode(e.updateBinding[n], t.uint32(34).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TrainingInfoProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.initialization = l.onnx.GraphProto.decode(e, e.uint32());
                    break;
                  case 2:
                    r.algorithm = l.onnx.GraphProto.decode(e, e.uint32());
                    break;
                  case 3:
                    if (!r.initializationBinding || !r.initializationBinding.length) {
                      r.initializationBinding = [];
                    }
                    r.initializationBinding.push(l.onnx.StringStringEntryProto.decode(e, e.uint32()));
                    break;
                  case 4:
                    if (!r.updateBinding || !r.updateBinding.length) {
                      r.updateBinding = [];
                    }
                    r.updateBinding.push(l.onnx.StringStringEntryProto.decode(e, e.uint32()));
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.initialization != null && e.hasOwnProperty('initialization') && (n = l.onnx.GraphProto.verify(e.initialization))) {
                return `initialization.${n}`;
              }
              if (e.algorithm != null && e.hasOwnProperty('algorithm') && (n = l.onnx.GraphProto.verify(e.algorithm))) {
                return `algorithm.${n}`;
              }
              if (e.initializationBinding != null && e.hasOwnProperty('initializationBinding')) {
                if (!Array.isArray(e.initializationBinding)) {
                  return 'initializationBinding: array expected';
                }
                for (var t = 0; t < e.initializationBinding.length; ++t) {
                  if (n = l.onnx.StringStringEntryProto.verify(e.initializationBinding[t])) {
                    return `initializationBinding.${n}`;
                  }
                }
              }
              if (e.updateBinding != null && e.hasOwnProperty('updateBinding')) {
                if (!Array.isArray(e.updateBinding)) {
                  return 'updateBinding: array expected';
                }
                for (t = 0; t < e.updateBinding.length; ++t) {
                  var n;
                  if (n = l.onnx.StringStringEntryProto.verify(e.updateBinding[t])) {
                    return `updateBinding.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.TrainingInfoProto) {
                return e;
              }
              var t = new l.onnx.TrainingInfoProto();
              if (e.initialization != null) {
                if (typeof e.initialization != 'object') {
                  throw TypeError('.onnx.TrainingInfoProto.initialization: object expected');
                }
                t.initialization = l.onnx.GraphProto.fromObject(e.initialization);
              }
              if (e.algorithm != null) {
                if (typeof e.algorithm != 'object') {
                  throw TypeError('.onnx.TrainingInfoProto.algorithm: object expected');
                }
                t.algorithm = l.onnx.GraphProto.fromObject(e.algorithm);
              }
              if (e.initializationBinding) {
                if (!Array.isArray(e.initializationBinding)) {
                  throw TypeError('.onnx.TrainingInfoProto.initializationBinding: array expected');
                }
                t.initializationBinding = [];
                for (var n = 0; n < e.initializationBinding.length; ++n) {
                  if (typeof e.initializationBinding[n] != 'object') {
                    throw TypeError('.onnx.TrainingInfoProto.initializationBinding: object expected');
                  }
                  t.initializationBinding[n] = l.onnx.StringStringEntryProto.fromObject(e.initializationBinding[n]);
                }
              }
              if (e.updateBinding) {
                if (!Array.isArray(e.updateBinding)) {
                  throw TypeError('.onnx.TrainingInfoProto.updateBinding: array expected');
                }
                t.updateBinding = [];
                n = 0;
                for (; n < e.updateBinding.length; ++n) {
                  if (typeof e.updateBinding[n] != 'object') {
                    throw TypeError('.onnx.TrainingInfoProto.updateBinding: object expected');
                  }
                  t.updateBinding[n] = l.onnx.StringStringEntryProto.fromObject(e.updateBinding[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.initializationBinding = [];
                n.updateBinding = [];
              }
              if (t.defaults) {
                n.initialization = null;
                n.algorithm = null;
              }
              if (e.initialization != null && e.hasOwnProperty('initialization')) {
                n.initialization = l.onnx.GraphProto.toObject(e.initialization, t);
              }
              if (e.algorithm != null && e.hasOwnProperty('algorithm')) {
                n.algorithm = l.onnx.GraphProto.toObject(e.algorithm, t);
              }
              if (e.initializationBinding && e.initializationBinding.length) {
                n.initializationBinding = [];
                for (var r = 0; r < e.initializationBinding.length; ++r) {
                  n.initializationBinding[r] = l.onnx.StringStringEntryProto.toObject(e.initializationBinding[r], t);
                }
              }
              if (e.updateBinding && e.updateBinding.length) {
                n.updateBinding = [];
                r = 0;
                for (; r < e.updateBinding.length; ++r) {
                  n.updateBinding[r] = l.onnx.StringStringEntryProto.toObject(e.updateBinding[r], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.TrainingInfoProto';
            };
            return e;
          }();
          s.ModelProto = function () {
            function e(e) {
              this.opsetImport = [];
              this.metadataProps = [];
              this.trainingInfo = [];
              this.functions = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.irVersion = u.Long ? u.Long.fromBits(0, 0, false) : 0;
            e.prototype.opsetImport = u.emptyArray;
            e.prototype.producerName = '';
            e.prototype.producerVersion = '';
            e.prototype.domain = '';
            e.prototype.modelVersion = u.Long ? u.Long.fromBits(0, 0, false) : 0;
            e.prototype.docString = '';
            e.prototype.graph = null;
            e.prototype.metadataProps = u.emptyArray;
            e.prototype.trainingInfo = u.emptyArray;
            e.prototype.functions = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.irVersion != null && Object.hasOwnProperty.call(e, 'irVersion')) {
                t.uint32(8).int64(e.irVersion);
              }
              if (e.producerName != null && Object.hasOwnProperty.call(e, 'producerName')) {
                t.uint32(18).string(e.producerName);
              }
              if (e.producerVersion != null && Object.hasOwnProperty.call(e, 'producerVersion')) {
                t.uint32(26).string(e.producerVersion);
              }
              if (e.domain != null && Object.hasOwnProperty.call(e, 'domain')) {
                t.uint32(34).string(e.domain);
              }
              if (e.modelVersion != null && Object.hasOwnProperty.call(e, 'modelVersion')) {
                t.uint32(40).int64(e.modelVersion);
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(50).string(e.docString);
              }
              if (e.graph != null && Object.hasOwnProperty.call(e, 'graph')) {
                l.onnx.GraphProto.encode(e.graph, t.uint32(58).fork()).ldelim();
              }
              if (e.opsetImport != null && e.opsetImport.length) {
                for (var n = 0; n < e.opsetImport.length; ++n) {
                  l.onnx.OperatorSetIdProto.encode(e.opsetImport[n], t.uint32(66).fork()).ldelim();
                }
              }
              if (e.metadataProps != null && e.metadataProps.length) {
                for (n = 0; n < e.metadataProps.length; ++n) {
                  l.onnx.StringStringEntryProto.encode(e.metadataProps[n], t.uint32(114).fork()).ldelim();
                }
              }
              if (e.trainingInfo != null && e.trainingInfo.length) {
                for (n = 0; n < e.trainingInfo.length; ++n) {
                  l.onnx.TrainingInfoProto.encode(e.trainingInfo[n], t.uint32(162).fork()).ldelim();
                }
              }
              if (e.functions != null && e.functions.length) {
                for (n = 0; n < e.functions.length; ++n) {
                  l.onnx.FunctionProto.encode(e.functions[n], t.uint32(202).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.ModelProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.irVersion = e.int64();
                    break;
                  case 8:
                    if (!r.opsetImport || !r.opsetImport.length) {
                      r.opsetImport = [];
                    }
                    r.opsetImport.push(l.onnx.OperatorSetIdProto.decode(e, e.uint32()));
                    break;
                  case 2:
                    r.producerName = e.string();
                    break;
                  case 3:
                    r.producerVersion = e.string();
                    break;
                  case 4:
                    r.domain = e.string();
                    break;
                  case 5:
                    r.modelVersion = e.int64();
                    break;
                  case 6:
                    r.docString = e.string();
                    break;
                  case 7:
                    r.graph = l.onnx.GraphProto.decode(e, e.uint32());
                    break;
                  case 14:
                    if (!r.metadataProps || !r.metadataProps.length) {
                      r.metadataProps = [];
                    }
                    r.metadataProps.push(l.onnx.StringStringEntryProto.decode(e, e.uint32()));
                    break;
                  case 20:
                    if (!r.trainingInfo || !r.trainingInfo.length) {
                      r.trainingInfo = [];
                    }
                    r.trainingInfo.push(l.onnx.TrainingInfoProto.decode(e, e.uint32()));
                    break;
                  case 25:
                    if (!r.functions || !r.functions.length) {
                      r.functions = [];
                    }
                    r.functions.push(l.onnx.FunctionProto.decode(e, e.uint32()));
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.irVersion != null && e.hasOwnProperty('irVersion') && !u.isInteger(e.irVersion) && (!e.irVersion || !u.isInteger(e.irVersion.low) || !u.isInteger(e.irVersion.high))) {
                return 'irVersion: integer|Long expected';
              }
              if (e.opsetImport != null && e.hasOwnProperty('opsetImport')) {
                if (!Array.isArray(e.opsetImport)) {
                  return 'opsetImport: array expected';
                }
                for (var t = 0; t < e.opsetImport.length; ++t) {
                  if (n = l.onnx.OperatorSetIdProto.verify(e.opsetImport[t])) {
                    return `opsetImport.${n}`;
                  }
                }
              }
              if (e.producerName != null && e.hasOwnProperty('producerName') && !u.isString(e.producerName)) {
                return 'producerName: string expected';
              }
              if (e.producerVersion != null && e.hasOwnProperty('producerVersion') && !u.isString(e.producerVersion)) {
                return 'producerVersion: string expected';
              }
              if (e.domain != null && e.hasOwnProperty('domain') && !u.isString(e.domain)) {
                return 'domain: string expected';
              }
              if (e.modelVersion != null && e.hasOwnProperty('modelVersion') && !u.isInteger(e.modelVersion) && (!e.modelVersion || !u.isInteger(e.modelVersion.low) || !u.isInteger(e.modelVersion.high))) {
                return 'modelVersion: integer|Long expected';
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              }
              if (e.graph != null && e.hasOwnProperty('graph') && (n = l.onnx.GraphProto.verify(e.graph))) {
                return `graph.${n}`;
              }
              if (e.metadataProps != null && e.hasOwnProperty('metadataProps')) {
                if (!Array.isArray(e.metadataProps)) {
                  return 'metadataProps: array expected';
                }
                for (t = 0; t < e.metadataProps.length; ++t) {
                  if (n = l.onnx.StringStringEntryProto.verify(e.metadataProps[t])) {
                    return `metadataProps.${n}`;
                  }
                }
              }
              if (e.trainingInfo != null && e.hasOwnProperty('trainingInfo')) {
                if (!Array.isArray(e.trainingInfo)) {
                  return 'trainingInfo: array expected';
                }
                for (t = 0; t < e.trainingInfo.length; ++t) {
                  if (n = l.onnx.TrainingInfoProto.verify(e.trainingInfo[t])) {
                    return `trainingInfo.${n}`;
                  }
                }
              }
              if (e.functions != null && e.hasOwnProperty('functions')) {
                if (!Array.isArray(e.functions)) {
                  return 'functions: array expected';
                }
                for (t = 0; t < e.functions.length; ++t) {
                  var n;
                  if (n = l.onnx.FunctionProto.verify(e.functions[t])) {
                    return `functions.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.ModelProto) {
                return e;
              }
              var t = new l.onnx.ModelProto();
              if (e.irVersion != null) {
                if (u.Long) {
                  (t.irVersion = u.Long.fromValue(e.irVersion)).unsigned = false;
                } else {
                  if (typeof e.irVersion == 'string') {
                    t.irVersion = parseInt(e.irVersion, 10);
                  } else {
                    if (typeof e.irVersion == 'number') {
                      t.irVersion = e.irVersion;
                    } else {
                      if (typeof e.irVersion == 'object') {
                        t.irVersion = new u.LongBits(e.irVersion.low >>> 0, e.irVersion.high >>> 0).toNumber();
                      }
                    }
                  }
                }
              }
              if (e.opsetImport) {
                if (!Array.isArray(e.opsetImport)) {
                  throw TypeError('.onnx.ModelProto.opsetImport: array expected');
                }
                t.opsetImport = [];
                for (var n = 0; n < e.opsetImport.length; ++n) {
                  if (typeof e.opsetImport[n] != 'object') {
                    throw TypeError('.onnx.ModelProto.opsetImport: object expected');
                  }
                  t.opsetImport[n] = l.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n]);
                }
              }
              if (e.producerName != null) {
                t.producerName = String(e.producerName);
              }
              if (e.producerVersion != null) {
                t.producerVersion = String(e.producerVersion);
              }
              if (e.domain != null) {
                t.domain = String(e.domain);
              }
              if (e.modelVersion != null) {
                if (u.Long) {
                  (t.modelVersion = u.Long.fromValue(e.modelVersion)).unsigned = false;
                } else {
                  if (typeof e.modelVersion == 'string') {
                    t.modelVersion = parseInt(e.modelVersion, 10);
                  } else {
                    if (typeof e.modelVersion == 'number') {
                      t.modelVersion = e.modelVersion;
                    } else {
                      if (typeof e.modelVersion == 'object') {
                        t.modelVersion = new u.LongBits(e.modelVersion.low >>> 0, e.modelVersion.high >>> 0).toNumber();
                      }
                    }
                  }
                }
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              if (e.graph != null) {
                if (typeof e.graph != 'object') {
                  throw TypeError('.onnx.ModelProto.graph: object expected');
                }
                t.graph = l.onnx.GraphProto.fromObject(e.graph);
              }
              if (e.metadataProps) {
                if (!Array.isArray(e.metadataProps)) {
                  throw TypeError('.onnx.ModelProto.metadataProps: array expected');
                }
                t.metadataProps = [];
                n = 0;
                for (; n < e.metadataProps.length; ++n) {
                  if (typeof e.metadataProps[n] != 'object') {
                    throw TypeError('.onnx.ModelProto.metadataProps: object expected');
                  }
                  t.metadataProps[n] = l.onnx.StringStringEntryProto.fromObject(e.metadataProps[n]);
                }
              }
              if (e.trainingInfo) {
                if (!Array.isArray(e.trainingInfo)) {
                  throw TypeError('.onnx.ModelProto.trainingInfo: array expected');
                }
                t.trainingInfo = [];
                n = 0;
                for (; n < e.trainingInfo.length; ++n) {
                  if (typeof e.trainingInfo[n] != 'object') {
                    throw TypeError('.onnx.ModelProto.trainingInfo: object expected');
                  }
                  t.trainingInfo[n] = l.onnx.TrainingInfoProto.fromObject(e.trainingInfo[n]);
                }
              }
              if (e.functions) {
                if (!Array.isArray(e.functions)) {
                  throw TypeError('.onnx.ModelProto.functions: array expected');
                }
                t.functions = [];
                n = 0;
                for (; n < e.functions.length; ++n) {
                  if (typeof e.functions[n] != 'object') {
                    throw TypeError('.onnx.ModelProto.functions: object expected');
                  }
                  t.functions[n] = l.onnx.FunctionProto.fromObject(e.functions[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.opsetImport = [];
                n.metadataProps = [];
                n.trainingInfo = [];
                n.functions = [];
              }
              if (t.defaults) {
                if (u.Long) {
                  var r = new u.Long(0, 0, false);
                  n.irVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                } else {
                  n.irVersion = t.longs === String ? '0' : 0;
                }
                n.producerName = '';
                n.producerVersion = '';
                n.domain = '';
                if (u.Long) {
                  r = new u.Long(0, 0, false);
                  n.modelVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                } else {
                  n.modelVersion = t.longs === String ? '0' : 0;
                }
                n.docString = '';
                n.graph = null;
              }
              if (e.irVersion != null && e.hasOwnProperty('irVersion')) {
                if (typeof e.irVersion == 'number') {
                  n.irVersion = t.longs === String ? String(e.irVersion) : e.irVersion;
                } else {
                  n.irVersion = t.longs === String ? u.Long.prototype.toString.call(e.irVersion) : t.longs === Number ? new u.LongBits(e.irVersion.low >>> 0, e.irVersion.high >>> 0).toNumber() : e.irVersion;
                }
              }
              if (e.producerName != null && e.hasOwnProperty('producerName')) {
                n.producerName = e.producerName;
              }
              if (e.producerVersion != null && e.hasOwnProperty('producerVersion')) {
                n.producerVersion = e.producerVersion;
              }
              if (e.domain != null && e.hasOwnProperty('domain')) {
                n.domain = e.domain;
              }
              if (e.modelVersion != null && e.hasOwnProperty('modelVersion')) {
                if (typeof e.modelVersion == 'number') {
                  n.modelVersion = t.longs === String ? String(e.modelVersion) : e.modelVersion;
                } else {
                  n.modelVersion = t.longs === String ? u.Long.prototype.toString.call(e.modelVersion) : t.longs === Number ? new u.LongBits(e.modelVersion.low >>> 0, e.modelVersion.high >>> 0).toNumber() : e.modelVersion;
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.graph != null && e.hasOwnProperty('graph')) {
                n.graph = l.onnx.GraphProto.toObject(e.graph, t);
              }
              if (e.opsetImport && e.opsetImport.length) {
                n.opsetImport = [];
                for (var o = 0; o < e.opsetImport.length; ++o) {
                  n.opsetImport[o] = l.onnx.OperatorSetIdProto.toObject(e.opsetImport[o], t);
                }
              }
              if (e.metadataProps && e.metadataProps.length) {
                n.metadataProps = [];
                o = 0;
                for (; o < e.metadataProps.length; ++o) {
                  n.metadataProps[o] = l.onnx.StringStringEntryProto.toObject(e.metadataProps[o], t);
                }
              }
              if (e.trainingInfo && e.trainingInfo.length) {
                n.trainingInfo = [];
                o = 0;
                for (; o < e.trainingInfo.length; ++o) {
                  n.trainingInfo[o] = l.onnx.TrainingInfoProto.toObject(e.trainingInfo[o], t);
                }
              }
              if (e.functions && e.functions.length) {
                n.functions = [];
                o = 0;
                for (; o < e.functions.length; ++o) {
                  n.functions[o] = l.onnx.FunctionProto.toObject(e.functions[o], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.ModelProto';
            };
            return e;
          }();
          s.StringStringEntryProto = function () {
            function e(e) {
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.key = '';
            e.prototype.value = '';
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.key != null && Object.hasOwnProperty.call(e, 'key')) {
                t.uint32(10).string(e.key);
              }
              if (e.value != null && Object.hasOwnProperty.call(e, 'value')) {
                t.uint32(18).string(e.value);
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.StringStringEntryProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.key = e.string();
                    break;
                  case 2:
                    r.value = e.string();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              } else {
                if (e.key != null && e.hasOwnProperty('key') && !u.isString(e.key)) {
                  return 'key: string expected';
                } else {
                  if (e.value != null && e.hasOwnProperty('value') && !u.isString(e.value)) {
                    return 'value: string expected';
                  } else {
                    return null;
                  }
                }
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.StringStringEntryProto) {
                return e;
              }
              var t = new l.onnx.StringStringEntryProto();
              if (e.key != null) {
                t.key = String(e.key);
              }
              if (e.value != null) {
                t.value = String(e.value);
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.defaults) {
                n.key = '';
                n.value = '';
              }
              if (e.key != null && e.hasOwnProperty('key')) {
                n.key = e.key;
              }
              if (e.value != null && e.hasOwnProperty('value')) {
                n.value = e.value;
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.StringStringEntryProto';
            };
            return e;
          }();
          s.TensorAnnotation = function () {
            function e(e) {
              this.quantParameterTensorNames = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.tensorName = '';
            e.prototype.quantParameterTensorNames = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.tensorName != null && Object.hasOwnProperty.call(e, 'tensorName')) {
                t.uint32(10).string(e.tensorName);
              }
              if (e.quantParameterTensorNames != null && e.quantParameterTensorNames.length) {
                for (var n = 0; n < e.quantParameterTensorNames.length; ++n) {
                  l.onnx.StringStringEntryProto.encode(e.quantParameterTensorNames[n], t.uint32(18).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TensorAnnotation(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.tensorName = e.string();
                    break;
                  case 2:
                    if (!r.quantParameterTensorNames || !r.quantParameterTensorNames.length) {
                      r.quantParameterTensorNames = [];
                    }
                    r.quantParameterTensorNames.push(l.onnx.StringStringEntryProto.decode(e, e.uint32()));
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.tensorName != null && e.hasOwnProperty('tensorName') && !u.isString(e.tensorName)) {
                return 'tensorName: string expected';
              }
              if (e.quantParameterTensorNames != null && e.hasOwnProperty('quantParameterTensorNames')) {
                if (!Array.isArray(e.quantParameterTensorNames)) {
                  return 'quantParameterTensorNames: array expected';
                }
                for (var t = 0; t < e.quantParameterTensorNames.length; ++t) {
                  var n = l.onnx.StringStringEntryProto.verify(e.quantParameterTensorNames[t]);
                  if (n) {
                    return `quantParameterTensorNames.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.TensorAnnotation) {
                return e;
              }
              var t = new l.onnx.TensorAnnotation();
              if (e.tensorName != null) {
                t.tensorName = String(e.tensorName);
              }
              if (e.quantParameterTensorNames) {
                if (!Array.isArray(e.quantParameterTensorNames)) {
                  throw TypeError('.onnx.TensorAnnotation.quantParameterTensorNames: array expected');
                }
                t.quantParameterTensorNames = [];
                for (var n = 0; n < e.quantParameterTensorNames.length; ++n) {
                  if (typeof e.quantParameterTensorNames[n] != 'object') {
                    throw TypeError('.onnx.TensorAnnotation.quantParameterTensorNames: object expected');
                  }
                  t.quantParameterTensorNames[n] = l.onnx.StringStringEntryProto.fromObject(e.quantParameterTensorNames[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.quantParameterTensorNames = [];
              }
              if (t.defaults) {
                n.tensorName = '';
              }
              if (e.tensorName != null && e.hasOwnProperty('tensorName')) {
                n.tensorName = e.tensorName;
              }
              if (e.quantParameterTensorNames && e.quantParameterTensorNames.length) {
                n.quantParameterTensorNames = [];
                for (var r = 0; r < e.quantParameterTensorNames.length; ++r) {
                  n.quantParameterTensorNames[r] = l.onnx.StringStringEntryProto.toObject(e.quantParameterTensorNames[r], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.TensorAnnotation';
            };
            return e;
          }();
          s.GraphProto = function () {
            function e(e) {
              this.node = [];
              this.initializer = [];
              this.sparseInitializer = [];
              this.input = [];
              this.output = [];
              this.valueInfo = [];
              this.quantizationAnnotation = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.node = u.emptyArray;
            e.prototype.name = '';
            e.prototype.initializer = u.emptyArray;
            e.prototype.sparseInitializer = u.emptyArray;
            e.prototype.docString = '';
            e.prototype.input = u.emptyArray;
            e.prototype.output = u.emptyArray;
            e.prototype.valueInfo = u.emptyArray;
            e.prototype.quantizationAnnotation = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.node != null && e.node.length) {
                for (var n = 0; n < e.node.length; ++n) {
                  l.onnx.NodeProto.encode(e.node[n], t.uint32(10).fork()).ldelim();
                }
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(18).string(e.name);
              }
              if (e.initializer != null && e.initializer.length) {
                for (n = 0; n < e.initializer.length; ++n) {
                  l.onnx.TensorProto.encode(e.initializer[n], t.uint32(42).fork()).ldelim();
                }
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(82).string(e.docString);
              }
              if (e.input != null && e.input.length) {
                for (n = 0; n < e.input.length; ++n) {
                  l.onnx.ValueInfoProto.encode(e.input[n], t.uint32(90).fork()).ldelim();
                }
              }
              if (e.output != null && e.output.length) {
                for (n = 0; n < e.output.length; ++n) {
                  l.onnx.ValueInfoProto.encode(e.output[n], t.uint32(98).fork()).ldelim();
                }
              }
              if (e.valueInfo != null && e.valueInfo.length) {
                for (n = 0; n < e.valueInfo.length; ++n) {
                  l.onnx.ValueInfoProto.encode(e.valueInfo[n], t.uint32(106).fork()).ldelim();
                }
              }
              if (e.quantizationAnnotation != null && e.quantizationAnnotation.length) {
                for (n = 0; n < e.quantizationAnnotation.length; ++n) {
                  l.onnx.TensorAnnotation.encode(e.quantizationAnnotation[n], t.uint32(114).fork()).ldelim();
                }
              }
              if (e.sparseInitializer != null && e.sparseInitializer.length) {
                for (n = 0; n < e.sparseInitializer.length; ++n) {
                  l.onnx.SparseTensorProto.encode(e.sparseInitializer[n], t.uint32(122).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.GraphProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    if (!r.node || !r.node.length) {
                      r.node = [];
                    }
                    r.node.push(l.onnx.NodeProto.decode(e, e.uint32()));
                    break;
                  case 2:
                    r.name = e.string();
                    break;
                  case 5:
                    if (!r.initializer || !r.initializer.length) {
                      r.initializer = [];
                    }
                    r.initializer.push(l.onnx.TensorProto.decode(e, e.uint32()));
                    break;
                  case 15:
                    if (!r.sparseInitializer || !r.sparseInitializer.length) {
                      r.sparseInitializer = [];
                    }
                    r.sparseInitializer.push(l.onnx.SparseTensorProto.decode(e, e.uint32()));
                    break;
                  case 10:
                    r.docString = e.string();
                    break;
                  case 11:
                    if (!r.input || !r.input.length) {
                      r.input = [];
                    }
                    r.input.push(l.onnx.ValueInfoProto.decode(e, e.uint32()));
                    break;
                  case 12:
                    if (!r.output || !r.output.length) {
                      r.output = [];
                    }
                    r.output.push(l.onnx.ValueInfoProto.decode(e, e.uint32()));
                    break;
                  case 13:
                    if (!r.valueInfo || !r.valueInfo.length) {
                      r.valueInfo = [];
                    }
                    r.valueInfo.push(l.onnx.ValueInfoProto.decode(e, e.uint32()));
                    break;
                  case 14:
                    if (!r.quantizationAnnotation || !r.quantizationAnnotation.length) {
                      r.quantizationAnnotation = [];
                    }
                    r.quantizationAnnotation.push(l.onnx.TensorAnnotation.decode(e, e.uint32()));
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.node != null && e.hasOwnProperty('node')) {
                if (!Array.isArray(e.node)) {
                  return 'node: array expected';
                }
                for (var t = 0; t < e.node.length; ++t) {
                  if (n = l.onnx.NodeProto.verify(e.node[t])) {
                    return `node.${n}`;
                  }
                }
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.initializer != null && e.hasOwnProperty('initializer')) {
                if (!Array.isArray(e.initializer)) {
                  return 'initializer: array expected';
                }
                for (t = 0; t < e.initializer.length; ++t) {
                  if (n = l.onnx.TensorProto.verify(e.initializer[t])) {
                    return `initializer.${n}`;
                  }
                }
              }
              if (e.sparseInitializer != null && e.hasOwnProperty('sparseInitializer')) {
                if (!Array.isArray(e.sparseInitializer)) {
                  return 'sparseInitializer: array expected';
                }
                for (t = 0; t < e.sparseInitializer.length; ++t) {
                  if (n = l.onnx.SparseTensorProto.verify(e.sparseInitializer[t])) {
                    return `sparseInitializer.${n}`;
                  }
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              }
              if (e.input != null && e.hasOwnProperty('input')) {
                if (!Array.isArray(e.input)) {
                  return 'input: array expected';
                }
                for (t = 0; t < e.input.length; ++t) {
                  if (n = l.onnx.ValueInfoProto.verify(e.input[t])) {
                    return `input.${n}`;
                  }
                }
              }
              if (e.output != null && e.hasOwnProperty('output')) {
                if (!Array.isArray(e.output)) {
                  return 'output: array expected';
                }
                for (t = 0; t < e.output.length; ++t) {
                  if (n = l.onnx.ValueInfoProto.verify(e.output[t])) {
                    return `output.${n}`;
                  }
                }
              }
              if (e.valueInfo != null && e.hasOwnProperty('valueInfo')) {
                if (!Array.isArray(e.valueInfo)) {
                  return 'valueInfo: array expected';
                }
                for (t = 0; t < e.valueInfo.length; ++t) {
                  if (n = l.onnx.ValueInfoProto.verify(e.valueInfo[t])) {
                    return `valueInfo.${n}`;
                  }
                }
              }
              if (e.quantizationAnnotation != null && e.hasOwnProperty('quantizationAnnotation')) {
                if (!Array.isArray(e.quantizationAnnotation)) {
                  return 'quantizationAnnotation: array expected';
                }
                for (t = 0; t < e.quantizationAnnotation.length; ++t) {
                  var n;
                  if (n = l.onnx.TensorAnnotation.verify(e.quantizationAnnotation[t])) {
                    return `quantizationAnnotation.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.GraphProto) {
                return e;
              }
              var t = new l.onnx.GraphProto();
              if (e.node) {
                if (!Array.isArray(e.node)) {
                  throw TypeError('.onnx.GraphProto.node: array expected');
                }
                t.node = [];
                for (var n = 0; n < e.node.length; ++n) {
                  if (typeof e.node[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.node: object expected');
                  }
                  t.node[n] = l.onnx.NodeProto.fromObject(e.node[n]);
                }
              }
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.initializer) {
                if (!Array.isArray(e.initializer)) {
                  throw TypeError('.onnx.GraphProto.initializer: array expected');
                }
                t.initializer = [];
                n = 0;
                for (; n < e.initializer.length; ++n) {
                  if (typeof e.initializer[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.initializer: object expected');
                  }
                  t.initializer[n] = l.onnx.TensorProto.fromObject(e.initializer[n]);
                }
              }
              if (e.sparseInitializer) {
                if (!Array.isArray(e.sparseInitializer)) {
                  throw TypeError('.onnx.GraphProto.sparseInitializer: array expected');
                }
                t.sparseInitializer = [];
                n = 0;
                for (; n < e.sparseInitializer.length; ++n) {
                  if (typeof e.sparseInitializer[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.sparseInitializer: object expected');
                  }
                  t.sparseInitializer[n] = l.onnx.SparseTensorProto.fromObject(e.sparseInitializer[n]);
                }
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              if (e.input) {
                if (!Array.isArray(e.input)) {
                  throw TypeError('.onnx.GraphProto.input: array expected');
                }
                t.input = [];
                n = 0;
                for (; n < e.input.length; ++n) {
                  if (typeof e.input[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.input: object expected');
                  }
                  t.input[n] = l.onnx.ValueInfoProto.fromObject(e.input[n]);
                }
              }
              if (e.output) {
                if (!Array.isArray(e.output)) {
                  throw TypeError('.onnx.GraphProto.output: array expected');
                }
                t.output = [];
                n = 0;
                for (; n < e.output.length; ++n) {
                  if (typeof e.output[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.output: object expected');
                  }
                  t.output[n] = l.onnx.ValueInfoProto.fromObject(e.output[n]);
                }
              }
              if (e.valueInfo) {
                if (!Array.isArray(e.valueInfo)) {
                  throw TypeError('.onnx.GraphProto.valueInfo: array expected');
                }
                t.valueInfo = [];
                n = 0;
                for (; n < e.valueInfo.length; ++n) {
                  if (typeof e.valueInfo[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.valueInfo: object expected');
                  }
                  t.valueInfo[n] = l.onnx.ValueInfoProto.fromObject(e.valueInfo[n]);
                }
              }
              if (e.quantizationAnnotation) {
                if (!Array.isArray(e.quantizationAnnotation)) {
                  throw TypeError('.onnx.GraphProto.quantizationAnnotation: array expected');
                }
                t.quantizationAnnotation = [];
                n = 0;
                for (; n < e.quantizationAnnotation.length; ++n) {
                  if (typeof e.quantizationAnnotation[n] != 'object') {
                    throw TypeError('.onnx.GraphProto.quantizationAnnotation: object expected');
                  }
                  t.quantizationAnnotation[n] = l.onnx.TensorAnnotation.fromObject(e.quantizationAnnotation[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.node = [];
                n.initializer = [];
                n.input = [];
                n.output = [];
                n.valueInfo = [];
                n.quantizationAnnotation = [];
                n.sparseInitializer = [];
              }
              if (t.defaults) {
                n.name = '';
                n.docString = '';
              }
              if (e.node && e.node.length) {
                n.node = [];
                for (var r = 0; r < e.node.length; ++r) {
                  n.node[r] = l.onnx.NodeProto.toObject(e.node[r], t);
                }
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.initializer && e.initializer.length) {
                n.initializer = [];
                r = 0;
                for (; r < e.initializer.length; ++r) {
                  n.initializer[r] = l.onnx.TensorProto.toObject(e.initializer[r], t);
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.input && e.input.length) {
                n.input = [];
                r = 0;
                for (; r < e.input.length; ++r) {
                  n.input[r] = l.onnx.ValueInfoProto.toObject(e.input[r], t);
                }
              }
              if (e.output && e.output.length) {
                n.output = [];
                r = 0;
                for (; r < e.output.length; ++r) {
                  n.output[r] = l.onnx.ValueInfoProto.toObject(e.output[r], t);
                }
              }
              if (e.valueInfo && e.valueInfo.length) {
                n.valueInfo = [];
                r = 0;
                for (; r < e.valueInfo.length; ++r) {
                  n.valueInfo[r] = l.onnx.ValueInfoProto.toObject(e.valueInfo[r], t);
                }
              }
              if (e.quantizationAnnotation && e.quantizationAnnotation.length) {
                n.quantizationAnnotation = [];
                r = 0;
                for (; r < e.quantizationAnnotation.length; ++r) {
                  n.quantizationAnnotation[r] = l.onnx.TensorAnnotation.toObject(e.quantizationAnnotation[r], t);
                }
              }
              if (e.sparseInitializer && e.sparseInitializer.length) {
                n.sparseInitializer = [];
                r = 0;
                for (; r < e.sparseInitializer.length; ++r) {
                  n.sparseInitializer[r] = l.onnx.SparseTensorProto.toObject(e.sparseInitializer[r], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.GraphProto';
            };
            return e;
          }();
          s.TensorProto = function () {
            function e(e) {
              this.dims = [];
              this.floatData = [];
              this.int32Data = [];
              this.stringData = [];
              this.int64Data = [];
              this.externalData = [];
              this.doubleData = [];
              this.uint64Data = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.dims = u.emptyArray;
            e.prototype.dataType = 0;
            e.prototype.segment = null;
            e.prototype.floatData = u.emptyArray;
            e.prototype.int32Data = u.emptyArray;
            e.prototype.stringData = u.emptyArray;
            e.prototype.int64Data = u.emptyArray;
            e.prototype.name = '';
            e.prototype.docString = '';
            e.prototype.rawData = u.newBuffer([]);
            e.prototype.externalData = u.emptyArray;
            e.prototype.dataLocation = 0;
            e.prototype.doubleData = u.emptyArray;
            e.prototype.uint64Data = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.dims != null && e.dims.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.dims.length; ++n) {
                  t.int64(e.dims[n]);
                }
                t.ldelim();
              }
              if (e.dataType != null && Object.hasOwnProperty.call(e, 'dataType')) {
                t.uint32(16).int32(e.dataType);
              }
              if (e.segment != null && Object.hasOwnProperty.call(e, 'segment')) {
                l.onnx.TensorProto.Segment.encode(e.segment, t.uint32(26).fork()).ldelim();
              }
              if (e.floatData != null && e.floatData.length) {
                t.uint32(34).fork();
                n = 0;
                for (; n < e.floatData.length; ++n) {
                  t.float(e.floatData[n]);
                }
                t.ldelim();
              }
              if (e.int32Data != null && e.int32Data.length) {
                t.uint32(42).fork();
                n = 0;
                for (; n < e.int32Data.length; ++n) {
                  t.int32(e.int32Data[n]);
                }
                t.ldelim();
              }
              if (e.stringData != null && e.stringData.length) {
                for (n = 0; n < e.stringData.length; ++n) {
                  t.uint32(50).bytes(e.stringData[n]);
                }
              }
              if (e.int64Data != null && e.int64Data.length) {
                t.uint32(58).fork();
                n = 0;
                for (; n < e.int64Data.length; ++n) {
                  t.int64(e.int64Data[n]);
                }
                t.ldelim();
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(66).string(e.name);
              }
              if (e.rawData != null && Object.hasOwnProperty.call(e, 'rawData')) {
                t.uint32(74).bytes(e.rawData);
              }
              if (e.doubleData != null && e.doubleData.length) {
                t.uint32(82).fork();
                n = 0;
                for (; n < e.doubleData.length; ++n) {
                  t.double(e.doubleData[n]);
                }
                t.ldelim();
              }
              if (e.uint64Data != null && e.uint64Data.length) {
                t.uint32(90).fork();
                n = 0;
                for (; n < e.uint64Data.length; ++n) {
                  t.uint64(e.uint64Data[n]);
                }
                t.ldelim();
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(98).string(e.docString);
              }
              if (e.externalData != null && e.externalData.length) {
                for (n = 0; n < e.externalData.length; ++n) {
                  l.onnx.StringStringEntryProto.encode(e.externalData[n], t.uint32(106).fork()).ldelim();
                }
              }
              if (e.dataLocation != null && Object.hasOwnProperty.call(e, 'dataLocation')) {
                t.uint32(112).int32(e.dataLocation);
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TensorProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    if (!r.dims || !r.dims.length) {
                      r.dims = [];
                    }
                    if ((o & 7) == 2) {
                      for (var s = e.uint32() + e.pos; e.pos < s;) {
                        r.dims.push(e.int64());
                      }
                    } else {
                      r.dims.push(e.int64());
                    }
                    break;
                  case 2:
                    r.dataType = e.int32();
                    break;
                  case 3:
                    r.segment = l.onnx.TensorProto.Segment.decode(e, e.uint32());
                    break;
                  case 4:
                    if (!r.floatData || !r.floatData.length) {
                      r.floatData = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.floatData.push(e.float());
                      }
                    } else {
                      r.floatData.push(e.float());
                    }
                    break;
                  case 5:
                    if (!r.int32Data || !r.int32Data.length) {
                      r.int32Data = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.int32Data.push(e.int32());
                      }
                    } else {
                      r.int32Data.push(e.int32());
                    }
                    break;
                  case 6:
                    if (!r.stringData || !r.stringData.length) {
                      r.stringData = [];
                    }
                    r.stringData.push(e.bytes());
                    break;
                  case 7:
                    if (!r.int64Data || !r.int64Data.length) {
                      r.int64Data = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.int64Data.push(e.int64());
                      }
                    } else {
                      r.int64Data.push(e.int64());
                    }
                    break;
                  case 8:
                    r.name = e.string();
                    break;
                  case 12:
                    r.docString = e.string();
                    break;
                  case 9:
                    r.rawData = e.bytes();
                    break;
                  case 13:
                    if (!r.externalData || !r.externalData.length) {
                      r.externalData = [];
                    }
                    r.externalData.push(l.onnx.StringStringEntryProto.decode(e, e.uint32()));
                    break;
                  case 14:
                    r.dataLocation = e.int32();
                    break;
                  case 10:
                    if (!r.doubleData || !r.doubleData.length) {
                      r.doubleData = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.doubleData.push(e.double());
                      }
                    } else {
                      r.doubleData.push(e.double());
                    }
                    break;
                  case 11:
                    if (!r.uint64Data || !r.uint64Data.length) {
                      r.uint64Data = [];
                    }
                    if ((o & 7) == 2) {
                      for (s = e.uint32() + e.pos; e.pos < s;) {
                        r.uint64Data.push(e.uint64());
                      }
                    } else {
                      r.uint64Data.push(e.uint64());
                    }
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.dims != null && e.hasOwnProperty('dims')) {
                if (!Array.isArray(e.dims)) {
                  return 'dims: array expected';
                }
                for (var t = 0; t < e.dims.length; ++t) {
                  if (!u.isInteger(e.dims[t]) && (!e.dims[t] || !u.isInteger(e.dims[t].low) || !u.isInteger(e.dims[t].high))) {
                    return 'dims: integer|Long[] expected';
                  }
                }
              }
              if (e.dataType != null && e.hasOwnProperty('dataType') && !u.isInteger(e.dataType)) {
                return 'dataType: integer expected';
              }
              if (e.segment != null && e.hasOwnProperty('segment') && (n = l.onnx.TensorProto.Segment.verify(e.segment))) {
                return `segment.${n}`;
              }
              if (e.floatData != null && e.hasOwnProperty('floatData')) {
                if (!Array.isArray(e.floatData)) {
                  return 'floatData: array expected';
                }
                for (t = 0; t < e.floatData.length; ++t) {
                  if (typeof e.floatData[t] != 'number') {
                    return 'floatData: number[] expected';
                  }
                }
              }
              if (e.int32Data != null && e.hasOwnProperty('int32Data')) {
                if (!Array.isArray(e.int32Data)) {
                  return 'int32Data: array expected';
                }
                for (t = 0; t < e.int32Data.length; ++t) {
                  if (!u.isInteger(e.int32Data[t])) {
                    return 'int32Data: integer[] expected';
                  }
                }
              }
              if (e.stringData != null && e.hasOwnProperty('stringData')) {
                if (!Array.isArray(e.stringData)) {
                  return 'stringData: array expected';
                }
                for (t = 0; t < e.stringData.length; ++t) {
                  if ((!e.stringData[t] || typeof e.stringData[t].length != 'number') && !u.isString(e.stringData[t])) {
                    return 'stringData: buffer[] expected';
                  }
                }
              }
              if (e.int64Data != null && e.hasOwnProperty('int64Data')) {
                if (!Array.isArray(e.int64Data)) {
                  return 'int64Data: array expected';
                }
                for (t = 0; t < e.int64Data.length; ++t) {
                  if (!u.isInteger(e.int64Data[t]) && (!e.int64Data[t] || !u.isInteger(e.int64Data[t].low) || !u.isInteger(e.int64Data[t].high))) {
                    return 'int64Data: integer|Long[] expected';
                  }
                }
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              }
              if (e.rawData != null && e.hasOwnProperty('rawData') && (!e.rawData || typeof e.rawData.length != 'number') && !u.isString(e.rawData)) {
                return 'rawData: buffer expected';
              }
              if (e.externalData != null && e.hasOwnProperty('externalData')) {
                if (!Array.isArray(e.externalData)) {
                  return 'externalData: array expected';
                }
                for (t = 0; t < e.externalData.length; ++t) {
                  var n;
                  if (n = l.onnx.StringStringEntryProto.verify(e.externalData[t])) {
                    return `externalData.${n}`;
                  }
                }
              }
              if (e.dataLocation != null && e.hasOwnProperty('dataLocation')) {
                switch (e.dataLocation) {
                  default:
                    return 'dataLocation: enum value expected';
                  case 0:
                  case 1:
                }
              }
              if (e.doubleData != null && e.hasOwnProperty('doubleData')) {
                if (!Array.isArray(e.doubleData)) {
                  return 'doubleData: array expected';
                }
                for (t = 0; t < e.doubleData.length; ++t) {
                  if (typeof e.doubleData[t] != 'number') {
                    return 'doubleData: number[] expected';
                  }
                }
              }
              if (e.uint64Data != null && e.hasOwnProperty('uint64Data')) {
                if (!Array.isArray(e.uint64Data)) {
                  return 'uint64Data: array expected';
                }
                for (t = 0; t < e.uint64Data.length; ++t) {
                  if (!u.isInteger(e.uint64Data[t]) && (!e.uint64Data[t] || !u.isInteger(e.uint64Data[t].low) || !u.isInteger(e.uint64Data[t].high))) {
                    return 'uint64Data: integer|Long[] expected';
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.TensorProto) {
                return e;
              }
              var t = new l.onnx.TensorProto();
              if (e.dims) {
                if (!Array.isArray(e.dims)) {
                  throw TypeError('.onnx.TensorProto.dims: array expected');
                }
                t.dims = [];
                for (var n = 0; n < e.dims.length; ++n) {
                  if (u.Long) {
                    (t.dims[n] = u.Long.fromValue(e.dims[n])).unsigned = false;
                  } else {
                    if (typeof e.dims[n] == 'string') {
                      t.dims[n] = parseInt(e.dims[n], 10);
                    } else {
                      if (typeof e.dims[n] == 'number') {
                        t.dims[n] = e.dims[n];
                      } else {
                        if (typeof e.dims[n] == 'object') {
                          t.dims[n] = new u.LongBits(e.dims[n].low >>> 0, e.dims[n].high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
              }
              if (e.dataType != null) {
                t.dataType = e.dataType | 0;
              }
              if (e.segment != null) {
                if (typeof e.segment != 'object') {
                  throw TypeError('.onnx.TensorProto.segment: object expected');
                }
                t.segment = l.onnx.TensorProto.Segment.fromObject(e.segment);
              }
              if (e.floatData) {
                if (!Array.isArray(e.floatData)) {
                  throw TypeError('.onnx.TensorProto.floatData: array expected');
                }
                t.floatData = [];
                n = 0;
                for (; n < e.floatData.length; ++n) {
                  t.floatData[n] = Number(e.floatData[n]);
                }
              }
              if (e.int32Data) {
                if (!Array.isArray(e.int32Data)) {
                  throw TypeError('.onnx.TensorProto.int32Data: array expected');
                }
                t.int32Data = [];
                n = 0;
                for (; n < e.int32Data.length; ++n) {
                  t.int32Data[n] = e.int32Data[n] | 0;
                }
              }
              if (e.stringData) {
                if (!Array.isArray(e.stringData)) {
                  throw TypeError('.onnx.TensorProto.stringData: array expected');
                }
                t.stringData = [];
                n = 0;
                for (; n < e.stringData.length; ++n) {
                  if (typeof e.stringData[n] == 'string') {
                    u.base64.decode(e.stringData[n], t.stringData[n] = u.newBuffer(u.base64.length(e.stringData[n])), 0);
                  } else {
                    if (e.stringData[n].length >= 0) {
                      t.stringData[n] = e.stringData[n];
                    }
                  }
                }
              }
              if (e.int64Data) {
                if (!Array.isArray(e.int64Data)) {
                  throw TypeError('.onnx.TensorProto.int64Data: array expected');
                }
                t.int64Data = [];
                n = 0;
                for (; n < e.int64Data.length; ++n) {
                  if (u.Long) {
                    (t.int64Data[n] = u.Long.fromValue(e.int64Data[n])).unsigned = false;
                  } else {
                    if (typeof e.int64Data[n] == 'string') {
                      t.int64Data[n] = parseInt(e.int64Data[n], 10);
                    } else {
                      if (typeof e.int64Data[n] == 'number') {
                        t.int64Data[n] = e.int64Data[n];
                      } else {
                        if (typeof e.int64Data[n] == 'object') {
                          t.int64Data[n] = new u.LongBits(e.int64Data[n].low >>> 0, e.int64Data[n].high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
              }
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              if (e.rawData != null) {
                if (typeof e.rawData == 'string') {
                  u.base64.decode(e.rawData, t.rawData = u.newBuffer(u.base64.length(e.rawData)), 0);
                } else {
                  if (e.rawData.length >= 0) {
                    t.rawData = e.rawData;
                  }
                }
              }
              if (e.externalData) {
                if (!Array.isArray(e.externalData)) {
                  throw TypeError('.onnx.TensorProto.externalData: array expected');
                }
                t.externalData = [];
                n = 0;
                for (; n < e.externalData.length; ++n) {
                  if (typeof e.externalData[n] != 'object') {
                    throw TypeError('.onnx.TensorProto.externalData: object expected');
                  }
                  t.externalData[n] = l.onnx.StringStringEntryProto.fromObject(e.externalData[n]);
                }
              }
              switch (e.dataLocation) {
                default:
                  if (typeof e.dataLocation == 'number') {
                    t.dataLocation = e.dataLocation;
                    break;
                  }
                  break;
                case 'DEFAULT':
                case 0:
                  t.dataLocation = 0;
                  break;
                case 'EXTERNAL':
                case 1:
                  t.dataLocation = 1;
              }
              if (e.doubleData) {
                if (!Array.isArray(e.doubleData)) {
                  throw TypeError('.onnx.TensorProto.doubleData: array expected');
                }
                t.doubleData = [];
                n = 0;
                for (; n < e.doubleData.length; ++n) {
                  t.doubleData[n] = Number(e.doubleData[n]);
                }
              }
              if (e.uint64Data) {
                if (!Array.isArray(e.uint64Data)) {
                  throw TypeError('.onnx.TensorProto.uint64Data: array expected');
                }
                t.uint64Data = [];
                n = 0;
                for (; n < e.uint64Data.length; ++n) {
                  if (u.Long) {
                    (t.uint64Data[n] = u.Long.fromValue(e.uint64Data[n])).unsigned = true;
                  } else {
                    if (typeof e.uint64Data[n] == 'string') {
                      t.uint64Data[n] = parseInt(e.uint64Data[n], 10);
                    } else {
                      if (typeof e.uint64Data[n] == 'number') {
                        t.uint64Data[n] = e.uint64Data[n];
                      } else {
                        if (typeof e.uint64Data[n] == 'object') {
                          t.uint64Data[n] = new u.LongBits(e.uint64Data[n].low >>> 0, e.uint64Data[n].high >>> 0).toNumber(true);
                        }
                      }
                    }
                  }
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.dims = [];
                n.floatData = [];
                n.int32Data = [];
                n.stringData = [];
                n.int64Data = [];
                n.doubleData = [];
                n.uint64Data = [];
                n.externalData = [];
              }
              if (t.defaults) {
                n.dataType = 0;
                n.segment = null;
                n.name = '';
                if (t.bytes === String) {
                  n.rawData = '';
                } else {
                  n.rawData = [];
                  if (t.bytes !== Array) {
                    n.rawData = u.newBuffer(n.rawData);
                  }
                }
                n.docString = '';
                n.dataLocation = t.enums === String ? 'DEFAULT' : 0;
              }
              if (e.dims && e.dims.length) {
                n.dims = [];
                for (var r = 0; r < e.dims.length; ++r) {
                  if (typeof e.dims[r] == 'number') {
                    n.dims[r] = t.longs === String ? String(e.dims[r]) : e.dims[r];
                  } else {
                    n.dims[r] = t.longs === String ? u.Long.prototype.toString.call(e.dims[r]) : t.longs === Number ? new u.LongBits(e.dims[r].low >>> 0, e.dims[r].high >>> 0).toNumber() : e.dims[r];
                  }
                }
              }
              if (e.dataType != null && e.hasOwnProperty('dataType')) {
                n.dataType = e.dataType;
              }
              if (e.segment != null && e.hasOwnProperty('segment')) {
                n.segment = l.onnx.TensorProto.Segment.toObject(e.segment, t);
              }
              if (e.floatData && e.floatData.length) {
                n.floatData = [];
                r = 0;
                for (; r < e.floatData.length; ++r) {
                  n.floatData[r] = t.json && !isFinite(e.floatData[r]) ? String(e.floatData[r]) : e.floatData[r];
                }
              }
              if (e.int32Data && e.int32Data.length) {
                n.int32Data = [];
                r = 0;
                for (; r < e.int32Data.length; ++r) {
                  n.int32Data[r] = e.int32Data[r];
                }
              }
              if (e.stringData && e.stringData.length) {
                n.stringData = [];
                r = 0;
                for (; r < e.stringData.length; ++r) {
                  n.stringData[r] = t.bytes === String ? u.base64.encode(e.stringData[r], 0, e.stringData[r].length) : t.bytes === Array ? Array.prototype.slice.call(e.stringData[r]) : e.stringData[r];
                }
              }
              if (e.int64Data && e.int64Data.length) {
                n.int64Data = [];
                r = 0;
                for (; r < e.int64Data.length; ++r) {
                  if (typeof e.int64Data[r] == 'number') {
                    n.int64Data[r] = t.longs === String ? String(e.int64Data[r]) : e.int64Data[r];
                  } else {
                    n.int64Data[r] = t.longs === String ? u.Long.prototype.toString.call(e.int64Data[r]) : t.longs === Number ? new u.LongBits(e.int64Data[r].low >>> 0, e.int64Data[r].high >>> 0).toNumber() : e.int64Data[r];
                  }
                }
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.rawData != null && e.hasOwnProperty('rawData')) {
                n.rawData = t.bytes === String ? u.base64.encode(e.rawData, 0, e.rawData.length) : t.bytes === Array ? Array.prototype.slice.call(e.rawData) : e.rawData;
              }
              if (e.doubleData && e.doubleData.length) {
                n.doubleData = [];
                r = 0;
                for (; r < e.doubleData.length; ++r) {
                  n.doubleData[r] = t.json && !isFinite(e.doubleData[r]) ? String(e.doubleData[r]) : e.doubleData[r];
                }
              }
              if (e.uint64Data && e.uint64Data.length) {
                n.uint64Data = [];
                r = 0;
                for (; r < e.uint64Data.length; ++r) {
                  if (typeof e.uint64Data[r] == 'number') {
                    n.uint64Data[r] = t.longs === String ? String(e.uint64Data[r]) : e.uint64Data[r];
                  } else {
                    n.uint64Data[r] = t.longs === String ? u.Long.prototype.toString.call(e.uint64Data[r]) : t.longs === Number ? new u.LongBits(e.uint64Data[r].low >>> 0, e.uint64Data[r].high >>> 0).toNumber(true) : e.uint64Data[r];
                  }
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.externalData && e.externalData.length) {
                n.externalData = [];
                r = 0;
                for (; r < e.externalData.length; ++r) {
                  n.externalData[r] = l.onnx.StringStringEntryProto.toObject(e.externalData[r], t);
                }
              }
              if (e.dataLocation != null && e.hasOwnProperty('dataLocation')) {
                n.dataLocation = t.enums === String ? l.onnx.TensorProto.DataLocation[e.dataLocation] === undefined ? e.dataLocation : l.onnx.TensorProto.DataLocation[e.dataLocation] : e.dataLocation;
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.TensorProto';
            };
            e.DataType = function () {
              var e = {};
              var t = Object.create(e);
              t[e[0] = 'UNDEFINED'] = 0;
              t[e[1] = 'FLOAT'] = 1;
              t[e[2] = 'UINT8'] = 2;
              t[e[3] = 'INT8'] = 3;
              t[e[4] = 'UINT16'] = 4;
              t[e[5] = 'INT16'] = 5;
              t[e[6] = 'INT32'] = 6;
              t[e[7] = 'INT64'] = 7;
              t[e[8] = 'STRING'] = 8;
              t[e[9] = 'BOOL'] = 9;
              t[e[10] = 'FLOAT16'] = 10;
              t[e[11] = 'DOUBLE'] = 11;
              t[e[12] = 'UINT32'] = 12;
              t[e[13] = 'UINT64'] = 13;
              t[e[14] = 'COMPLEX64'] = 14;
              t[e[15] = 'COMPLEX128'] = 15;
              t[e[16] = 'BFLOAT16'] = 16;
              t[e[17] = 'FLOAT8E4M3FN'] = 17;
              t[e[18] = 'FLOAT8E4M3FNUZ'] = 18;
              t[e[19] = 'FLOAT8E5M2'] = 19;
              t[e[20] = 'FLOAT8E5M2FNUZ'] = 20;
              return t;
            }();
            e.Segment = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.begin = u.Long ? u.Long.fromBits(0, 0, false) : 0;
              e.prototype.end = u.Long ? u.Long.fromBits(0, 0, false) : 0;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.begin != null && Object.hasOwnProperty.call(e, 'begin')) {
                  t.uint32(8).int64(e.begin);
                }
                if (e.end != null && Object.hasOwnProperty.call(e, 'end')) {
                  t.uint32(16).int64(e.end);
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TensorProto.Segment(); e.pos < n;) {
                  var o = e.uint32();
                  switch (o >>> 3) {
                    case 1:
                      r.begin = e.int64();
                      break;
                    case 2:
                      r.end = e.int64();
                      break;
                    default:
                      e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                } else {
                  if (e.begin != null && e.hasOwnProperty('begin') && !u.isInteger(e.begin) && (!e.begin || !u.isInteger(e.begin.low) || !u.isInteger(e.begin.high))) {
                    return 'begin: integer|Long expected';
                  } else {
                    if (e.end != null && e.hasOwnProperty('end') && !u.isInteger(e.end) && (!e.end || !u.isInteger(e.end.low) || !u.isInteger(e.end.high))) {
                      return 'end: integer|Long expected';
                    } else {
                      return null;
                    }
                  }
                }
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TensorProto.Segment) {
                  return e;
                }
                var t = new l.onnx.TensorProto.Segment();
                if (e.begin != null) {
                  if (u.Long) {
                    (t.begin = u.Long.fromValue(e.begin)).unsigned = false;
                  } else {
                    if (typeof e.begin == 'string') {
                      t.begin = parseInt(e.begin, 10);
                    } else {
                      if (typeof e.begin == 'number') {
                        t.begin = e.begin;
                      } else {
                        if (typeof e.begin == 'object') {
                          t.begin = new u.LongBits(e.begin.low >>> 0, e.begin.high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
                if (e.end != null) {
                  if (u.Long) {
                    (t.end = u.Long.fromValue(e.end)).unsigned = false;
                  } else {
                    if (typeof e.end == 'string') {
                      t.end = parseInt(e.end, 10);
                    } else {
                      if (typeof e.end == 'number') {
                        t.end = e.end;
                      } else {
                        if (typeof e.end == 'object') {
                          t.end = new u.LongBits(e.end.low >>> 0, e.end.high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  if (u.Long) {
                    var r = new u.Long(0, 0, false);
                    n.begin = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                  } else {
                    n.begin = t.longs === String ? '0' : 0;
                  }
                  if (u.Long) {
                    r = new u.Long(0, 0, false);
                    n.end = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                  } else {
                    n.end = t.longs === String ? '0' : 0;
                  }
                }
                if (e.begin != null && e.hasOwnProperty('begin')) {
                  if (typeof e.begin == 'number') {
                    n.begin = t.longs === String ? String(e.begin) : e.begin;
                  } else {
                    n.begin = t.longs === String ? u.Long.prototype.toString.call(e.begin) : t.longs === Number ? new u.LongBits(e.begin.low >>> 0, e.begin.high >>> 0).toNumber() : e.begin;
                  }
                }
                if (e.end != null && e.hasOwnProperty('end')) {
                  if (typeof e.end == 'number') {
                    n.end = t.longs === String ? String(e.end) : e.end;
                  } else {
                    n.end = t.longs === String ? u.Long.prototype.toString.call(e.end) : t.longs === Number ? new u.LongBits(e.end.low >>> 0, e.end.high >>> 0).toNumber() : e.end;
                  }
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TensorProto.Segment';
              };
              return e;
            }();
            e.DataLocation = function () {
              var e = {};
              var t = Object.create(e);
              t[e[0] = 'DEFAULT'] = 0;
              t[e[1] = 'EXTERNAL'] = 1;
              return t;
            }();
            return e;
          }();
          s.SparseTensorProto = function () {
            function e(e) {
              this.dims = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.values = null;
            e.prototype.indices = null;
            e.prototype.dims = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.values != null && Object.hasOwnProperty.call(e, 'values')) {
                l.onnx.TensorProto.encode(e.values, t.uint32(10).fork()).ldelim();
              }
              if (e.indices != null && Object.hasOwnProperty.call(e, 'indices')) {
                l.onnx.TensorProto.encode(e.indices, t.uint32(18).fork()).ldelim();
              }
              if (e.dims != null && e.dims.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.dims.length; ++n) {
                  t.int64(e.dims[n]);
                }
                t.ldelim();
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.SparseTensorProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.values = l.onnx.TensorProto.decode(e, e.uint32());
                    break;
                  case 2:
                    r.indices = l.onnx.TensorProto.decode(e, e.uint32());
                    break;
                  case 3:
                    if (!r.dims || !r.dims.length) {
                      r.dims = [];
                    }
                    if ((o & 7) == 2) {
                      for (var s = e.uint32() + e.pos; e.pos < s;) {
                        r.dims.push(e.int64());
                      }
                    } else {
                      r.dims.push(e.int64());
                    }
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              var t;
              if (e.values != null && e.hasOwnProperty('values') && (t = l.onnx.TensorProto.verify(e.values))) {
                return `values.${t}`;
              }
              if (e.indices != null && e.hasOwnProperty('indices') && (t = l.onnx.TensorProto.verify(e.indices))) {
                return `indices.${t}`;
              }
              if (e.dims != null && e.hasOwnProperty('dims')) {
                if (!Array.isArray(e.dims)) {
                  return 'dims: array expected';
                }
                for (var n = 0; n < e.dims.length; ++n) {
                  if (!u.isInteger(e.dims[n]) && (!e.dims[n] || !u.isInteger(e.dims[n].low) || !u.isInteger(e.dims[n].high))) {
                    return 'dims: integer|Long[] expected';
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.SparseTensorProto) {
                return e;
              }
              var t = new l.onnx.SparseTensorProto();
              if (e.values != null) {
                if (typeof e.values != 'object') {
                  throw TypeError('.onnx.SparseTensorProto.values: object expected');
                }
                t.values = l.onnx.TensorProto.fromObject(e.values);
              }
              if (e.indices != null) {
                if (typeof e.indices != 'object') {
                  throw TypeError('.onnx.SparseTensorProto.indices: object expected');
                }
                t.indices = l.onnx.TensorProto.fromObject(e.indices);
              }
              if (e.dims) {
                if (!Array.isArray(e.dims)) {
                  throw TypeError('.onnx.SparseTensorProto.dims: array expected');
                }
                t.dims = [];
                for (var n = 0; n < e.dims.length; ++n) {
                  if (u.Long) {
                    (t.dims[n] = u.Long.fromValue(e.dims[n])).unsigned = false;
                  } else {
                    if (typeof e.dims[n] == 'string') {
                      t.dims[n] = parseInt(e.dims[n], 10);
                    } else {
                      if (typeof e.dims[n] == 'number') {
                        t.dims[n] = e.dims[n];
                      } else {
                        if (typeof e.dims[n] == 'object') {
                          t.dims[n] = new u.LongBits(e.dims[n].low >>> 0, e.dims[n].high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.dims = [];
              }
              if (t.defaults) {
                n.values = null;
                n.indices = null;
              }
              if (e.values != null && e.hasOwnProperty('values')) {
                n.values = l.onnx.TensorProto.toObject(e.values, t);
              }
              if (e.indices != null && e.hasOwnProperty('indices')) {
                n.indices = l.onnx.TensorProto.toObject(e.indices, t);
              }
              if (e.dims && e.dims.length) {
                n.dims = [];
                for (var r = 0; r < e.dims.length; ++r) {
                  if (typeof e.dims[r] == 'number') {
                    n.dims[r] = t.longs === String ? String(e.dims[r]) : e.dims[r];
                  } else {
                    n.dims[r] = t.longs === String ? u.Long.prototype.toString.call(e.dims[r]) : t.longs === Number ? new u.LongBits(e.dims[r].low >>> 0, e.dims[r].high >>> 0).toNumber() : e.dims[r];
                  }
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.SparseTensorProto';
            };
            return e;
          }();
          s.TensorShapeProto = function () {
            function e(e) {
              this.dim = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.dim = u.emptyArray;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.dim != null && e.dim.length) {
                for (var n = 0; n < e.dim.length; ++n) {
                  l.onnx.TensorShapeProto.Dimension.encode(e.dim[n], t.uint32(10).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TensorShapeProto(); e.pos < n;) {
                var o = e.uint32();
                if (o >>> 3 == 1) {
                  if (!r.dim || !r.dim.length) {
                    r.dim = [];
                  }
                  r.dim.push(l.onnx.TensorShapeProto.Dimension.decode(e, e.uint32()));
                } else {
                  e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.dim != null && e.hasOwnProperty('dim')) {
                if (!Array.isArray(e.dim)) {
                  return 'dim: array expected';
                }
                for (var t = 0; t < e.dim.length; ++t) {
                  var n = l.onnx.TensorShapeProto.Dimension.verify(e.dim[t]);
                  if (n) {
                    return `dim.${n}`;
                  }
                }
              }
              return null;
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.TensorShapeProto) {
                return e;
              }
              var t = new l.onnx.TensorShapeProto();
              if (e.dim) {
                if (!Array.isArray(e.dim)) {
                  throw TypeError('.onnx.TensorShapeProto.dim: array expected');
                }
                t.dim = [];
                for (var n = 0; n < e.dim.length; ++n) {
                  if (typeof e.dim[n] != 'object') {
                    throw TypeError('.onnx.TensorShapeProto.dim: object expected');
                  }
                  t.dim[n] = l.onnx.TensorShapeProto.Dimension.fromObject(e.dim[n]);
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.dim = [];
              }
              if (e.dim && e.dim.length) {
                n.dim = [];
                for (var r = 0; r < e.dim.length; ++r) {
                  n.dim[r] = l.onnx.TensorShapeProto.Dimension.toObject(e.dim[r], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.TensorShapeProto';
            };
            e.Dimension = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              var t;
              e.prototype.dimValue = null;
              e.prototype.dimParam = null;
              e.prototype.denotation = '';
              Object.defineProperty(e.prototype, 'value', {
                get: u.oneOfGetter(t = ['dimValue', 'dimParam']),
                set: u.oneOfSetter(t)
              });
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.dimValue != null && Object.hasOwnProperty.call(e, 'dimValue')) {
                  t.uint32(8).int64(e.dimValue);
                }
                if (e.dimParam != null && Object.hasOwnProperty.call(e, 'dimParam')) {
                  t.uint32(18).string(e.dimParam);
                }
                if (e.denotation != null && Object.hasOwnProperty.call(e, 'denotation')) {
                  t.uint32(26).string(e.denotation);
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TensorShapeProto.Dimension(); e.pos < n;) {
                  var o = e.uint32();
                  switch (o >>> 3) {
                    case 1:
                      r.dimValue = e.int64();
                      break;
                    case 2:
                      r.dimParam = e.string();
                      break;
                    case 3:
                      r.denotation = e.string();
                      break;
                    default:
                      e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                var t = {};
                if (e.dimValue != null && e.hasOwnProperty('dimValue') && (t.value = 1, !u.isInteger(e.dimValue) && (!e.dimValue || !u.isInteger(e.dimValue.low) || !u.isInteger(e.dimValue.high)))) {
                  return 'dimValue: integer|Long expected';
                }
                if (e.dimParam != null && e.hasOwnProperty('dimParam')) {
                  if (t.value === 1) {
                    return 'value: multiple values';
                  }
                  t.value = 1;
                  if (!u.isString(e.dimParam)) {
                    return 'dimParam: string expected';
                  }
                }
                if (e.denotation != null && e.hasOwnProperty('denotation') && !u.isString(e.denotation)) {
                  return 'denotation: string expected';
                } else {
                  return null;
                }
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TensorShapeProto.Dimension) {
                  return e;
                }
                var t = new l.onnx.TensorShapeProto.Dimension();
                if (e.dimValue != null) {
                  if (u.Long) {
                    (t.dimValue = u.Long.fromValue(e.dimValue)).unsigned = false;
                  } else {
                    if (typeof e.dimValue == 'string') {
                      t.dimValue = parseInt(e.dimValue, 10);
                    } else {
                      if (typeof e.dimValue == 'number') {
                        t.dimValue = e.dimValue;
                      } else {
                        if (typeof e.dimValue == 'object') {
                          t.dimValue = new u.LongBits(e.dimValue.low >>> 0, e.dimValue.high >>> 0).toNumber();
                        }
                      }
                    }
                  }
                }
                if (e.dimParam != null) {
                  t.dimParam = String(e.dimParam);
                }
                if (e.denotation != null) {
                  t.denotation = String(e.denotation);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.denotation = '';
                }
                if (e.dimValue != null && e.hasOwnProperty('dimValue')) {
                  if (typeof e.dimValue == 'number') {
                    n.dimValue = t.longs === String ? String(e.dimValue) : e.dimValue;
                  } else {
                    n.dimValue = t.longs === String ? u.Long.prototype.toString.call(e.dimValue) : t.longs === Number ? new u.LongBits(e.dimValue.low >>> 0, e.dimValue.high >>> 0).toNumber() : e.dimValue;
                  }
                  if (t.oneofs) {
                    n.value = 'dimValue';
                  }
                }
                if (e.dimParam != null && e.hasOwnProperty('dimParam')) {
                  n.dimParam = e.dimParam;
                  if (t.oneofs) {
                    n.value = 'dimParam';
                  }
                }
                if (e.denotation != null && e.hasOwnProperty('denotation')) {
                  n.denotation = e.denotation;
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TensorShapeProto.Dimension';
              };
              return e;
            }();
            return e;
          }();
          s.TypeProto = function () {
            function e(e) {
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            var t;
            e.prototype.tensorType = null;
            e.prototype.sequenceType = null;
            e.prototype.mapType = null;
            e.prototype.optionalType = null;
            e.prototype.sparseTensorType = null;
            e.prototype.denotation = '';
            Object.defineProperty(e.prototype, 'value', {
              get: u.oneOfGetter(t = ['tensorType', 'sequenceType', 'mapType', 'optionalType', 'sparseTensorType']),
              set: u.oneOfSetter(t)
            });
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.tensorType != null && Object.hasOwnProperty.call(e, 'tensorType')) {
                l.onnx.TypeProto.Tensor.encode(e.tensorType, t.uint32(10).fork()).ldelim();
              }
              if (e.sequenceType != null && Object.hasOwnProperty.call(e, 'sequenceType')) {
                l.onnx.TypeProto.Sequence.encode(e.sequenceType, t.uint32(34).fork()).ldelim();
              }
              if (e.mapType != null && Object.hasOwnProperty.call(e, 'mapType')) {
                l.onnx.TypeProto.Map.encode(e.mapType, t.uint32(42).fork()).ldelim();
              }
              if (e.denotation != null && Object.hasOwnProperty.call(e, 'denotation')) {
                t.uint32(50).string(e.denotation);
              }
              if (e.sparseTensorType != null && Object.hasOwnProperty.call(e, 'sparseTensorType')) {
                l.onnx.TypeProto.SparseTensor.encode(e.sparseTensorType, t.uint32(66).fork()).ldelim();
              }
              if (e.optionalType != null && Object.hasOwnProperty.call(e, 'optionalType')) {
                l.onnx.TypeProto.Optional.encode(e.optionalType, t.uint32(74).fork()).ldelim();
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.tensorType = l.onnx.TypeProto.Tensor.decode(e, e.uint32());
                    break;
                  case 4:
                    r.sequenceType = l.onnx.TypeProto.Sequence.decode(e, e.uint32());
                    break;
                  case 5:
                    r.mapType = l.onnx.TypeProto.Map.decode(e, e.uint32());
                    break;
                  case 9:
                    r.optionalType = l.onnx.TypeProto.Optional.decode(e, e.uint32());
                    break;
                  case 8:
                    r.sparseTensorType = l.onnx.TypeProto.SparseTensor.decode(e, e.uint32());
                    break;
                  case 6:
                    r.denotation = e.string();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              var t = {};
              if (e.tensorType != null && e.hasOwnProperty('tensorType') && (t.value = 1, n = l.onnx.TypeProto.Tensor.verify(e.tensorType))) {
                return `tensorType.${n}`;
              }
              if (e.sequenceType != null && e.hasOwnProperty('sequenceType')) {
                if (t.value === 1) {
                  return 'value: multiple values';
                }
                t.value = 1;
                if (n = l.onnx.TypeProto.Sequence.verify(e.sequenceType)) {
                  return `sequenceType.${n}`;
                }
              }
              if (e.mapType != null && e.hasOwnProperty('mapType')) {
                if (t.value === 1) {
                  return 'value: multiple values';
                }
                t.value = 1;
                if (n = l.onnx.TypeProto.Map.verify(e.mapType)) {
                  return `mapType.${n}`;
                }
              }
              if (e.optionalType != null && e.hasOwnProperty('optionalType')) {
                if (t.value === 1) {
                  return 'value: multiple values';
                }
                t.value = 1;
                if (n = l.onnx.TypeProto.Optional.verify(e.optionalType)) {
                  return `optionalType.${n}`;
                }
              }
              if (e.sparseTensorType != null && e.hasOwnProperty('sparseTensorType')) {
                if (t.value === 1) {
                  return 'value: multiple values';
                }
                var n;
                t.value = 1;
                if (n = l.onnx.TypeProto.SparseTensor.verify(e.sparseTensorType)) {
                  return `sparseTensorType.${n}`;
                }
              }
              if (e.denotation != null && e.hasOwnProperty('denotation') && !u.isString(e.denotation)) {
                return 'denotation: string expected';
              } else {
                return null;
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.TypeProto) {
                return e;
              }
              var t = new l.onnx.TypeProto();
              if (e.tensorType != null) {
                if (typeof e.tensorType != 'object') {
                  throw TypeError('.onnx.TypeProto.tensorType: object expected');
                }
                t.tensorType = l.onnx.TypeProto.Tensor.fromObject(e.tensorType);
              }
              if (e.sequenceType != null) {
                if (typeof e.sequenceType != 'object') {
                  throw TypeError('.onnx.TypeProto.sequenceType: object expected');
                }
                t.sequenceType = l.onnx.TypeProto.Sequence.fromObject(e.sequenceType);
              }
              if (e.mapType != null) {
                if (typeof e.mapType != 'object') {
                  throw TypeError('.onnx.TypeProto.mapType: object expected');
                }
                t.mapType = l.onnx.TypeProto.Map.fromObject(e.mapType);
              }
              if (e.optionalType != null) {
                if (typeof e.optionalType != 'object') {
                  throw TypeError('.onnx.TypeProto.optionalType: object expected');
                }
                t.optionalType = l.onnx.TypeProto.Optional.fromObject(e.optionalType);
              }
              if (e.sparseTensorType != null) {
                if (typeof e.sparseTensorType != 'object') {
                  throw TypeError('.onnx.TypeProto.sparseTensorType: object expected');
                }
                t.sparseTensorType = l.onnx.TypeProto.SparseTensor.fromObject(e.sparseTensorType);
              }
              if (e.denotation != null) {
                t.denotation = String(e.denotation);
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.defaults) {
                n.denotation = '';
              }
              if (e.tensorType != null && e.hasOwnProperty('tensorType')) {
                n.tensorType = l.onnx.TypeProto.Tensor.toObject(e.tensorType, t);
                if (t.oneofs) {
                  n.value = 'tensorType';
                }
              }
              if (e.sequenceType != null && e.hasOwnProperty('sequenceType')) {
                n.sequenceType = l.onnx.TypeProto.Sequence.toObject(e.sequenceType, t);
                if (t.oneofs) {
                  n.value = 'sequenceType';
                }
              }
              if (e.mapType != null && e.hasOwnProperty('mapType')) {
                n.mapType = l.onnx.TypeProto.Map.toObject(e.mapType, t);
                if (t.oneofs) {
                  n.value = 'mapType';
                }
              }
              if (e.denotation != null && e.hasOwnProperty('denotation')) {
                n.denotation = e.denotation;
              }
              if (e.sparseTensorType != null && e.hasOwnProperty('sparseTensorType')) {
                n.sparseTensorType = l.onnx.TypeProto.SparseTensor.toObject(e.sparseTensorType, t);
                if (t.oneofs) {
                  n.value = 'sparseTensorType';
                }
              }
              if (e.optionalType != null && e.hasOwnProperty('optionalType')) {
                n.optionalType = l.onnx.TypeProto.Optional.toObject(e.optionalType, t);
                if (t.oneofs) {
                  n.value = 'optionalType';
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.TypeProto';
            };
            e.Tensor = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.elemType = 0;
              e.prototype.shape = null;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.elemType != null && Object.hasOwnProperty.call(e, 'elemType')) {
                  t.uint32(8).int32(e.elemType);
                }
                if (e.shape != null && Object.hasOwnProperty.call(e, 'shape')) {
                  l.onnx.TensorShapeProto.encode(e.shape, t.uint32(18).fork()).ldelim();
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto.Tensor(); e.pos < n;) {
                  var o = e.uint32();
                  switch (o >>> 3) {
                    case 1:
                      r.elemType = e.int32();
                      break;
                    case 2:
                      r.shape = l.onnx.TensorShapeProto.decode(e, e.uint32());
                      break;
                    default:
                      e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                if (e.elemType != null && e.hasOwnProperty('elemType') && !u.isInteger(e.elemType)) {
                  return 'elemType: integer expected';
                }
                if (e.shape != null && e.hasOwnProperty('shape')) {
                  var t = l.onnx.TensorShapeProto.verify(e.shape);
                  if (t) {
                    return `shape.${t}`;
                  }
                }
                return null;
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TypeProto.Tensor) {
                  return e;
                }
                var t = new l.onnx.TypeProto.Tensor();
                if (e.elemType != null) {
                  t.elemType = e.elemType | 0;
                }
                if (e.shape != null) {
                  if (typeof e.shape != 'object') {
                    throw TypeError('.onnx.TypeProto.Tensor.shape: object expected');
                  }
                  t.shape = l.onnx.TensorShapeProto.fromObject(e.shape);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.elemType = 0;
                  n.shape = null;
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  n.elemType = e.elemType;
                }
                if (e.shape != null && e.hasOwnProperty('shape')) {
                  n.shape = l.onnx.TensorShapeProto.toObject(e.shape, t);
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TypeProto.Tensor';
              };
              return e;
            }();
            e.Sequence = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.elemType = null;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.elemType != null && Object.hasOwnProperty.call(e, 'elemType')) {
                  l.onnx.TypeProto.encode(e.elemType, t.uint32(10).fork()).ldelim();
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto.Sequence(); e.pos < n;) {
                  var o = e.uint32();
                  if (o >>> 3 == 1) {
                    r.elemType = l.onnx.TypeProto.decode(e, e.uint32());
                  } else {
                    e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  var t = l.onnx.TypeProto.verify(e.elemType);
                  if (t) {
                    return `elemType.${t}`;
                  }
                }
                return null;
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TypeProto.Sequence) {
                  return e;
                }
                var t = new l.onnx.TypeProto.Sequence();
                if (e.elemType != null) {
                  if (typeof e.elemType != 'object') {
                    throw TypeError('.onnx.TypeProto.Sequence.elemType: object expected');
                  }
                  t.elemType = l.onnx.TypeProto.fromObject(e.elemType);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.elemType = null;
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  n.elemType = l.onnx.TypeProto.toObject(e.elemType, t);
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TypeProto.Sequence';
              };
              return e;
            }();
            e.Map = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.keyType = 0;
              e.prototype.valueType = null;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.keyType != null && Object.hasOwnProperty.call(e, 'keyType')) {
                  t.uint32(8).int32(e.keyType);
                }
                if (e.valueType != null && Object.hasOwnProperty.call(e, 'valueType')) {
                  l.onnx.TypeProto.encode(e.valueType, t.uint32(18).fork()).ldelim();
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto.Map(); e.pos < n;) {
                  var o = e.uint32();
                  switch (o >>> 3) {
                    case 1:
                      r.keyType = e.int32();
                      break;
                    case 2:
                      r.valueType = l.onnx.TypeProto.decode(e, e.uint32());
                      break;
                    default:
                      e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                if (e.keyType != null && e.hasOwnProperty('keyType') && !u.isInteger(e.keyType)) {
                  return 'keyType: integer expected';
                }
                if (e.valueType != null && e.hasOwnProperty('valueType')) {
                  var t = l.onnx.TypeProto.verify(e.valueType);
                  if (t) {
                    return `valueType.${t}`;
                  }
                }
                return null;
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TypeProto.Map) {
                  return e;
                }
                var t = new l.onnx.TypeProto.Map();
                if (e.keyType != null) {
                  t.keyType = e.keyType | 0;
                }
                if (e.valueType != null) {
                  if (typeof e.valueType != 'object') {
                    throw TypeError('.onnx.TypeProto.Map.valueType: object expected');
                  }
                  t.valueType = l.onnx.TypeProto.fromObject(e.valueType);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.keyType = 0;
                  n.valueType = null;
                }
                if (e.keyType != null && e.hasOwnProperty('keyType')) {
                  n.keyType = e.keyType;
                }
                if (e.valueType != null && e.hasOwnProperty('valueType')) {
                  n.valueType = l.onnx.TypeProto.toObject(e.valueType, t);
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TypeProto.Map';
              };
              return e;
            }();
            e.Optional = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.elemType = null;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.elemType != null && Object.hasOwnProperty.call(e, 'elemType')) {
                  l.onnx.TypeProto.encode(e.elemType, t.uint32(10).fork()).ldelim();
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto.Optional(); e.pos < n;) {
                  var o = e.uint32();
                  if (o >>> 3 == 1) {
                    r.elemType = l.onnx.TypeProto.decode(e, e.uint32());
                  } else {
                    e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  var t = l.onnx.TypeProto.verify(e.elemType);
                  if (t) {
                    return `elemType.${t}`;
                  }
                }
                return null;
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TypeProto.Optional) {
                  return e;
                }
                var t = new l.onnx.TypeProto.Optional();
                if (e.elemType != null) {
                  if (typeof e.elemType != 'object') {
                    throw TypeError('.onnx.TypeProto.Optional.elemType: object expected');
                  }
                  t.elemType = l.onnx.TypeProto.fromObject(e.elemType);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.elemType = null;
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  n.elemType = l.onnx.TypeProto.toObject(e.elemType, t);
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TypeProto.Optional';
              };
              return e;
            }();
            e.SparseTensor = function () {
              function e(e) {
                if (e) {
                  for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                    if (e[t[n]] != null) {
                      this[t[n]] = e[t[n]];
                    }
                  }
                }
              }
              e.prototype.elemType = 0;
              e.prototype.shape = null;
              e.create = function (t) {
                return new e(t);
              };
              e.encode = function (e, t) {
                if (!t) {
                  t = c.create();
                }
                if (e.elemType != null && Object.hasOwnProperty.call(e, 'elemType')) {
                  t.uint32(8).int32(e.elemType);
                }
                if (e.shape != null && Object.hasOwnProperty.call(e, 'shape')) {
                  l.onnx.TensorShapeProto.encode(e.shape, t.uint32(18).fork()).ldelim();
                }
                return t;
              };
              e.encodeDelimited = function (e, t) {
                return this.encode(e, t).ldelim();
              };
              e.decode = function (e, t) {
                if (!(e instanceof A)) {
                  e = A.create(e);
                }
                for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.TypeProto.SparseTensor(); e.pos < n;) {
                  var o = e.uint32();
                  switch (o >>> 3) {
                    case 1:
                      r.elemType = e.int32();
                      break;
                    case 2:
                      r.shape = l.onnx.TensorShapeProto.decode(e, e.uint32());
                      break;
                    default:
                      e.skipType(o & 7);
                  }
                }
                return r;
              };
              e.decodeDelimited = function (e) {
                if (!(e instanceof A)) {
                  e = new A(e);
                }
                return this.decode(e, e.uint32());
              };
              e.verify = function (e) {
                if (typeof e != 'object' || e === null) {
                  return 'object expected';
                }
                if (e.elemType != null && e.hasOwnProperty('elemType') && !u.isInteger(e.elemType)) {
                  return 'elemType: integer expected';
                }
                if (e.shape != null && e.hasOwnProperty('shape')) {
                  var t = l.onnx.TensorShapeProto.verify(e.shape);
                  if (t) {
                    return `shape.${t}`;
                  }
                }
                return null;
              };
              e.fromObject = function (e) {
                if (e instanceof l.onnx.TypeProto.SparseTensor) {
                  return e;
                }
                var t = new l.onnx.TypeProto.SparseTensor();
                if (e.elemType != null) {
                  t.elemType = e.elemType | 0;
                }
                if (e.shape != null) {
                  if (typeof e.shape != 'object') {
                    throw TypeError('.onnx.TypeProto.SparseTensor.shape: object expected');
                  }
                  t.shape = l.onnx.TensorShapeProto.fromObject(e.shape);
                }
                return t;
              };
              e.toObject = function (e, t) {
                if (!t) {
                  t = {};
                }
                var n = {};
                if (t.defaults) {
                  n.elemType = 0;
                  n.shape = null;
                }
                if (e.elemType != null && e.hasOwnProperty('elemType')) {
                  n.elemType = e.elemType;
                }
                if (e.shape != null && e.hasOwnProperty('shape')) {
                  n.shape = l.onnx.TensorShapeProto.toObject(e.shape, t);
                }
                return n;
              };
              e.prototype.toJSON = function () {
                return this.constructor.toObject(this, a.util.toJSONOptions);
              };
              e.getTypeUrl = function (e = 'type.googleapis.com') {
                return e + '/onnx.TypeProto.SparseTensor';
              };
              return e;
            }();
            return e;
          }();
          s.OperatorSetIdProto = function () {
            function e(e) {
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.domain = '';
            e.prototype.version = u.Long ? u.Long.fromBits(0, 0, false) : 0;
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.domain != null && Object.hasOwnProperty.call(e, 'domain')) {
                t.uint32(10).string(e.domain);
              }
              if (e.version != null && Object.hasOwnProperty.call(e, 'version')) {
                t.uint32(16).int64(e.version);
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.OperatorSetIdProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.domain = e.string();
                    break;
                  case 2:
                    r.version = e.int64();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              } else {
                if (e.domain != null && e.hasOwnProperty('domain') && !u.isString(e.domain)) {
                  return 'domain: string expected';
                } else {
                  if (e.version != null && e.hasOwnProperty('version') && !u.isInteger(e.version) && (!e.version || !u.isInteger(e.version.low) || !u.isInteger(e.version.high))) {
                    return 'version: integer|Long expected';
                  } else {
                    return null;
                  }
                }
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.OperatorSetIdProto) {
                return e;
              }
              var t = new l.onnx.OperatorSetIdProto();
              if (e.domain != null) {
                t.domain = String(e.domain);
              }
              if (e.version != null) {
                if (u.Long) {
                  (t.version = u.Long.fromValue(e.version)).unsigned = false;
                } else {
                  if (typeof e.version == 'string') {
                    t.version = parseInt(e.version, 10);
                  } else {
                    if (typeof e.version == 'number') {
                      t.version = e.version;
                    } else {
                      if (typeof e.version == 'object') {
                        t.version = new u.LongBits(e.version.low >>> 0, e.version.high >>> 0).toNumber();
                      }
                    }
                  }
                }
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.defaults) {
                n.domain = '';
                if (u.Long) {
                  var r = new u.Long(0, 0, false);
                  n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r;
                } else {
                  n.version = t.longs === String ? '0' : 0;
                }
              }
              if (e.domain != null && e.hasOwnProperty('domain')) {
                n.domain = e.domain;
              }
              if (e.version != null && e.hasOwnProperty('version')) {
                if (typeof e.version == 'number') {
                  n.version = t.longs === String ? String(e.version) : e.version;
                } else {
                  n.version = t.longs === String ? u.Long.prototype.toString.call(e.version) : t.longs === Number ? new u.LongBits(e.version.low >>> 0, e.version.high >>> 0).toNumber() : e.version;
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.OperatorSetIdProto';
            };
            return e;
          }();
          s.OperatorStatus = function () {
            var e = {};
            var t = Object.create(e);
            t[e[0] = 'EXPERIMENTAL'] = 0;
            t[e[1] = 'STABLE'] = 1;
            return t;
          }();
          s.FunctionProto = function () {
            function e(e) {
              this.input = [];
              this.output = [];
              this.attribute = [];
              this.attributeProto = [];
              this.node = [];
              this.opsetImport = [];
              if (e) {
                for (var t = Object.keys(e), n = 0; n < t.length; ++n) {
                  if (e[t[n]] != null) {
                    this[t[n]] = e[t[n]];
                  }
                }
              }
            }
            e.prototype.name = '';
            e.prototype.input = u.emptyArray;
            e.prototype.output = u.emptyArray;
            e.prototype.attribute = u.emptyArray;
            e.prototype.attributeProto = u.emptyArray;
            e.prototype.node = u.emptyArray;
            e.prototype.docString = '';
            e.prototype.opsetImport = u.emptyArray;
            e.prototype.domain = '';
            e.create = function (t) {
              return new e(t);
            };
            e.encode = function (e, t) {
              if (!t) {
                t = c.create();
              }
              if (e.name != null && Object.hasOwnProperty.call(e, 'name')) {
                t.uint32(10).string(e.name);
              }
              if (e.input != null && e.input.length) {
                for (var n = 0; n < e.input.length; ++n) {
                  t.uint32(34).string(e.input[n]);
                }
              }
              if (e.output != null && e.output.length) {
                for (n = 0; n < e.output.length; ++n) {
                  t.uint32(42).string(e.output[n]);
                }
              }
              if (e.attribute != null && e.attribute.length) {
                for (n = 0; n < e.attribute.length; ++n) {
                  t.uint32(50).string(e.attribute[n]);
                }
              }
              if (e.node != null && e.node.length) {
                for (n = 0; n < e.node.length; ++n) {
                  l.onnx.NodeProto.encode(e.node[n], t.uint32(58).fork()).ldelim();
                }
              }
              if (e.docString != null && Object.hasOwnProperty.call(e, 'docString')) {
                t.uint32(66).string(e.docString);
              }
              if (e.opsetImport != null && e.opsetImport.length) {
                for (n = 0; n < e.opsetImport.length; ++n) {
                  l.onnx.OperatorSetIdProto.encode(e.opsetImport[n], t.uint32(74).fork()).ldelim();
                }
              }
              if (e.domain != null && Object.hasOwnProperty.call(e, 'domain')) {
                t.uint32(82).string(e.domain);
              }
              if (e.attributeProto != null && e.attributeProto.length) {
                for (n = 0; n < e.attributeProto.length; ++n) {
                  l.onnx.AttributeProto.encode(e.attributeProto[n], t.uint32(90).fork()).ldelim();
                }
              }
              return t;
            };
            e.encodeDelimited = function (e, t) {
              return this.encode(e, t).ldelim();
            };
            e.decode = function (e, t) {
              if (!(e instanceof A)) {
                e = A.create(e);
              }
              for (var n = t === undefined ? e.len : e.pos + t, r = new l.onnx.FunctionProto(); e.pos < n;) {
                var o = e.uint32();
                switch (o >>> 3) {
                  case 1:
                    r.name = e.string();
                    break;
                  case 4:
                    if (!r.input || !r.input.length) {
                      r.input = [];
                    }
                    r.input.push(e.string());
                    break;
                  case 5:
                    if (!r.output || !r.output.length) {
                      r.output = [];
                    }
                    r.output.push(e.string());
                    break;
                  case 6:
                    if (!r.attribute || !r.attribute.length) {
                      r.attribute = [];
                    }
                    r.attribute.push(e.string());
                    break;
                  case 11:
                    if (!r.attributeProto || !r.attributeProto.length) {
                      r.attributeProto = [];
                    }
                    r.attributeProto.push(l.onnx.AttributeProto.decode(e, e.uint32()));
                    break;
                  case 7:
                    if (!r.node || !r.node.length) {
                      r.node = [];
                    }
                    r.node.push(l.onnx.NodeProto.decode(e, e.uint32()));
                    break;
                  case 8:
                    r.docString = e.string();
                    break;
                  case 9:
                    if (!r.opsetImport || !r.opsetImport.length) {
                      r.opsetImport = [];
                    }
                    r.opsetImport.push(l.onnx.OperatorSetIdProto.decode(e, e.uint32()));
                    break;
                  case 10:
                    r.domain = e.string();
                    break;
                  default:
                    e.skipType(o & 7);
                }
              }
              return r;
            };
            e.decodeDelimited = function (e) {
              if (!(e instanceof A)) {
                e = new A(e);
              }
              return this.decode(e, e.uint32());
            };
            e.verify = function (e) {
              if (typeof e != 'object' || e === null) {
                return 'object expected';
              }
              if (e.name != null && e.hasOwnProperty('name') && !u.isString(e.name)) {
                return 'name: string expected';
              }
              if (e.input != null && e.hasOwnProperty('input')) {
                if (!Array.isArray(e.input)) {
                  return 'input: array expected';
                }
                for (var t = 0; t < e.input.length; ++t) {
                  if (!u.isString(e.input[t])) {
                    return 'input: string[] expected';
                  }
                }
              }
              if (e.output != null && e.hasOwnProperty('output')) {
                if (!Array.isArray(e.output)) {
                  return 'output: array expected';
                }
                for (t = 0; t < e.output.length; ++t) {
                  if (!u.isString(e.output[t])) {
                    return 'output: string[] expected';
                  }
                }
              }
              if (e.attribute != null && e.hasOwnProperty('attribute')) {
                if (!Array.isArray(e.attribute)) {
                  return 'attribute: array expected';
                }
                for (t = 0; t < e.attribute.length; ++t) {
                  if (!u.isString(e.attribute[t])) {
                    return 'attribute: string[] expected';
                  }
                }
              }
              if (e.attributeProto != null && e.hasOwnProperty('attributeProto')) {
                if (!Array.isArray(e.attributeProto)) {
                  return 'attributeProto: array expected';
                }
                for (t = 0; t < e.attributeProto.length; ++t) {
                  if (n = l.onnx.AttributeProto.verify(e.attributeProto[t])) {
                    return `attributeProto.${n}`;
                  }
                }
              }
              if (e.node != null && e.hasOwnProperty('node')) {
                if (!Array.isArray(e.node)) {
                  return 'node: array expected';
                }
                for (t = 0; t < e.node.length; ++t) {
                  if (n = l.onnx.NodeProto.verify(e.node[t])) {
                    return `node.${n}`;
                  }
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString') && !u.isString(e.docString)) {
                return 'docString: string expected';
              }
              if (e.opsetImport != null && e.hasOwnProperty('opsetImport')) {
                if (!Array.isArray(e.opsetImport)) {
                  return 'opsetImport: array expected';
                }
                for (t = 0; t < e.opsetImport.length; ++t) {
                  var n;
                  if (n = l.onnx.OperatorSetIdProto.verify(e.opsetImport[t])) {
                    return `opsetImport.${n}`;
                  }
                }
              }
              if (e.domain != null && e.hasOwnProperty('domain') && !u.isString(e.domain)) {
                return 'domain: string expected';
              } else {
                return null;
              }
            };
            e.fromObject = function (e) {
              if (e instanceof l.onnx.FunctionProto) {
                return e;
              }
              var t = new l.onnx.FunctionProto();
              if (e.name != null) {
                t.name = String(e.name);
              }
              if (e.input) {
                if (!Array.isArray(e.input)) {
                  throw TypeError('.onnx.FunctionProto.input: array expected');
                }
                t.input = [];
                for (var n = 0; n < e.input.length; ++n) {
                  t.input[n] = String(e.input[n]);
                }
              }
              if (e.output) {
                if (!Array.isArray(e.output)) {
                  throw TypeError('.onnx.FunctionProto.output: array expected');
                }
                t.output = [];
                n = 0;
                for (; n < e.output.length; ++n) {
                  t.output[n] = String(e.output[n]);
                }
              }
              if (e.attribute) {
                if (!Array.isArray(e.attribute)) {
                  throw TypeError('.onnx.FunctionProto.attribute: array expected');
                }
                t.attribute = [];
                n = 0;
                for (; n < e.attribute.length; ++n) {
                  t.attribute[n] = String(e.attribute[n]);
                }
              }
              if (e.attributeProto) {
                if (!Array.isArray(e.attributeProto)) {
                  throw TypeError('.onnx.FunctionProto.attributeProto: array expected');
                }
                t.attributeProto = [];
                n = 0;
                for (; n < e.attributeProto.length; ++n) {
                  if (typeof e.attributeProto[n] != 'object') {
                    throw TypeError('.onnx.FunctionProto.attributeProto: object expected');
                  }
                  t.attributeProto[n] = l.onnx.AttributeProto.fromObject(e.attributeProto[n]);
                }
              }
              if (e.node) {
                if (!Array.isArray(e.node)) {
                  throw TypeError('.onnx.FunctionProto.node: array expected');
                }
                t.node = [];
                n = 0;
                for (; n < e.node.length; ++n) {
                  if (typeof e.node[n] != 'object') {
                    throw TypeError('.onnx.FunctionProto.node: object expected');
                  }
                  t.node[n] = l.onnx.NodeProto.fromObject(e.node[n]);
                }
              }
              if (e.docString != null) {
                t.docString = String(e.docString);
              }
              if (e.opsetImport) {
                if (!Array.isArray(e.opsetImport)) {
                  throw TypeError('.onnx.FunctionProto.opsetImport: array expected');
                }
                t.opsetImport = [];
                n = 0;
                for (; n < e.opsetImport.length; ++n) {
                  if (typeof e.opsetImport[n] != 'object') {
                    throw TypeError('.onnx.FunctionProto.opsetImport: object expected');
                  }
                  t.opsetImport[n] = l.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n]);
                }
              }
              if (e.domain != null) {
                t.domain = String(e.domain);
              }
              return t;
            };
            e.toObject = function (e, t) {
              if (!t) {
                t = {};
              }
              var n = {};
              if (t.arrays || t.defaults) {
                n.input = [];
                n.output = [];
                n.attribute = [];
                n.node = [];
                n.opsetImport = [];
                n.attributeProto = [];
              }
              if (t.defaults) {
                n.name = '';
                n.docString = '';
                n.domain = '';
              }
              if (e.name != null && e.hasOwnProperty('name')) {
                n.name = e.name;
              }
              if (e.input && e.input.length) {
                n.input = [];
                for (var r = 0; r < e.input.length; ++r) {
                  n.input[r] = e.input[r];
                }
              }
              if (e.output && e.output.length) {
                n.output = [];
                r = 0;
                for (; r < e.output.length; ++r) {
                  n.output[r] = e.output[r];
                }
              }
              if (e.attribute && e.attribute.length) {
                n.attribute = [];
                r = 0;
                for (; r < e.attribute.length; ++r) {
                  n.attribute[r] = e.attribute[r];
                }
              }
              if (e.node && e.node.length) {
                n.node = [];
                r = 0;
                for (; r < e.node.length; ++r) {
                  n.node[r] = l.onnx.NodeProto.toObject(e.node[r], t);
                }
              }
              if (e.docString != null && e.hasOwnProperty('docString')) {
                n.docString = e.docString;
              }
              if (e.opsetImport && e.opsetImport.length) {
                n.opsetImport = [];
                r = 0;
                for (; r < e.opsetImport.length; ++r) {
                  n.opsetImport[r] = l.onnx.OperatorSetIdProto.toObject(e.opsetImport[r], t);
                }
              }
              if (e.domain != null && e.hasOwnProperty('domain')) {
                n.domain = e.domain;
              }
              if (e.attributeProto && e.attributeProto.length) {
                n.attributeProto = [];
                r = 0;
                for (; r < e.attributeProto.length; ++r) {
                  n.attributeProto[r] = l.onnx.AttributeProto.toObject(e.attributeProto[r], t);
                }
              }
              return n;
            };
            e.prototype.toJSON = function () {
              return this.constructor.toObject(this, a.util.toJSONOptions);
            };
            e.getTypeUrl = function (e = 'type.googleapis.com') {
              return e + '/onnx.FunctionProto';
            };
            return e;
          }();
          l.onnx = s;
          _module.exports = l;
        },
        3474: (_module, _exports, _require) => {
          var r;
          r = (r = typeof document != 'undefined' && document.currentScript ? document.currentScript.src : undefined) || __filename;
          function o(e = {}) {
            function t() {
              if (x.buffer != O.buffer) {
                q();
              }
              return O;
            }
            function o() {
              if (x.buffer != O.buffer) {
                q();
              }
              return N;
            }
            function s() {
              if (x.buffer != O.buffer) {
                q();
              }
              return L;
            }
            function a() {
              if (x.buffer != O.buffer) {
                q();
              }
              return K;
            }
            function A() {
              if (x.buffer != O.buffer) {
                q();
              }
              return U;
            }
            var c;
            var u;
            var l = e;
            l.ready = new Promise((e, t) => {
              c = e;
              u = t;
            });
            var g;
            var d;
            var h;
            var f = Object.assign({}, l);
            var p = './this.program';
            var m = (e, t) => {
              throw t;
            };
            var I = typeof window == 'object';
            var E = typeof importScripts == 'function';
            var y = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';
            var w = l.ENVIRONMENT_IS_PTHREAD || false;
            var _ = '';
            function v(e) {
              if (l.locateFile) {
                return l.locateFile(e, _);
              } else {
                return _ + e;
              }
            }
            if (y) {
              var b = _require(6231);
              var B = _require(1423);
              let t;
              _ = E ? B.dirname(_) + '/' : __dirname + '/';
              g = (e, t) => {
                e = e.startsWith('file://') ? new URL(e) : B.normalize(e);
                return b.readFileSync(e, t ? undefined : 'utf8');
              };
              h = e => {
                if (!(e = g(e, true)).buffer) {
                  e = new Uint8Array(e);
                }
                return e;
              };
              d = (e, t, n, r = true) => {
                e = e.startsWith('file://') ? new URL(e) : B.normalize(e);
                b.readFile(e, r ? undefined : 'utf8', (e, o) => {
                  if (e) {
                    n(e);
                  } else {
                    t(r ? o.buffer : o);
                  }
                });
              };
              if (!l.thisProgram && process.argv.length > 1) {
                p = process.argv[1].replace(/\\/g, '/');
              }
              process.argv.slice(2);
              m = (e, t) => {
                process.exitCode = e;
                throw t;
              };
              l.inspect = () => '[Emscripten Module object]';
              try {
                t = _require(4564);
              } catch (e) {
                console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?');
                throw e;
              }
              global.Worker = t.Worker;
            } else {
              if (I || E) {
                if (E) {
                  _ = self.location.href;
                } else {
                  if (typeof document != 'undefined' && document.currentScript) {
                    _ = document.currentScript.src;
                  }
                }
                if (r) {
                  _ = r;
                }
                _ = _.indexOf('blob:') !== 0 ? _.substr(0, _.replace(/[?#].*/, '').lastIndexOf('/') + 1) : '';
                if (!y) {
                  g = e => {
                    var t = new XMLHttpRequest();
                    t.open('GET', e, false);
                    t.send(null);
                    return t.responseText;
                  };
                  if (E) {
                    h = e => {
                      var t = new XMLHttpRequest();
                      t.open('GET', e, false);
                      t.responseType = 'arraybuffer';
                      t.send(null);
                      return new Uint8Array(t.response);
                    };
                  }
                  d = (e, t, n) => {
                    var r = new XMLHttpRequest();
                    r.open('GET', e, true);
                    r.responseType = 'arraybuffer';
                    r.onload = () => {
                      if (r.status == 200 || r.status == 0 && r.response) {
                        t(r.response);
                      } else {
                        n();
                      }
                    };
                    r.onerror = n;
                    r.send(null);
                  };
                }
              }
            }
            if (y && typeof performance == 'undefined') {
              global.performance = _require(498).performance;
            }
            var Q = console.log.bind(console);
            var D = console.error.bind(console);
            if (y) {
              Q = (...e) => b.writeSync(1, e.join(' ') + '\n');
              D = (...e) => b.writeSync(2, e.join(' ') + '\n');
            }
            var S;
            var T = l.print || Q;
            var R = l.printErr || D;
            Object.assign(l, f);
            f = null;
            if (l.thisProgram) {
              p = l.thisProgram;
            }
            if (l.quit) {
              m = l.quit;
            }
            if (l.wasmBinary) {
              S = l.wasmBinary;
            }
            var k = l.noExitRuntime || true;
            if (typeof WebAssembly != 'object') {
              oe('no native wasm support detected');
            }
            var x;
            var P;
            var F;
            var M;
            var O;
            var N;
            var L;
            var K;
            var U;
            var j = false;
            function q() {
              var e = x.buffer;
              l.HEAP8 = O = new Int8Array(e);
              l.HEAP16 = new Int16Array(e);
              l.HEAP32 = L = new Int32Array(e);
              l.HEAPU8 = N = new Uint8Array(e);
              l.HEAPU16 = new Uint16Array(e);
              l.HEAPU32 = K = new Uint32Array(e);
              l.HEAPF32 = new Float32Array(e);
              l.HEAPF64 = U = new Float64Array(e);
            }
            var G = l.INITIAL_MEMORY || 16777216;
            if (!(G >= 5242880)) {
              oe(`INITIAL_MEMORY should be larger than STACK_SIZE, was ${G}! (STACK_SIZE=5242880)`);
            }
            if (w) {
              x = l.wasmMemory;
            } else {
              if (l.wasmMemory) {
                x = l.wasmMemory;
              } else {
                if (!((x = new WebAssembly.Memory({
                  initial: G / 65536,
                  maximum: 65536,
                  shared: true
                })).buffer instanceof SharedArrayBuffer)) {
                  R('requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag');
                  if (y) {
                    R('(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)');
                  }
                  throw Error('bad memory');
                }
              }
            }
            q();
            G = x.buffer.byteLength;
            var Y;
            var H = [];
            var J = [];
            var z = [];
            var $ = 0;
            function W() {
              return k || $ > 0;
            }
            var V;
            var X;
            var Z = 0;
            var ee = null;
            var te = null;
            function ne() {
              Z++;
              if (l.monitorRunDependencies) {
                l.monitorRunDependencies(Z);
              }
            }
            function re() {
              Z--;
              if (l.monitorRunDependencies) {
                l.monitorRunDependencies(Z);
              }
              if (Z == 0 && (ee !== null && (clearInterval(ee), ee = null), te)) {
                var e = te;
                te = null;
                e();
              }
            }
            function oe(e) {
              if (l.onAbort) {
                l.onAbort(e);
              }
              R(e = `Aborted(${e})`);
              j = true;
              M = 1;
              e = new WebAssembly.RuntimeError(e + '. Build with -sASSERTIONS for more info.');
              u(e);
              throw e;
            }
            function ie(e) {
              return e.startsWith('data:application/octet-stream;base64,');
            }
            function se(e) {
              if (e == V && S) {
                return new Uint8Array(S);
              }
              if (h) {
                return h(e);
              }
              throw 'both async and sync fetching of the wasm failed';
            }
            function ae(e, t, n) {
              return function (e) {
                if (!S && (I || E)) {
                  if (typeof fetch == 'function' && !e.startsWith('file://')) {
                    return fetch(e, {
                      credentials: 'same-origin'
                    }).then(t => {
                      if (!t.ok) {
                        throw `failed to load wasm binary file at '${e}'`;
                      }
                      return t.arrayBuffer();
                    }).catch(() => se(e));
                  }
                  if (d) {
                    return new Promise((t, n) => {
                      d(e, e => t(new Uint8Array(e)), n);
                    });
                  }
                }
                return Promise.resolve().then(() => se(e));
              }(e).then(e => WebAssembly.instantiate(e, t)).then(e => e).then(n, e => {
                R(`failed to asynchronously prepare wasm: ${e}`);
                oe(e);
              });
            }
            function Ae(e) {
              this.name = 'ExitStatus';
              this.message = `Program terminated with exit(${e})`;
              this.status = e;
            }
            function ce(e) {
              e.terminate();
              e.onmessage = () => {};
            }
            function ue(e) {
              if (!(e = Ce.Fa[e])) {
                oe();
              }
              Ce.fb(e);
            }
            function le(e) {
              var t = Ce.Za();
              if (!t) {
                return 6;
              }
              Ce.Ia.push(t);
              Ce.Fa[e.Ha] = t;
              t.Ha = e.Ha;
              var n = {
                cmd: 'run',
                start_routine: e.gb,
                arg: e.Ya,
                pthread_ptr: e.Ha
              };
              if (y) {
                t.unref();
              }
              t.postMessage(n, e.mb);
              return 0;
            }
            if (!ie(V = 'ort-wasm-threaded.wasm')) {
              V = v(V);
            }
            var ge = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;
            var de = (e, t, n) => {
              var r = (t >>>= 0) + n;
              for (n = t; e[n] && !(n >= r);) {
                ++n;
              }
              if (n - t > 16 && e.buffer && ge) {
                return ge.decode(e.buffer instanceof SharedArrayBuffer ? e.slice(t, n) : e.subarray(t, n));
              }
              for (r = ''; t < n;) {
                var o = e[t++];
                if (o & 128) {
                  var s = e[t++] & 63;
                  if ((o & 224) == 192) {
                    r += String.fromCharCode((o & 31) << 6 | s);
                  } else {
                    var a = e[t++] & 63;
                    if ((o = (o & 240) == 224 ? (o & 15) << 12 | s << 6 | a : (o & 7) << 18 | s << 12 | a << 6 | e[t++] & 63) < 65536) {
                      r += String.fromCharCode(o);
                    } else {
                      o -= 65536;
                      r += String.fromCharCode(o >> 10 | 55296, o & 1023 | 56320);
                    }
                  }
                } else {
                  r += String.fromCharCode(o);
                }
              }
              return r;
            };
            var he = (e, t) => (e >>>= 0) ? de(o(), e, t) : '';
            function fe(e) {
              if (w) {
                return We(1, 1, e);
              }
              M = e;
              if (!W()) {
                Ce.hb();
                if (l.onExit) {
                  l.onExit(e);
                }
                j = true;
              }
              m(e, new Ae(e));
            }
            var pe = e => {
              M = e;
              if (w) {
                Ie(e);
                throw 'unwind';
              }
              fe(e);
            };
            var Ce = {
              La: [],
              Ia: [],
              Ta: [],
              Fa: {},
              Pa: function () {
                if (w) {
                  Ce.ab();
                } else {
                  Ce.$a();
                }
              },
              $a: function () {
                H.unshift(() => {
                  ne();
                  Ce.bb(() => re());
                });
              },
              ab: function () {
                Ce.receiveObjectTransfer = Ce.eb;
                Ce.threadInitTLS = Ce.Sa;
                Ce.setExitStatus = Ce.Ra;
                k = false;
              },
              Ra: function (e) {
                M = e;
              },
              rb: ['$terminateWorker'],
              hb: function () {
                for (var e of Ce.Ia) {
                  ce(e);
                }
                for (e of Ce.La) {
                  ce(e);
                }
                Ce.La = [];
                Ce.Ia = [];
                Ce.Fa = [];
              },
              fb: function (e) {
                var t = e.Ha;
                delete Ce.Fa[t];
                Ce.La.push(e);
                Ce.Ia.splice(Ce.Ia.indexOf(e), 1);
                e.Ha = 0;
                Et(t);
              },
              eb: function () {},
              Sa: function () {
                Ce.Ta.forEach(e => e());
              },
              cb: e => new Promise(t => {
                e.onmessage = n => {
                  var r = (n = n.data).cmd;
                  if (n.targetThread && n.targetThread != ft()) {
                    var o = Ce.Fa[n.qb];
                    if (o) {
                      o.postMessage(n, n.transferList);
                    } else {
                      R(`Internal error! Worker sent a message "${r}" to target pthread ${n.targetThread}, but that thread no longer exists!`);
                    }
                  } else {
                    if (r === 'checkMailbox') {
                      je();
                    } else {
                      if (r === 'spawnThread') {
                        le(n);
                      } else {
                        if (r === 'cleanupThread') {
                          ue(n.thread);
                        } else {
                          if (r === 'killThread') {
                            n = n.thread;
                            r = Ce.Fa[n];
                            delete Ce.Fa[n];
                            ce(r);
                            Et(n);
                            Ce.Ia.splice(Ce.Ia.indexOf(r), 1);
                            r.Ha = 0;
                          } else {
                            if (r === 'cancelThread') {
                              Ce.Fa[n.thread].postMessage({
                                cmd: 'cancel'
                              });
                            } else {
                              if (r === 'loaded') {
                                e.loaded = true;
                                t(e);
                              } else {
                                if (r === 'alert') {
                                  alert(`Thread ${n.threadId}: ${n.text}`);
                                } else {
                                  if (n.target === 'setimmediate') {
                                    e.postMessage(n);
                                  } else {
                                    if (r === 'callHandler') {
                                      l[n.handler](...n.args);
                                    } else {
                                      if (r) {
                                        R(`worker sent an unknown command ${r}`);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                };
                e.onerror = e => {
                  R(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`);
                  throw e;
                };
                if (y) {
                  e.on('message', function (t) {
                    e.onmessage({
                      data: t
                    });
                  });
                  e.on('error', function (t) {
                    e.onerror(t);
                  });
                }
                var n;
                var o = [];
                for (n of ['onExit', 'onAbort', 'print', 'printErr']) {
                  if (l.hasOwnProperty(n)) {
                    o.push(n);
                  }
                }
                e.postMessage({
                  cmd: 'load',
                  handlers: o,
                  urlOrBlob: l.mainScriptUrlOrBlob || r,
                  wasmMemory: x,
                  wasmModule: F
                });
              }),
              bb: function (e) {
                e();
              },
              Xa: function () {
                var e = v('ort-wasm-threaded.worker.js');
                e = new Worker(e);
                Ce.La.push(e);
              },
              Za: function () {
                if (Ce.La.length == 0) {
                  Ce.Xa();
                  Ce.cb(Ce.La[0]);
                }
                return Ce.La.pop();
              }
            };
            l.PThread = Ce;
            var me = e => {
              while (e.length > 0) {
                e.shift()(l);
              }
            };
            function Ie(e) {
              if (w) {
                return We(2, 0, e);
              }
              pe(e);
            }
            l.establishStackSpace = function () {
              var e = ft();
              var t = s()[e + 52 >> 2 >>> 0];
              e = s()[e + 56 >> 2 >>> 0];
              vt(t, t - e);
              Bt(t);
            };
            var Ee = [];
            function ye(e) {
              this.Oa = e - 24;
              this.Wa = function (e) {
                a()[this.Oa + 4 >> 2 >>> 0] = e;
              };
              this.Va = function (e) {
                a()[this.Oa + 8 >> 2 >>> 0] = e;
              };
              this.Pa = function (e, t) {
                this.Ua();
                this.Wa(e);
                this.Va(t);
              };
              this.Ua = function () {
                a()[this.Oa + 16 >> 2 >>> 0] = 0;
              };
            }
            function we(e, t, n, r) {
              if (w) {
                return We(3, 1, e, t, n, r);
              } else {
                return _e(e, t, n, r);
              }
            }
            function _e(e, t, n, r) {
              e >>>= 0;
              t >>>= 0;
              n >>>= 0;
              r >>>= 0;
              if (typeof SharedArrayBuffer == 'undefined') {
                R('Current environment does not support SharedArrayBuffer, pthreads are not available!');
                return 6;
              }
              var o = [];
              if (w && o.length === 0) {
                return we(e, t, n, r);
              } else {
                e = {
                  gb: n,
                  Ha: e,
                  Ya: r,
                  mb: o
                };
                return w ? (e.ob = 'spawnThread', postMessage(e, o), 0) : le(e);
              }
            }
            function ve(e, t, n) {
              if (w) {
                return We(4, 1, e, t, n);
              } else {
                return 0;
              }
            }
            function be(e, t) {
              if (w) {
                return We(5, 1, e, t);
              }
            }
            l.invokeEntryPoint = function (e, t) {
              var n = Ee[e];
              if (!n) {
                if (e >= Ee.length) {
                  Ee.length = e + 1;
                }
                Ee[e] = n = Y.get(e);
              }
              e = n(t);
              if (W()) {
                Ce.Ra(e);
              } else {
                yt(e);
              }
            };
            var Be = e => {
              var t = 0;
              for (var n = 0; n < e.length; ++n) {
                var r = e.charCodeAt(n);
                if (r <= 127) {
                  t++;
                } else {
                  if (r <= 2047) {
                    t += 2;
                  } else {
                    if (r >= 55296 && r <= 57343) {
                      t += 4;
                      ++n;
                    } else {
                      t += 3;
                    }
                  }
                }
              }
              return t;
            };
            var Qe = (e, t, n, r) => {
              if (!(r > 0)) {
                return 0;
              }
              var o = n >>>= 0;
              r = n + r - 1;
              for (var s = 0; s < e.length; ++s) {
                var a = e.charCodeAt(s);
                if (a >= 55296 && a <= 57343) {
                  a = 65536 + ((a & 1023) << 10) | e.charCodeAt(++s) & 1023;
                }
                if (a <= 127) {
                  if (n >= r) {
                    break;
                  }
                  t[n++ >>> 0] = a;
                } else {
                  if (a <= 2047) {
                    if (n + 1 >= r) {
                      break;
                    }
                    t[n++ >>> 0] = a >> 6 | 192;
                  } else {
                    if (a <= 65535) {
                      if (n + 2 >= r) {
                        break;
                      }
                      t[n++ >>> 0] = a >> 12 | 224;
                    } else {
                      if (n + 3 >= r) {
                        break;
                      }
                      t[n++ >>> 0] = a >> 18 | 240;
                      t[n++ >>> 0] = a >> 12 & 63 | 128;
                    }
                    t[n++ >>> 0] = a >> 6 & 63 | 128;
                  }
                  t[n++ >>> 0] = a & 63 | 128;
                }
              }
              t[n >>> 0] = 0;
              return n - o;
            };
            var De = (e, t, n) => Qe(e, o(), t, n);
            function Se(e, t) {
              if (w) {
                return We(6, 1, e, t);
              }
            }
            function Te(e, t, n) {
              if (w) {
                return We(7, 1, e, t, n);
              }
            }
            function Re(e, t, n) {
              if (w) {
                return We(8, 1, e, t, n);
              } else {
                return 0;
              }
            }
            function ke(e, t) {
              if (w) {
                return We(9, 1, e, t);
              }
            }
            function xe(e, t, n) {
              if (w) {
                return We(10, 1, e, t, n);
              }
            }
            function Pe(e, t, n, r) {
              if (w) {
                return We(11, 1, e, t, n, r);
              }
            }
            function Fe(e, t, n, r) {
              if (w) {
                return We(12, 1, e, t, n, r);
              }
            }
            function Me(e, t, n, r) {
              if (w) {
                return We(13, 1, e, t, n, r);
              }
            }
            function Oe(e) {
              if (w) {
                return We(14, 1, e);
              }
            }
            function Ne(e, t) {
              if (w) {
                return We(15, 1, e, t);
              }
            }
            function Le(e, t, n) {
              if (w) {
                return We(16, 1, e, t, n);
              }
            }
            var Ke = e => {
              if (!j) {
                try {
                  e();
                  if (!W()) {
                    try {
                      if (w) {
                        yt(M);
                      } else {
                        pe(M);
                      }
                    } catch (e) {
                      if (!(e instanceof Ae) && e != 'unwind') {
                        m(1, e);
                      }
                    }
                  }
                } catch (e) {
                  if (!(e instanceof Ae) && e != 'unwind') {
                    m(1, e);
                  }
                }
              }
            };
            function Ue(e) {
              e >>>= 0;
              if (typeof Atomics.nb == 'function') {
                Atomics.nb(s(), e >> 2, e).value.then(je);
                e += 128;
                Atomics.store(s(), e >> 2, 1);
              }
            }
            function je() {
              var e = ft();
              if (e) {
                Ue(e);
                Ke(() => wt());
              }
            }
            l.__emscripten_thread_mailbox_await = Ue;
            l.checkMailbox = je;
            var qe = e => e % 4 == 0 && (e % 100 != 0 || e % 400 == 0);
            var Ge = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
            var Ye = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
            function He(e, t, n, r, o, s, a, A) {
              if (w) {
                return We(17, 1, e, t, n, r, o, s, a, A);
              } else {
                return -52;
              }
            }
            function Je(e, t, n, r, o, s, a) {
              if (w) {
                return We(18, 1, e, t, n, r, o, s, a);
              }
            }
            var ze = e => {
              var t = Be(e) + 1;
              var n = pt(t);
              if (n) {
                De(e, n, t);
              }
              return n;
            };
            var $e = e => {
              var t = bt();
              e = e();
              Bt(t);
              return e;
            };
            function We(e, t) {
              var n = arguments.length - 2;
              var r = arguments;
              return $e(() => {
                var o = Qt(n * 8);
                var s = o >> 3;
                for (var a = 0; a < n; a++) {
                  var c = r[2 + a];
                  A()[s + a >>> 0] = c;
                }
                return It(e, n, o, t);
              });
            }
            var Ve;
            var Xe = [];
            var Ze = {};
            var et = () => {
              if (!Ve) {
                var e;
                var t = {
                  USER: 'web_user',
                  LOGNAME: 'web_user',
                  PATH: '/',
                  PWD: '/',
                  HOME: '/home/web_user',
                  LANG: (typeof navigator == 'object' && navigator.languages && navigator.languages[0] || 'C').replace('-', '_') + '.UTF-8',
                  _: p || './this.program'
                };
                for (e in Ze) {
                  if (Ze[e] === undefined) {
                    delete t[e];
                  } else {
                    t[e] = Ze[e];
                  }
                }
                var n = [];
                for (e in t) {
                  n.push(`${e}=${t[e]}`);
                }
                Ve = n;
              }
              return Ve;
            };
            function tt(e, n) {
              if (w) {
                return We(19, 1, e, n);
              }
              e >>>= 0;
              n >>>= 0;
              var r = 0;
              et().forEach(function (o, s) {
                var A = n + r;
                s = a()[e + s * 4 >> 2 >>> 0] = A;
                A = 0;
                for (; A < o.length; ++A) {
                  t()[(s++ | 0) >>> 0] = o.charCodeAt(A);
                }
                t()[(s | 0) >>> 0] = 0;
                r += o.length + 1;
              });
              return 0;
            }
            function nt(e, t) {
              if (w) {
                return We(20, 1, e, t);
              }
              e >>>= 0;
              t >>>= 0;
              var n = et();
              a()[e >> 2 >>> 0] = n.length;
              var r = 0;
              n.forEach(function (e) {
                r += e.length + 1;
              });
              a()[t >> 2 >>> 0] = r;
              return 0;
            }
            function rt(e) {
              if (w) {
                return We(21, 1, e);
              } else {
                return 52;
              }
            }
            function ot(e, t, n, r) {
              if (w) {
                return We(22, 1, e, t, n, r);
              } else {
                return 52;
              }
            }
            function it(e, t, n, r, o) {
              if (w) {
                return We(23, 1, e, t, n, r, o);
              } else {
                return 70;
              }
            }
            var st = [null, [], []];
            function at(e, t, n, r) {
              if (w) {
                return We(24, 1, e, t, n, r);
              }
              t >>>= 0;
              n >>>= 0;
              r >>>= 0;
              var s = 0;
              for (var A = 0; A < n; A++) {
                var c = a()[t >> 2 >>> 0];
                var u = a()[t + 4 >> 2 >>> 0];
                t += 8;
                for (var l = 0; l < u; l++) {
                  var g = o()[c + l >>> 0];
                  var d = st[e];
                  if (g === 0 || g === 10) {
                    (e === 1 ? T : R)(de(d, 0));
                    d.length = 0;
                  } else {
                    d.push(g);
                  }
                }
                s += u;
              }
              a()[r >> 2 >>> 0] = s;
              return 0;
            }
            var At = e => (At = (() => {
              if (typeof crypto == 'object' && typeof crypto.getRandomValues == 'function') {
                return e => {
                  e.set(crypto.getRandomValues(new Uint8Array(e.byteLength)));
                  return e;
                };
              }
              if (y) {
                try {
                  var e = _require(6113);
                  if (e.randomFillSync) {
                    return t => e.randomFillSync(t);
                  }
                  var t = e.randomBytes;
                  return e => {
                    e.set(t(e.byteLength));
                    return e;
                  };
                } catch (e) {}
              }
              oe('initRandomDevice');
            })())(e);
            var ct = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            var ut = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            var lt = (e, n) => {
              t().set(e, n >>> 0);
            };
            function gt(e, t, n, r) {
              function o(e, t, n) {
                for (e = typeof e == 'number' ? e.toString() : e || ''; e.length < t;) {
                  e = n[0] + e;
                }
                return e;
              }
              function a(e, t) {
                return o(e, t, '0');
              }
              function A(e, t) {
                function n(e) {
                  if (e < 0) {
                    return -1;
                  } else {
                    if (e > 0) {
                      return 1;
                    } else {
                      return 0;
                    }
                  }
                }
                var r;
                if ((r = n(e.getFullYear() - t.getFullYear())) === 0 && (r = n(e.getMonth() - t.getMonth())) === 0) {
                  r = n(e.getDate() - t.getDate());
                }
                return r;
              }
              function c(e) {
                switch (e.getDay()) {
                  case 0:
                    return new Date(e.getFullYear() - 1, 11, 29);
                  case 1:
                    return e;
                  case 2:
                    return new Date(e.getFullYear(), 0, 3);
                  case 3:
                    return new Date(e.getFullYear(), 0, 2);
                  case 4:
                    return new Date(e.getFullYear(), 0, 1);
                  case 5:
                    return new Date(e.getFullYear() - 1, 11, 31);
                  case 6:
                    return new Date(e.getFullYear() - 1, 11, 30);
                }
              }
              function u(e) {
                var t = e.Ja;
                for (e = new Date(new Date(e.Ka + 1900, 0, 1).getTime()); t > 0;) {
                  var n = e.getMonth();
                  var r = (qe(e.getFullYear()) ? ct : ut)[n];
                  if (!(t > r - e.getDate())) {
                    e.setDate(e.getDate() + t);
                    break;
                  }
                  t -= r - e.getDate() + 1;
                  e.setDate(1);
                  if (n < 11) {
                    e.setMonth(n + 1);
                  } else {
                    e.setMonth(0);
                    e.setFullYear(e.getFullYear() + 1);
                  }
                }
                n = new Date(e.getFullYear() + 1, 0, 4);
                t = c(new Date(e.getFullYear(), 0, 4));
                n = c(n);
                if (A(t, e) <= 0) {
                  if (A(n, e) <= 0) {
                    return e.getFullYear() + 1;
                  } else {
                    return e.getFullYear();
                  }
                } else {
                  return e.getFullYear() - 1;
                }
              }
              e >>>= 0;
              t >>>= 0;
              n >>>= 0;
              r >>>= 0;
              var l = s()[r + 40 >> 2 >>> 0];
              r = {
                kb: s()[r >> 2 >>> 0],
                jb: s()[r + 4 >> 2 >>> 0],
                Ma: s()[r + 8 >> 2 >>> 0],
                Qa: s()[r + 12 >> 2 >>> 0],
                Na: s()[r + 16 >> 2 >>> 0],
                Ka: s()[r + 20 >> 2 >>> 0],
                Ga: s()[r + 24 >> 2 >>> 0],
                Ja: s()[r + 28 >> 2 >>> 0],
                sb: s()[r + 32 >> 2 >>> 0],
                ib: s()[r + 36 >> 2 >>> 0],
                lb: l ? he(l) : ''
              };
              n = he(n);
              for (var g in l = {
                '%c': '%a %b %d %H:%M:%S %Y',
                '%D': '%m/%d/%y',
                '%F': '%Y-%m-%d',
                '%h': '%b',
                '%r': '%I:%M:%S %p',
                '%R': '%H:%M',
                '%T': '%H:%M:%S',
                '%x': '%m/%d/%y',
                '%X': '%H:%M:%S',
                '%Ec': '%c',
                '%EC': '%C',
                '%Ex': '%m/%d/%y',
                '%EX': '%H:%M:%S',
                '%Ey': '%y',
                '%EY': '%Y',
                '%Od': '%d',
                '%Oe': '%e',
                '%OH': '%H',
                '%OI': '%I',
                '%Om': '%m',
                '%OM': '%M',
                '%OS': '%S',
                '%Ou': '%u',
                '%OU': '%U',
                '%OV': '%V',
                '%Ow': '%w',
                '%OW': '%W',
                '%Oy': '%y'
              }) {
                n = n.replace(new RegExp(g, 'g'), l[g]);
              }
              var d = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' ');
              var h = 'January February March April May June July August September October November December'.split(' ');
              l = {
                '%a': e => d[e.Ga].substring(0, 3),
                '%A': e => d[e.Ga],
                '%b': e => h[e.Na].substring(0, 3),
                '%B': e => h[e.Na],
                '%C': e => a((e.Ka + 1900) / 100 | 0, 2),
                '%d': e => a(e.Qa, 2),
                '%e': e => o(e.Qa, 2, ' '),
                '%g': e => u(e).toString().substring(2),
                '%G': e => u(e),
                '%H': e => a(e.Ma, 2),
                '%I': e => {
                  if ((e = e.Ma) == 0) {
                    e = 12;
                  } else {
                    if (e > 12) {
                      e -= 12;
                    }
                  }
                  return a(e, 2);
                },
                '%j': e => {
                  for (var t = 0, n = 0; n <= e.Na - 1; t += (qe(e.Ka + 1900) ? ct : ut)[n++]);
                  return a(e.Qa + t, 3);
                },
                '%m': e => a(e.Na + 1, 2),
                '%M': e => a(e.jb, 2),
                '%n': () => '\n',
                '%p': e => e.Ma >= 0 && e.Ma < 12 ? 'AM' : 'PM',
                '%S': e => a(e.kb, 2),
                '%t': () => '\t',
                '%u': e => e.Ga || 7,
                '%U': e => a(Math.floor((e.Ja + 7 - e.Ga) / 7), 2),
                '%V': e => {
                  var t = Math.floor((e.Ja + 7 - (e.Ga + 6) % 7) / 7);
                  if ((e.Ga + 371 - e.Ja - 2) % 7 <= 2) {
                    t++;
                  }
                  if (t) {
                    if (t == 53) {
                      if ((n = (e.Ga + 371 - e.Ja) % 7) != 4 && (n != 3 || !qe(e.Ka))) {
                        t = 1;
                      }
                    }
                  } else {
                    t = 52;
                    var n = (e.Ga + 7 - e.Ja - 1) % 7;
                    if (n == 4 || n == 5 && qe(e.Ka % 400 - 1)) {
                      t++;
                    }
                  }
                  return a(t, 2);
                },
                '%w': e => e.Ga,
                '%W': e => a(Math.floor((e.Ja + 7 - (e.Ga + 6) % 7) / 7), 2),
                '%y': e => (e.Ka + 1900).toString().substring(2),
                '%Y': e => e.Ka + 1900,
                '%z': e => {
                  var t = (e = e.ib) >= 0;
                  e = Math.abs(e) / 60;
                  return (t ? '+' : '-') + String(`0000${e / 60 * 100 + e % 60}`).slice(-4);
                },
                '%Z': e => e.lb,
                '%%': () => '%'
              };
              n = n.replace(/%%/g, '\0\0');
              for (g in l) {
                if (n.includes(g)) {
                  n = n.replace(new RegExp(g, 'g'), l[g](r));
                }
              }
              g = function (e) {
                var t = Array(Be(e) + 1);
                Qe(e, t, 0, t.length);
                return t;
              }(n = n.replace(/\0\0/g, '%'));
              if (g.length > t) {
                return 0;
              } else {
                lt(g, e);
                return g.length - 1;
              }
            }
            Ce.Pa();
            var dt = [null, fe, Ie, we, ve, be, Se, Te, Re, ke, xe, Pe, Fe, Me, Oe, Ne, Le, He, Je, tt, nt, rt, ot, it, at];
            var ht = {
              b: function (e, t, n) {
                new ye(e >>>= 0).Pa(t >>> 0, n >>> 0);
                throw e;
              },
              N: function (e) {
                Ct(e >>> 0, !E, 1, !I, 131072, false);
                Ce.Sa();
              },
              k: function (e) {
                e >>>= 0;
                if (w) {
                  postMessage({
                    cmd: 'cleanupThread',
                    thread: e
                  });
                } else {
                  ue(e);
                }
              },
              I: _e,
              h: ve,
              T: be,
              E: Se,
              G: Te,
              U: Re,
              R: ke,
              J: xe,
              Q: Pe,
              o: Fe,
              F: Me,
              C: Oe,
              S: Ne,
              D: Le,
              q: () => true,
              A: function (e, t) {
                if ((e >>>= 0) == t >>> 0) {
                  setTimeout(() => je());
                } else {
                  if (w) {
                    postMessage({
                      targetThread: e,
                      cmd: 'checkMailbox'
                    });
                  } else {
                    if (e = Ce.Fa[e]) {
                      e.postMessage({
                        cmd: 'checkMailbox'
                      });
                    }
                  }
                }
              },
              L: function () {
                return -1;
              },
              M: Ue,
              p: function (e) {
                if (y) {
                  Ce.Fa[e >>> 0].ref();
                }
              },
              t: function (e, t, n) {
                e = t + 2097152 >>> 0 < 4194305 - !!e ? (e >>> 0) + t * 4294967296 : NaN;
                n >>>= 0;
                e = new Date(e * 1000);
                s()[n >> 2 >>> 0] = e.getUTCSeconds();
                s()[n + 4 >> 2 >>> 0] = e.getUTCMinutes();
                s()[n + 8 >> 2 >>> 0] = e.getUTCHours();
                s()[n + 12 >> 2 >>> 0] = e.getUTCDate();
                s()[n + 16 >> 2 >>> 0] = e.getUTCMonth();
                s()[n + 20 >> 2 >>> 0] = e.getUTCFullYear() - 1900;
                s()[n + 24 >> 2 >>> 0] = e.getUTCDay();
                e = (e.getTime() - Date.UTC(e.getUTCFullYear(), 0, 1, 0, 0, 0, 0)) / 86400000 | 0;
                s()[n + 28 >> 2 >>> 0] = e;
              },
              u: function (e, t, n) {
                e = t + 2097152 >>> 0 < 4194305 - !!e ? (e >>> 0) + t * 4294967296 : NaN;
                n >>>= 0;
                e = new Date(e * 1000);
                s()[n >> 2 >>> 0] = e.getSeconds();
                s()[n + 4 >> 2 >>> 0] = e.getMinutes();
                s()[n + 8 >> 2 >>> 0] = e.getHours();
                s()[n + 12 >> 2 >>> 0] = e.getDate();
                s()[n + 16 >> 2 >>> 0] = e.getMonth();
                s()[n + 20 >> 2 >>> 0] = e.getFullYear() - 1900;
                s()[n + 24 >> 2 >>> 0] = e.getDay();
                t = (qe(e.getFullYear()) ? Ge : Ye)[e.getMonth()] + e.getDate() - 1 | 0;
                s()[n + 28 >> 2 >>> 0] = t;
                s()[n + 36 >> 2 >>> 0] = e.getTimezoneOffset() * -60;
                t = new Date(e.getFullYear(), 6, 1).getTimezoneOffset();
                var r = new Date(e.getFullYear(), 0, 1).getTimezoneOffset();
                e = (t != r && e.getTimezoneOffset() == Math.min(r, t)) | 0;
                s()[n + 32 >> 2 >>> 0] = e;
              },
              v: function (e) {
                e >>>= 0;
                var t = new Date(s()[e + 20 >> 2 >>> 0] + 1900, s()[e + 16 >> 2 >>> 0], s()[e + 12 >> 2 >>> 0], s()[e + 8 >> 2 >>> 0], s()[e + 4 >> 2 >>> 0], s()[e >> 2 >>> 0], 0);
                var n = s()[e + 32 >> 2 >>> 0];
                var r = t.getTimezoneOffset();
                var o = new Date(t.getFullYear(), 6, 1).getTimezoneOffset();
                var a = new Date(t.getFullYear(), 0, 1).getTimezoneOffset();
                var A = Math.min(a, o);
                if (n < 0) {
                  s()[e + 32 >> 2 >>> 0] = Number(o != a && A == r);
                } else {
                  if (n > 0 != (A == r)) {
                    o = Math.max(a, o);
                    t.setTime(t.getTime() + ((n > 0 ? A : o) - r) * 60000);
                  }
                }
                s()[e + 24 >> 2 >>> 0] = t.getDay();
                n = (qe(t.getFullYear()) ? Ge : Ye)[t.getMonth()] + t.getDate() - 1 | 0;
                s()[e + 28 >> 2 >>> 0] = n;
                s()[e >> 2 >>> 0] = t.getSeconds();
                s()[e + 4 >> 2 >>> 0] = t.getMinutes();
                s()[e + 8 >> 2 >>> 0] = t.getHours();
                s()[e + 12 >> 2 >>> 0] = t.getDate();
                s()[e + 16 >> 2 >>> 0] = t.getMonth();
                s()[e + 20 >> 2 >>> 0] = t.getYear();
                e = t.getTime() / 1000;
                _t((X = e, +Math.abs(X) >= 1 ? X > 0 ? +Math.floor(X / 4294967296) >>> 0 : ~~+Math.ceil((X - +(~~X >>> 0)) / 4294967296) >>> 0 : 0));
                return e >>> 0;
              },
              r: He,
              s: Je,
              z: function (e, t, n) {
                function r(e) {
                  if (e = e.toTimeString().match(/\(([A-Za-z ]+)\)$/)) {
                    return e[1];
                  } else {
                    return 'GMT';
                  }
                }
                e >>>= 0;
                t >>>= 0;
                n >>>= 0;
                var o = new Date().getFullYear();
                var A = new Date(o, 0, 1);
                var c = new Date(o, 6, 1);
                o = A.getTimezoneOffset();
                var u = c.getTimezoneOffset();
                var l = Math.max(o, u);
                a()[e >> 2 >>> 0] = l * 60;
                s()[t >> 2 >>> 0] = Number(o != u);
                e = r(A);
                t = r(c);
                e = ze(e);
                t = ze(t);
                if (u < o) {
                  a()[n >> 2 >>> 0] = e;
                  a()[n + 4 >> 2 >>> 0] = t;
                } else {
                  a()[n >> 2 >>> 0] = t;
                  a()[n + 4 >> 2 >>> 0] = e;
                }
              },
              c: () => {
                oe('');
              },
              l: function () {},
              i: function () {
                return Date.now();
              },
              V: () => {
                $ += 1;
                throw 'unwind';
              },
              B: function () {
                return 4294901760;
              },
              e: () => performance.timeOrigin + performance.now(),
              f: function () {
                if (y) {
                  return _require(9719).cpus().length;
                } else {
                  return navigator.hardwareConcurrency;
                }
              },
              K: function (e, t, n, r) {
                Ce.pb = t >>> 0;
                Xe.length = n;
                t = r >>> 0 >> 3;
                r = 0;
                for (; r < n; r++) {
                  Xe[r] = A()[t + r >>> 0];
                }
                return dt[e].apply(null, Xe);
              },
              y: function (e) {
                e >>>= 0;
                var t = o().length;
                if (e <= t || e > 4294901760) {
                  return false;
                }
                for (var n = 1; n <= 4; n *= 2) {
                  var r = t * (1 + 0.2 / n);
                  r = Math.min(r, e + 100663296);
                  var s = Math;
                  r = Math.max(e, r);
                  e: {
                    s = s.min.call(s, 4294901760, r + (65536 - r % 65536) % 65536) - x.buffer.byteLength + 65535 >>> 16;
                    try {
                      x.grow(s);
                      q();
                      var a = 1;
                      break e;
                    } catch (e) {}
                    a = undefined;
                  }
                  if (a) {
                    return true;
                  }
                }
                return false;
              },
              O: tt,
              P: nt,
              j: pe,
              g: rt,
              n: ot,
              w: it,
              m: at,
              x: function (e, t) {
                e >>>= 0;
                t >>>= 0;
                At(o().subarray(e >>> 0, e + t >>> 0));
                return 0;
              },
              a: x || l.wasmMemory,
              H: gt,
              d: function (e, t, n, r) {
                return gt(e >>> 0, t >>> 0, n >>> 0, r >>> 0);
              }
            };
            (function () {
              function e(e, t) {
                e = e.exports;
                P = e = function (e) {
                  var t = e => () => e() >>> 0;
                  var n = e => t => e(t) >>> 0;
                  (e = Object.assign({}, e)).__errno_location = t(e.__errno_location);
                  e.pthread_self = t(e.pthread_self);
                  e.malloc = n(e.malloc);
                  e.stackSave = t(e.stackSave);
                  e.stackAlloc = n(e.stackAlloc);
                  return e;
                }(e);
                Ce.Ta.push(P.sa);
                Y = P.ta;
                J.unshift(P.W);
                F = t;
                re();
                return e;
              }
              var t = {
                a: ht
              };
              ne();
              if (l.instantiateWasm) {
                try {
                  return l.instantiateWasm(t, e);
                } catch (e) {
                  R(`Module.instantiateWasm callback failed with error: ${e}`);
                  u(e);
                }
              }
              (function (e, t) {
                var n = V;
                if (S || typeof WebAssembly.instantiateStreaming != 'function' || ie(n) || n.startsWith('file://') || y || typeof fetch != 'function') {
                  return ae(n, e, t);
                } else {
                  return fetch(n, {
                    credentials: 'same-origin'
                  }).then(r => WebAssembly.instantiateStreaming(r, e).then(t, function (r) {
                    R(`wasm streaming compile failed: ${r}`);
                    R('falling back to ArrayBuffer instantiation');
                    return ae(n, e, t);
                  }));
                }
              })(t, function (t) {
                e(t.instance, t.module);
              }).catch(u);
            })();
            l._OrtInit = (e, t) => (l._OrtInit = P.X)(e, t);
            l._OrtGetLastError = (e, t) => (l._OrtGetLastError = P.Y)(e, t);
            l._OrtCreateSessionOptions = (e, t, n, r, o, s, a, A, c, u) => (l._OrtCreateSessionOptions = P.Z)(e, t, n, r, o, s, a, A, c, u);
            l._OrtAppendExecutionProvider = (e, t) => (l._OrtAppendExecutionProvider = P._)(e, t);
            l._OrtAddSessionConfigEntry = (e, t, n) => (l._OrtAddSessionConfigEntry = P.$)(e, t, n);
            l._OrtReleaseSessionOptions = e => (l._OrtReleaseSessionOptions = P.aa)(e);
            l._OrtCreateSession = (e, t, n) => (l._OrtCreateSession = P.ba)(e, t, n);
            l._OrtReleaseSession = e => (l._OrtReleaseSession = P.ca)(e);
            l._OrtGetInputOutputCount = (e, t, n) => (l._OrtGetInputOutputCount = P.da)(e, t, n);
            l._OrtGetInputName = (e, t) => (l._OrtGetInputName = P.ea)(e, t);
            l._OrtGetOutputName = (e, t) => (l._OrtGetOutputName = P.fa)(e, t);
            l._OrtFree = e => (l._OrtFree = P.ga)(e);
            l._OrtCreateTensor = (e, t, n, r, o) => (l._OrtCreateTensor = P.ha)(e, t, n, r, o);
            l._OrtGetTensorData = (e, t, n, r, o) => (l._OrtGetTensorData = P.ia)(e, t, n, r, o);
            l._OrtReleaseTensor = e => (l._OrtReleaseTensor = P.ja)(e);
            l._OrtCreateRunOptions = (e, t, n, r) => (l._OrtCreateRunOptions = P.ka)(e, t, n, r);
            l._OrtAddRunConfigEntry = (e, t, n) => (l._OrtAddRunConfigEntry = P.la)(e, t, n);
            l._OrtReleaseRunOptions = e => (l._OrtReleaseRunOptions = P.ma)(e);
            l._OrtRun = (e, t, n, r, o, s, a, A) => (l._OrtRun = P.na)(e, t, n, r, o, s, a, A);
            l._OrtEndProfiling = e => (l._OrtEndProfiling = P.oa)(e);
            var ft = l._pthread_self = () => (ft = l._pthread_self = P.pa)();
            var pt = l._malloc = e => (pt = l._malloc = P.qa)(e);
            l._free = e => (l._free = P.ra)(e);
            l.__emscripten_tls_init = () => (l.__emscripten_tls_init = P.sa)();
            var Ct = l.__emscripten_thread_init = (e, t, n, r, o, s) => (Ct = l.__emscripten_thread_init = P.ua)(e, t, n, r, o, s);
            l.__emscripten_thread_crashed = () => (l.__emscripten_thread_crashed = P.va)();
            var mt;
            var It = (e, t, n, r) => (It = P.wa)(e, t, n, r);
            var Et = e => (Et = P.xa)(e);
            var yt = l.__emscripten_thread_exit = e => (yt = l.__emscripten_thread_exit = P.ya)(e);
            var wt = l.__emscripten_check_mailbox = () => (wt = l.__emscripten_check_mailbox = P.za)();
            var _t = e => (_t = P.Aa)(e);
            var vt = (e, t) => (vt = P.Ba)(e, t);
            var bt = () => (bt = P.Ca)();
            var Bt = e => (Bt = P.Da)(e);
            var Qt = e => (Qt = P.Ea)(e);
            function Dt() {
              function e() {
                if (!mt && (mt = true, l.calledRun = true, !j) && (w || me(J), c(l), l.onRuntimeInitialized && l.onRuntimeInitialized(), !w)) {
                  if (l.postRun) {
                    for (typeof l.postRun == 'function' && (l.postRun = [l.postRun]); l.postRun.length;) {
                      var e = l.postRun.shift();
                      z.unshift(e);
                    }
                  }
                  me(z);
                }
              }
              if (!(Z > 0)) {
                if (w) {
                  c(l);
                  if (!w) {
                    me(J);
                  }
                  startWorker(l);
                } else {
                  if (l.preRun) {
                    for (typeof l.preRun == 'function' && (l.preRun = [l.preRun]); l.preRun.length;) {
                      H.unshift(l.preRun.shift());
                    }
                  }
                  me(H);
                  if (!(Z > 0)) {
                    if (l.setStatus) {
                      l.setStatus('Running...');
                      setTimeout(function () {
                        setTimeout(function () {
                          l.setStatus('');
                        }, 1);
                        e();
                      }, 1);
                    } else {
                      e();
                    }
                  }
                }
              }
            }
            l.keepRuntimeAlive = W;
            l.wasmMemory = x;
            l.stackAlloc = Qt;
            l.stackSave = bt;
            l.stackRestore = Bt;
            l.UTF8ToString = he;
            l.stringToUTF8 = De;
            l.lengthBytesUTF8 = Be;
            l.ExitStatus = Ae;
            l.PThread = Ce;
            te = function e() {
              if (!mt) {
                Dt();
              }
              if (!mt) {
                te = e;
              }
            };
            if (l.preInit) {
              for (typeof l.preInit == 'function' && (l.preInit = [l.preInit]); l.preInit.length > 0;) {
                l.preInit.pop()();
              }
            }
            Dt();
            return e.ready;
          }
          _module.exports = o;
        },
        932: (_module, _exports, _require) => {
          var r;
          r = (r = typeof document != 'undefined' && document.currentScript ? document.currentScript.src : undefined) || __filename;
          function o(e = {}) {
            var t;
            var o;
            var s = e;
            s.ready = new Promise((e, n) => {
              t = e;
              o = n;
            });
            var a;
            var A;
            var c;
            var u = Object.assign({}, s);
            var l = './this.program';
            var g = (e, t) => {
              throw t;
            };
            var d = typeof window == 'object';
            var h = typeof importScripts == 'function';
            var f = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';
            var p = '';
            if (f) {
              var m = _require(6231);
              var I = _require(1423);
              p = h ? I.dirname(p) + '/' : __dirname + '/';
              a = (e, t) => {
                e = e.startsWith('file://') ? new URL(e) : I.normalize(e);
                return m.readFileSync(e, t ? undefined : 'utf8');
              };
              c = e => {
                if (!(e = a(e, true)).buffer) {
                  e = new Uint8Array(e);
                }
                return e;
              };
              A = (e, t, n, r = true) => {
                e = e.startsWith('file://') ? new URL(e) : I.normalize(e);
                m.readFile(e, r ? undefined : 'utf8', (e, o) => {
                  if (e) {
                    n(e);
                  } else {
                    t(r ? o.buffer : o);
                  }
                });
              };
              if (!s.thisProgram && process.argv.length > 1) {
                l = process.argv[1].replace(/\\/g, '/');
              }
              process.argv.slice(2);
              g = (e, t) => {
                process.exitCode = e;
                throw t;
              };
              s.inspect = () => '[Emscripten Module object]';
            } else {
              if (d || h) {
                if (h) {
                  p = self.location.href;
                } else {
                  if (typeof document != 'undefined' && document.currentScript) {
                    p = document.currentScript.src;
                  }
                }
                if (r) {
                  p = r;
                }
                p = p.indexOf('blob:') !== 0 ? p.substr(0, p.replace(/[?#].*/, '').lastIndexOf('/') + 1) : '';
                a = e => {
                  var t = new XMLHttpRequest();
                  t.open('GET', e, false);
                  t.send(null);
                  return t.responseText;
                };
                if (h) {
                  c = e => {
                    var t = new XMLHttpRequest();
                    t.open('GET', e, false);
                    t.responseType = 'arraybuffer';
                    t.send(null);
                    return new Uint8Array(t.response);
                  };
                }
                A = (e, t, n) => {
                  var r = new XMLHttpRequest();
                  r.open('GET', e, true);
                  r.responseType = 'arraybuffer';
                  r.onload = () => {
                    if (r.status == 200 || r.status == 0 && r.response) {
                      t(r.response);
                    } else {
                      n();
                    }
                  };
                  r.onerror = n;
                  r.send(null);
                };
              }
            }
            var E;
            var y = s.print || console.log.bind(console);
            var w = s.printErr || console.error.bind(console);
            Object.assign(s, u);
            u = null;
            if (s.thisProgram) {
              l = s.thisProgram;
            }
            if (s.quit) {
              g = s.quit;
            }
            if (s.wasmBinary) {
              E = s.wasmBinary;
            }
            var _ = s.noExitRuntime || true;
            if (typeof WebAssembly != 'object') {
              U('no native wasm support detected');
            }
            var v;
            var b;
            var B;
            var Q;
            var D;
            var S;
            var T = false;
            function R() {
              var e = v.buffer;
              s.HEAP8 = B = new Int8Array(e);
              s.HEAP16 = new Int16Array(e);
              s.HEAP32 = D = new Int32Array(e);
              s.HEAPU8 = Q = new Uint8Array(e);
              s.HEAPU16 = new Uint16Array(e);
              s.HEAPU32 = S = new Uint32Array(e);
              s.HEAPF32 = new Float32Array(e);
              s.HEAPF64 = new Float64Array(e);
            }
            var k = [];
            var x = [];
            var P = [];
            function F() {
              var e = s.preRun.shift();
              k.unshift(e);
            }
            var M;
            var O;
            var N = 0;
            var L = null;
            var K = null;
            function U(e) {
              if (s.onAbort) {
                s.onAbort(e);
              }
              w(e = `Aborted(${e})`);
              T = true;
              e = new WebAssembly.RuntimeError(e + '. Build with -sASSERTIONS for more info.');
              o(e);
              throw e;
            }
            function j(e) {
              return e.startsWith('data:application/octet-stream;base64,');
            }
            if (!j(M = 'ort-wasm.wasm')) {
              var q = M;
              M = s.locateFile ? s.locateFile(q, p) : p + q;
            }
            function G(e) {
              if (e == M && E) {
                return new Uint8Array(E);
              }
              if (c) {
                return c(e);
              }
              throw 'both async and sync fetching of the wasm failed';
            }
            function Y(e, t, n) {
              return function (e) {
                if (!E && (d || h)) {
                  if (typeof fetch == 'function' && !e.startsWith('file://')) {
                    return fetch(e, {
                      credentials: 'same-origin'
                    }).then(t => {
                      if (!t.ok) {
                        throw `failed to load wasm binary file at '${e}'`;
                      }
                      return t.arrayBuffer();
                    }).catch(() => G(e));
                  }
                  if (A) {
                    return new Promise((t, n) => {
                      A(e, e => t(new Uint8Array(e)), n);
                    });
                  }
                }
                return Promise.resolve().then(() => G(e));
              }(e).then(e => WebAssembly.instantiate(e, t)).then(e => e).then(n, e => {
                w(`failed to asynchronously prepare wasm: ${e}`);
                U(e);
              });
            }
            function H(e) {
              this.name = 'ExitStatus';
              this.message = `Program terminated with exit(${e})`;
              this.status = e;
            }
            var J = e => {
              while (e.length > 0) {
                e.shift()(s);
              }
            };
            function z(e) {
              this.qa = e - 24;
              this.va = function (e) {
                S[this.qa + 4 >> 2 >>> 0] = e;
              };
              this.ua = function (e) {
                S[this.qa + 8 >> 2 >>> 0] = e;
              };
              this.sa = function (e, t) {
                this.ta();
                this.va(e);
                this.ua(t);
              };
              this.ta = function () {
                S[this.qa + 16 >> 2 >>> 0] = 0;
              };
            }
            var $;
            var W = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;
            var V = (e, t, n) => {
              var r = (t >>>= 0) + n;
              for (n = t; e[n] && !(n >= r);) {
                ++n;
              }
              if (n - t > 16 && e.buffer && W) {
                return W.decode(e.subarray(t, n));
              }
              for (r = ''; t < n;) {
                var o = e[t++];
                if (o & 128) {
                  var s = e[t++] & 63;
                  if ((o & 224) == 192) {
                    r += String.fromCharCode((o & 31) << 6 | s);
                  } else {
                    var a = e[t++] & 63;
                    if ((o = (o & 240) == 224 ? (o & 15) << 12 | s << 6 | a : (o & 7) << 18 | s << 12 | a << 6 | e[t++] & 63) < 65536) {
                      r += String.fromCharCode(o);
                    } else {
                      o -= 65536;
                      r += String.fromCharCode(o >> 10 | 55296, o & 1023 | 56320);
                    }
                  }
                } else {
                  r += String.fromCharCode(o);
                }
              }
              return r;
            };
            var X = (e, t) => (e >>>= 0) ? V(Q, e, t) : '';
            var Z = e => {
              var t = 0;
              for (var n = 0; n < e.length; ++n) {
                var r = e.charCodeAt(n);
                if (r <= 127) {
                  t++;
                } else {
                  if (r <= 2047) {
                    t += 2;
                  } else {
                    if (r >= 55296 && r <= 57343) {
                      t += 4;
                      ++n;
                    } else {
                      t += 3;
                    }
                  }
                }
              }
              return t;
            };
            var ee = (e, t, n, r) => {
              if (!(r > 0)) {
                return 0;
              }
              var o = n >>>= 0;
              r = n + r - 1;
              for (var s = 0; s < e.length; ++s) {
                var a = e.charCodeAt(s);
                if (a >= 55296 && a <= 57343) {
                  a = 65536 + ((a & 1023) << 10) | e.charCodeAt(++s) & 1023;
                }
                if (a <= 127) {
                  if (n >= r) {
                    break;
                  }
                  t[n++ >>> 0] = a;
                } else {
                  if (a <= 2047) {
                    if (n + 1 >= r) {
                      break;
                    }
                    t[n++ >>> 0] = a >> 6 | 192;
                  } else {
                    if (a <= 65535) {
                      if (n + 2 >= r) {
                        break;
                      }
                      t[n++ >>> 0] = a >> 12 | 224;
                    } else {
                      if (n + 3 >= r) {
                        break;
                      }
                      t[n++ >>> 0] = a >> 18 | 240;
                      t[n++ >>> 0] = a >> 12 & 63 | 128;
                    }
                    t[n++ >>> 0] = a >> 6 & 63 | 128;
                  }
                  t[n++ >>> 0] = a & 63 | 128;
                }
              }
              t[n >>> 0] = 0;
              return n - o;
            };
            var te = e => e % 4 == 0 && (e % 100 != 0 || e % 400 == 0);
            var ne = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
            var re = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
            var oe = e => {
              var t = Z(e) + 1;
              var n = de(t);
              if (n) {
                ee(e, Q, n, t);
              }
              return n;
            };
            var ie = {};
            var se = () => {
              if (!$) {
                var e;
                var t = {
                  USER: 'web_user',
                  LOGNAME: 'web_user',
                  PATH: '/',
                  PWD: '/',
                  HOME: '/home/web_user',
                  LANG: (typeof navigator == 'object' && navigator.languages && navigator.languages[0] || 'C').replace('-', '_') + '.UTF-8',
                  _: l || './this.program'
                };
                for (e in ie) {
                  if (ie[e] === undefined) {
                    delete t[e];
                  } else {
                    t[e] = ie[e];
                  }
                }
                var n = [];
                for (e in t) {
                  n.push(`${e}=${t[e]}`);
                }
                $ = n;
              }
              return $;
            };
            var ae = [null, [], []];
            var Ae = e => (Ae = (() => {
              if (typeof crypto == 'object' && typeof crypto.getRandomValues == 'function') {
                return e => crypto.getRandomValues(e);
              }
              if (f) {
                try {
                  var e = _require(6113);
                  if (e.randomFillSync) {
                    return t => e.randomFillSync(t);
                  }
                  var t = e.randomBytes;
                  return e => {
                    e.set(t(e.byteLength));
                    return e;
                  };
                } catch (e) {}
              }
              U('initRandomDevice');
            })())(e);
            var ce = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            var ue = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            function le(e, t, n, r) {
              function o(e, t, n) {
                for (e = typeof e == 'number' ? e.toString() : e || ''; e.length < t;) {
                  e = n[0] + e;
                }
                return e;
              }
              function s(e, t) {
                return o(e, t, '0');
              }
              function a(e, t) {
                function n(e) {
                  if (e < 0) {
                    return -1;
                  } else {
                    if (e > 0) {
                      return 1;
                    } else {
                      return 0;
                    }
                  }
                }
                var r;
                if ((r = n(e.getFullYear() - t.getFullYear())) === 0 && (r = n(e.getMonth() - t.getMonth())) === 0) {
                  r = n(e.getDate() - t.getDate());
                }
                return r;
              }
              function A(e) {
                switch (e.getDay()) {
                  case 0:
                    return new Date(e.getFullYear() - 1, 11, 29);
                  case 1:
                    return e;
                  case 2:
                    return new Date(e.getFullYear(), 0, 3);
                  case 3:
                    return new Date(e.getFullYear(), 0, 2);
                  case 4:
                    return new Date(e.getFullYear(), 0, 1);
                  case 5:
                    return new Date(e.getFullYear() - 1, 11, 31);
                  case 6:
                    return new Date(e.getFullYear() - 1, 11, 30);
                }
              }
              function c(e) {
                var t = e.ma;
                for (e = new Date(new Date(e.na + 1900, 0, 1).getTime()); t > 0;) {
                  var n = e.getMonth();
                  var r = (te(e.getFullYear()) ? ce : ue)[n];
                  if (!(t > r - e.getDate())) {
                    e.setDate(e.getDate() + t);
                    break;
                  }
                  t -= r - e.getDate() + 1;
                  e.setDate(1);
                  if (n < 11) {
                    e.setMonth(n + 1);
                  } else {
                    e.setMonth(0);
                    e.setFullYear(e.getFullYear() + 1);
                  }
                }
                n = new Date(e.getFullYear() + 1, 0, 4);
                t = A(new Date(e.getFullYear(), 0, 4));
                n = A(n);
                if (a(t, e) <= 0) {
                  if (a(n, e) <= 0) {
                    return e.getFullYear() + 1;
                  } else {
                    return e.getFullYear();
                  }
                } else {
                  return e.getFullYear() - 1;
                }
              }
              e >>>= 0;
              t >>>= 0;
              n >>>= 0;
              var u = D[40 + (r >>>= 0) >> 2 >>> 0];
              r = {
                ya: D[r >> 2 >>> 0],
                xa: D[r + 4 >> 2 >>> 0],
                oa: D[r + 8 >> 2 >>> 0],
                ra: D[r + 12 >> 2 >>> 0],
                pa: D[r + 16 >> 2 >>> 0],
                na: D[r + 20 >> 2 >>> 0],
                ha: D[r + 24 >> 2 >>> 0],
                ma: D[r + 28 >> 2 >>> 0],
                Aa: D[r + 32 >> 2 >>> 0],
                wa: D[r + 36 >> 2 >>> 0],
                za: u ? X(u) : ''
              };
              n = X(n);
              for (var l in u = {
                '%c': '%a %b %d %H:%M:%S %Y',
                '%D': '%m/%d/%y',
                '%F': '%Y-%m-%d',
                '%h': '%b',
                '%r': '%I:%M:%S %p',
                '%R': '%H:%M',
                '%T': '%H:%M:%S',
                '%x': '%m/%d/%y',
                '%X': '%H:%M:%S',
                '%Ec': '%c',
                '%EC': '%C',
                '%Ex': '%m/%d/%y',
                '%EX': '%H:%M:%S',
                '%Ey': '%y',
                '%EY': '%Y',
                '%Od': '%d',
                '%Oe': '%e',
                '%OH': '%H',
                '%OI': '%I',
                '%Om': '%m',
                '%OM': '%M',
                '%OS': '%S',
                '%Ou': '%u',
                '%OU': '%U',
                '%OV': '%V',
                '%Ow': '%w',
                '%OW': '%W',
                '%Oy': '%y'
              }) {
                n = n.replace(new RegExp(l, 'g'), u[l]);
              }
              var g = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' ');
              var d = 'January February March April May June July August September October November December'.split(' ');
              u = {
                '%a': e => g[e.ha].substring(0, 3),
                '%A': e => g[e.ha],
                '%b': e => d[e.pa].substring(0, 3),
                '%B': e => d[e.pa],
                '%C': e => s((e.na + 1900) / 100 | 0, 2),
                '%d': e => s(e.ra, 2),
                '%e': e => o(e.ra, 2, ' '),
                '%g': e => c(e).toString().substring(2),
                '%G': e => c(e),
                '%H': e => s(e.oa, 2),
                '%I': e => {
                  if ((e = e.oa) == 0) {
                    e = 12;
                  } else {
                    if (e > 12) {
                      e -= 12;
                    }
                  }
                  return s(e, 2);
                },
                '%j': e => {
                  for (var t = 0, n = 0; n <= e.pa - 1; t += (te(e.na + 1900) ? ce : ue)[n++]);
                  return s(e.ra + t, 3);
                },
                '%m': e => s(e.pa + 1, 2),
                '%M': e => s(e.xa, 2),
                '%n': () => '\n',
                '%p': e => e.oa >= 0 && e.oa < 12 ? 'AM' : 'PM',
                '%S': e => s(e.ya, 2),
                '%t': () => '\t',
                '%u': e => e.ha || 7,
                '%U': e => s(Math.floor((e.ma + 7 - e.ha) / 7), 2),
                '%V': e => {
                  var t = Math.floor((e.ma + 7 - (e.ha + 6) % 7) / 7);
                  if ((e.ha + 371 - e.ma - 2) % 7 <= 2) {
                    t++;
                  }
                  if (t) {
                    if (t == 53) {
                      if ((n = (e.ha + 371 - e.ma) % 7) != 4 && (n != 3 || !te(e.na))) {
                        t = 1;
                      }
                    }
                  } else {
                    t = 52;
                    var n = (e.ha + 7 - e.ma - 1) % 7;
                    if (n == 4 || n == 5 && te(e.na % 400 - 1)) {
                      t++;
                    }
                  }
                  return s(t, 2);
                },
                '%w': e => e.ha,
                '%W': e => s(Math.floor((e.ma + 7 - (e.ha + 6) % 7) / 7), 2),
                '%y': e => (e.na + 1900).toString().substring(2),
                '%Y': e => e.na + 1900,
                '%z': e => {
                  var t = (e = e.wa) >= 0;
                  e = Math.abs(e) / 60;
                  return (t ? '+' : '-') + String(`0000${e / 60 * 100 + e % 60}`).slice(-4);
                },
                '%Z': e => e.za,
                '%%': () => '%'
              };
              n = n.replace(/%%/g, '\0\0');
              for (l in u) {
                if (n.includes(l)) {
                  n = n.replace(new RegExp(l, 'g'), u[l](r));
                }
              }
              l = function (e) {
                var t = Array(Z(e) + 1);
                ee(e, t, 0, t.length);
                return t;
              }(n = n.replace(/\0\0/g, '%'));
              if (l.length > t) {
                return 0;
              } else {
                B.set(l, e >>> 0);
                return l.length - 1;
              }
            }
            var ge = {
              a: function (e, t, n) {
                new z(e >>>= 0).sa(t >>> 0, n >>> 0);
                throw e;
              },
              e: function () {
                return 0;
              },
              I: function () {},
              y: function () {},
              A: function () {},
              K: function () {
                return 0;
              },
              G: function () {},
              B: function () {},
              F: function () {},
              g: function () {},
              z: function () {},
              w: function () {},
              H: function () {},
              x: function () {},
              k: () => true,
              n: function (e, t, n) {
                e = t + 2097152 >>> 0 < 4194305 - !!e ? (e >>> 0) + t * 4294967296 : NaN;
                n >>>= 0;
                e = new Date(e * 1000);
                D[n >> 2 >>> 0] = e.getUTCSeconds();
                D[n + 4 >> 2 >>> 0] = e.getUTCMinutes();
                D[n + 8 >> 2 >>> 0] = e.getUTCHours();
                D[n + 12 >> 2 >>> 0] = e.getUTCDate();
                D[n + 16 >> 2 >>> 0] = e.getUTCMonth();
                D[n + 20 >> 2 >>> 0] = e.getUTCFullYear() - 1900;
                D[n + 24 >> 2 >>> 0] = e.getUTCDay();
                D[n + 28 >> 2 >>> 0] = (e.getTime() - Date.UTC(e.getUTCFullYear(), 0, 1, 0, 0, 0, 0)) / 86400000 | 0;
              },
              o: function (e, t, n) {
                e = t + 2097152 >>> 0 < 4194305 - !!e ? (e >>> 0) + t * 4294967296 : NaN;
                n >>>= 0;
                e = new Date(e * 1000);
                D[n >> 2 >>> 0] = e.getSeconds();
                D[n + 4 >> 2 >>> 0] = e.getMinutes();
                D[n + 8 >> 2 >>> 0] = e.getHours();
                D[n + 12 >> 2 >>> 0] = e.getDate();
                D[n + 16 >> 2 >>> 0] = e.getMonth();
                D[n + 20 >> 2 >>> 0] = e.getFullYear() - 1900;
                D[n + 24 >> 2 >>> 0] = e.getDay();
                D[n + 28 >> 2 >>> 0] = (te(e.getFullYear()) ? ne : re)[e.getMonth()] + e.getDate() - 1 | 0;
                D[n + 36 >> 2 >>> 0] = e.getTimezoneOffset() * -60;
                t = new Date(e.getFullYear(), 6, 1).getTimezoneOffset();
                var r = new Date(e.getFullYear(), 0, 1).getTimezoneOffset();
                D[n + 32 >> 2 >>> 0] = (t != r && e.getTimezoneOffset() == Math.min(r, t)) | 0;
              },
              p: function (e) {
                e >>>= 0;
                var t = new Date(D[e + 20 >> 2 >>> 0] + 1900, D[e + 16 >> 2 >>> 0], D[e + 12 >> 2 >>> 0], D[e + 8 >> 2 >>> 0], D[e + 4 >> 2 >>> 0], D[e >> 2 >>> 0], 0);
                var n = D[e + 32 >> 2 >>> 0];
                var r = t.getTimezoneOffset();
                var o = new Date(t.getFullYear(), 6, 1).getTimezoneOffset();
                var s = new Date(t.getFullYear(), 0, 1).getTimezoneOffset();
                var a = Math.min(s, o);
                if (n < 0) {
                  D[e + 32 >> 2 >>> 0] = Number(o != s && a == r);
                } else {
                  if (n > 0 != (a == r)) {
                    o = Math.max(s, o);
                    t.setTime(t.getTime() + ((n > 0 ? a : o) - r) * 60000);
                  }
                }
                D[e + 24 >> 2 >>> 0] = t.getDay();
                D[e + 28 >> 2 >>> 0] = (te(t.getFullYear()) ? ne : re)[t.getMonth()] + t.getDate() - 1 | 0;
                D[e >> 2 >>> 0] = t.getSeconds();
                D[e + 4 >> 2 >>> 0] = t.getMinutes();
                D[e + 8 >> 2 >>> 0] = t.getHours();
                D[e + 12 >> 2 >>> 0] = t.getDate();
                D[e + 16 >> 2 >>> 0] = t.getMonth();
                D[e + 20 >> 2 >>> 0] = t.getYear();
                e = t.getTime() / 1000;
                fe((O = e, +Math.abs(O) >= 1 ? O > 0 ? +Math.floor(O / 4294967296) >>> 0 : ~~+Math.ceil((O - +(~~O >>> 0)) / 4294967296) >>> 0 : 0));
                return e >>> 0;
              },
              l: function () {
                return -52;
              },
              m: function () {},
              u: function (e, t, n) {
                function r(e) {
                  if (e = e.toTimeString().match(/\(([A-Za-z ]+)\)$/)) {
                    return e[1];
                  } else {
                    return 'GMT';
                  }
                }
                n >>>= 0;
                var o = new Date().getFullYear();
                var s = new Date(o, 0, 1);
                var a = new Date(o, 6, 1);
                o = s.getTimezoneOffset();
                var A = a.getTimezoneOffset();
                S[e >>> 0 >> 2 >>> 0] = Math.max(o, A) * 60;
                D[t >>> 0 >> 2 >>> 0] = Number(o != A);
                e = r(s);
                t = r(a);
                e = oe(e);
                t = oe(t);
                if (A < o) {
                  S[n >> 2 >>> 0] = e;
                  S[n + 4 >> 2 >>> 0] = t;
                } else {
                  S[n >> 2 >>> 0] = t;
                  S[n + 4 >> 2 >>> 0] = e;
                }
              },
              d: () => {
                U('');
              },
              h: function () {
                return Date.now();
              },
              v: function () {
                return 4294901760;
              },
              b: () => performance.now(),
              J: function (e, t, n) {
                t >>>= 0;
                return Q.copyWithin(e >>> 0 >>> 0, t >>> 0, t + (n >>> 0) >>> 0);
              },
              t: function (e) {
                e >>>= 0;
                var t = Q.length;
                if (e > 4294901760) {
                  return false;
                }
                for (var n = 1; n <= 4; n *= 2) {
                  var r = t * (1 + 0.2 / n);
                  r = Math.min(r, e + 100663296);
                  var o = Math;
                  r = Math.max(e, r);
                  e: {
                    o = o.min.call(o, 4294901760, r + (65536 - r % 65536) % 65536) - v.buffer.byteLength + 65535 >>> 16;
                    try {
                      v.grow(o);
                      R();
                      var s = 1;
                      break e;
                    } catch (e) {}
                    s = undefined;
                  }
                  if (s) {
                    return true;
                  }
                }
                return false;
              },
              D: function (e, t) {
                e >>>= 0;
                t >>>= 0;
                var n = 0;
                se().forEach(function (r, o) {
                  var s = t + n;
                  o = S[e + o * 4 >> 2 >>> 0] = s;
                  s = 0;
                  for (; s < r.length; ++s) {
                    B[(o++ | 0) >>> 0] = r.charCodeAt(s);
                  }
                  B[(o | 0) >>> 0] = 0;
                  n += r.length + 1;
                });
                return 0;
              },
              E: function (e, t) {
                e >>>= 0;
                t >>>= 0;
                var n = se();
                S[e >> 2 >>> 0] = n.length;
                var r = 0;
                n.forEach(function (e) {
                  r += e.length + 1;
                });
                S[t >> 2 >>> 0] = r;
                return 0;
              },
              s: e => {
                if (!_) {
                  if (s.onExit) {
                    s.onExit(e);
                  }
                  T = true;
                }
                g(e, new H(e));
              },
              f: () => 52,
              j: function () {
                return 52;
              },
              q: function () {
                return 70;
              },
              i: function (e, t, n, r) {
                t >>>= 0;
                n >>>= 0;
                r >>>= 0;
                var o = 0;
                for (var s = 0; s < n; s++) {
                  var a = S[t >> 2 >>> 0];
                  var A = S[t + 4 >> 2 >>> 0];
                  t += 8;
                  for (var c = 0; c < A; c++) {
                    var u = Q[a + c >>> 0];
                    var l = ae[e];
                    if (u === 0 || u === 10) {
                      (e === 1 ? y : w)(V(l, 0));
                      l.length = 0;
                    } else {
                      l.push(u);
                    }
                  }
                  o += A;
                }
                S[r >> 2 >>> 0] = o;
                return 0;
              },
              r: function (e, t) {
                e >>>= 0;
                Ae(Q.subarray(e >>> 0, e + (t >>> 0) >>> 0));
                return 0;
              },
              C: le,
              c: function (e, t, n, r) {
                return le(e >>> 0, t >>> 0, n >>> 0, r >>> 0);
              }
            };
            (function () {
              function e(e) {
                e = e.exports;
                b = e = function (e) {
                  var t = e => () => e() >>> 0;
                  var n = e => t => e(t) >>> 0;
                  (e = Object.assign({}, e)).__errno_location = t(e.__errno_location);
                  e.malloc = n(e.malloc);
                  e.stackSave = t(e.stackSave);
                  e.stackAlloc = n(e.stackAlloc);
                  return e;
                }(e);
                v = b.L;
                R();
                x.unshift(b.M);
                N--;
                if (s.monitorRunDependencies) {
                  s.monitorRunDependencies(N);
                }
                if (N == 0 && (L !== null && (clearInterval(L), L = null), K)) {
                  var t = K;
                  K = null;
                  t();
                }
                return e;
              }
              var t = {
                a: ge
              };
              N++;
              if (s.monitorRunDependencies) {
                s.monitorRunDependencies(N);
              }
              if (s.instantiateWasm) {
                try {
                  return s.instantiateWasm(t, e);
                } catch (e) {
                  w(`Module.instantiateWasm callback failed with error: ${e}`);
                  o(e);
                }
              }
              (function (e, t) {
                var n = M;
                if (E || typeof WebAssembly.instantiateStreaming != 'function' || j(n) || n.startsWith('file://') || f || typeof fetch != 'function') {
                  return Y(n, e, t);
                } else {
                  return fetch(n, {
                    credentials: 'same-origin'
                  }).then(r => WebAssembly.instantiateStreaming(r, e).then(t, function (r) {
                    w(`wasm streaming compile failed: ${r}`);
                    w('falling back to ArrayBuffer instantiation');
                    return Y(n, e, t);
                  }));
                }
              })(t, function (t) {
                e(t.instance);
              }).catch(o);
            })();
            s._OrtInit = (e, t) => (s._OrtInit = b.N)(e, t);
            s._OrtGetLastError = (e, t) => (s._OrtGetLastError = b.O)(e, t);
            s._OrtCreateSessionOptions = (e, t, n, r, o, a, A, c, u, l) => (s._OrtCreateSessionOptions = b.P)(e, t, n, r, o, a, A, c, u, l);
            s._OrtAppendExecutionProvider = (e, t) => (s._OrtAppendExecutionProvider = b.Q)(e, t);
            s._OrtAddSessionConfigEntry = (e, t, n) => (s._OrtAddSessionConfigEntry = b.R)(e, t, n);
            s._OrtReleaseSessionOptions = e => (s._OrtReleaseSessionOptions = b.S)(e);
            s._OrtCreateSession = (e, t, n) => (s._OrtCreateSession = b.T)(e, t, n);
            s._OrtReleaseSession = e => (s._OrtReleaseSession = b.U)(e);
            s._OrtGetInputOutputCount = (e, t, n) => (s._OrtGetInputOutputCount = b.V)(e, t, n);
            s._OrtGetInputName = (e, t) => (s._OrtGetInputName = b.W)(e, t);
            s._OrtGetOutputName = (e, t) => (s._OrtGetOutputName = b.X)(e, t);
            s._OrtFree = e => (s._OrtFree = b.Y)(e);
            s._OrtCreateTensor = (e, t, n, r, o) => (s._OrtCreateTensor = b.Z)(e, t, n, r, o);
            s._OrtGetTensorData = (e, t, n, r, o) => (s._OrtGetTensorData = b._)(e, t, n, r, o);
            s._OrtReleaseTensor = e => (s._OrtReleaseTensor = b.$)(e);
            s._OrtCreateRunOptions = (e, t, n, r) => (s._OrtCreateRunOptions = b.aa)(e, t, n, r);
            s._OrtAddRunConfigEntry = (e, t, n) => (s._OrtAddRunConfigEntry = b.ba)(e, t, n);
            s._OrtReleaseRunOptions = e => (s._OrtReleaseRunOptions = b.ca)(e);
            s._OrtRun = (e, t, n, r, o, a, A, c) => (s._OrtRun = b.da)(e, t, n, r, o, a, A, c);
            s._OrtEndProfiling = e => (s._OrtEndProfiling = b.ea)(e);
            var de = s._malloc = e => (de = s._malloc = b.fa)(e);
            s._free = e => (s._free = b.ga)(e);
            var he;
            var fe = e => (fe = b.ia)(e);
            var pe = () => (pe = b.ja)();
            var Ce = e => (Ce = b.ka)(e);
            var me = e => (me = b.la)(e);
            function Ie() {
              function e() {
                if (!he && (he = true, s.calledRun = true, !T)) {
                  J(x);
                  t(s);
                  if (s.onRuntimeInitialized) {
                    s.onRuntimeInitialized();
                  }
                  if (s.postRun) {
                    for (typeof s.postRun == 'function' && (s.postRun = [s.postRun]); s.postRun.length;) {
                      var e = s.postRun.shift();
                      P.unshift(e);
                    }
                  }
                  J(P);
                }
              }
              if (!(N > 0)) {
                if (s.preRun) {
                  for (typeof s.preRun == 'function' && (s.preRun = [s.preRun]); s.preRun.length;) {
                    F();
                  }
                }
                J(k);
                if (!(N > 0)) {
                  if (s.setStatus) {
                    s.setStatus('Running...');
                    setTimeout(function () {
                      setTimeout(function () {
                        s.setStatus('');
                      }, 1);
                      e();
                    }, 1);
                  } else {
                    e();
                  }
                }
              }
            }
            s.stackAlloc = me;
            s.stackSave = pe;
            s.stackRestore = Ce;
            s.UTF8ToString = X;
            s.stringToUTF8 = (e, t, n) => ee(e, Q, t, n);
            s.lengthBytesUTF8 = Z;
            K = function e() {
              if (!he) {
                Ie();
              }
              if (!he) {
                K = e;
              }
            };
            if (s.preInit) {
              for (typeof s.preInit == 'function' && (s.preInit = [s.preInit]); s.preInit.length > 0;) {
                s.preInit.pop()();
              }
            }
            Ie();
            return e.ready;
          }
          _module.exports = o;
        },
        4537: _module => {
          "use strict";

          _module.exports = function (e, t) {
            var n = new Array(arguments.length - 1);
            var r = 0;
            for (var o = 2, s = true; o < arguments.length;) {
              n[r++] = arguments[o++];
            }
            return new Promise(function (o, a) {
              n[r] = function (e) {
                if (s) {
                  s = false;
                  if (e) {
                    a(e);
                  } else {
                    for (var t = new Array(arguments.length - 1), n = 0; n < t.length;) {
                      t[n++] = arguments[n];
                    }
                    o.apply(null, t);
                  }
                }
              };
              try {
                e.apply(t || null, n);
              } catch (e) {
                if (s) {
                  s = false;
                  a(e);
                }
              }
            });
          };
        },
        7419: (_module, _exports) => {
          "use strict";

          var n = _exports;
          n.length = function (e) {
            var t = e.length;
            if (!t) {
              return 0;
            }
            var n = 0;
            while (--t % 4 > 1 && e.charAt(t) === '=') {
              ++n;
            }
            return Math.ceil(e.length * 3) / 4 - n;
          };
          var r = new Array(64);
          var o = new Array(123);
          for (var s = 0; s < 64;) {
            o[r[s] = s < 26 ? s + 65 : s < 52 ? s + 71 : s < 62 ? s - 4 : s - 59 | 43] = s++;
          }
          n.encode = function (e, t, n) {
            var o;
            var s = null;
            var a = [];
            for (var A = 0, c = 0; t < n;) {
              var u = e[t++];
              switch (c) {
                case 0:
                  a[A++] = r[u >> 2];
                  o = (u & 3) << 4;
                  c = 1;
                  break;
                case 1:
                  a[A++] = r[o | u >> 4];
                  o = (u & 15) << 2;
                  c = 2;
                  break;
                case 2:
                  a[A++] = r[o | u >> 6];
                  a[A++] = r[u & 63];
                  c = 0;
              }
              if (A > 8191) {
                (s ||= []).push(String.fromCharCode.apply(String, a));
                A = 0;
              }
            }
            if (c) {
              a[A++] = r[o];
              a[A++] = 61;
              if (c === 1) {
                a[A++] = 61;
              }
            }
            if (s) {
              if (A) {
                s.push(String.fromCharCode.apply(String, a.slice(0, A)));
              }
              return s.join('');
            } else {
              return String.fromCharCode.apply(String, a.slice(0, A));
            }
          };
          var a = 'invalid encoding';
          n.decode = function (e, t, n) {
            var r;
            var s = n;
            var A = 0;
            for (var c = 0; c < e.length;) {
              var u = e.charCodeAt(c++);
              if (u === 61 && A > 1) {
                break;
              }
              if ((u = o[u]) === undefined) {
                throw Error(a);
              }
              switch (A) {
                case 0:
                  r = u;
                  A = 1;
                  break;
                case 1:
                  t[n++] = r << 2 | (u & 48) >> 4;
                  r = u;
                  A = 2;
                  break;
                case 2:
                  t[n++] = (r & 15) << 4 | (u & 60) >> 2;
                  r = u;
                  A = 3;
                  break;
                case 3:
                  t[n++] = (r & 3) << 6 | u;
                  A = 0;
              }
            }
            if (A === 1) {
              throw Error(a);
            }
            return n - s;
          };
          n.test = function (e) {
            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);
          };
        },
        9211: _module => {
          "use strict";

          function t() {
            this._listeners = {};
          }
          _module.exports = t;
          t.prototype.on = function (e, t, n) {
            (this._listeners[e] ||= []).push({
              fn: t,
              ctx: n || this
            });
            return this;
          };
          t.prototype.off = function (e, t) {
            if (e === undefined) {
              this._listeners = {};
            } else {
              if (t === undefined) {
                this._listeners[e] = [];
              } else {
                for (var n = this._listeners[e], r = 0; r < n.length;) {
                  if (n[r].fn === t) {
                    n.splice(r, 1);
                  } else {
                    ++r;
                  }
                }
              }
            }
            return this;
          };
          t.prototype.emit = function (e) {
            var t = this._listeners[e];
            if (t) {
              var n = [];
              for (var r = 1; r < arguments.length;) {
                n.push(arguments[r++]);
              }
              for (r = 0; r < t.length;) {
                t[r].fn.apply(t[r++].ctx, n);
              }
            }
            return this;
          };
        },
        945: _module => {
          "use strict";

          function t(e) {
            if (typeof Float32Array != 'undefined') {
              (function () {
                var t = new Float32Array([-0]);
                var n = new Uint8Array(t.buffer);
                var r = n[3] === 128;
                function o(e, r, o) {
                  t[0] = e;
                  r[o] = n[0];
                  r[o + 1] = n[1];
                  r[o + 2] = n[2];
                  r[o + 3] = n[3];
                }
                function s(e, r, o) {
                  t[0] = e;
                  r[o] = n[3];
                  r[o + 1] = n[2];
                  r[o + 2] = n[1];
                  r[o + 3] = n[0];
                }
                function a(e, r) {
                  n[0] = e[r];
                  n[1] = e[r + 1];
                  n[2] = e[r + 2];
                  n[3] = e[r + 3];
                  return t[0];
                }
                function A(e, r) {
                  n[3] = e[r];
                  n[2] = e[r + 1];
                  n[1] = e[r + 2];
                  n[0] = e[r + 3];
                  return t[0];
                }
                e.writeFloatLE = r ? o : s;
                e.writeFloatBE = r ? s : o;
                e.readFloatLE = r ? a : A;
                e.readFloatBE = r ? A : a;
              })();
            } else {
              (function () {
                function t(e, t, n, r) {
                  var o = t < 0 ? 1 : 0;
                  if (o) {
                    t = -t;
                  }
                  if (t === 0) {
                    e(1 / t > 0 ? 0 : 2147483648, n, r);
                  } else {
                    if (isNaN(t)) {
                      e(2143289344, n, r);
                    } else {
                      if (t > 3.4028234663852886e+38) {
                        e((o << 31 | 2139095040) >>> 0, n, r);
                      } else {
                        if (t < 1.1754943508222875e-38) {
                          e((o << 31 | Math.round(t / 1.401298464324817e-45)) >>> 0, n, r);
                        } else {
                          var s = Math.floor(Math.log(t) / Math.LN2);
                          e((o << 31 | s + 127 << 23 | Math.round(t * Math.pow(2, -s) * 8388608) & 8388607) >>> 0, n, r);
                        }
                      }
                    }
                  }
                }
                function a(e, t, n) {
                  var r = e(t, n);
                  var o = (r >> 31) * 2 + 1;
                  var s = r >>> 23 & 255;
                  var a = r & 8388607;
                  if (s === 255) {
                    if (a) {
                      return NaN;
                    } else {
                      return o * Infinity;
                    }
                  } else {
                    if (s === 0) {
                      return o * 1.401298464324817e-45 * a;
                    } else {
                      return o * Math.pow(2, s - 150) * (a + 8388608);
                    }
                  }
                }
                e.writeFloatLE = t.bind(null, n);
                e.writeFloatBE = t.bind(null, r);
                e.readFloatLE = a.bind(null, o);
                e.readFloatBE = a.bind(null, s);
              })();
            }
            if (typeof Float64Array != 'undefined') {
              (function () {
                var t = new Float64Array([-0]);
                var n = new Uint8Array(t.buffer);
                var r = n[7] === 128;
                function o(e, r, o) {
                  t[0] = e;
                  r[o] = n[0];
                  r[o + 1] = n[1];
                  r[o + 2] = n[2];
                  r[o + 3] = n[3];
                  r[o + 4] = n[4];
                  r[o + 5] = n[5];
                  r[o + 6] = n[6];
                  r[o + 7] = n[7];
                }
                function s(e, r, o) {
                  t[0] = e;
                  r[o] = n[7];
                  r[o + 1] = n[6];
                  r[o + 2] = n[5];
                  r[o + 3] = n[4];
                  r[o + 4] = n[3];
                  r[o + 5] = n[2];
                  r[o + 6] = n[1];
                  r[o + 7] = n[0];
                }
                function a(e, r) {
                  n[0] = e[r];
                  n[1] = e[r + 1];
                  n[2] = e[r + 2];
                  n[3] = e[r + 3];
                  n[4] = e[r + 4];
                  n[5] = e[r + 5];
                  n[6] = e[r + 6];
                  n[7] = e[r + 7];
                  return t[0];
                }
                function A(e, r) {
                  n[7] = e[r];
                  n[6] = e[r + 1];
                  n[5] = e[r + 2];
                  n[4] = e[r + 3];
                  n[3] = e[r + 4];
                  n[2] = e[r + 5];
                  n[1] = e[r + 6];
                  n[0] = e[r + 7];
                  return t[0];
                }
                e.writeDoubleLE = r ? o : s;
                e.writeDoubleBE = r ? s : o;
                e.readDoubleLE = r ? a : A;
                e.readDoubleBE = r ? A : a;
              })();
            } else {
              (function () {
                function t(e, t, n, r, o, s) {
                  var a = r < 0 ? 1 : 0;
                  if (a) {
                    r = -r;
                  }
                  if (r === 0) {
                    e(0, o, s + t);
                    e(1 / r > 0 ? 0 : 2147483648, o, s + n);
                  } else {
                    if (isNaN(r)) {
                      e(0, o, s + t);
                      e(2146959360, o, s + n);
                    } else {
                      if (r > 1.7976931348623157e+308) {
                        e(0, o, s + t);
                        e((a << 31 | 2146435072) >>> 0, o, s + n);
                      } else {
                        var A;
                        if (r < 2.2250738585072014e-308) {
                          e((A = r / 5e-324) >>> 0, o, s + t);
                          e((a << 31 | A / 4294967296) >>> 0, o, s + n);
                        } else {
                          var c = Math.floor(Math.log(r) / Math.LN2);
                          if (c === 1024) {
                            c = 1023;
                          }
                          e((A = r * Math.pow(2, -c)) * 4503599627370496 >>> 0, o, s + t);
                          e((a << 31 | c + 1023 << 20 | A * 1048576 & 1048575) >>> 0, o, s + n);
                        }
                      }
                    }
                  }
                }
                function a(e, t, n, r, o) {
                  var s = e(r, o + t);
                  var a = e(r, o + n);
                  var A = (a >> 31) * 2 + 1;
                  var c = a >>> 20 & 2047;
                  var u = (a & 1048575) * 4294967296 + s;
                  if (c === 2047) {
                    if (u) {
                      return NaN;
                    } else {
                      return A * Infinity;
                    }
                  } else {
                    if (c === 0) {
                      return A * 5e-324 * u;
                    } else {
                      return A * Math.pow(2, c - 1075) * (u + 4503599627370496);
                    }
                  }
                }
                e.writeDoubleLE = t.bind(null, n, 0, 4);
                e.writeDoubleBE = t.bind(null, r, 4, 0);
                e.readDoubleLE = a.bind(null, o, 0, 4);
                e.readDoubleBE = a.bind(null, s, 4, 0);
              })();
            }
            return e;
          }
          function n(e, t, n) {
            t[n] = e & 255;
            t[n + 1] = e >>> 8 & 255;
            t[n + 2] = e >>> 16 & 255;
            t[n + 3] = e >>> 24;
          }
          function r(e, t, n) {
            t[n] = e >>> 24;
            t[n + 1] = e >>> 16 & 255;
            t[n + 2] = e >>> 8 & 255;
            t[n + 3] = e & 255;
          }
          function o(e, t) {
            return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0;
          }
          function s(e, t) {
            return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;
          }
          _module.exports = t(t);
        },
        7199: _module => {
          "use strict";

          function inquire(moduleName) {
            try {
              var mod = eval('quire'.replace(/^/, 're'))(moduleName);
              if (mod && (mod.length || Object.keys(mod).length)) {
                return mod;
              }
            } catch (e) {}
            return null;
          }
          _module.exports = inquire;
        },
        6662: _module => {
          "use strict";

          _module.exports = function (e, t, n) {
            var r = n || 8192;
            var o = r >>> 1;
            var s = null;
            var a = r;
            return function (n) {
              if (n < 1 || n > o) {
                return e(n);
              }
              if (a + n > r) {
                s = e(r);
                a = 0;
              }
              var A = t.call(s, a, a += n);
              if (a & 7) {
                a = 1 + (a | 7);
              }
              return A;
            };
          };
        },
        4997: (_module, _exports) => {
          "use strict";

          var n = _exports;
          n.length = function (e) {
            var t = 0;
            var n = 0;
            for (var r = 0; r < e.length; ++r) {
              if ((n = e.charCodeAt(r)) < 128) {
                t += 1;
              } else {
                if (n < 2048) {
                  t += 2;
                } else {
                  if ((n & 64512) == 55296 && (e.charCodeAt(r + 1) & 64512) == 56320) {
                    ++r;
                    t += 4;
                  } else {
                    t += 3;
                  }
                }
              }
            }
            return t;
          };
          n.read = function (e, t, n) {
            if (n - t < 1) {
              return '';
            }
            for (var r, o = null, s = [], a = 0; t < n;) {
              if ((r = e[t++]) < 128) {
                s[a++] = r;
              } else {
                if (r > 191 && r < 224) {
                  s[a++] = (r & 31) << 6 | e[t++] & 63;
                } else {
                  if (r > 239 && r < 365) {
                    r = ((r & 7) << 18 | (e[t++] & 63) << 12 | (e[t++] & 63) << 6 | e[t++] & 63) - 65536;
                    s[a++] = 55296 + (r >> 10);
                    s[a++] = 56320 + (r & 1023);
                  } else {
                    s[a++] = (r & 15) << 12 | (e[t++] & 63) << 6 | e[t++] & 63;
                  }
                }
              }
              if (a > 8191) {
                (o ||= []).push(String.fromCharCode.apply(String, s));
                a = 0;
              }
            }
            if (o) {
              if (a) {
                o.push(String.fromCharCode.apply(String, s.slice(0, a)));
              }
              return o.join('');
            } else {
              return String.fromCharCode.apply(String, s.slice(0, a));
            }
          };
          n.write = function (e, t, n) {
            var r;
            var o;
            var s = n;
            for (var a = 0; a < e.length; ++a) {
              if ((r = e.charCodeAt(a)) < 128) {
                t[n++] = r;
              } else {
                if (r < 2048) {
                  t[n++] = r >> 6 | 192;
                  t[n++] = r & 63 | 128;
                } else {
                  if ((r & 64512) == 55296 && ((o = e.charCodeAt(a + 1)) & 64512) == 56320) {
                    r = 65536 + ((r & 1023) << 10) + (o & 1023);
                    ++a;
                    t[n++] = r >> 18 | 240;
                    t[n++] = r >> 12 & 63 | 128;
                    t[n++] = r >> 6 & 63 | 128;
                    t[n++] = r & 63 | 128;
                  } else {
                    t[n++] = r >> 12 | 224;
                    t[n++] = r >> 6 & 63 | 128;
                    t[n++] = r & 63 | 128;
                  }
                }
              }
            }
            return n - s;
          };
        },
        3442: (_module, _exports) => {
          "use strict";

          _exports.__esModule = true;
          var n = function () {
            function e(t) {
              if (!t) {
                throw new TypeError('Invalid argument; `value` has no value.');
              }
              this.value = e.EMPTY;
              if (t && e.isGuid(t)) {
                this.value = t;
              }
            }
            e.isGuid = function (t) {
              var n = t.toString();
              return t && (t instanceof e || e.validator.test(n));
            };
            e.create = function () {
              return new e([e.gen(2), e.gen(1), e.gen(1), e.gen(1), e.gen(3)].join('-'));
            };
            e.createEmpty = function () {
              return new e('emptyguid');
            };
            e.parse = function (t) {
              return new e(t);
            };
            e.raw = function () {
              return [e.gen(2), e.gen(1), e.gen(1), e.gen(1), e.gen(3)].join('-');
            };
            e.gen = function (e) {
              var t = '';
              for (var n = 0; n < e; n++) {
                t += ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);
              }
              return t;
            };
            e.prototype.equals = function (t) {
              return e.isGuid(t) && this.value === t.toString();
            };
            e.prototype.isEmpty = function () {
              return this.value === e.EMPTY;
            };
            e.prototype.toString = function () {
              return this.value;
            };
            e.prototype.toJSON = function () {
              return {
                value: this.value
              };
            };
            e.validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');
            e.EMPTY = '00000000-0000-0000-0000-000000000000';
            return e;
          }();
          _exports.Guid = n;
        },
        2100: (_module, _exports, _require) => {
          "use strict";

          _module.exports = _require(9482);
        },
        9482: (_module, _exports, _require) => {
          "use strict";

          var r = _exports;
          function o() {
            r.util._configure();
            r.Writer._configure(r.BufferWriter);
            r.Reader._configure(r.BufferReader);
          }
          r.build = 'minimal';
          r.Writer = _require(1173);
          r.BufferWriter = _require(3155);
          r.Reader = _require(1408);
          r.BufferReader = _require(593);
          r.util = _require(9693);
          r.rpc = _require(5994);
          r.roots = _require(5054);
          r.configure = o;
          o();
        },
        1408: (_module, _exports, _require) => {
          "use strict";

          _module.exports = c;
          var r;
          var o = _require(9693);
          var s = o.LongBits;
          var a = o.utf8;
          function A(e, t) {
            return RangeError(`index out of range: ${e.pos} + ${t || 1} > ${e.len}`);
          }
          function c(e) {
            this.buf = e;
            this.pos = 0;
            this.len = e.length;
          }
          var u;
          var l = typeof Uint8Array != 'undefined' ? function (e) {
            if (e instanceof Uint8Array || Array.isArray(e)) {
              return new c(e);
            }
            throw Error('illegal buffer');
          } : function (e) {
            if (Array.isArray(e)) {
              return new c(e);
            }
            throw Error('illegal buffer');
          };
          function g() {
            if (o.Buffer) {
              return function (e) {
                return (c.create = function (e) {
                  if (o.Buffer.isBuffer(e)) {
                    return new r(e);
                  } else {
                    return l(e);
                  }
                })(e);
              };
            } else {
              return l;
            }
          }
          function d() {
            var e = new s(0, 0);
            var t = 0;
            if (!(this.len - this.pos > 4)) {
              for (; t < 3; ++t) {
                if (this.pos >= this.len) {
                  throw A(this);
                }
                e.lo = (e.lo | (this.buf[this.pos] & 127) << t * 7) >>> 0;
                if (this.buf[this.pos++] < 128) {
                  return e;
                }
              }
              e.lo = (e.lo | (this.buf[this.pos++] & 127) << t * 7) >>> 0;
              return e;
            }
            for (; t < 4; ++t) {
              e.lo = (e.lo | (this.buf[this.pos] & 127) << t * 7) >>> 0;
              if (this.buf[this.pos++] < 128) {
                return e;
              }
            }
            e.lo = (e.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
            e.hi = (e.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return e;
            }
            t = 0;
            if (this.len - this.pos > 4) {
              for (; t < 5; ++t) {
                e.hi = (e.hi | (this.buf[this.pos] & 127) << t * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128) {
                  return e;
                }
              }
            } else {
              for (; t < 5; ++t) {
                if (this.pos >= this.len) {
                  throw A(this);
                }
                e.hi = (e.hi | (this.buf[this.pos] & 127) << t * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128) {
                  return e;
                }
              }
            }
            throw Error('invalid varint encoding');
          }
          function h(e, t) {
            return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0;
          }
          function f() {
            if (this.pos + 8 > this.len) {
              throw A(this, 8);
            }
            return new s(h(this.buf, this.pos += 4), h(this.buf, this.pos += 4));
          }
          c.create = g();
          c.prototype._slice = o.Array.prototype.subarray || o.Array.prototype.slice;
          c.prototype.uint32 = (u = 4294967295, function () {
            u = (this.buf[this.pos] & 127) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return u;
            }
            u = (u | (this.buf[this.pos] & 127) << 7) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return u;
            }
            u = (u | (this.buf[this.pos] & 127) << 14) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return u;
            }
            u = (u | (this.buf[this.pos] & 127) << 21) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return u;
            }
            u = (u | (this.buf[this.pos] & 15) << 28) >>> 0;
            if (this.buf[this.pos++] < 128) {
              return u;
            }
            if ((this.pos += 5) > this.len) {
              this.pos = this.len;
              throw A(this, 10);
            }
            return u;
          });
          c.prototype.int32 = function () {
            return this.uint32() | 0;
          };
          c.prototype.sint32 = function () {
            var e = this.uint32();
            return e >>> 1 ^ -(e & 1);
          };
          c.prototype.bool = function () {
            return this.uint32() !== 0;
          };
          c.prototype.fixed32 = function () {
            if (this.pos + 4 > this.len) {
              throw A(this, 4);
            }
            return h(this.buf, this.pos += 4);
          };
          c.prototype.sfixed32 = function () {
            if (this.pos + 4 > this.len) {
              throw A(this, 4);
            }
            return h(this.buf, this.pos += 4) | 0;
          };
          c.prototype.float = function () {
            if (this.pos + 4 > this.len) {
              throw A(this, 4);
            }
            var e = o.float.readFloatLE(this.buf, this.pos);
            this.pos += 4;
            return e;
          };
          c.prototype.double = function () {
            if (this.pos + 8 > this.len) {
              throw A(this, 4);
            }
            var e = o.float.readDoubleLE(this.buf, this.pos);
            this.pos += 8;
            return e;
          };
          c.prototype.bytes = function () {
            var e = this.uint32();
            var t = this.pos;
            var n = this.pos + e;
            if (n > this.len) {
              throw A(this, e);
            }
            this.pos += e;
            if (Array.isArray(this.buf)) {
              return this.buf.slice(t, n);
            } else {
              if (t === n) {
                return new this.buf.constructor(0);
              } else {
                return this._slice.call(this.buf, t, n);
              }
            }
          };
          c.prototype.string = function () {
            var e = this.bytes();
            return a.read(e, 0, e.length);
          };
          c.prototype.skip = function (e) {
            if (typeof e == 'number') {
              if (this.pos + e > this.len) {
                throw A(this, e);
              }
              this.pos += e;
            } else {
              do {
                if (this.pos >= this.len) {
                  throw A(this);
                }
              } while (this.buf[this.pos++] & 128);
            }
            return this;
          };
          c.prototype.skipType = function (e) {
            switch (e) {
              case 0:
                this.skip();
                break;
              case 1:
                this.skip(8);
                break;
              case 2:
                this.skip(this.uint32());
                break;
              case 3:
                while ((e = this.uint32() & 7) != 4) {
                  this.skipType(e);
                }
                break;
              case 5:
                this.skip(4);
                break;
              default:
                throw Error(`invalid wire type ${e} at offset ${this.pos}`);
            }
            return this;
          };
          c._configure = function (e) {
            r = e;
            c.create = g();
            r._configure();
            var t = o.Long ? 'toLong' : 'toNumber';
            o.merge(c.prototype, {
              int64: function () {
                return d.call(this)[t](false);
              },
              uint64: function () {
                return d.call(this)[t](true);
              },
              sint64: function () {
                return d.call(this).zzDecode()[t](false);
              },
              fixed64: function () {
                return f.call(this)[t](true);
              },
              sfixed64: function () {
                return f.call(this)[t](false);
              }
            });
          };
        },
        593: (_module, _exports, _require) => {
          "use strict";

          _module.exports = s;
          var r = _require(1408);
          (s.prototype = Object.create(r.prototype)).constructor = s;
          var o = _require(9693);
          function s(e) {
            r.call(this, e);
          }
          s._configure = function () {
            if (o.Buffer) {
              s.prototype._slice = o.Buffer.prototype.slice;
            }
          };
          s.prototype.string = function () {
            var e = this.uint32();
            if (this.buf.utf8Slice) {
              return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len));
            } else {
              return this.buf.toString('utf-8', this.pos, this.pos = Math.min(this.pos + e, this.len));
            }
          };
          s._configure();
        },
        5054: _module => {
          "use strict";

          _module.exports = {};
        },
        5994: (_module, _exports, _require) => {
          "use strict";

          _exports.Service = _require(7948);
        },
        7948: (_module, _exports, _require) => {
          "use strict";

          _module.exports = o;
          var r = _require(9693);
          function o(e, t, n) {
            if (typeof e != 'function') {
              throw TypeError('rpcImpl must be a function');
            }
            r.EventEmitter.call(this);
            this.rpcImpl = e;
            this.requestDelimited = Boolean(t);
            this.responseDelimited = Boolean(n);
          }
          (o.prototype = Object.create(r.EventEmitter.prototype)).constructor = o;
          o.prototype.rpcCall = function e(t, n, o, s, a) {
            if (!s) {
              throw TypeError('request must be specified');
            }
            var A = this;
            if (!a) {
              return r.asPromise(e, A, t, n, o, s);
            }
            if (A.rpcImpl) {
              try {
                return A.rpcImpl(t, n[A.requestDelimited ? 'encodeDelimited' : 'encode'](s).finish(), function (e, n) {
                  if (e) {
                    A.emit('error', e, t);
                    return a(e);
                  }
                  if (n !== null) {
                    if (!(n instanceof o)) {
                      try {
                        n = o[A.responseDelimited ? 'decodeDelimited' : 'decode'](n);
                      } catch (e) {
                        A.emit('error', e, t);
                        return a(e);
                      }
                    }
                    A.emit('data', n, t);
                    return a(null, n);
                  }
                  A.end(true);
                });
              } catch (e) {
                A.emit('error', e, t);
                setTimeout(function () {
                  a(e);
                }, 0);
                return;
              }
            } else {
              setTimeout(function () {
                a(Error('already ended'));
              }, 0);
            }
          };
          o.prototype.end = function (e) {
            if (this.rpcImpl) {
              if (!e) {
                this.rpcImpl(null, null, null);
              }
              this.rpcImpl = null;
              this.emit('end').off();
            }
            return this;
          };
        },
        1945: (_module, _exports, _require) => {
          "use strict";

          _module.exports = o;
          var r = _require(9693);
          function o(e, t) {
            this.lo = e >>> 0;
            this.hi = t >>> 0;
          }
          var s = o.zero = new o(0, 0);
          s.toNumber = function () {
            return 0;
          };
          s.zzEncode = s.zzDecode = function () {
            return this;
          };
          s.length = function () {
            return 1;
          };
          var a = o.zeroHash = '\0\0\0\0\0\0\0\0';
          o.fromNumber = function (e) {
            if (e === 0) {
              return s;
            }
            var t = e < 0;
            if (t) {
              e = -e;
            }
            var n = e >>> 0;
            var r = (e - n) / 4294967296 >>> 0;
            if (t) {
              r = ~r >>> 0;
              n = ~n >>> 0;
              if (++n > 4294967295) {
                n = 0;
                if (++r > 4294967295) {
                  r = 0;
                }
              }
            }
            return new o(n, r);
          };
          o.from = function (e) {
            if (typeof e == 'number') {
              return o.fromNumber(e);
            }
            if (r.isString(e)) {
              if (!r.Long) {
                return o.fromNumber(parseInt(e, 10));
              }
              e = r.Long.fromString(e);
            }
            if (e.low || e.high) {
              return new o(e.low >>> 0, e.high >>> 0);
            } else {
              return s;
            }
          };
          o.prototype.toNumber = function (e) {
            if (!e && this.hi >>> 31) {
              var t = 1 + ~this.lo >>> 0;
              var n = ~this.hi >>> 0;
              if (!t) {
                n = n + 1 >>> 0;
              }
              return -(t + n * 4294967296);
            }
            return this.lo + this.hi * 4294967296;
          };
          o.prototype.toLong = function (e) {
            if (r.Long) {
              return new r.Long(this.lo | 0, this.hi | 0, Boolean(e));
            } else {
              return {
                low: this.lo | 0,
                high: this.hi | 0,
                unsigned: Boolean(e)
              };
            }
          };
          var A = String.prototype.charCodeAt;
          o.fromHash = function (e) {
            if (e === a) {
              return s;
            } else {
              return new o((A.call(e, 0) | A.call(e, 1) << 8 | A.call(e, 2) << 16 | A.call(e, 3) << 24) >>> 0, (A.call(e, 4) | A.call(e, 5) << 8 | A.call(e, 6) << 16 | A.call(e, 7) << 24) >>> 0);
            }
          };
          o.prototype.toHash = function () {
            return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
          };
          o.prototype.zzEncode = function () {
            var e = this.hi >> 31;
            this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0;
            this.lo = (this.lo << 1 ^ e) >>> 0;
            return this;
          };
          o.prototype.zzDecode = function () {
            var e = -(this.lo & 1);
            this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0;
            this.hi = (this.hi >>> 1 ^ e) >>> 0;
            return this;
          };
          o.prototype.length = function () {
            var e = this.lo;
            var t = (this.lo >>> 28 | this.hi << 4) >>> 0;
            var n = this.hi >>> 24;
            if (n === 0) {
              if (t === 0) {
                if (e < 16384) {
                  if (e < 128) {
                    return 1;
                  } else {
                    return 2;
                  }
                } else {
                  if (e < 2097152) {
                    return 3;
                  } else {
                    return 4;
                  }
                }
              } else {
                if (t < 16384) {
                  if (t < 128) {
                    return 5;
                  } else {
                    return 6;
                  }
                } else {
                  if (t < 2097152) {
                    return 7;
                  } else {
                    return 8;
                  }
                }
              }
            } else {
              if (n < 128) {
                return 9;
              } else {
                return 10;
              }
            }
          };
        },
        9693: function (_module, _exports, _require) {
          "use strict";

          var r = _exports;
          function o(e, t, n) {
            for (var r = Object.keys(t), o = 0; o < r.length; ++o) {
              if (e[r[o]] === undefined || !n) {
                e[r[o]] = t[r[o]];
              }
            }
            return e;
          }
          function s(e) {
            function t(e, n) {
              if (!(this instanceof t)) {
                return new t(e, n);
              }
              Object.defineProperty(this, 'message', {
                get: function () {
                  return e;
                }
              });
              if (Error.captureStackTrace) {
                Error.captureStackTrace(this, t);
              } else {
                Object.defineProperty(this, 'stack', {
                  value: new Error().stack || ''
                });
              }
              if (n) {
                o(this, n);
              }
            }
            t.prototype = Object.create(Error.prototype, {
              constructor: {
                value: t,
                writable: true,
                enumerable: false,
                configurable: true
              },
              name: {
                get: function () {
                  return e;
                },
                set: undefined,
                enumerable: false,
                configurable: true
              },
              toString: {
                value: function () {
                  return this.name + ': ' + this.message;
                },
                writable: true,
                enumerable: false,
                configurable: true
              }
            });
            return t;
          }
          r.asPromise = _require(4537);
          r.base64 = _require(7419);
          r.EventEmitter = _require(9211);
          r.float = _require(945);
          r.inquire = _require(7199);
          r.utf8 = _require(4997);
          r.pool = _require(6662);
          r.LongBits = _require(1945);
          r.isNode = Boolean(typeof global != 'undefined' && global && global.process && global.process.versions && global.process.versions.node);
          r.global = r.isNode && global || typeof window != 'undefined' && window || typeof self != 'undefined' && self || this;
          r.emptyArray = Object.freeze ? Object.freeze([]) : [];
          r.emptyObject = Object.freeze ? Object.freeze({}) : {};
          r.isInteger = Number.isInteger || function (e) {
            return typeof e == 'number' && isFinite(e) && Math.floor(e) === e;
          };
          r.isString = function (e) {
            return typeof e == 'string' || e instanceof String;
          };
          r.isObject = function (e) {
            return e && typeof e == 'object';
          };
          r.isset = r.isSet = function (e, t) {
            var n = e[t];
            return n != null && !!e.hasOwnProperty(t) && (typeof n != 'object' || (Array.isArray(n) ? n.length : Object.keys(n).length) > 0);
          };
          r.Buffer = function () {
            try {
              var e = require(20181).Buffer;
              if (e.prototype.utf8Write) {
                return e;
              } else {
                return null;
              }
            } catch (e) {
              return null;
            }
          }();
          r._Buffer_from = null;
          r._Buffer_allocUnsafe = null;
          r.newBuffer = function (e) {
            if (typeof e == 'number') {
              if (r.Buffer) {
                return r._Buffer_allocUnsafe(e);
              } else {
                return new r.Array(e);
              }
            } else {
              if (r.Buffer) {
                return r._Buffer_from(e);
              } else {
                if (typeof Uint8Array == 'undefined') {
                  return e;
                } else {
                  return new Uint8Array(e);
                }
              }
            }
          };
          r.Array = typeof Uint8Array != 'undefined' ? Uint8Array : Array;
          r.Long = r.global.dcodeIO && r.global.dcodeIO.Long || r.global.Long || require(52018);
          r.key2Re = /^true|false|0|1$/;
          r.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
          r.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
          r.longToHash = function (e) {
            if (e) {
              return r.LongBits.from(e).toHash();
            } else {
              return r.LongBits.zeroHash;
            }
          };
          r.longFromHash = function (e, t) {
            var n = r.LongBits.fromHash(e);
            if (r.Long) {
              return r.Long.fromBits(n.lo, n.hi, t);
            } else {
              return n.toNumber(Boolean(t));
            }
          };
          r.merge = o;
          r.lcFirst = function (e) {
            return e.charAt(0).toLowerCase() + e.substring(1);
          };
          r.newError = s;
          r.ProtocolError = s('ProtocolError');
          r.oneOfGetter = function (e) {
            var t = {};
            for (var n = 0; n < e.length; ++n) {
              t[e[n]] = 1;
            }
            return function () {
              var e = Object.keys(this);
              for (var n = e.length - 1; n > -1; --n) {
                if (t[e[n]] === 1 && this[e[n]] !== undefined && this[e[n]] !== null) {
                  return e[n];
                }
              }
            };
          };
          r.oneOfSetter = function (e) {
            return function (t) {
              for (var n = 0; n < e.length; ++n) {
                if (e[n] !== t) {
                  delete this[e[n]];
                }
              }
            };
          };
          r.toJSONOptions = {
            longs: String,
            enums: String,
            bytes: String,
            json: true
          };
          r._configure = function () {
            var e = r.Buffer;
            if (e) {
              r._Buffer_from = e.from !== Uint8Array.from && e.from || function (t, n) {
                return new e(t, n);
              };
              r._Buffer_allocUnsafe = e.allocUnsafe || function (t) {
                return new e(t);
              };
            } else {
              r._Buffer_from = r._Buffer_allocUnsafe = null;
            }
          };
        },
        1173: (_module, _exports, _require) => {
          "use strict";

          _module.exports = g;
          var r;
          var o = _require(9693);
          var s = o.LongBits;
          var a = o.base64;
          var A = o.utf8;
          function c(e, t, n) {
            this.fn = e;
            this.len = t;
            this.next = undefined;
            this.val = n;
          }
          function u() {}
          function l(e) {
            this.head = e.head;
            this.tail = e.tail;
            this.len = e.len;
            this.next = e.states;
          }
          function g() {
            this.len = 0;
            this.head = new c(u, 0, 0);
            this.tail = this.head;
            this.states = null;
          }
          function d() {
            if (o.Buffer) {
              return function () {
                return (g.create = function () {
                  return new r();
                })();
              };
            } else {
              return function () {
                return new g();
              };
            }
          }
          function h(e, t, n) {
            t[n] = e & 255;
          }
          function f(e, t) {
            this.len = e;
            this.next = undefined;
            this.val = t;
          }
          function p(e, t, n) {
            while (e.hi) {
              t[n++] = e.lo & 127 | 128;
              e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0;
              e.hi >>>= 7;
            }
            while (e.lo > 127) {
              t[n++] = e.lo & 127 | 128;
              e.lo = e.lo >>> 7;
            }
            t[n++] = e.lo;
          }
          function m(e, t, n) {
            t[n] = e & 255;
            t[n + 1] = e >>> 8 & 255;
            t[n + 2] = e >>> 16 & 255;
            t[n + 3] = e >>> 24;
          }
          g.create = d();
          g.alloc = function (e) {
            return new o.Array(e);
          };
          if (o.Array !== Array) {
            g.alloc = o.pool(g.alloc, o.Array.prototype.subarray);
          }
          g.prototype._push = function (e, t, n) {
            this.tail = this.tail.next = new c(e, t, n);
            this.len += t;
            return this;
          };
          f.prototype = Object.create(c.prototype);
          f.prototype.fn = function (e, t, n) {
            while (e > 127) {
              t[n++] = e & 127 | 128;
              e >>>= 7;
            }
            t[n] = e;
          };
          g.prototype.uint32 = function (e) {
            this.len += (this.tail = this.tail.next = new f((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len;
            return this;
          };
          g.prototype.int32 = function (e) {
            if (e < 0) {
              return this._push(p, 10, s.fromNumber(e));
            } else {
              return this.uint32(e);
            }
          };
          g.prototype.sint32 = function (e) {
            return this.uint32((e << 1 ^ e >> 31) >>> 0);
          };
          g.prototype.uint64 = function (e) {
            var t = s.from(e);
            return this._push(p, t.length(), t);
          };
          g.prototype.int64 = g.prototype.uint64;
          g.prototype.sint64 = function (e) {
            var t = s.from(e).zzEncode();
            return this._push(p, t.length(), t);
          };
          g.prototype.bool = function (e) {
            return this._push(h, 1, e ? 1 : 0);
          };
          g.prototype.fixed32 = function (e) {
            return this._push(m, 4, e >>> 0);
          };
          g.prototype.sfixed32 = g.prototype.fixed32;
          g.prototype.fixed64 = function (e) {
            var t = s.from(e);
            return this._push(m, 4, t.lo)._push(m, 4, t.hi);
          };
          g.prototype.sfixed64 = g.prototype.fixed64;
          g.prototype.float = function (e) {
            return this._push(o.float.writeFloatLE, 4, e);
          };
          g.prototype.double = function (e) {
            return this._push(o.float.writeDoubleLE, 8, e);
          };
          var I = o.Array.prototype.set ? function (e, t, n) {
            t.set(e, n);
          } : function (e, t, n) {
            for (var r = 0; r < e.length; ++r) {
              t[n + r] = e[r];
            }
          };
          g.prototype.bytes = function (e) {
            var t = e.length >>> 0;
            if (!t) {
              return this._push(h, 1, 0);
            }
            if (o.isString(e)) {
              var n = g.alloc(t = a.length(e));
              a.decode(e, n, 0);
              e = n;
            }
            return this.uint32(t)._push(I, t, e);
          };
          g.prototype.string = function (e) {
            var t = A.length(e);
            if (t) {
              return this.uint32(t)._push(A.write, t, e);
            } else {
              return this._push(h, 1, 0);
            }
          };
          g.prototype.fork = function () {
            this.states = new l(this);
            this.head = this.tail = new c(u, 0, 0);
            this.len = 0;
            return this;
          };
          g.prototype.reset = function () {
            if (this.states) {
              this.head = this.states.head;
              this.tail = this.states.tail;
              this.len = this.states.len;
              this.states = this.states.next;
            } else {
              this.head = this.tail = new c(u, 0, 0);
              this.len = 0;
            }
            return this;
          };
          g.prototype.ldelim = function () {
            var e = this.head;
            var t = this.tail;
            var n = this.len;
            this.reset().uint32(n);
            if (n) {
              this.tail.next = e.next;
              this.tail = t;
              this.len += n;
            }
            return this;
          };
          g.prototype.finish = function () {
            for (var e = this.head.next, t = this.constructor.alloc(this.len), n = 0; e;) {
              e.fn(e.val, t, n);
              n += e.len;
              e = e.next;
            }
            return t;
          };
          g._configure = function (e) {
            r = e;
            g.create = d();
            r._configure();
          };
        },
        3155: (_module, _exports, _require) => {
          "use strict";

          _module.exports = s;
          var r = _require(1173);
          (s.prototype = Object.create(r.prototype)).constructor = s;
          var o = _require(9693);
          function s() {
            r.call(this);
          }
          function a(e, t, n) {
            if (e.length < 40) {
              o.utf8.write(e, t, n);
            } else {
              if (t.utf8Write) {
                t.utf8Write(e, n);
              } else {
                t.write(e, n);
              }
            }
          }
          s._configure = function () {
            s.alloc = o._Buffer_allocUnsafe;
            s.writeBytesBuffer = o.Buffer && o.Buffer.prototype instanceof Uint8Array && o.Buffer.prototype.set.name === 'set' ? function (e, t, n) {
              t.set(e, n);
            } : function (e, t, n) {
              if (e.copy) {
                e.copy(t, n, 0, e.length);
              } else {
                for (var r = 0; r < e.length;) {
                  t[n++] = e[r++];
                }
              }
            };
          };
          s.prototype.bytes = function (e) {
            if (o.isString(e)) {
              e = o._Buffer_from(e, 'base64');
            }
            var t = e.length >>> 0;
            this.uint32(t);
            if (t) {
              this._push(s.writeBytesBuffer, t, e);
            }
            return this;
          };
          s.prototype.string = function (e) {
            var t = o.Buffer.byteLength(e);
            this.uint32(t);
            if (t) {
              this._push(a, t, e);
            }
            return this;
          };
          s._configure();
        },
        4154: _module => {
          "use strict";

          _module.exports = '"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\n';
        },
        6231: _module => {
          "use strict";

          _module.exports = require(79896);
        },
        9719: _module => {
          "use strict";

          _module.exports = require(70857);
        },
        1423: _module => {
          "use strict";

          _module.exports = require(16928);
        },
        498: _module => {
          "use strict";

          _module.exports = require(82987);
        },
        6464: _module => {
          "use strict";

          _module.exports = require(39023);
        },
        4564: _module => {
          "use strict";

          _module.exports = require(28167);
        },
        6207: _module => {
          "use strict";

          _module.exports = require(71076);
        },
        6113: _module => {
          "use strict";

          _module.exports = require(76982);
        },
        1583: (_module, _exports) => {
          var n;
          var r = function (e) {
            "use strict";

            Object.defineProperty(e, '__esModule', {
              value: true
            });
            e.default = undefined;
            var t = null;
            try {
              t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
            } catch (e) {}
            function n(e, t, n) {
              this.low = e | 0;
              this.high = t | 0;
              this.unsigned = !!n;
            }
            function r(e) {
              return (e && e.__isLong__) === true;
            }
            function o(e) {
              var t = Math.clz32(e & -e);
              if (e) {
                return 31 - t;
              } else {
                return t;
              }
            }
            n.prototype.__isLong__;
            Object.defineProperty(n.prototype, '__isLong__', {
              value: true
            });
            n.isLong = r;
            var s = {};
            var a = {};
            function A(e, t) {
              var n;
              var r;
              var o;
              if (t) {
                if ((o = (e >>>= 0) >= 0 && e < 256) && (r = a[e])) {
                  return r;
                } else {
                  n = u(e, 0, true);
                  if (o) {
                    a[e] = n;
                  }
                  return n;
                }
              } else {
                if ((o = (e |= 0) >= -128 && e < 128) && (r = s[e])) {
                  return r;
                } else {
                  n = u(e, e < 0 ? -1 : 0, false);
                  if (o) {
                    s[e] = n;
                  }
                  return n;
                }
              }
            }
            function c(e, t) {
              if (isNaN(e)) {
                if (t) {
                  return E;
                } else {
                  return I;
                }
              }
              if (t) {
                if (e < 0) {
                  return E;
                }
                if (e >= f) {
                  return b;
                }
              } else {
                if (e <= -p) {
                  return B;
                }
                if (e + 1 >= p) {
                  return v;
                }
              }
              if (e < 0) {
                return c(-e, t).neg();
              } else {
                return u(e % h | 0, e / h | 0, t);
              }
            }
            function u(e, t, r) {
              return new n(e, t, r);
            }
            n.fromInt = A;
            n.fromNumber = c;
            n.fromBits = u;
            var l = Math.pow;
            function g(e, t, n) {
              if (e.length === 0) {
                throw Error('empty string');
              }
              if (typeof t == 'number') {
                n = t;
                t = false;
              } else {
                t = !!t;
              }
              if (e === 'NaN' || e === 'Infinity' || e === '+Infinity' || e === '-Infinity') {
                if (t) {
                  return E;
                } else {
                  return I;
                }
              }
              if ((n = n || 10) < 2 || n > 36) {
                throw RangeError('radix');
              }
              var r;
              if ((r = e.indexOf('-')) > 0) {
                throw Error('interior hyphen');
              }
              if (r === 0) {
                return g(e.substring(1), t, n).neg();
              }
              var o = c(l(n, 8));
              var s = I;
              for (var a = 0; a < e.length; a += 8) {
                var A = Math.min(8, e.length - a);
                var u = parseInt(e.substring(a, a + A), n);
                if (A < 8) {
                  var d = c(l(n, A));
                  s = s.mul(d).add(c(u));
                } else {
                  s = (s = s.mul(o)).add(c(u));
                }
              }
              s.unsigned = t;
              return s;
            }
            function d(e, t) {
              if (typeof e == 'number') {
                return c(e, t);
              } else {
                if (typeof e == 'string') {
                  return g(e, t);
                } else {
                  return u(e.low, e.high, typeof t == 'boolean' ? t : e.unsigned);
                }
              }
            }
            n.fromString = g;
            n.fromValue = d;
            var h = 4294967296;
            var f = h * h;
            var p = f / 2;
            var m = A(16777216);
            var I = A(0);
            n.ZERO = I;
            var E = A(0, true);
            n.UZERO = E;
            var y = A(1);
            n.ONE = y;
            var w = A(1, true);
            n.UONE = w;
            var _ = A(-1);
            n.NEG_ONE = _;
            var v = u(-1, 2147483647, false);
            n.MAX_VALUE = v;
            var b = u(-1, -1, true);
            n.MAX_UNSIGNED_VALUE = b;
            var B = u(0, -2147483648, false);
            n.MIN_VALUE = B;
            var Q = n.prototype;
            Q.toInt = function () {
              if (this.unsigned) {
                return this.low >>> 0;
              } else {
                return this.low;
              }
            };
            Q.toNumber = function () {
              if (this.unsigned) {
                return (this.high >>> 0) * h + (this.low >>> 0);
              } else {
                return this.high * h + (this.low >>> 0);
              }
            };
            Q.toString = function (e) {
              if ((e = e || 10) < 2 || e > 36) {
                throw RangeError('radix');
              }
              if (this.isZero()) {
                return '0';
              }
              if (this.isNegative()) {
                if (this.eq(B)) {
                  var t = c(e);
                  var n = this.div(t);
                  var r = n.mul(t).sub(this);
                  return n.toString(e) + r.toInt().toString(e);
                }
                return `-${this.neg().toString(e)}`;
              }
              var o = c(l(e, 6), this.unsigned);
              var s = this;
              var a = '';
              while (true) {
                var A = s.div(o);
                var u = (s.sub(A.mul(o)).toInt() >>> 0).toString(e);
                if ((s = A).isZero()) {
                  return u + a;
                }
                while (u.length < 6) {
                  u = `0${u}`;
                }
                a = `${u}${a}`;
              }
            };
            Q.getHighBits = function () {
              return this.high;
            };
            Q.getHighBitsUnsigned = function () {
              return this.high >>> 0;
            };
            Q.getLowBits = function () {
              return this.low;
            };
            Q.getLowBitsUnsigned = function () {
              return this.low >>> 0;
            };
            Q.getNumBitsAbs = function () {
              if (this.isNegative()) {
                if (this.eq(B)) {
                  return 64;
                } else {
                  return this.neg().getNumBitsAbs();
                }
              }
              for (var e = this.high != 0 ? this.high : this.low, t = 31; t > 0 && !(e & 1 << t); t--);
              if (this.high != 0) {
                return t + 33;
              } else {
                return t + 1;
              }
            };
            Q.isZero = function () {
              return this.high === 0 && this.low === 0;
            };
            Q.eqz = Q.isZero;
            Q.isNegative = function () {
              return !this.unsigned && this.high < 0;
            };
            Q.isPositive = function () {
              return this.unsigned || this.high >= 0;
            };
            Q.isOdd = function () {
              return !(~this.low & 1);
            };
            Q.isEven = function () {
              return !(this.low & 1);
            };
            Q.equals = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              return (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;
            };
            Q.eq = Q.equals;
            Q.notEquals = function (e) {
              return !this.eq(e);
            };
            Q.neq = Q.notEquals;
            Q.ne = Q.notEquals;
            Q.lessThan = function (e) {
              return this.comp(e) < 0;
            };
            Q.lt = Q.lessThan;
            Q.lessThanOrEqual = function (e) {
              return this.comp(e) <= 0;
            };
            Q.lte = Q.lessThanOrEqual;
            Q.le = Q.lessThanOrEqual;
            Q.greaterThan = function (e) {
              return this.comp(e) > 0;
            };
            Q.gt = Q.greaterThan;
            Q.greaterThanOrEqual = function (e) {
              return this.comp(e) >= 0;
            };
            Q.gte = Q.greaterThanOrEqual;
            Q.ge = Q.greaterThanOrEqual;
            Q.compare = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              if (this.eq(e)) {
                return 0;
              }
              var t = this.isNegative();
              var n = e.isNegative();
              if (t && !n) {
                return -1;
              } else {
                if (!t && n) {
                  return 1;
                } else {
                  if (this.unsigned) {
                    if (e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0) {
                      return -1;
                    } else {
                      return 1;
                    }
                  } else {
                    if (this.sub(e).isNegative()) {
                      return -1;
                    } else {
                      return 1;
                    }
                  }
                }
              }
            };
            Q.comp = Q.compare;
            Q.negate = function () {
              if (!this.unsigned && this.eq(B)) {
                return B;
              } else {
                return this.not().add(y);
              }
            };
            Q.neg = Q.negate;
            Q.add = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              var t = this.high >>> 16;
              var n = this.high & 65535;
              var o = this.low >>> 16;
              var s = this.low & 65535;
              var a = e.high >>> 16;
              var A = e.high & 65535;
              var c = e.low >>> 16;
              var l = 0;
              var g = 0;
              var h = 0;
              var f = 0;
              h += (f += s + (e.low & 65535)) >>> 16;
              g += (h += o + c) >>> 16;
              l += (g += n + A) >>> 16;
              l += t + a;
              return u((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (g &= 65535), this.unsigned);
            };
            Q.subtract = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              return this.add(e.neg());
            };
            Q.sub = Q.subtract;
            Q.multiply = function (e) {
              if (this.isZero()) {
                return this;
              }
              if (!r(e)) {
                e = d(e);
              }
              if (t) {
                return u(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
              }
              if (e.isZero()) {
                if (this.unsigned) {
                  return E;
                } else {
                  return I;
                }
              }
              if (this.eq(B)) {
                if (e.isOdd()) {
                  return B;
                } else {
                  return I;
                }
              }
              if (e.eq(B)) {
                if (this.isOdd()) {
                  return B;
                } else {
                  return I;
                }
              }
              if (this.isNegative()) {
                if (e.isNegative()) {
                  return this.neg().mul(e.neg());
                } else {
                  return this.neg().mul(e).neg();
                }
              }
              if (e.isNegative()) {
                return this.mul(e.neg()).neg();
              }
              if (this.lt(m) && e.lt(m)) {
                return c(this.toNumber() * e.toNumber(), this.unsigned);
              }
              var n = this.high >>> 16;
              var o = this.high & 65535;
              var s = this.low >>> 16;
              var a = this.low & 65535;
              var A = e.high >>> 16;
              var l = e.high & 65535;
              var g = e.low >>> 16;
              var h = e.low & 65535;
              var f = 0;
              var p = 0;
              var y = 0;
              var w = 0;
              y += (w += a * h) >>> 16;
              p += (y += s * h) >>> 16;
              y &= 65535;
              p += (y += a * g) >>> 16;
              f += (p += o * h) >>> 16;
              p &= 65535;
              f += (p += s * g) >>> 16;
              p &= 65535;
              f += (p += a * l) >>> 16;
              f += n * h + o * g + s * l + a * A;
              return u((y &= 65535) << 16 | (w &= 65535), (f &= 65535) << 16 | (p &= 65535), this.unsigned);
            };
            Q.mul = Q.multiply;
            Q.divide = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              if (e.isZero()) {
                throw Error('division by zero');
              }
              var n;
              var o;
              var s;
              if (t) {
                if (this.unsigned || this.high !== -2147483648 || e.low !== -1 || e.high !== -1) {
                  return u((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
                } else {
                  return this;
                }
              }
              if (this.isZero()) {
                if (this.unsigned) {
                  return E;
                } else {
                  return I;
                }
              }
              if (this.unsigned) {
                if (!e.unsigned) {
                  e = e.toUnsigned();
                }
                if (e.gt(this)) {
                  return E;
                }
                if (e.gt(this.shru(1))) {
                  return w;
                }
                s = E;
              } else {
                if (this.eq(B)) {
                  if (e.eq(y) || e.eq(_)) {
                    return B;
                  } else {
                    if (e.eq(B)) {
                      return y;
                    } else {
                      if ((n = this.shr(1).div(e).shl(1)).eq(I)) {
                        if (e.isNegative()) {
                          return y;
                        } else {
                          return _;
                        }
                      } else {
                        o = this.sub(e.mul(n));
                        return s = n.add(o.div(e));
                      }
                    }
                  }
                }
                if (e.eq(B)) {
                  if (this.unsigned) {
                    return E;
                  } else {
                    return I;
                  }
                }
                if (this.isNegative()) {
                  if (e.isNegative()) {
                    return this.neg().div(e.neg());
                  } else {
                    return this.neg().div(e).neg();
                  }
                }
                if (e.isNegative()) {
                  return this.div(e.neg()).neg();
                }
                s = I;
              }
              for (o = this; o.gte(e);) {
                n = Math.max(1, Math.floor(o.toNumber() / e.toNumber()));
                var a = Math.ceil(Math.log(n) / Math.LN2);
                var A = a <= 48 ? 1 : l(2, a - 48);
                var g = c(n);
                for (var h = g.mul(e); h.isNegative() || h.gt(o);) {
                  h = (g = c(n -= A, this.unsigned)).mul(e);
                }
                if (g.isZero()) {
                  g = y;
                }
                s = s.add(g);
                o = o.sub(h);
              }
              return s;
            };
            Q.div = Q.divide;
            Q.modulo = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              if (t) {
                return u((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
              } else {
                return this.sub(this.div(e).mul(e));
              }
            };
            Q.mod = Q.modulo;
            Q.rem = Q.modulo;
            Q.not = function () {
              return u(~this.low, ~this.high, this.unsigned);
            };
            Q.countLeadingZeros = function () {
              if (this.high) {
                return Math.clz32(this.high);
              } else {
                return Math.clz32(this.low) + 32;
              }
            };
            Q.clz = Q.countLeadingZeros;
            Q.countTrailingZeros = function () {
              if (this.low) {
                return o(this.low);
              } else {
                return o(this.high) + 32;
              }
            };
            Q.ctz = Q.countTrailingZeros;
            Q.and = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              return u(this.low & e.low, this.high & e.high, this.unsigned);
            };
            Q.or = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              return u(this.low | e.low, this.high | e.high, this.unsigned);
            };
            Q.xor = function (e) {
              if (!r(e)) {
                e = d(e);
              }
              return u(this.low ^ e.low, this.high ^ e.high, this.unsigned);
            };
            Q.shiftLeft = function (e) {
              if (r(e)) {
                e = e.toInt();
              }
              if ((e &= 63) == 0) {
                return this;
              } else {
                if (e < 32) {
                  return u(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned);
                } else {
                  return u(0, this.low << e - 32, this.unsigned);
                }
              }
            };
            Q.shl = Q.shiftLeft;
            Q.shiftRight = function (e) {
              if (r(e)) {
                e = e.toInt();
              }
              if ((e &= 63) == 0) {
                return this;
              } else {
                if (e < 32) {
                  return u(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned);
                } else {
                  return u(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);
                }
              }
            };
            Q.shr = Q.shiftRight;
            Q.shiftRightUnsigned = function (e) {
              if (r(e)) {
                e = e.toInt();
              }
              if ((e &= 63) == 0) {
                return this;
              } else {
                if (e < 32) {
                  return u(this.low >>> e | this.high << 32 - e, this.high >>> e, this.unsigned);
                } else {
                  return u(e === 32 ? this.high : this.high >>> e - 32, 0, this.unsigned);
                }
              }
            };
            Q.shru = Q.shiftRightUnsigned;
            Q.shr_u = Q.shiftRightUnsigned;
            Q.rotateLeft = function (e) {
              var t;
              if (r(e)) {
                e = e.toInt();
              }
              if ((e &= 63) == 0) {
                return this;
              } else {
                if (e === 32) {
                  return u(this.high, this.low, this.unsigned);
                } else {
                  if (e < 32) {
                    t = 32 - e;
                    return u(this.low << e | this.high >>> t, this.high << e | this.low >>> t, this.unsigned);
                  } else {
                    t = 32 - (e -= 32);
                    return u(this.high << e | this.low >>> t, this.low << e | this.high >>> t, this.unsigned);
                  }
                }
              }
            };
            Q.rotl = Q.rotateLeft;
            Q.rotateRight = function (e) {
              var t;
              if (r(e)) {
                e = e.toInt();
              }
              if ((e &= 63) == 0) {
                return this;
              } else {
                if (e === 32) {
                  return u(this.high, this.low, this.unsigned);
                } else {
                  if (e < 32) {
                    t = 32 - e;
                    return u(this.high << t | this.low >>> e, this.low << t | this.high >>> e, this.unsigned);
                  } else {
                    t = 32 - (e -= 32);
                    return u(this.low << t | this.high >>> e, this.high << t | this.low >>> e, this.unsigned);
                  }
                }
              }
            };
            Q.rotr = Q.rotateRight;
            Q.toSigned = function () {
              if (this.unsigned) {
                return u(this.low, this.high, false);
              } else {
                return this;
              }
            };
            Q.toUnsigned = function () {
              if (this.unsigned) {
                return this;
              } else {
                return u(this.low, this.high, true);
              }
            };
            Q.toBytes = function (e) {
              if (e) {
                return this.toBytesLE();
              } else {
                return this.toBytesBE();
              }
            };
            Q.toBytesLE = function () {
              var e = this.high;
              var t = this.low;
              return [t & 255, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, e & 255, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];
            };
            Q.toBytesBE = function () {
              var e = this.high;
              var t = this.low;
              return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, e & 255, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, t & 255];
            };
            n.fromBytes = function (e, t, r) {
              if (r) {
                return n.fromBytesLE(e, t);
              } else {
                return n.fromBytesBE(e, t);
              }
            };
            n.fromBytesLE = function (e, t) {
              return new n(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);
            };
            n.fromBytesBE = function (e, t) {
              return new n(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);
            };
            var D = n;
            e.default = D;
            if ('default' in e) {
              return e.default;
            } else {
              return e;
            }
          }({});
          if ((n = function () {
            return r;
          }.apply(_exports, [])) !== undefined) {
            _module.exports = n;
          }
        },
        5686: (_module, _exports, _require) => {
          "use strict";

          _require.r(_exports);
          _require.d(_exports, {
            flatbuffers: () => r
          });
          var r = {};
          r.Offset;
          r.Table;
          r.SIZEOF_SHORT = 2;
          r.SIZEOF_INT = 4;
          r.FILE_IDENTIFIER_LENGTH = 4;
          r.SIZE_PREFIX_LENGTH = 4;
          r.Encoding = {
            UTF8_BYTES: 1,
            UTF16_STRING: 2
          };
          r.int32 = new Int32Array(2);
          r.float32 = new Float32Array(r.int32.buffer);
          r.float64 = new Float64Array(r.int32.buffer);
          r.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;
          r.Long = function (e, t) {
            this.low = e | 0;
            this.high = t | 0;
          };
          r.Long.create = function (e, t) {
            if (e == 0 && t == 0) {
              return r.Long.ZERO;
            } else {
              return new r.Long(e, t);
            }
          };
          r.Long.prototype.toFloat64 = function () {
            return (this.low >>> 0) + this.high * 4294967296;
          };
          r.Long.prototype.equals = function (e) {
            return this.low == e.low && this.high == e.high;
          };
          r.Long.ZERO = new r.Long(0, 0);
          r.Builder = function (e) {
            if (e) {
              t = e;
            } else {
              var t = 1024;
            }
            this.bb = r.ByteBuffer.allocate(t);
            this.space = t;
            this.minalign = 1;
            this.vtable = null;
            this.vtable_in_use = 0;
            this.isNested = false;
            this.object_start = 0;
            this.vtables = [];
            this.vector_num_elems = 0;
            this.force_defaults = false;
          };
          r.Builder.prototype.clear = function () {
            this.bb.clear();
            this.space = this.bb.capacity();
            this.minalign = 1;
            this.vtable = null;
            this.vtable_in_use = 0;
            this.isNested = false;
            this.object_start = 0;
            this.vtables = [];
            this.vector_num_elems = 0;
            this.force_defaults = false;
          };
          r.Builder.prototype.forceDefaults = function (e) {
            this.force_defaults = e;
          };
          r.Builder.prototype.dataBuffer = function () {
            return this.bb;
          };
          r.Builder.prototype.asUint8Array = function () {
            return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());
          };
          r.Builder.prototype.prep = function (e, t) {
            if (e > this.minalign) {
              this.minalign = e;
            }
            for (var n = 1 + ~(this.bb.capacity() - this.space + t) & e - 1; this.space < n + e + t;) {
              var o = this.bb.capacity();
              this.bb = r.Builder.growByteBuffer(this.bb);
              this.space += this.bb.capacity() - o;
            }
            this.pad(n);
          };
          r.Builder.prototype.pad = function (e) {
            for (var t = 0; t < e; t++) {
              this.bb.writeInt8(--this.space, 0);
            }
          };
          r.Builder.prototype.writeInt8 = function (e) {
            this.bb.writeInt8(this.space -= 1, e);
          };
          r.Builder.prototype.writeInt16 = function (e) {
            this.bb.writeInt16(this.space -= 2, e);
          };
          r.Builder.prototype.writeInt32 = function (e) {
            this.bb.writeInt32(this.space -= 4, e);
          };
          r.Builder.prototype.writeInt64 = function (e) {
            this.bb.writeInt64(this.space -= 8, e);
          };
          r.Builder.prototype.writeFloat32 = function (e) {
            this.bb.writeFloat32(this.space -= 4, e);
          };
          r.Builder.prototype.writeFloat64 = function (e) {
            this.bb.writeFloat64(this.space -= 8, e);
          };
          r.Builder.prototype.addInt8 = function (e) {
            this.prep(1, 0);
            this.writeInt8(e);
          };
          r.Builder.prototype.addInt16 = function (e) {
            this.prep(2, 0);
            this.writeInt16(e);
          };
          r.Builder.prototype.addInt32 = function (e) {
            this.prep(4, 0);
            this.writeInt32(e);
          };
          r.Builder.prototype.addInt64 = function (e) {
            this.prep(8, 0);
            this.writeInt64(e);
          };
          r.Builder.prototype.addFloat32 = function (e) {
            this.prep(4, 0);
            this.writeFloat32(e);
          };
          r.Builder.prototype.addFloat64 = function (e) {
            this.prep(8, 0);
            this.writeFloat64(e);
          };
          r.Builder.prototype.addFieldInt8 = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addInt8(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldInt16 = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addInt16(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldInt32 = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addInt32(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldInt64 = function (e, t, n) {
            if (!!this.force_defaults || !t.equals(n)) {
              this.addInt64(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldFloat32 = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addFloat32(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldFloat64 = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addFloat64(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldOffset = function (e, t, n) {
            if (this.force_defaults || t != n) {
              this.addOffset(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.addFieldStruct = function (e, t, n) {
            if (t != n) {
              this.nested(t);
              this.slot(e);
            }
          };
          r.Builder.prototype.nested = function (e) {
            if (e != this.offset()) {
              throw new Error('FlatBuffers: struct must be serialized inline.');
            }
          };
          r.Builder.prototype.notNested = function () {
            if (this.isNested) {
              throw new Error('FlatBuffers: object serialization must not be nested.');
            }
          };
          r.Builder.prototype.slot = function (e) {
            this.vtable[e] = this.offset();
          };
          r.Builder.prototype.offset = function () {
            return this.bb.capacity() - this.space;
          };
          r.Builder.growByteBuffer = function (e) {
            var t = e.capacity();
            if (t & 3221225472) {
              throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');
            }
            var n = t << 1;
            var o = r.ByteBuffer.allocate(n);
            o.setPosition(n - t);
            o.bytes().set(e.bytes(), n - t);
            return o;
          };
          r.Builder.prototype.addOffset = function (e) {
            this.prep(r.SIZEOF_INT, 0);
            this.writeInt32(this.offset() - e + r.SIZEOF_INT);
          };
          r.Builder.prototype.startObject = function (e) {
            this.notNested();
            if (this.vtable == null) {
              this.vtable = [];
            }
            this.vtable_in_use = e;
            for (var t = 0; t < e; t++) {
              this.vtable[t] = 0;
            }
            this.isNested = true;
            this.object_start = this.offset();
          };
          r.Builder.prototype.endObject = function () {
            if (this.vtable == null || !this.isNested) {
              throw new Error('FlatBuffers: endObject called without startObject');
            }
            this.addInt32(0);
            var e = this.offset();
            for (var t = this.vtable_in_use - 1; t >= 0 && this.vtable[t] == 0; t--);
            var n = t + 1;
            for (; t >= 0; t--) {
              this.addInt16(this.vtable[t] != 0 ? e - this.vtable[t] : 0);
            }
            this.addInt16(e - this.object_start);
            var o = (n + 2) * r.SIZEOF_SHORT;
            this.addInt16(o);
            var s = 0;
            var a = this.space;
            e: for (t = 0; t < this.vtables.length; t++) {
              var A = this.bb.capacity() - this.vtables[t];
              if (o == this.bb.readInt16(A)) {
                for (var c = r.SIZEOF_SHORT; c < o; c += r.SIZEOF_SHORT) {
                  if (this.bb.readInt16(a + c) != this.bb.readInt16(A + c)) {
                    continue e;
                  }
                }
                s = this.vtables[t];
                break;
              }
            }
            if (s) {
              this.space = this.bb.capacity() - e;
              this.bb.writeInt32(this.space, s - e);
            } else {
              this.vtables.push(this.offset());
              this.bb.writeInt32(this.bb.capacity() - e, this.offset() - e);
            }
            this.isNested = false;
            return e;
          };
          r.Builder.prototype.finish = function (e, t, n) {
            var o = n ? r.SIZE_PREFIX_LENGTH : 0;
            if (t) {
              var s = t;
              this.prep(this.minalign, r.SIZEOF_INT + r.FILE_IDENTIFIER_LENGTH + o);
              if (s.length != r.FILE_IDENTIFIER_LENGTH) {
                throw new Error(`FlatBuffers: file identifier must be length ${r.FILE_IDENTIFIER_LENGTH}`);
              }
              for (var a = r.FILE_IDENTIFIER_LENGTH - 1; a >= 0; a--) {
                this.writeInt8(s.charCodeAt(a));
              }
            }
            this.prep(this.minalign, r.SIZEOF_INT + o);
            this.addOffset(e);
            if (o) {
              this.addInt32(this.bb.capacity() - this.space);
            }
            this.bb.setPosition(this.space);
          };
          r.Builder.prototype.finishSizePrefixed = function (e, t) {
            this.finish(e, t, true);
          };
          r.Builder.prototype.requiredField = function (e, t) {
            var n = this.bb.capacity() - e;
            var r = n - this.bb.readInt32(n);
            if (this.bb.readInt16(r + t) == 0) {
              throw new Error(`FlatBuffers: field ${t} must be set`);
            }
          };
          r.Builder.prototype.startVector = function (e, t, n) {
            this.notNested();
            this.vector_num_elems = t;
            this.prep(r.SIZEOF_INT, e * t);
            this.prep(n, e * t);
          };
          r.Builder.prototype.endVector = function () {
            this.writeInt32(this.vector_num_elems);
            return this.offset();
          };
          r.Builder.prototype.createString = function (e) {
            if (e instanceof Uint8Array) {
              var t = e;
            } else {
              t = [];
              for (var n = 0; n < e.length;) {
                var r;
                var o = e.charCodeAt(n++);
                if ((r = o < 55296 || o >= 56320 ? o : (o << 10) + e.charCodeAt(n++) + -56613888) < 128) {
                  t.push(r);
                } else {
                  if (r < 2048) {
                    t.push(r >> 6 & 31 | 192);
                  } else {
                    if (r < 65536) {
                      t.push(r >> 12 & 15 | 224);
                    } else {
                      t.push(r >> 18 & 7 | 240, r >> 12 & 63 | 128);
                    }
                    t.push(r >> 6 & 63 | 128);
                  }
                  t.push(r & 63 | 128);
                }
              }
            }
            this.addInt8(0);
            this.startVector(1, t.length, 1);
            this.bb.setPosition(this.space -= t.length);
            n = 0;
            var s = this.space;
            var a = this.bb.bytes();
            for (; n < t.length; n++) {
              a[s++] = t[n];
            }
            return this.endVector();
          };
          r.Builder.prototype.createLong = function (e, t) {
            return r.Long.create(e, t);
          };
          r.ByteBuffer = function (e) {
            this.bytes_ = e;
            this.position_ = 0;
          };
          r.ByteBuffer.allocate = function (e) {
            return new r.ByteBuffer(new Uint8Array(e));
          };
          r.ByteBuffer.prototype.clear = function () {
            this.position_ = 0;
          };
          r.ByteBuffer.prototype.bytes = function () {
            return this.bytes_;
          };
          r.ByteBuffer.prototype.position = function () {
            return this.position_;
          };
          r.ByteBuffer.prototype.setPosition = function (e) {
            this.position_ = e;
          };
          r.ByteBuffer.prototype.capacity = function () {
            return this.bytes_.length;
          };
          r.ByteBuffer.prototype.readInt8 = function (e) {
            return this.readUint8(e) << 24 >> 24;
          };
          r.ByteBuffer.prototype.readUint8 = function (e) {
            return this.bytes_[e];
          };
          r.ByteBuffer.prototype.readInt16 = function (e) {
            return this.readUint16(e) << 16 >> 16;
          };
          r.ByteBuffer.prototype.readUint16 = function (e) {
            return this.bytes_[e] | this.bytes_[e + 1] << 8;
          };
          r.ByteBuffer.prototype.readInt32 = function (e) {
            return this.bytes_[e] | this.bytes_[e + 1] << 8 | this.bytes_[e + 2] << 16 | this.bytes_[e + 3] << 24;
          };
          r.ByteBuffer.prototype.readUint32 = function (e) {
            return this.readInt32(e) >>> 0;
          };
          r.ByteBuffer.prototype.readInt64 = function (e) {
            return new r.Long(this.readInt32(e), this.readInt32(e + 4));
          };
          r.ByteBuffer.prototype.readUint64 = function (e) {
            return new r.Long(this.readUint32(e), this.readUint32(e + 4));
          };
          r.ByteBuffer.prototype.readFloat32 = function (e) {
            r.int32[0] = this.readInt32(e);
            return r.float32[0];
          };
          r.ByteBuffer.prototype.readFloat64 = function (e) {
            r.int32[r.isLittleEndian ? 0 : 1] = this.readInt32(e);
            r.int32[r.isLittleEndian ? 1 : 0] = this.readInt32(e + 4);
            return r.float64[0];
          };
          r.ByteBuffer.prototype.writeInt8 = function (e, t) {
            this.bytes_[e] = t;
          };
          r.ByteBuffer.prototype.writeUint8 = function (e, t) {
            this.bytes_[e] = t;
          };
          r.ByteBuffer.prototype.writeInt16 = function (e, t) {
            this.bytes_[e] = t;
            this.bytes_[e + 1] = t >> 8;
          };
          r.ByteBuffer.prototype.writeUint16 = function (e, t) {
            this.bytes_[e] = t;
            this.bytes_[e + 1] = t >> 8;
          };
          r.ByteBuffer.prototype.writeInt32 = function (e, t) {
            this.bytes_[e] = t;
            this.bytes_[e + 1] = t >> 8;
            this.bytes_[e + 2] = t >> 16;
            this.bytes_[e + 3] = t >> 24;
          };
          r.ByteBuffer.prototype.writeUint32 = function (e, t) {
            this.bytes_[e] = t;
            this.bytes_[e + 1] = t >> 8;
            this.bytes_[e + 2] = t >> 16;
            this.bytes_[e + 3] = t >> 24;
          };
          r.ByteBuffer.prototype.writeInt64 = function (e, t) {
            this.writeInt32(e, t.low);
            this.writeInt32(e + 4, t.high);
          };
          r.ByteBuffer.prototype.writeUint64 = function (e, t) {
            this.writeUint32(e, t.low);
            this.writeUint32(e + 4, t.high);
          };
          r.ByteBuffer.prototype.writeFloat32 = function (e, t) {
            r.float32[0] = t;
            this.writeInt32(e, r.int32[0]);
          };
          r.ByteBuffer.prototype.writeFloat64 = function (e, t) {
            r.float64[0] = t;
            this.writeInt32(e, r.int32[r.isLittleEndian ? 0 : 1]);
            this.writeInt32(e + 4, r.int32[r.isLittleEndian ? 1 : 0]);
          };
          r.ByteBuffer.prototype.getBufferIdentifier = function () {
            if (this.bytes_.length < this.position_ + r.SIZEOF_INT + r.FILE_IDENTIFIER_LENGTH) {
              throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');
            }
            var e = '';
            for (var t = 0; t < r.FILE_IDENTIFIER_LENGTH; t++) {
              e += String.fromCharCode(this.readInt8(this.position_ + r.SIZEOF_INT + t));
            }
            return e;
          };
          r.ByteBuffer.prototype.__offset = function (e, t) {
            var n = e - this.readInt32(e);
            if (t < this.readInt16(n)) {
              return this.readInt16(n + t);
            } else {
              return 0;
            }
          };
          r.ByteBuffer.prototype.__union = function (e, t) {
            e.bb_pos = t + this.readInt32(t);
            e.bb = this;
            return e;
          };
          r.ByteBuffer.prototype.__string = function (e, t) {
            e += this.readInt32(e);
            var n = this.readInt32(e);
            var o = '';
            var s = 0;
            e += r.SIZEOF_INT;
            if (t === r.Encoding.UTF8_BYTES) {
              return this.bytes_.subarray(e, e + n);
            }
            while (s < n) {
              var a;
              var A = this.readUint8(e + s++);
              if (A < 192) {
                a = A;
              } else {
                var c = this.readUint8(e + s++);
                if (A < 224) {
                  a = (A & 31) << 6 | c & 63;
                } else {
                  var u = this.readUint8(e + s++);
                  a = A < 240 ? (A & 15) << 12 | (c & 63) << 6 | u & 63 : (A & 7) << 18 | (c & 63) << 12 | (u & 63) << 6 | this.readUint8(e + s++) & 63;
                }
              }
              if (a < 65536) {
                o += String.fromCharCode(a);
              } else {
                a -= 65536;
                o += String.fromCharCode(55296 + (a >> 10), 56320 + (a & 1023));
              }
            }
            return o;
          };
          r.ByteBuffer.prototype.__indirect = function (e) {
            return e + this.readInt32(e);
          };
          r.ByteBuffer.prototype.__vector = function (e) {
            return e + this.readInt32(e) + r.SIZEOF_INT;
          };
          r.ByteBuffer.prototype.__vector_len = function (e) {
            return this.readInt32(e + this.readInt32(e));
          };
          r.ByteBuffer.prototype.__has_identifier = function (e) {
            if (e.length != r.FILE_IDENTIFIER_LENGTH) {
              throw new Error(`FlatBuffers: file identifier must be length ${r.FILE_IDENTIFIER_LENGTH}`);
            }
            for (var t = 0; t < r.FILE_IDENTIFIER_LENGTH; t++) {
              if (e.charCodeAt(t) != this.readInt8(this.position_ + r.SIZEOF_INT + t)) {
                return false;
              }
            }
            return true;
          };
          r.ByteBuffer.prototype.createLong = function (e, t) {
            return r.Long.create(e, t);
          };
        }
      };
      var __webpack_module_cache__ = {};
      function __nested_webpack_require_554563__(e) {
        var t = __webpack_module_cache__[e];
        if (t !== undefined) {
          return t.exports;
        }
        var n = __webpack_module_cache__[e] = {
          exports: {}
        };
        __webpack_modules__[e].call(n.exports, n, n.exports, __nested_webpack_require_554563__);
        return n.exports;
      }
      __nested_webpack_require_554563__.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        __nested_webpack_require_554563__.d(t, {
          a: t
        });
        return t;
      };
      __nested_webpack_require_554563__.d = (e, t) => {
        for (var n in t) {
          if (__nested_webpack_require_554563__.o(t, n) && !__nested_webpack_require_554563__.o(e, n)) {
            Object.defineProperty(e, n, {
              enumerable: true,
              get: t[n]
            });
          }
        }
      };
      __nested_webpack_require_554563__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
      __nested_webpack_require_554563__.r = e => {
        if (typeof Symbol != 'undefined' && Symbol.toStringTag) {
          Object.defineProperty(e, Symbol.toStringTag, {
            value: 'Module'
          });
        }
        Object.defineProperty(e, '__esModule', {
          value: true
        });
      };
      var __nested_webpack_exports__ = __nested_webpack_require_554563__(1057);
      var __webpack_export_target__ = exports;
      for (var i in __nested_webpack_exports__) {
        __webpack_export_target__[i] = __nested_webpack_exports__[i];
      }
      if (__nested_webpack_exports__.__esModule) {
        Object.defineProperty(__webpack_export_target__, '__esModule', {
          value: true
        });
      }
    })();
  },
  8745: (module, exports, require) => {
    const r = require(79663);
    const o = new Map([['-i', 1], ['--index-url', 1], ['--extra-index-url', 1], ['--no-index', 0], ['-c', 1], ['--constraint', 1], ['-r', 1], ['--requirement', 1], ['-e', 1], ['--editable', 1], ['-f', 1], ['--find-links', 1], ['--no-binary', 1], ['--only-binary', 1], ['--prefer-binary', 0], ['--require-hashes', 0], ['--pre', 0], ['--trusted-host', 1], ['--use-feature', 1]]);
    const s = /(?<name>[a-zA-Z_\-.]+)(?:\s*\[(?<extras>[^\]]*)\])?/;
    const a = /^(?<name>[a-zA-Z_\-.]+)(?:\s*\[(?<extras>[^\]]*)\])?(?:\s*(?<version>(?:==|~=|!=|<=?|>=?)[^;]*))?/;
    function A(e, t = false) {
      if (!e.startsWith('#')) {
        if (e.startsWith('-')) {
          const [n, ...r] = e.split(' ');
          if (!t) {
            const e = o.get(n);
            if (e === undefined) {
              throw new Error(`Unsupported Flag: ${n}`);
            }
            if (e !== r.length) {
              throw new Error(`Invalid Flag Options: ${r.join(', ')}`);
            }
          }
          return {
            type: 'CommandLineFlag',
            flag: n,
            args: r
          };
        }
        {
          const [n, ...r] = e.split(';').map(e => e.trim());
          if (!t && r.length > 1) {
            throw new Error('Too many markers');
          }
          const o = {
            type: 'Requirement',
            markers: r[0] || undefined
          };
          const [A, c] = n.split('@').map(e => e.trim());
          if (c) {
            if (!t && !URL.canParse(c)) {
              throw new Error('Invalid URL');
            }
            const e = s.exec(n);
            if (!e && !t) {
              throw new Error('Invalid requirement');
            }
            return {
              ...o,
              subtype: 'PackageURL',
              package: e?.groups.name,
              extras: e?.groups.extras,
              url: c
            };
          }
          if (URL.canParse(A)) {
            return {
              ...o,
              subtype: 'URL',
              url: A
            };
          }
          if (A.endsWith('.whl') && (A[0] === '.' || A[0] === '/')) {
            return {
              ...o,
              subtype: 'Path',
              path: A
            };
          }
          const u = a.exec(n);
          if (!u && !t) {
            throw new Error('Invalid requirement');
          }
          return {
            ...o,
            subtype: 'Package',
            package: u?.groups.name,
            extras: u?.groups.extras,
            versions: u?.groups.version?.split(',').map(e => e.trim())
          };
        }
      }
    }
    module.exports = {
      parseFile: function (e, t = false) {
        return r(e).map(e => e && A(e, t)).filter(Boolean);
      },
      parseLine: A,
      SUPPORTED_OPTIONS: Array.from(o.keys())
    };
  },
  7872: (module, exports, require) => {
    var r = require(20181);
    var o = r.Buffer;
    function s(e, t) {
      for (var n in e) {
        t[n] = e[n];
      }
    }
    function a(e, t, n) {
      return o(e, t, n);
    }
    if (o.from && o.alloc && o.allocUnsafe && o.allocUnsafeSlow) {
      module.exports = r;
    } else {
      s(r, exports);
      exports.Buffer = a;
    }
    a.prototype = Object.create(o.prototype);
    s(o, a);
    a.from = function (e, t, n) {
      if (typeof e == 'number') {
        throw new TypeError('Argument must not be a number');
      }
      return o(e, t, n);
    };
    a.alloc = function (e, t, n) {
      if (typeof e != 'number') {
        throw new TypeError('Argument must be a number');
      }
      var r = o(e);
      if (t !== undefined) {
        if (typeof n == 'string') {
          r.fill(t, n);
        } else {
          r.fill(t);
        }
      } else {
        r.fill(0);
      }
      return r;
    };
    a.allocUnsafe = function (e) {
      if (typeof e != 'number') {
        throw new TypeError('Argument must be a number');
      }
      return o(e);
    };
    a.allocUnsafeSlow = function (e) {
      if (typeof e != 'number') {
        throw new TypeError('Argument must be a number');
      }
      return r.SlowBuffer(e);
    };
  },
  69216: (module, exports) => {
    var n;
    exports = module.exports = I;
    n = typeof process == 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? function () {
      var e = Array.prototype.slice.call(arguments, 0);
      e.unshift('SEMVER');
      console.log.apply(console, e);
    } : function () {};
    exports.SEMVER_SPEC_VERSION = '2.0.0';
    var r = 256;
    var o = Number.MAX_SAFE_INTEGER || 9007199254740991;
    var s = r - 6;
    var a = exports.re = [];
    var A = exports.safeRe = [];
    var c = exports.src = [];
    var u = exports.tokens = {};
    var l = 0;
    function g(e) {
      u[e] = l++;
    }
    var d = '[a-zA-Z0-9-]';
    var h = [['\\s', 1], ['\\d', r], [d, s]];
    function f(e) {
      for (var t = 0; t < h.length; t++) {
        var n = h[t][0];
        var r = h[t][1];
        e = e.split(n + '*').join(n + '{0,' + r + '}').split(n + '+').join(n + '{1,' + r + '}');
      }
      return e;
    }
    g('NUMERICIDENTIFIER');
    c[u.NUMERICIDENTIFIER] = '0|[1-9]\\d*';
    g('NUMERICIDENTIFIERLOOSE');
    c[u.NUMERICIDENTIFIERLOOSE] = '\\d+';
    g('NONNUMERICIDENTIFIER');
    c[u.NONNUMERICIDENTIFIER] = `\\d*[a-zA-Z-]${d}*`;
    g('MAINVERSION');
    c[u.MAINVERSION] = `(${c[u.NUMERICIDENTIFIER]})\\.(${c[u.NUMERICIDENTIFIER]})\\.(${c[u.NUMERICIDENTIFIER]})`;
    g('MAINVERSIONLOOSE');
    c[u.MAINVERSIONLOOSE] = `(${c[u.NUMERICIDENTIFIERLOOSE]})\\.(${c[u.NUMERICIDENTIFIERLOOSE]})\\.(${c[u.NUMERICIDENTIFIERLOOSE]})`;
    g('PRERELEASEIDENTIFIER');
    c[u.PRERELEASEIDENTIFIER] = `(?:${c[u.NUMERICIDENTIFIER]}|${c[u.NONNUMERICIDENTIFIER]})`;
    g('PRERELEASEIDENTIFIERLOOSE');
    c[u.PRERELEASEIDENTIFIERLOOSE] = `(?:${c[u.NUMERICIDENTIFIERLOOSE]}|${c[u.NONNUMERICIDENTIFIER]})`;
    g('PRERELEASE');
    c[u.PRERELEASE] = `(?:-(${c[u.PRERELEASEIDENTIFIER]}(?:\\.${c[u.PRERELEASEIDENTIFIER]})*))`;
    g('PRERELEASELOOSE');
    c[u.PRERELEASELOOSE] = `(?:-?(${c[u.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${c[u.PRERELEASEIDENTIFIERLOOSE]})*))`;
    g('BUILDIDENTIFIER');
    c[u.BUILDIDENTIFIER] = d + '+';
    g('BUILD');
    c[u.BUILD] = `(?:\\+(${c[u.BUILDIDENTIFIER]}(?:\\.${c[u.BUILDIDENTIFIER]})*))`;
    g('FULL');
    g('FULLPLAIN');
    c[u.FULLPLAIN] = `v?${c[u.MAINVERSION]}${c[u.PRERELEASE]}?${c[u.BUILD]}?`;
    c[u.FULL] = `^${c[u.FULLPLAIN]}\$`;
    g('LOOSEPLAIN');
    c[u.LOOSEPLAIN] = `[v=\\s]*${c[u.MAINVERSIONLOOSE]}${c[u.PRERELEASELOOSE]}?${c[u.BUILD]}?`;
    g('LOOSE');
    c[u.LOOSE] = `^${c[u.LOOSEPLAIN]}\$`;
    g('GTLT');
    c[u.GTLT] = '((?:<|>)?=?)';
    g('XRANGEIDENTIFIERLOOSE');
    c[u.XRANGEIDENTIFIERLOOSE] = c[u.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
    g('XRANGEIDENTIFIER');
    c[u.XRANGEIDENTIFIER] = c[u.NUMERICIDENTIFIER] + '|x|X|\\*';
    g('XRANGEPLAIN');
    c[u.XRANGEPLAIN] = `[v=\\s]*(${c[u.XRANGEIDENTIFIER]})(?:\\.(${c[u.XRANGEIDENTIFIER]})(?:\\.(${c[u.XRANGEIDENTIFIER]})(?:${c[u.PRERELEASE]})?${c[u.BUILD]}?)?)?`;
    g('XRANGEPLAINLOOSE');
    c[u.XRANGEPLAINLOOSE] = `[v=\\s]*(${c[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[u.XRANGEIDENTIFIERLOOSE]})(?:${c[u.PRERELEASELOOSE]})?${c[u.BUILD]}?)?)?`;
    g('XRANGE');
    c[u.XRANGE] = `^${c[u.GTLT]}\\s*${c[u.XRANGEPLAIN]}\$`;
    g('XRANGELOOSE');
    c[u.XRANGELOOSE] = `^${c[u.GTLT]}\\s*${c[u.XRANGEPLAINLOOSE]}\$`;
    g('COERCE');
    c[u.COERCE] = '(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])';
    g('COERCERTL');
    a[u.COERCERTL] = new RegExp(c[u.COERCE], 'g');
    A[u.COERCERTL] = new RegExp(f(c[u.COERCE]), 'g');
    g('LONETILDE');
    c[u.LONETILDE] = '(?:~>?)';
    g('TILDETRIM');
    c[u.TILDETRIM] = `(\\s*)${c[u.LONETILDE]}\\s+`;
    a[u.TILDETRIM] = new RegExp(c[u.TILDETRIM], 'g');
    A[u.TILDETRIM] = new RegExp(f(c[u.TILDETRIM]), 'g');
    g('TILDE');
    c[u.TILDE] = `^${c[u.LONETILDE]}${c[u.XRANGEPLAIN]}\$`;
    g('TILDELOOSE');
    c[u.TILDELOOSE] = `^${c[u.LONETILDE]}${c[u.XRANGEPLAINLOOSE]}\$`;
    g('LONECARET');
    c[u.LONECARET] = '(?:\\^)';
    g('CARETTRIM');
    c[u.CARETTRIM] = `(\\s*)${c[u.LONECARET]}\\s+`;
    a[u.CARETTRIM] = new RegExp(c[u.CARETTRIM], 'g');
    A[u.CARETTRIM] = new RegExp(f(c[u.CARETTRIM]), 'g');
    g('CARET');
    c[u.CARET] = `^${c[u.LONECARET]}${c[u.XRANGEPLAIN]}\$`;
    g('CARETLOOSE');
    c[u.CARETLOOSE] = `^${c[u.LONECARET]}${c[u.XRANGEPLAINLOOSE]}\$`;
    g('COMPARATORLOOSE');
    c[u.COMPARATORLOOSE] = `^${c[u.GTLT]}\\s*(${c[u.LOOSEPLAIN]})\$|^\$`;
    g('COMPARATOR');
    c[u.COMPARATOR] = `^${c[u.GTLT]}\\s*(${c[u.FULLPLAIN]})\$|^\$`;
    g('COMPARATORTRIM');
    c[u.COMPARATORTRIM] = `(\\s*)${c[u.GTLT]}\\s*(${c[u.LOOSEPLAIN]}|${c[u.XRANGEPLAIN]})`;
    a[u.COMPARATORTRIM] = new RegExp(c[u.COMPARATORTRIM], 'g');
    A[u.COMPARATORTRIM] = new RegExp(f(c[u.COMPARATORTRIM]), 'g');
    g('HYPHENRANGE');
    c[u.HYPHENRANGE] = `^\\s*(${c[u.XRANGEPLAIN]})\\s+-\\s+(${c[u.XRANGEPLAIN]})\\s*\$`;
    g('HYPHENRANGELOOSE');
    c[u.HYPHENRANGELOOSE] = `^\\s*(${c[u.XRANGEPLAINLOOSE]})\\s+-\\s+(${c[u.XRANGEPLAINLOOSE]})\\s*\$`;
    g('STAR');
    c[u.STAR] = '(<|>)?=?\\s*\\*';
    for (var p = 0; p < l; p++) {
      n(p, c[p]);
      if (!a[p]) {
        a[p] = new RegExp(c[p]);
        A[p] = new RegExp(f(c[p]));
      }
    }
    function m(e, t) {
      if (!t || typeof t != 'object') {
        t = {
          loose: !!t,
          includePrerelease: false
        };
      }
      if (e instanceof I) {
        return e;
      }
      if (typeof e != 'string') {
        return null;
      }
      if (e.length > r) {
        return null;
      }
      if (!(t.loose ? A[u.LOOSE] : A[u.FULL]).test(e)) {
        return null;
      }
      try {
        return new I(e, t);
      } catch (e) {
        return null;
      }
    }
    function I(e, t) {
      if (!t || typeof t != 'object') {
        t = {
          loose: !!t,
          includePrerelease: false
        };
      }
      if (e instanceof I) {
        if (e.loose === t.loose) {
          return e;
        }
        e = e.version;
      } else {
        if (typeof e != 'string') {
          throw new TypeError(`Invalid Version: ${e}`);
        }
      }
      if (e.length > r) {
        throw new TypeError(`version is longer than ${r} characters`);
      }
      if (!(this instanceof I)) {
        return new I(e, t);
      }
      n('SemVer', e, t);
      this.options = t;
      this.loose = !!t.loose;
      var s = e.trim().match(t.loose ? A[u.LOOSE] : A[u.FULL]);
      if (!s) {
        throw new TypeError(`Invalid Version: ${e}`);
      }
      this.raw = e;
      this.major = +s[1];
      this.minor = +s[2];
      this.patch = +s[3];
      if (this.major > o || this.major < 0) {
        throw new TypeError('Invalid major version');
      }
      if (this.minor > o || this.minor < 0) {
        throw new TypeError('Invalid minor version');
      }
      if (this.patch > o || this.patch < 0) {
        throw new TypeError('Invalid patch version');
      }
      if (s[4]) {
        this.prerelease = s[4].split('.').map(function (e) {
          if (/^[0-9]+$/.test(e)) {
            var t = +e;
            if (t >= 0 && t < o) {
              return t;
            }
          }
          return e;
        });
      } else {
        this.prerelease = [];
      }
      this.build = s[5] ? s[5].split('.') : [];
      this.format();
    }
    exports.parse = m;
    exports.valid = function (e, t) {
      var n = m(e, t);
      if (n) {
        return n.version;
      } else {
        return null;
      }
    };
    exports.clean = function (e, t) {
      var n = m(e.trim().replace(/^[=v]+/, ''), t);
      if (n) {
        return n.version;
      } else {
        return null;
      }
    };
    exports.SemVer = I;
    I.prototype.format = function () {
      this.version = this.major + '.' + this.minor + '.' + this.patch;
      if (this.prerelease.length) {
        this.version += `-${this.prerelease.join('.')}`;
      }
      return this.version;
    };
    I.prototype.toString = function () {
      return this.version;
    };
    I.prototype.compare = function (e) {
      n('SemVer.compare', this.version, this.options, e);
      if (!(e instanceof I)) {
        e = new I(e, this.options);
      }
      return this.compareMain(e) || this.comparePre(e);
    };
    I.prototype.compareMain = function (e) {
      if (!(e instanceof I)) {
        e = new I(e, this.options);
      }
      return y(this.major, e.major) || y(this.minor, e.minor) || y(this.patch, e.patch);
    };
    I.prototype.comparePre = function (e) {
      if (!(e instanceof I)) {
        e = new I(e, this.options);
      }
      if (this.prerelease.length && !e.prerelease.length) {
        return -1;
      }
      if (!this.prerelease.length && e.prerelease.length) {
        return 1;
      }
      if (!this.prerelease.length && !e.prerelease.length) {
        return 0;
      }
      var t = 0;
      do {
        var r = this.prerelease[t];
        var o = e.prerelease[t];
        n('prerelease compare', t, r, o);
        if (r === undefined && o === undefined) {
          return 0;
        }
        if (o === undefined) {
          return 1;
        }
        if (r === undefined) {
          return -1;
        }
        if (r !== o) {
          return y(r, o);
        }
      } while (++t);
    };
    I.prototype.compareBuild = function (e) {
      if (!(e instanceof I)) {
        e = new I(e, this.options);
      }
      var t = 0;
      do {
        var r = this.build[t];
        var o = e.build[t];
        n('prerelease compare', t, r, o);
        if (r === undefined && o === undefined) {
          return 0;
        }
        if (o === undefined) {
          return 1;
        }
        if (r === undefined) {
          return -1;
        }
        if (r !== o) {
          return y(r, o);
        }
      } while (++t);
    };
    I.prototype.inc = function (e, t) {
      switch (e) {
        case 'premajor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor = 0;
          this.major++;
          this.inc('pre', t);
          break;
        case 'preminor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor++;
          this.inc('pre', t);
          break;
        case 'prepatch':
          this.prerelease.length = 0;
          this.inc('patch', t);
          this.inc('pre', t);
          break;
        case 'prerelease':
          if (this.prerelease.length === 0) {
            this.inc('patch', t);
          }
          this.inc('pre', t);
          break;
        case 'major':
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
            this.major++;
          }
          this.minor = 0;
          this.patch = 0;
          this.prerelease = [];
          break;
        case 'minor':
          if (this.patch !== 0 || this.prerelease.length === 0) {
            this.minor++;
          }
          this.patch = 0;
          this.prerelease = [];
          break;
        case 'patch':
          if (this.prerelease.length === 0) {
            this.patch++;
          }
          this.prerelease = [];
          break;
        case 'pre':
          if (this.prerelease.length === 0) {
            this.prerelease = [0];
          } else {
            for (var n = this.prerelease.length; --n >= 0;) {
              if (typeof this.prerelease[n] == 'number') {
                this.prerelease[n]++;
                n = -2;
              }
            }
            if (n === -1) {
              this.prerelease.push(0);
            }
          }
          if (t) {
            if (this.prerelease[0] === t) {
              if (isNaN(this.prerelease[1])) {
                this.prerelease = [t, 0];
              }
            } else {
              this.prerelease = [t, 0];
            }
          }
          break;
        default:
          throw new Error(`invalid increment argument: ${e}`);
      }
      this.format();
      this.raw = this.version;
      return this;
    };
    exports.inc = function (e, t, n, r) {
      if (typeof n == 'string') {
        r = n;
        n = undefined;
      }
      try {
        return new I(e, n).inc(t, r).version;
      } catch (e) {
        return null;
      }
    };
    exports.diff = function (e, t) {
      if (b(e, t)) {
        return null;
      }
      var n = m(e);
      var r = m(t);
      var o = '';
      if (n.prerelease.length || r.prerelease.length) {
        o = 'pre';
        var s = 'prerelease';
      }
      for (var a in n) {
        if ((a === 'major' || a === 'minor' || a === 'patch') && n[a] !== r[a]) {
          return o + a;
        }
      }
      return s;
    };
    exports.compareIdentifiers = y;
    var E = /^[0-9]+$/;
    function y(e, t) {
      var n = E.test(e);
      var r = E.test(t);
      if (n && r) {
        e = +e;
        t = +t;
      }
      if (e === t) {
        return 0;
      } else {
        if (n && !r) {
          return -1;
        } else {
          if (r && !n) {
            return 1;
          } else {
            if (e < t) {
              return -1;
            } else {
              return 1;
            }
          }
        }
      }
    }
    function w(e, t, n) {
      return new I(e, n).compare(new I(t, n));
    }
    function _(e, t, n) {
      return w(e, t, n) > 0;
    }
    function v(e, t, n) {
      return w(e, t, n) < 0;
    }
    function b(e, t, n) {
      return w(e, t, n) === 0;
    }
    function B(e, t, n) {
      return w(e, t, n) !== 0;
    }
    function Q(e, t, n) {
      return w(e, t, n) >= 0;
    }
    function D(e, t, n) {
      return w(e, t, n) <= 0;
    }
    function S(e, t, n, r) {
      switch (t) {
        case '===':
          if (typeof e == 'object') {
            e = e.version;
          }
          if (typeof n == 'object') {
            n = n.version;
          }
          return e === n;
        case '!==':
          if (typeof e == 'object') {
            e = e.version;
          }
          if (typeof n == 'object') {
            n = n.version;
          }
          return e !== n;
        case '':
        case '=':
        case '==':
          return b(e, n, r);
        case '!=':
          return B(e, n, r);
        case '>':
          return _(e, n, r);
        case '>=':
          return Q(e, n, r);
        case '<':
          return v(e, n, r);
        case '<=':
          return D(e, n, r);
        default:
          throw new TypeError(`Invalid operator: ${t}`);
      }
    }
    function T(e, t) {
      if (!t || typeof t != 'object') {
        t = {
          loose: !!t,
          includePrerelease: false
        };
      }
      if (e instanceof T) {
        if (e.loose === !!t.loose) {
          return e;
        }
        e = e.value;
      }
      if (!(this instanceof T)) {
        return new T(e, t);
      }
      e = e.trim().split(/\s+/).join(' ');
      n('comparator', e, t);
      this.options = t;
      this.loose = !!t.loose;
      this.parse(e);
      if (this.semver === R) {
        this.value = '';
      } else {
        this.value = this.operator + this.semver.version;
      }
      n('comp', this);
    }
    exports.rcompareIdentifiers = function (e, t) {
      return y(t, e);
    };
    exports.major = function (e, t) {
      return new I(e, t).major;
    };
    exports.minor = function (e, t) {
      return new I(e, t).minor;
    };
    exports.patch = function (e, t) {
      return new I(e, t).patch;
    };
    exports.compare = w;
    exports.compareLoose = function (e, t) {
      return w(e, t, true);
    };
    exports.compareBuild = function (e, t, n) {
      var r = new I(e, n);
      var o = new I(t, n);
      return r.compare(o) || r.compareBuild(o);
    };
    exports.rcompare = function (e, t, n) {
      return w(t, e, n);
    };
    exports.sort = function (e, n) {
      return e.sort(function (e, r) {
        return exports.compareBuild(e, r, n);
      });
    };
    exports.rsort = function (e, n) {
      return e.sort(function (e, r) {
        return exports.compareBuild(r, e, n);
      });
    };
    exports.gt = _;
    exports.lt = v;
    exports.eq = b;
    exports.neq = B;
    exports.gte = Q;
    exports.lte = D;
    exports.cmp = S;
    exports.Comparator = T;
    var R = {};
    function k(e, t) {
      if (!t || typeof t != 'object') {
        t = {
          loose: !!t,
          includePrerelease: false
        };
      }
      if (e instanceof k) {
        if (e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease) {
          return e;
        } else {
          return new k(e.raw, t);
        }
      }
      if (e instanceof T) {
        return new k(e.value, t);
      }
      if (!(this instanceof k)) {
        return new k(e, t);
      }
      this.options = t;
      this.loose = !!t.loose;
      this.includePrerelease = !!t.includePrerelease;
      this.raw = e.trim().split(/\s+/).join(' ');
      this.set = this.raw.split('||').map(function (e) {
        return this.parseRange(e.trim());
      }, this).filter(function (e) {
        return e.length;
      });
      if (!this.set.length) {
        throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
      }
      this.format();
    }
    function x(e, t) {
      for (var n = true, r = e.slice(), o = r.pop(); n && r.length;) {
        n = r.every(function (e) {
          return o.intersects(e, t);
        });
        o = r.pop();
      }
      return n;
    }
    function P(e) {
      return !e || e.toLowerCase() === 'x' || e === '*';
    }
    function F(e, t, n, r, o, s, a, A, c, u, l, g, d) {
      return ((t = P(n) ? '' : P(r) ? `>=${n}.0.0` : P(o) ? `>=${n}.${r}.0` : `>=${t}`) + ' ' + (A = P(c) ? '' : P(u) ? `<${+c + 1}.0.0` : P(l) ? `<${c}.${+u + 1}.0` : g ? `<=${c}.${u}.${l}-${g}` : `<=${A}`)).trim();
    }
    function M(e, t, r) {
      for (var o = 0; o < e.length; o++) {
        if (!e[o].test(t)) {
          return false;
        }
      }
      if (t.prerelease.length && !r.includePrerelease) {
        for (o = 0; o < e.length; o++) {
          n(e[o].semver);
          if (e[o].semver !== R && e[o].semver.prerelease.length > 0) {
            var s = e[o].semver;
            if (s.major === t.major && s.minor === t.minor && s.patch === t.patch) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    }
    function O(e, t, n) {
      try {
        t = new k(t, n);
      } catch (e) {
        return false;
      }
      return t.test(e);
    }
    function N(e, t, n, r) {
      var o;
      var s;
      var a;
      var A;
      var c;
      e = new I(e, r);
      t = new k(t, r);
      switch (n) {
        case '>':
          o = _;
          s = D;
          a = v;
          A = '>';
          c = '>=';
          break;
        case '<':
          o = v;
          s = Q;
          a = _;
          A = '<';
          c = '<=';
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (O(e, t, r)) {
        return false;
      }
      for (var u = 0; u < t.set.length; ++u) {
        var l = t.set[u];
        var g = null;
        var d = null;
        l.forEach(function (e) {
          if (e.semver === R) {
            e = new T('>=0.0.0');
          }
          g = g || e;
          d = d || e;
          if (o(e.semver, g.semver, r)) {
            g = e;
          } else {
            if (a(e.semver, d.semver, r)) {
              d = e;
            }
          }
        });
        if (g.operator === A || g.operator === c) {
          return false;
        }
        if ((!d.operator || d.operator === A) && s(e, d.semver)) {
          return false;
        }
        if (d.operator === c && a(e, d.semver)) {
          return false;
        }
      }
      return true;
    }
    T.prototype.parse = function (e) {
      var t = this.options.loose ? A[u.COMPARATORLOOSE] : A[u.COMPARATOR];
      var n = e.match(t);
      if (!n) {
        throw new TypeError(`Invalid comparator: ${e}`);
      }
      this.operator = n[1] !== undefined ? n[1] : '';
      if (this.operator === '=') {
        this.operator = '';
      }
      if (n[2]) {
        this.semver = new I(n[2], this.options.loose);
      } else {
        this.semver = R;
      }
    };
    T.prototype.toString = function () {
      return this.value;
    };
    T.prototype.test = function (e) {
      n('Comparator.test', e, this.options.loose);
      if (this.semver === R || e === R) {
        return true;
      }
      if (typeof e == 'string') {
        try {
          e = new I(e, this.options);
        } catch (e) {
          return false;
        }
      }
      return S(e, this.operator, this.semver, this.options);
    };
    T.prototype.intersects = function (e, t) {
      if (!(e instanceof T)) {
        throw new TypeError('a Comparator is required');
      }
      var n;
      if (!t || typeof t != 'object') {
        t = {
          loose: !!t,
          includePrerelease: false
        };
      }
      if (this.operator === '') {
        return this.value === '' || (n = new k(e.value, t), O(this.value, n, t));
      }
      if (e.operator === '') {
        return e.value === '' || (n = new k(this.value, t), O(e.semver, n, t));
      }
      var r = (this.operator === '>=' || this.operator === '>') && (e.operator === '>=' || e.operator === '>');
      var o = (this.operator === '<=' || this.operator === '<') && (e.operator === '<=' || e.operator === '<');
      var s = this.semver.version === e.semver.version;
      var a = (this.operator === '>=' || this.operator === '<=') && (e.operator === '>=' || e.operator === '<=');
      var A = S(this.semver, '<', e.semver, t) && (this.operator === '>=' || this.operator === '>') && (e.operator === '<=' || e.operator === '<');
      var c = S(this.semver, '>', e.semver, t) && (this.operator === '<=' || this.operator === '<') && (e.operator === '>=' || e.operator === '>');
      return r || o || s && a || A || c;
    };
    exports.Range = k;
    k.prototype.format = function () {
      this.range = this.set.map(function (e) {
        return e.join(' ').trim();
      }).join('||').trim();
      return this.range;
    };
    k.prototype.toString = function () {
      return this.range;
    };
    k.prototype.parseRange = function (e) {
      var t = this.options.loose;
      var r = t ? A[u.HYPHENRANGELOOSE] : A[u.HYPHENRANGE];
      e = e.replace(r, F);
      n('hyphen replace', e);
      e = e.replace(A[u.COMPARATORTRIM], '$1$2$3');
      n('comparator trim', e, A[u.COMPARATORTRIM]);
      e = (e = (e = e.replace(A[u.TILDETRIM], '$1~')).replace(A[u.CARETTRIM], '$1^')).split(/\s+/).join(' ');
      var o = t ? A[u.COMPARATORLOOSE] : A[u.COMPARATOR];
      var s = e.split(' ').map(function (e) {
        return function (e, t) {
          n('comp', e, t);
          e = function (e, t) {
            return e.trim().split(/\s+/).map(function (e) {
              return function (e, t) {
                n('caret', e, t);
                var r = t.loose ? A[u.CARETLOOSE] : A[u.CARET];
                return e.replace(r, function (t, r, o, s, a) {
                  var A;
                  n('caret', e, t, r, o, s, a);
                  if (P(r)) {
                    A = '';
                  } else {
                    if (P(o)) {
                      A = `>=${r}.0.0 <${+r + 1}.0.0`;
                    } else {
                      if (P(s)) {
                        A = r === '0' ? `>=${r}.${o}.0 <${r}.${+o + 1}.0` : `>=${r}.${o}.0 <${+r + 1}.0.0`;
                      } else {
                        if (a) {
                          n('replaceCaret pr', a);
                          A = r === '0' ? o === '0' ? `>=${r}.${o}.${s}-${a} <${r}.${o}.${+s + 1}` : `>=${r}.${o}.${s}-${a} <${r}.${+o + 1}.0` : `>=${r}.${o}.${s}-${a} <${+r + 1}.0.0`;
                        } else {
                          n('no pr');
                          A = r === '0' ? o === '0' ? `>=${r}.${o}.${s} <${r}.${o}.${+s + 1}` : `>=${r}.${o}.${s} <${r}.${+o + 1}.0` : `>=${r}.${o}.${s} <${+r + 1}.0.0`;
                        }
                      }
                    }
                  }
                  n('caret return', A);
                  return A;
                });
              }(e, t);
            }).join(' ');
          }(e, t);
          n('caret', e);
          e = function (e, t) {
            return e.trim().split(/\s+/).map(function (e) {
              return function (e, t) {
                var r = t.loose ? A[u.TILDELOOSE] : A[u.TILDE];
                return e.replace(r, function (t, r, o, s, a) {
                  var A;
                  n('tilde', e, t, r, o, s, a);
                  if (P(r)) {
                    A = '';
                  } else {
                    if (P(o)) {
                      A = `>=${r}.0.0 <${+r + 1}.0.0`;
                    } else {
                      if (P(s)) {
                        A = `>=${r}.${o}.0 <${r}.${+o + 1}.0`;
                      } else {
                        if (a) {
                          n('replaceTilde pr', a);
                          A = `>=${r}.${o}.${s}-${a} <${r}.${+o + 1}.0`;
                        } else {
                          A = `>=${r}.${o}.${s} <${r}.${+o + 1}.0`;
                        }
                      }
                    }
                  }
                  n('tilde return', A);
                  return A;
                });
              }(e, t);
            }).join(' ');
          }(e, t);
          n('tildes', e);
          e = function (e, t) {
            n('replaceXRanges', e, t);
            return e.split(/\s+/).map(function (e) {
              return function (e, t) {
                e = e.trim();
                var r = t.loose ? A[u.XRANGELOOSE] : A[u.XRANGE];
                return e.replace(r, function (r, o, s, a, A, c) {
                  n('xRange', e, r, o, s, a, A, c);
                  var u = P(s);
                  var l = u || P(a);
                  var g = l || P(A);
                  var d = g;
                  if (o === '=' && d) {
                    o = '';
                  }
                  c = t.includePrerelease ? '-0' : '';
                  if (u) {
                    r = o === '>' || o === '<' ? '<0.0.0-0' : '*';
                  } else {
                    if (o && d) {
                      if (l) {
                        a = 0;
                      }
                      A = 0;
                      if (o === '>') {
                        o = '>=';
                        if (l) {
                          s = +s + 1;
                          a = 0;
                          A = 0;
                        } else {
                          a = +a + 1;
                          A = 0;
                        }
                      } else {
                        if (o === '<=') {
                          o = '<';
                          if (l) {
                            s = +s + 1;
                          } else {
                            a = +a + 1;
                          }
                        }
                      }
                      r = o + s + '.' + a + '.' + A + c;
                    } else {
                      if (l) {
                        r = `>=${s}.0.0${c} <${+s + 1}.0.0${c}`;
                      } else {
                        if (g) {
                          r = `>=${s}.${a}.0${c} <${s}.${+a + 1}.0${c}`;
                        }
                      }
                    }
                  }
                  n('xRange return', r);
                  return r;
                });
              }(e, t);
            }).join(' ');
          }(e, t);
          n('xrange', e);
          e = function (e, t) {
            n('replaceStars', e, t);
            return e.trim().replace(A[u.STAR], '');
          }(e, t);
          n('stars', e);
          return e;
        }(e, this.options);
      }, this).join(' ').split(/\s+/);
      if (this.options.loose) {
        s = s.filter(function (e) {
          return !!e.match(o);
        });
      }
      return s = s.map(function (e) {
        return new T(e, this.options);
      }, this);
    };
    k.prototype.intersects = function (e, t) {
      if (!(e instanceof k)) {
        throw new TypeError('a Range is required');
      }
      return this.set.some(function (n) {
        return x(n, t) && e.set.some(function (e) {
          return x(e, t) && n.every(function (n) {
            return e.every(function (e) {
              return n.intersects(e, t);
            });
          });
        });
      });
    };
    exports.toComparators = function (e, t) {
      return new k(e, t).set.map(function (e) {
        return e.map(function (e) {
          return e.value;
        }).join(' ').trim().split(' ');
      });
    };
    k.prototype.test = function (e) {
      if (!e) {
        return false;
      }
      if (typeof e == 'string') {
        try {
          e = new I(e, this.options);
        } catch (e) {
          return false;
        }
      }
      for (var t = 0; t < this.set.length; t++) {
        if (M(this.set[t], e, this.options)) {
          return true;
        }
      }
      return false;
    };
    exports.satisfies = O;
    exports.maxSatisfying = function (e, t, n) {
      var r = null;
      var o = null;
      try {
        var s = new k(t, n);
      } catch (e) {
        return null;
      }
      e.forEach(function (e) {
        if (s.test(e)) {
          if (!r || o.compare(e) === -1) {
            o = new I(r = e, n);
          }
        }
      });
      return r;
    };
    exports.minSatisfying = function (e, t, n) {
      var r = null;
      var o = null;
      try {
        var s = new k(t, n);
      } catch (e) {
        return null;
      }
      e.forEach(function (e) {
        if (s.test(e)) {
          if (!r || o.compare(e) === 1) {
            o = new I(r = e, n);
          }
        }
      });
      return r;
    };
    exports.minVersion = function (e, t) {
      e = new k(e, t);
      var n = new I('0.0.0');
      if (e.test(n)) {
        return n;
      }
      n = new I('0.0.0-0');
      if (e.test(n)) {
        return n;
      }
      n = null;
      for (var r = 0; r < e.set.length; ++r) {
        e.set[r].forEach(function (e) {
          var t = new I(e.semver.version);
          switch (e.operator) {
            case '>':
              if (t.prerelease.length === 0) {
                t.patch++;
              } else {
                t.prerelease.push(0);
              }
              t.raw = t.format();
            case '':
            case '>=':
              if (!n || !!_(n, t)) {
                n = t;
              }
              break;
            case '<':
            case '<=':
              break;
            default:
              throw new Error(`Unexpected operation: ${e.operator}`);
          }
        });
      }
      if (n && e.test(n)) {
        return n;
      }
      return null;
    };
    exports.validRange = function (e, t) {
      try {
        return new k(e, t).range || '*';
      } catch (e) {
        return null;
      }
    };
    exports.ltr = function (e, t, n) {
      return N(e, t, '<', n);
    };
    exports.gtr = function (e, t, n) {
      return N(e, t, '>', n);
    };
    exports.outside = N;
    exports.prerelease = function (e, t) {
      var n = m(e, t);
      if (n && n.prerelease.length) {
        return n.prerelease;
      } else {
        return null;
      }
    };
    exports.intersects = function (e, t, n) {
      e = new k(e, n);
      t = new k(t, n);
      return e.intersects(t);
    };
    exports.coerce = function (e, t) {
      if (e instanceof I) {
        return e;
      }
      if (typeof e == 'number') {
        e = String(e);
      }
      if (typeof e != 'string') {
        return null;
      }
      var n = null;
      if ((t = t || {}).rtl) {
        for (var r; (r = A[u.COERCERTL].exec(e)) && (!n || n.index + n[0].length !== e.length);) {
          if (!n || r.index + r[0].length !== n.index + n[0].length) {
            n = r;
          }
          A[u.COERCERTL].lastIndex = r.index + r[1].length + r[2].length;
        }
        A[u.COERCERTL].lastIndex = -1;
      } else {
        n = e.match(A[u.COERCE]);
      }
      if (n === null) {
        return null;
      }
      return m(n[2] + '.' + (n[3] || '0') + '.' + (n[4] || '0'), t);
    };
  },
  31857: (module, exports, require) => {
    var r = require(7872).Buffer;
    function o(e, t) {
      this._block = r.alloc(e);
      this._finalSize = t;
      this._blockSize = e;
      this._len = 0;
    }
    o.prototype.update = function (e, t) {
      if (typeof e == 'string') {
        t = t || 'utf8';
        e = r.from(e, t);
      }
      var n = this._block;
      var o = this._blockSize;
      for (var s = e.length, a = this._len, A = 0; A < s;) {
        var c = a % o;
        for (var u = Math.min(s - A, o - c), l = 0; l < u; l++) {
          n[c + l] = e[A + l];
        }
        A += u;
        if ((a += u) % o == 0) {
          this._update(n);
        }
      }
      this._len += s;
      return this;
    };
    o.prototype.digest = function (e) {
      var t = this._len % this._blockSize;
      this._block[t] = 128;
      this._block.fill(0, t + 1);
      if (t >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
      }
      var n = this._len * 8;
      if (n <= 4294967295) {
        this._block.writeUInt32BE(n, this._blockSize - 4);
      } else {
        var r = (n & 4294967295) >>> 0;
        var o = (n - r) / 4294967296;
        this._block.writeUInt32BE(o, this._blockSize - 8);
        this._block.writeUInt32BE(r, this._blockSize - 4);
      }
      this._update(this._block);
      var s = this._hash();
      if (e) {
        return s.toString(e);
      } else {
        return s;
      }
    };
    o.prototype._update = function () {
      throw new Error('_update must be implemented by subclass');
    };
    module.exports = o;
  },
  23729: (module, exports, require) => {
    var r = module.exports = function (e) {
      e = e.toLowerCase();
      var t = r[e];
      if (!t) {
        throw new Error(e + ' is not supported (we accept pull requests)');
      }
      return new t();
    };
    r.sha = require(78679);
    r.sha1 = require(87755);
    r.sha224 = require(48351);
    r.sha256 = require(47902);
    r.sha384 = require(31742);
    r.sha512 = require(74015);
  },
  78679: (module, exports, require) => {
    var r = require(40640);
    var o = require(31857);
    var s = require(7872).Buffer;
    var a = [1518500249, 1859775393, -1894007588, -899497514];
    var A = new Array(80);
    function c() {
      this.init();
      this._w = A;
      o.call(this, 64, 56);
    }
    function u(e) {
      return e << 30 | e >>> 2;
    }
    function l(e, t, n, r) {
      if (e === 0) {
        return t & n | ~t & r;
      } else {
        if (e === 2) {
          return t & n | t & r | n & r;
        } else {
          return t ^ n ^ r;
        }
      }
    }
    r(c, o);
    c.prototype.init = function () {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    c.prototype._update = function (e) {
      var t;
      var n = this._w;
      var r = this._a | 0;
      var o = this._b | 0;
      var s = this._c | 0;
      var A = this._d | 0;
      var c = this._e | 0;
      for (var g = 0; g < 16; ++g) {
        n[g] = e.readInt32BE(g * 4);
      }
      for (; g < 80; ++g) {
        n[g] = n[g - 3] ^ n[g - 8] ^ n[g - 14] ^ n[g - 16];
      }
      for (var d = 0; d < 80; ++d) {
        var h = ~~(d / 20);
        var f = ((t = r) << 5 | t >>> 27) + l(h, o, s, A) + c + n[d] + a[h] | 0;
        c = A;
        A = s;
        s = u(o);
        o = r;
        r = f;
      }
      this._a = r + this._a | 0;
      this._b = o + this._b | 0;
      this._c = s + this._c | 0;
      this._d = A + this._d | 0;
      this._e = c + this._e | 0;
    };
    c.prototype._hash = function () {
      var e = s.allocUnsafe(20);
      e.writeInt32BE(this._a | 0, 0);
      e.writeInt32BE(this._b | 0, 4);
      e.writeInt32BE(this._c | 0, 8);
      e.writeInt32BE(this._d | 0, 12);
      e.writeInt32BE(this._e | 0, 16);
      return e;
    };
    module.exports = c;
  },
  87755: (module, exports, require) => {
    var r = require(40640);
    var o = require(31857);
    var s = require(7872).Buffer;
    var a = [1518500249, 1859775393, -1894007588, -899497514];
    var A = new Array(80);
    function c() {
      this.init();
      this._w = A;
      o.call(this, 64, 56);
    }
    function u(e) {
      return e << 5 | e >>> 27;
    }
    function l(e) {
      return e << 30 | e >>> 2;
    }
    function g(e, t, n, r) {
      if (e === 0) {
        return t & n | ~t & r;
      } else {
        if (e === 2) {
          return t & n | t & r | n & r;
        } else {
          return t ^ n ^ r;
        }
      }
    }
    r(c, o);
    c.prototype.init = function () {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    c.prototype._update = function (e) {
      var t;
      var n = this._w;
      var r = this._a | 0;
      var o = this._b | 0;
      var s = this._c | 0;
      var A = this._d | 0;
      var c = this._e | 0;
      for (var d = 0; d < 16; ++d) {
        n[d] = e.readInt32BE(d * 4);
      }
      for (; d < 80; ++d) {
        n[d] = (t = n[d - 3] ^ n[d - 8] ^ n[d - 14] ^ n[d - 16]) << 1 | t >>> 31;
      }
      for (var h = 0; h < 80; ++h) {
        var f = ~~(h / 20);
        var p = u(r) + g(f, o, s, A) + c + n[h] + a[f] | 0;
        c = A;
        A = s;
        s = l(o);
        o = r;
        r = p;
      }
      this._a = r + this._a | 0;
      this._b = o + this._b | 0;
      this._c = s + this._c | 0;
      this._d = A + this._d | 0;
      this._e = c + this._e | 0;
    };
    c.prototype._hash = function () {
      var e = s.allocUnsafe(20);
      e.writeInt32BE(this._a | 0, 0);
      e.writeInt32BE(this._b | 0, 4);
      e.writeInt32BE(this._c | 0, 8);
      e.writeInt32BE(this._d | 0, 12);
      e.writeInt32BE(this._e | 0, 16);
      return e;
    };
    module.exports = c;
  },
  48351: (module, exports, require) => {
    var r = require(40640);
    var o = require(47902);
    var s = require(31857);
    var a = require(7872).Buffer;
    var A = new Array(64);
    function c() {
      this.init();
      this._w = A;
      s.call(this, 64, 56);
    }
    r(c, o);
    c.prototype.init = function () {
      this._a = 3238371032;
      this._b = 914150663;
      this._c = 812702999;
      this._d = 4144912697;
      this._e = 4290775857;
      this._f = 1750603025;
      this._g = 1694076839;
      this._h = 3204075428;
      return this;
    };
    c.prototype._hash = function () {
      var e = a.allocUnsafe(28);
      e.writeInt32BE(this._a, 0);
      e.writeInt32BE(this._b, 4);
      e.writeInt32BE(this._c, 8);
      e.writeInt32BE(this._d, 12);
      e.writeInt32BE(this._e, 16);
      e.writeInt32BE(this._f, 20);
      e.writeInt32BE(this._g, 24);
      return e;
    };
    module.exports = c;
  },
  47902: (module, exports, require) => {
    var r = require(40640);
    var o = require(31857);
    var s = require(7872).Buffer;
    var a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
    var A = new Array(64);
    function c() {
      this.init();
      this._w = A;
      o.call(this, 64, 56);
    }
    function u(e, t, n) {
      return n ^ e & (t ^ n);
    }
    function l(e, t, n) {
      return e & t | n & (e | t);
    }
    function g(e) {
      return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10);
    }
    function d(e) {
      return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
    }
    function h(e) {
      return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3;
    }
    r(c, o);
    c.prototype.init = function () {
      this._a = 1779033703;
      this._b = 3144134277;
      this._c = 1013904242;
      this._d = 2773480762;
      this._e = 1359893119;
      this._f = 2600822924;
      this._g = 528734635;
      this._h = 1541459225;
      return this;
    };
    c.prototype._update = function (e) {
      var t;
      var n = this._w;
      var r = this._a | 0;
      var o = this._b | 0;
      var s = this._c | 0;
      var A = this._d | 0;
      var c = this._e | 0;
      var f = this._f | 0;
      var p = this._g | 0;
      var m = this._h | 0;
      for (var I = 0; I < 16; ++I) {
        n[I] = e.readInt32BE(I * 4);
      }
      for (; I < 64; ++I) {
        n[I] = (((t = n[I - 2]) >>> 17 | t << 15) ^ (t >>> 19 | t << 13) ^ t >>> 10) + n[I - 7] + h(n[I - 15]) + n[I - 16] | 0;
      }
      for (var E = 0; E < 64; ++E) {
        var y = m + d(c) + u(c, f, p) + a[E] + n[E] | 0;
        var w = g(r) + l(r, o, s) | 0;
        m = p;
        p = f;
        f = c;
        c = A + y | 0;
        A = s;
        s = o;
        o = r;
        r = y + w | 0;
      }
      this._a = r + this._a | 0;
      this._b = o + this._b | 0;
      this._c = s + this._c | 0;
      this._d = A + this._d | 0;
      this._e = c + this._e | 0;
      this._f = f + this._f | 0;
      this._g = p + this._g | 0;
      this._h = m + this._h | 0;
    };
    c.prototype._hash = function () {
      var e = s.allocUnsafe(32);
      e.writeInt32BE(this._a, 0);
      e.writeInt32BE(this._b, 4);
      e.writeInt32BE(this._c, 8);
      e.writeInt32BE(this._d, 12);
      e.writeInt32BE(this._e, 16);
      e.writeInt32BE(this._f, 20);
      e.writeInt32BE(this._g, 24);
      e.writeInt32BE(this._h, 28);
      return e;
    };
    module.exports = c;
  },
  31742: (module, exports, require) => {
    var r = require(40640);
    var o = require(74015);
    var s = require(31857);
    var a = require(7872).Buffer;
    var A = new Array(160);
    function c() {
      this.init();
      this._w = A;
      s.call(this, 128, 112);
    }
    r(c, o);
    c.prototype.init = function () {
      this._ah = 3418070365;
      this._bh = 1654270250;
      this._ch = 2438529370;
      this._dh = 355462360;
      this._eh = 1731405415;
      this._fh = 2394180231;
      this._gh = 3675008525;
      this._hh = 1203062813;
      this._al = 3238371032;
      this._bl = 914150663;
      this._cl = 812702999;
      this._dl = 4144912697;
      this._el = 4290775857;
      this._fl = 1750603025;
      this._gl = 1694076839;
      this._hl = 3204075428;
      return this;
    };
    c.prototype._hash = function () {
      var e = a.allocUnsafe(48);
      function t(t, n, r) {
        e.writeInt32BE(t, r);
        e.writeInt32BE(n, r + 4);
      }
      t(this._ah, this._al, 0);
      t(this._bh, this._bl, 8);
      t(this._ch, this._cl, 16);
      t(this._dh, this._dl, 24);
      t(this._eh, this._el, 32);
      t(this._fh, this._fl, 40);
      return e;
    };
    module.exports = c;
  },
  74015: (module, exports, require) => {
    var r = require(40640);
    var o = require(31857);
    var s = require(7872).Buffer;
    var a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
    var A = new Array(160);
    function c() {
      this.init();
      this._w = A;
      o.call(this, 128, 112);
    }
    function u(e, t, n) {
      return n ^ e & (t ^ n);
    }
    function l(e, t, n) {
      return e & t | n & (e | t);
    }
    function g(e, t) {
      return (e >>> 28 | t << 4) ^ (t >>> 2 | e << 30) ^ (t >>> 7 | e << 25);
    }
    function d(e, t) {
      return (e >>> 14 | t << 18) ^ (e >>> 18 | t << 14) ^ (t >>> 9 | e << 23);
    }
    function h(e, t) {
      return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ e >>> 7;
    }
    function f(e, t) {
      return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ (e >>> 7 | t << 25);
    }
    function p(e, t) {
      return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ e >>> 6;
    }
    function m(e, t) {
      return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ (e >>> 6 | t << 26);
    }
    function I(e, t) {
      if (e >>> 0 < t >>> 0) {
        return 1;
      } else {
        return 0;
      }
    }
    r(c, o);
    c.prototype.init = function () {
      this._ah = 1779033703;
      this._bh = 3144134277;
      this._ch = 1013904242;
      this._dh = 2773480762;
      this._eh = 1359893119;
      this._fh = 2600822924;
      this._gh = 528734635;
      this._hh = 1541459225;
      this._al = 4089235720;
      this._bl = 2227873595;
      this._cl = 4271175723;
      this._dl = 1595750129;
      this._el = 2917565137;
      this._fl = 725511199;
      this._gl = 4215389547;
      this._hl = 327033209;
      return this;
    };
    c.prototype._update = function (e) {
      var t = this._w;
      var n = this._ah | 0;
      var r = this._bh | 0;
      var o = this._ch | 0;
      var s = this._dh | 0;
      var A = this._eh | 0;
      var c = this._fh | 0;
      var E = this._gh | 0;
      var y = this._hh | 0;
      var w = this._al | 0;
      var _ = this._bl | 0;
      var v = this._cl | 0;
      var b = this._dl | 0;
      var B = this._el | 0;
      var Q = this._fl | 0;
      var D = this._gl | 0;
      var S = this._hl | 0;
      for (var T = 0; T < 32; T += 2) {
        t[T] = e.readInt32BE(T * 4);
        t[T + 1] = e.readInt32BE(T * 4 + 4);
      }
      for (; T < 160; T += 2) {
        var R = t[T - 30];
        var k = t[T - 30 + 1];
        var x = h(R, k);
        var P = f(k, R);
        var F = p(R = t[T - 4], k = t[T - 4 + 1]);
        var M = m(k, R);
        var O = t[T - 14];
        var N = t[T - 14 + 1];
        var L = t[T - 32];
        var K = t[T - 32 + 1];
        var U = P + N | 0;
        var j = x + O + I(U, P) | 0;
        j = (j = j + F + I(U = U + M | 0, M) | 0) + L + I(U = U + K | 0, K) | 0;
        t[T] = j;
        t[T + 1] = U;
      }
      for (var q = 0; q < 160; q += 2) {
        j = t[q];
        U = t[q + 1];
        var G = l(n, r, o);
        var Y = l(w, _, v);
        var H = g(n, w);
        var J = g(w, n);
        var z = d(A, B);
        var $ = d(B, A);
        var W = a[q];
        var V = a[q + 1];
        var X = u(A, c, E);
        var Z = u(B, Q, D);
        var ee = S + $ | 0;
        var te = y + z + I(ee, S) | 0;
        te = (te = (te = te + X + I(ee = ee + Z | 0, Z) | 0) + W + I(ee = ee + V | 0, V) | 0) + j + I(ee = ee + U | 0, U) | 0;
        var ne = J + Y | 0;
        var re = H + G + I(ne, J) | 0;
        y = E;
        S = D;
        E = c;
        D = Q;
        c = A;
        Q = B;
        A = s + te + I(B = b + ee | 0, b) | 0;
        s = o;
        b = v;
        o = r;
        v = _;
        r = n;
        _ = w;
        n = te + re + I(w = ee + ne | 0, ee) | 0;
      }
      this._al = this._al + w | 0;
      this._bl = this._bl + _ | 0;
      this._cl = this._cl + v | 0;
      this._dl = this._dl + b | 0;
      this._el = this._el + B | 0;
      this._fl = this._fl + Q | 0;
      this._gl = this._gl + D | 0;
      this._hl = this._hl + S | 0;
      this._ah = this._ah + n + I(this._al, w) | 0;
      this._bh = this._bh + r + I(this._bl, _) | 0;
      this._ch = this._ch + o + I(this._cl, v) | 0;
      this._dh = this._dh + s + I(this._dl, b) | 0;
      this._eh = this._eh + A + I(this._el, B) | 0;
      this._fh = this._fh + c + I(this._fl, Q) | 0;
      this._gh = this._gh + E + I(this._gl, D) | 0;
      this._hh = this._hh + y + I(this._hl, S) | 0;
    };
    c.prototype._hash = function () {
      var e = s.allocUnsafe(64);
      function t(t, n, r) {
        e.writeInt32BE(t, r);
        e.writeInt32BE(n, r + 4);
      }
      t(this._ah, this._al, 0);
      t(this._bh, this._bl, 8);
      t(this._ch, this._cl, 16);
      t(this._dh, this._dl, 24);
      t(this._eh, this._el, 32);
      t(this._fh, this._fl, 40);
      t(this._gh, this._gl, 48);
      t(this._hh, this._hl, 56);
      return e;
    };
    module.exports = c;
  },
  79663: module => {
    module.exports = function (e, t = '\\', n = /\r?\n/) {
      return String(e).split(n).reduce(({
        lines: e,
        current: n
      }, r) => {
        const o = r.trim();
        if (o.endsWith(t)) {
          return {
            lines: e,
            current: n + o.slice(0, -1).trim() + ' '
          };
        } else {
          return {
            lines: [...e, n + o],
            current: ''
          };
        }
      }, {
        lines: [],
        current: ''
      }).lines;
    };
  },
  42073: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      NIL: () => B,
      parse: () => E,
      stringify: () => d,
      v1: () => I,
      v3: () => w,
      v4: () => v,
      v5: () => b,
      validate: () => u,
      version: () => Q
    });
    var r = require(76982);
    var o = require.n(r);
    const s = new Uint8Array(256);
    let a = s.length;
    function A() {
      if (a > s.length - 16) {
        o().randomFillSync(s);
        a = 0;
      }
      return s.slice(a, a += 16);
    }
    const c = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    const u = function (e) {
      return typeof e == 'string' && c.test(e);
    };
    const l = [];
    for (let e = 0; e < 256; ++e) {
      l.push((e + 256).toString(16).slice(1));
    }
    function g(e, t = 0) {
      return l[e[t + 0]] + l[e[t + 1]] + l[e[t + 2]] + l[e[t + 3]] + '-' + l[e[t + 4]] + l[e[t + 5]] + '-' + l[e[t + 6]] + l[e[t + 7]] + '-' + l[e[t + 8]] + l[e[t + 9]] + '-' + l[e[t + 10]] + l[e[t + 11]] + l[e[t + 12]] + l[e[t + 13]] + l[e[t + 14]] + l[e[t + 15]];
    }
    const d = function (e, t = 0) {
      const n = g(e, t);
      if (!u(n)) {
        throw TypeError('Stringified UUID is invalid');
      }
      return n;
    };
    let h;
    let f;
    let p = 0;
    let m = 0;
    const I = function (e, t, n) {
      let r = t && n || 0;
      const o = t || new Array(16);
      let s = (e = e || {}).node || h;
      let a = e.clockseq !== undefined ? e.clockseq : f;
      if (s == null || a == null) {
        const t = e.random || (e.rng || A)();
        if (s == null) {
          s = h = [t[0] | 1, t[1], t[2], t[3], t[4], t[5]];
        }
        if (a == null) {
          a = f = (t[6] << 8 | t[7]) & 16383;
        }
      }
      let c = e.msecs !== undefined ? e.msecs : Date.now();
      let u = e.nsecs !== undefined ? e.nsecs : m + 1;
      const l = c - p + (u - m) / 10000;
      if (l < 0 && e.clockseq === undefined) {
        a = a + 1 & 16383;
      }
      if ((l < 0 || c > p) && e.nsecs === undefined) {
        u = 0;
      }
      if (u >= 10000) {
        throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
      }
      p = c;
      m = u;
      f = a;
      c += 12219292800000;
      const d = ((c & 268435455) * 10000 + u) % 4294967296;
      o[r++] = d >>> 24 & 255;
      o[r++] = d >>> 16 & 255;
      o[r++] = d >>> 8 & 255;
      o[r++] = d & 255;
      const I = c / 4294967296 * 10000 & 268435455;
      o[r++] = I >>> 8 & 255;
      o[r++] = I & 255;
      o[r++] = I >>> 24 & 15 | 16;
      o[r++] = I >>> 16 & 255;
      o[r++] = a >>> 8 | 128;
      o[r++] = a & 255;
      for (let e = 0; e < 6; ++e) {
        o[r + e] = s[e];
      }
      return t || g(o);
    };
    const E = function (e) {
      if (!u(e)) {
        throw TypeError('Invalid UUID');
      }
      let t;
      const n = new Uint8Array(16);
      n[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24;
      n[1] = t >>> 16 & 255;
      n[2] = t >>> 8 & 255;
      n[3] = t & 255;
      n[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8;
      n[5] = t & 255;
      n[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8;
      n[7] = t & 255;
      n[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8;
      n[9] = t & 255;
      n[10] = (t = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255;
      n[11] = t / 4294967296 & 255;
      n[12] = t >>> 24 & 255;
      n[13] = t >>> 16 & 255;
      n[14] = t >>> 8 & 255;
      n[15] = t & 255;
      return n;
    };
    function y(e, t, n) {
      function r(e, r, o, s) {
        var a;
        if (typeof e == 'string') {
          e = function (e) {
            e = unescape(encodeURIComponent(e));
            const t = [];
            for (let n = 0; n < e.length; ++n) {
              t.push(e.charCodeAt(n));
            }
            return t;
          }(e);
        }
        if (typeof r == 'string') {
          r = E(r);
        }
        if (((a = r) === null || a === undefined ? undefined : a.length) !== 16) {
          throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
        }
        let A = new Uint8Array(16 + e.length);
        A.set(r);
        A.set(e, r.length);
        A = n(A);
        A[6] = A[6] & 15 | t;
        A[8] = A[8] & 63 | 128;
        if (o) {
          s = s || 0;
          for (let e = 0; e < 16; ++e) {
            o[s + e] = A[e];
          }
          return o;
        }
        return g(A);
      }
      try {
        r.name = e;
      } catch (e) {}
      r.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
      r.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
      return r;
    }
    const w = y('v3', 48, function (e) {
      if (Array.isArray(e)) {
        e = Buffer.from(e);
      } else {
        if (typeof e == 'string') {
          e = Buffer.from(e, 'utf8');
        }
      }
      return o().createHash('md5').update(e).digest();
    });
    const _ = {
      randomUUID: o().randomUUID
    };
    const v = function (e, t, n) {
      if (_.randomUUID && !t && !e) {
        return _.randomUUID();
      }
      const r = (e = e || {}).random || (e.rng || A)();
      r[6] = r[6] & 15 | 64;
      r[8] = r[8] & 63 | 128;
      if (t) {
        n = n || 0;
        for (let e = 0; e < 16; ++e) {
          t[n + e] = r[e];
        }
        return t;
      }
      return g(r);
    };
    const b = y('v5', 80, function (e) {
      if (Array.isArray(e)) {
        e = Buffer.from(e);
      } else {
        if (typeof e == 'string') {
          e = Buffer.from(e, 'utf8');
        }
      }
      return o().createHash('sha1').update(e).digest();
    });
    const B = '00000000-0000-0000-0000-000000000000';
    const Q = function (e) {
      if (!u(e)) {
        throw TypeError('Invalid UUID');
      }
      return parseInt(e.slice(14, 15), 16);
    };
  },
  89688: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = undefined;
    const c = __importDefault(require(27849));
    c.default.install();
    const u = __importStar(require(16928));
    const l = __importStar(require(70857));
    const g = __importStar(require(79896));
    const d = require(76982);
    const h = require(69278);
    const f = require(90355);
    __exportStar(require(90355), exports);
    class p extends f.AbstractMessageReader {
      process;
      constructor(e) {
        super();
        this.process = e;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose());
      }
      listen(e) {
        this.process.on('message', e);
        return f.Disposable.create(() => this.process.off('message', e));
      }
    }
    exports.IPCMessageReader = p;
    class m extends f.AbstractMessageWriter {
      process;
      errorCount;
      constructor(e) {
        super();
        this.process = e;
        this.errorCount = 0;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose);
      }
      write(e) {
        try {
          if (typeof this.process.send == 'function') {
            this.process.send(e, undefined, undefined, t => {
              if (t) {
                this.errorCount++;
                this.handleError(t, e);
              } else {
                this.errorCount = 0;
              }
            });
          }
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.IPCMessageWriter = m;
    class I extends f.AbstractMessageReader {
      onData;
      constructor(e) {
        super();
        this.onData = new f.Emitter();
        e.on('close', () => this.fireClose);
        e.on('error', e => this.fireError(e));
        e.on('message', e => {
          this.onData.fire(e);
        });
      }
      listen(e) {
        return this.onData.event(e);
      }
    }
    exports.PortMessageReader = I;
    class E extends f.AbstractMessageWriter {
      port;
      errorCount;
      constructor(e) {
        super();
        this.port = e;
        this.errorCount = 0;
        e.on('close', () => this.fireClose());
        e.on('error', e => this.fireError(e));
      }
      write(e) {
        try {
          this.port.postMessage(e);
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.PortMessageWriter = E;
    class y extends f.ReadableStreamMessageReader {
      constructor(e, t = 'utf-8') {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.SocketMessageReader = y;
    class w extends f.WriteableStreamMessageWriter {
      socket;
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
        this.socket = e;
      }
      dispose() {
        super.dispose();
        this.socket.destroy();
      }
    }
    exports.SocketMessageWriter = w;
    class _ extends f.ReadableStreamMessageReader {
      constructor(e, t) {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.StreamMessageReader = _;
    class v extends f.WriteableStreamMessageWriter {
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
      }
    }
    exports.StreamMessageWriter = v;
    const b = process.env.XDG_RUNTIME_DIR;
    const B = new Map([['linux', 107], ['darwin', 103]]);
    exports.generateRandomPipeName = function () {
      if (process.platform === 'win32') {
        return `\\\\.\\pipe\\lsp-${d.randomBytes(16).toString('hex')}-sock`;
      }
      let e = 32;
      const t = g.realpathSync(b ?? l.tmpdir());
      const n = B.get(process.platform);
      if (n !== undefined) {
        e = Math.min(n - t.length - 9, e);
      }
      if (e < 16) {
        throw new Error(`Unable to generate a random pipe name with ${e} characters.`);
      }
      const r = d.randomBytes(Math.floor(e / 2)).toString('hex');
      return u.join(t, `lsp-${r}.sock`);
    };
    exports.createClientPipeTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerPipeTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e);
      return [new y(n, t), new w(n, t)];
    };
    exports.createClientSocketTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, '127.0.0.1', () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerSocketTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e, '127.0.0.1');
      return [new y(n, t), new w(n, t)];
    };
    exports.createMessageConnection = function (e, t, n, r) {
      if (!n) {
        n = f.NullLogger;
      }
      const o = function (e) {
        const t = e;
        return t.read !== undefined && t.addListener !== undefined;
      }(e) ? new _(e) : e;
      const s = function (e) {
        const t = e;
        return t.write !== undefined && t.addListener !== undefined;
      }(t) ? new v(t) : t;
      if (f.ConnectionStrategy.is(r)) {
        r = {
          connectionStrategy: r
        };
      }
      return f.createMessageConnection(o, s, n, r);
    };
  },
  79601: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createProtocolConnection = undefined;
    const s = require(89688);
    __exportStar(require(89688), exports);
    __exportStar(require(37688), exports);
    exports.createProtocolConnection = function (e, t, n, r) {
      return s.createMessageConnection(e, t, n, r);
    };
  },
  81658: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConnection = exports.Files = undefined;
    const A = require(57975);
    const c = __importStar(require(4693));
    const u = require(97360);
    const l = __importStar(require(5569));
    const g = require(79601);
    var d;
    __exportStar(require(79601), exports);
    __exportStar(require(56911), exports);
    (function (e) {
      e.uriToFilePath = l.uriToFilePath;
      e.resolveGlobalNodePath = l.resolveGlobalNodePath;
      e.resolveGlobalYarnPath = l.resolveGlobalYarnPath;
      e.resolve = l.resolve;
      e.resolveModulePath = l.resolveModulePath;
    })(d || (exports.Files = d = {}));
    let h;
    let f = false;
    (function () {
      const e = '--clientProcessId';
      function t(e) {
        try {
          const t = parseInt(e);
          if (!isNaN(t)) {
            h = setInterval(() => {
              try {
                process.kill(t, 0);
              } catch (e) {
                process.exit(f ? 0 : 1);
              }
            }, 3000);
          }
        } catch (e) {}
      }
      for (let n = 2; n < process.argv.length; n++) {
        const r = process.argv[n];
        if (r === e && n + 1 < process.argv.length) {
          t(process.argv[n + 1]);
          return;
        }
        {
          const n = r.split('=');
          if (n[0] === e) {
            t(n[1]);
          }
        }
      }
    })();
    const p = {
      initialize: e => {
        const t = e.processId;
        if (c.number(t) && h === undefined) {
          setInterval(() => {
            try {
              process.kill(t, 0);
            } catch (e) {
              process.exit(f ? 0 : 1);
            }
          }, 3000);
        }
      },
      get shutdownReceived() {
        return f;
      },
      set shutdownReceived(e) {
        f = e;
      },
      exit: e => {
        process.exit(e);
      }
    };
    exports.createConnection = function (e, t, n, r) {
      let o;
      let s;
      let a;
      let l;
      if (e !== undefined && e.__brand === 'features') {
        o = e;
        e = t;
        t = n;
        n = r;
      }
      if (g.ConnectionStrategy.is(e) || g.ConnectionOptions.is(e)) {
        l = e;
      } else {
        s = e;
        a = t;
        l = n;
      }
      return function (e, t, n, r) {
        let o = false;
        if (!e && !t && process.argv.length > 2) {
          let n;
          let r;
          const s = process.argv.slice(2);
          for (let a = 0; a < s.length; a++) {
            const A = s[a];
            if (A === '--node-ipc') {
              e = new g.IPCMessageReader(process);
              t = new g.IPCMessageWriter(process);
              break;
            }
            if (A === '--stdio') {
              o = true;
              e = process.stdin;
              t = process.stdout;
              break;
            }
            if (A === '--socket') {
              n = parseInt(s[a + 1]);
              break;
            }
            if (A === '--pipe') {
              r = s[a + 1];
              break;
            }
            {
              const e = A.split('=');
              if (e[0] === '--socket') {
                n = parseInt(e[1]);
                break;
              }
              if (e[0] === '--pipe') {
                r = e[1];
                break;
              }
            }
          }
          if (n) {
            const r = g.createServerSocketTransport(n);
            e = r[0];
            t = r[1];
          } else {
            if (r) {
              const n = g.createServerPipeTransport(r);
              e = n[0];
              t = n[1];
            }
          }
        }
        const s = 'Use arguments of createConnection or set command line parameters: \'--node-ipc\', \'--stdio\' or \'--socket={number}\'';
        if (!e) {
          throw new Error(`Connection input stream is not set. ${s}`);
        }
        if (!t) {
          throw new Error(`Connection output stream is not set. ${s}`);
        }
        if (c.func(e.read) && c.func(e.on)) {
          const t = e;
          t.on('end', () => {
            process.exit(f ? 0 : 1);
          });
          t.on('close', () => {
            process.exit(f ? 0 : 1);
          });
        }
        const a = r => {
          const s = g.createProtocolConnection(e, t, r, n);
          if (o) {
            (function (e) {
              function t(e) {
                return e.map(e => typeof e == 'string' ? e : A.inspect(e)).join(' ');
              }
              const n = new Map();
              console.assert = function (n, ...r) {
                if (!n) {
                  if (r.length === 0) {
                    e.error('Assertion failed');
                  } else {
                    const [n, ...o] = r;
                    e.error(`Assertion failed: ${n} ${t(o)}`);
                  }
                }
              };
              console.count = function (t = 'default') {
                const r = String(t);
                let o = n.get(r) ?? 0;
                o += 1;
                n.set(r, o);
                e.log(`${r}: ${r}`);
              };
              console.countReset = function (e) {
                if (e === undefined) {
                  n.clear();
                } else {
                  n.delete(String(e));
                }
              };
              console.debug = function (...n) {
                e.log(t(n));
              };
              console.dir = function (t, n) {
                e.log(A.inspect(t, n));
              };
              console.log = function (...n) {
                e.log(t(n));
              };
              console.error = function (...n) {
                e.error(t(n));
              };
              console.trace = function (...n) {
                const r = new Error().stack.replace(/(.+\n){2}/, '');
                let o = 'Trace';
                if (n.length !== 0) {
                  o += `: ${t(n)}`;
                }
                e.log(`${o}\n${r}`);
              };
              console.warn = function (...n) {
                e.warn(t(n));
              };
            })(r);
          }
          return s;
        };
        return u.createConnection(a, p, r);
      }(s, a, l, o);
    };
  },
  74118: function (module) {
    var t;
    t = () => (() => {
      "use strict";

      var e = {
        470: _module => {
          function t(e) {
            if (typeof e != 'string') {
              throw new TypeError(`Path must be a string. Received ${JSON.stringify(e)}`);
            }
          }
          function n(e, t) {
            var n;
            var r = '';
            var o = 0;
            var s = -1;
            var a = 0;
            for (var A = 0; A <= e.length; ++A) {
              if (A < e.length) {
                n = e.charCodeAt(A);
              } else {
                if (n === 47) {
                  break;
                }
                n = 47;
              }
              if (n === 47) {
                if (s === A - 1 || a === 1) ;else {
                  if (s !== A - 1 && a === 2) {
                    if (r.length < 2 || o !== 2 || r.charCodeAt(r.length - 1) !== 46 || r.charCodeAt(r.length - 2) !== 46) {
                      if (r.length > 2) {
                        var c = r.lastIndexOf('/');
                        if (c !== r.length - 1) {
                          if (c === -1) {
                            r = '';
                            o = 0;
                          } else {
                            o = (r = r.slice(0, c)).length - 1 - r.lastIndexOf('/');
                          }
                          s = A;
                          a = 0;
                          continue;
                        }
                      } else {
                        if (r.length === 2 || r.length === 1) {
                          r = '';
                          o = 0;
                          s = A;
                          a = 0;
                          continue;
                        }
                      }
                    }
                    if (t) {
                      if (r.length > 0) {
                        r += '/..';
                      } else {
                        r = '..';
                      }
                      o = 2;
                    }
                  } else {
                    if (r.length > 0) {
                      r += `/${e.slice(s + 1, A)}`;
                    } else {
                      r = e.slice(s + 1, A);
                    }
                    o = A - s - 1;
                  }
                }
                s = A;
                a = 0;
              } else {
                if (n === 46 && a !== -1) {
                  ++a;
                } else {
                  a = -1;
                }
              }
            }
            return r;
          }
          var r = {
            resolve: function () {
              var e;
              var r = '';
              for (var o = false, s = arguments.length - 1; s >= -1 && !o; s--) {
                var a;
                if (s >= 0) {
                  a = arguments[s];
                } else {
                  if (e === undefined) {
                    e = process.cwd();
                  }
                  a = e;
                }
                t(a);
                if (a.length !== 0) {
                  r = a + '/' + r;
                  o = a.charCodeAt(0) === 47;
                }
              }
              r = n(r, !o);
              if (o) {
                if (r.length > 0) {
                  return `/${r}`;
                } else {
                  return '/';
                }
              } else {
                if (r.length > 0) {
                  return r;
                } else {
                  return '.';
                }
              }
            },
            normalize: function (e) {
              t(e);
              if (e.length === 0) {
                return '.';
              }
              var r = e.charCodeAt(0) === 47;
              var o = e.charCodeAt(e.length - 1) === 47;
              if ((e = n(e, !r)).length === 0 && !r) {
                e = '.';
              }
              if (e.length > 0 && o) {
                e += '/';
              }
              if (r) {
                return `/${e}`;
              } else {
                return e;
              }
            },
            isAbsolute: function (e) {
              t(e);
              return e.length > 0 && e.charCodeAt(0) === 47;
            },
            join: function () {
              if (arguments.length === 0) {
                return '.';
              }
              var e;
              for (var n = 0; n < arguments.length; ++n) {
                var o = arguments[n];
                t(o);
                if (o.length > 0) {
                  if (e === undefined) {
                    e = o;
                  } else {
                    e += `/${o}`;
                  }
                }
              }
              if (e === undefined) {
                return '.';
              } else {
                return r.normalize(e);
              }
            },
            relative: function (e, n) {
              t(e);
              t(n);
              if (e === n) {
                return '';
              }
              if ((e = r.resolve(e)) === (n = r.resolve(n))) {
                return '';
              }
              for (var o = 1; o < e.length && e.charCodeAt(o) === 47; ++o);
              var s = e.length;
              var a = s - o;
              for (var A = 1; A < n.length && n.charCodeAt(A) === 47; ++A);
              var c = n.length - A;
              for (var u = a < c ? a : c, l = -1, g = 0; g <= u; ++g) {
                if (g === u) {
                  if (c > u) {
                    if (n.charCodeAt(A + g) === 47) {
                      return n.slice(A + g + 1);
                    }
                    if (g === 0) {
                      return n.slice(A + g);
                    }
                  } else {
                    if (a > u) {
                      if (e.charCodeAt(o + g) === 47) {
                        l = g;
                      } else {
                        if (g === 0) {
                          l = 0;
                        }
                      }
                    }
                  }
                  break;
                }
                var d = e.charCodeAt(o + g);
                if (d !== n.charCodeAt(A + g)) {
                  break;
                }
                if (d === 47) {
                  l = g;
                }
              }
              var h = '';
              for (g = o + l + 1; g <= s; ++g) {
                if (g === s || e.charCodeAt(g) === 47) {
                  if (h.length === 0) {
                    h += '..';
                  } else {
                    h += '/..';
                  }
                }
              }
              if (h.length > 0) {
                return h + n.slice(A + l);
              } else {
                A += l;
                if (n.charCodeAt(A) === 47) {
                  ++A;
                }
                return n.slice(A);
              }
            },
            _makeLong: function (e) {
              return e;
            },
            dirname: function (e) {
              t(e);
              if (e.length === 0) {
                return '.';
              }
              var n = e.charCodeAt(0);
              var r = n === 47;
              var o = -1;
              var s = true;
              for (var a = e.length - 1; a >= 1; --a) {
                if ((n = e.charCodeAt(a)) === 47) {
                  if (!s) {
                    o = a;
                    break;
                  }
                } else {
                  s = false;
                }
              }
              if (o === -1) {
                if (r) {
                  return '/';
                } else {
                  return '.';
                }
              } else {
                if (r && o === 1) {
                  return '//';
                } else {
                  return e.slice(0, o);
                }
              }
            },
            basename: function (e, n) {
              if (n !== undefined && typeof n != 'string') {
                throw new TypeError('"ext" argument must be a string');
              }
              t(e);
              var r;
              var o = 0;
              var s = -1;
              var a = true;
              if (n !== undefined && n.length > 0 && n.length <= e.length) {
                if (n.length === e.length && n === e) {
                  return '';
                }
                var A = n.length - 1;
                var c = -1;
                for (r = e.length - 1; r >= 0; --r) {
                  var u = e.charCodeAt(r);
                  if (u === 47) {
                    if (!a) {
                      o = r + 1;
                      break;
                    }
                  } else {
                    if (c === -1) {
                      a = false;
                      c = r + 1;
                    }
                    if (A >= 0) {
                      if (u === n.charCodeAt(A)) {
                        if (--A == -1) {
                          s = r;
                        }
                      } else {
                        A = -1;
                        s = c;
                      }
                    }
                  }
                }
                if (o === s) {
                  s = c;
                } else {
                  if (s === -1) {
                    s = e.length;
                  }
                }
                return e.slice(o, s);
              }
              for (r = e.length - 1; r >= 0; --r) {
                if (e.charCodeAt(r) === 47) {
                  if (!a) {
                    o = r + 1;
                    break;
                  }
                } else {
                  if (s === -1) {
                    a = false;
                    s = r + 1;
                  }
                }
              }
              if (s === -1) {
                return '';
              } else {
                return e.slice(o, s);
              }
            },
            extname: function (e) {
              t(e);
              var n = -1;
              var r = 0;
              var o = -1;
              var s = true;
              var a = 0;
              for (var A = e.length - 1; A >= 0; --A) {
                var c = e.charCodeAt(A);
                if (c !== 47) {
                  if (o === -1) {
                    s = false;
                    o = A + 1;
                  }
                  if (c === 46) {
                    if (n === -1) {
                      n = A;
                    } else {
                      if (a !== 1) {
                        a = 1;
                      }
                    }
                  } else {
                    if (n !== -1) {
                      a = -1;
                    }
                  }
                } else {
                  if (!s) {
                    r = A + 1;
                    break;
                  }
                }
              }
              if (n === -1 || o === -1 || a === 0 || a === 1 && n === o - 1 && n === r + 1) {
                return '';
              } else {
                return e.slice(n, o);
              }
            },
            format: function (e) {
              if (e === null || typeof e != 'object') {
                throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof e}`);
              }
              return function (e, t) {
                var n = t.dir || t.root;
                var r = t.base || (t.name || '') + (t.ext || '');
                if (n) {
                  if (n === t.root) {
                    return n + r;
                  } else {
                    return n + '/' + r;
                  }
                } else {
                  return r;
                }
              }(0, e);
            },
            parse: function (e) {
              t(e);
              var n = {
                root: '',
                dir: '',
                base: '',
                ext: '',
                name: ''
              };
              if (e.length === 0) {
                return n;
              }
              var r;
              var o = e.charCodeAt(0);
              var s = o === 47;
              if (s) {
                n.root = '/';
                r = 1;
              } else {
                r = 0;
              }
              var a = -1;
              var A = 0;
              var c = -1;
              var u = true;
              for (var l = e.length - 1, g = 0; l >= r; --l) {
                if ((o = e.charCodeAt(l)) !== 47) {
                  if (c === -1) {
                    u = false;
                    c = l + 1;
                  }
                  if (o === 46) {
                    if (a === -1) {
                      a = l;
                    } else {
                      if (g !== 1) {
                        g = 1;
                      }
                    }
                  } else {
                    if (a !== -1) {
                      g = -1;
                    }
                  }
                } else {
                  if (!u) {
                    A = l + 1;
                    break;
                  }
                }
              }
              if (a === -1 || c === -1 || g === 0 || g === 1 && a === c - 1 && a === A + 1) {
                if (c !== -1) {
                  n.base = n.name = A === 0 && s ? e.slice(1, c) : e.slice(A, c);
                }
              } else {
                if (A === 0 && s) {
                  n.name = e.slice(1, a);
                  n.base = e.slice(1, c);
                } else {
                  n.name = e.slice(A, a);
                  n.base = e.slice(A, c);
                }
                n.ext = e.slice(a, c);
              }
              if (A > 0) {
                n.dir = e.slice(0, A - 1);
              } else {
                if (s) {
                  n.dir = '/';
                }
              }
              return n;
            },
            sep: '/',
            delimiter: ':',
            win32: null,
            posix: null
          };
          r.posix = r;
          _module.exports = r;
        },
        674: (_module, _exports) => {
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.isWindows = undefined;
          if (typeof process == 'object') {
            _exports.isWindows = process.platform === 'win32';
          } else {
            if (typeof navigator == 'object') {
              let e = navigator.userAgent;
              _exports.isWindows = e.indexOf('Windows') >= 0;
            }
          }
        },
        796: (_module, _exports, _require) => {
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.uriToFsPath = _exports.URI = undefined;
          const r = _require(674);
          const o = /^\w[\w\d+.-]*$/;
          const s = /^\//;
          const a = /^\/\//;
          function A(e, t) {
            if (!e.scheme && t) {
              throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`);
            }
            if (e.scheme && !o.test(e.scheme)) {
              throw new Error('[UriError]: Scheme contains illegal characters.');
            }
            if (e.path) {
              if (e.authority) {
                if (!s.test(e.path)) {
                  throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character');
                }
              } else {
                if (a.test(e.path)) {
                  throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")');
                }
              }
            }
          }
          const c = '';
          const u = '/';
          const l = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
          class g {
            static isUri(e) {
              return e instanceof g || !!e && typeof e.authority == 'string' && typeof e.fragment == 'string' && typeof e.path == 'string' && typeof e.query == 'string' && typeof e.scheme == 'string' && typeof e.fsPath == 'string' && typeof e.with == 'function' && typeof e.toString == 'function';
            }
            scheme;
            authority;
            path;
            query;
            fragment;
            constructor(e, t, n, r, o, s = false) {
              if (typeof e == 'object') {
                this.scheme = e.scheme || c;
                this.authority = e.authority || c;
                this.path = e.path || c;
                this.query = e.query || c;
                this.fragment = e.fragment || c;
              } else {
                this.scheme = function (e, t) {
                  if (e || t) {
                    return e;
                  } else {
                    return 'file';
                  }
                }(e, s);
                this.authority = t || c;
                this.path = function (e, t) {
                  switch (e) {
                    case 'https':
                    case 'http':
                    case 'file':
                      if (t) {
                        if (t[0] !== u) {
                          t = u + t;
                        }
                      } else {
                        t = u;
                      }
                  }
                  return t;
                }(this.scheme, n || c);
                this.query = r || c;
                this.fragment = o || c;
                A(this, s);
              }
            }
            get fsPath() {
              return I(this, false);
            }
            with(e) {
              if (!e) {
                return this;
              }
              let {
                scheme: t,
                authority: n,
                path: r,
                query: o,
                fragment: s
              } = e;
              if (t === undefined) {
                t = this.scheme;
              } else {
                if (t === null) {
                  t = c;
                }
              }
              if (n === undefined) {
                n = this.authority;
              } else {
                if (n === null) {
                  n = c;
                }
              }
              if (r === undefined) {
                r = this.path;
              } else {
                if (r === null) {
                  r = c;
                }
              }
              if (o === undefined) {
                o = this.query;
              } else {
                if (o === null) {
                  o = c;
                }
              }
              if (s === undefined) {
                s = this.fragment;
              } else {
                if (s === null) {
                  s = c;
                }
              }
              if (t === this.scheme && n === this.authority && r === this.path && o === this.query && s === this.fragment) {
                return this;
              } else {
                return new h(t, n, r, o, s);
              }
            }
            static parse(e, t = false) {
              const n = l.exec(e);
              if (n) {
                return new h(n[2] || c, _(n[4] || c), _(n[5] || c), _(n[7] || c), _(n[9] || c), t);
              } else {
                return new h(c, c, c, c, c);
              }
            }
            static file(e) {
              let t = c;
              if (r.isWindows) {
                e = e.replace(/\\/g, u);
              }
              if (e[0] === u && e[1] === u) {
                const n = e.indexOf(u, 2);
                if (n === -1) {
                  t = e.substring(2);
                  e = u;
                } else {
                  t = e.substring(2, n);
                  e = e.substring(n) || u;
                }
              }
              return new h('file', t, e, c, c);
            }
            static from(e) {
              const t = new h(e.scheme, e.authority, e.path, e.query, e.fragment);
              A(t, true);
              return t;
            }
            toString(e = false) {
              return E(this, e);
            }
            toJSON() {
              return this;
            }
            static revive(e) {
              if (e) {
                if (e instanceof g) {
                  return e;
                }
                {
                  const t = new h(e);
                  t._formatted = e.external;
                  t._fsPath = e._sep === d ? e.fsPath : null;
                  return t;
                }
              }
              return e;
            }
          }
          _exports.URI = g;
          const d = r.isWindows ? 1 : undefined;
          class h extends g {
            _formatted = null;
            _fsPath = null;
            get fsPath() {
              if (!this._fsPath) {
                this._fsPath = I(this, false);
              }
              return this._fsPath;
            }
            toString(e = false) {
              if (e) {
                return E(this, true);
              } else {
                if (!this._formatted) {
                  this._formatted = E(this, false);
                }
                return this._formatted;
              }
            }
            toJSON() {
              const e = {
                $mid: 1
              };
              if (this._fsPath) {
                e.fsPath = this._fsPath;
                e._sep = d;
              }
              if (this._formatted) {
                e.external = this._formatted;
              }
              if (this.path) {
                e.path = this.path;
              }
              if (this.scheme) {
                e.scheme = this.scheme;
              }
              if (this.authority) {
                e.authority = this.authority;
              }
              if (this.query) {
                e.query = this.query;
              }
              if (this.fragment) {
                e.fragment = this.fragment;
              }
              return e;
            }
          }
          const f = {
            58: '%3A',
            47: '%2F',
            63: '%3F',
            35: '%23',
            91: '%5B',
            93: '%5D',
            64: '%40',
            33: '%21',
            36: '%24',
            38: '%26',
            39: '%27',
            40: '%28',
            41: '%29',
            42: '%2A',
            43: '%2B',
            44: '%2C',
            59: '%3B',
            61: '%3D',
            32: '%20'
          };
          function p(e, t, n) {
            let r;
            let o = -1;
            for (let s = 0; s < e.length; s++) {
              const a = e.charCodeAt(s);
              if (a >= 97 && a <= 122 || a >= 65 && a <= 90 || a >= 48 && a <= 57 || a === 45 || a === 46 || a === 95 || a === 126 || t && a === 47 || n && a === 91 || n && a === 93 || n && a === 58) {
                if (o !== -1) {
                  r += encodeURIComponent(e.substring(o, s));
                  o = -1;
                }
                if (r !== undefined) {
                  r += e.charAt(s);
                }
              } else {
                if (r === undefined) {
                  r = e.substr(0, s);
                }
                const t = f[a];
                if (t !== undefined) {
                  if (o !== -1) {
                    r += encodeURIComponent(e.substring(o, s));
                    o = -1;
                  }
                  r += t;
                } else {
                  if (o === -1) {
                    o = s;
                  }
                }
              }
            }
            if (o !== -1) {
              r += encodeURIComponent(e.substring(o));
            }
            if (r !== undefined) {
              return r;
            } else {
              return e;
            }
          }
          function m(e) {
            let t;
            for (let n = 0; n < e.length; n++) {
              const r = e.charCodeAt(n);
              if (r === 35 || r === 63) {
                if (t === undefined) {
                  t = e.substr(0, n);
                }
                t += f[r];
              } else {
                if (t !== undefined) {
                  t += e[n];
                }
              }
            }
            if (t !== undefined) {
              return t;
            } else {
              return e;
            }
          }
          function I(e, t) {
            let n;
            n = e.authority && e.path.length > 1 && e.scheme === 'file' ? `//${e.authority}${e.path}` : e.path.charCodeAt(0) === 47 && (e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90 || e.path.charCodeAt(1) >= 97 && e.path.charCodeAt(1) <= 122) && e.path.charCodeAt(2) === 58 ? t ? e.path.substr(1) : e.path[1].toLowerCase() + e.path.substr(2) : e.path;
            if (r.isWindows) {
              n = n.replace(/\//g, '\\');
            }
            return n;
          }
          function E(e, t) {
            const n = t ? m : p;
            let r = '';
            let {
              scheme: o,
              authority: s,
              path: a,
              query: A,
              fragment: c
            } = e;
            if (o) {
              r += o;
              r += ':';
            }
            if (s || o === 'file') {
              r += u;
              r += u;
            }
            if (s) {
              let e = s.indexOf('@');
              if (e !== -1) {
                const t = s.substr(0, e);
                s = s.substr(e + 1);
                e = t.lastIndexOf(':');
                if (e === -1) {
                  r += n(t, false, false);
                } else {
                  r += n(t.substr(0, e), false, false);
                  r += ':';
                  r += n(t.substr(e + 1), false, true);
                }
                r += '@';
              }
              s = s.toLowerCase();
              e = s.lastIndexOf(':');
              if (e === -1) {
                r += n(s, false, true);
              } else {
                r += n(s.substr(0, e), false, true);
                r += s.substr(e);
              }
            }
            if (a) {
              if (a.length >= 3 && a.charCodeAt(0) === 47 && a.charCodeAt(2) === 58) {
                const e = a.charCodeAt(1);
                if (e >= 65 && e <= 90) {
                  a = `/${String.fromCharCode(e + 32)}:${a.substr(3)}`;
                }
              } else {
                if (a.length >= 2 && a.charCodeAt(1) === 58) {
                  const e = a.charCodeAt(0);
                  if (e >= 65 && e <= 90) {
                    a = `${String.fromCharCode(e + 32)}:${a.substr(2)}`;
                  }
                }
              }
              r += n(a, true, false);
            }
            if (A) {
              r += '?';
              r += n(A, false, false);
            }
            if (c) {
              r += '#';
              r += t ? c : p(c, false, false);
            }
            return r;
          }
          function y(e) {
            try {
              return decodeURIComponent(e);
            } catch {
              if (e.length > 3) {
                return e.substr(0, 3) + y(e.substr(3));
              } else {
                return e;
              }
            }
          }
          _exports.uriToFsPath = I;
          const w = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
          function _(e) {
            if (e.match(w)) {
              return e.replace(w, e => y(e));
            } else {
              return e;
            }
          }
        },
        679: function (_module, _exports, _require) {
          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Utils = undefined;
          const a = __importStar(_require(470));
          const A = a.posix || a;
          const c = '/';
          var u;
          (function (e) {
            e.joinPath = function (e, ...t) {
              return e.with({
                path: A.join(e.path, ...t)
              });
            };
            e.resolvePath = function (e, ...t) {
              let n = e.path;
              let r = false;
              if (n[0] !== c) {
                n = c + n;
                r = true;
              }
              let o = A.resolve(n, ...t);
              if (r && o[0] === c && !e.authority) {
                o = o.substring(1);
              }
              return e.with({
                path: o
              });
            };
            e.dirname = function (e) {
              if (e.path.length === 0 || e.path === c) {
                return e;
              }
              let t = A.dirname(e.path);
              if (t.length === 1 && t.charCodeAt(0) === 46) {
                t = '';
              }
              return e.with({
                path: t
              });
            };
            e.basename = function (e) {
              return A.basename(e.path);
            };
            e.extname = function (e) {
              return A.extname(e.path);
            };
          })(u || (_exports.Utils = u = {}));
        }
      };
      var t = {};
      function n(r) {
        var o = t[r];
        if (o !== undefined) {
          return o.exports;
        }
        var s = t[r] = {
          exports: {}
        };
        e[r].call(s.exports, s, s.exports, n);
        return s.exports;
      }
      var r = {};
      (() => {
        var e = r;
        Object.defineProperty(e, '__esModule', {
          value: true
        });
        e.Utils = e.URI = undefined;
        const t = n(796);
        Object.defineProperty(e, 'URI', {
          enumerable: true,
          get: function () {
            return t.URI;
          }
        });
        const o = n(679);
        Object.defineProperty(e, 'Utils', {
          enumerable: true,
          get: function () {
            return o.Utils;
          }
        });
      })();
      return r;
    })();
    module.exports = t();
  },
  66509: (module, exports, require) => {
    var Module = Module !== undefined ? Module : {};
    var ENVIRONMENT_IS_WEB = typeof window == 'object';
    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';
    var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';
    var TreeSitter = function () {
      var initPromise;
      var document = typeof window == 'object' ? {
        currentScript: window.document.currentScript
      } : null;
      class Parser {
        constructor() {
          this.initialize();
        }
        initialize() {
          throw new Error('cannot construct a Parser before calling `init()`');
        }
        static init(moduleOptions) {
          return initPromise || (Module = Object.assign({}, Module, moduleOptions), initPromise = new Promise(resolveInitPromise => {
            var moduleOverrides = Object.assign({}, Module);
            var arguments_ = [];
            var thisProgram = './this.program';
            var quit_ = (e, t) => {
              throw t;
            };
            var scriptDirectory = '';
            var readAsync;
            var readBinary;
            function locateFile(e) {
              if (Module.locateFile) {
                return Module.locateFile(e, scriptDirectory);
              } else {
                return scriptDirectory + e;
              }
            }
            if (ENVIRONMENT_IS_NODE) {
              var fs = require(79896);
              var nodePath = require(16928);
              scriptDirectory = __dirname + '/';
              readBinary = e => {
                e = isFileURI(e) ? new URL(e) : nodePath.normalize(e);
                return fs.readFileSync(e);
              };
              readAsync = (e, t = true) => {
                e = isFileURI(e) ? new URL(e) : nodePath.normalize(e);
                return new Promise((n, r) => {
                  fs.readFile(e, t ? undefined : 'utf8', (e, o) => {
                    if (e) {
                      r(e);
                    } else {
                      n(t ? o.buffer : o);
                    }
                  });
                });
              };
              if (!Module.thisProgram && process.argv.length > 1) {
                thisProgram = process.argv[1].replace(/\\/g, '/');
              }
              arguments_ = process.argv.slice(2);
              module.exports = Module;
              quit_ = (e, t) => {
                process.exitCode = e;
                throw t;
              };
            } else {
              if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
                if (ENVIRONMENT_IS_WORKER) {
                  scriptDirectory = self.location.href;
                } else {
                  if (document !== undefined && document.currentScript) {
                    scriptDirectory = document.currentScript.src;
                  }
                }
                scriptDirectory = scriptDirectory.startsWith('blob:') ? '' : scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1);
                if (ENVIRONMENT_IS_WORKER) {
                  readBinary = e => {
                    var t = new XMLHttpRequest();
                    t.open('GET', e, false);
                    t.responseType = 'arraybuffer';
                    t.send(null);
                    return new Uint8Array(t.response);
                  };
                }
                readAsync = e => isFileURI(e) ? new Promise((t, n) => {
                  var r = new XMLHttpRequest();
                  r.open('GET', e, true);
                  r.responseType = 'arraybuffer';
                  r.onload = () => {
                    if (r.status == 200 || r.status == 0 && r.response) {
                      n(r.response);
                    }
                    t(r.status);
                  };
                  r.onerror = t;
                  r.send(null);
                }) : fetch(e, {
                  credentials: 'same-origin'
                }).then(e => e.ok ? e.arrayBuffer() : Promise.reject(new Error(e.status + ' : ' + e.url)));
              }
            }
            var out = Module.print || console.log.bind(console);
            var err = Module.printErr || console.error.bind(console);
            Object.assign(Module, moduleOverrides);
            moduleOverrides = null;
            if (Module.arguments) {
              arguments_ = Module.arguments;
            }
            if (Module.thisProgram) {
              thisProgram = Module.thisProgram;
            }
            if (Module.quit) {
              quit_ = Module.quit;
            }
            var dynamicLibraries = Module.dynamicLibraries || [];
            var wasmBinary;
            var wasmMemory;
            if (Module.wasmBinary) {
              wasmBinary = Module.wasmBinary;
            }
            var ABORT = false;
            var EXITSTATUS;
            var HEAP8;
            var HEAPU8;
            var HEAP16;
            var HEAPU16;
            var HEAP32;
            var HEAPU32;
            var HEAPF32;
            var HEAPF64;
            var HEAP_DATA_VIEW;
            function updateMemoryViews() {
              var e = wasmMemory.buffer;
              Module.HEAP_DATA_VIEW = HEAP_DATA_VIEW = new DataView(e);
              Module.HEAP8 = HEAP8 = new Int8Array(e);
              Module.HEAP16 = HEAP16 = new Int16Array(e);
              Module.HEAPU8 = HEAPU8 = new Uint8Array(e);
              Module.HEAPU16 = HEAPU16 = new Uint16Array(e);
              Module.HEAP32 = HEAP32 = new Int32Array(e);
              Module.HEAPU32 = HEAPU32 = new Uint32Array(e);
              Module.HEAPF32 = HEAPF32 = new Float32Array(e);
              Module.HEAPF64 = HEAPF64 = new Float64Array(e);
            }
            if (Module.wasmMemory) {
              wasmMemory = Module.wasmMemory;
            } else {
              var INITIAL_MEMORY = Module.INITIAL_MEMORY || 33554432;
              wasmMemory = new WebAssembly.Memory({
                initial: INITIAL_MEMORY / 65536,
                maximum: 32768
              });
            }
            updateMemoryViews();
            var __ATPRERUN__ = [];
            var __ATINIT__ = [];
            var __ATMAIN__ = [];
            var __ATPOSTRUN__ = [];
            var __RELOC_FUNCS__ = [];
            var runtimeInitialized = false;
            function preRun() {
              if (Module.preRun) {
                for (typeof Module.preRun == 'function' && (Module.preRun = [Module.preRun]); Module.preRun.length;) {
                  addOnPreRun(Module.preRun.shift());
                }
              }
              callRuntimeCallbacks(__ATPRERUN__);
            }
            function initRuntime() {
              runtimeInitialized = true;
              callRuntimeCallbacks(__RELOC_FUNCS__);
              callRuntimeCallbacks(__ATINIT__);
            }
            function preMain() {
              callRuntimeCallbacks(__ATMAIN__);
            }
            function postRun() {
              if (Module.postRun) {
                for (typeof Module.postRun == 'function' && (Module.postRun = [Module.postRun]); Module.postRun.length;) {
                  addOnPostRun(Module.postRun.shift());
                }
              }
              callRuntimeCallbacks(__ATPOSTRUN__);
            }
            function addOnPreRun(e) {
              __ATPRERUN__.unshift(e);
            }
            function addOnInit(e) {
              __ATINIT__.unshift(e);
            }
            function addOnPostRun(e) {
              __ATPOSTRUN__.unshift(e);
            }
            var runDependencies = 0;
            var runDependencyWatcher = null;
            var dependenciesFulfilled = null;
            function getUniqueRunDependency(e) {
              return e;
            }
            function addRunDependency(e) {
              runDependencies++;
              Module.monitorRunDependencies?.(runDependencies);
            }
            function removeRunDependency(e) {
              runDependencies--;
              Module.monitorRunDependencies?.(runDependencies);
              if (runDependencies == 0 && (runDependencyWatcher !== null && (clearInterval(runDependencyWatcher), runDependencyWatcher = null), dependenciesFulfilled)) {
                var t = dependenciesFulfilled;
                dependenciesFulfilled = null;
                t();
              }
            }
            function abort(e) {
              Module.onAbort?.(e);
              err(e = `Aborted(${e})`);
              ABORT = true;
              EXITSTATUS = 1;
              e += '. Build with -sASSERTIONS for more info.';
              throw new WebAssembly.RuntimeError(e);
            }
            var dataURIPrefix = 'data:application/octet-stream;base64,';
            var isDataURI = e => e.startsWith(dataURIPrefix);
            var isFileURI = e => e.startsWith('file://');
            var wasmBinaryFile;
            function findWasmBinary() {
              var e = 'tree-sitter.wasm';
              if (isDataURI(e)) {
                return e;
              } else {
                return locateFile(e);
              }
            }
            function getBinarySync(e) {
              if (e == wasmBinaryFile && wasmBinary) {
                return new Uint8Array(wasmBinary);
              }
              if (readBinary) {
                return readBinary(e);
              }
              throw 'both async and sync fetching of the wasm failed';
            }
            function getBinaryPromise(e) {
              if (wasmBinary) {
                return Promise.resolve().then(() => getBinarySync(e));
              } else {
                return readAsync(e).then(e => new Uint8Array(e), () => getBinarySync(e));
              }
            }
            function instantiateArrayBuffer(e, t, n) {
              return getBinaryPromise(e).then(e => WebAssembly.instantiate(e, t)).then(n, e => {
                err(`failed to asynchronously prepare wasm: ${e}`);
                abort(e);
              });
            }
            function instantiateAsync(e, t, n, r) {
              if (e || typeof WebAssembly.instantiateStreaming != 'function' || isDataURI(t) || isFileURI(t) || ENVIRONMENT_IS_NODE || typeof fetch != 'function') {
                return instantiateArrayBuffer(t, n, r);
              } else {
                return fetch(t, {
                  credentials: 'same-origin'
                }).then(e => WebAssembly.instantiateStreaming(e, n).then(r, function (e) {
                  err(`wasm streaming compile failed: ${e}`);
                  err('falling back to ArrayBuffer instantiation');
                  return instantiateArrayBuffer(t, n, r);
                }));
              }
            }
            function getWasmImports() {
              return {
                env: wasmImports,
                wasi_snapshot_preview1: wasmImports,
                'GOT.mem': new Proxy(wasmImports, GOTHandler),
                'GOT.func': new Proxy(wasmImports, GOTHandler)
              };
            }
            function createWasm() {
              var e = getWasmImports();
              function t(e, t) {
                wasmExports = e.exports;
                wasmExports = relocateExports(wasmExports, 1024);
                var n = getDylinkMetadata(t);
                if (n.neededDynlibs) {
                  dynamicLibraries = n.neededDynlibs.concat(dynamicLibraries);
                }
                mergeLibSymbols(wasmExports, 'main');
                LDSO.init();
                loadDylibs();
                addOnInit(wasmExports.__wasm_call_ctors);
                __RELOC_FUNCS__.push(wasmExports.__wasm_apply_data_relocs);
                removeRunDependency('wasm-instantiate');
                return wasmExports;
              }
              addRunDependency('wasm-instantiate');
              if (Module.instantiateWasm) {
                try {
                  return Module.instantiateWasm(e, t);
                } catch (e) {
                  err(`Module.instantiateWasm callback failed with error: ${e}`);
                  return false;
                }
              }
              if (!wasmBinaryFile) {
                wasmBinaryFile = findWasmBinary();
              }
              instantiateAsync(wasmBinary, wasmBinaryFile, e, function (e) {
                t(e.instance, e.module);
              });
              return {};
            }
            var ASM_CONSTS = {};
            function ExitStatus(e) {
              this.name = 'ExitStatus';
              this.message = `Program terminated with exit(${e})`;
              this.status = e;
            }
            var GOT = {};
            var currentModuleWeakSymbols = new Set([]);
            var GOTHandler = {
              get(e, t) {
                var n = GOT[t];
                if (!n) {
                  n = GOT[t] = new WebAssembly.Global({
                    value: 'i32',
                    mutable: true
                  });
                }
                if (!currentModuleWeakSymbols.has(t)) {
                  n.required = true;
                }
                return n;
              }
            };
            var LE_HEAP_LOAD_F32 = e => HEAP_DATA_VIEW.getFloat32(e, true);
            var LE_HEAP_LOAD_F64 = e => HEAP_DATA_VIEW.getFloat64(e, true);
            var LE_HEAP_LOAD_I16 = e => HEAP_DATA_VIEW.getInt16(e, true);
            var LE_HEAP_LOAD_I32 = e => HEAP_DATA_VIEW.getInt32(e, true);
            var LE_HEAP_LOAD_U32 = e => HEAP_DATA_VIEW.getUint32(e, true);
            var LE_HEAP_STORE_F32 = (e, t) => HEAP_DATA_VIEW.setFloat32(e, t, true);
            var LE_HEAP_STORE_F64 = (e, t) => HEAP_DATA_VIEW.setFloat64(e, t, true);
            var LE_HEAP_STORE_I16 = (e, t) => HEAP_DATA_VIEW.setInt16(e, t, true);
            var LE_HEAP_STORE_I32 = (e, t) => HEAP_DATA_VIEW.setInt32(e, t, true);
            var LE_HEAP_STORE_U32 = (e, t) => HEAP_DATA_VIEW.setUint32(e, t, true);
            var callRuntimeCallbacks = e => {
              while (e.length > 0) {
                e.shift()(Module);
              }
            };
            var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;
            var UTF8ArrayToString = (e, t, n) => {
              for (var r = t + n, o = t; e[o] && !(o >= r);) {
                ++o;
              }
              if (o - t > 16 && e.buffer && UTF8Decoder) {
                return UTF8Decoder.decode(e.subarray(t, o));
              }
              var s = '';
              while (t < o) {
                var a = e[t++];
                if (a & 128) {
                  var A = e[t++] & 63;
                  if ((a & 224) != 192) {
                    var c = e[t++] & 63;
                    if ((a = (a & 240) == 224 ? (a & 15) << 12 | A << 6 | c : (a & 7) << 18 | A << 12 | c << 6 | e[t++] & 63) < 65536) {
                      s += String.fromCharCode(a);
                    } else {
                      var u = a - 65536;
                      s += String.fromCharCode(u >> 10 | 55296, u & 1023 | 56320);
                    }
                  } else {
                    s += String.fromCharCode((a & 31) << 6 | A);
                  }
                } else {
                  s += String.fromCharCode(a);
                }
              }
              return s;
            };
            var getDylinkMetadata = e => {
              var t = 0;
              var n = 0;
              function r() {
                var n = 0;
                var r = 1;
                while (true) {
                  var o = e[t++];
                  n += (o & 127) * r;
                  r *= 128;
                  if (!(o & 128)) {
                    break;
                  }
                }
                return n;
              }
              function o() {
                var n = r();
                return UTF8ArrayToString(e, (t += n) - n, n);
              }
              function s(e, t) {
                if (e) {
                  throw new Error(t);
                }
              }
              var a = 'dylink.0';
              if (e instanceof WebAssembly.Module) {
                var A = WebAssembly.Module.customSections(e, a);
                if (A.length === 0) {
                  a = 'dylink';
                  A = WebAssembly.Module.customSections(e, a);
                }
                s(A.length === 0, 'need dylink section');
                n = (e = new Uint8Array(A[0])).length;
              } else {
                var c = new Uint32Array(new Uint8Array(e.subarray(0, 24)).buffer);
                s(c[0] != 1836278016 && c[0] != 6386541, 'need to see wasm magic number');
                s(e[8] !== 0, 'need the dylink section to be first');
                t = 9;
                var u = r();
                n = t + u;
                a = o();
              }
              var l = {
                neededDynlibs: [],
                tlsExports: new Set(),
                weakImports: new Set()
              };
              if (a == 'dylink') {
                l.memorySize = r();
                l.memoryAlign = r();
                l.tableSize = r();
                l.tableAlign = r();
                for (var g = r(), d = 0; d < g; ++d) {
                  var h = o();
                  l.neededDynlibs.push(h);
                }
              } else {
                s(a !== 'dylink.0');
                while (t < n) {
                  var f = e[t++];
                  var p = r();
                  if (f === 1) {
                    l.memorySize = r();
                    l.memoryAlign = r();
                    l.tableSize = r();
                    l.tableAlign = r();
                  } else {
                    if (f === 2) {
                      g = r();
                      d = 0;
                      for (; d < g; ++d) {
                        h = o();
                        l.neededDynlibs.push(h);
                      }
                    } else {
                      if (f === 3) {
                        for (var m = r(); m--;) {
                          var I = o();
                          if (r() & 256) {
                            l.tlsExports.add(I);
                          }
                        }
                      } else {
                        if (f === 4) {
                          for (m = r(); m--;) {
                            o();
                            I = o();
                            if ((r() & 3) == 1) {
                              l.weakImports.add(I);
                            }
                          }
                        } else {
                          t += p;
                        }
                      }
                    }
                  }
                }
              }
              return l;
            };
            function getValue(e, t = 'i8') {
              if (t.endsWith('*')) {
                t = '*';
              }
              switch (t) {
                case 'i1':
                case 'i8':
                  return HEAP8[e];
                case 'i16':
                  return LE_HEAP_LOAD_I16((e >> 1) * 2);
                case 'i32':
                  return LE_HEAP_LOAD_I32((e >> 2) * 4);
                case 'i64':
                  abort('to do getValue(i64) use WASM_BIGINT');
                case 'float':
                  return LE_HEAP_LOAD_F32((e >> 2) * 4);
                case 'double':
                  return LE_HEAP_LOAD_F64((e >> 3) * 8);
                case '*':
                  return LE_HEAP_LOAD_U32((e >> 2) * 4);
                default:
                  abort(`invalid type for getValue: ${t}`);
              }
            }
            var newDSO = (e, t, n) => {
              var r = {
                refcount: Infinity,
                name: e,
                exports: n,
                global: true
              };
              LDSO.loadedLibsByName[e] = r;
              if (t != null) {
                LDSO.loadedLibsByHandle[t] = r;
              }
              return r;
            };
            var LDSO = {
              loadedLibsByName: {},
              loadedLibsByHandle: {},
              init() {
                newDSO('__main__', 0, wasmImports);
              }
            };
            var ___heap_base = 78112;
            var zeroMemory = (e, t) => {
              HEAPU8.fill(0, e, e + t);
              return e;
            };
            var alignMemory = (e, t) => Math.ceil(e / t) * t;
            var getMemory = e => {
              if (runtimeInitialized) {
                return zeroMemory(_malloc(e), e);
              }
              var t = ___heap_base;
              var n = t + alignMemory(e, 16);
              ___heap_base = n;
              GOT.__heap_base.value = n;
              return t;
            };
            var isInternalSym = e => ['__cpp_exception', '__c_longjmp', '__wasm_apply_data_relocs', '__dso_handle', '__tls_size', '__tls_align', '__set_stack_limits', '_emscripten_tls_init', '__wasm_init_tls', '__wasm_call_ctors', '__start_em_asm', '__stop_em_asm', '__start_em_js', '__stop_em_js'].includes(e) || e.startsWith('__em_js__');
            var uleb128Encode = (e, t) => {
              if (e < 128) {
                t.push(e);
              } else {
                t.push(e % 128 | 128, e >> 7);
              }
            };
            var sigToWasmTypes = e => {
              var t = {
                i: 'i32',
                j: 'i64',
                f: 'f32',
                d: 'f64',
                e: 'externref',
                p: 'i32'
              };
              var n = {
                parameters: [],
                results: e[0] == 'v' ? [] : [t[e[0]]]
              };
              for (var r = 1; r < e.length; ++r) {
                n.parameters.push(t[e[r]]);
              }
              return n;
            };
            var generateFuncType = (e, t) => {
              var n = e.slice(0, 1);
              var r = e.slice(1);
              var o = {
                i: 127,
                p: 127,
                j: 126,
                f: 125,
                d: 124,
                e: 111
              };
              t.push(96);
              uleb128Encode(r.length, t);
              for (var s = 0; s < r.length; ++s) {
                t.push(o[r[s]]);
              }
              if (n == 'v') {
                t.push(0);
              } else {
                t.push(1, o[n]);
              }
            };
            var convertJsFunctionToWasm = (e, t) => {
              if (typeof WebAssembly.Function == 'function') {
                return new WebAssembly.Function(sigToWasmTypes(t), e);
              }
              var n = [1];
              generateFuncType(t, n);
              var r = [0, 97, 115, 109, 1, 0, 0, 0, 1];
              uleb128Encode(n.length, r);
              r.push(...n);
              r.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);
              var o = new WebAssembly.Module(new Uint8Array(r));
              return new WebAssembly.Instance(o, {
                e: {
                  f: e
                }
              }).exports.f;
            };
            var wasmTableMirror = [];
            var wasmTable = new WebAssembly.Table({
              initial: 28,
              element: 'anyfunc'
            });
            var getWasmTableEntry = e => {
              var t = wasmTableMirror[e];
              if (!t) {
                if (e >= wasmTableMirror.length) {
                  wasmTableMirror.length = e + 1;
                }
                wasmTableMirror[e] = t = wasmTable.get(e);
              }
              return t;
            };
            var updateTableMap = (e, t) => {
              if (functionsInTableMap) {
                for (var n = e; n < e + t; n++) {
                  var r = getWasmTableEntry(n);
                  if (r) {
                    functionsInTableMap.set(r, n);
                  }
                }
              }
            };
            var functionsInTableMap;
            var getFunctionAddress = e => {
              if (!functionsInTableMap) {
                functionsInTableMap = new WeakMap();
                updateTableMap(0, wasmTable.length);
              }
              return functionsInTableMap.get(e) || 0;
            };
            var freeTableIndexes = [];
            var getEmptyTableSlot = () => {
              if (freeTableIndexes.length) {
                return freeTableIndexes.pop();
              }
              try {
                wasmTable.grow(1);
              } catch (e) {
                if (!(e instanceof RangeError)) {
                  throw e;
                }
                throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';
              }
              return wasmTable.length - 1;
            };
            var setWasmTableEntry = (e, t) => {
              wasmTable.set(e, t);
              wasmTableMirror[e] = wasmTable.get(e);
            };
            var addFunction = (e, t) => {
              var n = getFunctionAddress(e);
              if (n) {
                return n;
              }
              var r = getEmptyTableSlot();
              try {
                setWasmTableEntry(r, e);
              } catch (n) {
                if (!(n instanceof TypeError)) {
                  throw n;
                }
                var o = convertJsFunctionToWasm(e, t);
                setWasmTableEntry(r, o);
              }
              functionsInTableMap.set(e, r);
              return r;
            };
            var updateGOT = (e, t) => {
              for (var n in e) {
                if (!isInternalSym(n)) {
                  var r = e[n];
                  if (n.startsWith('orig$')) {
                    n = n.split('$')[1];
                    t = true;
                  }
                  GOT[n] ||= new WebAssembly.Global({
                    value: 'i32',
                    mutable: true
                  });
                  if (t || GOT[n].value == 0) {
                    if (typeof r == 'function') {
                      GOT[n].value = addFunction(r);
                    } else {
                      if (typeof r == 'number') {
                        GOT[n].value = r;
                      } else {
                        err(`unhandled export type for '${n}': ${typeof r}`);
                      }
                    }
                  }
                }
              }
            };
            var relocateExports = (e, t, n) => {
              var r = {};
              for (var o in e) {
                var s = e[o];
                if (typeof s == 'object') {
                  s = s.value;
                }
                if (typeof s == 'number') {
                  s += t;
                }
                r[o] = s;
              }
              updateGOT(r, n);
              return r;
            };
            var isSymbolDefined = e => {
              var t = wasmImports[e];
              return !!t && !t.stub;
            };
            var dynCallLegacy = (e, t, n) => {
              e = e.replace(/p/g, 'i');
              return Module[`dynCall_${e}`](t, ...n);
            };
            var dynCall = (e, t, n = []) => e.includes('j') ? dynCallLegacy(e, t, n) : getWasmTableEntry(t)(...n);
            var stackSave = () => _emscripten_stack_get_current();
            var stackRestore = e => __emscripten_stack_restore(e);
            var createInvokeFunction = e => (t, ...n) => {
              var r = stackSave();
              try {
                return dynCall(e, t, n);
              } catch (e) {
                stackRestore(r);
                if (e !== e + 0) {
                  throw e;
                }
                _setThrew(1, 0);
              }
            };
            var resolveGlobalSymbol = (e, t = false) => {
              var n;
              if (t && `orig\$${e}` in wasmImports) {
                e = `orig\$${e}`;
              }
              if (isSymbolDefined(e)) {
                n = wasmImports[e];
              } else {
                if (e.startsWith('invoke_')) {
                  n = wasmImports[e] = createInvokeFunction(e.split('_')[1]);
                }
              }
              return {
                sym: n,
                name: e
              };
            };
            var UTF8ToString = (e, t) => e ? UTF8ArrayToString(HEAPU8, e, t) : '';
            var loadWebAssemblyModule = (binary, flags, libName, localScope, handle) => {
              var metadata = getDylinkMetadata(binary);
              function loadModule() {
                var firstLoad = !handle || !HEAP8[handle + 8];
                if (firstLoad) {
                  var memAlign = Math.pow(2, metadata.memoryAlign);
                  var memoryBase = metadata.memorySize ? alignMemory(getMemory(metadata.memorySize + memAlign), memAlign) : 0;
                  var tableBase = metadata.tableSize ? wasmTable.length : 0;
                  if (handle) {
                    HEAP8[handle + 8] = 1;
                    LE_HEAP_STORE_U32((handle + 12 >> 2) * 4, memoryBase);
                    LE_HEAP_STORE_I32((handle + 16 >> 2) * 4, metadata.memorySize);
                    LE_HEAP_STORE_U32((handle + 20 >> 2) * 4, tableBase);
                    LE_HEAP_STORE_I32((handle + 24 >> 2) * 4, metadata.tableSize);
                  }
                } else {
                  memoryBase = LE_HEAP_LOAD_U32((handle + 12 >> 2) * 4);
                  tableBase = LE_HEAP_LOAD_U32((handle + 20 >> 2) * 4);
                }
                var tableGrowthNeeded = tableBase + metadata.tableSize - wasmTable.length;
                var moduleExports;
                function resolveSymbol(e) {
                  var t = resolveGlobalSymbol(e).sym;
                  if (!t && localScope) {
                    t = localScope[e];
                  }
                  if (!t) {
                    t = moduleExports[e];
                  }
                  return t;
                }
                if (tableGrowthNeeded > 0) {
                  wasmTable.grow(tableGrowthNeeded);
                }
                var proxyHandler = {
                  get(e, t) {
                    switch (t) {
                      case '__memory_base':
                        return memoryBase;
                      case '__table_base':
                        return tableBase;
                    }
                    if (t in wasmImports && !wasmImports[t].stub) {
                      return wasmImports[t];
                    }
                    var n;
                    if (!(t in e)) {
                      e[t] = (...e) => {
                        n ||= resolveSymbol(t);
                        return n(...e);
                      };
                    }
                    return e[t];
                  }
                };
                var proxy = new Proxy({}, proxyHandler);
                var info = {
                  'GOT.mem': new Proxy({}, GOTHandler),
                  'GOT.func': new Proxy({}, GOTHandler),
                  env: proxy,
                  wasi_snapshot_preview1: proxy
                };
                function postInstantiation(module, instance) {
                  function addEmAsm(addr, body) {
                    var args = [];
                    for (var arity = 0; arity < 16 && body.indexOf(`\$${arity}`) != -1; arity++) {
                      args.push(`\$${arity}`);
                    }
                    args = args.join(',');
                    var func = `(${args}) => { ${body} };`;
                    ASM_CONSTS[start] = eval(func);
                  }
                  updateTableMap(tableBase, metadata.tableSize);
                  moduleExports = relocateExports(instance.exports, memoryBase);
                  if (!flags.allowUndefined) {
                    reportUndefinedSymbols();
                  }
                  if ('__start_em_asm' in moduleExports) {
                    for (var start = moduleExports.__start_em_asm, stop = moduleExports.__stop_em_asm; start < stop;) {
                      var jsString = UTF8ToString(start);
                      addEmAsm(start, jsString);
                      start = HEAPU8.indexOf(0, start) + 1;
                    }
                  }
                  function addEmJs(name, cSig, body) {
                    var jsArgs = [];
                    cSig = cSig.slice(1, -1);
                    if (cSig != 'void') {
                      cSig = cSig.split(',');
                      for (var i in cSig) {
                        var jsArg = cSig[i].split(' ').pop();
                        jsArgs.push(jsArg.replace('*', ''));
                      }
                    }
                    var func = `(${jsArgs}) => ${body};`;
                    moduleExports[name] = eval(func);
                  }
                  for (var name in moduleExports) {
                    if (name.startsWith('__em_js__')) {
                      var start = moduleExports[name];
                      var jsString = UTF8ToString(start);
                      var parts = jsString.split('<::>');
                      addEmJs(name.replace('__em_js__', ''), parts[0], parts[1]);
                      delete moduleExports[name];
                    }
                  }
                  var applyRelocs = moduleExports.__wasm_apply_data_relocs;
                  if (applyRelocs) {
                    if (runtimeInitialized) {
                      applyRelocs();
                    } else {
                      __RELOC_FUNCS__.push(applyRelocs);
                    }
                  }
                  var init = moduleExports.__wasm_call_ctors;
                  if (init) {
                    if (runtimeInitialized) {
                      init();
                    } else {
                      __ATINIT__.push(init);
                    }
                  }
                  return moduleExports;
                }
                if (flags.loadAsync) {
                  if (binary instanceof WebAssembly.Module) {
                    var instance = new WebAssembly.Instance(binary, info);
                    return Promise.resolve(postInstantiation(binary, instance));
                  }
                  return WebAssembly.instantiate(binary, info).then(e => postInstantiation(e.module, e.instance));
                }
                var module = binary instanceof WebAssembly.Module ? binary : new WebAssembly.Module(binary);
                var instance = new WebAssembly.Instance(module, info);
                return postInstantiation(module, instance);
              }
              currentModuleWeakSymbols = metadata.weakImports;
              if (flags.loadAsync) {
                return metadata.neededDynlibs.reduce((e, t) => e.then(() => loadDynamicLibrary(t, flags, localScope)), Promise.resolve()).then(loadModule);
              } else {
                metadata.neededDynlibs.forEach(e => loadDynamicLibrary(e, flags, localScope));
                return loadModule();
              }
            };
            var mergeLibSymbols = (e, t) => {
              for (var [n, r] of Object.entries(e)) {
                const e = e => {
                  if (!isSymbolDefined(e)) {
                    wasmImports[e] = r;
                  }
                };
                e(n);
                const t = '__main_argc_argv';
                if (n == 'main') {
                  e(t);
                }
                if (n == t) {
                  e('main');
                }
                if (n.startsWith('dynCall_') && !Module.hasOwnProperty(n)) {
                  Module[n] = r;
                }
              }
            };
            var asyncLoad = (e, t, n, r) => {
              var o = r ? '' : getUniqueRunDependency(`al ${e}`);
              readAsync(e).then(e => {
                t(new Uint8Array(e));
                if (o) {
                  removeRunDependency(o);
                }
              }, t => {
                if (!n) {
                  throw `Loading data file "${e}" failed.`;
                }
                n();
              });
              if (o) {
                addRunDependency(o);
              }
            };
            function loadDynamicLibrary(e, t = {
              global: true,
              nodelete: true
            }, n, r) {
              var o = LDSO.loadedLibsByName[e];
              if (o) {
                if (t.global) {
                  if (!o.global) {
                    o.global = true;
                    mergeLibSymbols(o.exports, e);
                  }
                } else {
                  if (n) {
                    Object.assign(n, o.exports);
                  }
                }
                if (t.nodelete && o.refcount !== Infinity) {
                  o.refcount = Infinity;
                }
                o.refcount++;
                if (r) {
                  LDSO.loadedLibsByHandle[r] = o;
                }
                return !t.loadAsync || Promise.resolve(true);
              }
              function s() {
                if (r) {
                  var n = LE_HEAP_LOAD_U32((r + 28 >> 2) * 4);
                  var o = LE_HEAP_LOAD_U32((r + 32 >> 2) * 4);
                  if (n && o) {
                    var s = HEAP8.slice(n, n + o);
                    if (t.loadAsync) {
                      return Promise.resolve(s);
                    } else {
                      return s;
                    }
                  }
                }
                var a = locateFile(e);
                if (t.loadAsync) {
                  return new Promise(function (e, t) {
                    asyncLoad(a, e, t);
                  });
                }
                if (!readBinary) {
                  throw new Error(`${a}: file not found, and synchronous loading of external files is not available`);
                }
                return readBinary(a);
              }
              function a() {
                if (t.loadAsync) {
                  return s().then(o => loadWebAssemblyModule(o, t, e, n, r));
                } else {
                  return loadWebAssemblyModule(s(), t, e, n, r);
                }
              }
              function A(t) {
                if (o.global) {
                  mergeLibSymbols(t, e);
                } else {
                  if (n) {
                    Object.assign(n, t);
                  }
                }
                o.exports = t;
              }
              (o = newDSO(e, r, 'loading')).refcount = t.nodelete ? Infinity : 1;
              o.global = t.global;
              if (t.loadAsync) {
                return a().then(e => {
                  A(e);
                  return true;
                });
              } else {
                A(a());
                return true;
              }
            }
            var reportUndefinedSymbols = () => {
              for (var [e, t] of Object.entries(GOT)) {
                if (t.value == 0) {
                  var n = resolveGlobalSymbol(e, true).sym;
                  if (!n && !t.required) {
                    continue;
                  }
                  if (typeof n == 'function') {
                    t.value = addFunction(n, n.sig);
                  } else {
                    if (typeof n != 'number') {
                      throw new Error(`bad export type for '${e}': ${typeof n}`);
                    }
                    t.value = n;
                  }
                }
              }
            };
            var loadDylibs = () => {
              if (dynamicLibraries.length) {
                addRunDependency('loadDylibs');
                dynamicLibraries.reduce((e, t) => e.then(() => loadDynamicLibrary(t, {
                  loadAsync: true,
                  global: true,
                  nodelete: true,
                  allowUndefined: true
                })), Promise.resolve()).then(() => {
                  reportUndefinedSymbols();
                  removeRunDependency('loadDylibs');
                });
              } else {
                reportUndefinedSymbols();
              }
            };
            var noExitRuntime = Module.noExitRuntime || true;
            function setValue(e, t, n = 'i8') {
              if (n.endsWith('*')) {
                n = '*';
              }
              switch (n) {
                case 'i1':
                case 'i8':
                  HEAP8[e] = t;
                  break;
                case 'i16':
                  LE_HEAP_STORE_I16((e >> 1) * 2, t);
                  break;
                case 'i32':
                  LE_HEAP_STORE_I32((e >> 2) * 4, t);
                  break;
                case 'i64':
                  abort('to do setValue(i64) use WASM_BIGINT');
                case 'float':
                  LE_HEAP_STORE_F32((e >> 2) * 4, t);
                  break;
                case 'double':
                  LE_HEAP_STORE_F64((e >> 3) * 8, t);
                  break;
                case '*':
                  LE_HEAP_STORE_U32((e >> 2) * 4, t);
                  break;
                default:
                  abort(`invalid type for setValue: ${n}`);
              }
            }
            var ___memory_base = new WebAssembly.Global({
              value: 'i32',
              mutable: false
            }, 1024);
            var ___stack_pointer = new WebAssembly.Global({
              value: 'i32',
              mutable: true
            }, 78112);
            var ___table_base = new WebAssembly.Global({
              value: 'i32',
              mutable: false
            }, 1);
            var __abort_js = () => {
              abort('');
            };
            __abort_js.sig = 'v';
            var nowIsMonotonic = 1;
            var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;
            __emscripten_get_now_is_monotonic.sig = 'i';
            var __emscripten_memcpy_js = (e, t, n) => HEAPU8.copyWithin(e, t, t + n);
            __emscripten_memcpy_js.sig = 'vppp';
            var _emscripten_date_now = () => Date.now();
            var _emscripten_get_now;
            _emscripten_date_now.sig = 'd';
            _emscripten_get_now = () => performance.now();
            _emscripten_get_now.sig = 'd';
            var getHeapMax = () => 2147483648;
            var growMemory = e => {
              var t = (e - wasmMemory.buffer.byteLength + 65535) / 65536;
              try {
                wasmMemory.grow(t);
                updateMemoryViews();
                return 1;
              } catch (e) {}
            };
            var _emscripten_resize_heap = e => {
              var t = HEAPU8.length;
              e >>>= 0;
              var n = getHeapMax();
              if (e > n) {
                return false;
              }
              var r;
              var o;
              for (var s = 1; s <= 4; s *= 2) {
                var a = t * (1 + 0.2 / s);
                a = Math.min(a, e + 100663296);
                var A = Math.min(n, (r = Math.max(e, a)) + ((o = 65536) - r % o) % o);
                if (growMemory(A)) {
                  return true;
                }
              }
              return false;
            };
            _emscripten_resize_heap.sig = 'ip';
            var _fd_close = e => 52;
            _fd_close.sig = 'ii';
            var convertI32PairToI53Checked = (e, t) => t + 2097152 >>> 0 < 4194305 - !!e ? (e >>> 0) + t * 4294967296 : NaN;
            function _fd_seek(e, t, n, r, o) {
              convertI32PairToI53Checked(t, n);
              return 70;
            }
            _fd_seek.sig = 'iiiiip';
            var printCharBuffers = [null, [], []];
            var printChar = (e, t) => {
              var n = printCharBuffers[e];
              if (t === 0 || t === 10) {
                (e === 1 ? out : err)(UTF8ArrayToString(n, 0));
                n.length = 0;
              } else {
                n.push(t);
              }
            };
            var _fd_write = (e, t, n, r) => {
              var o = 0;
              for (var s = 0; s < n; s++) {
                var a = LE_HEAP_LOAD_U32((t >> 2) * 4);
                var A = LE_HEAP_LOAD_U32((t + 4 >> 2) * 4);
                t += 8;
                for (var c = 0; c < A; c++) {
                  printChar(e, HEAPU8[a + c]);
                }
                o += A;
              }
              LE_HEAP_STORE_U32((r >> 2) * 4, o);
              return 0;
            };
            function _tree_sitter_log_callback(e, t) {
              if (currentLogCallback) {
                const n = UTF8ToString(t);
                currentLogCallback(n, e !== 0);
              }
            }
            function _tree_sitter_parse_callback(e, t, n, r, o) {
              const s = currentParseCallback(t, {
                row: n,
                column: r
              });
              if (typeof s == 'string') {
                setValue(o, s.length, 'i32');
                stringToUTF16(s, e, 10240);
              } else {
                setValue(o, 0, 'i32');
              }
            }
            _fd_write.sig = 'iippp';
            var runtimeKeepaliveCounter = 0;
            var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;
            var _proc_exit = e => {
              EXITSTATUS = e;
              if (!keepRuntimeAlive()) {
                Module.onExit?.(e);
                ABORT = true;
              }
              quit_(e, new ExitStatus(e));
            };
            _proc_exit.sig = 'vi';
            var exitJS = (e, t) => {
              EXITSTATUS = e;
              _proc_exit(e);
            };
            var handleException = e => {
              if (e instanceof ExitStatus || e == 'unwind') {
                return EXITSTATUS;
              }
              quit_(1, e);
            };
            var lengthBytesUTF8 = e => {
              var t = 0;
              for (var n = 0; n < e.length; ++n) {
                var r = e.charCodeAt(n);
                if (r <= 127) {
                  t++;
                } else {
                  if (r <= 2047) {
                    t += 2;
                  } else {
                    if (r >= 55296 && r <= 57343) {
                      t += 4;
                      ++n;
                    } else {
                      t += 3;
                    }
                  }
                }
              }
              return t;
            };
            var stringToUTF8Array = (e, t, n, r) => {
              if (!(r > 0)) {
                return 0;
              }
              var o = n;
              var s = n + r - 1;
              for (var a = 0; a < e.length; ++a) {
                var A = e.charCodeAt(a);
                if (A >= 55296 && A <= 57343) {
                  A = 65536 + ((A & 1023) << 10) | e.charCodeAt(++a) & 1023;
                }
                if (A <= 127) {
                  if (n >= s) {
                    break;
                  }
                  t[n++] = A;
                } else {
                  if (A <= 2047) {
                    if (n + 1 >= s) {
                      break;
                    }
                    t[n++] = A >> 6 | 192;
                    t[n++] = A & 63 | 128;
                  } else {
                    if (A <= 65535) {
                      if (n + 2 >= s) {
                        break;
                      }
                      t[n++] = A >> 12 | 224;
                      t[n++] = A >> 6 & 63 | 128;
                      t[n++] = A & 63 | 128;
                    } else {
                      if (n + 3 >= s) {
                        break;
                      }
                      t[n++] = A >> 18 | 240;
                      t[n++] = A >> 12 & 63 | 128;
                      t[n++] = A >> 6 & 63 | 128;
                      t[n++] = A & 63 | 128;
                    }
                  }
                }
              }
              t[n] = 0;
              return n - o;
            };
            var stringToUTF8 = (e, t, n) => stringToUTF8Array(e, HEAPU8, t, n);
            var stackAlloc = e => __emscripten_stack_alloc(e);
            var stringToUTF8OnStack = e => {
              var t = lengthBytesUTF8(e) + 1;
              var n = stackAlloc(t);
              stringToUTF8(e, n, t);
              return n;
            };
            var stringToUTF16 = (e, t, n) => {
              n ??= 2147483647;
              if (n < 2) {
                return 0;
              }
              var r = t;
              for (var o = (n -= 2) < e.length * 2 ? n / 2 : e.length, s = 0; s < o; ++s) {
                var a = e.charCodeAt(s);
                LE_HEAP_STORE_I16((t >> 1) * 2, a);
                t += 2;
              }
              LE_HEAP_STORE_I16((t >> 1) * 2, 0);
              return t - r;
            };
            var AsciiToString = e => {
              var t = '';
              while (true) {
                var n = HEAPU8[e++];
                if (!n) {
                  return t;
                }
                t += String.fromCharCode(n);
              }
            };
            var wasmImports = {
              __heap_base: ___heap_base,
              __indirect_function_table: wasmTable,
              __memory_base: ___memory_base,
              __stack_pointer: ___stack_pointer,
              __table_base: ___table_base,
              _abort_js: __abort_js,
              _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,
              _emscripten_memcpy_js: __emscripten_memcpy_js,
              emscripten_get_now: _emscripten_get_now,
              emscripten_resize_heap: _emscripten_resize_heap,
              fd_close: _fd_close,
              fd_seek: _fd_seek,
              fd_write: _fd_write,
              memory: wasmMemory,
              tree_sitter_log_callback: _tree_sitter_log_callback,
              tree_sitter_parse_callback: _tree_sitter_parse_callback
            };
            var wasmExports = createWasm();
            var ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports.__wasm_call_ctors)();
            var ___wasm_apply_data_relocs = () => (___wasm_apply_data_relocs = wasmExports.__wasm_apply_data_relocs)();
            var _malloc = Module._malloc = e => (_malloc = Module._malloc = wasmExports.malloc)(e);
            var _calloc = Module._calloc = (e, t) => (_calloc = Module._calloc = wasmExports.calloc)(e, t);
            var _realloc = Module._realloc = (e, t) => (_realloc = Module._realloc = wasmExports.realloc)(e, t);
            var _free = Module._free = e => (_free = Module._free = wasmExports.free)(e);
            var _ts_language_symbol_count = Module._ts_language_symbol_count = e => (_ts_language_symbol_count = Module._ts_language_symbol_count = wasmExports.ts_language_symbol_count)(e);
            var _ts_language_state_count = Module._ts_language_state_count = e => (_ts_language_state_count = Module._ts_language_state_count = wasmExports.ts_language_state_count)(e);
            var _ts_language_version = Module._ts_language_version = e => (_ts_language_version = Module._ts_language_version = wasmExports.ts_language_version)(e);
            var _ts_language_field_count = Module._ts_language_field_count = e => (_ts_language_field_count = Module._ts_language_field_count = wasmExports.ts_language_field_count)(e);
            var _ts_language_next_state = Module._ts_language_next_state = (e, t, n) => (_ts_language_next_state = Module._ts_language_next_state = wasmExports.ts_language_next_state)(e, t, n);
            var _ts_language_symbol_name = Module._ts_language_symbol_name = (e, t) => (_ts_language_symbol_name = Module._ts_language_symbol_name = wasmExports.ts_language_symbol_name)(e, t);
            var _ts_language_symbol_for_name = Module._ts_language_symbol_for_name = (e, t, n, r) => (_ts_language_symbol_for_name = Module._ts_language_symbol_for_name = wasmExports.ts_language_symbol_for_name)(e, t, n, r);
            var _strncmp = Module._strncmp = (e, t, n) => (_strncmp = Module._strncmp = wasmExports.strncmp)(e, t, n);
            var _ts_language_symbol_type = Module._ts_language_symbol_type = (e, t) => (_ts_language_symbol_type = Module._ts_language_symbol_type = wasmExports.ts_language_symbol_type)(e, t);
            var _ts_language_field_name_for_id = Module._ts_language_field_name_for_id = (e, t) => (_ts_language_field_name_for_id = Module._ts_language_field_name_for_id = wasmExports.ts_language_field_name_for_id)(e, t);
            var _ts_lookahead_iterator_new = Module._ts_lookahead_iterator_new = (e, t) => (_ts_lookahead_iterator_new = Module._ts_lookahead_iterator_new = wasmExports.ts_lookahead_iterator_new)(e, t);
            var _ts_lookahead_iterator_delete = Module._ts_lookahead_iterator_delete = e => (_ts_lookahead_iterator_delete = Module._ts_lookahead_iterator_delete = wasmExports.ts_lookahead_iterator_delete)(e);
            var _ts_lookahead_iterator_reset_state = Module._ts_lookahead_iterator_reset_state = (e, t) => (_ts_lookahead_iterator_reset_state = Module._ts_lookahead_iterator_reset_state = wasmExports.ts_lookahead_iterator_reset_state)(e, t);
            var _ts_lookahead_iterator_reset = Module._ts_lookahead_iterator_reset = (e, t, n) => (_ts_lookahead_iterator_reset = Module._ts_lookahead_iterator_reset = wasmExports.ts_lookahead_iterator_reset)(e, t, n);
            var _ts_lookahead_iterator_next = Module._ts_lookahead_iterator_next = e => (_ts_lookahead_iterator_next = Module._ts_lookahead_iterator_next = wasmExports.ts_lookahead_iterator_next)(e);
            var _ts_lookahead_iterator_current_symbol = Module._ts_lookahead_iterator_current_symbol = e => (_ts_lookahead_iterator_current_symbol = Module._ts_lookahead_iterator_current_symbol = wasmExports.ts_lookahead_iterator_current_symbol)(e);
            var _memset = Module._memset = (e, t, n) => (_memset = Module._memset = wasmExports.memset)(e, t, n);
            var _memcpy = Module._memcpy = (e, t, n) => (_memcpy = Module._memcpy = wasmExports.memcpy)(e, t, n);
            var _ts_parser_delete = Module._ts_parser_delete = e => (_ts_parser_delete = Module._ts_parser_delete = wasmExports.ts_parser_delete)(e);
            var _ts_parser_reset = Module._ts_parser_reset = e => (_ts_parser_reset = Module._ts_parser_reset = wasmExports.ts_parser_reset)(e);
            var _ts_parser_set_language = Module._ts_parser_set_language = (e, t) => (_ts_parser_set_language = Module._ts_parser_set_language = wasmExports.ts_parser_set_language)(e, t);
            var _ts_parser_timeout_micros = Module._ts_parser_timeout_micros = e => (_ts_parser_timeout_micros = Module._ts_parser_timeout_micros = wasmExports.ts_parser_timeout_micros)(e);
            var _ts_parser_set_timeout_micros = Module._ts_parser_set_timeout_micros = (e, t, n) => (_ts_parser_set_timeout_micros = Module._ts_parser_set_timeout_micros = wasmExports.ts_parser_set_timeout_micros)(e, t, n);
            var _ts_parser_set_included_ranges = Module._ts_parser_set_included_ranges = (e, t, n) => (_ts_parser_set_included_ranges = Module._ts_parser_set_included_ranges = wasmExports.ts_parser_set_included_ranges)(e, t, n);
            var _memmove = Module._memmove = (e, t, n) => (_memmove = Module._memmove = wasmExports.memmove)(e, t, n);
            var _memcmp = Module._memcmp = (e, t, n) => (_memcmp = Module._memcmp = wasmExports.memcmp)(e, t, n);
            var _ts_query_new = Module._ts_query_new = (e, t, n, r, o) => (_ts_query_new = Module._ts_query_new = wasmExports.ts_query_new)(e, t, n, r, o);
            var _ts_query_delete = Module._ts_query_delete = e => (_ts_query_delete = Module._ts_query_delete = wasmExports.ts_query_delete)(e);
            var _iswspace = Module._iswspace = e => (_iswspace = Module._iswspace = wasmExports.iswspace)(e);
            var _iswalnum = Module._iswalnum = e => (_iswalnum = Module._iswalnum = wasmExports.iswalnum)(e);
            var _ts_query_pattern_count = Module._ts_query_pattern_count = e => (_ts_query_pattern_count = Module._ts_query_pattern_count = wasmExports.ts_query_pattern_count)(e);
            var _ts_query_capture_count = Module._ts_query_capture_count = e => (_ts_query_capture_count = Module._ts_query_capture_count = wasmExports.ts_query_capture_count)(e);
            var _ts_query_string_count = Module._ts_query_string_count = e => (_ts_query_string_count = Module._ts_query_string_count = wasmExports.ts_query_string_count)(e);
            var _ts_query_capture_name_for_id = Module._ts_query_capture_name_for_id = (e, t, n) => (_ts_query_capture_name_for_id = Module._ts_query_capture_name_for_id = wasmExports.ts_query_capture_name_for_id)(e, t, n);
            var _ts_query_string_value_for_id = Module._ts_query_string_value_for_id = (e, t, n) => (_ts_query_string_value_for_id = Module._ts_query_string_value_for_id = wasmExports.ts_query_string_value_for_id)(e, t, n);
            var _ts_query_predicates_for_pattern = Module._ts_query_predicates_for_pattern = (e, t, n) => (_ts_query_predicates_for_pattern = Module._ts_query_predicates_for_pattern = wasmExports.ts_query_predicates_for_pattern)(e, t, n);
            var _ts_query_disable_capture = Module._ts_query_disable_capture = (e, t, n) => (_ts_query_disable_capture = Module._ts_query_disable_capture = wasmExports.ts_query_disable_capture)(e, t, n);
            var _ts_tree_copy = Module._ts_tree_copy = e => (_ts_tree_copy = Module._ts_tree_copy = wasmExports.ts_tree_copy)(e);
            var _ts_tree_delete = Module._ts_tree_delete = e => (_ts_tree_delete = Module._ts_tree_delete = wasmExports.ts_tree_delete)(e);
            var _ts_init = Module._ts_init = () => (_ts_init = Module._ts_init = wasmExports.ts_init)();
            var _ts_parser_new_wasm = Module._ts_parser_new_wasm = () => (_ts_parser_new_wasm = Module._ts_parser_new_wasm = wasmExports.ts_parser_new_wasm)();
            var _ts_parser_enable_logger_wasm = Module._ts_parser_enable_logger_wasm = (e, t) => (_ts_parser_enable_logger_wasm = Module._ts_parser_enable_logger_wasm = wasmExports.ts_parser_enable_logger_wasm)(e, t);
            var _ts_parser_parse_wasm = Module._ts_parser_parse_wasm = (e, t, n, r, o) => (_ts_parser_parse_wasm = Module._ts_parser_parse_wasm = wasmExports.ts_parser_parse_wasm)(e, t, n, r, o);
            var _ts_parser_included_ranges_wasm = Module._ts_parser_included_ranges_wasm = e => (_ts_parser_included_ranges_wasm = Module._ts_parser_included_ranges_wasm = wasmExports.ts_parser_included_ranges_wasm)(e);
            var _ts_language_type_is_named_wasm = Module._ts_language_type_is_named_wasm = (e, t) => (_ts_language_type_is_named_wasm = Module._ts_language_type_is_named_wasm = wasmExports.ts_language_type_is_named_wasm)(e, t);
            var _ts_language_type_is_visible_wasm = Module._ts_language_type_is_visible_wasm = (e, t) => (_ts_language_type_is_visible_wasm = Module._ts_language_type_is_visible_wasm = wasmExports.ts_language_type_is_visible_wasm)(e, t);
            var _ts_tree_root_node_wasm = Module._ts_tree_root_node_wasm = e => (_ts_tree_root_node_wasm = Module._ts_tree_root_node_wasm = wasmExports.ts_tree_root_node_wasm)(e);
            var _ts_tree_root_node_with_offset_wasm = Module._ts_tree_root_node_with_offset_wasm = e => (_ts_tree_root_node_with_offset_wasm = Module._ts_tree_root_node_with_offset_wasm = wasmExports.ts_tree_root_node_with_offset_wasm)(e);
            var _ts_tree_edit_wasm = Module._ts_tree_edit_wasm = e => (_ts_tree_edit_wasm = Module._ts_tree_edit_wasm = wasmExports.ts_tree_edit_wasm)(e);
            var _ts_tree_included_ranges_wasm = Module._ts_tree_included_ranges_wasm = e => (_ts_tree_included_ranges_wasm = Module._ts_tree_included_ranges_wasm = wasmExports.ts_tree_included_ranges_wasm)(e);
            var _ts_tree_get_changed_ranges_wasm = Module._ts_tree_get_changed_ranges_wasm = (e, t) => (_ts_tree_get_changed_ranges_wasm = Module._ts_tree_get_changed_ranges_wasm = wasmExports.ts_tree_get_changed_ranges_wasm)(e, t);
            var _ts_tree_cursor_new_wasm = Module._ts_tree_cursor_new_wasm = e => (_ts_tree_cursor_new_wasm = Module._ts_tree_cursor_new_wasm = wasmExports.ts_tree_cursor_new_wasm)(e);
            var _ts_tree_cursor_delete_wasm = Module._ts_tree_cursor_delete_wasm = e => (_ts_tree_cursor_delete_wasm = Module._ts_tree_cursor_delete_wasm = wasmExports.ts_tree_cursor_delete_wasm)(e);
            var _ts_tree_cursor_reset_wasm = Module._ts_tree_cursor_reset_wasm = e => (_ts_tree_cursor_reset_wasm = Module._ts_tree_cursor_reset_wasm = wasmExports.ts_tree_cursor_reset_wasm)(e);
            var _ts_tree_cursor_reset_to_wasm = Module._ts_tree_cursor_reset_to_wasm = (e, t) => (_ts_tree_cursor_reset_to_wasm = Module._ts_tree_cursor_reset_to_wasm = wasmExports.ts_tree_cursor_reset_to_wasm)(e, t);
            var _ts_tree_cursor_goto_first_child_wasm = Module._ts_tree_cursor_goto_first_child_wasm = e => (_ts_tree_cursor_goto_first_child_wasm = Module._ts_tree_cursor_goto_first_child_wasm = wasmExports.ts_tree_cursor_goto_first_child_wasm)(e);
            var _ts_tree_cursor_goto_last_child_wasm = Module._ts_tree_cursor_goto_last_child_wasm = e => (_ts_tree_cursor_goto_last_child_wasm = Module._ts_tree_cursor_goto_last_child_wasm = wasmExports.ts_tree_cursor_goto_last_child_wasm)(e);
            var _ts_tree_cursor_goto_first_child_for_index_wasm = Module._ts_tree_cursor_goto_first_child_for_index_wasm = e => (_ts_tree_cursor_goto_first_child_for_index_wasm = Module._ts_tree_cursor_goto_first_child_for_index_wasm = wasmExports.ts_tree_cursor_goto_first_child_for_index_wasm)(e);
            var _ts_tree_cursor_goto_first_child_for_position_wasm = Module._ts_tree_cursor_goto_first_child_for_position_wasm = e => (_ts_tree_cursor_goto_first_child_for_position_wasm = Module._ts_tree_cursor_goto_first_child_for_position_wasm = wasmExports.ts_tree_cursor_goto_first_child_for_position_wasm)(e);
            var _ts_tree_cursor_goto_next_sibling_wasm = Module._ts_tree_cursor_goto_next_sibling_wasm = e => (_ts_tree_cursor_goto_next_sibling_wasm = Module._ts_tree_cursor_goto_next_sibling_wasm = wasmExports.ts_tree_cursor_goto_next_sibling_wasm)(e);
            var _ts_tree_cursor_goto_previous_sibling_wasm = Module._ts_tree_cursor_goto_previous_sibling_wasm = e => (_ts_tree_cursor_goto_previous_sibling_wasm = Module._ts_tree_cursor_goto_previous_sibling_wasm = wasmExports.ts_tree_cursor_goto_previous_sibling_wasm)(e);
            var _ts_tree_cursor_goto_descendant_wasm = Module._ts_tree_cursor_goto_descendant_wasm = (e, t) => (_ts_tree_cursor_goto_descendant_wasm = Module._ts_tree_cursor_goto_descendant_wasm = wasmExports.ts_tree_cursor_goto_descendant_wasm)(e, t);
            var _ts_tree_cursor_goto_parent_wasm = Module._ts_tree_cursor_goto_parent_wasm = e => (_ts_tree_cursor_goto_parent_wasm = Module._ts_tree_cursor_goto_parent_wasm = wasmExports.ts_tree_cursor_goto_parent_wasm)(e);
            var _ts_tree_cursor_current_node_type_id_wasm = Module._ts_tree_cursor_current_node_type_id_wasm = e => (_ts_tree_cursor_current_node_type_id_wasm = Module._ts_tree_cursor_current_node_type_id_wasm = wasmExports.ts_tree_cursor_current_node_type_id_wasm)(e);
            var _ts_tree_cursor_current_node_state_id_wasm = Module._ts_tree_cursor_current_node_state_id_wasm = e => (_ts_tree_cursor_current_node_state_id_wasm = Module._ts_tree_cursor_current_node_state_id_wasm = wasmExports.ts_tree_cursor_current_node_state_id_wasm)(e);
            var _ts_tree_cursor_current_node_is_named_wasm = Module._ts_tree_cursor_current_node_is_named_wasm = e => (_ts_tree_cursor_current_node_is_named_wasm = Module._ts_tree_cursor_current_node_is_named_wasm = wasmExports.ts_tree_cursor_current_node_is_named_wasm)(e);
            var _ts_tree_cursor_current_node_is_missing_wasm = Module._ts_tree_cursor_current_node_is_missing_wasm = e => (_ts_tree_cursor_current_node_is_missing_wasm = Module._ts_tree_cursor_current_node_is_missing_wasm = wasmExports.ts_tree_cursor_current_node_is_missing_wasm)(e);
            var _ts_tree_cursor_current_node_id_wasm = Module._ts_tree_cursor_current_node_id_wasm = e => (_ts_tree_cursor_current_node_id_wasm = Module._ts_tree_cursor_current_node_id_wasm = wasmExports.ts_tree_cursor_current_node_id_wasm)(e);
            var _ts_tree_cursor_start_position_wasm = Module._ts_tree_cursor_start_position_wasm = e => (_ts_tree_cursor_start_position_wasm = Module._ts_tree_cursor_start_position_wasm = wasmExports.ts_tree_cursor_start_position_wasm)(e);
            var _ts_tree_cursor_end_position_wasm = Module._ts_tree_cursor_end_position_wasm = e => (_ts_tree_cursor_end_position_wasm = Module._ts_tree_cursor_end_position_wasm = wasmExports.ts_tree_cursor_end_position_wasm)(e);
            var _ts_tree_cursor_start_index_wasm = Module._ts_tree_cursor_start_index_wasm = e => (_ts_tree_cursor_start_index_wasm = Module._ts_tree_cursor_start_index_wasm = wasmExports.ts_tree_cursor_start_index_wasm)(e);
            var _ts_tree_cursor_end_index_wasm = Module._ts_tree_cursor_end_index_wasm = e => (_ts_tree_cursor_end_index_wasm = Module._ts_tree_cursor_end_index_wasm = wasmExports.ts_tree_cursor_end_index_wasm)(e);
            var _ts_tree_cursor_current_field_id_wasm = Module._ts_tree_cursor_current_field_id_wasm = e => (_ts_tree_cursor_current_field_id_wasm = Module._ts_tree_cursor_current_field_id_wasm = wasmExports.ts_tree_cursor_current_field_id_wasm)(e);
            var _ts_tree_cursor_current_depth_wasm = Module._ts_tree_cursor_current_depth_wasm = e => (_ts_tree_cursor_current_depth_wasm = Module._ts_tree_cursor_current_depth_wasm = wasmExports.ts_tree_cursor_current_depth_wasm)(e);
            var _ts_tree_cursor_current_descendant_index_wasm = Module._ts_tree_cursor_current_descendant_index_wasm = e => (_ts_tree_cursor_current_descendant_index_wasm = Module._ts_tree_cursor_current_descendant_index_wasm = wasmExports.ts_tree_cursor_current_descendant_index_wasm)(e);
            var _ts_tree_cursor_current_node_wasm = Module._ts_tree_cursor_current_node_wasm = e => (_ts_tree_cursor_current_node_wasm = Module._ts_tree_cursor_current_node_wasm = wasmExports.ts_tree_cursor_current_node_wasm)(e);
            var _ts_node_symbol_wasm = Module._ts_node_symbol_wasm = e => (_ts_node_symbol_wasm = Module._ts_node_symbol_wasm = wasmExports.ts_node_symbol_wasm)(e);
            var _ts_node_field_name_for_child_wasm = Module._ts_node_field_name_for_child_wasm = (e, t) => (_ts_node_field_name_for_child_wasm = Module._ts_node_field_name_for_child_wasm = wasmExports.ts_node_field_name_for_child_wasm)(e, t);
            var _ts_node_children_by_field_id_wasm = Module._ts_node_children_by_field_id_wasm = (e, t) => (_ts_node_children_by_field_id_wasm = Module._ts_node_children_by_field_id_wasm = wasmExports.ts_node_children_by_field_id_wasm)(e, t);
            var _ts_node_first_child_for_byte_wasm = Module._ts_node_first_child_for_byte_wasm = e => (_ts_node_first_child_for_byte_wasm = Module._ts_node_first_child_for_byte_wasm = wasmExports.ts_node_first_child_for_byte_wasm)(e);
            var _ts_node_first_named_child_for_byte_wasm = Module._ts_node_first_named_child_for_byte_wasm = e => (_ts_node_first_named_child_for_byte_wasm = Module._ts_node_first_named_child_for_byte_wasm = wasmExports.ts_node_first_named_child_for_byte_wasm)(e);
            var _ts_node_grammar_symbol_wasm = Module._ts_node_grammar_symbol_wasm = e => (_ts_node_grammar_symbol_wasm = Module._ts_node_grammar_symbol_wasm = wasmExports.ts_node_grammar_symbol_wasm)(e);
            var _ts_node_child_count_wasm = Module._ts_node_child_count_wasm = e => (_ts_node_child_count_wasm = Module._ts_node_child_count_wasm = wasmExports.ts_node_child_count_wasm)(e);
            var _ts_node_named_child_count_wasm = Module._ts_node_named_child_count_wasm = e => (_ts_node_named_child_count_wasm = Module._ts_node_named_child_count_wasm = wasmExports.ts_node_named_child_count_wasm)(e);
            var _ts_node_child_wasm = Module._ts_node_child_wasm = (e, t) => (_ts_node_child_wasm = Module._ts_node_child_wasm = wasmExports.ts_node_child_wasm)(e, t);
            var _ts_node_named_child_wasm = Module._ts_node_named_child_wasm = (e, t) => (_ts_node_named_child_wasm = Module._ts_node_named_child_wasm = wasmExports.ts_node_named_child_wasm)(e, t);
            var _ts_node_child_by_field_id_wasm = Module._ts_node_child_by_field_id_wasm = (e, t) => (_ts_node_child_by_field_id_wasm = Module._ts_node_child_by_field_id_wasm = wasmExports.ts_node_child_by_field_id_wasm)(e, t);
            var _ts_node_next_sibling_wasm = Module._ts_node_next_sibling_wasm = e => (_ts_node_next_sibling_wasm = Module._ts_node_next_sibling_wasm = wasmExports.ts_node_next_sibling_wasm)(e);
            var _ts_node_prev_sibling_wasm = Module._ts_node_prev_sibling_wasm = e => (_ts_node_prev_sibling_wasm = Module._ts_node_prev_sibling_wasm = wasmExports.ts_node_prev_sibling_wasm)(e);
            var _ts_node_next_named_sibling_wasm = Module._ts_node_next_named_sibling_wasm = e => (_ts_node_next_named_sibling_wasm = Module._ts_node_next_named_sibling_wasm = wasmExports.ts_node_next_named_sibling_wasm)(e);
            var _ts_node_prev_named_sibling_wasm = Module._ts_node_prev_named_sibling_wasm = e => (_ts_node_prev_named_sibling_wasm = Module._ts_node_prev_named_sibling_wasm = wasmExports.ts_node_prev_named_sibling_wasm)(e);
            var _ts_node_descendant_count_wasm = Module._ts_node_descendant_count_wasm = e => (_ts_node_descendant_count_wasm = Module._ts_node_descendant_count_wasm = wasmExports.ts_node_descendant_count_wasm)(e);
            var _ts_node_parent_wasm = Module._ts_node_parent_wasm = e => (_ts_node_parent_wasm = Module._ts_node_parent_wasm = wasmExports.ts_node_parent_wasm)(e);
            var _ts_node_descendant_for_index_wasm = Module._ts_node_descendant_for_index_wasm = e => (_ts_node_descendant_for_index_wasm = Module._ts_node_descendant_for_index_wasm = wasmExports.ts_node_descendant_for_index_wasm)(e);
            var _ts_node_named_descendant_for_index_wasm = Module._ts_node_named_descendant_for_index_wasm = e => (_ts_node_named_descendant_for_index_wasm = Module._ts_node_named_descendant_for_index_wasm = wasmExports.ts_node_named_descendant_for_index_wasm)(e);
            var _ts_node_descendant_for_position_wasm = Module._ts_node_descendant_for_position_wasm = e => (_ts_node_descendant_for_position_wasm = Module._ts_node_descendant_for_position_wasm = wasmExports.ts_node_descendant_for_position_wasm)(e);
            var _ts_node_named_descendant_for_position_wasm = Module._ts_node_named_descendant_for_position_wasm = e => (_ts_node_named_descendant_for_position_wasm = Module._ts_node_named_descendant_for_position_wasm = wasmExports.ts_node_named_descendant_for_position_wasm)(e);
            var _ts_node_start_point_wasm = Module._ts_node_start_point_wasm = e => (_ts_node_start_point_wasm = Module._ts_node_start_point_wasm = wasmExports.ts_node_start_point_wasm)(e);
            var _ts_node_end_point_wasm = Module._ts_node_end_point_wasm = e => (_ts_node_end_point_wasm = Module._ts_node_end_point_wasm = wasmExports.ts_node_end_point_wasm)(e);
            var _ts_node_start_index_wasm = Module._ts_node_start_index_wasm = e => (_ts_node_start_index_wasm = Module._ts_node_start_index_wasm = wasmExports.ts_node_start_index_wasm)(e);
            var _ts_node_end_index_wasm = Module._ts_node_end_index_wasm = e => (_ts_node_end_index_wasm = Module._ts_node_end_index_wasm = wasmExports.ts_node_end_index_wasm)(e);
            var _ts_node_to_string_wasm = Module._ts_node_to_string_wasm = e => (_ts_node_to_string_wasm = Module._ts_node_to_string_wasm = wasmExports.ts_node_to_string_wasm)(e);
            var _ts_node_children_wasm = Module._ts_node_children_wasm = e => (_ts_node_children_wasm = Module._ts_node_children_wasm = wasmExports.ts_node_children_wasm)(e);
            var _ts_node_named_children_wasm = Module._ts_node_named_children_wasm = e => (_ts_node_named_children_wasm = Module._ts_node_named_children_wasm = wasmExports.ts_node_named_children_wasm)(e);
            var _ts_node_descendants_of_type_wasm = Module._ts_node_descendants_of_type_wasm = (e, t, n, r, o, s, a) => (_ts_node_descendants_of_type_wasm = Module._ts_node_descendants_of_type_wasm = wasmExports.ts_node_descendants_of_type_wasm)(e, t, n, r, o, s, a);
            var _ts_node_is_named_wasm = Module._ts_node_is_named_wasm = e => (_ts_node_is_named_wasm = Module._ts_node_is_named_wasm = wasmExports.ts_node_is_named_wasm)(e);
            var _ts_node_has_changes_wasm = Module._ts_node_has_changes_wasm = e => (_ts_node_has_changes_wasm = Module._ts_node_has_changes_wasm = wasmExports.ts_node_has_changes_wasm)(e);
            var _ts_node_has_error_wasm = Module._ts_node_has_error_wasm = e => (_ts_node_has_error_wasm = Module._ts_node_has_error_wasm = wasmExports.ts_node_has_error_wasm)(e);
            var _ts_node_is_error_wasm = Module._ts_node_is_error_wasm = e => (_ts_node_is_error_wasm = Module._ts_node_is_error_wasm = wasmExports.ts_node_is_error_wasm)(e);
            var _ts_node_is_missing_wasm = Module._ts_node_is_missing_wasm = e => (_ts_node_is_missing_wasm = Module._ts_node_is_missing_wasm = wasmExports.ts_node_is_missing_wasm)(e);
            var _ts_node_is_extra_wasm = Module._ts_node_is_extra_wasm = e => (_ts_node_is_extra_wasm = Module._ts_node_is_extra_wasm = wasmExports.ts_node_is_extra_wasm)(e);
            var _ts_node_parse_state_wasm = Module._ts_node_parse_state_wasm = e => (_ts_node_parse_state_wasm = Module._ts_node_parse_state_wasm = wasmExports.ts_node_parse_state_wasm)(e);
            var _ts_node_next_parse_state_wasm = Module._ts_node_next_parse_state_wasm = e => (_ts_node_next_parse_state_wasm = Module._ts_node_next_parse_state_wasm = wasmExports.ts_node_next_parse_state_wasm)(e);
            var _ts_query_matches_wasm = Module._ts_query_matches_wasm = (e, t, n, r, o, s, a, A, c, u) => (_ts_query_matches_wasm = Module._ts_query_matches_wasm = wasmExports.ts_query_matches_wasm)(e, t, n, r, o, s, a, A, c, u);
            var _ts_query_captures_wasm = Module._ts_query_captures_wasm = (e, t, n, r, o, s, a, A, c, u) => (_ts_query_captures_wasm = Module._ts_query_captures_wasm = wasmExports.ts_query_captures_wasm)(e, t, n, r, o, s, a, A, c, u);
            var _iswalpha = Module._iswalpha = e => (_iswalpha = Module._iswalpha = wasmExports.iswalpha)(e);
            var _iswblank = Module._iswblank = e => (_iswblank = Module._iswblank = wasmExports.iswblank)(e);
            var _iswdigit = Module._iswdigit = e => (_iswdigit = Module._iswdigit = wasmExports.iswdigit)(e);
            var _iswlower = Module._iswlower = e => (_iswlower = Module._iswlower = wasmExports.iswlower)(e);
            var _iswupper = Module._iswupper = e => (_iswupper = Module._iswupper = wasmExports.iswupper)(e);
            var _iswxdigit = Module._iswxdigit = e => (_iswxdigit = Module._iswxdigit = wasmExports.iswxdigit)(e);
            var _memchr = Module._memchr = (e, t, n) => (_memchr = Module._memchr = wasmExports.memchr)(e, t, n);
            var _strlen = Module._strlen = e => (_strlen = Module._strlen = wasmExports.strlen)(e);
            var _strcmp = Module._strcmp = (e, t) => (_strcmp = Module._strcmp = wasmExports.strcmp)(e, t);
            var _strncat = Module._strncat = (e, t, n) => (_strncat = Module._strncat = wasmExports.strncat)(e, t, n);
            var _strncpy = Module._strncpy = (e, t, n) => (_strncpy = Module._strncpy = wasmExports.strncpy)(e, t, n);
            var _towlower = Module._towlower = e => (_towlower = Module._towlower = wasmExports.towlower)(e);
            var _towupper = Module._towupper = e => (_towupper = Module._towupper = wasmExports.towupper)(e);
            var _setThrew = (e, t) => (_setThrew = wasmExports.setThrew)(e, t);
            var __emscripten_stack_restore = e => (__emscripten_stack_restore = wasmExports._emscripten_stack_restore)(e);
            var __emscripten_stack_alloc = e => (__emscripten_stack_alloc = wasmExports._emscripten_stack_alloc)(e);
            var _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports.emscripten_stack_get_current)();
            var dynCall_jiji = Module.dynCall_jiji = (e, t, n, r, o) => (dynCall_jiji = Module.dynCall_jiji = wasmExports.dynCall_jiji)(e, t, n, r, o);
            var _orig$ts_parser_timeout_micros = Module._orig$ts_parser_timeout_micros = e => (_orig$ts_parser_timeout_micros = Module._orig$ts_parser_timeout_micros = wasmExports.orig$ts_parser_timeout_micros)(e);
            var _orig$ts_parser_set_timeout_micros = Module._orig$ts_parser_set_timeout_micros = (e, t) => (_orig$ts_parser_set_timeout_micros = Module._orig$ts_parser_set_timeout_micros = wasmExports.orig$ts_parser_set_timeout_micros)(e, t);
            var calledRun;
            function callMain(e = []) {
              var t = resolveGlobalSymbol('main').sym;
              if (t) {
                e.unshift(thisProgram);
                var n = e.length;
                var r = stackAlloc((n + 1) * 4);
                var o = r;
                e.forEach(e => {
                  LE_HEAP_STORE_U32((o >> 2) * 4, stringToUTF8OnStack(e));
                  o += 4;
                });
                LE_HEAP_STORE_U32((o >> 2) * 4, 0);
                try {
                  var s = t(n, r);
                  exitJS(s, true);
                  return s;
                } catch (e) {
                  return handleException(e);
                }
              }
            }
            function run(e = arguments_) {
              function t() {
                if (!calledRun) {
                  calledRun = true;
                  Module.calledRun = true;
                  if (!ABORT) {
                    initRuntime();
                    preMain();
                    Module.onRuntimeInitialized?.();
                    if (shouldRunNow) {
                      callMain(e);
                    }
                    postRun();
                  }
                }
              }
              if (!(runDependencies > 0)) {
                preRun();
                if (!(runDependencies > 0)) {
                  if (Module.setStatus) {
                    Module.setStatus('Running...');
                    setTimeout(function () {
                      setTimeout(function () {
                        Module.setStatus('');
                      }, 1);
                      t();
                    }, 1);
                  } else {
                    t();
                  }
                }
              }
            }
            Module.AsciiToString = AsciiToString;
            Module.stringToUTF16 = stringToUTF16;
            dependenciesFulfilled = function e() {
              if (!calledRun) {
                run();
              }
              if (!calledRun) {
                dependenciesFulfilled = e;
              }
            };
            if (Module.preInit) {
              for (typeof Module.preInit == 'function' && (Module.preInit = [Module.preInit]); Module.preInit.length > 0;) {
                Module.preInit.pop()();
              }
            }
            var shouldRunNow = true;
            if (Module.noInitialRun) {
              shouldRunNow = false;
            }
            run();
            const C = Module;
            const INTERNAL = {};
            const SIZE_OF_INT = 4;
            const SIZE_OF_CURSOR = SIZE_OF_INT * 4;
            const SIZE_OF_NODE = SIZE_OF_INT * 5;
            const SIZE_OF_POINT = SIZE_OF_INT * 2;
            const SIZE_OF_RANGE = SIZE_OF_INT * 2 + SIZE_OF_POINT * 2;
            const ZERO_POINT = {
              row: 0,
              column: 0
            };
            const QUERY_WORD_REGEX = /[\w-.]*/g;
            const PREDICATE_STEP_TYPE_CAPTURE = 1;
            const PREDICATE_STEP_TYPE_STRING = 2;
            const LANGUAGE_FUNCTION_REGEX = /^_?tree_sitter_\w+/;
            let VERSION;
            let MIN_COMPATIBLE_VERSION;
            let TRANSFER_BUFFER;
            let currentParseCallback;
            let currentLogCallback;
            class ParserImpl {
              static init() {
                TRANSFER_BUFFER = C._ts_init();
                VERSION = getValue(TRANSFER_BUFFER, 'i32');
                MIN_COMPATIBLE_VERSION = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
              }
              initialize() {
                C._ts_parser_new_wasm();
                this[0] = getValue(TRANSFER_BUFFER, 'i32');
                this[1] = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
              }
              delete() {
                C._ts_parser_delete(this[0]);
                C._free(this[1]);
                this[0] = 0;
                this[1] = 0;
              }
              setLanguage(e) {
                let t;
                if (e) {
                  if (e.constructor !== Language) {
                    throw new Error('Argument must be a Language');
                  }
                  {
                    t = e[0];
                    const n = C._ts_language_version(t);
                    if (n < MIN_COMPATIBLE_VERSION || VERSION < n) {
                      throw new Error(`Incompatible language version ${n}. Compatibility range ${MIN_COMPATIBLE_VERSION} through ${VERSION}.`);
                    }
                  }
                } else {
                  t = 0;
                  e = null;
                }
                this.language = e;
                C._ts_parser_set_language(this[0], t);
                return this;
              }
              getLanguage() {
                return this.language;
              }
              parse(e, t, n) {
                if (typeof e == 'string') {
                  currentParseCallback = (t, n) => e.slice(t);
                } else {
                  if (typeof e != 'function') {
                    throw new Error('Argument must be a string or a function');
                  }
                  currentParseCallback = e;
                }
                if (this.logCallback) {
                  currentLogCallback = this.logCallback;
                  C._ts_parser_enable_logger_wasm(this[0], 1);
                } else {
                  currentLogCallback = null;
                  C._ts_parser_enable_logger_wasm(this[0], 0);
                }
                let r = 0;
                let o = 0;
                if (n?.includedRanges) {
                  r = n.includedRanges.length;
                  o = C._calloc(r, SIZE_OF_RANGE);
                  let e = o;
                  for (let t = 0; t < r; t++) {
                    marshalRange(e, n.includedRanges[t]);
                    e += SIZE_OF_RANGE;
                  }
                }
                const s = C._ts_parser_parse_wasm(this[0], this[1], t ? t[0] : 0, o, r);
                if (!s) {
                  currentParseCallback = null;
                  currentLogCallback = null;
                  throw new Error('Parsing failed');
                }
                const a = new Tree(INTERNAL, s, this.language, currentParseCallback);
                currentParseCallback = null;
                currentLogCallback = null;
                return a;
              }
              reset() {
                C._ts_parser_reset(this[0]);
              }
              getIncludedRanges() {
                C._ts_parser_included_ranges_wasm(this[0]);
                const e = getValue(TRANSFER_BUFFER, 'i32');
                const t = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const n = new Array(e);
                if (e > 0) {
                  let r = t;
                  for (let t = 0; t < e; t++) {
                    n[t] = unmarshalRange(r);
                    r += SIZE_OF_RANGE;
                  }
                  C._free(t);
                }
                return n;
              }
              getTimeoutMicros() {
                return C._ts_parser_timeout_micros(this[0]);
              }
              setTimeoutMicros(e) {
                C._ts_parser_set_timeout_micros(this[0], e);
              }
              setLogger(e) {
                if (e) {
                  if (typeof e != 'function') {
                    throw new Error('Logger callback must be a function');
                  }
                } else {
                  e = null;
                }
                this.logCallback = e;
                return this;
              }
              getLogger() {
                return this.logCallback;
              }
            }
            class Tree {
              constructor(e, t, n, r) {
                assertInternal(e);
                this[0] = t;
                this.language = n;
                this.textCallback = r;
              }
              copy() {
                const e = C._ts_tree_copy(this[0]);
                return new Tree(INTERNAL, e, this.language, this.textCallback);
              }
              delete() {
                C._ts_tree_delete(this[0]);
                this[0] = 0;
              }
              edit(e) {
                marshalEdit(e);
                C._ts_tree_edit_wasm(this[0]);
              }
              get rootNode() {
                C._ts_tree_root_node_wasm(this[0]);
                return unmarshalNode(this);
              }
              rootNodeWithOffset(e, t) {
                const n = TRANSFER_BUFFER + SIZE_OF_NODE;
                setValue(n, e, 'i32');
                marshalPoint(n + SIZE_OF_INT, t);
                C._ts_tree_root_node_with_offset_wasm(this[0]);
                return unmarshalNode(this);
              }
              getLanguage() {
                return this.language;
              }
              walk() {
                return this.rootNode.walk();
              }
              getChangedRanges(e) {
                if (e.constructor !== Tree) {
                  throw new TypeError('Argument must be a Tree');
                }
                C._ts_tree_get_changed_ranges_wasm(this[0], e[0]);
                const t = getValue(TRANSFER_BUFFER, 'i32');
                const n = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const r = new Array(t);
                if (t > 0) {
                  let e = n;
                  for (let n = 0; n < t; n++) {
                    r[n] = unmarshalRange(e);
                    e += SIZE_OF_RANGE;
                  }
                  C._free(n);
                }
                return r;
              }
              getIncludedRanges() {
                C._ts_tree_included_ranges_wasm(this[0]);
                const e = getValue(TRANSFER_BUFFER, 'i32');
                const t = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const n = new Array(e);
                if (e > 0) {
                  let r = t;
                  for (let t = 0; t < e; t++) {
                    n[t] = unmarshalRange(r);
                    r += SIZE_OF_RANGE;
                  }
                  C._free(t);
                }
                return n;
              }
            }
            class Node {
              constructor(e, t) {
                assertInternal(e);
                this.tree = t;
              }
              get typeId() {
                marshalNode(this);
                return C._ts_node_symbol_wasm(this.tree[0]);
              }
              get grammarId() {
                marshalNode(this);
                return C._ts_node_grammar_symbol_wasm(this.tree[0]);
              }
              get type() {
                return this.tree.language.types[this.typeId] || 'ERROR';
              }
              get grammarType() {
                return this.tree.language.types[this.grammarId] || 'ERROR';
              }
              get endPosition() {
                marshalNode(this);
                C._ts_node_end_point_wasm(this.tree[0]);
                return unmarshalPoint(TRANSFER_BUFFER);
              }
              get endIndex() {
                marshalNode(this);
                return C._ts_node_end_index_wasm(this.tree[0]);
              }
              get text() {
                return getText(this.tree, this.startIndex, this.endIndex);
              }
              get parseState() {
                marshalNode(this);
                return C._ts_node_parse_state_wasm(this.tree[0]);
              }
              get nextParseState() {
                marshalNode(this);
                return C._ts_node_next_parse_state_wasm(this.tree[0]);
              }
              get isNamed() {
                marshalNode(this);
                return C._ts_node_is_named_wasm(this.tree[0]) === 1;
              }
              get hasError() {
                marshalNode(this);
                return C._ts_node_has_error_wasm(this.tree[0]) === 1;
              }
              get hasChanges() {
                marshalNode(this);
                return C._ts_node_has_changes_wasm(this.tree[0]) === 1;
              }
              get isError() {
                marshalNode(this);
                return C._ts_node_is_error_wasm(this.tree[0]) === 1;
              }
              get isMissing() {
                marshalNode(this);
                return C._ts_node_is_missing_wasm(this.tree[0]) === 1;
              }
              get isExtra() {
                marshalNode(this);
                return C._ts_node_is_extra_wasm(this.tree[0]) === 1;
              }
              equals(e) {
                return this.id === e.id;
              }
              child(e) {
                marshalNode(this);
                C._ts_node_child_wasm(this.tree[0], e);
                return unmarshalNode(this.tree);
              }
              namedChild(e) {
                marshalNode(this);
                C._ts_node_named_child_wasm(this.tree[0], e);
                return unmarshalNode(this.tree);
              }
              childForFieldId(e) {
                marshalNode(this);
                C._ts_node_child_by_field_id_wasm(this.tree[0], e);
                return unmarshalNode(this.tree);
              }
              childForFieldName(e) {
                const t = this.tree.language.fields.indexOf(e);
                if (t !== -1) {
                  return this.childForFieldId(t);
                } else {
                  return null;
                }
              }
              fieldNameForChild(e) {
                marshalNode(this);
                const t = C._ts_node_field_name_for_child_wasm(this.tree[0], e);
                if (!t) {
                  return null;
                }
                return AsciiToString(t);
              }
              childrenForFieldName(e) {
                const t = this.tree.language.fields.indexOf(e);
                if (t !== -1 && t !== 0) {
                  return this.childrenForFieldId(t);
                } else {
                  return [];
                }
              }
              childrenForFieldId(e) {
                marshalNode(this);
                C._ts_node_children_by_field_id_wasm(this.tree[0], e);
                const t = getValue(TRANSFER_BUFFER, 'i32');
                const n = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const r = new Array(t);
                if (t > 0) {
                  let e = n;
                  for (let n = 0; n < t; n++) {
                    r[n] = unmarshalNode(this.tree, e);
                    e += SIZE_OF_NODE;
                  }
                  C._free(n);
                }
                return r;
              }
              firstChildForIndex(e) {
                marshalNode(this);
                setValue(TRANSFER_BUFFER + SIZE_OF_NODE, e, 'i32');
                C._ts_node_first_child_for_byte_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              firstNamedChildForIndex(e) {
                marshalNode(this);
                setValue(TRANSFER_BUFFER + SIZE_OF_NODE, e, 'i32');
                C._ts_node_first_named_child_for_byte_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get childCount() {
                marshalNode(this);
                return C._ts_node_child_count_wasm(this.tree[0]);
              }
              get namedChildCount() {
                marshalNode(this);
                return C._ts_node_named_child_count_wasm(this.tree[0]);
              }
              get firstChild() {
                return this.child(0);
              }
              get firstNamedChild() {
                return this.namedChild(0);
              }
              get lastChild() {
                return this.child(this.childCount - 1);
              }
              get lastNamedChild() {
                return this.namedChild(this.namedChildCount - 1);
              }
              get children() {
                if (!this._children) {
                  marshalNode(this);
                  C._ts_node_children_wasm(this.tree[0]);
                  const e = getValue(TRANSFER_BUFFER, 'i32');
                  const t = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                  this._children = new Array(e);
                  if (e > 0) {
                    let n = t;
                    for (let t = 0; t < e; t++) {
                      this._children[t] = unmarshalNode(this.tree, n);
                      n += SIZE_OF_NODE;
                    }
                    C._free(t);
                  }
                }
                return this._children;
              }
              get namedChildren() {
                if (!this._namedChildren) {
                  marshalNode(this);
                  C._ts_node_named_children_wasm(this.tree[0]);
                  const e = getValue(TRANSFER_BUFFER, 'i32');
                  const t = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                  this._namedChildren = new Array(e);
                  if (e > 0) {
                    let n = t;
                    for (let t = 0; t < e; t++) {
                      this._namedChildren[t] = unmarshalNode(this.tree, n);
                      n += SIZE_OF_NODE;
                    }
                    C._free(t);
                  }
                }
                return this._namedChildren;
              }
              descendantsOfType(e, t, n) {
                if (!Array.isArray(e)) {
                  e = [e];
                }
                if (!t) {
                  t = ZERO_POINT;
                }
                if (!n) {
                  n = ZERO_POINT;
                }
                const r = [];
                const o = this.tree.language.types;
                for (let t = 0, n = o.length; t < n; t++) {
                  if (e.includes(o[t])) {
                    r.push(t);
                  }
                }
                const s = C._malloc(SIZE_OF_INT * r.length);
                for (let e = 0, t = r.length; e < t; e++) {
                  setValue(s + e * SIZE_OF_INT, r[e], 'i32');
                }
                marshalNode(this);
                C._ts_node_descendants_of_type_wasm(this.tree[0], s, r.length, t.row, t.column, n.row, n.column);
                const a = getValue(TRANSFER_BUFFER, 'i32');
                const A = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const c = new Array(a);
                if (a > 0) {
                  let e = A;
                  for (let t = 0; t < a; t++) {
                    c[t] = unmarshalNode(this.tree, e);
                    e += SIZE_OF_NODE;
                  }
                }
                C._free(A);
                C._free(s);
                return c;
              }
              get nextSibling() {
                marshalNode(this);
                C._ts_node_next_sibling_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get previousSibling() {
                marshalNode(this);
                C._ts_node_prev_sibling_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get nextNamedSibling() {
                marshalNode(this);
                C._ts_node_next_named_sibling_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get previousNamedSibling() {
                marshalNode(this);
                C._ts_node_prev_named_sibling_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get descendantCount() {
                marshalNode(this);
                return C._ts_node_descendant_count_wasm(this.tree[0]);
              }
              get parent() {
                marshalNode(this);
                C._ts_node_parent_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              descendantForIndex(e, t = e) {
                if (typeof e != 'number' || typeof t != 'number') {
                  throw new Error('Arguments must be numbers');
                }
                marshalNode(this);
                const n = TRANSFER_BUFFER + SIZE_OF_NODE;
                setValue(n, e, 'i32');
                setValue(n + SIZE_OF_INT, t, 'i32');
                C._ts_node_descendant_for_index_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              namedDescendantForIndex(e, t = e) {
                if (typeof e != 'number' || typeof t != 'number') {
                  throw new Error('Arguments must be numbers');
                }
                marshalNode(this);
                const n = TRANSFER_BUFFER + SIZE_OF_NODE;
                setValue(n, e, 'i32');
                setValue(n + SIZE_OF_INT, t, 'i32');
                C._ts_node_named_descendant_for_index_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              descendantForPosition(e, t = e) {
                if (!isPoint(e) || !isPoint(t)) {
                  throw new Error('Arguments must be {row, column} objects');
                }
                marshalNode(this);
                const n = TRANSFER_BUFFER + SIZE_OF_NODE;
                marshalPoint(n, e);
                marshalPoint(n + SIZE_OF_POINT, t);
                C._ts_node_descendant_for_position_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              namedDescendantForPosition(e, t = e) {
                if (!isPoint(e) || !isPoint(t)) {
                  throw new Error('Arguments must be {row, column} objects');
                }
                marshalNode(this);
                const n = TRANSFER_BUFFER + SIZE_OF_NODE;
                marshalPoint(n, e);
                marshalPoint(n + SIZE_OF_POINT, t);
                C._ts_node_named_descendant_for_position_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              walk() {
                marshalNode(this);
                C._ts_tree_cursor_new_wasm(this.tree[0]);
                return new TreeCursor(INTERNAL, this.tree);
              }
              toString() {
                marshalNode(this);
                const e = C._ts_node_to_string_wasm(this.tree[0]);
                const t = AsciiToString(e);
                C._free(e);
                return t;
              }
            }
            class TreeCursor {
              constructor(e, t) {
                assertInternal(e);
                this.tree = t;
                unmarshalTreeCursor(this);
              }
              delete() {
                marshalTreeCursor(this);
                C._ts_tree_cursor_delete_wasm(this.tree[0]);
                this[0] = this[1] = this[2] = 0;
              }
              reset(e) {
                marshalNode(e);
                marshalTreeCursor(this, TRANSFER_BUFFER + SIZE_OF_NODE);
                C._ts_tree_cursor_reset_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
              }
              resetTo(e) {
                marshalTreeCursor(this, TRANSFER_BUFFER);
                marshalTreeCursor(e, TRANSFER_BUFFER + SIZE_OF_CURSOR);
                C._ts_tree_cursor_reset_to_wasm(this.tree[0], e.tree[0]);
                unmarshalTreeCursor(this);
              }
              get nodeType() {
                return this.tree.language.types[this.nodeTypeId] || 'ERROR';
              }
              get nodeTypeId() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_node_type_id_wasm(this.tree[0]);
              }
              get nodeStateId() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_node_state_id_wasm(this.tree[0]);
              }
              get nodeId() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_node_id_wasm(this.tree[0]);
              }
              get nodeIsNamed() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_node_is_named_wasm(this.tree[0]) === 1;
              }
              get nodeIsMissing() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_node_is_missing_wasm(this.tree[0]) === 1;
              }
              get nodeText() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_start_index_wasm(this.tree[0]);
                const t = C._ts_tree_cursor_end_index_wasm(this.tree[0]);
                return getText(this.tree, e, t);
              }
              get startPosition() {
                marshalTreeCursor(this);
                C._ts_tree_cursor_start_position_wasm(this.tree[0]);
                return unmarshalPoint(TRANSFER_BUFFER);
              }
              get endPosition() {
                marshalTreeCursor(this);
                C._ts_tree_cursor_end_position_wasm(this.tree[0]);
                return unmarshalPoint(TRANSFER_BUFFER);
              }
              get startIndex() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_start_index_wasm(this.tree[0]);
              }
              get endIndex() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_end_index_wasm(this.tree[0]);
              }
              get currentNode() {
                marshalTreeCursor(this);
                C._ts_tree_cursor_current_node_wasm(this.tree[0]);
                return unmarshalNode(this.tree);
              }
              get currentFieldId() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_field_id_wasm(this.tree[0]);
              }
              get currentFieldName() {
                return this.tree.language.fields[this.currentFieldId];
              }
              get currentDepth() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_depth_wasm(this.tree[0]);
              }
              get currentDescendantIndex() {
                marshalTreeCursor(this);
                return C._ts_tree_cursor_current_descendant_index_wasm(this.tree[0]);
              }
              gotoFirstChild() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_goto_first_child_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return e === 1;
              }
              gotoLastChild() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_goto_last_child_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return e === 1;
              }
              gotoFirstChildForIndex(e) {
                marshalTreeCursor(this);
                setValue(TRANSFER_BUFFER + SIZE_OF_CURSOR, e, 'i32');
                const t = C._ts_tree_cursor_goto_first_child_for_index_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return t === 1;
              }
              gotoFirstChildForPosition(e) {
                marshalTreeCursor(this);
                marshalPoint(TRANSFER_BUFFER + SIZE_OF_CURSOR, e);
                const t = C._ts_tree_cursor_goto_first_child_for_position_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return t === 1;
              }
              gotoNextSibling() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_goto_next_sibling_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return e === 1;
              }
              gotoPreviousSibling() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_goto_previous_sibling_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return e === 1;
              }
              gotoDescendant(e) {
                marshalTreeCursor(this);
                C._ts_tree_cursor_goto_descendant_wasm(this.tree[0], e);
                unmarshalTreeCursor(this);
              }
              gotoParent() {
                marshalTreeCursor(this);
                const e = C._ts_tree_cursor_goto_parent_wasm(this.tree[0]);
                unmarshalTreeCursor(this);
                return e === 1;
              }
            }
            class Language {
              constructor(e, t) {
                assertInternal(e);
                this[0] = t;
                this.types = new Array(C._ts_language_symbol_count(this[0]));
                for (let e = 0, t = this.types.length; e < t; e++) {
                  if (C._ts_language_symbol_type(this[0], e) < 2) {
                    this.types[e] = UTF8ToString(C._ts_language_symbol_name(this[0], e));
                  }
                }
                this.fields = new Array(C._ts_language_field_count(this[0]) + 1);
                for (let e = 0, t = this.fields.length; e < t; e++) {
                  const t = C._ts_language_field_name_for_id(this[0], e);
                  this.fields[e] = t !== 0 ? UTF8ToString(t) : null;
                }
              }
              get version() {
                return C._ts_language_version(this[0]);
              }
              get fieldCount() {
                return this.fields.length - 1;
              }
              get stateCount() {
                return C._ts_language_state_count(this[0]);
              }
              fieldIdForName(e) {
                const t = this.fields.indexOf(e);
                if (t !== -1) {
                  return t;
                } else {
                  return null;
                }
              }
              fieldNameForId(e) {
                return this.fields[e] || null;
              }
              idForNodeType(e, t) {
                const n = lengthBytesUTF8(e);
                const r = C._malloc(n + 1);
                stringToUTF8(e, r, n + 1);
                const o = C._ts_language_symbol_for_name(this[0], r, n, t);
                C._free(r);
                return o || null;
              }
              get nodeTypeCount() {
                return C._ts_language_symbol_count(this[0]);
              }
              nodeTypeForId(e) {
                const t = C._ts_language_symbol_name(this[0], e);
                if (t) {
                  return UTF8ToString(t);
                } else {
                  return null;
                }
              }
              nodeTypeIsNamed(e) {
                return !!C._ts_language_type_is_named_wasm(this[0], e);
              }
              nodeTypeIsVisible(e) {
                return !!C._ts_language_type_is_visible_wasm(this[0], e);
              }
              nextState(e, t) {
                return C._ts_language_next_state(this[0], e, t);
              }
              lookaheadIterator(e) {
                const t = C._ts_lookahead_iterator_new(this[0], e);
                if (t) {
                  return new LookaheadIterable(INTERNAL, t, this);
                } else {
                  return null;
                }
              }
              query(e) {
                const t = lengthBytesUTF8(e);
                const n = C._malloc(t + 1);
                stringToUTF8(e, n, t + 1);
                const r = C._ts_query_new(this[0], n, t, TRANSFER_BUFFER, TRANSFER_BUFFER + SIZE_OF_INT);
                if (!r) {
                  const t = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                  const r = getValue(TRANSFER_BUFFER, 'i32');
                  const o = UTF8ToString(n, r).length;
                  const s = e.substr(o, 100).split('\n')[0];
                  let a;
                  let A = s.match(QUERY_WORD_REGEX)[0];
                  switch (t) {
                    case 2:
                      a = new RangeError(`Bad node name '${A}'`);
                      break;
                    case 3:
                      a = new RangeError(`Bad field name '${A}'`);
                      break;
                    case 4:
                      a = new RangeError(`Bad capture name @${A}`);
                      break;
                    case 5:
                      a = new TypeError(`Bad pattern structure at offset ${o}: '${s}'...`);
                      A = '';
                      break;
                    default:
                      a = new SyntaxError(`Bad syntax at offset ${o}: '${s}'...`);
                      A = '';
                  }
                  a.index = o;
                  a.length = A.length;
                  C._free(n);
                  throw a;
                }
                const o = C._ts_query_string_count(r);
                const s = C._ts_query_capture_count(r);
                const a = C._ts_query_pattern_count(r);
                const A = new Array(s);
                const c = new Array(o);
                for (let e = 0; e < s; e++) {
                  const t = C._ts_query_capture_name_for_id(r, e, TRANSFER_BUFFER);
                  const n = getValue(TRANSFER_BUFFER, 'i32');
                  A[e] = UTF8ToString(t, n);
                }
                for (let e = 0; e < o; e++) {
                  const t = C._ts_query_string_value_for_id(r, e, TRANSFER_BUFFER);
                  const n = getValue(TRANSFER_BUFFER, 'i32');
                  c[e] = UTF8ToString(t, n);
                }
                const u = new Array(a);
                const l = new Array(a);
                const g = new Array(a);
                const d = new Array(a);
                const h = new Array(a);
                for (let e = 0; e < a; e++) {
                  const t = C._ts_query_predicates_for_pattern(r, e, TRANSFER_BUFFER);
                  const n = getValue(TRANSFER_BUFFER, 'i32');
                  d[e] = [];
                  h[e] = [];
                  const o = [];
                  let s = t;
                  for (let t = 0; t < n; t++) {
                    const t = getValue(s, 'i32');
                    s += SIZE_OF_INT;
                    const n = getValue(s, 'i32');
                    s += SIZE_OF_INT;
                    if (t === PREDICATE_STEP_TYPE_CAPTURE) {
                      o.push({
                        type: 'capture',
                        name: A[n]
                      });
                    } else {
                      if (t === PREDICATE_STEP_TYPE_STRING) {
                        o.push({
                          type: 'string',
                          value: c[n]
                        });
                      } else {
                        if (o.length > 0) {
                          if (o[0].type !== 'string') {
                            throw new Error('Predicates must begin with a literal value');
                          }
                          const t = o[0].value;
                          let n;
                          let r = true;
                          let s = true;
                          switch (t) {
                            case 'any-not-eq?':
                            case 'not-eq?':
                              r = false;
                            case 'any-eq?':
                            case 'eq?':
                              if (o.length !== 3) {
                                throw new Error(`Wrong number of arguments to \`#${t}\` predicate. Expected 2, got ${o.length - 1}`);
                              }
                              if (o[1].type !== 'capture') {
                                throw new Error(`First argument of \`#${t}\` predicate must be a capture. Got "${o[1].value}"`);
                              }
                              s = !t.startsWith('any-');
                              if (o[2].type === 'capture') {
                                const t = o[1].name;
                                const n = o[2].name;
                                h[e].push(e => {
                                  const o = [];
                                  const a = [];
                                  for (const r of e) {
                                    if (r.name === t) {
                                      o.push(r.node);
                                    }
                                    if (r.name === n) {
                                      a.push(r.node);
                                    }
                                  }
                                  const A = (e, t, n) => n ? e.text === t.text : e.text !== t.text;
                                  if (s) {
                                    return o.every(e => a.some(t => A(e, t, r)));
                                  } else {
                                    return o.some(e => a.some(t => A(e, t, r)));
                                  }
                                });
                              } else {
                                n = o[1].name;
                                const t = o[2].value;
                                const a = e => e.text === t;
                                const A = e => e.text !== t;
                                h[e].push(e => {
                                  const t = [];
                                  for (const r of e) {
                                    if (r.name === n) {
                                      t.push(r.node);
                                    }
                                  }
                                  const o = r ? a : A;
                                  if (s) {
                                    return t.every(o);
                                  } else {
                                    return t.some(o);
                                  }
                                });
                              }
                              break;
                            case 'any-not-match?':
                            case 'not-match?':
                              r = false;
                            case 'any-match?':
                            case 'match?':
                              if (o.length !== 3) {
                                throw new Error(`Wrong number of arguments to \`#${t}\` predicate. Expected 2, got ${o.length - 1}.`);
                              }
                              if (o[1].type !== 'capture') {
                                throw new Error(`First argument of \`#${t}\` predicate must be a capture. Got "${o[1].value}".`);
                              }
                              if (o[2].type !== 'string') {
                                throw new Error(`Second argument of \`#${t}\` predicate must be a string. Got @${o[2].value}.`);
                              }
                              n = o[1].name;
                              const a = new RegExp(o[2].value);
                              s = !t.startsWith('any-');
                              h[e].push(e => {
                                const t = [];
                                for (const r of e) {
                                  if (r.name === n) {
                                    t.push(r.node.text);
                                  }
                                }
                                const o = (e, t) => t ? a.test(e) : !a.test(e);
                                if (t.length === 0) {
                                  return !r;
                                } else {
                                  if (s) {
                                    return t.every(e => o(e, r));
                                  } else {
                                    return t.some(e => o(e, r));
                                  }
                                }
                              });
                              break;
                            case 'set!':
                              if (o.length < 2 || o.length > 3) {
                                throw new Error(`Wrong number of arguments to \`#set!\` predicate. Expected 1 or 2. Got ${o.length - 1}.`);
                              }
                              if (o.some(e => e.type !== 'string')) {
                                throw new Error('Arguments to `#set!` predicate must be a strings.".');
                              }
                              if (!u[e]) {
                                u[e] = {};
                              }
                              u[e][o[1].value] = o[2] ? o[2].value : null;
                              break;
                            case 'is?':
                            case 'is-not?':
                              if (o.length < 2 || o.length > 3) {
                                throw new Error(`Wrong number of arguments to \`#${t}\` predicate. Expected 1 or 2. Got ${o.length - 1}.`);
                              }
                              if (o.some(e => e.type !== 'string')) {
                                throw new Error(`Arguments to \`#${t}\` predicate must be a strings.".`);
                              }
                              const A = t === 'is?' ? l : g;
                              if (!A[e]) {
                                A[e] = {};
                              }
                              A[e][o[1].value] = o[2] ? o[2].value : null;
                              break;
                            case 'not-any-of?':
                              r = false;
                            case 'any-of?':
                              if (o.length < 2) {
                                throw new Error(`Wrong number of arguments to \`#${t}\` predicate. Expected at least 1. Got ${o.length - 1}.`);
                              }
                              if (o[1].type !== 'capture') {
                                throw new Error(`First argument of \`#${t}\` predicate must be a capture. Got "${o[1].value}".`);
                              }
                              for (let e = 2; e < o.length; e++) {
                                if (o[e].type !== 'string') {
                                  throw new Error(`Arguments to \`#${t}\` predicate must be a strings.".`);
                                }
                              }
                              n = o[1].name;
                              const c = o.slice(2).map(e => e.value);
                              h[e].push(e => {
                                const t = [];
                                for (const r of e) {
                                  if (r.name === n) {
                                    t.push(r.node.text);
                                  }
                                }
                                if (t.length === 0) {
                                  return !r;
                                } else {
                                  return t.every(e => c.includes(e)) === r;
                                }
                              });
                              break;
                            default:
                              d[e].push({
                                operator: t,
                                operands: o.slice(1)
                              });
                          }
                          o.length = 0;
                        }
                      }
                    }
                  }
                  Object.freeze(u[e]);
                  Object.freeze(l[e]);
                  Object.freeze(g[e]);
                }
                C._free(n);
                return new Query(INTERNAL, r, A, h, d, Object.freeze(u), Object.freeze(l), Object.freeze(g));
              }
              static load(e) {
                let t;
                if (e instanceof Uint8Array) {
                  t = Promise.resolve(e);
                } else {
                  const n = e;
                  if (typeof process != 'undefined' && process.versions && process.versions.node) {
                    const e = require(79896);
                    t = Promise.resolve(e.readFileSync(n));
                  } else {
                    t = fetch(n).then(e => e.arrayBuffer().then(t => {
                      if (e.ok) {
                        return new Uint8Array(t);
                      }
                      {
                        const n = new TextDecoder('utf-8').decode(t);
                        throw new Error(`Language.load failed with status ${e.status}.\n\n${n}`);
                      }
                    }));
                  }
                }
                return t.then(e => loadWebAssemblyModule(e, {
                  loadAsync: true
                })).then(e => {
                  const t = Object.keys(e);
                  const n = t.find(e => LANGUAGE_FUNCTION_REGEX.test(e) && !e.includes('external_scanner_'));
                  if (!n) {
                    console.log(`Couldn't find language function in WASM file. Symbols:\n${JSON.stringify(t, null, 2)}`);
                  }
                  const r = e[n]();
                  return new Language(INTERNAL, r);
                });
              }
            }
            class LookaheadIterable {
              constructor(e, t, n) {
                assertInternal(e);
                this[0] = t;
                this.language = n;
              }
              get currentTypeId() {
                return C._ts_lookahead_iterator_current_symbol(this[0]);
              }
              get currentType() {
                return this.language.types[this.currentTypeId] || 'ERROR';
              }
              delete() {
                C._ts_lookahead_iterator_delete(this[0]);
                this[0] = 0;
              }
              resetState(e) {
                return C._ts_lookahead_iterator_reset_state(this[0], e);
              }
              reset(e, t) {
                return !!C._ts_lookahead_iterator_reset(this[0], e[0], t) && (this.language = e, true);
              }
              [Symbol.iterator]() {
                const e = this;
                return {
                  next: () => C._ts_lookahead_iterator_next(e[0]) ? {
                    done: false,
                    value: e.currentType
                  } : {
                    done: true,
                    value: ''
                  }
                };
              }
            }
            class Query {
              constructor(e, t, n, r, o, s, a, A) {
                assertInternal(e);
                this[0] = t;
                this.captureNames = n;
                this.textPredicates = r;
                this.predicates = o;
                this.setProperties = s;
                this.assertedProperties = a;
                this.refutedProperties = A;
                this.exceededMatchLimit = false;
              }
              delete() {
                C._ts_query_delete(this[0]);
                this[0] = 0;
              }
              matches(e, {
                startPosition: t = ZERO_POINT,
                endPosition: n = ZERO_POINT,
                startIndex: r = 0,
                endIndex: o = 0,
                matchLimit: s = 4294967295,
                maxStartDepth: a = 4294967295
              } = {}) {
                if (typeof s != 'number') {
                  throw new Error('Arguments must be numbers');
                }
                marshalNode(e);
                C._ts_query_matches_wasm(this[0], e.tree[0], t.row, t.column, n.row, n.column, r, o, s, a);
                const A = getValue(TRANSFER_BUFFER, 'i32');
                const c = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const u = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 2, 'i32');
                const l = new Array(A);
                this.exceededMatchLimit = Boolean(u);
                let g = 0;
                let d = c;
                for (let t = 0; t < A; t++) {
                  const t = getValue(d, 'i32');
                  d += SIZE_OF_INT;
                  const n = getValue(d, 'i32');
                  d += SIZE_OF_INT;
                  const r = new Array(n);
                  d = unmarshalCaptures(this, e.tree, d, r);
                  if (this.textPredicates[t].every(e => e(r))) {
                    l[g] = {
                      pattern: t,
                      captures: r
                    };
                    const e = this.setProperties[t];
                    if (e) {
                      l[g].setProperties = e;
                    }
                    const n = this.assertedProperties[t];
                    if (n) {
                      l[g].assertedProperties = n;
                    }
                    const o = this.refutedProperties[t];
                    if (o) {
                      l[g].refutedProperties = o;
                    }
                    g++;
                  }
                }
                l.length = g;
                C._free(c);
                return l;
              }
              captures(e, {
                startPosition: t = ZERO_POINT,
                endPosition: n = ZERO_POINT,
                startIndex: r = 0,
                endIndex: o = 0,
                matchLimit: s = 4294967295,
                maxStartDepth: a = 4294967295
              } = {}) {
                if (typeof s != 'number') {
                  throw new Error('Arguments must be numbers');
                }
                marshalNode(e);
                C._ts_query_captures_wasm(this[0], e.tree[0], t.row, t.column, n.row, n.column, r, o, s, a);
                const A = getValue(TRANSFER_BUFFER, 'i32');
                const c = getValue(TRANSFER_BUFFER + SIZE_OF_INT, 'i32');
                const u = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 2, 'i32');
                const l = [];
                this.exceededMatchLimit = Boolean(u);
                const g = [];
                let d = c;
                for (let t = 0; t < A; t++) {
                  const t = getValue(d, 'i32');
                  d += SIZE_OF_INT;
                  const n = getValue(d, 'i32');
                  d += SIZE_OF_INT;
                  const r = getValue(d, 'i32');
                  d += SIZE_OF_INT;
                  g.length = n;
                  d = unmarshalCaptures(this, e.tree, d, g);
                  if (this.textPredicates[t].every(e => e(g))) {
                    const e = g[r];
                    const n = this.setProperties[t];
                    if (n) {
                      e.setProperties = n;
                    }
                    const o = this.assertedProperties[t];
                    if (o) {
                      e.assertedProperties = o;
                    }
                    const s = this.refutedProperties[t];
                    if (s) {
                      e.refutedProperties = s;
                    }
                    l.push(e);
                  }
                }
                C._free(c);
                return l;
              }
              predicatesForPattern(e) {
                return this.predicates[e];
              }
              disableCapture(e) {
                const t = lengthBytesUTF8(e);
                const n = C._malloc(t + 1);
                stringToUTF8(e, n, t + 1);
                C._ts_query_disable_capture(this[0], n, t);
                C._free(n);
              }
              didExceedMatchLimit() {
                return this.exceededMatchLimit;
              }
            }
            function getText(e, t, n) {
              const r = n - t;
              let o = e.textCallback(t, null, n);
              for (t += o.length; t < n;) {
                const r = e.textCallback(t, null, n);
                if (!r || !(r.length > 0)) {
                  break;
                }
                t += r.length;
                o += r;
              }
              if (t > n) {
                o = o.slice(0, r);
              }
              return o;
            }
            function unmarshalCaptures(e, t, n, r) {
              for (let o = 0, s = r.length; o < s; o++) {
                const s = getValue(n, 'i32');
                const a = unmarshalNode(t, n += SIZE_OF_INT);
                n += SIZE_OF_NODE;
                r[o] = {
                  name: e.captureNames[s],
                  node: a
                };
              }
              return n;
            }
            function assertInternal(e) {
              if (e !== INTERNAL) {
                throw new Error('Illegal constructor');
              }
            }
            function isPoint(e) {
              return e && typeof e.row == 'number' && typeof e.column == 'number';
            }
            function marshalNode(e) {
              let t = TRANSFER_BUFFER;
              setValue(t, e.id, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e.startIndex, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e.startPosition.row, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e.startPosition.column, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e[0], 'i32');
            }
            function unmarshalNode(e, t = TRANSFER_BUFFER) {
              const n = getValue(t, 'i32');
              if (n === 0) {
                return null;
              }
              const r = getValue(t += SIZE_OF_INT, 'i32');
              const o = getValue(t += SIZE_OF_INT, 'i32');
              const s = getValue(t += SIZE_OF_INT, 'i32');
              const a = getValue(t += SIZE_OF_INT, 'i32');
              const A = new Node(INTERNAL, e);
              A.id = n;
              A.startIndex = r;
              A.startPosition = {
                row: o,
                column: s
              };
              A[0] = a;
              return A;
            }
            function marshalTreeCursor(e, t = TRANSFER_BUFFER) {
              setValue(t + SIZE_OF_INT * 0, e[0], 'i32');
              setValue(t + SIZE_OF_INT * 1, e[1], 'i32');
              setValue(t + SIZE_OF_INT * 2, e[2], 'i32');
              setValue(t + SIZE_OF_INT * 3, e[3], 'i32');
            }
            function unmarshalTreeCursor(e) {
              e[0] = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 0, 'i32');
              e[1] = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 1, 'i32');
              e[2] = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 2, 'i32');
              e[3] = getValue(TRANSFER_BUFFER + SIZE_OF_INT * 3, 'i32');
            }
            function marshalPoint(e, t) {
              setValue(e, t.row, 'i32');
              setValue(e + SIZE_OF_INT, t.column, 'i32');
            }
            function unmarshalPoint(e) {
              return {
                row: getValue(e, 'i32') >>> 0,
                column: getValue(e + SIZE_OF_INT, 'i32') >>> 0
              };
            }
            function marshalRange(e, t) {
              marshalPoint(e, t.startPosition);
              marshalPoint(e += SIZE_OF_POINT, t.endPosition);
              setValue(e += SIZE_OF_POINT, t.startIndex, 'i32');
              setValue(e += SIZE_OF_INT, t.endIndex, 'i32');
              e += SIZE_OF_INT;
            }
            function unmarshalRange(e) {
              const t = {};
              t.startPosition = unmarshalPoint(e);
              e += SIZE_OF_POINT;
              t.endPosition = unmarshalPoint(e);
              e += SIZE_OF_POINT;
              t.startIndex = getValue(e, 'i32') >>> 0;
              e += SIZE_OF_INT;
              t.endIndex = getValue(e, 'i32') >>> 0;
              return t;
            }
            function marshalEdit(e) {
              let t = TRANSFER_BUFFER;
              marshalPoint(t, e.startPosition);
              t += SIZE_OF_POINT;
              marshalPoint(t, e.oldEndPosition);
              t += SIZE_OF_POINT;
              marshalPoint(t, e.newEndPosition);
              t += SIZE_OF_POINT;
              setValue(t, e.startIndex, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e.oldEndIndex, 'i32');
              t += SIZE_OF_INT;
              setValue(t, e.newEndIndex, 'i32');
              t += SIZE_OF_INT;
            }
            for (const e of Object.getOwnPropertyNames(ParserImpl.prototype)) {
              Object.defineProperty(Parser.prototype, e, {
                value: ParserImpl.prototype[e],
                enumerable: false,
                writable: false
              });
            }
            Parser.Language = Language;
            Module.onRuntimeInitialized = () => {
              ParserImpl.init();
              resolveInitPromise();
            };
          }));
        }
      }
      return Parser;
    }();
    module.exports = TreeSitter;
  },
  5293: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.AliasFS = undefined;
    const r = require(38824);
    class o extends r.ProxiedFS {
      constructor(e, {
        baseFs: t,
        pathUtils: n
      }) {
        super(n);
        this.target = e;
        this.baseFs = t;
      }
      getRealPath() {
        return this.target;
      }
      getBaseFs() {
        return this.baseFs;
      }
      mapFromBase(e) {
        return e;
      }
      mapToBase(e) {
        return e;
      }
    }
    exports.AliasFS = o;
  },
  5623: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CwdFS = undefined;
    const r = require(41639);
    const o = require(38824);
    const s = require(40055);
    class a extends o.ProxiedFS {
      constructor(e, {
        baseFs: t = new r.NodeFS()
      } = {}) {
        super(s.ppath);
        this.target = this.pathUtils.normalize(e);
        this.baseFs = t;
      }
      getRealPath() {
        return this.pathUtils.resolve(this.baseFs.getRealPath(), this.target);
      }
      resolve(e) {
        if (this.pathUtils.isAbsolute(e)) {
          return s.ppath.normalize(e);
        } else {
          return this.baseFs.resolve(s.ppath.join(this.target, e));
        }
      }
      mapFromBase(e) {
        return e;
      }
      mapToBase(e) {
        if (this.pathUtils.isAbsolute(e)) {
          return e;
        } else {
          return this.pathUtils.join(this.target, e);
        }
      }
    }
    exports.CwdFS = a;
  },
  54570: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.normalizeLineEndings = exports.BasePortableFakeFS = exports.FakeFS = undefined;
    const r = require(70857);
    const o = require(97519);
    const s = require(40055);
    class a {
      constructor(e) {
        this.pathUtils = e;
      }
      async *genTraversePromise(e, {
        stableSort: t = false
      } = {}) {
        const n = [e];
        while (n.length > 0) {
          const e = n.shift();
          if ((await this.lstatPromise(e)).isDirectory()) {
            const r = await this.readdirPromise(e);
            if (!t) {
              throw new Error('Not supported');
            }
            for (const t of r.sort()) {
              n.push(this.pathUtils.join(e, t));
            }
          } else {
            yield e;
          }
        }
      }
      async removePromise(e, {
        recursive: t = true,
        maxRetries: n = 5
      } = {}) {
        let r;
        try {
          r = await this.lstatPromise(e);
        } catch (e) {
          if (e.code === 'ENOENT') {
            return;
          }
          throw e;
        }
        if (r.isDirectory()) {
          if (t) {
            const t = await this.readdirPromise(e);
            await Promise.all(t.map(t => this.removePromise(this.pathUtils.resolve(e, t))));
          }
          for (let t = 0; t <= n; t++) {
            try {
              await this.rmdirPromise(e);
              break;
            } catch (e) {
              if (e.code !== 'EBUSY' && e.code !== 'ENOTEMPTY') {
                throw e;
              }
              if (t < n) {
                await new Promise(e => setTimeout(e, t * 100));
              }
            }
          }
        } else {
          await this.unlinkPromise(e);
        }
      }
      removeSync(e, {
        recursive: t = true
      } = {}) {
        let n;
        try {
          n = this.lstatSync(e);
        } catch (e) {
          if (e.code === 'ENOENT') {
            return;
          }
          throw e;
        }
        if (n.isDirectory()) {
          if (t) {
            for (const t of this.readdirSync(e)) {
              this.removeSync(this.pathUtils.resolve(e, t));
            }
          }
          this.rmdirSync(e);
        } else {
          this.unlinkSync(e);
        }
      }
      async mkdirpPromise(e, {
        chmod: t,
        utimes: n
      } = {}) {
        if ((e = this.resolve(e)) === this.pathUtils.dirname(e)) {
          return;
        }
        const r = e.split(this.pathUtils.sep);
        let o;
        for (let e = 2; e <= r.length; ++e) {
          const s = r.slice(0, e).join(this.pathUtils.sep);
          if (!this.existsSync(s)) {
            try {
              await this.mkdirPromise(s);
            } catch (e) {
              if (e.code === 'EEXIST') {
                continue;
              }
              throw e;
            }
            if (o == null) {
              o = s;
            }
            if (t != null) {
              await this.chmodPromise(s, t);
            }
            if (n != null) {
              await this.utimesPromise(s, n[0], n[1]);
            } else {
              const e = await this.statPromise(this.pathUtils.dirname(s));
              await this.utimesPromise(s, e.atime, e.mtime);
            }
          }
        }
        return o;
      }
      mkdirpSync(e, {
        chmod: t,
        utimes: n
      } = {}) {
        if ((e = this.resolve(e)) === this.pathUtils.dirname(e)) {
          return;
        }
        const r = e.split(this.pathUtils.sep);
        let o;
        for (let e = 2; e <= r.length; ++e) {
          const s = r.slice(0, e).join(this.pathUtils.sep);
          if (!this.existsSync(s)) {
            try {
              this.mkdirSync(s);
            } catch (e) {
              if (e.code === 'EEXIST') {
                continue;
              }
              throw e;
            }
            if (o == null) {
              o = s;
            }
            if (t != null) {
              this.chmodSync(s, t);
            }
            if (n != null) {
              this.utimesSync(s, n[0], n[1]);
            } else {
              const e = this.statSync(this.pathUtils.dirname(s));
              this.utimesSync(s, e.atime, e.mtime);
            }
          }
        }
        return o;
      }
      async copyPromise(e, t, {
        baseFs: n = this,
        overwrite: r = true,
        stableSort: s = false,
        stableTime: a = false,
        linkStrategy: A = null
      } = {}) {
        return await o.copyPromise(this, e, n, t, {
          overwrite: r,
          stableSort: s,
          stableTime: a,
          linkStrategy: A
        });
      }
      copySync(e, t, {
        baseFs: n = this,
        overwrite: r = true
      } = {}) {
        const o = n.lstatSync(t);
        const a = this.existsSync(e);
        if (o.isDirectory()) {
          this.mkdirpSync(e);
          const o = n.readdirSync(t);
          for (const s of o) {
            this.copySync(this.pathUtils.join(e, s), n.pathUtils.join(t, s), {
              baseFs: n,
              overwrite: r
            });
          }
        } else {
          if (o.isFile()) {
            if (!a || r) {
              if (a) {
                this.removeSync(e);
              }
              const r = n.readFileSync(t);
              this.writeFileSync(e, r);
            }
          } else {
            if (!o.isSymbolicLink()) {
              throw new Error(`Unsupported file type (file: ${t}, mode: 0o${o.mode.toString(8).padStart(6, '0')})`);
            }
            if (!a || r) {
              if (a) {
                this.removeSync(e);
              }
              const r = n.readlinkSync(t);
              this.symlinkSync(s.convertPath(this.pathUtils, r), e);
            }
          }
        }
        const A = o.mode & 511;
        this.chmodSync(e, A);
      }
      async changeFilePromise(e, t, n = {}) {
        if (Buffer.isBuffer(t)) {
          return this.changeFileBufferPromise(e, t, n);
        } else {
          return this.changeFileTextPromise(e, t, n);
        }
      }
      async changeFileBufferPromise(e, t, {
        mode: n
      } = {}) {
        let r = Buffer.alloc(0);
        try {
          r = await this.readFilePromise(e);
        } catch (e) {}
        if (Buffer.compare(r, t) !== 0) {
          await this.writeFilePromise(e, t, {
            mode: n
          });
        }
      }
      async changeFileTextPromise(e, t, {
        automaticNewlines: n,
        mode: r
      } = {}) {
        let o = '';
        try {
          o = await this.readFilePromise(e, 'utf8');
        } catch (e) {}
        const s = n ? A(o, t) : t;
        if (o !== s) {
          await this.writeFilePromise(e, s, {
            mode: r
          });
        }
      }
      changeFileSync(e, t, n = {}) {
        if (Buffer.isBuffer(t)) {
          return this.changeFileBufferSync(e, t, n);
        } else {
          return this.changeFileTextSync(e, t, n);
        }
      }
      changeFileBufferSync(e, t, {
        mode: n
      } = {}) {
        let r = Buffer.alloc(0);
        try {
          r = this.readFileSync(e);
        } catch (e) {}
        if (Buffer.compare(r, t) !== 0) {
          this.writeFileSync(e, t, {
            mode: n
          });
        }
      }
      changeFileTextSync(e, t, {
        automaticNewlines: n = false,
        mode: r
      } = {}) {
        let o = '';
        try {
          o = this.readFileSync(e, 'utf8');
        } catch (e) {}
        const s = n ? A(o, t) : t;
        if (o !== s) {
          this.writeFileSync(e, s, {
            mode: r
          });
        }
      }
      async movePromise(e, t) {
        try {
          await this.renamePromise(e, t);
        } catch (n) {
          if (n.code !== 'EXDEV') {
            throw n;
          }
          await this.copyPromise(t, e);
          await this.removePromise(e);
        }
      }
      moveSync(e, t) {
        try {
          this.renameSync(e, t);
        } catch (n) {
          if (n.code !== 'EXDEV') {
            throw n;
          }
          this.copySync(t, e);
          this.removeSync(e);
        }
      }
      async lockPromise(e, t) {
        const n = `${e}.flock`;
        const r = 1000 / 60;
        const o = Date.now();
        let s = null;
        const a = async () => {
          let e;
          try {
            [e] = await this.readJsonPromise(n);
          } catch (e) {
            return Date.now() - o < 500;
          }
          try {
            process.kill(e, 0);
            return true;
          } catch (e) {
            return false;
          }
        };
        while (s === null) {
          try {
            s = await this.openPromise(n, 'wx');
          } catch (e) {
            if (e.code !== 'EEXIST') {
              throw e;
            }
            if (!(await a())) {
              try {
                await this.unlinkPromise(n);
                continue;
              } catch (e) {}
            }
            if (!(Date.now() - o < 60000)) {
              throw new Error(`Couldn't acquire a lock in a reasonable time (via ${n})`);
            }
            await new Promise(e => setTimeout(e, r));
          }
        }
        await this.writePromise(s, JSON.stringify([process.pid]));
        try {
          return await t();
        } finally {
          try {
            await this.closePromise(s);
            await this.unlinkPromise(n);
          } catch (e) {}
        }
      }
      async readJsonPromise(e) {
        const t = await this.readFilePromise(e, 'utf8');
        try {
          return JSON.parse(t);
        } catch (t) {
          t.message += ` (in ${e})`;
          throw t;
        }
      }
      readJsonSync(e) {
        const t = this.readFileSync(e, 'utf8');
        try {
          return JSON.parse(t);
        } catch (t) {
          t.message += ` (in ${e})`;
          throw t;
        }
      }
      async writeJsonPromise(e, t) {
        return await this.writeFilePromise(e, `${JSON.stringify(t, null, 2)}\n`);
      }
      writeJsonSync(e, t) {
        return this.writeFileSync(e, `${JSON.stringify(t, null, 2)}\n`);
      }
      async preserveTimePromise(e, t) {
        const n = await this.lstatPromise(e);
        const r = await t();
        if (r !== undefined) {
          e = r;
        }
        if (this.lutimesPromise) {
          await this.lutimesPromise(e, n.atime, n.mtime);
        } else {
          if (!n.isSymbolicLink()) {
            await this.utimesPromise(e, n.atime, n.mtime);
          }
        }
      }
      async preserveTimeSync(e, t) {
        const n = this.lstatSync(e);
        const r = t();
        if (r !== undefined) {
          e = r;
        }
        if (this.lutimesSync) {
          this.lutimesSync(e, n.atime, n.mtime);
        } else {
          if (!n.isSymbolicLink()) {
            this.utimesSync(e, n.atime, n.mtime);
          }
        }
      }
    }
    exports.FakeFS = a;
    function A(e, t) {
      return t.replace(/\r?\n/g, function (e) {
        const t = e.match(/\r?\n/g);
        if (t === null) {
          return r.EOL;
        }
        const n = t.filter(e => e === '\r\n').length;
        if (n > t.length - n) {
          return '\r\n';
        } else {
          return '\n';
        }
      }(e));
    }
    exports.BasePortableFakeFS = class extends a {
      constructor() {
        super(s.ppath);
      }
    };
    exports.normalizeLineEndings = A;
  },
  91823: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.JailFS = undefined;
    const r = require(41639);
    const o = require(38824);
    const s = require(40055);
    const a = s.PortablePath.root;
    class A extends o.ProxiedFS {
      constructor(e, {
        baseFs: t = new r.NodeFS()
      } = {}) {
        super(s.ppath);
        this.target = this.pathUtils.resolve(s.PortablePath.root, e);
        this.baseFs = t;
      }
      getRealPath() {
        return this.pathUtils.resolve(this.baseFs.getRealPath(), this.pathUtils.relative(s.PortablePath.root, this.target));
      }
      getTarget() {
        return this.target;
      }
      getBaseFs() {
        return this.baseFs;
      }
      mapToBase(e) {
        const t = this.pathUtils.normalize(e);
        if (this.pathUtils.isAbsolute(e)) {
          return this.pathUtils.resolve(this.target, this.pathUtils.relative(a, e));
        }
        if (t.match(/^\.\.\/?/)) {
          throw new Error(`Resolving this path (${e}) would escape the jail`);
        }
        return this.pathUtils.resolve(this.target, e);
      }
      mapFromBase(e) {
        return this.pathUtils.resolve(a, this.pathUtils.relative(this.target, e));
      }
    }
    exports.JailFS = A;
  },
  60601: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LazyFS = undefined;
    const r = require(38824);
    class o extends r.ProxiedFS {
      constructor(e, t) {
        super(t);
        this.instance = null;
        this.factory = e;
      }
      get baseFs() {
        if (!this.instance) {
          this.instance = this.factory();
        }
        return this.instance;
      }
      set baseFs(e) {
        this.instance = e;
      }
      mapFromBase(e) {
        return e;
      }
      mapToBase(e) {
        return e;
      }
    }
    exports.LazyFS = o;
  },
  4700: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NoFS = undefined;
    const r = require(54570);
    const o = require(40055);
    const s = () => Object.assign(new Error('ENOSYS: unsupported filesystem access'), {
      code: 'ENOSYS'
    });
    class a extends r.FakeFS {
      constructor() {
        super(o.ppath);
      }
      getExtractHint() {
        throw s();
      }
      getRealPath() {
        throw s();
      }
      resolve() {
        throw s();
      }
      async openPromise() {
        throw s();
      }
      openSync() {
        throw s();
      }
      async opendirPromise() {
        throw s();
      }
      opendirSync() {
        throw s();
      }
      async readPromise() {
        throw s();
      }
      readSync() {
        throw s();
      }
      async writePromise() {
        throw s();
      }
      writeSync() {
        throw s();
      }
      async closePromise() {
        throw s();
      }
      closeSync() {
        throw s();
      }
      createWriteStream() {
        throw s();
      }
      createReadStream() {
        throw s();
      }
      async realpathPromise() {
        throw s();
      }
      realpathSync() {
        throw s();
      }
      async readdirPromise() {
        throw s();
      }
      readdirSync() {
        throw s();
      }
      async existsPromise(e) {
        throw s();
      }
      existsSync(e) {
        throw s();
      }
      async accessPromise() {
        throw s();
      }
      accessSync() {
        throw s();
      }
      async statPromise() {
        throw s();
      }
      statSync() {
        throw s();
      }
      async fstatPromise(e) {
        throw s();
      }
      fstatSync(e) {
        throw s();
      }
      async lstatPromise(e) {
        throw s();
      }
      lstatSync(e) {
        throw s();
      }
      async fchmodPromise() {
        throw s();
      }
      fchmodSync() {
        throw s();
      }
      async chmodPromise() {
        throw s();
      }
      chmodSync() {
        throw s();
      }
      async fchownPromise() {
        throw s();
      }
      fchownSync() {
        throw s();
      }
      async chownPromise() {
        throw s();
      }
      chownSync() {
        throw s();
      }
      async mkdirPromise() {
        throw s();
      }
      mkdirSync() {
        throw s();
      }
      async rmdirPromise() {
        throw s();
      }
      rmdirSync() {
        throw s();
      }
      async linkPromise() {
        throw s();
      }
      linkSync() {
        throw s();
      }
      async symlinkPromise() {
        throw s();
      }
      symlinkSync() {
        throw s();
      }
      async renamePromise() {
        throw s();
      }
      renameSync() {
        throw s();
      }
      async copyFilePromise() {
        throw s();
      }
      copyFileSync() {
        throw s();
      }
      async appendFilePromise() {
        throw s();
      }
      appendFileSync() {
        throw s();
      }
      async writeFilePromise() {
        throw s();
      }
      writeFileSync() {
        throw s();
      }
      async unlinkPromise() {
        throw s();
      }
      unlinkSync() {
        throw s();
      }
      async utimesPromise() {
        throw s();
      }
      utimesSync() {
        throw s();
      }
      async readFilePromise() {
        throw s();
      }
      readFileSync() {
        throw s();
      }
      async readlinkPromise() {
        throw s();
      }
      readlinkSync() {
        throw s();
      }
      async truncatePromise() {
        throw s();
      }
      truncateSync() {
        throw s();
      }
      async ftruncatePromise(e, t) {
        throw s();
      }
      ftruncateSync(e, t) {
        throw s();
      }
      watch() {
        throw s();
      }
      watchFile() {
        throw s();
      }
      unwatchFile() {
        throw s();
      }
    }
    exports.NoFS = a;
    a.instance = new a();
  },
  41639: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NodeFS = undefined;
    const r = require(70961).__importDefault(require(79896));
    const o = require(54570);
    const s = require(21795);
    const a = require(40055);
    class A extends o.BasePortableFakeFS {
      constructor(e = r.default) {
        super();
        this.realFs = e;
        if (this.realFs.lutimes !== undefined) {
          this.lutimesPromise = this.lutimesPromiseImpl;
          this.lutimesSync = this.lutimesSyncImpl;
        }
      }
      getExtractHint() {
        return false;
      }
      getRealPath() {
        return a.PortablePath.root;
      }
      resolve(e) {
        return a.ppath.resolve(e);
      }
      async openPromise(e, t, n) {
        return await new Promise((r, o) => {
          this.realFs.open(a.npath.fromPortablePath(e), t, n, this.makeCallback(r, o));
        });
      }
      openSync(e, t, n) {
        return this.realFs.openSync(a.npath.fromPortablePath(e), t, n);
      }
      async opendirPromise(e, t) {
        return await new Promise((n, r) => {
          if (t !== undefined) {
            this.realFs.opendir(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
          } else {
            this.realFs.opendir(a.npath.fromPortablePath(e), this.makeCallback(n, r));
          }
        }).then(t => Object.defineProperty(t, 'path', {
          value: e,
          configurable: true,
          writable: true
        }));
      }
      opendirSync(e, t) {
        const n = t !== undefined ? this.realFs.opendirSync(a.npath.fromPortablePath(e), t) : this.realFs.opendirSync(a.npath.fromPortablePath(e));
        return Object.defineProperty(n, 'path', {
          value: e,
          configurable: true,
          writable: true
        });
      }
      async readPromise(e, t, n = 0, r = 0, o = -1) {
        return await new Promise((s, a) => {
          this.realFs.read(e, t, n, r, o, (e, t) => {
            if (e) {
              a(e);
            } else {
              s(t);
            }
          });
        });
      }
      readSync(e, t, n, r, o) {
        return this.realFs.readSync(e, t, n, r, o);
      }
      async writePromise(e, t, n, r, o) {
        return await new Promise((s, a) => typeof t == 'string' ? this.realFs.write(e, t, n, this.makeCallback(s, a)) : this.realFs.write(e, t, n, r, o, this.makeCallback(s, a)));
      }
      writeSync(e, t, n, r, o) {
        if (typeof t == 'string') {
          return this.realFs.writeSync(e, t, n);
        } else {
          return this.realFs.writeSync(e, t, n, r, o);
        }
      }
      async closePromise(e) {
        await new Promise((t, n) => {
          this.realFs.close(e, this.makeCallback(t, n));
        });
      }
      closeSync(e) {
        this.realFs.closeSync(e);
      }
      createReadStream(e, t) {
        const n = e !== null ? a.npath.fromPortablePath(e) : e;
        return this.realFs.createReadStream(n, t);
      }
      createWriteStream(e, t) {
        const n = e !== null ? a.npath.fromPortablePath(e) : e;
        return this.realFs.createWriteStream(n, t);
      }
      async realpathPromise(e) {
        return await new Promise((t, n) => {
          this.realFs.realpath(a.npath.fromPortablePath(e), {}, this.makeCallback(t, n));
        }).then(e => a.npath.toPortablePath(e));
      }
      realpathSync(e) {
        return a.npath.toPortablePath(this.realFs.realpathSync(a.npath.fromPortablePath(e), {}));
      }
      async existsPromise(e) {
        return await new Promise(t => {
          this.realFs.exists(a.npath.fromPortablePath(e), t);
        });
      }
      accessSync(e, t) {
        return this.realFs.accessSync(a.npath.fromPortablePath(e), t);
      }
      async accessPromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.access(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
        });
      }
      existsSync(e) {
        return this.realFs.existsSync(a.npath.fromPortablePath(e));
      }
      async statPromise(e, t) {
        return await new Promise((n, r) => {
          if (t) {
            this.realFs.stat(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
          } else {
            this.realFs.stat(a.npath.fromPortablePath(e), this.makeCallback(n, r));
          }
        });
      }
      statSync(e, t) {
        if (t) {
          return this.realFs.statSync(a.npath.fromPortablePath(e), t);
        } else {
          return this.realFs.statSync(a.npath.fromPortablePath(e));
        }
      }
      async fstatPromise(e, t) {
        return await new Promise((n, r) => {
          if (t) {
            this.realFs.fstat(e, t, this.makeCallback(n, r));
          } else {
            this.realFs.fstat(e, this.makeCallback(n, r));
          }
        });
      }
      fstatSync(e, t) {
        if (t) {
          return this.realFs.fstatSync(e, t);
        } else {
          return this.realFs.fstatSync(e);
        }
      }
      async lstatPromise(e, t) {
        return await new Promise((n, r) => {
          if (t) {
            this.realFs.lstat(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
          } else {
            this.realFs.lstat(a.npath.fromPortablePath(e), this.makeCallback(n, r));
          }
        });
      }
      lstatSync(e, t) {
        if (t) {
          return this.realFs.lstatSync(a.npath.fromPortablePath(e), t);
        } else {
          return this.realFs.lstatSync(a.npath.fromPortablePath(e));
        }
      }
      async fchmodPromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.fchmod(e, t, this.makeCallback(n, r));
        });
      }
      fchmodSync(e, t) {
        return this.realFs.fchmodSync(e, t);
      }
      async chmodPromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.chmod(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
        });
      }
      chmodSync(e, t) {
        return this.realFs.chmodSync(a.npath.fromPortablePath(e), t);
      }
      async fchownPromise(e, t, n) {
        return await new Promise((r, o) => {
          this.realFs.fchown(e, t, n, this.makeCallback(r, o));
        });
      }
      fchownSync(e, t, n) {
        return this.realFs.fchownSync(e, t, n);
      }
      async chownPromise(e, t, n) {
        return await new Promise((r, o) => {
          this.realFs.chown(a.npath.fromPortablePath(e), t, n, this.makeCallback(r, o));
        });
      }
      chownSync(e, t, n) {
        return this.realFs.chownSync(a.npath.fromPortablePath(e), t, n);
      }
      async renamePromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.rename(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t), this.makeCallback(n, r));
        });
      }
      renameSync(e, t) {
        return this.realFs.renameSync(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t));
      }
      async copyFilePromise(e, t, n = 0) {
        return await new Promise((r, o) => {
          this.realFs.copyFile(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t), n, this.makeCallback(r, o));
        });
      }
      copyFileSync(e, t, n = 0) {
        return this.realFs.copyFileSync(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t), n);
      }
      async appendFilePromise(e, t, n) {
        return await new Promise((r, o) => {
          const s = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
          if (n) {
            this.realFs.appendFile(s, t, n, this.makeCallback(r, o));
          } else {
            this.realFs.appendFile(s, t, this.makeCallback(r, o));
          }
        });
      }
      appendFileSync(e, t, n) {
        const r = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
        if (n) {
          this.realFs.appendFileSync(r, t, n);
        } else {
          this.realFs.appendFileSync(r, t);
        }
      }
      async writeFilePromise(e, t, n) {
        return await new Promise((r, o) => {
          const s = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
          if (n) {
            this.realFs.writeFile(s, t, n, this.makeCallback(r, o));
          } else {
            this.realFs.writeFile(s, t, this.makeCallback(r, o));
          }
        });
      }
      writeFileSync(e, t, n) {
        const r = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
        if (n) {
          this.realFs.writeFileSync(r, t, n);
        } else {
          this.realFs.writeFileSync(r, t);
        }
      }
      async unlinkPromise(e) {
        return await new Promise((t, n) => {
          this.realFs.unlink(a.npath.fromPortablePath(e), this.makeCallback(t, n));
        });
      }
      unlinkSync(e) {
        return this.realFs.unlinkSync(a.npath.fromPortablePath(e));
      }
      async utimesPromise(e, t, n) {
        return await new Promise((r, o) => {
          this.realFs.utimes(a.npath.fromPortablePath(e), t, n, this.makeCallback(r, o));
        });
      }
      utimesSync(e, t, n) {
        this.realFs.utimesSync(a.npath.fromPortablePath(e), t, n);
      }
      async lutimesPromiseImpl(e, t, n) {
        const r = this.realFs.lutimes;
        if (r === undefined) {
          throw s.ENOSYS('unavailable Node binding', `lutimes '${e}'`);
        }
        return await new Promise((o, s) => {
          r.call(this.realFs, a.npath.fromPortablePath(e), t, n, this.makeCallback(o, s));
        });
      }
      lutimesSyncImpl(e, t, n) {
        const r = this.realFs.lutimesSync;
        if (r === undefined) {
          throw s.ENOSYS('unavailable Node binding', `lutimes '${e}'`);
        }
        r.call(this.realFs, a.npath.fromPortablePath(e), t, n);
      }
      async mkdirPromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.mkdir(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
        });
      }
      mkdirSync(e, t) {
        return this.realFs.mkdirSync(a.npath.fromPortablePath(e), t);
      }
      async rmdirPromise(e, t) {
        return await new Promise((n, r) => {
          if (t) {
            this.realFs.rmdir(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
          } else {
            this.realFs.rmdir(a.npath.fromPortablePath(e), this.makeCallback(n, r));
          }
        });
      }
      rmdirSync(e, t) {
        return this.realFs.rmdirSync(a.npath.fromPortablePath(e), t);
      }
      async linkPromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.link(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t), this.makeCallback(n, r));
        });
      }
      linkSync(e, t) {
        return this.realFs.linkSync(a.npath.fromPortablePath(e), a.npath.fromPortablePath(t));
      }
      async symlinkPromise(e, t, n) {
        return await new Promise((r, o) => {
          this.realFs.symlink(a.npath.fromPortablePath(e.replace(/\/+$/, '')), a.npath.fromPortablePath(t), n, this.makeCallback(r, o));
        });
      }
      symlinkSync(e, t, n) {
        return this.realFs.symlinkSync(a.npath.fromPortablePath(e.replace(/\/+$/, '')), a.npath.fromPortablePath(t), n);
      }
      async readFilePromise(e, t) {
        return await new Promise((n, r) => {
          const o = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
          this.realFs.readFile(o, t, this.makeCallback(n, r));
        });
      }
      readFileSync(e, t) {
        const n = typeof e == 'string' ? a.npath.fromPortablePath(e) : e;
        return this.realFs.readFileSync(n, t);
      }
      async readdirPromise(e, t) {
        return await new Promise((n, r) => {
          if (t == null ? undefined : t.withFileTypes) {
            this.realFs.readdir(a.npath.fromPortablePath(e), {
              withFileTypes: true
            }, this.makeCallback(n, r));
          } else {
            this.realFs.readdir(a.npath.fromPortablePath(e), this.makeCallback(e => n(e), r));
          }
        });
      }
      readdirSync(e, t) {
        if (t == null ? undefined : t.withFileTypes) {
          return this.realFs.readdirSync(a.npath.fromPortablePath(e), {
            withFileTypes: true
          });
        } else {
          return this.realFs.readdirSync(a.npath.fromPortablePath(e));
        }
      }
      async readlinkPromise(e) {
        return await new Promise((t, n) => {
          this.realFs.readlink(a.npath.fromPortablePath(e), this.makeCallback(t, n));
        }).then(e => a.npath.toPortablePath(e));
      }
      readlinkSync(e) {
        return a.npath.toPortablePath(this.realFs.readlinkSync(a.npath.fromPortablePath(e)));
      }
      async truncatePromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.truncate(a.npath.fromPortablePath(e), t, this.makeCallback(n, r));
        });
      }
      truncateSync(e, t) {
        return this.realFs.truncateSync(a.npath.fromPortablePath(e), t);
      }
      async ftruncatePromise(e, t) {
        return await new Promise((n, r) => {
          this.realFs.ftruncate(e, t, this.makeCallback(n, r));
        });
      }
      ftruncateSync(e, t) {
        return this.realFs.ftruncateSync(e, t);
      }
      watch(e, t, n) {
        return this.realFs.watch(a.npath.fromPortablePath(e), t, n);
      }
      watchFile(e, t, n) {
        return this.realFs.watchFile(a.npath.fromPortablePath(e), t, n);
      }
      unwatchFile(e, t) {
        return this.realFs.unwatchFile(a.npath.fromPortablePath(e), t);
      }
      makeCallback(e, t) {
        return (n, r) => {
          if (n) {
            t(n);
          } else {
            e(r);
          }
        };
      }
    }
    exports.NodeFS = A;
  },
  15336: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NodePathFS = undefined;
    const r = require(87016);
    const o = require(39023);
    const s = require(38824);
    const a = require(40055);
    class A extends s.ProxiedFS {
      constructor(e) {
        super(a.npath);
        this.baseFs = e;
      }
      mapFromBase(e) {
        return e;
      }
      mapToBase(e) {
        if (typeof e == 'string') {
          return e;
        }
        if (e instanceof r.URL) {
          return r.fileURLToPath(e);
        }
        if (Buffer.isBuffer(e)) {
          const t = e.toString();
          if (Buffer.byteLength(t) !== e.byteLength) {
            throw new Error('Non-utf8 buffers are not supported at the moment. Please upvote the following issue if you encounter this error: https://github.com/yarnpkg/berry/issues/4942');
          }
          return t;
        }
        throw new Error(`Unsupported path type: ${o.inspect(e)}`);
      }
    }
    exports.NodePathFS = A;
  },
  53498: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.PosixFS = undefined;
    const r = require(38824);
    const o = require(40055);
    class s extends r.ProxiedFS {
      constructor(e) {
        super(o.npath);
        this.baseFs = e;
      }
      mapFromBase(e) {
        return o.npath.fromPortablePath(e);
      }
      mapToBase(e) {
        return o.npath.toPortablePath(e);
      }
    }
    exports.PosixFS = s;
  },
  38824: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProxiedFS = undefined;
    const r = require(54570);
    class o extends r.FakeFS {
      getExtractHint(e) {
        return this.baseFs.getExtractHint(e);
      }
      resolve(e) {
        return this.mapFromBase(this.baseFs.resolve(this.mapToBase(e)));
      }
      getRealPath() {
        return this.mapFromBase(this.baseFs.getRealPath());
      }
      async openPromise(e, t, n) {
        return this.baseFs.openPromise(this.mapToBase(e), t, n);
      }
      openSync(e, t, n) {
        return this.baseFs.openSync(this.mapToBase(e), t, n);
      }
      async opendirPromise(e, t) {
        return Object.assign(await this.baseFs.opendirPromise(this.mapToBase(e), t), {
          path: e
        });
      }
      opendirSync(e, t) {
        return Object.assign(this.baseFs.opendirSync(this.mapToBase(e), t), {
          path: e
        });
      }
      async readPromise(e, t, n, r, o) {
        return await this.baseFs.readPromise(e, t, n, r, o);
      }
      readSync(e, t, n, r, o) {
        return this.baseFs.readSync(e, t, n, r, o);
      }
      async writePromise(e, t, n, r, o) {
        if (typeof t == 'string') {
          return await this.baseFs.writePromise(e, t, n);
        } else {
          return await this.baseFs.writePromise(e, t, n, r, o);
        }
      }
      writeSync(e, t, n, r, o) {
        if (typeof t == 'string') {
          return this.baseFs.writeSync(e, t, n);
        } else {
          return this.baseFs.writeSync(e, t, n, r, o);
        }
      }
      async closePromise(e) {
        return this.baseFs.closePromise(e);
      }
      closeSync(e) {
        this.baseFs.closeSync(e);
      }
      createReadStream(e, t) {
        return this.baseFs.createReadStream(e !== null ? this.mapToBase(e) : e, t);
      }
      createWriteStream(e, t) {
        return this.baseFs.createWriteStream(e !== null ? this.mapToBase(e) : e, t);
      }
      async realpathPromise(e) {
        return this.mapFromBase(await this.baseFs.realpathPromise(this.mapToBase(e)));
      }
      realpathSync(e) {
        return this.mapFromBase(this.baseFs.realpathSync(this.mapToBase(e)));
      }
      async existsPromise(e) {
        return this.baseFs.existsPromise(this.mapToBase(e));
      }
      existsSync(e) {
        return this.baseFs.existsSync(this.mapToBase(e));
      }
      accessSync(e, t) {
        return this.baseFs.accessSync(this.mapToBase(e), t);
      }
      async accessPromise(e, t) {
        return this.baseFs.accessPromise(this.mapToBase(e), t);
      }
      async statPromise(e, t) {
        return this.baseFs.statPromise(this.mapToBase(e), t);
      }
      statSync(e, t) {
        return this.baseFs.statSync(this.mapToBase(e), t);
      }
      async fstatPromise(e, t) {
        return this.baseFs.fstatPromise(e, t);
      }
      fstatSync(e, t) {
        return this.baseFs.fstatSync(e, t);
      }
      lstatPromise(e, t) {
        return this.baseFs.lstatPromise(this.mapToBase(e), t);
      }
      lstatSync(e, t) {
        return this.baseFs.lstatSync(this.mapToBase(e), t);
      }
      async fchmodPromise(e, t) {
        return this.baseFs.fchmodPromise(e, t);
      }
      fchmodSync(e, t) {
        return this.baseFs.fchmodSync(e, t);
      }
      async chmodPromise(e, t) {
        return this.baseFs.chmodPromise(this.mapToBase(e), t);
      }
      chmodSync(e, t) {
        return this.baseFs.chmodSync(this.mapToBase(e), t);
      }
      async fchownPromise(e, t, n) {
        return this.baseFs.fchownPromise(e, t, n);
      }
      fchownSync(e, t, n) {
        return this.baseFs.fchownSync(e, t, n);
      }
      async chownPromise(e, t, n) {
        return this.baseFs.chownPromise(this.mapToBase(e), t, n);
      }
      chownSync(e, t, n) {
        return this.baseFs.chownSync(this.mapToBase(e), t, n);
      }
      async renamePromise(e, t) {
        return this.baseFs.renamePromise(this.mapToBase(e), this.mapToBase(t));
      }
      renameSync(e, t) {
        return this.baseFs.renameSync(this.mapToBase(e), this.mapToBase(t));
      }
      async copyFilePromise(e, t, n = 0) {
        return this.baseFs.copyFilePromise(this.mapToBase(e), this.mapToBase(t), n);
      }
      copyFileSync(e, t, n = 0) {
        return this.baseFs.copyFileSync(this.mapToBase(e), this.mapToBase(t), n);
      }
      async appendFilePromise(e, t, n) {
        return this.baseFs.appendFilePromise(this.fsMapToBase(e), t, n);
      }
      appendFileSync(e, t, n) {
        return this.baseFs.appendFileSync(this.fsMapToBase(e), t, n);
      }
      async writeFilePromise(e, t, n) {
        return this.baseFs.writeFilePromise(this.fsMapToBase(e), t, n);
      }
      writeFileSync(e, t, n) {
        return this.baseFs.writeFileSync(this.fsMapToBase(e), t, n);
      }
      async unlinkPromise(e) {
        return this.baseFs.unlinkPromise(this.mapToBase(e));
      }
      unlinkSync(e) {
        return this.baseFs.unlinkSync(this.mapToBase(e));
      }
      async utimesPromise(e, t, n) {
        return this.baseFs.utimesPromise(this.mapToBase(e), t, n);
      }
      utimesSync(e, t, n) {
        return this.baseFs.utimesSync(this.mapToBase(e), t, n);
      }
      async mkdirPromise(e, t) {
        return this.baseFs.mkdirPromise(this.mapToBase(e), t);
      }
      mkdirSync(e, t) {
        return this.baseFs.mkdirSync(this.mapToBase(e), t);
      }
      async rmdirPromise(e, t) {
        return this.baseFs.rmdirPromise(this.mapToBase(e), t);
      }
      rmdirSync(e, t) {
        return this.baseFs.rmdirSync(this.mapToBase(e), t);
      }
      async linkPromise(e, t) {
        return this.baseFs.linkPromise(this.mapToBase(e), this.mapToBase(t));
      }
      linkSync(e, t) {
        return this.baseFs.linkSync(this.mapToBase(e), this.mapToBase(t));
      }
      async symlinkPromise(e, t, n) {
        const r = this.mapToBase(t);
        if (this.pathUtils.isAbsolute(e)) {
          return this.baseFs.symlinkPromise(this.mapToBase(e), r, n);
        }
        const o = this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(t), e));
        const s = this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(r), o);
        return this.baseFs.symlinkPromise(s, r, n);
      }
      symlinkSync(e, t, n) {
        const r = this.mapToBase(t);
        if (this.pathUtils.isAbsolute(e)) {
          return this.baseFs.symlinkSync(this.mapToBase(e), r, n);
        }
        const o = this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(t), e));
        const s = this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(r), o);
        return this.baseFs.symlinkSync(s, r, n);
      }
      async readFilePromise(e, t) {
        return this.baseFs.readFilePromise(this.fsMapToBase(e), t);
      }
      readFileSync(e, t) {
        return this.baseFs.readFileSync(this.fsMapToBase(e), t);
      }
      async readdirPromise(e, t) {
        return this.baseFs.readdirPromise(this.mapToBase(e), t);
      }
      readdirSync(e, t) {
        return this.baseFs.readdirSync(this.mapToBase(e), t);
      }
      async readlinkPromise(e) {
        return this.mapFromBase(await this.baseFs.readlinkPromise(this.mapToBase(e)));
      }
      readlinkSync(e) {
        return this.mapFromBase(this.baseFs.readlinkSync(this.mapToBase(e)));
      }
      async truncatePromise(e, t) {
        return this.baseFs.truncatePromise(this.mapToBase(e), t);
      }
      truncateSync(e, t) {
        return this.baseFs.truncateSync(this.mapToBase(e), t);
      }
      async ftruncatePromise(e, t) {
        return this.baseFs.ftruncatePromise(e, t);
      }
      ftruncateSync(e, t) {
        return this.baseFs.ftruncateSync(e, t);
      }
      watch(e, t, n) {
        return this.baseFs.watch(this.mapToBase(e), t, n);
      }
      watchFile(e, t, n) {
        return this.baseFs.watchFile(this.mapToBase(e), t, n);
      }
      unwatchFile(e, t) {
        return this.baseFs.unwatchFile(this.mapToBase(e), t);
      }
      fsMapToBase(e) {
        if (typeof e == 'number') {
          return e;
        } else {
          return this.mapToBase(e);
        }
      }
    }
    exports.ProxiedFS = o;
  },
  66878: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.VirtualFS = undefined;
    const r = require(41639);
    const o = require(38824);
    const s = require(40055);
    const a = /^[0-9]+$/;
    const A = /^(\/(?:[^/]+\/)*?(?:\$\$virtual|__virtual__))((?:\/((?:[^/]+-)?[a-f0-9]+)(?:\/([^/]+))?)?((?:\/.*)?))$/;
    const c = /^([^/]+-)?[a-f0-9]+$/;
    class u extends o.ProxiedFS {
      static makeVirtualPath(e, t, n) {
        if (s.ppath.basename(e) !== '__virtual__') {
          throw new Error('Assertion failed: Virtual folders must be named "__virtual__"');
        }
        if (!s.ppath.basename(t).match(c)) {
          throw new Error('Assertion failed: Virtual components must be ended by an hexadecimal hash');
        }
        const r = s.ppath.relative(s.ppath.dirname(e), n).split('/');
        let o = 0;
        while (o < r.length && r[o] === '..') {
          o += 1;
        }
        const a = r.slice(o);
        return s.ppath.join(e, t, String(o), ...a);
      }
      static resolveVirtual(e) {
        const t = e.match(A);
        if (!t || !t[3] && t[5]) {
          return e;
        }
        const n = s.ppath.dirname(t[1]);
        if (!t[3] || !t[4]) {
          return n;
        }
        if (!a.test(t[4])) {
          return e;
        }
        const r = Number(t[4]);
        const o = '../'.repeat(r);
        const c = t[5] || '.';
        return u.resolveVirtual(s.ppath.join(n, o, c));
      }
      constructor({
        baseFs: e = new r.NodeFS()
      } = {}) {
        super(s.ppath);
        this.baseFs = e;
      }
      getExtractHint(e) {
        return this.baseFs.getExtractHint(e);
      }
      getRealPath() {
        return this.baseFs.getRealPath();
      }
      realpathSync(e) {
        const t = e.match(A);
        if (!t) {
          return this.baseFs.realpathSync(e);
        }
        if (!t[5]) {
          return e;
        }
        const n = this.baseFs.realpathSync(this.mapToBase(e));
        return u.makeVirtualPath(t[1], t[3], n);
      }
      async realpathPromise(e) {
        const t = e.match(A);
        if (!t) {
          return await this.baseFs.realpathPromise(e);
        }
        if (!t[5]) {
          return e;
        }
        const n = await this.baseFs.realpathPromise(this.mapToBase(e));
        return u.makeVirtualPath(t[1], t[3], n);
      }
      mapToBase(e) {
        if (e === '') {
          return e;
        }
        if (this.pathUtils.isAbsolute(e)) {
          return u.resolveVirtual(e);
        }
        const t = u.resolveVirtual(this.baseFs.resolve(s.PortablePath.dot));
        const n = u.resolveVirtual(this.baseFs.resolve(e));
        return s.ppath.relative(t, n) || s.PortablePath.dot;
      }
      mapFromBase(e) {
        return e;
      }
    }
    exports.VirtualFS = u;
  },
  4714: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ZipFS = exports.makeEmptyArchive = exports.DEFAULT_COMPRESSION_LEVEL = undefined;
    const r = require(70961);
    const o = require(79896);
    const s = require(2203);
    const a = require(39023);
    const A = r.__importDefault(require(43106));
    const c = require(54570);
    const u = require(41639);
    const l = require(2182);
    const g = require(96712);
    const d = require(50767);
    const h = r.__importStar(require(21795));
    const f = require(40055);
    const p = r.__importStar(require(70305));
    function m() {
      return Buffer.from([80, 75, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    }
    exports.DEFAULT_COMPRESSION_LEVEL = 'mixed';
    exports.makeEmptyArchive = m;
    class I extends c.BasePortableFakeFS {
      constructor(e, n) {
        super();
        this.lzSource = null;
        this.listings = new Map();
        this.entries = new Map();
        this.fileSources = new Map();
        this.fds = new Map();
        this.nextFd = 0;
        this.ready = false;
        this.readOnly = false;
        this.libzip = n.libzip;
        const r = n;
        this.level = r.level !== undefined ? r.level : exports.DEFAULT_COMPRESSION_LEVEL;
        if (e == null) {
          e = m();
        }
        if (typeof e == 'string') {
          const {
            baseFs: t = new u.NodeFS()
          } = r;
          this.baseFs = t;
          this.path = e;
        } else {
          this.path = null;
          this.baseFs = null;
        }
        if (n.stats) {
          this.stats = n.stats;
        } else {
          if (typeof e == 'string') {
            try {
              this.stats = this.baseFs.statSync(e);
            } catch (e) {
              if (e.code !== 'ENOENT' || !r.create) {
                throw e;
              }
              this.stats = p.makeDefaultStats();
            }
          } else {
            this.stats = p.makeDefaultStats();
          }
        }
        const o = this.libzip.malloc(4);
        try {
          let t = 0;
          if (typeof e == 'string' && r.create) {
            t |= this.libzip.ZIP_CREATE | this.libzip.ZIP_TRUNCATE;
          }
          if (n.readOnly) {
            t |= this.libzip.ZIP_RDONLY;
            this.readOnly = true;
          }
          if (typeof e == 'string') {
            this.zip = this.libzip.open(f.npath.fromPortablePath(e), t, o);
          } else {
            const n = this.allocateUnattachedSource(e);
            try {
              this.zip = this.libzip.openFromSource(n, t, o);
              this.lzSource = n;
            } catch (e) {
              this.libzip.source.free(n);
              throw e;
            }
          }
          if (this.zip === 0) {
            const e = this.libzip.struct.errorS();
            this.libzip.error.initWithCode(e, this.libzip.getValue(o, 'i32'));
            throw this.makeLibzipError(e);
          }
        } finally {
          this.libzip.free(o);
        }
        this.listings.set(f.PortablePath.root, new Set());
        const s = this.libzip.getNumEntries(this.zip, 0);
        for (let e = 0; e < s; ++e) {
          const t = this.libzip.getName(this.zip, e, 0);
          if (f.ppath.isAbsolute(t)) {
            continue;
          }
          const n = f.ppath.resolve(f.PortablePath.root, t);
          this.registerEntry(n, e);
          if (t.endsWith('/')) {
            this.registerListing(n);
          }
        }
        this.symlinkCount = this.libzip.ext.countSymlinks(this.zip);
        if (this.symlinkCount === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        this.ready = true;
      }
      makeLibzipError(e) {
        const t = this.libzip.struct.errorCodeZip(e);
        const n = this.libzip.error.strerror(e);
        const r = new h.LibzipError(n, this.libzip.errors[t]);
        if (t === this.libzip.errors.ZIP_ER_CHANGED) {
          throw new Error(`Assertion failed: Unexpected libzip error: ${r.message}`);
        }
        return r;
      }
      getExtractHint(e) {
        for (const t of this.entries.keys()) {
          const n = this.pathUtils.extname(t);
          if (e.relevantExtensions.has(n)) {
            return true;
          }
        }
        return false;
      }
      getAllFiles() {
        return Array.from(this.entries.keys());
      }
      getRealPath() {
        if (!this.path) {
          throw new Error('ZipFS don\'t have real paths when loaded from a buffer');
        }
        return this.path;
      }
      getBufferAndClose() {
        this.prepareClose();
        if (!this.lzSource) {
          throw new Error('ZipFS was not created from a Buffer');
        }
        if (this.entries.size === 0) {
          this.discardAndClose();
          return m();
        }
        try {
          this.libzip.source.keep(this.lzSource);
          if (this.libzip.close(this.zip) === -1) {
            throw this.makeLibzipError(this.libzip.getError(this.zip));
          }
          if (this.libzip.source.open(this.lzSource) === -1) {
            throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
          }
          if (this.libzip.source.seek(this.lzSource, 0, 0, this.libzip.SEEK_END) === -1) {
            throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
          }
          const e = this.libzip.source.tell(this.lzSource);
          if (e === -1) {
            throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
          }
          if (this.libzip.source.seek(this.lzSource, 0, 0, this.libzip.SEEK_SET) === -1) {
            throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
          }
          const t = this.libzip.malloc(e);
          if (!t) {
            throw new Error('Couldn\'t allocate enough memory');
          }
          try {
            const n = this.libzip.source.read(this.lzSource, t, e);
            if (n === -1) {
              throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
            }
            if (n < e) {
              throw new Error('Incomplete read');
            }
            if (n > e) {
              throw new Error('Overread');
            }
            const r = this.libzip.HEAPU8.subarray(t, t + e);
            return Buffer.from(r);
          } finally {
            this.libzip.free(t);
          }
        } finally {
          this.libzip.source.close(this.lzSource);
          this.libzip.source.free(this.lzSource);
          this.ready = false;
        }
      }
      prepareClose() {
        if (!this.ready) {
          throw h.EBUSY('archive closed, close');
        }
        g.unwatchAllFiles(this);
      }
      saveAndClose() {
        if (!this.path || !this.baseFs) {
          throw new Error('ZipFS cannot be saved and must be discarded when loaded from a buffer');
        }
        this.prepareClose();
        if (this.readOnly) {
          this.discardAndClose();
          return;
        }
        const e = this.baseFs.existsSync(this.path) || this.stats.mode === p.DEFAULT_MODE ? undefined : this.stats.mode;
        if (this.entries.size === 0) {
          this.discardAndClose();
          this.baseFs.writeFileSync(this.path, m(), {
            mode: e
          });
        } else {
          if (this.libzip.close(this.zip) === -1) {
            throw this.makeLibzipError(this.libzip.getError(this.zip));
          }
          if (e !== undefined) {
            this.baseFs.chmodSync(this.path, e);
          }
        }
        this.ready = false;
      }
      discardAndClose() {
        this.prepareClose();
        this.libzip.discard(this.zip);
        this.ready = false;
      }
      resolve(e) {
        return f.ppath.resolve(f.PortablePath.root, e);
      }
      async openPromise(e, t, n) {
        return this.openSync(e, t, n);
      }
      openSync(e, t, n) {
        const r = this.nextFd++;
        this.fds.set(r, {
          cursor: 0,
          p: e
        });
        return r;
      }
      hasOpenFileHandles() {
        return !!this.fds.size;
      }
      async opendirPromise(e, t) {
        return this.opendirSync(e, t);
      }
      opendirSync(e, t = {}) {
        const n = this.resolveFilename(`opendir '${e}'`, e);
        if (!this.entries.has(n) && !this.listings.has(n)) {
          throw h.ENOENT(`opendir '${e}'`);
        }
        const r = this.listings.get(n);
        if (!r) {
          throw h.ENOTDIR(`opendir '${e}'`);
        }
        const o = [...r];
        const s = this.openSync(n, 'r');
        return l.opendir(this, n, o, {
          onClose: () => {
            this.closeSync(s);
          }
        });
      }
      async readPromise(e, t, n, r, o) {
        return this.readSync(e, t, n, r, o);
      }
      readSync(e, t, n = 0, r = t.byteLength, o = -1) {
        const s = this.fds.get(e);
        if (s === undefined) {
          throw h.EBADF('read');
        }
        const a = o === -1 || o === null ? s.cursor : o;
        const A = this.readFileSync(s.p);
        A.copy(t, n, a, a + r);
        const c = Math.max(0, Math.min(A.length - a, r));
        if (o === -1 || o === null) {
          s.cursor += c;
        }
        return c;
      }
      async writePromise(e, t, n, r, o) {
        if (typeof t == 'string') {
          return this.writeSync(e, t, o);
        } else {
          return this.writeSync(e, t, n, r, o);
        }
      }
      writeSync(e, t, n, r, o) {
        if (this.fds.get(e) === undefined) {
          throw h.EBADF('read');
        }
        throw new Error('Unimplemented');
      }
      async closePromise(e) {
        return this.closeSync(e);
      }
      closeSync(e) {
        if (this.fds.get(e) === undefined) {
          throw h.EBADF('read');
        }
        this.fds.delete(e);
      }
      createReadStream(e, {
        encoding: t
      } = {}) {
        if (e === null) {
          throw new Error('Unimplemented');
        }
        const n = this.openSync(e, 'r');
        const r = Object.assign(new s.PassThrough({
          emitClose: true,
          autoDestroy: true,
          destroy: (e, t) => {
            clearImmediate(o);
            this.closeSync(n);
            t(e);
          }
        }), {
          close() {
            r.destroy();
          },
          bytesRead: 0,
          path: e,
          pending: false
        });
        const o = setImmediate(async () => {
          try {
            const n = await this.readFilePromise(e, t);
            r.bytesRead = n.length;
            r.end(n);
          } catch (e) {
            r.destroy(e);
          }
        });
        return r;
      }
      createWriteStream(e, {
        encoding: t
      } = {}) {
        if (this.readOnly) {
          throw h.EROFS(`open '${e}'`);
        }
        if (e === null) {
          throw new Error('Unimplemented');
        }
        const n = [];
        const r = this.openSync(e, 'w');
        const o = Object.assign(new s.PassThrough({
          autoDestroy: true,
          emitClose: true,
          destroy: (o, s) => {
            try {
              if (o) {
                s(o);
              } else {
                this.writeFileSync(e, Buffer.concat(n), t);
                s(null);
              }
            } catch (e) {
              s(e);
            } finally {
              this.closeSync(r);
            }
          }
        }), {
          close() {
            o.destroy();
          },
          bytesWritten: 0,
          path: e,
          pending: false
        });
        o.on('data', e => {
          const t = Buffer.from(e);
          o.bytesWritten += t.length;
          n.push(t);
        });
        return o;
      }
      async realpathPromise(e) {
        return this.realpathSync(e);
      }
      realpathSync(e) {
        const t = this.resolveFilename(`lstat '${e}'`, e);
        if (!this.entries.has(t) && !this.listings.has(t)) {
          throw h.ENOENT(`lstat '${e}'`);
        }
        return t;
      }
      async existsPromise(e) {
        return this.existsSync(e);
      }
      existsSync(e) {
        if (!this.ready) {
          throw h.EBUSY(`archive closed, existsSync '${e}'`);
        }
        if (this.symlinkCount === 0) {
          const t = f.ppath.resolve(f.PortablePath.root, e);
          return this.entries.has(t) || this.listings.has(t);
        }
        let t;
        try {
          t = this.resolveFilename(`stat '${e}'`, e, undefined, false);
        } catch (e) {
          return false;
        }
        return t !== undefined && (this.entries.has(t) || this.listings.has(t));
      }
      async accessPromise(e, t) {
        return this.accessSync(e, t);
      }
      accessSync(e, t = o.constants.F_OK) {
        const n = this.resolveFilename(`access '${e}'`, e);
        if (!this.entries.has(n) && !this.listings.has(n)) {
          throw h.ENOENT(`access '${e}'`);
        }
        if (this.readOnly && t & o.constants.W_OK) {
          throw h.EROFS(`access '${e}'`);
        }
      }
      async statPromise(e, t = {
        bigint: false
      }) {
        if (t.bigint) {
          return this.statSync(e, {
            bigint: true
          });
        } else {
          return this.statSync(e);
        }
      }
      statSync(e, t = {
        bigint: false,
        throwIfNoEntry: true
      }) {
        const n = this.resolveFilename(`stat '${e}'`, e, undefined, t.throwIfNoEntry);
        if (n !== undefined) {
          if (!this.entries.has(n) && !this.listings.has(n)) {
            if (t.throwIfNoEntry === false) {
              return;
            }
            throw h.ENOENT(`stat '${e}'`);
          }
          if (e[e.length - 1] === '/' && !this.listings.has(n)) {
            throw h.ENOTDIR(`stat '${e}'`);
          }
          return this.statImpl(`stat '${e}'`, n, t);
        }
      }
      async fstatPromise(e, t) {
        return this.fstatSync(e, t);
      }
      fstatSync(e, t) {
        const n = this.fds.get(e);
        if (n === undefined) {
          throw h.EBADF('fstatSync');
        }
        const {
          p: r
        } = n;
        const o = this.resolveFilename(`stat '${r}'`, r);
        if (!this.entries.has(o) && !this.listings.has(o)) {
          throw h.ENOENT(`stat '${r}'`);
        }
        if (r[r.length - 1] === '/' && !this.listings.has(o)) {
          throw h.ENOTDIR(`stat '${r}'`);
        }
        return this.statImpl(`fstat '${r}'`, o, t);
      }
      async lstatPromise(e, t = {
        bigint: false
      }) {
        if (t.bigint) {
          return this.lstatSync(e, {
            bigint: true
          });
        } else {
          return this.lstatSync(e);
        }
      }
      lstatSync(e, t = {
        bigint: false,
        throwIfNoEntry: true
      }) {
        const n = this.resolveFilename(`lstat '${e}'`, e, false, t.throwIfNoEntry);
        if (n !== undefined) {
          if (!this.entries.has(n) && !this.listings.has(n)) {
            if (t.throwIfNoEntry === false) {
              return;
            }
            throw h.ENOENT(`lstat '${e}'`);
          }
          if (e[e.length - 1] === '/' && !this.listings.has(n)) {
            throw h.ENOTDIR(`lstat '${e}'`);
          }
          return this.statImpl(`lstat '${e}'`, n, t);
        }
      }
      statImpl(e, t, n = {}) {
        const r = this.entries.get(t);
        if (r !== undefined) {
          const e = this.libzip.struct.statS();
          if (this.libzip.statIndex(this.zip, r, 0, 0, e) === -1) {
            throw this.makeLibzipError(this.libzip.getError(this.zip));
          }
          const o = this.stats.uid;
          const s = this.stats.gid;
          const a = this.libzip.struct.statSize(e) >>> 0;
          const A = 512;
          const c = Math.ceil(a / A);
          const u = (this.libzip.struct.statMtime(e) >>> 0) * 1000;
          const l = u;
          const g = u;
          const h = u;
          const f = new Date(l);
          const m = new Date(g);
          const I = new Date(h);
          const E = new Date(u);
          const y = this.listings.has(t) ? d.S_IFDIR : this.isSymbolicLink(r) ? d.S_IFLNK : d.S_IFREG;
          const w = y === d.S_IFDIR ? 493 : 420;
          const _ = y | this.getUnixMode(r, w) & 511;
          const v = this.libzip.struct.statCrc(e);
          const b = Object.assign(new p.StatEntry(), {
            uid: o,
            gid: s,
            size: a,
            blksize: A,
            blocks: c,
            atime: f,
            birthtime: m,
            ctime: I,
            mtime: E,
            atimeMs: l,
            birthtimeMs: g,
            ctimeMs: h,
            mtimeMs: u,
            mode: _,
            crc: v
          });
          if (n.bigint === true) {
            return p.convertToBigIntStats(b);
          } else {
            return b;
          }
        }
        if (this.listings.has(t)) {
          const e = this.stats.uid;
          const t = this.stats.gid;
          const r = 0;
          const o = 512;
          const s = 0;
          const a = this.stats.mtimeMs;
          const A = this.stats.mtimeMs;
          const c = this.stats.mtimeMs;
          const u = this.stats.mtimeMs;
          const l = new Date(a);
          const g = new Date(A);
          const h = new Date(c);
          const f = new Date(u);
          const m = d.S_IFDIR | 493;
          const I = 0;
          const E = Object.assign(new p.StatEntry(), {
            uid: e,
            gid: t,
            size: r,
            blksize: o,
            blocks: s,
            atime: l,
            birthtime: g,
            ctime: h,
            mtime: f,
            atimeMs: a,
            birthtimeMs: A,
            ctimeMs: c,
            mtimeMs: u,
            mode: m,
            crc: I
          });
          if (n.bigint === true) {
            return p.convertToBigIntStats(E);
          } else {
            return E;
          }
        }
        throw new Error('Unreachable');
      }
      getUnixMode(e, t) {
        if (this.libzip.file.getExternalAttributes(this.zip, e, 0, 0, this.libzip.uint08S, this.libzip.uint32S) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        if (this.libzip.getValue(this.libzip.uint08S, 'i8') >>> 0 !== this.libzip.ZIP_OPSYS_UNIX) {
          return t;
        } else {
          return this.libzip.getValue(this.libzip.uint32S, 'i32') >>> 16;
        }
      }
      registerListing(e) {
        const t = this.listings.get(e);
        if (t) {
          return t;
        }
        this.registerListing(f.ppath.dirname(e)).add(f.ppath.basename(e));
        const n = new Set();
        this.listings.set(e, n);
        return n;
      }
      registerEntry(e, t) {
        this.registerListing(f.ppath.dirname(e)).add(f.ppath.basename(e));
        this.entries.set(e, t);
      }
      unregisterListing(e) {
        this.listings.delete(e);
        const t = this.listings.get(f.ppath.dirname(e));
        if (t != null) {
          t.delete(f.ppath.basename(e));
        }
      }
      unregisterEntry(e) {
        this.unregisterListing(e);
        const t = this.entries.get(e);
        this.entries.delete(e);
        if (t !== undefined) {
          this.fileSources.delete(t);
          if (this.isSymbolicLink(t)) {
            this.symlinkCount--;
          }
        }
      }
      deleteEntry(e, t) {
        this.unregisterEntry(e);
        if (this.libzip.delete(this.zip, t) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
      }
      resolveFilename(e, t, n = true, r = true) {
        if (!this.ready) {
          throw h.EBUSY(`archive closed, ${e}`);
        }
        let o = f.ppath.resolve(f.PortablePath.root, t);
        if (o === '/') {
          return f.PortablePath.root;
        }
        const s = this.entries.get(o);
        if (n && s !== undefined) {
          if (this.symlinkCount !== 0 && this.isSymbolicLink(s)) {
            const t = this.getFileSource(s).toString();
            return this.resolveFilename(e, f.ppath.resolve(f.ppath.dirname(o), t), true, r);
          }
          return o;
        }
        while (true) {
          const t = this.resolveFilename(e, f.ppath.dirname(o), true, r);
          if (t === undefined) {
            return t;
          }
          const s = this.listings.has(t);
          const a = this.entries.has(t);
          if (!s && !a) {
            if (r === false) {
              return;
            }
            throw h.ENOENT(e);
          }
          if (!s) {
            throw h.ENOTDIR(e);
          }
          o = f.ppath.resolve(t, f.ppath.basename(o));
          if (!n || this.symlinkCount === 0) {
            break;
          }
          const A = this.libzip.name.locate(this.zip, o.slice(1), 0);
          if (A === -1) {
            break;
          }
          if (!this.isSymbolicLink(A)) {
            break;
          }
          {
            const e = this.getFileSource(A).toString();
            o = f.ppath.resolve(f.ppath.dirname(o), e);
          }
        }
        return o;
      }
      allocateBuffer(e) {
        if (!Buffer.isBuffer(e)) {
          e = Buffer.from(e);
        }
        const t = this.libzip.malloc(e.byteLength);
        if (!t) {
          throw new Error('Couldn\'t allocate enough memory');
        }
        new Uint8Array(this.libzip.HEAPU8.buffer, t, e.byteLength).set(e);
        return {
          buffer: t,
          byteLength: e.byteLength
        };
      }
      allocateUnattachedSource(e) {
        const t = this.libzip.struct.errorS();
        const {
          buffer: n,
          byteLength: r
        } = this.allocateBuffer(e);
        const o = this.libzip.source.fromUnattachedBuffer(n, r, 0, 1, t);
        if (o === 0) {
          this.libzip.free(t);
          throw this.makeLibzipError(t);
        }
        return o;
      }
      allocateSource(e) {
        const {
          buffer: t,
          byteLength: n
        } = this.allocateBuffer(e);
        const r = this.libzip.source.fromBuffer(this.zip, t, n, 0, 1);
        if (r === 0) {
          this.libzip.free(t);
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        return r;
      }
      setFileSource(e, t) {
        const n = Buffer.isBuffer(t) ? t : Buffer.from(t);
        const r = f.ppath.relative(f.PortablePath.root, e);
        const o = this.allocateSource(t);
        try {
          const e = this.libzip.file.add(this.zip, r, o, this.libzip.ZIP_FL_OVERWRITE);
          if (e === -1) {
            throw this.makeLibzipError(this.libzip.getError(this.zip));
          }
          if (this.level !== 'mixed') {
            const t = this.level === 0 ? this.libzip.ZIP_CM_STORE : this.libzip.ZIP_CM_DEFLATE;
            if (this.libzip.file.setCompression(this.zip, e, 0, t, this.level) === -1) {
              throw this.makeLibzipError(this.libzip.getError(this.zip));
            }
          }
          this.fileSources.set(e, n);
          return e;
        } catch (e) {
          this.libzip.source.free(o);
          throw e;
        }
      }
      isSymbolicLink(e) {
        if (this.symlinkCount === 0) {
          return false;
        }
        if (this.libzip.file.getExternalAttributes(this.zip, e, 0, 0, this.libzip.uint08S, this.libzip.uint32S) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        if (this.libzip.getValue(this.libzip.uint08S, 'i8') >>> 0 !== this.libzip.ZIP_OPSYS_UNIX) {
          return false;
        }
        return (this.libzip.getValue(this.libzip.uint32S, 'i32') >>> 16 & d.S_IFMT) === d.S_IFLNK;
      }
      getFileSource(e, t = {
        asyncDecompress: false
      }) {
        const n = this.fileSources.get(e);
        if (n !== undefined) {
          return n;
        }
        const r = this.libzip.struct.statS();
        if (this.libzip.statIndex(this.zip, e, 0, 0, r) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        const o = this.libzip.struct.statCompSize(r);
        const s = this.libzip.struct.statCompMethod(r);
        const a = this.libzip.malloc(o);
        try {
          const n = this.libzip.fopenIndex(this.zip, e, 0, this.libzip.ZIP_FL_COMPRESSED);
          if (n === 0) {
            throw this.makeLibzipError(this.libzip.getError(this.zip));
          }
          try {
            const r = this.libzip.fread(n, a, o, 0);
            if (r === -1) {
              throw this.makeLibzipError(this.libzip.file.getError(n));
            }
            if (r < o) {
              throw new Error('Incomplete read');
            }
            if (r > o) {
              throw new Error('Overread');
            }
            const c = this.libzip.HEAPU8.subarray(a, a + o);
            const u = Buffer.from(c);
            if (s === 0) {
              this.fileSources.set(e, u);
              return u;
            }
            if (t.asyncDecompress) {
              return new Promise((t, n) => {
                A.default.inflateRaw(u, (r, o) => {
                  if (r) {
                    n(r);
                  } else {
                    this.fileSources.set(e, o);
                    t(o);
                  }
                });
              });
            }
            {
              const t = A.default.inflateRawSync(u);
              this.fileSources.set(e, t);
              return t;
            }
          } finally {
            this.libzip.fclose(n);
          }
        } finally {
          this.libzip.free(a);
        }
      }
      async fchmodPromise(e, t) {
        return this.chmodPromise(this.fdToPath(e, 'fchmod'), t);
      }
      fchmodSync(e, t) {
        return this.chmodSync(this.fdToPath(e, 'fchmodSync'), t);
      }
      async chmodPromise(e, t) {
        return this.chmodSync(e, t);
      }
      chmodSync(e, t) {
        if (this.readOnly) {
          throw h.EROFS(`chmod '${e}'`);
        }
        t &= 493;
        const n = this.resolveFilename(`chmod '${e}'`, e, false);
        const r = this.entries.get(n);
        if (r === undefined) {
          throw new Error(`Assertion failed: The entry should have been registered (${n})`);
        }
        const o = this.getUnixMode(r, d.S_IFREG | 0) & -512 | t;
        if (this.libzip.file.setExternalAttributes(this.zip, r, 0, 0, this.libzip.ZIP_OPSYS_UNIX, o << 16) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
      }
      async fchownPromise(e, t, n) {
        return this.chownPromise(this.fdToPath(e, 'fchown'), t, n);
      }
      fchownSync(e, t, n) {
        return this.chownSync(this.fdToPath(e, 'fchownSync'), t, n);
      }
      async chownPromise(e, t, n) {
        return this.chownSync(e, t, n);
      }
      chownSync(e, t, n) {
        throw new Error('Unimplemented');
      }
      async renamePromise(e, t) {
        return this.renameSync(e, t);
      }
      renameSync(e, t) {
        throw new Error('Unimplemented');
      }
      async copyFilePromise(e, t, n) {
        const {
          indexSource: r,
          indexDest: o,
          resolvedDestP: s
        } = this.prepareCopyFile(e, t, n);
        const a = await this.getFileSource(r, {
          asyncDecompress: true
        });
        const A = this.setFileSource(s, a);
        if (A !== o) {
          this.registerEntry(s, A);
        }
      }
      copyFileSync(e, t, n = 0) {
        const {
          indexSource: r,
          indexDest: o,
          resolvedDestP: s
        } = this.prepareCopyFile(e, t, n);
        const a = this.getFileSource(r);
        const A = this.setFileSource(s, a);
        if (A !== o) {
          this.registerEntry(s, A);
        }
      }
      prepareCopyFile(e, t, n = 0) {
        if (this.readOnly) {
          throw h.EROFS(`copyfile '${e} -> '${t}'`);
        }
        if (n & o.constants.COPYFILE_FICLONE_FORCE) {
          throw h.ENOSYS('unsupported clone operation', `copyfile '${e}' -> ${t}'`);
        }
        const r = this.resolveFilename(`copyfile '${e} -> ${t}'`, e);
        const s = this.entries.get(r);
        if (s === undefined) {
          throw h.EINVAL(`copyfile '${e}' -> '${t}'`);
        }
        const a = this.resolveFilename(`copyfile '${e}' -> ${t}'`, t);
        const A = this.entries.get(a);
        if (n & (o.constants.COPYFILE_EXCL | o.constants.COPYFILE_FICLONE_FORCE) && A !== undefined) {
          throw h.EEXIST(`copyfile '${e}' -> '${t}'`);
        }
        return {
          indexSource: s,
          resolvedDestP: a,
          indexDest: A
        };
      }
      async appendFilePromise(e, t, n) {
        if (this.readOnly) {
          throw h.EROFS(`open '${e}'`);
        }
        if (n === undefined) {
          n = {
            flag: 'a'
          };
        } else {
          if (typeof n == 'string') {
            n = {
              flag: 'a',
              encoding: n
            };
          } else {
            if (n.flag === undefined) {
              n = {
                flag: 'a',
                ...n
              };
            }
          }
        }
        return this.writeFilePromise(e, t, n);
      }
      appendFileSync(e, t, n = {}) {
        if (this.readOnly) {
          throw h.EROFS(`open '${e}'`);
        }
        if (n === undefined) {
          n = {
            flag: 'a'
          };
        } else {
          if (typeof n == 'string') {
            n = {
              flag: 'a',
              encoding: n
            };
          } else {
            if (n.flag === undefined) {
              n = {
                flag: 'a',
                ...n
              };
            }
          }
        }
        return this.writeFileSync(e, t, n);
      }
      fdToPath(e, t) {
        var n;
        const r = (n = this.fds.get(e)) === null || n === undefined ? undefined : n.p;
        if (r === undefined) {
          throw h.EBADF(t);
        }
        return r;
      }
      async writeFilePromise(e, t, n) {
        const {
          encoding: r,
          mode: o,
          index: s,
          resolvedP: a
        } = this.prepareWriteFile(e, n);
        if (s !== undefined && typeof n == 'object' && n.flag && n.flag.includes('a')) {
          t = Buffer.concat([await this.getFileSource(s, {
            asyncDecompress: true
          }), Buffer.from(t)]);
        }
        if (r !== null) {
          t = t.toString(r);
        }
        const A = this.setFileSource(a, t);
        if (A !== s) {
          this.registerEntry(a, A);
        }
        if (o !== null) {
          await this.chmodPromise(a, o);
        }
      }
      writeFileSync(e, t, n) {
        const {
          encoding: r,
          mode: o,
          index: s,
          resolvedP: a
        } = this.prepareWriteFile(e, n);
        if (s !== undefined && typeof n == 'object' && n.flag && n.flag.includes('a')) {
          t = Buffer.concat([this.getFileSource(s), Buffer.from(t)]);
        }
        if (r !== null) {
          t = t.toString(r);
        }
        const A = this.setFileSource(a, t);
        if (A !== s) {
          this.registerEntry(a, A);
        }
        if (o !== null) {
          this.chmodSync(a, o);
        }
      }
      prepareWriteFile(e, t) {
        if (typeof e == 'number') {
          e = this.fdToPath(e, 'read');
        }
        if (this.readOnly) {
          throw h.EROFS(`open '${e}'`);
        }
        const n = this.resolveFilename(`open '${e}'`, e);
        if (this.listings.has(n)) {
          throw h.EISDIR(`open '${e}'`);
        }
        let r = null;
        let o = null;
        if (typeof t == 'string') {
          r = t;
        } else {
          if (typeof t == 'object') {
            ({
              encoding: r = null,
              mode: o = null
            } = t);
          }
        }
        return {
          encoding: r,
          mode: o,
          resolvedP: n,
          index: this.entries.get(n)
        };
      }
      async unlinkPromise(e) {
        return this.unlinkSync(e);
      }
      unlinkSync(e) {
        if (this.readOnly) {
          throw h.EROFS(`unlink '${e}'`);
        }
        const t = this.resolveFilename(`unlink '${e}'`, e);
        if (this.listings.has(t)) {
          throw h.EISDIR(`unlink '${e}'`);
        }
        const n = this.entries.get(t);
        if (n === undefined) {
          throw h.EINVAL(`unlink '${e}'`);
        }
        this.deleteEntry(t, n);
      }
      async utimesPromise(e, t, n) {
        return this.utimesSync(e, t, n);
      }
      utimesSync(e, t, n) {
        if (this.readOnly) {
          throw h.EROFS(`utimes '${e}'`);
        }
        const r = this.resolveFilename(`utimes '${e}'`, e);
        this.utimesImpl(r, n);
      }
      async lutimesPromise(e, t, n) {
        return this.lutimesSync(e, t, n);
      }
      lutimesSync(e, t, n) {
        if (this.readOnly) {
          throw h.EROFS(`lutimes '${e}'`);
        }
        const r = this.resolveFilename(`utimes '${e}'`, e, false);
        this.utimesImpl(r, n);
      }
      utimesImpl(e, t) {
        if (this.listings.has(e)) {
          if (!this.entries.has(e)) {
            this.hydrateDirectory(e);
          }
        }
        const n = this.entries.get(e);
        if (n === undefined) {
          throw new Error('Unreachable');
        }
        if (this.libzip.file.setMtime(this.zip, n, 0, function (e) {
          if (typeof e == 'string' && String(+e) === e) {
            return +e;
          }
          if (typeof e == 'number' && Number.isFinite(e)) {
            if (e < 0) {
              return Date.now() / 1000;
            } else {
              return e;
            }
          }
          if (a.types.isDate(e)) {
            return e.getTime() / 1000;
          }
          throw new Error('Invalid time');
        }(t), 0) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
      }
      async mkdirPromise(e, t) {
        return this.mkdirSync(e, t);
      }
      mkdirSync(e, {
        mode: t = 493,
        recursive: n = false
      } = {}) {
        if (n) {
          return this.mkdirpSync(e, {
            chmod: t
          });
        }
        if (this.readOnly) {
          throw h.EROFS(`mkdir '${e}'`);
        }
        const r = this.resolveFilename(`mkdir '${e}'`, e);
        if (this.entries.has(r) || this.listings.has(r)) {
          throw h.EEXIST(`mkdir '${e}'`);
        }
        this.hydrateDirectory(r);
        this.chmodSync(r, t);
      }
      async rmdirPromise(e, t) {
        return this.rmdirSync(e, t);
      }
      rmdirSync(e, {
        recursive: t = false
      } = {}) {
        if (this.readOnly) {
          throw h.EROFS(`rmdir '${e}'`);
        }
        if (t) {
          this.removeSync(e);
          return;
        }
        const n = this.resolveFilename(`rmdir '${e}'`, e);
        const r = this.listings.get(n);
        if (!r) {
          throw h.ENOTDIR(`rmdir '${e}'`);
        }
        if (r.size > 0) {
          throw h.ENOTEMPTY(`rmdir '${e}'`);
        }
        const o = this.entries.get(n);
        if (o === undefined) {
          throw h.EINVAL(`rmdir '${e}'`);
        }
        this.deleteEntry(e, o);
      }
      hydrateDirectory(e) {
        const t = this.libzip.dir.add(this.zip, f.ppath.relative(f.PortablePath.root, e));
        if (t === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        this.registerListing(e);
        this.registerEntry(e, t);
        return t;
      }
      async linkPromise(e, t) {
        return this.linkSync(e, t);
      }
      linkSync(e, t) {
        throw h.EOPNOTSUPP(`link '${e}' -> '${t}'`);
      }
      async symlinkPromise(e, t) {
        return this.symlinkSync(e, t);
      }
      symlinkSync(e, t) {
        if (this.readOnly) {
          throw h.EROFS(`symlink '${e}' -> '${t}'`);
        }
        const n = this.resolveFilename(`symlink '${e}' -> '${t}'`, t);
        if (this.listings.has(n)) {
          throw h.EISDIR(`symlink '${e}' -> '${t}'`);
        }
        if (this.entries.has(n)) {
          throw h.EEXIST(`symlink '${e}' -> '${t}'`);
        }
        const r = this.setFileSource(n, e);
        this.registerEntry(n, r);
        if (this.libzip.file.setExternalAttributes(this.zip, r, 0, 0, this.libzip.ZIP_OPSYS_UNIX, (d.S_IFLNK | 511) << 16) === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
        this.symlinkCount += 1;
      }
      async readFilePromise(e, t) {
        if (typeof t == 'object') {
          t = t ? t.encoding : undefined;
        }
        const n = await this.readFileBuffer(e, {
          asyncDecompress: true
        });
        if (t) {
          return n.toString(t);
        } else {
          return n;
        }
      }
      readFileSync(e, t) {
        if (typeof t == 'object') {
          t = t ? t.encoding : undefined;
        }
        const n = this.readFileBuffer(e);
        if (t) {
          return n.toString(t);
        } else {
          return n;
        }
      }
      readFileBuffer(e, t = {
        asyncDecompress: false
      }) {
        if (typeof e == 'number') {
          e = this.fdToPath(e, 'read');
        }
        const n = this.resolveFilename(`open '${e}'`, e);
        if (!this.entries.has(n) && !this.listings.has(n)) {
          throw h.ENOENT(`open '${e}'`);
        }
        if (e[e.length - 1] === '/' && !this.listings.has(n)) {
          throw h.ENOTDIR(`open '${e}'`);
        }
        if (this.listings.has(n)) {
          throw h.EISDIR('read');
        }
        const r = this.entries.get(n);
        if (r === undefined) {
          throw new Error('Unreachable');
        }
        return this.getFileSource(r, t);
      }
      async readdirPromise(e, t) {
        return this.readdirSync(e, t);
      }
      readdirSync(e, t) {
        const n = this.resolveFilename(`scandir '${e}'`, e);
        if (!this.entries.has(n) && !this.listings.has(n)) {
          throw h.ENOENT(`scandir '${e}'`);
        }
        const r = this.listings.get(n);
        if (!r) {
          throw h.ENOTDIR(`scandir '${e}'`);
        }
        const o = [...r];
        if (t == null ? undefined : t.withFileTypes) {
          return o.map(t => Object.assign(this.statImpl('lstat', f.ppath.join(e, t)), {
            name: t
          }));
        } else {
          return o;
        }
      }
      async readlinkPromise(e) {
        const t = this.prepareReadlink(e);
        return (await this.getFileSource(t, {
          asyncDecompress: true
        })).toString();
      }
      readlinkSync(e) {
        const t = this.prepareReadlink(e);
        return this.getFileSource(t).toString();
      }
      prepareReadlink(e) {
        const t = this.resolveFilename(`readlink '${e}'`, e, false);
        if (!this.entries.has(t) && !this.listings.has(t)) {
          throw h.ENOENT(`readlink '${e}'`);
        }
        if (e[e.length - 1] === '/' && !this.listings.has(t)) {
          throw h.ENOTDIR(`open '${e}'`);
        }
        if (this.listings.has(t)) {
          throw h.EINVAL(`readlink '${e}'`);
        }
        const n = this.entries.get(t);
        if (n === undefined) {
          throw new Error('Unreachable');
        }
        if (!this.isSymbolicLink(n)) {
          throw h.EINVAL(`readlink '${e}'`);
        }
        return n;
      }
      async truncatePromise(e, t = 0) {
        const n = this.resolveFilename(`open '${e}'`, e);
        const r = this.entries.get(n);
        if (r === undefined) {
          throw h.EINVAL(`open '${e}'`);
        }
        const o = await this.getFileSource(r, {
          asyncDecompress: true
        });
        const s = Buffer.alloc(t, 0);
        o.copy(s);
        return await this.writeFilePromise(e, s);
      }
      truncateSync(e, t = 0) {
        const n = this.resolveFilename(`open '${e}'`, e);
        const r = this.entries.get(n);
        if (r === undefined) {
          throw h.EINVAL(`open '${e}'`);
        }
        const o = this.getFileSource(r);
        const s = Buffer.alloc(t, 0);
        o.copy(s);
        return this.writeFileSync(e, s);
      }
      async ftruncatePromise(e, t) {
        return this.truncatePromise(this.fdToPath(e, 'ftruncate'), t);
      }
      ftruncateSync(e, t) {
        return this.truncateSync(this.fdToPath(e, 'ftruncateSync'), t);
      }
      watch(e, t, n) {
        let r;
        switch (typeof t) {
          case 'function':
          case 'string':
          case 'undefined':
            r = true;
            break;
          default:
            ({
              persistent: r = true
            } = t);
        }
        if (!r) {
          return {
            on: () => {},
            close: () => {}
          };
        }
        const o = setInterval(() => {}, 86400000);
        return {
          on: () => {},
          close: () => {
            clearInterval(o);
          }
        };
      }
      watchFile(e, t, n) {
        const r = f.ppath.resolve(f.PortablePath.root, e);
        return g.watchFile(this, r, t, n);
      }
      unwatchFile(e, t) {
        const n = f.ppath.resolve(f.PortablePath.root, e);
        return g.unwatchFile(this, n, t);
      }
    }
    exports.ZipFS = I;
  },
  6930: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ZipOpenFS = exports.getArchivePart = undefined;
    const r = require(70961);
    const o = require(79896);
    const s = require(54570);
    const a = require(41639);
    const A = require(4714);
    const c = require(96712);
    const u = r.__importStar(require(21795));
    const l = require(40055);
    const g = 4278190080;
    const d = 704643072;
    exports.getArchivePart = (e, t) => {
      let n = e.indexOf(t);
      if (n <= 0) {
        return null;
      }
      let r = n;
      while (n >= 0 && (r = n + t.length, e[r] !== l.ppath.sep)) {
        if (e[n - 1] === l.ppath.sep) {
          return null;
        }
        n = e.indexOf(t, r);
      }
      if (e.length > r && e[r] !== l.ppath.sep) {
        return null;
      } else {
        return e.slice(0, r);
      }
    };
    class h extends s.BasePortableFakeFS {
      static async openPromise(e, t) {
        const n = new h(t);
        try {
          return await e(n);
        } finally {
          n.saveAndClose();
        }
      }
      get libzip() {
        if (this.libzipInstance === undefined) {
          this.libzipInstance = this.libzipFactory();
        }
        return this.libzipInstance;
      }
      constructor({
        libzip: e,
        baseFs: t = new a.NodeFS(),
        filter: n = null,
        maxOpenFiles: r = Infinity,
        readOnlyArchives: o = false,
        useCache: s = true,
        maxAge: A = 5000,
        fileExtensions: c = null
      }) {
        super();
        this.fdMap = new Map();
        this.nextFd = 3;
        this.isZip = new Set();
        this.notZip = new Set();
        this.realPaths = new Map();
        this.limitOpenFilesTimeout = null;
        this.libzipFactory = typeof e != 'function' ? () => e : e;
        this.baseFs = t;
        this.zipInstances = s ? new Map() : null;
        this.filter = n;
        this.maxOpenFiles = r;
        this.readOnlyArchives = o;
        this.maxAge = A;
        this.fileExtensions = c;
      }
      getExtractHint(e) {
        return this.baseFs.getExtractHint(e);
      }
      getRealPath() {
        return this.baseFs.getRealPath();
      }
      saveAndClose() {
        c.unwatchAllFiles(this);
        if (this.zipInstances) {
          for (const [e, {
            zipFs: t
          }] of this.zipInstances.entries()) {
            t.saveAndClose();
            this.zipInstances.delete(e);
          }
        }
      }
      discardAndClose() {
        c.unwatchAllFiles(this);
        if (this.zipInstances) {
          for (const [e, {
            zipFs: t
          }] of this.zipInstances.entries()) {
            t.discardAndClose();
            this.zipInstances.delete(e);
          }
        }
      }
      resolve(e) {
        return this.baseFs.resolve(e);
      }
      remapFd(e, t) {
        const n = this.nextFd++ | d;
        this.fdMap.set(n, [e, t]);
        return n;
      }
      async openPromise(e, t, n) {
        return await this.makeCallPromise(e, async () => await this.baseFs.openPromise(e, t, n), async (e, {
          subPath: r
        }) => this.remapFd(e, await e.openPromise(r, t, n)));
      }
      openSync(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.openSync(e, t, n), (e, {
          subPath: r
        }) => this.remapFd(e, e.openSync(r, t, n)));
      }
      async opendirPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.opendirPromise(e, t), async (e, {
          subPath: n
        }) => await e.opendirPromise(n, t), {
          requireSubpath: false
        });
      }
      opendirSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.opendirSync(e, t), (e, {
          subPath: n
        }) => e.opendirSync(n, t), {
          requireSubpath: false
        });
      }
      async readPromise(e, t, n, r, o) {
        if ((e & g) !== d) {
          return await this.baseFs.readPromise(e, t, n, r, o);
        }
        const s = this.fdMap.get(e);
        if (s === undefined) {
          throw u.EBADF('read');
        }
        const [a, A] = s;
        return await a.readPromise(A, t, n, r, o);
      }
      readSync(e, t, n, r, o) {
        if ((e & g) !== d) {
          return this.baseFs.readSync(e, t, n, r, o);
        }
        const s = this.fdMap.get(e);
        if (s === undefined) {
          throw u.EBADF('readSync');
        }
        const [a, A] = s;
        return a.readSync(A, t, n, r, o);
      }
      async writePromise(e, t, n, r, o) {
        if ((e & g) !== d) {
          if (typeof t == 'string') {
            return await this.baseFs.writePromise(e, t, n);
          } else {
            return await this.baseFs.writePromise(e, t, n, r, o);
          }
        }
        const s = this.fdMap.get(e);
        if (s === undefined) {
          throw u.EBADF('write');
        }
        const [a, A] = s;
        if (typeof t == 'string') {
          return await a.writePromise(A, t, n);
        } else {
          return await a.writePromise(A, t, n, r, o);
        }
      }
      writeSync(e, t, n, r, o) {
        if ((e & g) !== d) {
          if (typeof t == 'string') {
            return this.baseFs.writeSync(e, t, n);
          } else {
            return this.baseFs.writeSync(e, t, n, r, o);
          }
        }
        const s = this.fdMap.get(e);
        if (s === undefined) {
          throw u.EBADF('writeSync');
        }
        const [a, A] = s;
        if (typeof t == 'string') {
          return a.writeSync(A, t, n);
        } else {
          return a.writeSync(A, t, n, r, o);
        }
      }
      async closePromise(e) {
        if ((e & g) !== d) {
          return await this.baseFs.closePromise(e);
        }
        const t = this.fdMap.get(e);
        if (t === undefined) {
          throw u.EBADF('close');
        }
        this.fdMap.delete(e);
        const [n, r] = t;
        return await n.closePromise(r);
      }
      closeSync(e) {
        if ((e & g) !== d) {
          return this.baseFs.closeSync(e);
        }
        const t = this.fdMap.get(e);
        if (t === undefined) {
          throw u.EBADF('closeSync');
        }
        this.fdMap.delete(e);
        const [n, r] = t;
        return n.closeSync(r);
      }
      createReadStream(e, t) {
        if (e === null) {
          return this.baseFs.createReadStream(e, t);
        } else {
          return this.makeCallSync(e, () => this.baseFs.createReadStream(e, t), (e, {
            archivePath: n,
            subPath: r
          }) => {
            const o = e.createReadStream(r, t);
            o.path = l.npath.fromPortablePath(this.pathUtils.join(n, r));
            return o;
          });
        }
      }
      createWriteStream(e, t) {
        if (e === null) {
          return this.baseFs.createWriteStream(e, t);
        } else {
          return this.makeCallSync(e, () => this.baseFs.createWriteStream(e, t), (e, {
            subPath: n
          }) => e.createWriteStream(n, t));
        }
      }
      async realpathPromise(e) {
        return await this.makeCallPromise(e, async () => await this.baseFs.realpathPromise(e), async (e, {
          archivePath: t,
          subPath: n
        }) => {
          let r = this.realPaths.get(t);
          if (r === undefined) {
            r = await this.baseFs.realpathPromise(t);
            this.realPaths.set(t, r);
          }
          return this.pathUtils.join(r, this.pathUtils.relative(l.PortablePath.root, await e.realpathPromise(n)));
        });
      }
      realpathSync(e) {
        return this.makeCallSync(e, () => this.baseFs.realpathSync(e), (e, {
          archivePath: t,
          subPath: n
        }) => {
          let r = this.realPaths.get(t);
          if (r === undefined) {
            r = this.baseFs.realpathSync(t);
            this.realPaths.set(t, r);
          }
          return this.pathUtils.join(r, this.pathUtils.relative(l.PortablePath.root, e.realpathSync(n)));
        });
      }
      async existsPromise(e) {
        return await this.makeCallPromise(e, async () => await this.baseFs.existsPromise(e), async (e, {
          subPath: t
        }) => await e.existsPromise(t));
      }
      existsSync(e) {
        return this.makeCallSync(e, () => this.baseFs.existsSync(e), (e, {
          subPath: t
        }) => e.existsSync(t));
      }
      async accessPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.accessPromise(e, t), async (e, {
          subPath: n
        }) => await e.accessPromise(n, t));
      }
      accessSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.accessSync(e, t), (e, {
          subPath: n
        }) => e.accessSync(n, t));
      }
      async statPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.statPromise(e, t), async (e, {
          subPath: n
        }) => await e.statPromise(n, t));
      }
      statSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.statSync(e, t), (e, {
          subPath: n
        }) => e.statSync(n, t));
      }
      async fstatPromise(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.fstatPromise(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('fstat');
        }
        const [r, o] = n;
        return r.fstatPromise(o, t);
      }
      fstatSync(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.fstatSync(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('fstatSync');
        }
        const [r, o] = n;
        return r.fstatSync(o, t);
      }
      async lstatPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.lstatPromise(e, t), async (e, {
          subPath: n
        }) => await e.lstatPromise(n, t));
      }
      lstatSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.lstatSync(e, t), (e, {
          subPath: n
        }) => e.lstatSync(n, t));
      }
      async fchmodPromise(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.fchmodPromise(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('fchmod');
        }
        const [r, o] = n;
        return r.fchmodPromise(o, t);
      }
      fchmodSync(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.fchmodSync(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('fchmodSync');
        }
        const [r, o] = n;
        return r.fchmodSync(o, t);
      }
      async chmodPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.chmodPromise(e, t), async (e, {
          subPath: n
        }) => await e.chmodPromise(n, t));
      }
      chmodSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.chmodSync(e, t), (e, {
          subPath: n
        }) => e.chmodSync(n, t));
      }
      async fchownPromise(e, t, n) {
        if ((e & g) !== d) {
          return this.baseFs.fchownPromise(e, t, n);
        }
        const r = this.fdMap.get(e);
        if (r === undefined) {
          throw u.EBADF('fchown');
        }
        const [o, s] = r;
        return o.fchownPromise(s, t, n);
      }
      fchownSync(e, t, n) {
        if ((e & g) !== d) {
          return this.baseFs.fchownSync(e, t, n);
        }
        const r = this.fdMap.get(e);
        if (r === undefined) {
          throw u.EBADF('fchownSync');
        }
        const [o, s] = r;
        return o.fchownSync(s, t, n);
      }
      async chownPromise(e, t, n) {
        return await this.makeCallPromise(e, async () => await this.baseFs.chownPromise(e, t, n), async (e, {
          subPath: r
        }) => await e.chownPromise(r, t, n));
      }
      chownSync(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.chownSync(e, t, n), (e, {
          subPath: r
        }) => e.chownSync(r, t, n));
      }
      async renamePromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.makeCallPromise(t, async () => await this.baseFs.renamePromise(e, t), async () => {
          throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
            code: 'EEXDEV'
          });
        }), async (e, {
          subPath: n
        }) => await this.makeCallPromise(t, async () => {
          throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
            code: 'EEXDEV'
          });
        }, async (t, {
          subPath: r
        }) => {
          if (e !== t) {
            throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
              code: 'EEXDEV'
            });
          }
          return await e.renamePromise(n, r);
        }));
      }
      renameSync(e, t) {
        return this.makeCallSync(e, () => this.makeCallSync(t, () => this.baseFs.renameSync(e, t), () => {
          throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
            code: 'EEXDEV'
          });
        }), (e, {
          subPath: n
        }) => this.makeCallSync(t, () => {
          throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
            code: 'EEXDEV'
          });
        }, (t, {
          subPath: r
        }) => {
          if (e !== t) {
            throw Object.assign(new Error('EEXDEV: cross-device link not permitted'), {
              code: 'EEXDEV'
            });
          }
          return e.renameSync(n, r);
        }));
      }
      async copyFilePromise(e, t, n = 0) {
        const r = async (e, t, r, s) => {
          if (n & o.constants.COPYFILE_FICLONE_FORCE) {
            throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${t}' -> ${s}'`), {
              code: 'EXDEV'
            });
          }
          if (n & o.constants.COPYFILE_EXCL && (await this.existsPromise(t))) {
            throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${t}' -> '${s}'`), {
              code: 'EEXIST'
            });
          }
          let a;
          try {
            a = await e.readFilePromise(t);
          } catch (e) {
            throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${t}' -> '${s}'`), {
              code: 'EINVAL'
            });
          }
          await r.writeFilePromise(s, a);
        };
        return await this.makeCallPromise(e, async () => await this.makeCallPromise(t, async () => await this.baseFs.copyFilePromise(e, t, n), async (t, {
          subPath: n
        }) => await r(this.baseFs, e, t, n)), async (e, {
          subPath: o
        }) => await this.makeCallPromise(t, async () => await r(e, o, this.baseFs, t), async (t, {
          subPath: s
        }) => e !== t ? await r(e, o, t, s) : await e.copyFilePromise(o, s, n)));
      }
      copyFileSync(e, t, n = 0) {
        const r = (e, t, r, s) => {
          if (n & o.constants.COPYFILE_FICLONE_FORCE) {
            throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${t}' -> ${s}'`), {
              code: 'EXDEV'
            });
          }
          if (n & o.constants.COPYFILE_EXCL && this.existsSync(t)) {
            throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${t}' -> '${s}'`), {
              code: 'EEXIST'
            });
          }
          let a;
          try {
            a = e.readFileSync(t);
          } catch (e) {
            throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${t}' -> '${s}'`), {
              code: 'EINVAL'
            });
          }
          r.writeFileSync(s, a);
        };
        return this.makeCallSync(e, () => this.makeCallSync(t, () => this.baseFs.copyFileSync(e, t, n), (t, {
          subPath: n
        }) => r(this.baseFs, e, t, n)), (e, {
          subPath: o
        }) => this.makeCallSync(t, () => r(e, o, this.baseFs, t), (t, {
          subPath: s
        }) => e !== t ? r(e, o, t, s) : e.copyFileSync(o, s, n)));
      }
      async appendFilePromise(e, t, n) {
        return await this.makeCallPromise(e, async () => await this.baseFs.appendFilePromise(e, t, n), async (e, {
          subPath: r
        }) => await e.appendFilePromise(r, t, n));
      }
      appendFileSync(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.appendFileSync(e, t, n), (e, {
          subPath: r
        }) => e.appendFileSync(r, t, n));
      }
      async writeFilePromise(e, t, n) {
        return await this.makeCallPromise(e, async () => await this.baseFs.writeFilePromise(e, t, n), async (e, {
          subPath: r
        }) => await e.writeFilePromise(r, t, n));
      }
      writeFileSync(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.writeFileSync(e, t, n), (e, {
          subPath: r
        }) => e.writeFileSync(r, t, n));
      }
      async unlinkPromise(e) {
        return await this.makeCallPromise(e, async () => await this.baseFs.unlinkPromise(e), async (e, {
          subPath: t
        }) => await e.unlinkPromise(t));
      }
      unlinkSync(e) {
        return this.makeCallSync(e, () => this.baseFs.unlinkSync(e), (e, {
          subPath: t
        }) => e.unlinkSync(t));
      }
      async utimesPromise(e, t, n) {
        return await this.makeCallPromise(e, async () => await this.baseFs.utimesPromise(e, t, n), async (e, {
          subPath: r
        }) => await e.utimesPromise(r, t, n));
      }
      utimesSync(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.utimesSync(e, t, n), (e, {
          subPath: r
        }) => e.utimesSync(r, t, n));
      }
      async mkdirPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.mkdirPromise(e, t), async (e, {
          subPath: n
        }) => await e.mkdirPromise(n, t));
      }
      mkdirSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.mkdirSync(e, t), (e, {
          subPath: n
        }) => e.mkdirSync(n, t));
      }
      async rmdirPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.rmdirPromise(e, t), async (e, {
          subPath: n
        }) => await e.rmdirPromise(n, t));
      }
      rmdirSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.rmdirSync(e, t), (e, {
          subPath: n
        }) => e.rmdirSync(n, t));
      }
      async linkPromise(e, t) {
        return await this.makeCallPromise(t, async () => await this.baseFs.linkPromise(e, t), async (t, {
          subPath: n
        }) => await t.linkPromise(e, n));
      }
      linkSync(e, t) {
        return this.makeCallSync(t, () => this.baseFs.linkSync(e, t), (t, {
          subPath: n
        }) => t.linkSync(e, n));
      }
      async symlinkPromise(e, t, n) {
        return await this.makeCallPromise(t, async () => await this.baseFs.symlinkPromise(e, t, n), async (t, {
          subPath: n
        }) => await t.symlinkPromise(e, n));
      }
      symlinkSync(e, t, n) {
        return this.makeCallSync(t, () => this.baseFs.symlinkSync(e, t, n), (t, {
          subPath: n
        }) => t.symlinkSync(e, n));
      }
      async readFilePromise(e, t) {
        return this.makeCallPromise(e, async () => await this.baseFs.readFilePromise(e, t), async (e, {
          subPath: n
        }) => await e.readFilePromise(n, t));
      }
      readFileSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.readFileSync(e, t), (e, {
          subPath: n
        }) => e.readFileSync(n, t));
      }
      async readdirPromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.readdirPromise(e, t), async (e, {
          subPath: n
        }) => await e.readdirPromise(n, t), {
          requireSubpath: false
        });
      }
      readdirSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.readdirSync(e, t), (e, {
          subPath: n
        }) => e.readdirSync(n, t), {
          requireSubpath: false
        });
      }
      async readlinkPromise(e) {
        return await this.makeCallPromise(e, async () => await this.baseFs.readlinkPromise(e), async (e, {
          subPath: t
        }) => await e.readlinkPromise(t));
      }
      readlinkSync(e) {
        return this.makeCallSync(e, () => this.baseFs.readlinkSync(e), (e, {
          subPath: t
        }) => e.readlinkSync(t));
      }
      async truncatePromise(e, t) {
        return await this.makeCallPromise(e, async () => await this.baseFs.truncatePromise(e, t), async (e, {
          subPath: n
        }) => await e.truncatePromise(n, t));
      }
      truncateSync(e, t) {
        return this.makeCallSync(e, () => this.baseFs.truncateSync(e, t), (e, {
          subPath: n
        }) => e.truncateSync(n, t));
      }
      async ftruncatePromise(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.ftruncatePromise(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('ftruncate');
        }
        const [r, o] = n;
        return r.ftruncatePromise(o, t);
      }
      ftruncateSync(e, t) {
        if ((e & g) !== d) {
          return this.baseFs.ftruncateSync(e, t);
        }
        const n = this.fdMap.get(e);
        if (n === undefined) {
          throw u.EBADF('ftruncateSync');
        }
        const [r, o] = n;
        return r.ftruncateSync(o, t);
      }
      watch(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.watch(e, t, n), (e, {
          subPath: r
        }) => e.watch(r, t, n));
      }
      watchFile(e, t, n) {
        return this.makeCallSync(e, () => this.baseFs.watchFile(e, t, n), () => c.watchFile(this, e, t, n));
      }
      unwatchFile(e, t) {
        return this.makeCallSync(e, () => this.baseFs.unwatchFile(e, t), () => c.unwatchFile(this, e, t));
      }
      async makeCallPromise(e, t, n, {
        requireSubpath: r = true
      } = {}) {
        if (typeof e != 'string') {
          return await t();
        }
        const o = this.resolve(e);
        const s = this.findZip(o);
        if (s) {
          if (r && s.subPath === '/') {
            return await t();
          } else {
            return await this.getZipPromise(s.archivePath, async e => await n(e, s));
          }
        } else {
          return await t();
        }
      }
      makeCallSync(e, t, n, {
        requireSubpath: r = true
      } = {}) {
        if (typeof e != 'string') {
          return t();
        }
        const o = this.resolve(e);
        const s = this.findZip(o);
        if (s) {
          if (r && s.subPath === '/') {
            return t();
          } else {
            return this.getZipSync(s.archivePath, e => n(e, s));
          }
        } else {
          return t();
        }
      }
      findZip(e) {
        if (this.filter && !this.filter.test(e)) {
          return null;
        }
        let n = '';
        while (true) {
          const r = e.substring(n.length);
          let o;
          if (this.fileExtensions) {
            for (const e of this.fileExtensions) {
              o = exports.getArchivePart(r, e);
              if (o) {
                break;
              }
            }
          } else {
            o = exports.getArchivePart(r, '.zip');
          }
          if (!o) {
            return null;
          }
          n = this.pathUtils.join(n, o);
          if (this.isZip.has(n) === false) {
            if (this.notZip.has(n)) {
              continue;
            }
            try {
              if (!this.baseFs.lstatSync(n).isFile()) {
                this.notZip.add(n);
                continue;
              }
            } catch {
              return null;
            }
            this.isZip.add(n);
          }
          return {
            archivePath: n,
            subPath: this.pathUtils.join(l.PortablePath.root, e.substring(n.length))
          };
        }
      }
      limitOpenFiles(e) {
        if (this.zipInstances === null) {
          return;
        }
        const t = Date.now();
        let n = t + this.maxAge;
        let r = e === null ? 0 : this.zipInstances.size - e;
        for (const [o, {
          zipFs: s,
          expiresAt: a,
          refCount: A
        }] of this.zipInstances.entries()) {
          if (A === 0 && !s.hasOpenFileHandles()) {
            if (t >= a) {
              s.saveAndClose();
              this.zipInstances.delete(o);
              r -= 1;
            } else {
              if (e === null || r <= 0) {
                n = a;
                break;
              }
              s.saveAndClose();
              this.zipInstances.delete(o);
              r -= 1;
            }
          }
        }
        if (this.limitOpenFilesTimeout === null && (e === null && this.zipInstances.size > 0 || e !== null)) {
          this.limitOpenFilesTimeout = setTimeout(() => {
            this.limitOpenFilesTimeout = null;
            this.limitOpenFiles(null);
          }, n - t).unref();
        }
      }
      async getZipPromise(e, t) {
        const n = async () => ({
          baseFs: this.baseFs,
          libzip: this.libzip,
          readOnly: this.readOnlyArchives,
          stats: await this.baseFs.statPromise(e)
        });
        if (this.zipInstances) {
          let r = this.zipInstances.get(e);
          if (!r) {
            const t = await n();
            r = this.zipInstances.get(e);
            if (!r) {
              r = {
                zipFs: new A.ZipFS(e, t),
                expiresAt: 0,
                refCount: 0
              };
            }
          }
          this.zipInstances.delete(e);
          this.limitOpenFiles(this.maxOpenFiles - 1);
          this.zipInstances.set(e, r);
          r.expiresAt = Date.now() + this.maxAge;
          r.refCount += 1;
          try {
            return await t(r.zipFs);
          } finally {
            r.refCount -= 1;
          }
        } else {
          const r = new A.ZipFS(e, await n());
          try {
            return await t(r);
          } finally {
            r.saveAndClose();
          }
        }
      }
      getZipSync(e, t) {
        const n = () => ({
          baseFs: this.baseFs,
          libzip: this.libzip,
          readOnly: this.readOnlyArchives,
          stats: this.baseFs.statSync(e)
        });
        if (this.zipInstances) {
          let r = this.zipInstances.get(e);
          if (!r) {
            r = {
              zipFs: new A.ZipFS(e, n()),
              expiresAt: 0,
              refCount: 0
            };
          }
          this.zipInstances.delete(e);
          this.limitOpenFiles(this.maxOpenFiles - 1);
          this.zipInstances.set(e, r);
          r.expiresAt = Date.now() + this.maxAge;
          return t(r.zipFs);
        }
        {
          const r = new A.ZipFS(e, n());
          try {
            return t(r);
          } finally {
            r.saveAndClose();
          }
        }
      }
    }
    exports.ZipOpenFS = h;
  },
  97519: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.copyPromise = exports.LinkStrategy = undefined;
    const r = require(70961);
    const o = r.__importDefault(require(79896));
    const s = r.__importStar(require(50767));
    const a = require(40055);
    const A = new Date(s.SAFE_TIME * 1000);
    var c;
    async function u(e, t, n, r, s, c, d, h) {
      var f;
      var p;
      const m = h.didParentExist ? await async function (e, t) {
        try {
          return await e.lstatPromise(t);
        } catch (e) {
          return null;
        }
      }(r, s) : null;
      const I = await c.lstatPromise(d);
      const {
        atime: E,
        mtime: y
      } = h.stableTime ? {
        atime: A,
        mtime: A
      } : I;
      let w;
      switch (true) {
        case I.isDirectory():
          w = await async function (e, t, n, r, o, s, a, A, c, l) {
            if (s !== null && !s.isDirectory()) {
              if (!l.overwrite) {
                return false;
              }
              e.push(async () => r.removePromise(o));
              s = null;
            }
            let g = false;
            if (s === null) {
              e.push(async () => {
                try {
                  await r.mkdirPromise(o, {
                    mode: c.mode
                  });
                } catch (e) {
                  if (e.code !== 'EEXIST') {
                    throw e;
                  }
                }
              });
              g = true;
            }
            const d = await a.readdirPromise(A);
            const h = l.didParentExist && !s ? {
              ...l,
              didParentExist: false
            } : l;
            if (l.stableSort) {
              for (const s of d.sort()) {
                if (await u(e, t, n, r, r.pathUtils.join(o, s), a, a.pathUtils.join(A, s), h)) {
                  g = true;
                }
              }
            } else {
              if ((await Promise.all(d.map(async s => {
                await u(e, t, n, r, r.pathUtils.join(o, s), a, a.pathUtils.join(A, s), h);
              }))).some(e => e)) {
                g = true;
              }
            }
            return g;
          }(e, t, n, r, s, m, c, d, I, h);
          break;
        case I.isFile():
          w = await async function (e, t, n, r, s, a, A, c, u, d) {
            var h;
            if (a !== null) {
              if (!d.overwrite) {
                return false;
              }
              e.push(async () => r.removePromise(s));
              a = null;
            }
            const f = (h = d.linkStrategy) !== null && h !== undefined ? h : null;
            const p = r === A ? f !== null ? function (e, t, n, r, s) {
              const a = l.get(e);
              if (a === undefined) {
                return async () => {
                  try {
                    await e.copyFilePromise(n, t, o.default.constants.COPYFILE_FICLONE_FORCE);
                    l.set(e, true);
                  } catch (o) {
                    if (o.code !== 'ENOSYS' && o.code !== 'ENOTSUP') {
                      throw o;
                    }
                    l.set(e, false);
                    await g(e, t, n, r, s)();
                  }
                };
              } else {
                if (a) {
                  return async () => e.copyFilePromise(n, t, o.default.constants.COPYFILE_FICLONE_FORCE);
                } else {
                  return g(e, t, n, r, s);
                }
              }
            }(r, s, c, u, f) : async () => r.copyFilePromise(c, s, o.default.constants.COPYFILE_FICLONE) : f !== null ? g(r, s, c, u, f) : async () => r.writeFilePromise(s, await A.readFilePromise(c));
            e.push(async () => p());
            return true;
          }(e, 0, 0, r, s, m, c, d, I, h);
          break;
        case I.isSymbolicLink():
          w = await async function (e, t, n, r, o, s, A, c, u, l) {
            if (s !== null) {
              if (!l.overwrite) {
                return false;
              }
              e.push(async () => r.removePromise(o));
              s = null;
            }
            e.push(async () => {
              await r.symlinkPromise(a.convertPath(r.pathUtils, await A.readlinkPromise(c)), o);
            });
            return true;
          }(e, 0, 0, r, s, m, c, d, 0, h);
          break;
        default:
          throw new Error(`Unsupported file type (${I.mode})`);
      }
      if (w || ((f = m == null ? undefined : m.mtime) === null || f === undefined ? undefined : f.getTime()) !== y.getTime() || ((p = m == null ? undefined : m.atime) === null || p === undefined ? undefined : p.getTime()) !== E.getTime()) {
        t.push(() => n(s, E, y));
        w = true;
      }
      if (m === null || (m.mode & 511) != (I.mode & 511)) {
        t.push(() => r.chmodPromise(s, I.mode & 511));
        w = true;
      }
      return w;
    }
    (function (e) {
      e.Allow = 'allow';
      e.ReadOnly = 'readOnly';
    })(c || (exports.LinkStrategy = c = {}));
    exports.copyPromise = async function (e, t, n, r, o) {
      const s = e.pathUtils.normalize(t);
      const a = n.pathUtils.normalize(r);
      const c = [];
      const l = [];
      const {
        atime: g,
        mtime: d
      } = o.stableTime ? {
        atime: A,
        mtime: A
      } : await n.lstatPromise(a);
      await e.mkdirpPromise(e.pathUtils.dirname(t), {
        utimes: [g, d]
      });
      const h = typeof e.lutimesPromise == 'function' ? e.lutimesPromise.bind(e) : e.utimesPromise.bind(e);
      await u(c, l, h, e, s, n, a, {
        ...o,
        didParentExist: true
      });
      for (const e of c) {
        await e();
      }
      await Promise.all(l.map(e => e()));
    };
    const l = new WeakMap();
    function g(e, t, n, r, o) {
      return async () => {
        await e.linkPromise(n, t);
        if (o === c.ReadOnly) {
          r.mode &= -147;
          await e.chmodPromise(t, r.mode);
        }
      };
    }
  },
  2182: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.opendir = exports.CustomDir = undefined;
    const r = require(70961).__importStar(require(21795));
    class o {
      constructor(e, t, n = {}) {
        this.path = e;
        this.nextDirent = t;
        this.opts = n;
        this.closed = false;
      }
      throwIfClosed() {
        if (this.closed) {
          throw r.ERR_DIR_CLOSED();
        }
      }
      async *[Symbol.asyncIterator]() {
        try {
          let e;
          while ((e = await this.read()) !== null) {
            yield e;
          }
        } finally {
          await this.close();
        }
      }
      read(e) {
        const t = this.readSync();
        if (e !== undefined) {
          return e(null, t);
        } else {
          return Promise.resolve(t);
        }
      }
      readSync() {
        this.throwIfClosed();
        return this.nextDirent();
      }
      close(e) {
        this.closeSync();
        if (e !== undefined) {
          return e(null);
        } else {
          return Promise.resolve();
        }
      }
      closeSync() {
        var e;
        var t;
        this.throwIfClosed();
        if ((t = (e = this.opts).onClose) !== null && t !== undefined) {
          t.call(e);
        }
        this.closed = true;
      }
    }
    exports.CustomDir = o;
    exports.opendir = function (e, t, n, r) {
      return new o(t, () => {
        const r = n.shift();
        if (r === undefined) {
          return null;
        } else {
          return Object.assign(e.statSync(e.pathUtils.join(t, r)), {
            name: r
          });
        }
      }, r);
    };
  },
  96712: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.unwatchAllFiles = exports.unwatchFile = exports.watchFile = undefined;
    const r = require(48492);
    const o = new WeakMap();
    function s(e, t, n) {
      const r = o.get(e);
      if (r === undefined) {
        return;
      }
      const s = r.get(t);
      if (s !== undefined) {
        if (n === undefined) {
          s.unregisterAllChangeListeners();
        } else {
          s.unregisterChangeListener(n);
        }
        if (!s.hasChangeListeners()) {
          s.stop();
          r.delete(t);
        }
      }
    }
    exports.watchFile = function (e, t, n, s) {
      let a;
      let A;
      let c;
      let u;
      if (typeof n == 'function') {
        a = false;
        A = true;
        c = 5007;
        u = n;
      } else {
        ({
          bigint: a = false,
          persistent: A = true,
          interval: c = 5007
        } = n);
        u = s;
      }
      let l = o.get(e);
      if (l === undefined) {
        o.set(e, l = new Map());
      }
      let g = l.get(t);
      if (g === undefined) {
        g = r.CustomStatWatcher.create(e, t, {
          bigint: a
        });
        l.set(t, g);
      }
      g.registerChangeListener(u, {
        persistent: A,
        interval: c
      });
      return g;
    };
    exports.unwatchFile = s;
    exports.unwatchAllFiles = function (e) {
      const t = o.get(e);
      if (t !== undefined) {
        for (const n of t.keys()) {
          s(e, n);
        }
      }
    };
  },
  48492: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CustomStatWatcher = exports.assertStatus = exports.Status = exports.Event = undefined;
    const r = require(70961);
    const o = require(24434);
    const s = r.__importStar(require(70305));
    var a;
    var A;
    function c(e, t) {
      if (e !== t) {
        throw new Error(`Invalid StatWatcher status: expected '${t}', got '${e}'`);
      }
    }
    (function (e) {
      e.Change = 'change';
      e.Stop = 'stop';
    })(a || (exports.Event = a = {}));
    (function (e) {
      e.Ready = 'ready';
      e.Running = 'running';
      e.Stopped = 'stopped';
    })(A || (exports.Status = A = {}));
    exports.assertStatus = c;
    class u extends o.EventEmitter {
      static create(e, t, n) {
        const r = new u(e, t, n);
        r.start();
        return r;
      }
      constructor(e, t, {
        bigint: n = false
      } = {}) {
        super();
        this.status = A.Ready;
        this.changeListeners = new Map();
        this.startTimeout = null;
        this.fakeFs = e;
        this.path = t;
        this.bigint = n;
        this.lastStats = this.stat();
      }
      start() {
        c(this.status, A.Ready);
        this.status = A.Running;
        this.startTimeout = setTimeout(() => {
          this.startTimeout = null;
          if (!this.fakeFs.existsSync(this.path)) {
            this.emit(a.Change, this.lastStats, this.lastStats);
          }
        }, 3);
      }
      stop() {
        c(this.status, A.Running);
        this.status = A.Stopped;
        if (this.startTimeout !== null) {
          clearTimeout(this.startTimeout);
          this.startTimeout = null;
        }
        this.emit(a.Stop);
      }
      stat() {
        try {
          return this.fakeFs.statSync(this.path, {
            bigint: this.bigint
          });
        } catch (e) {
          const t = this.bigint ? new s.BigIntStatsEntry() : new s.StatEntry();
          return s.clearStats(t);
        }
      }
      makeInterval(e) {
        const t = setInterval(() => {
          const e = this.stat();
          const t = this.lastStats;
          if (!s.areStatsEqual(e, t)) {
            this.lastStats = e;
            this.emit(a.Change, e, t);
          }
        }, e.interval);
        if (e.persistent) {
          return t;
        } else {
          return t.unref();
        }
      }
      registerChangeListener(e, t) {
        this.addListener(a.Change, e);
        this.changeListeners.set(e, this.makeInterval(t));
      }
      unregisterChangeListener(e) {
        this.removeListener(a.Change, e);
        const t = this.changeListeners.get(e);
        if (t !== undefined) {
          clearInterval(t);
        }
        this.changeListeners.delete(e);
      }
      unregisterAllChangeListeners() {
        for (const e of this.changeListeners.keys()) {
          this.unregisterChangeListener(e);
        }
      }
      hasChangeListeners() {
        return this.changeListeners.size > 0;
      }
      ref() {
        for (const e of this.changeListeners.values()) {
          e.ref();
        }
        return this;
      }
      unref() {
        for (const e of this.changeListeners.values()) {
          e.unref();
        }
        return this;
      }
    }
    exports.CustomStatWatcher = u;
  },
  50767: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SAFE_TIME = exports.S_IFLNK = exports.S_IFREG = exports.S_IFDIR = exports.S_IFMT = undefined;
    exports.S_IFMT = 61440;
    exports.S_IFDIR = 16384;
    exports.S_IFREG = 32768;
    exports.S_IFLNK = 40960;
    exports.SAFE_TIME = 456789000;
  },
  21795: (module, exports) => {
    "use strict";

    function n(e, t) {
      return Object.assign(new Error(`${e}: ${t}`), {
        code: e
      });
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LibzipError = exports.ERR_DIR_CLOSED = exports.EOPNOTSUPP = exports.ENOTEMPTY = exports.EROFS = exports.EEXIST = exports.EISDIR = exports.ENOTDIR = exports.ENOENT = exports.EBADF = exports.EINVAL = exports.ENOSYS = exports.EBUSY = undefined;
    exports.EBUSY = function (e) {
      return n('EBUSY', e);
    };
    exports.ENOSYS = function (e, t) {
      return n('ENOSYS', `${e}, ${t}`);
    };
    exports.EINVAL = function (e) {
      return n('EINVAL', `invalid argument, ${e}`);
    };
    exports.EBADF = function (e) {
      return n('EBADF', `bad file descriptor, ${e}`);
    };
    exports.ENOENT = function (e) {
      return n('ENOENT', `no such file or directory, ${e}`);
    };
    exports.ENOTDIR = function (e) {
      return n('ENOTDIR', `not a directory, ${e}`);
    };
    exports.EISDIR = function (e) {
      return n('EISDIR', `illegal operation on a directory, ${e}`);
    };
    exports.EEXIST = function (e) {
      return n('EEXIST', `file already exists, ${e}`);
    };
    exports.EROFS = function (e) {
      return n('EROFS', `read-only filesystem, ${e}`);
    };
    exports.ENOTEMPTY = function (e) {
      return n('ENOTEMPTY', `directory not empty, ${e}`);
    };
    exports.EOPNOTSUPP = function (e) {
      return n('EOPNOTSUPP', `operation not supported, ${e}`);
    };
    exports.ERR_DIR_CLOSED = function () {
      return n('ERR_DIR_CLOSED', 'Directory handle was closed');
    };
    class r extends Error {
      constructor(e, t) {
        super(e);
        this.name = 'Libzip Error';
        this.code = t;
      }
    }
    exports.LibzipError = r;
  },
  49054: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.xfs = exports.extendFs = exports.patchFs = exports.ZipOpenFS = exports.ZipFS = exports.VirtualFS = exports.ProxiedFS = exports.PosixFS = exports.NodeFS = exports.NoFS = exports.LazyFS = exports.JailFS = exports.CwdFS = exports.FakeFS = exports.AliasFS = exports.toFilename = exports.ppath = exports.npath = exports.Filename = exports.PortablePath = exports.DEFAULT_COMPRESSION_LEVEL = exports.normalizeLineEndings = exports.statUtils = exports.CustomDir = exports.opendir = exports.LinkStrategy = exports.constants = undefined;
    const r = require(70961);
    const o = r.__importStar(require(50767));
    exports.constants = o;
    const s = r.__importStar(require(70305));
    exports.statUtils = s;
    var a = require(97519);
    Object.defineProperty(exports, 'LinkStrategy', {
      enumerable: true,
      get: function () {
        return a.LinkStrategy;
      }
    });
    var A = require(2182);
    Object.defineProperty(exports, 'opendir', {
      enumerable: true,
      get: function () {
        return A.opendir;
      }
    });
    Object.defineProperty(exports, 'CustomDir', {
      enumerable: true,
      get: function () {
        return A.CustomDir;
      }
    });
    var c = require(54570);
    Object.defineProperty(exports, 'normalizeLineEndings', {
      enumerable: true,
      get: function () {
        return c.normalizeLineEndings;
      }
    });
    var u = require(4714);
    Object.defineProperty(exports, 'DEFAULT_COMPRESSION_LEVEL', {
      enumerable: true,
      get: function () {
        return u.DEFAULT_COMPRESSION_LEVEL;
      }
    });
    var l = require(40055);
    Object.defineProperty(exports, 'PortablePath', {
      enumerable: true,
      get: function () {
        return l.PortablePath;
      }
    });
    Object.defineProperty(exports, 'Filename', {
      enumerable: true,
      get: function () {
        return l.Filename;
      }
    });
    var g = require(40055);
    Object.defineProperty(exports, 'npath', {
      enumerable: true,
      get: function () {
        return g.npath;
      }
    });
    Object.defineProperty(exports, 'ppath', {
      enumerable: true,
      get: function () {
        return g.ppath;
      }
    });
    Object.defineProperty(exports, 'toFilename', {
      enumerable: true,
      get: function () {
        return g.toFilename;
      }
    });
    var d = require(5293);
    Object.defineProperty(exports, 'AliasFS', {
      enumerable: true,
      get: function () {
        return d.AliasFS;
      }
    });
    var h = require(54570);
    Object.defineProperty(exports, 'FakeFS', {
      enumerable: true,
      get: function () {
        return h.FakeFS;
      }
    });
    var f = require(5623);
    Object.defineProperty(exports, 'CwdFS', {
      enumerable: true,
      get: function () {
        return f.CwdFS;
      }
    });
    var p = require(91823);
    Object.defineProperty(exports, 'JailFS', {
      enumerable: true,
      get: function () {
        return p.JailFS;
      }
    });
    var m = require(60601);
    Object.defineProperty(exports, 'LazyFS', {
      enumerable: true,
      get: function () {
        return m.LazyFS;
      }
    });
    var I = require(4700);
    Object.defineProperty(exports, 'NoFS', {
      enumerable: true,
      get: function () {
        return I.NoFS;
      }
    });
    var E = require(41639);
    Object.defineProperty(exports, 'NodeFS', {
      enumerable: true,
      get: function () {
        return E.NodeFS;
      }
    });
    var y = require(53498);
    Object.defineProperty(exports, 'PosixFS', {
      enumerable: true,
      get: function () {
        return y.PosixFS;
      }
    });
    var w = require(38824);
    Object.defineProperty(exports, 'ProxiedFS', {
      enumerable: true,
      get: function () {
        return w.ProxiedFS;
      }
    });
    var _ = require(66878);
    Object.defineProperty(exports, 'VirtualFS', {
      enumerable: true,
      get: function () {
        return _.VirtualFS;
      }
    });
    var v = require(4714);
    Object.defineProperty(exports, 'ZipFS', {
      enumerable: true,
      get: function () {
        return v.ZipFS;
      }
    });
    var b = require(6930);
    Object.defineProperty(exports, 'ZipOpenFS', {
      enumerable: true,
      get: function () {
        return b.ZipOpenFS;
      }
    });
    var B = require(22241);
    Object.defineProperty(exports, 'patchFs', {
      enumerable: true,
      get: function () {
        return B.patchFs;
      }
    });
    Object.defineProperty(exports, 'extendFs', {
      enumerable: true,
      get: function () {
        return B.extendFs;
      }
    });
    var Q = require(67505);
    Object.defineProperty(exports, 'xfs', {
      enumerable: true,
      get: function () {
        return Q.xfs;
      }
    });
  },
  27914: (module, exports, require) => {
    "use strict";

    var r;
    var o;
    var s;
    var a;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FileHandle = undefined;
    const A = require(23785);
    const c = Symbol('kBaseFs');
    const u = Symbol('kFd');
    const l = Symbol('kClosePromise');
    const g = Symbol('kCloseResolve');
    const d = Symbol('kCloseReject');
    const h = Symbol('kRefs');
    const f = Symbol('kRef');
    const p = Symbol('kUnref');
    class m {
      constructor(e, t) {
        this[r] = 1;
        this[o] = undefined;
        this[s] = undefined;
        this[a] = undefined;
        this[c] = t;
        this[u] = e;
      }
      get fd() {
        return this[u];
      }
      async appendFile(e, t) {
        var n;
        try {
          this[f](this.appendFile);
          const r = (n = typeof t == 'string' ? t : t == null ? undefined : t.encoding) !== null && n !== undefined ? n : undefined;
          return await this[c].appendFilePromise(this.fd, e, r ? {
            encoding: r
          } : undefined);
        } finally {
          this[p]();
        }
      }
      async chown(e, t) {
        try {
          this[f](this.chown);
          return await this[c].fchownPromise(this.fd, e, t);
        } finally {
          this[p]();
        }
      }
      async chmod(e) {
        try {
          this[f](this.chmod);
          return await this[c].fchmodPromise(this.fd, e);
        } finally {
          this[p]();
        }
      }
      createReadStream(e) {
        return this[c].createReadStream(null, {
          ...e,
          fd: this.fd
        });
      }
      createWriteStream(e) {
        return this[c].createWriteStream(null, {
          ...e,
          fd: this.fd
        });
      }
      datasync() {
        throw new Error('Method not implemented.');
      }
      sync() {
        throw new Error('Method not implemented.');
      }
      async read(e, t, n, r) {
        var o;
        var s;
        var a;
        try {
          let A;
          this[f](this.read);
          if (Buffer.isBuffer(e)) {
            A = e;
          } else {
            if (e == null) {
              e = {};
            }
            A = (o = e.buffer) !== null && o !== undefined ? o : Buffer.alloc(16384);
            t = e.offset || 0;
            n = (s = e.length) !== null && s !== undefined ? s : A.byteLength;
            r = (a = e.position) !== null && a !== undefined ? a : null;
          }
          if (t == null) {
            t = 0;
          }
          if (n == null) {
            n = 0;
          }
          if (n === 0) {
            return {
              bytesRead: n,
              buffer: A
            };
          }
          return {
            bytesRead: await this[c].readPromise(this.fd, A, t, n, r),
            buffer: A
          };
        } finally {
          this[p]();
        }
      }
      async readFile(e) {
        var t;
        try {
          this[f](this.readFile);
          const n = (t = typeof e == 'string' ? e : e == null ? undefined : e.encoding) !== null && t !== undefined ? t : undefined;
          return await this[c].readFilePromise(this.fd, n);
        } finally {
          this[p]();
        }
      }
      readLines(e) {
        return A.createInterface({
          input: this.createReadStream(e),
          crlfDelay: Infinity
        });
      }
      async stat(e) {
        try {
          this[f](this.stat);
          return await this[c].fstatPromise(this.fd, e);
        } finally {
          this[p]();
        }
      }
      async truncate(e) {
        try {
          this[f](this.truncate);
          return await this[c].ftruncatePromise(this.fd, e);
        } finally {
          this[p]();
        }
      }
      utimes(e, t) {
        throw new Error('Method not implemented.');
      }
      async writeFile(e, t) {
        var n;
        try {
          this[f](this.writeFile);
          const r = (n = typeof t == 'string' ? t : t == null ? undefined : t.encoding) !== null && n !== undefined ? n : undefined;
          await this[c].writeFilePromise(this.fd, e, r);
        } finally {
          this[p]();
        }
      }
      async write(...e) {
        try {
          this[f](this.write);
          if (ArrayBuffer.isView(e[0])) {
            const [t, n, r, o] = e;
            return {
              bytesWritten: await this[c].writePromise(this.fd, t, n ?? undefined, r ?? undefined, o ?? undefined),
              buffer: t
            };
          }
          {
            const [t, n, r] = e;
            return {
              bytesWritten: await this[c].writePromise(this.fd, t, n, r),
              buffer: t
            };
          }
        } finally {
          this[p]();
        }
      }
      async writev(e, t) {
        try {
          this[f](this.writev);
          let n = 0;
          if (t !== undefined) {
            for (const r of e) {
              const e = await this.write(r, undefined, undefined, t);
              n += e.bytesWritten;
              t += e.bytesWritten;
            }
          } else {
            for (const t of e) {
              n += (await this.write(t)).bytesWritten;
            }
          }
          return {
            buffers: e,
            bytesWritten: n
          };
        } finally {
          this[p]();
        }
      }
      readv(e, t) {
        throw new Error('Method not implemented.');
      }
      close() {
        if (this[u] === -1) {
          return Promise.resolve();
        }
        if (this[l]) {
          return this[l];
        }
        this[h]--;
        if (this[h] === 0) {
          const e = this[u];
          this[u] = -1;
          this[l] = this[c].closePromise(e).finally(() => {
            this[l] = undefined;
          });
        } else {
          this[l] = new Promise((e, t) => {
            this[g] = e;
            this[d] = t;
          }).finally(() => {
            this[l] = undefined;
            this[d] = undefined;
            this[g] = undefined;
          });
        }
        return this[l];
      }
      [(r = h, o = l, s = g, a = d, f)](e) {
        if (this[u] === -1) {
          const t = new Error('file closed');
          t.code = 'EBADF';
          t.syscall = e.name;
          throw t;
        }
        this[h]++;
      }
      [p]() {
        this[h]--;
        if (this[h] === 0) {
          const e = this[u];
          this[u] = -1;
          this[c].closePromise(e).then(this[g], this[d]);
        }
      }
    }
    exports.FileHandle = m;
  },
  22241: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.extendFs = exports.patchFs = undefined;
    const r = require(39023);
    const o = require(15336);
    const s = require(27914);
    const a = new Set(['accessSync', 'appendFileSync', 'createReadStream', 'createWriteStream', 'chmodSync', 'fchmodSync', 'chownSync', 'fchownSync', 'closeSync', 'copyFileSync', 'linkSync', 'lstatSync', 'fstatSync', 'lutimesSync', 'mkdirSync', 'openSync', 'opendirSync', 'readlinkSync', 'readFileSync', 'readdirSync', 'readlinkSync', 'realpathSync', 'renameSync', 'rmdirSync', 'statSync', 'symlinkSync', 'truncateSync', 'ftruncateSync', 'unlinkSync', 'unwatchFile', 'utimesSync', 'watch', 'watchFile', 'writeFileSync', 'writeSync']);
    const A = new Set(['accessPromise', 'appendFilePromise', 'fchmodPromise', 'chmodPromise', 'fchownPromise', 'chownPromise', 'closePromise', 'copyFilePromise', 'linkPromise', 'fstatPromise', 'lstatPromise', 'lutimesPromise', 'mkdirPromise', 'openPromise', 'opendirPromise', 'readdirPromise', 'realpathPromise', 'readFilePromise', 'readdirPromise', 'readlinkPromise', 'renamePromise', 'rmdirPromise', 'statPromise', 'symlinkPromise', 'truncatePromise', 'ftruncatePromise', 'unlinkPromise', 'utimesPromise', 'writeFilePromise', 'writeSync']);
    function c(e, t) {
      t = new o.NodePathFS(t);
      const n = (e, t, n) => {
        const o = e[t];
        e[t] = n;
        if ((o == null ? undefined : o[r.promisify.custom]) !== undefined) {
          n[r.promisify.custom] = o[r.promisify.custom];
        }
      };
      n(e, 'exists', (e, ...n) => {
        const r = typeof n[n.length - 1] == 'function' ? n.pop() : () => {};
        process.nextTick(() => {
          t.existsPromise(e).then(e => {
            r(e);
          }, () => {
            r(false);
          });
        });
      });
      n(e, 'read', (...e) => {
        let [n, r, o, s, a, A] = e;
        if (e.length <= 3) {
          let t = {};
          if (e.length < 3) {
            A = e[1];
          } else {
            t = e[1];
            A = e[2];
          }
          ({
            buffer: r = Buffer.alloc(16384),
            offset: o = 0,
            length: s = r.byteLength,
            position: a
          } = t);
        }
        if (o == null) {
          o = 0;
        }
        s |= 0;
        if (s !== 0) {
          if (a == null) {
            a = -1;
          }
          process.nextTick(() => {
            t.readPromise(n, r, o, s, a).then(e => {
              A(null, e, r);
            }, e => {
              A(e, 0, r);
            });
          });
        } else {
          process.nextTick(() => {
            A(null, 0, r);
          });
        }
      });
      for (const r of A) {
        const o = r.replace(/Promise$/, '');
        if (e[o] === undefined) {
          continue;
        }
        const s = t[r];
        if (s === undefined) {
          continue;
        }
        n(e, o, (...e) => {
          const n = typeof e[e.length - 1] == 'function' ? e.pop() : () => {};
          process.nextTick(() => {
            s.apply(t, e).then(e => {
              n(null, e);
            }, e => {
              n(e);
            });
          });
        });
      }
      e.realpath.native = e.realpath;
      n(e, 'existsSync', e => {
        try {
          return t.existsSync(e);
        } catch (e) {
          return false;
        }
      });
      n(e, 'readSync', (...e) => {
        let [n, r, o, s, a] = e;
        if (e.length <= 3) {
          const t = e[2] || {};
          ({
            offset: o = 0,
            length: s = r.byteLength,
            position: a
          } = t);
        }
        if (o == null) {
          o = 0;
        }
        s |= 0;
        if (s === 0) {
          return 0;
        } else {
          if (a == null) {
            a = -1;
          }
          return t.readSync(n, r, o, s, a);
        }
      });
      for (const r of a) {
        const o = r;
        if (e[o] === undefined) {
          continue;
        }
        const s = t[r];
        if (s !== undefined) {
          n(e, o, s.bind(t));
        }
      }
      e.realpathSync.native = e.realpathSync;
      {
        const r = e.promises;
        for (const e of A) {
          const o = e.replace(/Promise$/, '');
          if (r[o] === undefined) {
            continue;
          }
          const a = t[e];
          if (a !== undefined) {
            if (e !== 'open') {
              n(r, o, (e, ...n) => e instanceof s.FileHandle ? e[o].apply(e, n) : a.call(t, e, ...n));
            }
          }
        }
        n(r, 'open', async (...e) => {
          const n = await t.openPromise(...e);
          return new s.FileHandle(n, t);
        });
      }
      e.read[r.promisify.custom] = async (e, n, ...r) => {
        const o = t.readPromise(e, n, ...r);
        return {
          bytesRead: await o,
          buffer: n
        };
      };
      e.write[r.promisify.custom] = async (e, n, ...r) => {
        const o = t.writePromise(e, n, ...r);
        return {
          bytesWritten: await o,
          buffer: n
        };
      };
    }
    exports.patchFs = c;
    exports.extendFs = function (e, t) {
      const n = Object.create(e);
      c(n, t);
      return n;
    };
  },
  40055: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.toFilename = exports.convertPath = exports.ppath = exports.npath = exports.Filename = exports.PortablePath = undefined;
    const r = require(70961).__importDefault(require(16928));
    var o;
    (function (e) {
      e[e.File = 0] = 'File';
      e[e.Portable = 1] = 'Portable';
      e[e.Native = 2] = 'Native';
    })(o ||= {});
    exports.PortablePath = {
      root: '/',
      dot: '.',
      parent: '..'
    };
    exports.Filename = {
      nodeModules: 'node_modules',
      manifest: 'package.json',
      lockfile: 'yarn.lock',
      virtual: '__virtual__',
      pnpJs: '.pnp.js',
      pnpCjs: '.pnp.cjs',
      rc: '.yarnrc.yml'
    };
    exports.npath = Object.create(r.default);
    exports.ppath = Object.create(r.default.posix);
    exports.npath.cwd = () => process.cwd();
    exports.ppath.cwd = () => g(process.cwd());
    exports.ppath.resolve = (...e) => e.length > 0 && exports.ppath.isAbsolute(e[0]) ? r.default.posix.resolve(...e) : r.default.posix.resolve(exports.ppath.cwd(), ...e);
    const s = function (e, t, n) {
      if ((t = e.normalize(t)) === (n = e.normalize(n))) {
        return '.';
      } else {
        if (!t.endsWith(e.sep)) {
          t += e.sep;
        }
        return n.startsWith(t) ? n.slice(t.length) : null;
      }
    };
    exports.npath.fromPortablePath = l;
    exports.npath.toPortablePath = g;
    exports.npath.contains = (e, n) => s(exports.npath, e, n);
    exports.ppath.contains = (e, n) => s(exports.ppath, e, n);
    const a = /^([a-zA-Z]:.*)$/;
    const A = /^\/\/(\.\/)?(.*)$/;
    const c = /^\/([a-zA-Z]:.*)$/;
    const u = /^\/unc\/(\.dot\/)?(.*)$/;
    function l(e) {
      if (process.platform !== 'win32') {
        return e;
      }
      let t;
      let n;
      if (t = e.match(c)) {
        e = t[1];
      } else {
        if (!(n = e.match(u))) {
          return e;
        }
        e = `\\\\${n[1] ? '.\\' : ''}${n[2]}`;
      }
      return e.replace(/\//g, '\\');
    }
    function g(e) {
      if (process.platform !== 'win32') {
        return e;
      }
      let t;
      let n;
      if (t = (e = e.replace(/\\/g, '/')).match(a)) {
        e = `/${t[1]}`;
      } else {
        if (n = e.match(A)) {
          e = `/unc/${n[1] ? '.dot/' : ''}${n[2]}`;
        }
      }
      return e;
    }
    exports.convertPath = function (e, n) {
      if (e === exports.npath) {
        return l(n);
      } else {
        return g(n);
      }
    };
    exports.toFilename = function (e) {
      if (exports.npath.parse(e).dir !== '' || exports.ppath.parse(e).dir !== '') {
        throw new Error(`Invalid filename: "${e}"`);
      }
      return e;
    };
  },
  70305: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.areStatsEqual = exports.convertToBigIntStats = exports.clearStats = exports.makeEmptyStats = exports.makeDefaultStats = exports.BigIntStatsEntry = exports.StatEntry = exports.DirEntry = exports.DEFAULT_MODE = undefined;
    const r = require(70961).__importStar(require(39023));
    const o = require(50767);
    exports.DEFAULT_MODE = o.S_IFREG | 420;
    exports.DirEntry = class {
      constructor() {
        this.name = '';
        this.mode = 0;
      }
      isBlockDevice() {
        return false;
      }
      isCharacterDevice() {
        return false;
      }
      isDirectory() {
        return (this.mode & o.S_IFMT) === o.S_IFDIR;
      }
      isFIFO() {
        return false;
      }
      isFile() {
        return (this.mode & o.S_IFMT) === o.S_IFREG;
      }
      isSocket() {
        return false;
      }
      isSymbolicLink() {
        return (this.mode & o.S_IFMT) === o.S_IFLNK;
      }
    };
    class s {
      constructor() {
        this.uid = 0;
        this.gid = 0;
        this.size = 0;
        this.blksize = 0;
        this.atimeMs = 0;
        this.mtimeMs = 0;
        this.ctimeMs = 0;
        this.birthtimeMs = 0;
        this.atime = new Date(0);
        this.mtime = new Date(0);
        this.ctime = new Date(0);
        this.birthtime = new Date(0);
        this.dev = 0;
        this.ino = 0;
        this.mode = exports.DEFAULT_MODE;
        this.nlink = 1;
        this.rdev = 0;
        this.blocks = 1;
      }
      isBlockDevice() {
        return false;
      }
      isCharacterDevice() {
        return false;
      }
      isDirectory() {
        return (this.mode & o.S_IFMT) === o.S_IFDIR;
      }
      isFIFO() {
        return false;
      }
      isFile() {
        return (this.mode & o.S_IFMT) === o.S_IFREG;
      }
      isSocket() {
        return false;
      }
      isSymbolicLink() {
        return (this.mode & o.S_IFMT) === o.S_IFLNK;
      }
    }
    exports.StatEntry = s;
    class a {
      constructor() {
        this.uid = BigInt(0);
        this.gid = BigInt(0);
        this.size = BigInt(0);
        this.blksize = BigInt(0);
        this.atimeMs = BigInt(0);
        this.mtimeMs = BigInt(0);
        this.ctimeMs = BigInt(0);
        this.birthtimeMs = BigInt(0);
        this.atimeNs = BigInt(0);
        this.mtimeNs = BigInt(0);
        this.ctimeNs = BigInt(0);
        this.birthtimeNs = BigInt(0);
        this.atime = new Date(0);
        this.mtime = new Date(0);
        this.ctime = new Date(0);
        this.birthtime = new Date(0);
        this.dev = BigInt(0);
        this.ino = BigInt(0);
        this.mode = BigInt(exports.DEFAULT_MODE);
        this.nlink = BigInt(1);
        this.rdev = BigInt(0);
        this.blocks = BigInt(1);
      }
      isBlockDevice() {
        return false;
      }
      isCharacterDevice() {
        return false;
      }
      isDirectory() {
        return (this.mode & BigInt(o.S_IFMT)) === BigInt(o.S_IFDIR);
      }
      isFIFO() {
        return false;
      }
      isFile() {
        return (this.mode & BigInt(o.S_IFMT)) === BigInt(o.S_IFREG);
      }
      isSocket() {
        return false;
      }
      isSymbolicLink() {
        return (this.mode & BigInt(o.S_IFMT)) === BigInt(o.S_IFLNK);
      }
    }
    function A() {
      return new s();
    }
    function c(e) {
      for (const t in e) {
        if (Object.prototype.hasOwnProperty.call(e, t)) {
          const n = e[t];
          if (typeof n == 'number') {
            e[t] = 0;
          } else {
            if (typeof n == 'bigint') {
              e[t] = BigInt(0);
            } else {
              if (r.types.isDate(n)) {
                e[t] = new Date(0);
              }
            }
          }
        }
      }
      return e;
    }
    exports.BigIntStatsEntry = a;
    exports.makeDefaultStats = A;
    exports.makeEmptyStats = function () {
      return c(A());
    };
    exports.clearStats = c;
    exports.convertToBigIntStats = function (e) {
      const t = new a();
      for (const n in e) {
        if (Object.prototype.hasOwnProperty.call(e, n)) {
          const o = e[n];
          if (typeof o == 'number') {
            t[n] = BigInt(o);
          } else {
            if (r.types.isDate(o)) {
              t[n] = new Date(o);
            }
          }
        }
      }
      t.atimeNs = t.atimeMs * BigInt(1000000);
      t.mtimeNs = t.mtimeMs * BigInt(1000000);
      t.ctimeNs = t.ctimeMs * BigInt(1000000);
      t.birthtimeNs = t.birthtimeMs * BigInt(1000000);
      return t;
    };
    exports.areStatsEqual = function (e, t) {
      if (e.atimeMs !== t.atimeMs) {
        return false;
      }
      if (e.birthtimeMs !== t.birthtimeMs) {
        return false;
      }
      if (e.blksize !== t.blksize) {
        return false;
      }
      if (e.blocks !== t.blocks) {
        return false;
      }
      if (e.ctimeMs !== t.ctimeMs) {
        return false;
      }
      if (e.dev !== t.dev) {
        return false;
      }
      if (e.gid !== t.gid) {
        return false;
      }
      if (e.ino !== t.ino) {
        return false;
      }
      if (e.isBlockDevice() !== t.isBlockDevice()) {
        return false;
      }
      if (e.isCharacterDevice() !== t.isCharacterDevice()) {
        return false;
      }
      if (e.isDirectory() !== t.isDirectory()) {
        return false;
      }
      if (e.isFIFO() !== t.isFIFO()) {
        return false;
      }
      if (e.isFile() !== t.isFile()) {
        return false;
      }
      if (e.isSocket() !== t.isSocket()) {
        return false;
      }
      if (e.isSymbolicLink() !== t.isSymbolicLink()) {
        return false;
      }
      if (e.mode !== t.mode) {
        return false;
      }
      if (e.mtimeMs !== t.mtimeMs) {
        return false;
      }
      if (e.nlink !== t.nlink) {
        return false;
      }
      if (e.rdev !== t.rdev) {
        return false;
      }
      if (e.size !== t.size) {
        return false;
      }
      if (e.uid !== t.uid) {
        return false;
      }
      const n = e;
      const r = t;
      return n.atimeNs === r.atimeNs && n.mtimeNs === r.mtimeNs && n.ctimeNs === r.ctimeNs && n.birthtimeNs === r.birthtimeNs;
    };
  },
  67505: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.xfs = undefined;
    const r = require(70961).__importDefault(require(70857));
    const o = require(41639);
    const s = require(40055);
    function a(e) {
      return `${e}${Math.ceil(Math.random() * 4294967296).toString(16).padStart(8, '0')}`;
    }
    const A = new Set();
    let c = null;
    function u() {
      if (c) {
        return c;
      }
      const e = s.npath.toPortablePath(r.default.tmpdir());
      const n = exports.xfs.realpathSync(e);
      process.once('exit', () => {
        exports.xfs.rmtempSync();
      });
      return c = {
        tmpdir: e,
        realTmpdir: n
      };
    }
    exports.xfs = Object.assign(new o.NodeFS(), {
      detachTemp(e) {
        A.delete(e);
      },
      mktempSync(e) {
        const {
          tmpdir: t,
          realTmpdir: n
        } = u();
        while (true) {
          const r = a('xfs-');
          try {
            this.mkdirSync(s.ppath.join(t, r));
          } catch (e) {
            if (e.code === 'EEXIST') {
              continue;
            }
            throw e;
          }
          const o = s.ppath.join(n, r);
          A.add(o);
          if (e === undefined) {
            return o;
          }
          try {
            return e(o);
          } finally {
            if (A.has(o)) {
              A.delete(o);
              try {
                this.removeSync(o);
              } catch {}
            }
          }
        }
      },
      async mktempPromise(e) {
        const {
          tmpdir: t,
          realTmpdir: n
        } = u();
        while (true) {
          const r = a('xfs-');
          try {
            await this.mkdirPromise(s.ppath.join(t, r));
          } catch (e) {
            if (e.code === 'EEXIST') {
              continue;
            }
            throw e;
          }
          const o = s.ppath.join(n, r);
          A.add(o);
          if (e === undefined) {
            return o;
          }
          try {
            return await e(o);
          } finally {
            if (A.has(o)) {
              A.delete(o);
              try {
                await this.removePromise(o);
              } catch {}
            }
          }
        }
      },
      async rmtempPromise() {
        await Promise.all(Array.from(A.values()).map(async e => {
          try {
            await exports.xfs.removePromise(e, {
              maxRetries: 0
            });
            A.delete(e);
          } catch {}
        }));
      },
      rmtempSync() {
        for (const e of A) {
          try {
            exports.xfs.removeSync(e);
            A.delete(e);
          } catch {}
        }
      }
    });
  },
  82793: (module, exports, require) => {
    var r = Object.assign({}, require(79896));
    if (!(typeof document != 'undefined' && document.currentScript ? document.currentScript.src : undefined)) {
      __filename;
    }
    function o(e) {
      var t;
      var o;
      var s = (e = e || {}) !== undefined ? e : {};
      s.ready = new Promise(function (e, n) {
        t = e;
        o = n;
      });
      var a;
      var A = {};
      for (a in s) {
        if (s.hasOwnProperty(a)) {
          A[a] = s[a];
        }
      }
      var c;
      var u;
      var l;
      var g;
      var d = [];
      var h = '';
      h = __dirname + '/';
      c = function (e, t) {
        var o = be(e);
        if (o) {
          if (t) {
            return o;
          } else {
            return o.toString();
          }
        } else {
          if (!l) {
            l = r;
          }
          if (!g) {
            g = require(16928);
          }
          e = g.normalize(e);
          return l.readFileSync(e, t ? null : 'utf8');
        }
      };
      u = function (e) {
        var t = c(e, true);
        if (!t.buffer) {
          t = new Uint8Array(t);
        }
        y(t.buffer);
        return t;
      };
      if (process.argv.length > 1) {
        process.argv[1].replace(/\\/g, '/');
      }
      d = process.argv.slice(2);
      s.inspect = function () {
        return '[Emscripten Module object]';
      };
      var f;
      var p;
      var m = s.print || console.log.bind(console);
      var I = s.printErr || console.warn.bind(console);
      for (a in A) {
        if (A.hasOwnProperty(a)) {
          s[a] = A[a];
        }
      }
      A = null;
      if (s.arguments) {
        d = s.arguments;
      }
      if (s.thisProgram) {
        s.thisProgram;
      }
      if (s.quit) {
        s.quit;
      }
      if (s.wasmBinary) {
        f = s.wasmBinary;
      }
      s.noExitRuntime;
      if (typeof WebAssembly != 'object') {
        z('no native wasm support detected');
      }
      var E = false;
      function y(e, t) {
        if (!e) {
          z(`Assertion failed: ${t}`);
        }
      }
      function w(e) {
        var t = s[`_${e}`];
        y(t, `Cannot call unknown function ${e}, make sure it is exported`);
        return t;
      }
      function _(e, t, n, r, o) {
        var s = {
          string: function (e) {
            var t = 0;
            if (e != null && e !== 0) {
              var n = 1 + (e.length << 2);
              F(e, t = Me(n), n);
            }
            return t;
          },
          array: function (e) {
            var t = Me(e.length);
            (function (e, t) {
              b.set(e, t);
            })(e, t);
            return t;
          }
        };
        var a = w(e);
        var A = [];
        var c = 0;
        if (r) {
          for (var u = 0; u < r.length; u++) {
            var l = s[n[u]];
            if (l) {
              if (c === 0) {
                c = Pe();
              }
              A[u] = l(r[u]);
            } else {
              A[u] = r[u];
            }
          }
        }
        var g = a.apply(null, A);
        g = function (e) {
          if (t === 'string') {
            return x(e);
          } else {
            if (t === 'boolean') {
              return Boolean(e);
            } else {
              return e;
            }
          }
        }(g);
        if (c !== 0) {
          Fe(c);
        }
        return g;
      }
      var v;
      var b;
      var B;
      var Q;
      var D;
      var S;
      var T;
      var R = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;
      function k(e, t, n) {
        for (var r = t + n, o = t; e[o] && !(o >= r);) {
          ++o;
        }
        if (o - t > 16 && e.subarray && R) {
          return R.decode(e.subarray(t, o));
        }
        var s = '';
        while (t < o) {
          var a = e[t++];
          if (a & 128) {
            var A = e[t++] & 63;
            if ((a & 224) != 192) {
              var c = e[t++] & 63;
              if ((a = (a & 240) == 224 ? (a & 15) << 12 | A << 6 | c : (a & 7) << 18 | A << 12 | c << 6 | e[t++] & 63) < 65536) {
                s += String.fromCharCode(a);
              } else {
                var u = a - 65536;
                s += String.fromCharCode(u >> 10 | 55296, u & 1023 | 56320);
              }
            } else {
              s += String.fromCharCode((a & 31) << 6 | A);
            }
          } else {
            s += String.fromCharCode(a);
          }
        }
        return s;
      }
      function x(e, t) {
        if (e) {
          return k(B, e, t);
        } else {
          return '';
        }
      }
      function P(e, t, n, r) {
        if (!(r > 0)) {
          return 0;
        }
        var o = n;
        var s = n + r - 1;
        for (var a = 0; a < e.length; ++a) {
          var A = e.charCodeAt(a);
          if (A >= 55296 && A <= 57343) {
            A = 65536 + ((A & 1023) << 10) | e.charCodeAt(++a) & 1023;
          }
          if (A <= 127) {
            if (n >= s) {
              break;
            }
            t[n++] = A;
          } else {
            if (A <= 2047) {
              if (n + 1 >= s) {
                break;
              }
              t[n++] = A >> 6 | 192;
              t[n++] = A & 63 | 128;
            } else {
              if (A <= 65535) {
                if (n + 2 >= s) {
                  break;
                }
                t[n++] = A >> 12 | 224;
                t[n++] = A >> 6 & 63 | 128;
                t[n++] = A & 63 | 128;
              } else {
                if (n + 3 >= s) {
                  break;
                }
                t[n++] = A >> 18 | 240;
                t[n++] = A >> 12 & 63 | 128;
                t[n++] = A >> 6 & 63 | 128;
                t[n++] = A & 63 | 128;
              }
            }
          }
        }
        t[n] = 0;
        return n - o;
      }
      function F(e, t, n) {
        return P(e, B, t, n);
      }
      function M(e) {
        var t = 0;
        for (var n = 0; n < e.length; ++n) {
          var r = e.charCodeAt(n);
          if (r >= 55296 && r <= 57343) {
            r = 65536 + ((r & 1023) << 10) | e.charCodeAt(++n) & 1023;
          }
          if (r <= 127) {
            ++t;
          } else {
            t += r <= 2047 ? 2 : r <= 65535 ? 3 : 4;
          }
        }
        return t;
      }
      function O(e) {
        var t = M(e) + 1;
        var n = Se(t);
        if (n) {
          P(e, b, n, t);
        }
        return n;
      }
      function N(e) {
        v = e;
        s.HEAP8 = b = new Int8Array(e);
        s.HEAP16 = Q = new Int16Array(e);
        s.HEAP32 = D = new Int32Array(e);
        s.HEAPU8 = B = new Uint8Array(e);
        s.HEAPU16 = new Uint16Array(e);
        s.HEAPU32 = new Uint32Array(e);
        s.HEAPF32 = S = new Float32Array(e);
        s.HEAPF64 = T = new Float64Array(e);
      }
      s.INITIAL_MEMORY;
      var L;
      var K = [];
      var U = [];
      var j = [];
      var q = 0;
      var G = null;
      var Y = null;
      function H(e) {
        q++;
        if (s.monitorRunDependencies) {
          s.monitorRunDependencies(q);
        }
      }
      function J(e) {
        q--;
        if (s.monitorRunDependencies) {
          s.monitorRunDependencies(q);
        }
        if (q == 0 && (G !== null && (clearInterval(G), G = null), Y)) {
          var t = Y;
          Y = null;
          t();
        }
      }
      function z(e) {
        if (s.onAbort) {
          s.onAbort(e);
        }
        I(e += '');
        E = true;
        e = `abort(${e}). Build with -s ASSERTIONS=1 for more info.`;
        var t = new WebAssembly.RuntimeError(e);
        o(t);
        throw t;
      }
      s.preloadedImages = {};
      s.preloadedAudios = {};
      var $ = 'data:application/octet-stream;base64,';
      function W(e) {
        return e.startsWith($);
      }
      var V;
      var X;
      var Z;
      var ee = 'data:application/octet-stream;base64,';
      function te(e, t) {
        var n;
        var r;
        var o;
        try {
          o = function (e) {
            try {
              if (e == ee && f) {
                return new Uint8Array(f);
              }
              var t = be(e);
              if (t) {
                return t;
              }
              if (u) {
                return u(e);
              }
              throw 'sync fetching of the wasm failed: you can preload it to Module[\'wasmBinary\'] manually, or emcc.py will do that for you when generating HTML (but not JS)';
            } catch (e) {
              z(e);
            }
          }(e);
          r = new WebAssembly.Module(o);
          n = new WebAssembly.Instance(r, t);
        } catch (e) {
          var s = e.toString();
          I(`failed to compile wasm module: ${s}`);
          if (s.includes('imported Memory') || s.includes('memory import')) {
            I('Memory size incompatibility issues may be due to changing INITIAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set INITIAL_MEMORY at runtime to something smaller than it was at compile time).');
          }
          throw e;
        }
        return [n, r];
      }
      function ne(e) {
        while (e.length > 0) {
          var t = e.shift();
          if (typeof t != 'function') {
            var n = t.func;
            if (typeof n == 'number') {
              if (t.arg === undefined) {
                L.get(n)();
              } else {
                L.get(n)(t.arg);
              }
            } else {
              n(t.arg === undefined ? null : t.arg);
            }
          } else {
            t(s);
          }
        }
      }
      function re(e, t) {
        var n = new Date(D[e >> 2] * 1000);
        D[t >> 2] = n.getUTCSeconds();
        D[t + 4 >> 2] = n.getUTCMinutes();
        D[t + 8 >> 2] = n.getUTCHours();
        D[t + 12 >> 2] = n.getUTCDate();
        D[t + 16 >> 2] = n.getUTCMonth();
        D[t + 20 >> 2] = n.getUTCFullYear() - 1900;
        D[t + 24 >> 2] = n.getUTCDay();
        D[t + 36 >> 2] = 0;
        D[t + 32 >> 2] = 0;
        var r = Date.UTC(n.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
        var o = (n.getTime() - r) / 86400000 | 0;
        D[t + 28 >> 2] = o;
        if (!re.GMTString) {
          re.GMTString = O('GMT');
        }
        D[t + 40 >> 2] = re.GMTString;
        return t;
      }
      if (!W(ee)) {
        V = ee;
        ee = s.locateFile ? s.locateFile(V, h) : h + V;
      }
      var oe = {
        splitPath: function (e) {
          return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1);
        },
        normalizeArray: function (e, t) {
          var n = 0;
          for (var r = e.length - 1; r >= 0; r--) {
            var o = e[r];
            if (o === '.') {
              e.splice(r, 1);
            } else {
              if (o === '..') {
                e.splice(r, 1);
                n++;
              } else {
                if (n) {
                  e.splice(r, 1);
                  n--;
                }
              }
            }
          }
          if (t) {
            for (; n; n--) {
              e.unshift('..');
            }
          }
          return e;
        },
        normalize: function (e) {
          var t = e.charAt(0) === '/';
          var n = e.substr(-1) === '/';
          if (!(e = oe.normalizeArray(e.split('/').filter(function (e) {
            return !!e;
          }), !t).join('/')) && !t) {
            e = '.';
          }
          if (e && n) {
            e += '/';
          }
          return (t ? '/' : '') + e;
        },
        dirname: function (e) {
          var t = oe.splitPath(e);
          var n = t[0];
          var r = t[1];
          if (n || r) {
            if (r) {
              r = r.substr(0, r.length - 1);
            }
            return n + r;
          } else {
            return '.';
          }
        },
        basename: function (e) {
          if (e === '/') {
            return '/';
          }
          var t = (e = (e = oe.normalize(e)).replace(/\/$/, '')).lastIndexOf('/');
          if (t === -1) {
            return e;
          } else {
            return e.substr(t + 1);
          }
        },
        extname: function (e) {
          return oe.splitPath(e)[3];
        },
        join: function () {
          var e = Array.prototype.slice.call(arguments, 0);
          return oe.normalize(e.join('/'));
        },
        join2: function (e, t) {
          return oe.normalize(e + '/' + t);
        }
      };
      var ie = {
        resolve: function () {
          var e = '';
          for (var t = false, n = arguments.length - 1; n >= -1 && !t; n--) {
            var r = n >= 0 ? arguments[n] : ge.cwd();
            if (typeof r != 'string') {
              throw new TypeError('Arguments to path.resolve must be strings');
            }
            if (!r) {
              return '';
            }
            e = r + '/' + e;
            t = r.charAt(0) === '/';
          }
          return (t ? '/' : '') + (e = oe.normalizeArray(e.split('/').filter(function (e) {
            return !!e;
          }), !t).join('/')) || '.';
        },
        relative: function (e, t) {
          function n(e) {
            for (var t = 0; t < e.length && e[t] === ''; t++);
            for (var n = e.length - 1; n >= 0 && e[n] === ''; n--);
            if (t > n) {
              return [];
            } else {
              return e.slice(t, n - t + 1);
            }
          }
          e = ie.resolve(e).substr(1);
          t = ie.resolve(t).substr(1);
          var r = n(e.split('/'));
          var o = n(t.split('/'));
          for (var s = Math.min(r.length, o.length), a = s, A = 0; A < s; A++) {
            if (r[A] !== o[A]) {
              a = A;
              break;
            }
          }
          var c = [];
          for (A = a; A < r.length; A++) {
            c.push('..');
          }
          return (c = c.concat(o.slice(a))).join('/');
        }
      };
      var se = {
        ttys: [],
        init: function () {},
        shutdown: function () {},
        register: function (e, t) {
          se.ttys[e] = {
            input: [],
            output: [],
            ops: t
          };
          ge.registerDevice(e, se.stream_ops);
        },
        stream_ops: {
          open: function (e) {
            var t = se.ttys[e.node.rdev];
            if (!t) {
              throw new ge.ErrnoError(43);
            }
            e.tty = t;
            e.seekable = false;
          },
          close: function (e) {
            e.tty.ops.flush(e.tty);
          },
          flush: function (e) {
            e.tty.ops.flush(e.tty);
          },
          read: function (e, t, n, r, o) {
            if (!e.tty || !e.tty.ops.get_char) {
              throw new ge.ErrnoError(60);
            }
            var s = 0;
            for (var a = 0; a < r; a++) {
              var A;
              try {
                A = e.tty.ops.get_char(e.tty);
              } catch (e) {
                throw new ge.ErrnoError(29);
              }
              if (A === undefined && s === 0) {
                throw new ge.ErrnoError(6);
              }
              if (A == null) {
                break;
              }
              s++;
              t[n + a] = A;
            }
            if (s) {
              e.node.timestamp = Date.now();
            }
            return s;
          },
          write: function (e, t, n, r, o) {
            if (!e.tty || !e.tty.ops.put_char) {
              throw new ge.ErrnoError(60);
            }
            try {
              for (var s = 0; s < r; s++) {
                e.tty.ops.put_char(e.tty, t[n + s]);
              }
            } catch (e) {
              throw new ge.ErrnoError(29);
            }
            if (r) {
              e.node.timestamp = Date.now();
            }
            return s;
          }
        },
        default_tty_ops: {
          get_char: function (e) {
            if (!e.input.length) {
              var t = null;
              var n = Buffer.alloc ? Buffer.alloc(256) : new Buffer(256);
              var r = 0;
              try {
                r = l.readSync(process.stdin.fd, n, 0, 256, null);
              } catch (e) {
                if (!e.toString().includes('EOF')) {
                  throw e;
                }
                r = 0;
              }
              if (!(t = r > 0 ? n.slice(0, r).toString('utf-8') : null)) {
                return null;
              }
              e.input = ve(t, true);
            }
            return e.input.shift();
          },
          put_char: function (e, t) {
            if (t === null || t === 10) {
              m(k(e.output, 0));
              e.output = [];
            } else {
              if (t != 0) {
                e.output.push(t);
              }
            }
          },
          flush: function (e) {
            if (e.output && e.output.length > 0) {
              m(k(e.output, 0));
              e.output = [];
            }
          }
        },
        default_tty1_ops: {
          put_char: function (e, t) {
            if (t === null || t === 10) {
              I(k(e.output, 0));
              e.output = [];
            } else {
              if (t != 0) {
                e.output.push(t);
              }
            }
          },
          flush: function (e) {
            if (e.output && e.output.length > 0) {
              I(k(e.output, 0));
              e.output = [];
            }
          }
        }
      };
      function ae(e) {
        for (var t = function (e, t) {
            if (!t) {
              t = 16;
            }
            return Math.ceil(e / t) * t;
          }(e, 65536), n = Se(t); e < t;) {
          b[n + e++] = 0;
        }
        return n;
      }
      var Ae = {
        ops_table: null,
        mount: function (e) {
          return Ae.createNode(null, '/', 16895, 0);
        },
        createNode: function (e, t, n, r) {
          if (ge.isBlkdev(n) || ge.isFIFO(n)) {
            throw new ge.ErrnoError(63);
          }
          if (!Ae.ops_table) {
            Ae.ops_table = {
              dir: {
                node: {
                  getattr: Ae.node_ops.getattr,
                  setattr: Ae.node_ops.setattr,
                  lookup: Ae.node_ops.lookup,
                  mknod: Ae.node_ops.mknod,
                  rename: Ae.node_ops.rename,
                  unlink: Ae.node_ops.unlink,
                  rmdir: Ae.node_ops.rmdir,
                  readdir: Ae.node_ops.readdir,
                  symlink: Ae.node_ops.symlink
                },
                stream: {
                  llseek: Ae.stream_ops.llseek
                }
              },
              file: {
                node: {
                  getattr: Ae.node_ops.getattr,
                  setattr: Ae.node_ops.setattr
                },
                stream: {
                  llseek: Ae.stream_ops.llseek,
                  read: Ae.stream_ops.read,
                  write: Ae.stream_ops.write,
                  allocate: Ae.stream_ops.allocate,
                  mmap: Ae.stream_ops.mmap,
                  msync: Ae.stream_ops.msync
                }
              },
              link: {
                node: {
                  getattr: Ae.node_ops.getattr,
                  setattr: Ae.node_ops.setattr,
                  readlink: Ae.node_ops.readlink
                },
                stream: {}
              },
              chrdev: {
                node: {
                  getattr: Ae.node_ops.getattr,
                  setattr: Ae.node_ops.setattr
                },
                stream: ge.chrdev_stream_ops
              }
            };
          }
          var o = ge.createNode(e, t, n, r);
          if (ge.isDir(o.mode)) {
            o.node_ops = Ae.ops_table.dir.node;
            o.stream_ops = Ae.ops_table.dir.stream;
            o.contents = {};
          } else {
            if (ge.isFile(o.mode)) {
              o.node_ops = Ae.ops_table.file.node;
              o.stream_ops = Ae.ops_table.file.stream;
              o.usedBytes = 0;
              o.contents = null;
            } else {
              if (ge.isLink(o.mode)) {
                o.node_ops = Ae.ops_table.link.node;
                o.stream_ops = Ae.ops_table.link.stream;
              } else {
                if (ge.isChrdev(o.mode)) {
                  o.node_ops = Ae.ops_table.chrdev.node;
                  o.stream_ops = Ae.ops_table.chrdev.stream;
                }
              }
            }
          }
          o.timestamp = Date.now();
          if (e) {
            e.contents[t] = o;
            e.timestamp = o.timestamp;
          }
          return o;
        },
        getFileDataAsTypedArray: function (e) {
          if (e.contents) {
            if (e.contents.subarray) {
              return e.contents.subarray(0, e.usedBytes);
            } else {
              return new Uint8Array(e.contents);
            }
          } else {
            return new Uint8Array(0);
          }
        },
        expandFileStorage: function (e, t) {
          var n = e.contents ? e.contents.length : 0;
          if (!(n >= t)) {
            t = Math.max(t, n * (n < 1048576 ? 2 : 1.125) >>> 0);
            if (n != 0) {
              t = Math.max(t, 256);
            }
            var r = e.contents;
            e.contents = new Uint8Array(t);
            if (e.usedBytes > 0) {
              e.contents.set(r.subarray(0, e.usedBytes), 0);
            }
          }
        },
        resizeFileStorage: function (e, t) {
          if (e.usedBytes != t) {
            if (t == 0) {
              e.contents = null;
              e.usedBytes = 0;
            } else {
              var n = e.contents;
              e.contents = new Uint8Array(t);
              if (n) {
                e.contents.set(n.subarray(0, Math.min(t, e.usedBytes)));
              }
              e.usedBytes = t;
            }
          }
        },
        node_ops: {
          getattr: function (e) {
            var t = {};
            t.dev = ge.isChrdev(e.mode) ? e.id : 1;
            t.ino = e.id;
            t.mode = e.mode;
            t.nlink = 1;
            t.uid = 0;
            t.gid = 0;
            t.rdev = e.rdev;
            if (ge.isDir(e.mode)) {
              t.size = 4096;
            } else {
              if (ge.isFile(e.mode)) {
                t.size = e.usedBytes;
              } else {
                if (ge.isLink(e.mode)) {
                  t.size = e.link.length;
                } else {
                  t.size = 0;
                }
              }
            }
            t.atime = new Date(e.timestamp);
            t.mtime = new Date(e.timestamp);
            t.ctime = new Date(e.timestamp);
            t.blksize = 4096;
            t.blocks = Math.ceil(t.size / t.blksize);
            return t;
          },
          setattr: function (e, t) {
            if (t.mode !== undefined) {
              e.mode = t.mode;
            }
            if (t.timestamp !== undefined) {
              e.timestamp = t.timestamp;
            }
            if (t.size !== undefined) {
              Ae.resizeFileStorage(e, t.size);
            }
          },
          lookup: function (e, t) {
            throw ge.genericErrors[44];
          },
          mknod: function (e, t, n, r) {
            return Ae.createNode(e, t, n, r);
          },
          rename: function (e, t, n) {
            if (ge.isDir(e.mode)) {
              var r;
              try {
                r = ge.lookupNode(t, n);
              } catch (e) {}
              if (r) {
                for (var o in r.contents) {
                  throw new ge.ErrnoError(55);
                }
              }
            }
            delete e.parent.contents[e.name];
            e.parent.timestamp = Date.now();
            e.name = n;
            t.contents[n] = e;
            t.timestamp = e.parent.timestamp;
            e.parent = t;
          },
          unlink: function (e, t) {
            delete e.contents[t];
            e.timestamp = Date.now();
          },
          rmdir: function (e, t) {
            var n = ge.lookupNode(e, t);
            for (var r in n.contents) {
              throw new ge.ErrnoError(55);
            }
            delete e.contents[t];
            e.timestamp = Date.now();
          },
          readdir: function (e) {
            var t = ['.', '..'];
            for (var n in e.contents) {
              if (e.contents.hasOwnProperty(n)) {
                t.push(n);
              }
            }
            return t;
          },
          symlink: function (e, t, n) {
            var r = Ae.createNode(e, t, 41471, 0);
            r.link = n;
            return r;
          },
          readlink: function (e) {
            if (!ge.isLink(e.mode)) {
              throw new ge.ErrnoError(28);
            }
            return e.link;
          }
        },
        stream_ops: {
          read: function (e, t, n, r, o) {
            var s = e.node.contents;
            if (o >= e.node.usedBytes) {
              return 0;
            }
            var a = Math.min(e.node.usedBytes - o, r);
            if (a > 8 && s.subarray) {
              t.set(s.subarray(o, o + a), n);
            } else {
              for (var A = 0; A < a; A++) {
                t[n + A] = s[o + A];
              }
            }
            return a;
          },
          write: function (e, t, n, r, o, s) {
            if (t.buffer === b.buffer) {
              s = false;
            }
            if (!r) {
              return 0;
            }
            var a = e.node;
            a.timestamp = Date.now();
            if (t.subarray && (!a.contents || a.contents.subarray)) {
              if (s) {
                a.contents = t.subarray(n, n + r);
                a.usedBytes = r;
                return r;
              }
              if (a.usedBytes === 0 && o === 0) {
                a.contents = t.slice(n, n + r);
                a.usedBytes = r;
                return r;
              }
              if (o + r <= a.usedBytes) {
                a.contents.set(t.subarray(n, n + r), o);
                return r;
              }
            }
            Ae.expandFileStorage(a, o + r);
            if (a.contents.subarray && t.subarray) {
              a.contents.set(t.subarray(n, n + r), o);
            } else {
              for (var A = 0; A < r; A++) {
                a.contents[o + A] = t[n + A];
              }
            }
            a.usedBytes = Math.max(a.usedBytes, o + r);
            return r;
          },
          llseek: function (e, t, n) {
            var r = t;
            if (n === 1) {
              r += e.position;
            } else {
              if (n === 2 && ge.isFile(e.node.mode)) {
                r += e.node.usedBytes;
              }
            }
            if (r < 0) {
              throw new ge.ErrnoError(28);
            }
            return r;
          },
          allocate: function (e, t, n) {
            Ae.expandFileStorage(e.node, t + n);
            e.node.usedBytes = Math.max(e.node.usedBytes, t + n);
          },
          mmap: function (e, t, n, r, o, s) {
            if (t !== 0) {
              throw new ge.ErrnoError(28);
            }
            if (!ge.isFile(e.node.mode)) {
              throw new ge.ErrnoError(43);
            }
            var a;
            var A;
            var c = e.node.contents;
            if (s & 2 || c.buffer !== v) {
              if (r > 0 || r + n < c.length) {
                c = c.subarray ? c.subarray(r, r + n) : Array.prototype.slice.call(c, r, r + n);
              }
              A = true;
              if (!(a = ae(n))) {
                throw new ge.ErrnoError(48);
              }
              b.set(c, a);
            } else {
              A = false;
              a = c.byteOffset;
            }
            return {
              ptr: a,
              allocated: A
            };
          },
          msync: function (e, t, n, r, o) {
            if (!ge.isFile(e.node.mode)) {
              throw new ge.ErrnoError(43);
            }
            if (!(o & 2)) {
              Ae.stream_ops.write(e, t, 0, r, n, false);
            }
            return 0;
          }
        }
      };
      var ce = {
        EPERM: 63,
        ENOENT: 44,
        ESRCH: 71,
        EINTR: 27,
        EIO: 29,
        ENXIO: 60,
        E2BIG: 1,
        ENOEXEC: 45,
        EBADF: 8,
        ECHILD: 12,
        EAGAIN: 6,
        EWOULDBLOCK: 6,
        ENOMEM: 48,
        EACCES: 2,
        EFAULT: 21,
        ENOTBLK: 105,
        EBUSY: 10,
        EEXIST: 20,
        EXDEV: 75,
        ENODEV: 43,
        ENOTDIR: 54,
        EISDIR: 31,
        EINVAL: 28,
        ENFILE: 41,
        EMFILE: 33,
        ENOTTY: 59,
        ETXTBSY: 74,
        EFBIG: 22,
        ENOSPC: 51,
        ESPIPE: 70,
        EROFS: 69,
        EMLINK: 34,
        EPIPE: 64,
        EDOM: 18,
        ERANGE: 68,
        ENOMSG: 49,
        EIDRM: 24,
        ECHRNG: 106,
        EL2NSYNC: 156,
        EL3HLT: 107,
        EL3RST: 108,
        ELNRNG: 109,
        EUNATCH: 110,
        ENOCSI: 111,
        EL2HLT: 112,
        EDEADLK: 16,
        ENOLCK: 46,
        EBADE: 113,
        EBADR: 114,
        EXFULL: 115,
        ENOANO: 104,
        EBADRQC: 103,
        EBADSLT: 102,
        EDEADLOCK: 16,
        EBFONT: 101,
        ENOSTR: 100,
        ENODATA: 116,
        ETIME: 117,
        ENOSR: 118,
        ENONET: 119,
        ENOPKG: 120,
        EREMOTE: 121,
        ENOLINK: 47,
        EADV: 122,
        ESRMNT: 123,
        ECOMM: 124,
        EPROTO: 65,
        EMULTIHOP: 36,
        EDOTDOT: 125,
        EBADMSG: 9,
        ENOTUNIQ: 126,
        EBADFD: 127,
        EREMCHG: 128,
        ELIBACC: 129,
        ELIBBAD: 130,
        ELIBSCN: 131,
        ELIBMAX: 132,
        ELIBEXEC: 133,
        ENOSYS: 52,
        ENOTEMPTY: 55,
        ENAMETOOLONG: 37,
        ELOOP: 32,
        EOPNOTSUPP: 138,
        EPFNOSUPPORT: 139,
        ECONNRESET: 15,
        ENOBUFS: 42,
        EAFNOSUPPORT: 5,
        EPROTOTYPE: 67,
        ENOTSOCK: 57,
        ENOPROTOOPT: 50,
        ESHUTDOWN: 140,
        ECONNREFUSED: 14,
        EADDRINUSE: 3,
        ECONNABORTED: 13,
        ENETUNREACH: 40,
        ENETDOWN: 38,
        ETIMEDOUT: 73,
        EHOSTDOWN: 142,
        EHOSTUNREACH: 23,
        EINPROGRESS: 26,
        EALREADY: 7,
        EDESTADDRREQ: 17,
        EMSGSIZE: 35,
        EPROTONOSUPPORT: 66,
        ESOCKTNOSUPPORT: 137,
        EADDRNOTAVAIL: 4,
        ENETRESET: 39,
        EISCONN: 30,
        ENOTCONN: 53,
        ETOOMANYREFS: 141,
        EUSERS: 136,
        EDQUOT: 19,
        ESTALE: 72,
        ENOTSUP: 138,
        ENOMEDIUM: 148,
        EILSEQ: 25,
        EOVERFLOW: 61,
        ECANCELED: 11,
        ENOTRECOVERABLE: 56,
        EOWNERDEAD: 62,
        ESTRPIPE: 135
      };
      var ue = {
        isWindows: false,
        staticInit: function () {
          ue.isWindows = !!process.platform.match(/^win/);
          var e = {
            fs: Ie.constants
          };
          if (e.fs) {
            e = e.fs;
          }
          ue.flagsForNodeMap = {
            1024: e.O_APPEND,
            64: e.O_CREAT,
            128: e.O_EXCL,
            256: e.O_NOCTTY,
            0: e.O_RDONLY,
            2: e.O_RDWR,
            4096: e.O_SYNC,
            512: e.O_TRUNC,
            1: e.O_WRONLY
          };
        },
        bufferFrom: function (e) {
          if (Buffer.alloc) {
            return Buffer.from(e);
          } else {
            return new Buffer(e);
          }
        },
        convertNodeCode: function (e) {
          var t = e.code;
          return ce[t];
        },
        mount: function (e) {
          return ue.createNode(null, '/', ue.getMode(e.opts.root), 0);
        },
        createNode: function (e, t, n, r) {
          if (!ge.isDir(n) && !ge.isFile(n) && !ge.isLink(n)) {
            throw new ge.ErrnoError(28);
          }
          var o = ge.createNode(e, t, n);
          o.node_ops = ue.node_ops;
          o.stream_ops = ue.stream_ops;
          return o;
        },
        getMode: function (e) {
          var t;
          try {
            t = Ie.lstatSync(e);
            if (ue.isWindows) {
              t.mode = t.mode | (t.mode & 292) >> 2;
            }
          } catch (e) {
            if (!e.code) {
              throw e;
            }
            throw new ge.ErrnoError(ue.convertNodeCode(e));
          }
          return t.mode;
        },
        realPath: function (e) {
          var t = [];
          while (e.parent !== e) {
            t.push(e.name);
            e = e.parent;
          }
          t.push(e.mount.opts.root);
          t.reverse();
          return oe.join.apply(null, t);
        },
        flagsForNode: function (e) {
          e &= -2097153;
          e &= -2049;
          e &= -32769;
          e &= -524289;
          var t = 0;
          for (var n in ue.flagsForNodeMap) {
            if (e & n) {
              t |= ue.flagsForNodeMap[n];
              e ^= n;
            }
          }
          if (e) {
            throw new ge.ErrnoError(28);
          }
          return t;
        },
        node_ops: {
          getattr: function (e) {
            var t;
            var n = ue.realPath(e);
            try {
              t = Ie.lstatSync(n);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
            if (ue.isWindows && !t.blksize) {
              t.blksize = 4096;
            }
            if (ue.isWindows && !t.blocks) {
              t.blocks = (t.size + t.blksize - 1) / t.blksize | 0;
            }
            return {
              dev: t.dev,
              ino: t.ino,
              mode: t.mode,
              nlink: t.nlink,
              uid: t.uid,
              gid: t.gid,
              rdev: t.rdev,
              size: t.size,
              atime: t.atime,
              mtime: t.mtime,
              ctime: t.ctime,
              blksize: t.blksize,
              blocks: t.blocks
            };
          },
          setattr: function (e, t) {
            var n = ue.realPath(e);
            try {
              if (t.mode !== undefined) {
                Ie.chmodSync(n, t.mode);
                e.mode = t.mode;
              }
              if (t.timestamp !== undefined) {
                var r = new Date(t.timestamp);
                Ie.utimesSync(n, r, r);
              }
              if (t.size !== undefined) {
                Ie.truncateSync(n, t.size);
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          lookup: function (e, t) {
            var n = oe.join2(ue.realPath(e), t);
            var r = ue.getMode(n);
            return ue.createNode(e, t, r);
          },
          mknod: function (e, t, n, r) {
            var o = ue.createNode(e, t, n, r);
            var s = ue.realPath(o);
            try {
              if (ge.isDir(o.mode)) {
                Ie.mkdirSync(s, o.mode);
              } else {
                Ie.writeFileSync(s, '', {
                  mode: o.mode
                });
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
            return o;
          },
          rename: function (e, t, n) {
            var r = ue.realPath(e);
            var o = oe.join2(ue.realPath(t), n);
            try {
              Ie.renameSync(r, o);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
            e.name = n;
          },
          unlink: function (e, t) {
            var n = oe.join2(ue.realPath(e), t);
            try {
              Ie.unlinkSync(n);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          rmdir: function (e, t) {
            var n = oe.join2(ue.realPath(e), t);
            try {
              Ie.rmdirSync(n);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          readdir: function (e) {
            var t = ue.realPath(e);
            try {
              return Ie.readdirSync(t);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          symlink: function (e, t, n) {
            var r = oe.join2(ue.realPath(e), t);
            try {
              Ie.symlinkSync(n, r);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          readlink: function (e) {
            var t = ue.realPath(e);
            try {
              t = Ie.readlinkSync(t);
              return t = Ee.relative(Ee.resolve(e.mount.opts.root), t);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          }
        },
        stream_ops: {
          open: function (e) {
            var t = ue.realPath(e.node);
            try {
              if (ge.isFile(e.node.mode)) {
                e.nfd = Ie.openSync(t, ue.flagsForNode(e.flags));
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          close: function (e) {
            try {
              if (ge.isFile(e.node.mode) && e.nfd) {
                Ie.closeSync(e.nfd);
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          read: function (e, t, n, r, o) {
            if (r === 0) {
              return 0;
            }
            try {
              return Ie.readSync(e.nfd, ue.bufferFrom(t.buffer), n, r, o);
            } catch (e) {
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          write: function (e, t, n, r, o) {
            try {
              return Ie.writeSync(e.nfd, ue.bufferFrom(t.buffer), n, r, o);
            } catch (e) {
              throw new ge.ErrnoError(ue.convertNodeCode(e));
            }
          },
          llseek: function (e, t, n) {
            var r = t;
            if (n === 1) {
              r += e.position;
            } else {
              if (n === 2 && ge.isFile(e.node.mode)) {
                try {
                  r += Ie.fstatSync(e.nfd).size;
                } catch (e) {
                  throw new ge.ErrnoError(ue.convertNodeCode(e));
                }
              }
            }
            if (r < 0) {
              throw new ge.ErrnoError(28);
            }
            return r;
          },
          mmap: function (e, t, n, r, o, s) {
            if (t !== 0) {
              throw new ge.ErrnoError(28);
            }
            if (!ge.isFile(e.node.mode)) {
              throw new ge.ErrnoError(43);
            }
            var a = ae(n);
            ue.stream_ops.read(e, b, a, n, r);
            return {
              ptr: a,
              allocated: true
            };
          },
          msync: function (e, t, n, r, o) {
            if (!ge.isFile(e.node.mode)) {
              throw new ge.ErrnoError(43);
            }
            if (!(o & 2)) {
              ue.stream_ops.write(e, t, 0, r, n, false);
            }
            return 0;
          }
        }
      };
      var le = {
        lookupPath: function (e) {
          return {
            path: e,
            node: {
              mode: ue.getMode(e)
            }
          };
        },
        createStandardStreams: function () {
          ge.streams[0] = {
            fd: 0,
            nfd: 0,
            position: 0,
            path: '',
            flags: 0,
            tty: true,
            seekable: false
          };
          for (var e = 1; e < 3; e++) {
            ge.streams[e] = {
              fd: e,
              nfd: e,
              position: 0,
              path: '',
              flags: 577,
              tty: true,
              seekable: false
            };
          }
        },
        cwd: function () {
          return process.cwd();
        },
        chdir: function () {
          process.chdir.apply(undefined, arguments);
        },
        mknod: function (e, t) {
          if (ge.isDir(e)) {
            Ie.mkdirSync(e, t);
          } else {
            Ie.writeFileSync(e, '', {
              mode: t
            });
          }
        },
        mkdir: function () {
          Ie.mkdirSync.apply(undefined, arguments);
        },
        symlink: function () {
          Ie.symlinkSync.apply(undefined, arguments);
        },
        rename: function () {
          Ie.renameSync.apply(undefined, arguments);
        },
        rmdir: function () {
          Ie.rmdirSync.apply(undefined, arguments);
        },
        readdir: function () {
          Ie.readdirSync.apply(undefined, arguments);
        },
        unlink: function () {
          Ie.unlinkSync.apply(undefined, arguments);
        },
        readlink: function () {
          return Ie.readlinkSync.apply(undefined, arguments);
        },
        stat: function () {
          return Ie.statSync.apply(undefined, arguments);
        },
        lstat: function () {
          return Ie.lstatSync.apply(undefined, arguments);
        },
        chmod: function () {
          Ie.chmodSync.apply(undefined, arguments);
        },
        fchmod: function () {
          Ie.fchmodSync.apply(undefined, arguments);
        },
        chown: function () {
          Ie.chownSync.apply(undefined, arguments);
        },
        fchown: function () {
          Ie.fchownSync.apply(undefined, arguments);
        },
        truncate: function () {
          Ie.truncateSync.apply(undefined, arguments);
        },
        ftruncate: function (e, t) {
          if (t < 0) {
            throw new ge.ErrnoError(28);
          }
          Ie.ftruncateSync.apply(undefined, arguments);
        },
        utime: function () {
          Ie.utimesSync.apply(undefined, arguments);
        },
        open: function (e, t, n, r) {
          if (typeof t == 'string') {
            t = we.modeStringToFlags(t);
          }
          var o = Ie.openSync(e, ue.flagsForNode(t), n);
          var s = r ?? ge.nextfd(o);
          var a = {
            fd: s,
            nfd: o,
            position: 0,
            path: e,
            flags: t,
            seekable: true
          };
          ge.streams[s] = a;
          return a;
        },
        close: function (e) {
          if (!e.stream_ops) {
            Ie.closeSync(e.nfd);
          }
          ge.closeStream(e.fd);
        },
        llseek: function (e, t, n) {
          if (e.stream_ops) {
            return we.llseek(e, t, n);
          }
          var r = t;
          if (n === 1) {
            r += e.position;
          } else {
            if (n === 2) {
              r += Ie.fstatSync(e.nfd).size;
            } else {
              if (n !== 0) {
                throw new ge.ErrnoError(ce.EINVAL);
              }
            }
          }
          if (r < 0) {
            throw new ge.ErrnoError(ce.EINVAL);
          }
          e.position = r;
          return r;
        },
        read: function (e, t, n, r, o) {
          if (e.stream_ops) {
            return we.read(e, t, n, r, o);
          }
          var s = o !== undefined;
          if (!s && e.seekable) {
            o = e.position;
          }
          var a = Ie.readSync(e.nfd, ue.bufferFrom(t.buffer), n, r, o);
          if (!s) {
            e.position += a;
          }
          return a;
        },
        write: function (e, t, n, r, o) {
          if (e.stream_ops) {
            return we.write(e, t, n, r, o);
          }
          if (e.flags & 1024) {
            ge.llseek(e, 0, 2);
          }
          var s = o !== undefined;
          if (!s && e.seekable) {
            o = e.position;
          }
          var a = Ie.writeSync(e.nfd, ue.bufferFrom(t.buffer), n, r, o);
          if (!s) {
            e.position += a;
          }
          return a;
        },
        allocate: function () {
          throw new ge.ErrnoError(ce.EOPNOTSUPP);
        },
        mmap: function (e, t, n, r, o, s) {
          if (e.stream_ops) {
            return we.mmap(e, t, n, r, o, s);
          }
          if (t !== 0) {
            throw new ge.ErrnoError(28);
          }
          var a = ae(n);
          ge.read(e, b, a, n, r);
          return {
            ptr: a,
            allocated: true
          };
        },
        msync: function (e, t, n, r, o) {
          if (e.stream_ops) {
            return we.msync(e, t, n, r, o);
          } else {
            if (!(o & 2)) {
              ge.write(e, t, 0, r, n);
            }
            return 0;
          }
        },
        munmap: function () {
          return 0;
        },
        ioctl: function () {
          throw new ge.ErrnoError(ce.ENOTTY);
        }
      };
      var ge = {
        root: null,
        mounts: [],
        devices: {},
        streams: [],
        nextInode: 1,
        nameTable: null,
        currentPath: '/',
        initialized: false,
        ignorePermissions: true,
        trackingDelegate: {},
        tracking: {
          openFlags: {
            READ: 1,
            WRITE: 2
          }
        },
        ErrnoError: null,
        genericErrors: {},
        filesystems: null,
        syncFSRequests: 0,
        lookupPath: function (e, t) {
          t = t || {};
          if (!(e = ie.resolve(ge.cwd(), e))) {
            return {
              path: '',
              node: null
            };
          }
          var n = {
            follow_mount: true,
            recurse_count: 0
          };
          for (var r in n) {
            if (t[r] === undefined) {
              t[r] = n[r];
            }
          }
          if (t.recurse_count > 8) {
            throw new ge.ErrnoError(32);
          }
          for (var o = oe.normalizeArray(e.split('/').filter(function (e) {
              return !!e;
            }), false), s = ge.root, a = '/', A = 0; A < o.length; A++) {
            var c = A === o.length - 1;
            if (c && t.parent) {
              break;
            }
            s = ge.lookupNode(s, o[A]);
            a = oe.join2(a, o[A]);
            if (ge.isMountpoint(s) && (!c || c && t.follow_mount)) {
              s = s.mounted.root;
            }
            if (!c || t.follow) {
              var u = 0;
              while (ge.isLink(s.mode)) {
                var l = ge.readlink(a);
                a = ie.resolve(oe.dirname(a), l);
                s = ge.lookupPath(a, {
                  recurse_count: t.recurse_count
                }).node;
                if (u++ > 40) {
                  throw new ge.ErrnoError(32);
                }
              }
            }
          }
          return {
            path: a,
            node: s
          };
        },
        getPath: function (e) {
          var t;
          while (true) {
            if (ge.isRoot(e)) {
              var n = e.mount.mountpoint;
              if (t) {
                if (n[n.length - 1] !== '/') {
                  return n + '/' + t;
                } else {
                  return n + t;
                }
              } else {
                return n;
              }
            }
            t = t ? e.name + '/' + t : e.name;
            e = e.parent;
          }
        },
        hashName: function (e, t) {
          var n = 0;
          for (var r = 0; r < t.length; r++) {
            n = (n << 5) - n + t.charCodeAt(r) | 0;
          }
          return (e + n >>> 0) % ge.nameTable.length;
        },
        hashAddNode: function (e) {
          var t = ge.hashName(e.parent.id, e.name);
          e.name_next = ge.nameTable[t];
          ge.nameTable[t] = e;
        },
        hashRemoveNode: function (e) {
          var t = ge.hashName(e.parent.id, e.name);
          if (ge.nameTable[t] === e) {
            ge.nameTable[t] = e.name_next;
          } else {
            for (var n = ge.nameTable[t]; n;) {
              if (n.name_next === e) {
                n.name_next = e.name_next;
                break;
              }
              n = n.name_next;
            }
          }
        },
        lookupNode: function (e, t) {
          var n = ge.mayLookup(e);
          if (n) {
            throw new ge.ErrnoError(n, e);
          }
          var r = ge.hashName(e.id, t);
          for (var o = ge.nameTable[r]; o; o = o.name_next) {
            var s = o.name;
            if (o.parent.id === e.id && s === t) {
              return o;
            }
          }
          return ge.lookup(e, t);
        },
        createNode: function (e, t, n, r) {
          var o = new ge.FSNode(e, t, n, r);
          ge.hashAddNode(o);
          return o;
        },
        destroyNode: function (e) {
          ge.hashRemoveNode(e);
        },
        isRoot: function (e) {
          return e === e.parent;
        },
        isMountpoint: function (e) {
          return !!e.mounted;
        },
        isFile: function (e) {
          return (e & 61440) == 32768;
        },
        isDir: function (e) {
          return (e & 61440) == 16384;
        },
        isLink: function (e) {
          return (e & 61440) == 40960;
        },
        isChrdev: function (e) {
          return (e & 61440) == 8192;
        },
        isBlkdev: function (e) {
          return (e & 61440) == 24576;
        },
        isFIFO: function (e) {
          return (e & 61440) == 4096;
        },
        isSocket: function (e) {
          return !(~e & 49152);
        },
        flagModes: {
          r: 0,
          'r+': 2,
          w: 577,
          'w+': 578,
          a: 1089,
          'a+': 1090
        },
        modeStringToFlags: function (e) {
          var t = ge.flagModes[e];
          if (t === undefined) {
            throw new Error(`Unknown file open mode: ${e}`);
          }
          return t;
        },
        flagsToPermissionString: function (e) {
          var t = ['r', 'w', 'rw'][e & 3];
          if (e & 512) {
            t += 'w';
          }
          return t;
        },
        nodePermissions: function (e, t) {
          if (ge.ignorePermissions || (!t.includes('r') || e.mode & 292) && (!t.includes('w') || e.mode & 146) && (!t.includes('x') || e.mode & 73)) {
            return 0;
          } else {
            return 2;
          }
        },
        mayLookup: function (e) {
          var t = ge.nodePermissions(e, 'x');
          return t || (e.node_ops.lookup ? 0 : 2);
        },
        mayCreate: function (e, t) {
          try {
            ge.lookupNode(e, t);
            return 20;
          } catch (e) {}
          return ge.nodePermissions(e, 'wx');
        },
        mayDelete: function (e, t, n) {
          var r;
          try {
            r = ge.lookupNode(e, t);
          } catch (e) {
            return e.errno;
          }
          var o = ge.nodePermissions(e, 'wx');
          if (o) {
            return o;
          }
          if (n) {
            if (!ge.isDir(r.mode)) {
              return 54;
            }
            if (ge.isRoot(r) || ge.getPath(r) === ge.cwd()) {
              return 10;
            }
          } else {
            if (ge.isDir(r.mode)) {
              return 31;
            }
          }
          return 0;
        },
        mayOpen: function (e, t) {
          if (e) {
            if (ge.isLink(e.mode)) {
              return 32;
            } else {
              if (ge.isDir(e.mode) && (ge.flagsToPermissionString(t) !== 'r' || t & 512)) {
                return 31;
              } else {
                return ge.nodePermissions(e, ge.flagsToPermissionString(t));
              }
            }
          } else {
            return 44;
          }
        },
        MAX_OPEN_FDS: 4096,
        nextfd: function (e, t) {
          e = e || 0;
          t = t || ge.MAX_OPEN_FDS;
          for (var n = e; n <= t; n++) {
            if (!ge.streams[n]) {
              return n;
            }
          }
          throw new ge.ErrnoError(33);
        },
        getStream: function (e) {
          return ge.streams[e];
        },
        createStream: function (e, t, n) {
          if (!ge.FSStream) {
            ge.FSStream = function () {};
            ge.FSStream.prototype = {
              object: {
                get: function () {
                  return this.node;
                },
                set: function (e) {
                  this.node = e;
                }
              },
              isRead: {
                get: function () {
                  return (this.flags & 2097155) != 1;
                }
              },
              isWrite: {
                get: function () {
                  return !!(this.flags & 2097155);
                }
              },
              isAppend: {
                get: function () {
                  return this.flags & 1024;
                }
              }
            };
          }
          var r = new ge.FSStream();
          for (var o in e) {
            r[o] = e[o];
          }
          e = r;
          var s = ge.nextfd(t, n);
          e.fd = s;
          ge.streams[s] = e;
          return e;
        },
        closeStream: function (e) {
          ge.streams[e] = null;
        },
        chrdev_stream_ops: {
          open: function (e) {
            var t = ge.getDevice(e.node.rdev);
            e.stream_ops = t.stream_ops;
            if (e.stream_ops.open) {
              e.stream_ops.open(e);
            }
          },
          llseek: function () {
            throw new ge.ErrnoError(70);
          }
        },
        major: function (e) {
          return e >> 8;
        },
        minor: function (e) {
          return e & 255;
        },
        makedev: function (e, t) {
          return e << 8 | t;
        },
        registerDevice: function (e, t) {
          ge.devices[e] = {
            stream_ops: t
          };
        },
        getDevice: function (e) {
          return ge.devices[e];
        },
        getMounts: function (e) {
          var t = [];
          for (var n = [e]; n.length;) {
            var r = n.pop();
            t.push(r);
            n.push.apply(n, r.mounts);
          }
          return t;
        },
        syncfs: function (e, t) {
          if (typeof e == 'function') {
            t = e;
            e = false;
          }
          ge.syncFSRequests++;
          if (ge.syncFSRequests > 1) {
            I(`warning: ${ge.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);
          }
          var n = ge.getMounts(ge.root.mount);
          var r = 0;
          function o(e) {
            ge.syncFSRequests--;
            return t(e);
          }
          function s(e) {
            if (e) {
              if (s.errored) {
                return undefined;
              } else {
                s.errored = true;
                return o(e);
              }
            }
            if (++r >= n.length) {
              o(null);
            }
          }
          n.forEach(function (t) {
            if (!t.type.syncfs) {
              return s(null);
            }
            t.type.syncfs(t, e, s);
          });
        },
        mount: function (e, t, n) {
          var r;
          var o = n === '/';
          var s = !n;
          if (o && ge.root) {
            throw new ge.ErrnoError(10);
          }
          if (!o && !s) {
            var a = ge.lookupPath(n, {
              follow_mount: false
            });
            n = a.path;
            r = a.node;
            if (ge.isMountpoint(r)) {
              throw new ge.ErrnoError(10);
            }
            if (!ge.isDir(r.mode)) {
              throw new ge.ErrnoError(54);
            }
          }
          var A = {
            type: e,
            opts: t,
            mountpoint: n,
            mounts: []
          };
          var c = e.mount(A);
          c.mount = A;
          A.root = c;
          if (o) {
            ge.root = c;
          } else {
            if (r) {
              r.mounted = A;
              if (r.mount) {
                r.mount.mounts.push(A);
              }
            }
          }
          return c;
        },
        unmount: function (e) {
          var t = ge.lookupPath(e, {
            follow_mount: false
          });
          if (!ge.isMountpoint(t.node)) {
            throw new ge.ErrnoError(28);
          }
          var n = t.node;
          var r = n.mounted;
          var o = ge.getMounts(r);
          Object.keys(ge.nameTable).forEach(function (e) {
            for (var t = ge.nameTable[e]; t;) {
              var n = t.name_next;
              if (o.includes(t.mount)) {
                ge.destroyNode(t);
              }
              t = n;
            }
          });
          n.mounted = null;
          var s = n.mount.mounts.indexOf(r);
          n.mount.mounts.splice(s, 1);
        },
        lookup: function (e, t) {
          return e.node_ops.lookup(e, t);
        },
        mknod: function (e, t, n) {
          var r = ge.lookupPath(e, {
            parent: true
          }).node;
          var o = oe.basename(e);
          if (!o || o === '.' || o === '..') {
            throw new ge.ErrnoError(28);
          }
          var s = ge.mayCreate(r, o);
          if (s) {
            throw new ge.ErrnoError(s);
          }
          if (!r.node_ops.mknod) {
            throw new ge.ErrnoError(63);
          }
          return r.node_ops.mknod(r, o, t, n);
        },
        create: function (e, t) {
          t = t !== undefined ? t : 438;
          t &= 4095;
          t |= 32768;
          return ge.mknod(e, t, 0);
        },
        mkdir: function (e, t) {
          t = t !== undefined ? t : 511;
          t &= 1023;
          t |= 16384;
          return ge.mknod(e, t, 0);
        },
        mkdirTree: function (e, t) {
          for (var n = e.split('/'), r = '', o = 0; o < n.length; ++o) {
            if (n[o]) {
              r += `/${n[o]}`;
              try {
                ge.mkdir(r, t);
              } catch (e) {
                if (e.errno != 20) {
                  throw e;
                }
              }
            }
          }
        },
        mkdev: function (e, t, n) {
          if (n === undefined) {
            n = t;
            t = 438;
          }
          t |= 8192;
          return ge.mknod(e, t, n);
        },
        symlink: function (e, t) {
          if (!ie.resolve(e)) {
            throw new ge.ErrnoError(44);
          }
          var n = ge.lookupPath(t, {
            parent: true
          }).node;
          if (!n) {
            throw new ge.ErrnoError(44);
          }
          var r = oe.basename(t);
          var o = ge.mayCreate(n, r);
          if (o) {
            throw new ge.ErrnoError(o);
          }
          if (!n.node_ops.symlink) {
            throw new ge.ErrnoError(63);
          }
          return n.node_ops.symlink(n, r, e);
        },
        rename: function (e, t) {
          var n;
          var r;
          var o = oe.dirname(e);
          var s = oe.dirname(t);
          var a = oe.basename(e);
          var A = oe.basename(t);
          n = ge.lookupPath(e, {
            parent: true
          }).node;
          r = ge.lookupPath(t, {
            parent: true
          }).node;
          if (!n || !r) {
            throw new ge.ErrnoError(44);
          }
          if (n.mount !== r.mount) {
            throw new ge.ErrnoError(75);
          }
          var c;
          var u = ge.lookupNode(n, a);
          var l = ie.relative(e, s);
          if (l.charAt(0) !== '.') {
            throw new ge.ErrnoError(28);
          }
          if ((l = ie.relative(t, o)).charAt(0) !== '.') {
            throw new ge.ErrnoError(55);
          }
          try {
            c = ge.lookupNode(r, A);
          } catch (e) {}
          if (u !== c) {
            var g = ge.isDir(u.mode);
            var d = ge.mayDelete(n, a, g);
            if (d) {
              throw new ge.ErrnoError(d);
            }
            if (d = c ? ge.mayDelete(r, A, g) : ge.mayCreate(r, A)) {
              throw new ge.ErrnoError(d);
            }
            if (!n.node_ops.rename) {
              throw new ge.ErrnoError(63);
            }
            if (ge.isMountpoint(u) || c && ge.isMountpoint(c)) {
              throw new ge.ErrnoError(10);
            }
            if (r !== n && (d = ge.nodePermissions(n, 'w'))) {
              throw new ge.ErrnoError(d);
            }
            try {
              if (ge.trackingDelegate.willMovePath) {
                ge.trackingDelegate.willMovePath(e, t);
              }
            } catch (n) {
              I(`FS.trackingDelegate['willMovePath']('${e}', '${t}') threw an exception: ${n.message}`);
            }
            ge.hashRemoveNode(u);
            try {
              n.node_ops.rename(u, r, A);
            } catch (e) {
              throw e;
            } finally {
              ge.hashAddNode(u);
            }
            try {
              if (ge.trackingDelegate.onMovePath) {
                ge.trackingDelegate.onMovePath(e, t);
              }
            } catch (n) {
              I(`FS.trackingDelegate['onMovePath']('${e}', '${t}') threw an exception: ${n.message}`);
            }
          }
        },
        rmdir: function (e) {
          var t = ge.lookupPath(e, {
            parent: true
          }).node;
          var n = oe.basename(e);
          var r = ge.lookupNode(t, n);
          var o = ge.mayDelete(t, n, true);
          if (o) {
            throw new ge.ErrnoError(o);
          }
          if (!t.node_ops.rmdir) {
            throw new ge.ErrnoError(63);
          }
          if (ge.isMountpoint(r)) {
            throw new ge.ErrnoError(10);
          }
          try {
            if (ge.trackingDelegate.willDeletePath) {
              ge.trackingDelegate.willDeletePath(e);
            }
          } catch (t) {
            I(`FS.trackingDelegate['willDeletePath']('${e}') threw an exception: ${t.message}`);
          }
          t.node_ops.rmdir(t, n);
          ge.destroyNode(r);
          try {
            if (ge.trackingDelegate.onDeletePath) {
              ge.trackingDelegate.onDeletePath(e);
            }
          } catch (t) {
            I(`FS.trackingDelegate['onDeletePath']('${e}') threw an exception: ${t.message}`);
          }
        },
        readdir: function (e) {
          var t = ge.lookupPath(e, {
            follow: true
          }).node;
          if (!t.node_ops.readdir) {
            throw new ge.ErrnoError(54);
          }
          return t.node_ops.readdir(t);
        },
        unlink: function (e) {
          var t = ge.lookupPath(e, {
            parent: true
          }).node;
          var n = oe.basename(e);
          var r = ge.lookupNode(t, n);
          var o = ge.mayDelete(t, n, false);
          if (o) {
            throw new ge.ErrnoError(o);
          }
          if (!t.node_ops.unlink) {
            throw new ge.ErrnoError(63);
          }
          if (ge.isMountpoint(r)) {
            throw new ge.ErrnoError(10);
          }
          try {
            if (ge.trackingDelegate.willDeletePath) {
              ge.trackingDelegate.willDeletePath(e);
            }
          } catch (t) {
            I(`FS.trackingDelegate['willDeletePath']('${e}') threw an exception: ${t.message}`);
          }
          t.node_ops.unlink(t, n);
          ge.destroyNode(r);
          try {
            if (ge.trackingDelegate.onDeletePath) {
              ge.trackingDelegate.onDeletePath(e);
            }
          } catch (t) {
            I(`FS.trackingDelegate['onDeletePath']('${e}') threw an exception: ${t.message}`);
          }
        },
        readlink: function (e) {
          var t = ge.lookupPath(e).node;
          if (!t) {
            throw new ge.ErrnoError(44);
          }
          if (!t.node_ops.readlink) {
            throw new ge.ErrnoError(28);
          }
          return ie.resolve(ge.getPath(t.parent), t.node_ops.readlink(t));
        },
        stat: function (e, t) {
          var n = ge.lookupPath(e, {
            follow: !t
          }).node;
          if (!n) {
            throw new ge.ErrnoError(44);
          }
          if (!n.node_ops.getattr) {
            throw new ge.ErrnoError(63);
          }
          return n.node_ops.getattr(n);
        },
        lstat: function (e) {
          return ge.stat(e, true);
        },
        chmod: function (e, t, n) {
          var r;
          if (!(r = typeof e == 'string' ? ge.lookupPath(e, {
            follow: !n
          }).node : e).node_ops.setattr) {
            throw new ge.ErrnoError(63);
          }
          r.node_ops.setattr(r, {
            mode: t & 4095 | r.mode & -4096,
            timestamp: Date.now()
          });
        },
        lchmod: function (e, t) {
          ge.chmod(e, t, true);
        },
        fchmod: function (e, t) {
          var n = ge.getStream(e);
          if (!n) {
            throw new ge.ErrnoError(8);
          }
          ge.chmod(n.node, t);
        },
        chown: function (e, t, n, r) {
          var o;
          if (!(o = typeof e == 'string' ? ge.lookupPath(e, {
            follow: !r
          }).node : e).node_ops.setattr) {
            throw new ge.ErrnoError(63);
          }
          o.node_ops.setattr(o, {
            timestamp: Date.now()
          });
        },
        lchown: function (e, t, n) {
          ge.chown(e, t, n, true);
        },
        fchown: function (e, t, n) {
          var r = ge.getStream(e);
          if (!r) {
            throw new ge.ErrnoError(8);
          }
          ge.chown(r.node, t, n);
        },
        truncate: function (e, t) {
          if (t < 0) {
            throw new ge.ErrnoError(28);
          }
          var n;
          if (!(n = typeof e == 'string' ? ge.lookupPath(e, {
            follow: true
          }).node : e).node_ops.setattr) {
            throw new ge.ErrnoError(63);
          }
          if (ge.isDir(n.mode)) {
            throw new ge.ErrnoError(31);
          }
          if (!ge.isFile(n.mode)) {
            throw new ge.ErrnoError(28);
          }
          var r = ge.nodePermissions(n, 'w');
          if (r) {
            throw new ge.ErrnoError(r);
          }
          n.node_ops.setattr(n, {
            size: t,
            timestamp: Date.now()
          });
        },
        ftruncate: function (e, t) {
          var n = ge.getStream(e);
          if (!n) {
            throw new ge.ErrnoError(8);
          }
          if (!(n.flags & 2097155)) {
            throw new ge.ErrnoError(28);
          }
          ge.truncate(n.node, t);
        },
        utime: function (e, t, n) {
          var r = ge.lookupPath(e, {
            follow: true
          }).node;
          r.node_ops.setattr(r, {
            timestamp: Math.max(t, n)
          });
        },
        open: function (e, t, n, r, o) {
          if (e === '') {
            throw new ge.ErrnoError(44);
          }
          var a;
          n = n === undefined ? 438 : n;
          n = (t = typeof t == 'string' ? ge.modeStringToFlags(t) : t) & 64 ? n & 4095 | 32768 : 0;
          if (typeof e == 'object') {
            a = e;
          } else {
            e = oe.normalize(e);
            try {
              a = ge.lookupPath(e, {
                follow: !(t & 131072)
              }).node;
            } catch (e) {}
          }
          var A = false;
          if (t & 64) {
            if (a) {
              if (t & 128) {
                throw new ge.ErrnoError(20);
              }
            } else {
              a = ge.mknod(e, n, 0);
              A = true;
            }
          }
          if (!a) {
            throw new ge.ErrnoError(44);
          }
          if (ge.isChrdev(a.mode)) {
            t &= -513;
          }
          if (t & 65536 && !ge.isDir(a.mode)) {
            throw new ge.ErrnoError(54);
          }
          if (!A) {
            var c = ge.mayOpen(a, t);
            if (c) {
              throw new ge.ErrnoError(c);
            }
          }
          if (t & 512) {
            ge.truncate(a, 0);
          }
          t &= -131713;
          var u = ge.createStream({
            node: a,
            path: ge.getPath(a),
            flags: t,
            seekable: true,
            position: 0,
            stream_ops: a.stream_ops,
            ungotten: [],
            error: false
          }, r, o);
          if (u.stream_ops.open) {
            u.stream_ops.open(u);
          }
          if (!!s.logReadFiles && !(t & 1)) {
            if (!ge.readFiles) {
              ge.readFiles = {};
            }
            if (!(e in ge.readFiles)) {
              ge.readFiles[e] = 1;
              I(`FS.trackingDelegate error on read file: ${e}`);
            }
          }
          try {
            if (ge.trackingDelegate.onOpenFile) {
              var l = 0;
              if ((t & 2097155) != 1) {
                l |= ge.tracking.openFlags.READ;
              }
              if (t & 2097155) {
                l |= ge.tracking.openFlags.WRITE;
              }
              ge.trackingDelegate.onOpenFile(e, l);
            }
          } catch (t) {
            I(`FS.trackingDelegate['onOpenFile']('${e}', flags) threw an exception: ${t.message}`);
          }
          return u;
        },
        close: function (e) {
          if (ge.isClosed(e)) {
            throw new ge.ErrnoError(8);
          }
          if (e.getdents) {
            e.getdents = null;
          }
          try {
            if (e.stream_ops.close) {
              e.stream_ops.close(e);
            }
          } catch (e) {
            throw e;
          } finally {
            ge.closeStream(e.fd);
          }
          e.fd = null;
        },
        isClosed: function (e) {
          return e.fd === null;
        },
        llseek: function (e, t, n) {
          if (ge.isClosed(e)) {
            throw new ge.ErrnoError(8);
          }
          if (!e.seekable || !e.stream_ops.llseek) {
            throw new ge.ErrnoError(70);
          }
          if (n != 0 && n != 1 && n != 2) {
            throw new ge.ErrnoError(28);
          }
          e.position = e.stream_ops.llseek(e, t, n);
          e.ungotten = [];
          return e.position;
        },
        read: function (e, t, n, r, o) {
          if (r < 0 || o < 0) {
            throw new ge.ErrnoError(28);
          }
          if (ge.isClosed(e)) {
            throw new ge.ErrnoError(8);
          }
          if ((e.flags & 2097155) == 1) {
            throw new ge.ErrnoError(8);
          }
          if (ge.isDir(e.node.mode)) {
            throw new ge.ErrnoError(31);
          }
          if (!e.stream_ops.read) {
            throw new ge.ErrnoError(28);
          }
          var s = o !== undefined;
          if (s) {
            if (!e.seekable) {
              throw new ge.ErrnoError(70);
            }
          } else {
            o = e.position;
          }
          var a = e.stream_ops.read(e, t, n, r, o);
          if (!s) {
            e.position += a;
          }
          return a;
        },
        write: function (e, t, n, r, o, s) {
          if (r < 0 || o < 0) {
            throw new ge.ErrnoError(28);
          }
          if (ge.isClosed(e)) {
            throw new ge.ErrnoError(8);
          }
          if (!(e.flags & 2097155)) {
            throw new ge.ErrnoError(8);
          }
          if (ge.isDir(e.node.mode)) {
            throw new ge.ErrnoError(31);
          }
          if (!e.stream_ops.write) {
            throw new ge.ErrnoError(28);
          }
          if (e.seekable && e.flags & 1024) {
            ge.llseek(e, 0, 2);
          }
          var a = o !== undefined;
          if (a) {
            if (!e.seekable) {
              throw new ge.ErrnoError(70);
            }
          } else {
            o = e.position;
          }
          var A = e.stream_ops.write(e, t, n, r, o, s);
          if (!a) {
            e.position += A;
          }
          try {
            if (e.path && ge.trackingDelegate.onWriteToFile) {
              ge.trackingDelegate.onWriteToFile(e.path);
            }
          } catch (t) {
            I(`FS.trackingDelegate['onWriteToFile']('${e.path}') threw an exception: ${t.message}`);
          }
          return A;
        },
        allocate: function (e, t, n) {
          if (ge.isClosed(e)) {
            throw new ge.ErrnoError(8);
          }
          if (t < 0 || n <= 0) {
            throw new ge.ErrnoError(28);
          }
          if (!(e.flags & 2097155)) {
            throw new ge.ErrnoError(8);
          }
          if (!ge.isFile(e.node.mode) && !ge.isDir(e.node.mode)) {
            throw new ge.ErrnoError(43);
          }
          if (!e.stream_ops.allocate) {
            throw new ge.ErrnoError(138);
          }
          e.stream_ops.allocate(e, t, n);
        },
        mmap: function (e, t, n, r, o, s) {
          if (o & 2 && !(s & 2) && (e.flags & 2097155) != 2) {
            throw new ge.ErrnoError(2);
          }
          if ((e.flags & 2097155) == 1) {
            throw new ge.ErrnoError(2);
          }
          if (!e.stream_ops.mmap) {
            throw new ge.ErrnoError(43);
          }
          return e.stream_ops.mmap(e, t, n, r, o, s);
        },
        msync: function (e, t, n, r, o) {
          if (e && e.stream_ops.msync) {
            return e.stream_ops.msync(e, t, n, r, o);
          } else {
            return 0;
          }
        },
        munmap: function (e) {
          return 0;
        },
        ioctl: function (e, t, n) {
          if (!e.stream_ops.ioctl) {
            throw new ge.ErrnoError(59);
          }
          return e.stream_ops.ioctl(e, t, n);
        },
        readFile: function (e, t) {
          (t = t || {}).flags = t.flags || 0;
          t.encoding = t.encoding || 'binary';
          if (t.encoding !== 'utf8' && t.encoding !== 'binary') {
            throw new Error(`Invalid encoding type "${t.encoding}"`);
          }
          var n;
          var r = ge.open(e, t.flags);
          var o = ge.stat(e).size;
          var s = new Uint8Array(o);
          ge.read(r, s, 0, o, 0);
          if (t.encoding === 'utf8') {
            n = k(s, 0);
          } else {
            if (t.encoding === 'binary') {
              n = s;
            }
          }
          ge.close(r);
          return n;
        },
        writeFile: function (e, t, n) {
          (n = n || {}).flags = n.flags || 577;
          var r = ge.open(e, n.flags, n.mode);
          if (typeof t == 'string') {
            var o = new Uint8Array(M(t) + 1);
            var s = P(t, o, 0, o.length);
            ge.write(r, o, 0, s, undefined, n.canOwn);
          } else {
            if (!ArrayBuffer.isView(t)) {
              throw new Error('Unsupported data type');
            }
            ge.write(r, t, 0, t.byteLength, undefined, n.canOwn);
          }
          ge.close(r);
        },
        cwd: function () {
          return ge.currentPath;
        },
        chdir: function (e) {
          var t = ge.lookupPath(e, {
            follow: true
          });
          if (t.node === null) {
            throw new ge.ErrnoError(44);
          }
          if (!ge.isDir(t.node.mode)) {
            throw new ge.ErrnoError(54);
          }
          var n = ge.nodePermissions(t.node, 'x');
          if (n) {
            throw new ge.ErrnoError(n);
          }
          ge.currentPath = t.path;
        },
        createDefaultDirectories: function () {
          ge.mkdir('/tmp');
          ge.mkdir('/home');
          ge.mkdir('/home/web_user');
        },
        createDefaultDevices: function () {
          ge.mkdir('/dev');
          ge.registerDevice(ge.makedev(1, 3), {
            read: function () {
              return 0;
            },
            write: function (e, t, n, r, o) {
              return r;
            }
          });
          ge.mkdev('/dev/null', ge.makedev(1, 3));
          se.register(ge.makedev(5, 0), se.default_tty_ops);
          se.register(ge.makedev(6, 0), se.default_tty1_ops);
          ge.mkdev('/dev/tty', ge.makedev(5, 0));
          ge.mkdev('/dev/tty1', ge.makedev(6, 0));
          var e = function () {
            if (typeof crypto == 'object' && typeof crypto.getRandomValues == 'function') {
              var e = new Uint8Array(1);
              return function () {
                crypto.getRandomValues(e);
                return e[0];
              };
            }
            try {
              var t = require(76982);
              return function () {
                return t.randomBytes(1)[0];
              };
            } catch (e) {}
            return function () {
              z('randomDevice');
            };
          }();
          ge.createDevice('/dev', 'random', e);
          ge.createDevice('/dev', 'urandom', e);
          ge.mkdir('/dev/shm');
          ge.mkdir('/dev/shm/tmp');
        },
        createSpecialDirectories: function () {
          ge.mkdir('/proc');
          var e = ge.mkdir('/proc/self');
          ge.mkdir('/proc/self/fd');
          ge.mount({
            mount: function () {
              var t = ge.createNode(e, 'fd', 16895, 73);
              t.node_ops = {
                lookup: function (e, t) {
                  var n = +t;
                  var r = ge.getStream(n);
                  if (!r) {
                    throw new ge.ErrnoError(8);
                  }
                  var o = {
                    parent: null,
                    mount: {
                      mountpoint: 'fake'
                    },
                    node_ops: {
                      readlink: function () {
                        return r.path;
                      }
                    }
                  };
                  o.parent = o;
                  return o;
                }
              };
              return t;
            }
          }, {}, '/proc/self/fd');
        },
        createStandardStreams: function () {
          if (s.stdin) {
            ge.createDevice('/dev', 'stdin', s.stdin);
          } else {
            ge.symlink('/dev/tty', '/dev/stdin');
          }
          if (s.stdout) {
            ge.createDevice('/dev', 'stdout', null, s.stdout);
          } else {
            ge.symlink('/dev/tty', '/dev/stdout');
          }
          if (s.stderr) {
            ge.createDevice('/dev', 'stderr', null, s.stderr);
          } else {
            ge.symlink('/dev/tty1', '/dev/stderr');
          }
          ge.open('/dev/stdin', 0);
          ge.open('/dev/stdout', 1);
          ge.open('/dev/stderr', 1);
        },
        ensureErrnoError: function () {
          if (!ge.ErrnoError) {
            ge.ErrnoError = function (e, t) {
              this.node = t;
              this.setErrno = function (e) {
                this.errno = e;
              };
              this.setErrno(e);
              this.message = 'FS error';
            };
            ge.ErrnoError.prototype = new Error();
            ge.ErrnoError.prototype.constructor = ge.ErrnoError;
            [44].forEach(function (e) {
              ge.genericErrors[e] = new ge.ErrnoError(e);
              ge.genericErrors[e].stack = '<generic error, no stack>';
            });
          }
        },
        staticInit: function () {
          ge.ensureErrnoError();
          ge.nameTable = new Array(4096);
          ge.mount(Ae, {}, '/');
          ge.createDefaultDirectories();
          ge.createDefaultDevices();
          ge.createSpecialDirectories();
          ge.filesystems = {
            MEMFS: Ae,
            NODEFS: ue
          };
        },
        init: function (e, t, n) {
          ge.init.initialized = true;
          ge.ensureErrnoError();
          s.stdin = e || s.stdin;
          s.stdout = t || s.stdout;
          s.stderr = n || s.stderr;
          ge.createStandardStreams();
        },
        quit: function () {
          ge.init.initialized = false;
          var e = s._fflush;
          if (e) {
            e(0);
          }
          for (var t = 0; t < ge.streams.length; t++) {
            var n = ge.streams[t];
            if (n) {
              ge.close(n);
            }
          }
        },
        getMode: function (e, t) {
          var n = 0;
          if (e) {
            n |= 365;
          }
          if (t) {
            n |= 146;
          }
          return n;
        },
        findObject: function (e, t) {
          var n = ge.analyzePath(e, t);
          if (n.exists) {
            return n.object;
          } else {
            return null;
          }
        },
        analyzePath: function (e, t) {
          try {
            e = (r = ge.lookupPath(e, {
              follow: !t
            })).path;
          } catch (e) {}
          var n = {
            isRoot: false,
            exists: false,
            error: 0,
            name: null,
            path: null,
            object: null,
            parentExists: false,
            parentPath: null,
            parentObject: null
          };
          try {
            var r = ge.lookupPath(e, {
              parent: true
            });
            n.parentExists = true;
            n.parentPath = r.path;
            n.parentObject = r.node;
            n.name = oe.basename(e);
            r = ge.lookupPath(e, {
              follow: !t
            });
            n.exists = true;
            n.path = r.path;
            n.object = r.node;
            n.name = r.node.name;
            n.isRoot = r.path === '/';
          } catch (e) {
            n.error = e.errno;
          }
          return n;
        },
        createPath: function (e, t, n, r) {
          e = typeof e == 'string' ? e : ge.getPath(e);
          for (var o = t.split('/').reverse(); o.length;) {
            var s = o.pop();
            if (s) {
              var a = oe.join2(e, s);
              try {
                ge.mkdir(a);
              } catch (e) {}
              e = a;
            }
          }
          return a;
        },
        createFile: function (e, t, n, r, o) {
          var s = oe.join2(typeof e == 'string' ? e : ge.getPath(e), t);
          var a = ge.getMode(r, o);
          return ge.create(s, a);
        },
        createDataFile: function (e, t, n, r, o, s) {
          var a = t ? oe.join2(typeof e == 'string' ? e : ge.getPath(e), t) : e;
          var A = ge.getMode(r, o);
          var c = ge.create(a, A);
          if (n) {
            if (typeof n == 'string') {
              var u = new Array(n.length);
              for (var l = 0, g = n.length; l < g; ++l) {
                u[l] = n.charCodeAt(l);
              }
              n = u;
            }
            ge.chmod(c, A | 146);
            var d = ge.open(c, 577);
            ge.write(d, n, 0, n.length, 0, s);
            ge.close(d);
            ge.chmod(c, A);
          }
          return c;
        },
        createDevice: function (e, t, n, r) {
          var o = oe.join2(typeof e == 'string' ? e : ge.getPath(e), t);
          var s = ge.getMode(!!n, !!r);
          if (!ge.createDevice.major) {
            ge.createDevice.major = 64;
          }
          var a = ge.makedev(ge.createDevice.major++, 0);
          ge.registerDevice(a, {
            open: function (e) {
              e.seekable = false;
            },
            close: function (e) {
              if (r && r.buffer && r.buffer.length) {
                r(10);
              }
            },
            read: function (e, t, r, o, s) {
              var a = 0;
              for (var A = 0; A < o; A++) {
                var c;
                try {
                  c = n();
                } catch (e) {
                  throw new ge.ErrnoError(29);
                }
                if (c === undefined && a === 0) {
                  throw new ge.ErrnoError(6);
                }
                if (c == null) {
                  break;
                }
                a++;
                t[r + A] = c;
              }
              if (a) {
                e.node.timestamp = Date.now();
              }
              return a;
            },
            write: function (e, t, n, o, s) {
              for (var a = 0; a < o; a++) {
                try {
                  r(t[n + a]);
                } catch (e) {
                  throw new ge.ErrnoError(29);
                }
              }
              if (o) {
                e.node.timestamp = Date.now();
              }
              return a;
            }
          });
          return ge.mkdev(o, s, a);
        },
        forceLoadFile: function (e) {
          if (e.isDevice || e.isFolder || e.link || e.contents) {
            return true;
          }
          if (typeof XMLHttpRequest != 'undefined') {
            throw new Error('Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.');
          }
          if (!c) {
            throw new Error('Cannot load without read() or XMLHttpRequest.');
          }
          try {
            e.contents = ve(c(e.url), true);
            e.usedBytes = e.contents.length;
          } catch (e) {
            throw new ge.ErrnoError(29);
          }
        },
        createLazyFile: function (e, t, n, r, o) {
          function s() {
            this.lengthKnown = false;
            this.chunks = [];
          }
          s.prototype.get = function (e) {
            if (!(e > this.length - 1) && !(e < 0)) {
              var t = e % this.chunkSize;
              var n = e / this.chunkSize | 0;
              return this.getter(n)[t];
            }
          };
          s.prototype.setDataGetter = function (e) {
            this.getter = e;
          };
          s.prototype.cacheLength = function () {
            var e = new XMLHttpRequest();
            e.open('HEAD', n, false);
            e.send(null);
            if ((!(e.status >= 200) || !(e.status < 300)) && e.status !== 304) {
              throw new Error(`Couldn't load ${n}. Status: ${e.status}`);
            }
            var t;
            var r = Number(e.getResponseHeader('Content-length'));
            var o = (t = e.getResponseHeader('Accept-Ranges')) && t === 'bytes';
            var s = (t = e.getResponseHeader('Content-Encoding')) && t === 'gzip';
            var a = 1048576;
            if (!o) {
              a = r;
            }
            var A = this;
            A.setDataGetter(function (e) {
              var t = e * a;
              var o = (e + 1) * a - 1;
              o = Math.min(o, r - 1);
              if (A.chunks[e] === undefined) {
                A.chunks[e] = function (e, t) {
                  if (e > t) {
                    throw new Error(`invalid range (${e}, ${t}) or no bytes requested!`);
                  }
                  if (t > r - 1) {
                    throw new Error(`only ${r} bytes available! programmer error!`);
                  }
                  var o = new XMLHttpRequest();
                  o.open('GET', n, false);
                  if (r !== a) {
                    o.setRequestHeader('Range', `bytes=${e}-${t}`);
                  }
                  if (typeof Uint8Array != 'undefined') {
                    o.responseType = 'arraybuffer';
                  }
                  if (o.overrideMimeType) {
                    o.overrideMimeType('text/plain; charset=x-user-defined');
                  }
                  o.send(null);
                  if ((!(o.status >= 200) || !(o.status < 300)) && o.status !== 304) {
                    throw new Error(`Couldn't load ${n}. Status: ${o.status}`);
                  }
                  if (o.response !== undefined) {
                    return new Uint8Array(o.response || []);
                  } else {
                    return ve(o.responseText || '', true);
                  }
                }(t, o);
              }
              if (A.chunks[e] === undefined) {
                throw new Error('doXHR failed!');
              }
              return A.chunks[e];
            });
            if (!!s || !r) {
              a = r = 1;
              r = this.getter(0).length;
              a = r;
              m('LazyFiles on gzip forces download of the whole file when length is accessed');
            }
            this._length = r;
            this._chunkSize = a;
            this.lengthKnown = true;
          };
          if (typeof XMLHttpRequest != 'undefined') {
            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          }
          var a = {
            isDevice: false,
            url: n
          };
          var A = ge.createFile(e, t, a, r, o);
          if (a.contents) {
            A.contents = a.contents;
          } else {
            if (a.url) {
              A.contents = null;
              A.url = a.url;
            }
          }
          Object.defineProperties(A, {
            usedBytes: {
              get: function () {
                return this.contents.length;
              }
            }
          });
          var c = {};
          Object.keys(A.stream_ops).forEach(function (e) {
            var t = A.stream_ops[e];
            c[e] = function () {
              ge.forceLoadFile(A);
              return t.apply(null, arguments);
            };
          });
          c.read = function (e, t, n, r, o) {
            ge.forceLoadFile(A);
            var s = e.node.contents;
            if (o >= s.length) {
              return 0;
            }
            var a = Math.min(s.length - o, r);
            if (s.slice) {
              for (var c = 0; c < a; c++) {
                t[n + c] = s[o + c];
              }
            } else {
              for (c = 0; c < a; c++) {
                t[n + c] = s.get(o + c);
              }
            }
            return a;
          };
          A.stream_ops = c;
          return A;
        },
        createPreloadedFile: function (e, t, n, r, o, a, A, c, u, l) {
          Browser.init();
          var g = t ? ie.resolve(oe.join2(e, t)) : e;
          function d(n) {
            function d(n) {
              if (l) {
                l();
              }
              if (!c) {
                ge.createDataFile(e, t, n, r, o, u);
              }
              if (a) {
                a();
              }
              J();
            }
            var h = false;
            s.preloadPlugins.forEach(function (e) {
              if (!h) {
                if (e.canHandle(g)) {
                  e.handle(n, g, d, function () {
                    if (A) {
                      A();
                    }
                    J();
                  });
                  h = true;
                }
              }
            });
            if (!h) {
              d(n);
            }
          }
          H();
          if (typeof n == 'string') {
            Browser.asyncLoad(n, function (e) {
              d(e);
            }, A);
          } else {
            d(n);
          }
        },
        indexedDB: function () {
          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        },
        DB_NAME: function () {
          return `EM_FS_${window.location.pathname}`;
        },
        DB_VERSION: 20,
        DB_STORE_NAME: 'FILE_DATA',
        saveFilesToDB: function (e, t, n) {
          t = t || function () {};
          n = n || function () {};
          var r = ge.indexedDB();
          try {
            var o = r.open(ge.DB_NAME(), ge.DB_VERSION);
          } catch (e) {
            return n(e);
          }
          o.onupgradeneeded = function () {
            m('creating db');
            o.result.createObjectStore(ge.DB_STORE_NAME);
          };
          o.onsuccess = function () {
            var r = o.result.transaction([ge.DB_STORE_NAME], 'readwrite');
            var s = r.objectStore(ge.DB_STORE_NAME);
            var a = 0;
            var A = 0;
            var c = e.length;
            function u() {
              if (A == 0) {
                t();
              } else {
                n();
              }
            }
            e.forEach(function (e) {
              var t = s.put(ge.analyzePath(e).object.contents, e);
              t.onsuccess = function () {
                if (++a + A == c) {
                  u();
                }
              };
              t.onerror = function () {
                A++;
                if (a + A == c) {
                  u();
                }
              };
            });
            r.onerror = n;
          };
          o.onerror = n;
        },
        loadFilesFromDB: function (e, t, n) {
          t = t || function () {};
          n = n || function () {};
          var r = ge.indexedDB();
          try {
            var o = r.open(ge.DB_NAME(), ge.DB_VERSION);
          } catch (e) {
            return n(e);
          }
          o.onupgradeneeded = n;
          o.onsuccess = function () {
            var r = o.result;
            try {
              var s = r.transaction([ge.DB_STORE_NAME], 'readonly');
            } catch (e) {
              n(e);
              return;
            }
            var a = s.objectStore(ge.DB_STORE_NAME);
            var A = 0;
            var c = 0;
            var u = e.length;
            function l() {
              if (c == 0) {
                t();
              } else {
                n();
              }
            }
            e.forEach(function (e) {
              var t = a.get(e);
              t.onsuccess = function () {
                if (ge.analyzePath(e).exists) {
                  ge.unlink(e);
                }
                ge.createDataFile(oe.dirname(e), oe.basename(e), t.result, true, true, true);
                if (++A + c == u) {
                  l();
                }
              };
              t.onerror = function () {
                c++;
                if (A + c == u) {
                  l();
                }
              };
            });
            s.onerror = n;
          };
          o.onerror = n;
        }
      };
      var de = {
        mappings: {},
        DEFAULT_POLLMASK: 5,
        umask: 511,
        calculateAt: function (e, t, n) {
          if (t[0] === '/') {
            return t;
          }
          var r;
          if (e === -100) {
            r = ge.cwd();
          } else {
            var o = ge.getStream(e);
            if (!o) {
              throw new ge.ErrnoError(8);
            }
            r = o.path;
          }
          if (t.length == 0) {
            if (!n) {
              throw new ge.ErrnoError(44);
            }
            return r;
          }
          return oe.join2(r, t);
        },
        doStat: function (e, t, n) {
          try {
            var r = e(t);
          } catch (e) {
            if (e && e.node && oe.normalize(t) !== oe.normalize(ge.getPath(e.node))) {
              return -54;
            }
            throw e;
          }
          D[n >> 2] = r.dev;
          D[n + 4 >> 2] = 0;
          D[n + 8 >> 2] = r.ino;
          D[n + 12 >> 2] = r.mode;
          D[n + 16 >> 2] = r.nlink;
          D[n + 20 >> 2] = r.uid;
          D[n + 24 >> 2] = r.gid;
          D[n + 28 >> 2] = r.rdev;
          D[n + 32 >> 2] = 0;
          Z = [r.size >>> 0, (X = r.size, +Math.abs(X) >= 1 ? X > 0 ? (Math.min(+Math.floor(X / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((X - +(~~X >>> 0)) / 4294967296) >>> 0 : 0)];
          D[n + 40 >> 2] = Z[0];
          D[n + 44 >> 2] = Z[1];
          D[n + 48 >> 2] = 4096;
          D[n + 52 >> 2] = r.blocks;
          D[n + 56 >> 2] = r.atime.getTime() / 1000 | 0;
          D[n + 60 >> 2] = 0;
          D[n + 64 >> 2] = r.mtime.getTime() / 1000 | 0;
          D[n + 68 >> 2] = 0;
          D[n + 72 >> 2] = r.ctime.getTime() / 1000 | 0;
          D[n + 76 >> 2] = 0;
          Z = [r.ino >>> 0, (X = r.ino, +Math.abs(X) >= 1 ? X > 0 ? (Math.min(+Math.floor(X / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((X - +(~~X >>> 0)) / 4294967296) >>> 0 : 0)];
          D[n + 80 >> 2] = Z[0];
          D[n + 84 >> 2] = Z[1];
          return 0;
        },
        doMsync: function (e, t, n, r, o) {
          var s = B.slice(e, e + n);
          ge.msync(t, s, o, n, r);
        },
        doMkdir: function (e, t) {
          if ((e = oe.normalize(e))[e.length - 1] === '/') {
            e = e.substr(0, e.length - 1);
          }
          ge.mkdir(e, t, 0);
          return 0;
        },
        doMknod: function (e, t, n) {
          switch (t & 61440) {
            case 32768:
            case 8192:
            case 24576:
            case 4096:
            case 49152:
              break;
            default:
              return -28;
          }
          ge.mknod(e, t, n);
          return 0;
        },
        doReadlink: function (e, t, n) {
          if (n <= 0) {
            return -28;
          }
          var r = ge.readlink(e);
          var o = Math.min(n, M(r));
          var s = b[t + o];
          F(r, t, n + 1);
          b[t + o] = s;
          return o;
        },
        doAccess: function (e, t) {
          if (t & -8) {
            return -28;
          }
          var n;
          if (!(n = ge.lookupPath(e, {
            follow: true
          }).node)) {
            return -44;
          }
          var r = '';
          if (t & 4) {
            r += 'r';
          }
          if (t & 2) {
            r += 'w';
          }
          if (t & 1) {
            r += 'x';
          }
          if (r && ge.nodePermissions(n, r)) {
            return -2;
          } else {
            return 0;
          }
        },
        doDup: function (e, t, n) {
          var r = ge.getStream(n);
          if (r) {
            ge.close(r);
          }
          return ge.open(e, t, 0, n, n).fd;
        },
        doReadv: function (e, t, n, r) {
          var o = 0;
          for (var s = 0; s < n; s++) {
            var a = D[t + s * 8 >> 2];
            var A = D[t + (s * 8 + 4) >> 2];
            var c = ge.read(e, b, a, A, r);
            if (c < 0) {
              return -1;
            }
            o += c;
            if (c < A) {
              break;
            }
          }
          return o;
        },
        doWritev: function (e, t, n, r) {
          var o = 0;
          for (var s = 0; s < n; s++) {
            var a = D[t + s * 8 >> 2];
            var A = D[t + (s * 8 + 4) >> 2];
            var c = ge.write(e, b, a, A, r);
            if (c < 0) {
              return -1;
            }
            o += c;
          }
          return o;
        },
        varargs: undefined,
        get: function () {
          de.varargs += 4;
          return D[de.varargs - 4 >> 2];
        },
        getStr: function (e) {
          return x(e);
        },
        getStreamFromFD: function (e) {
          var t = ge.getStream(e);
          if (!t) {
            throw new ge.ErrnoError(8);
          }
          return t;
        },
        get64: function (e, t) {
          return e;
        }
      };
      function he(e) {
        try {
          p.grow(e - v.byteLength + 65535 >>> 16);
          N(p.buffer);
          return 1;
        } catch (e) {}
      }
      function fe() {
        if (!fe.called) {
          fe.called = true;
          var e = new Date().getFullYear();
          var t = new Date(e, 0, 1);
          var n = new Date(e, 6, 1);
          var r = t.getTimezoneOffset();
          var o = n.getTimezoneOffset();
          var s = Math.max(r, o);
          D[xe() >> 2] = s * 60;
          D[ke() >> 2] = Number(r != o);
          var a = l(t);
          var A = l(n);
          var c = O(a);
          var u = O(A);
          if (o < r) {
            D[Re() >> 2] = c;
            D[Re() + 4 >> 2] = u;
          } else {
            D[Re() >> 2] = u;
            D[Re() + 4 >> 2] = c;
          }
        }
        function l(e) {
          var t = e.toTimeString().match(/\(([A-Za-z ]+)\)$/);
          if (t) {
            return t[1];
          } else {
            return 'GMT';
          }
        }
      }
      function pe(e, t, n, r) {
        if (!e) {
          e = this;
        }
        this.parent = e;
        this.mount = e.mount;
        this.mounted = null;
        this.id = ge.nextInode++;
        this.name = t;
        this.mode = n;
        this.node_ops = {};
        this.stream_ops = {};
        this.rdev = r;
      }
      var Ce = 365;
      var me = 146;
      Object.defineProperties(pe.prototype, {
        read: {
          get: function () {
            return (this.mode & Ce) === Ce;
          },
          set: function (e) {
            if (e) {
              this.mode |= Ce;
            } else {
              this.mode &= -366;
            }
          }
        },
        write: {
          get: function () {
            return (this.mode & me) === me;
          },
          set: function (e) {
            if (e) {
              this.mode |= me;
            } else {
              this.mode &= -147;
            }
          }
        },
        isFolder: {
          get: function () {
            return ge.isDir(this.mode);
          }
        },
        isDevice: {
          get: function () {
            return ge.isChrdev(this.mode);
          }
        }
      });
      ge.FSNode = pe;
      ge.staticInit();
      var Ie = r;
      var Ee = require(16928);
      ue.staticInit();
      function ye(e) {
        return function () {
          try {
            return e.apply(this, arguments);
          } catch (e) {
            if (!e.code) {
              throw e;
            }
            throw new ge.ErrnoError(ce[e.code]);
          }
        };
      }
      var we = Object.assign({}, ge);
      for (var _e in le) {
        ge[_e] = ye(le[_e]);
      }
      function ve(e, t, n) {
        var r = n > 0 ? n : M(e) + 1;
        var o = new Array(r);
        var s = P(e, o, 0, o.length);
        if (t) {
          o.length = s;
        }
        return o;
      }
      function be(e) {
        if (W(e)) {
          return function (e) {
            var t;
            try {
              t = Buffer.from(e, 'base64');
            } catch (n) {
              t = new Buffer(e, 'base64');
            }
            return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
          }(e.slice($.length));
        }
      }
      if (typeof atob == 'function') {
        atob;
      }
      var Be;
      var Qe = {
        s: function (e, t) {
          return re(e, t);
        },
        p: function (e, t) {
          try {
            e = de.getStr(e);
            ge.chmod(e, t);
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        e: function (e, t, n) {
          de.varargs = n;
          try {
            var r = de.getStreamFromFD(e);
            switch (t) {
              case 0:
                if ((o = de.get()) < 0) {
                  return -28;
                } else {
                  return ge.open(r.path, r.flags, 0, o).fd;
                }
              case 1:
              case 2:
              case 13:
              case 14:
                return 0;
              case 3:
                return r.flags;
              case 4:
                var o = de.get();
                r.flags |= o;
                return 0;
              case 12:
                o = de.get();
                Q[o + 0 >> 1] = 2;
                return 0;
              case 16:
              case 8:
              default:
                return -28;
              case 9:
                s = 28;
                D[Te() >> 2] = s;
                return -1;
            }
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
          var s;
        },
        k: function (e, t) {
          try {
            var n = de.getStreamFromFD(e);
            return de.doStat(ge.stat, n.path, t);
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        o: function (e, t, n) {
          de.varargs = n;
          try {
            var r = de.getStreamFromFD(e);
            switch (t) {
              case 21509:
              case 21505:
              case 21510:
              case 21511:
              case 21512:
              case 21506:
              case 21507:
              case 21508:
              case 21523:
              case 21524:
                if (r.tty) {
                  return 0;
                } else {
                  return -59;
                }
              case 21519:
                if (!r.tty) {
                  return -59;
                }
                var o = de.get();
                D[o >> 2] = 0;
                return 0;
              case 21520:
                if (r.tty) {
                  return -28;
                } else {
                  return -59;
                }
              case 21531:
                o = de.get();
                return ge.ioctl(r, t, o);
              default:
                z(`bad ioctl syscall ${t}`);
            }
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        q: function (e, t, n) {
          de.varargs = n;
          try {
            var r = de.getStr(e);
            var o = n ? de.get() : 0;
            return ge.open(r, t, o).fd;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        i: function (e, t) {
          try {
            e = de.getStr(e);
            t = de.getStr(t);
            ge.rename(e, t);
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        r: function (e) {
          try {
            e = de.getStr(e);
            ge.rmdir(e);
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        c: function (e, t) {
          try {
            e = de.getStr(e);
            return de.doStat(ge.stat, e, t);
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        h: function (e) {
          try {
            e = de.getStr(e);
            ge.unlink(e);
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return -e.errno;
          }
        },
        l: function (e, t, n) {
          B.copyWithin(e, t, t + n);
        },
        m: function (e) {
          var t;
          var n;
          var r = B.length;
          var o = 2147483648;
          if ((e >>>= 0) > o) {
            return false;
          }
          for (var s = 1; s <= 4; s *= 2) {
            var a = r * (1 + 0.2 / s);
            a = Math.min(a, e + 100663296);
            if (he(Math.min(o, ((t = Math.max(e, a)) % (n = 65536) > 0 && (t += n - t % n), t)))) {
              return true;
            }
          }
          return false;
        },
        f: function (e) {
          try {
            var t = de.getStreamFromFD(e);
            ge.close(t);
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return e.errno;
          }
        },
        j: function (e, t) {
          try {
            var n = de.getStreamFromFD(e);
            var r = n.tty ? 2 : ge.isDir(n.mode) ? 3 : ge.isLink(n.mode) ? 7 : 4;
            b[t | 0] = r;
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return e.errno;
          }
        },
        g: function (e, t, n, r) {
          try {
            var o = de.getStreamFromFD(e);
            var s = de.doReadv(o, t, n);
            D[r >> 2] = s;
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return e.errno;
          }
        },
        n: function (e, t, n, r, o) {
          try {
            var s = de.getStreamFromFD(e);
            var a = n * 4294967296 + (t >>> 0);
            var A = 9007199254740992;
            if (a <= -A || a >= A) {
              return -61;
            } else {
              ge.llseek(s, a, r);
              Z = [s.position >>> 0, (X = s.position, +Math.abs(X) >= 1 ? X > 0 ? (Math.min(+Math.floor(X / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((X - +(~~X >>> 0)) / 4294967296) >>> 0 : 0)];
              D[o >> 2] = Z[0];
              D[o + 4 >> 2] = Z[1];
              if (s.getdents && a === 0 && r === 0) {
                s.getdents = null;
              }
              return 0;
            }
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return e.errno;
          }
        },
        d: function (e, t, n, r) {
          try {
            var o = de.getStreamFromFD(e);
            var s = de.doWritev(o, t, n);
            D[r >> 2] = s;
            return 0;
          } catch (e) {
            if (ge === undefined || !(e instanceof ge.ErrnoError)) {
              z(e);
            }
            return e.errno;
          }
        },
        a: function (e) {},
        b: function (e) {
          var t = Date.now() / 1000 | 0;
          if (e) {
            D[e >> 2] = t;
          }
          return t;
        },
        t: function (e) {
          fe();
          var t = Date.UTC(D[e + 20 >> 2] + 1900, D[e + 16 >> 2], D[e + 12 >> 2], D[e + 8 >> 2], D[e + 4 >> 2], D[e >> 2], 0);
          var n = new Date(t);
          D[e + 24 >> 2] = n.getUTCDay();
          var r = Date.UTC(n.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
          var o = (n.getTime() - r) / 86400000 | 0;
          D[e + 28 >> 2] = o;
          return n.getTime() / 1000 | 0;
        }
      };
      var De = function () {
        var e = {
          a: Qe
        };
        function t(e, t) {
          var n;
          var r = e.exports;
          s.asm = r;
          N((p = s.asm.u).buffer);
          L = s.asm.pa;
          n = s.asm.v;
          U.unshift(n);
          J();
        }
        H();
        if (s.instantiateWasm) {
          try {
            return s.instantiateWasm(e, t);
          } catch (e) {
            I(`Module.instantiateWasm callback failed with error: ${e}`);
            return false;
          }
        }
        t(te(ee, e)[0]);
        return s.asm;
      }();
      s.___wasm_call_ctors = De.v;
      s._zip_ext_count_symlinks = De.w;
      s._zip_file_get_external_attributes = De.x;
      s._zipstruct_stat = De.y;
      s._zipstruct_statS = De.z;
      s._zipstruct_stat_name = De.A;
      s._zipstruct_stat_index = De.B;
      s._zipstruct_stat_size = De.C;
      s._zipstruct_stat_mtime = De.D;
      s._zipstruct_stat_crc = De.E;
      s._zipstruct_error = De.F;
      s._zipstruct_errorS = De.G;
      s._zipstruct_error_code_zip = De.H;
      s._zipstruct_stat_comp_size = De.I;
      s._zipstruct_stat_comp_method = De.J;
      s._zip_close = De.K;
      s._zip_delete = De.L;
      s._zip_dir_add = De.M;
      s._zip_discard = De.N;
      s._zip_error_init_with_code = De.O;
      s._zip_get_error = De.P;
      s._zip_file_get_error = De.Q;
      s._zip_error_strerror = De.R;
      s._zip_fclose = De.S;
      s._zip_file_add = De.T;
      s._free = De.U;
      var Se = s._malloc = De.V;
      var Te = s.___errno_location = De.W;
      s._zip_source_error = De.X;
      s._zip_source_seek = De.Y;
      s._zip_file_set_external_attributes = De.Z;
      s._zip_file_set_mtime = De._;
      s._zip_fopen = De.$;
      s._zip_fopen_index = De.aa;
      s._zip_fread = De.ba;
      s._zip_get_name = De.ca;
      s._zip_get_num_entries = De.da;
      s._zip_source_read = De.ea;
      s._zip_name_locate = De.fa;
      s._zip_open = De.ga;
      s._zip_open_from_source = De.ha;
      s._zip_set_file_compression = De.ia;
      s._zip_source_buffer = De.ja;
      s._zip_source_buffer_create = De.ka;
      s._zip_source_close = De.la;
      s._zip_source_free = De.ma;
      s._zip_source_keep = De.na;
      s._zip_source_open = De.oa;
      s._zip_source_set_mtime = De.qa;
      s._zip_source_tell = De.ra;
      s._zip_stat = De.sa;
      s._zip_stat_index = De.ta;
      var Re = s.__get_tzname = De.ua;
      var ke = s.__get_daylight = De.va;
      var xe = s.__get_timezone = De.wa;
      var Pe = s.stackSave = De.xa;
      var Fe = s.stackRestore = De.ya;
      var Me = s.stackAlloc = De.za;
      function Oe(e) {
        function n() {
          if (!Be) {
            Be = true;
            s.calledRun = true;
            if (!E) {
              if (!s.noFSInit && !ge.init.initialized) {
                ge.init();
              }
              se.init();
              ne(U);
              t(s);
              if (s.onRuntimeInitialized) {
                s.onRuntimeInitialized();
              }
              (function () {
                if (s.postRun) {
                  for (typeof s.postRun == 'function' && (s.postRun = [s.postRun]); s.postRun.length;) {
                    e = s.postRun.shift();
                    j.unshift(e);
                  }
                }
                var e;
                ne(j);
              })();
            }
          }
        }
        e = e || d;
        if (!(q > 0)) {
          (function () {
            if (s.preRun) {
              for (typeof s.preRun == 'function' && (s.preRun = [s.preRun]); s.preRun.length;) {
                e = s.preRun.shift();
                K.unshift(e);
              }
            }
            var e;
            ne(K);
          })();
          if (!(q > 0)) {
            if (s.setStatus) {
              s.setStatus('Running...');
              setTimeout(function () {
                setTimeout(function () {
                  s.setStatus('');
                }, 1);
                n();
              }, 1);
            } else {
              n();
            }
          }
        }
      }
      s.cwrap = function (e, t, n, r) {
        var o = (n = n || []).every(function (e) {
          return e === 'number';
        });
        if (t !== 'string' && o && !r) {
          return w(e);
        } else {
          return function () {
            return _(e, t, n, arguments);
          };
        }
      };
      s.getValue = function (e, t, n) {
        if ((t = t || 'i8').charAt(t.length - 1) === '*') {
          t = 'i32';
        }
        switch (t) {
          case 'i1':
          case 'i8':
            return b[e | 0];
          case 'i16':
            return Q[e >> 1];
          case 'i32':
          case 'i64':
            return D[e >> 2];
          case 'float':
            return S[e >> 2];
          case 'double':
            return T[e >> 3];
          default:
            z(`invalid type for getValue: ${t}`);
        }
        return null;
      };
      Y = function e() {
        if (!Be) {
          Oe();
        }
        if (!Be) {
          Y = e;
        }
      };
      s.run = Oe;
      if (s.preInit) {
        for (typeof s.preInit == 'function' && (s.preInit = [s.preInit]); s.preInit.length > 0;) {
          s.preInit.pop()();
        }
      }
      Oe();
      return e;
    }
    module.exports = o;
  },
  31475: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.makeInterface = exports.Errors = undefined;
    const n = ['number', 'number'];
    var r;
    (function (e) {
      e[e.ZIP_ER_OK = 0] = 'ZIP_ER_OK';
      e[e.ZIP_ER_MULTIDISK = 1] = 'ZIP_ER_MULTIDISK';
      e[e.ZIP_ER_RENAME = 2] = 'ZIP_ER_RENAME';
      e[e.ZIP_ER_CLOSE = 3] = 'ZIP_ER_CLOSE';
      e[e.ZIP_ER_SEEK = 4] = 'ZIP_ER_SEEK';
      e[e.ZIP_ER_READ = 5] = 'ZIP_ER_READ';
      e[e.ZIP_ER_WRITE = 6] = 'ZIP_ER_WRITE';
      e[e.ZIP_ER_CRC = 7] = 'ZIP_ER_CRC';
      e[e.ZIP_ER_ZIPCLOSED = 8] = 'ZIP_ER_ZIPCLOSED';
      e[e.ZIP_ER_NOENT = 9] = 'ZIP_ER_NOENT';
      e[e.ZIP_ER_EXISTS = 10] = 'ZIP_ER_EXISTS';
      e[e.ZIP_ER_OPEN = 11] = 'ZIP_ER_OPEN';
      e[e.ZIP_ER_TMPOPEN = 12] = 'ZIP_ER_TMPOPEN';
      e[e.ZIP_ER_ZLIB = 13] = 'ZIP_ER_ZLIB';
      e[e.ZIP_ER_MEMORY = 14] = 'ZIP_ER_MEMORY';
      e[e.ZIP_ER_CHANGED = 15] = 'ZIP_ER_CHANGED';
      e[e.ZIP_ER_COMPNOTSUPP = 16] = 'ZIP_ER_COMPNOTSUPP';
      e[e.ZIP_ER_EOF = 17] = 'ZIP_ER_EOF';
      e[e.ZIP_ER_INVAL = 18] = 'ZIP_ER_INVAL';
      e[e.ZIP_ER_NOZIP = 19] = 'ZIP_ER_NOZIP';
      e[e.ZIP_ER_INTERNAL = 20] = 'ZIP_ER_INTERNAL';
      e[e.ZIP_ER_INCONS = 21] = 'ZIP_ER_INCONS';
      e[e.ZIP_ER_REMOVE = 22] = 'ZIP_ER_REMOVE';
      e[e.ZIP_ER_DELETED = 23] = 'ZIP_ER_DELETED';
      e[e.ZIP_ER_ENCRNOTSUPP = 24] = 'ZIP_ER_ENCRNOTSUPP';
      e[e.ZIP_ER_RDONLY = 25] = 'ZIP_ER_RDONLY';
      e[e.ZIP_ER_NOPASSWD = 26] = 'ZIP_ER_NOPASSWD';
      e[e.ZIP_ER_WRONGPASSWD = 27] = 'ZIP_ER_WRONGPASSWD';
      e[e.ZIP_ER_OPNOTSUPP = 28] = 'ZIP_ER_OPNOTSUPP';
      e[e.ZIP_ER_INUSE = 29] = 'ZIP_ER_INUSE';
      e[e.ZIP_ER_TELL = 30] = 'ZIP_ER_TELL';
      e[e.ZIP_ER_COMPRESSED_DATA = 31] = 'ZIP_ER_COMPRESSED_DATA';
    })(r = exports.Errors ||= {});
    exports.makeInterface = e => ({
      get HEAP8() {
        return e.HEAP8;
      },
      get HEAPU8() {
        return e.HEAPU8;
      },
      errors: r,
      SEEK_SET: 0,
      SEEK_CUR: 1,
      SEEK_END: 2,
      ZIP_CHECKCONS: 4,
      ZIP_CREATE: 1,
      ZIP_EXCL: 2,
      ZIP_TRUNCATE: 8,
      ZIP_RDONLY: 16,
      ZIP_FL_OVERWRITE: 8192,
      ZIP_FL_COMPRESSED: 4,
      ZIP_OPSYS_DOS: 0,
      ZIP_OPSYS_AMIGA: 1,
      ZIP_OPSYS_OPENVMS: 2,
      ZIP_OPSYS_UNIX: 3,
      ZIP_OPSYS_VM_CMS: 4,
      ZIP_OPSYS_ATARI_ST: 5,
      ZIP_OPSYS_OS_2: 6,
      ZIP_OPSYS_MACINTOSH: 7,
      ZIP_OPSYS_Z_SYSTEM: 8,
      ZIP_OPSYS_CPM: 9,
      ZIP_OPSYS_WINDOWS_NTFS: 10,
      ZIP_OPSYS_MVS: 11,
      ZIP_OPSYS_VSE: 12,
      ZIP_OPSYS_ACORN_RISC: 13,
      ZIP_OPSYS_VFAT: 14,
      ZIP_OPSYS_ALTERNATE_MVS: 15,
      ZIP_OPSYS_BEOS: 16,
      ZIP_OPSYS_TANDEM: 17,
      ZIP_OPSYS_OS_400: 18,
      ZIP_OPSYS_OS_X: 19,
      ZIP_CM_DEFAULT: -1,
      ZIP_CM_STORE: 0,
      ZIP_CM_DEFLATE: 8,
      uint08S: e._malloc(1),
      uint16S: e._malloc(2),
      uint32S: e._malloc(4),
      uint64S: e._malloc(8),
      malloc: e._malloc,
      free: e._free,
      getValue: e.getValue,
      open: e.cwrap('zip_open', 'number', ['string', 'number', 'number']),
      openFromSource: e.cwrap('zip_open_from_source', 'number', ['number', 'number', 'number']),
      close: e.cwrap('zip_close', 'number', ['number']),
      discard: e.cwrap('zip_discard', null, ['number']),
      getError: e.cwrap('zip_get_error', 'number', ['number']),
      getName: e.cwrap('zip_get_name', 'string', ['number', 'number', 'number']),
      getNumEntries: e.cwrap('zip_get_num_entries', 'number', ['number', 'number']),
      delete: e.cwrap('zip_delete', 'number', ['number', 'number']),
      stat: e.cwrap('zip_stat', 'number', ['number', 'string', 'number', 'number']),
      statIndex: e.cwrap('zip_stat_index', 'number', ['number', ...n, 'number', 'number']),
      fopen: e.cwrap('zip_fopen', 'number', ['number', 'string', 'number']),
      fopenIndex: e.cwrap('zip_fopen_index', 'number', ['number', ...n, 'number']),
      fread: e.cwrap('zip_fread', 'number', ['number', 'number', 'number', 'number']),
      fclose: e.cwrap('zip_fclose', 'number', ['number']),
      dir: {
        add: e.cwrap('zip_dir_add', 'number', ['number', 'string'])
      },
      file: {
        add: e.cwrap('zip_file_add', 'number', ['number', 'string', 'number', 'number']),
        getError: e.cwrap('zip_file_get_error', 'number', ['number']),
        getExternalAttributes: e.cwrap('zip_file_get_external_attributes', 'number', ['number', ...n, 'number', 'number', 'number']),
        setExternalAttributes: e.cwrap('zip_file_set_external_attributes', 'number', ['number', ...n, 'number', 'number', 'number']),
        setMtime: e.cwrap('zip_file_set_mtime', 'number', ['number', ...n, 'number', 'number']),
        setCompression: e.cwrap('zip_set_file_compression', 'number', ['number', ...n, 'number', 'number'])
      },
      ext: {
        countSymlinks: e.cwrap('zip_ext_count_symlinks', 'number', ['number'])
      },
      error: {
        initWithCode: e.cwrap('zip_error_init_with_code', null, ['number', 'number']),
        strerror: e.cwrap('zip_error_strerror', 'string', ['number'])
      },
      name: {
        locate: e.cwrap('zip_name_locate', 'number', ['number', 'string', 'number'])
      },
      source: {
        fromUnattachedBuffer: e.cwrap('zip_source_buffer_create', 'number', ['number', ...n, 'number', 'number']),
        fromBuffer: e.cwrap('zip_source_buffer', 'number', ['number', 'number', ...n, 'number']),
        free: e.cwrap('zip_source_free', null, ['number']),
        keep: e.cwrap('zip_source_keep', null, ['number']),
        open: e.cwrap('zip_source_open', 'number', ['number']),
        close: e.cwrap('zip_source_close', 'number', ['number']),
        seek: e.cwrap('zip_source_seek', 'number', ['number', ...n, 'number']),
        tell: e.cwrap('zip_source_tell', 'number', ['number']),
        read: e.cwrap('zip_source_read', 'number', ['number', 'number', 'number']),
        error: e.cwrap('zip_source_error', 'number', ['number']),
        setMtime: e.cwrap('zip_source_set_mtime', 'number', ['number', 'number'])
      },
      struct: {
        stat: e.cwrap('zipstruct_stat', 'number', []),
        statS: e.cwrap('zipstruct_statS', 'number', []),
        statName: e.cwrap('zipstruct_stat_name', 'string', ['number']),
        statIndex: e.cwrap('zipstruct_stat_index', 'number', ['number']),
        statSize: e.cwrap('zipstruct_stat_size', 'number', ['number']),
        statCompSize: e.cwrap('zipstruct_stat_comp_size', 'number', ['number']),
        statCompMethod: e.cwrap('zipstruct_stat_comp_method', 'number', ['number']),
        statMtime: e.cwrap('zipstruct_stat_mtime', 'number', ['number']),
        statCrc: e.cwrap('zipstruct_stat_crc', 'number', ['number']),
        error: e.cwrap('zipstruct_error', 'number', []),
        errorS: e.cwrap('zipstruct_errorS', 'number', []),
        errorCodeZip: e.cwrap('zipstruct_error_code_zip', 'number', ['number'])
      }
    });
  },
  21859: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.getLibzipPromise = exports.getLibzipSync = undefined;
    const r = require(70961).__importDefault(require(82793));
    const o = require(31475);
    let s = null;
    function a() {
      if (s === null) {
        s = o.makeInterface(r.default());
      }
      return s;
    }
    exports.getLibzipSync = a;
    exports.getLibzipPromise = async function () {
      return a();
    };
  },
  944: module => {
    var t = Object.prototype.toString;
    var n = typeof Buffer != 'undefined' && typeof Buffer.alloc == 'function' && typeof Buffer.allocUnsafe == 'function' && typeof Buffer.from == 'function';
    module.exports = function (e, r, o) {
      if (typeof e == 'number') {
        throw new TypeError('"value" argument must not be a number');
      }
      s = e;
      if (t.call(s).slice(8, -1) === 'ArrayBuffer') {
        return function (e, t, r) {
          t >>>= 0;
          var o = e.byteLength - t;
          if (o < 0) {
            throw new RangeError('\'offset\' is out of bounds');
          }
          if (r === undefined) {
            r = o;
          } else {
            if ((r >>>= 0) > o) {
              throw new RangeError('\'length\' is out of bounds');
            }
          }
          if (n) {
            return Buffer.from(e.slice(t, t + r));
          } else {
            return new Buffer(new Uint8Array(e.slice(t, t + r)));
          }
        }(e, r, o);
      } else {
        if (typeof e == 'string') {
          return function (e, t) {
            if (typeof t != 'string' || t === '') {
              t = 'utf8';
            }
            if (!Buffer.isEncoding(t)) {
              throw new TypeError('"encoding" must be a valid string encoding');
            }
            if (n) {
              return Buffer.from(e, t);
            } else {
              return new Buffer(e, t);
            }
          }(e, r);
        } else {
          if (n) {
            return Buffer.from(e);
          } else {
            return new Buffer(e);
          }
        }
      }
      var s;
    };
  },
  8753: (module, exports, require) => {
    "use strict";

    function r(e, t = false) {
      const n = e.length;
      let r = 0;
      let A = '';
      let c = 0;
      let u = 16;
      let l = 0;
      let g = 0;
      let d = 0;
      let h = 0;
      let f = 0;
      function p(t, n) {
        let o = 0;
        let s = 0;
        while (o < t || !n) {
          let t = e.charCodeAt(r);
          if (t >= 48 && t <= 57) {
            s = s * 16 + t - 48;
          } else {
            if (t >= 65 && t <= 70) {
              s = s * 16 + t - 65 + 10;
            } else {
              if (!(t >= 97) || !(t <= 102)) {
                break;
              }
              s = s * 16 + t - 97 + 10;
            }
          }
          r++;
          o++;
        }
        if (o < t) {
          s = -1;
        }
        return s;
      }
      function m() {
        A = '';
        f = 0;
        c = r;
        g = l;
        h = d;
        if (r >= n) {
          c = n;
          return u = 17;
        }
        let t = e.charCodeAt(r);
        if (o(t)) {
          do {
            r++;
            A += String.fromCharCode(t);
            t = e.charCodeAt(r);
          } while (o(t));
          return u = 15;
        }
        if (s(t)) {
          r++;
          A += String.fromCharCode(t);
          if (t === 13 && e.charCodeAt(r) === 10) {
            r++;
            A += '\n';
          }
          l++;
          d = r;
          return u = 14;
        }
        switch (t) {
          case 123:
            r++;
            return u = 1;
          case 125:
            r++;
            return u = 2;
          case 91:
            r++;
            return u = 3;
          case 93:
            r++;
            return u = 4;
          case 58:
            r++;
            return u = 6;
          case 44:
            r++;
            return u = 5;
          case 34:
            r++;
            A = function () {
              let t = '';
              let o = r;
              while (true) {
                if (r >= n) {
                  t += e.substring(o, r);
                  f = 2;
                  break;
                }
                const a = e.charCodeAt(r);
                if (a === 34) {
                  t += e.substring(o, r);
                  r++;
                  break;
                }
                if (a !== 92) {
                  if (a >= 0 && a <= 31) {
                    if (s(a)) {
                      t += e.substring(o, r);
                      f = 2;
                      break;
                    }
                    f = 6;
                  }
                  r++;
                } else {
                  t += e.substring(o, r);
                  r++;
                  if (r >= n) {
                    f = 2;
                    break;
                  }
                  switch (e.charCodeAt(r++)) {
                    case 34:
                      t += '"';
                      break;
                    case 92:
                      t += '\\';
                      break;
                    case 47:
                      t += '/';
                      break;
                    case 98:
                      t += '\b';
                      break;
                    case 102:
                      t += '\f';
                      break;
                    case 110:
                      t += '\n';
                      break;
                    case 114:
                      t += '\r';
                      break;
                    case 116:
                      t += '\t';
                      break;
                    case 117:
                      const e = p(4, true);
                      if (e >= 0) {
                        t += String.fromCharCode(e);
                      } else {
                        f = 4;
                      }
                      break;
                    default:
                      f = 5;
                  }
                  o = r;
                }
              }
              return t;
            }();
            return u = 10;
          case 47:
            const o = r - 1;
            if (e.charCodeAt(r + 1) === 47) {
              for (r += 2; r < n && !s(e.charCodeAt(r));) {
                r++;
              }
              A = e.substring(o, r);
              return u = 12;
            }
            if (e.charCodeAt(r + 1) === 42) {
              r += 2;
              const t = n - 1;
              let a = false;
              while (r < t) {
                const t = e.charCodeAt(r);
                if (t === 42 && e.charCodeAt(r + 1) === 47) {
                  r += 2;
                  a = true;
                  break;
                }
                r++;
                if (s(t)) {
                  if (t === 13 && e.charCodeAt(r) === 10) {
                    r++;
                  }
                  l++;
                  d = r;
                }
              }
              if (!a) {
                r++;
                f = 1;
              }
              A = e.substring(o, r);
              return u = 13;
            }
            A += String.fromCharCode(t);
            r++;
            return u = 16;
          case 45:
            A += String.fromCharCode(t);
            r++;
            if (r === n || !a(e.charCodeAt(r))) {
              return u = 16;
            }
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            A += function () {
              let t = r;
              if (e.charCodeAt(r) === 48) {
                r++;
              } else {
                for (r++; r < e.length && a(e.charCodeAt(r));) {
                  r++;
                }
              }
              if (r < e.length && e.charCodeAt(r) === 46) {
                r++;
                if (!(r < e.length) || !a(e.charCodeAt(r))) {
                  f = 3;
                  return e.substring(t, r);
                }
                for (r++; r < e.length && a(e.charCodeAt(r));) {
                  r++;
                }
              }
              let n = r;
              if (r < e.length && (e.charCodeAt(r) === 69 || e.charCodeAt(r) === 101)) {
                r++;
                if (r < e.length && e.charCodeAt(r) === 43 || e.charCodeAt(r) === 45) {
                  r++;
                }
                if (r < e.length && a(e.charCodeAt(r))) {
                  for (r++; r < e.length && a(e.charCodeAt(r));) {
                    r++;
                  }
                  n = r;
                } else {
                  f = 3;
                }
              }
              return e.substring(t, n);
            }();
            return u = 11;
          default:
            while (r < n && I(t)) {
              r++;
              t = e.charCodeAt(r);
            }
            if (c !== r) {
              A = e.substring(c, r);
              switch (A) {
                case 'true':
                  return u = 8;
                case 'false':
                  return u = 9;
                case 'null':
                  return u = 7;
              }
              return u = 16;
            }
            A += String.fromCharCode(t);
            r++;
            return u = 16;
        }
      }
      function I(e) {
        if (o(e) || s(e)) {
          return false;
        }
        switch (e) {
          case 125:
          case 93:
          case 123:
          case 91:
          case 34:
          case 58:
          case 44:
          case 47:
            return false;
        }
        return true;
      }
      return {
        setPosition: function (e) {
          r = e;
          A = '';
          c = 0;
          u = 16;
          f = 0;
        },
        getPosition: () => r,
        scan: t ? function () {
          let e;
          do {
            e = m();
          } while (e >= 12 && e <= 15);
          return e;
        } : m,
        getToken: () => u,
        getTokenValue: () => A,
        getTokenOffset: () => c,
        getTokenLength: () => r - c,
        getTokenStartLine: () => g,
        getTokenStartCharacter: () => c - h,
        getTokenError: () => f
      };
    }
    function o(e) {
      return e === 32 || e === 9;
    }
    function s(e) {
      return e === 10 || e === 13;
    }
    function a(e) {
      return e >= 48 && e <= 57;
    }
    var A;
    require.r(exports);
    require.d(exports, {
      ParseErrorCode: () => O,
      ScanError: () => B,
      SyntaxKind: () => Q,
      applyEdits: () => U,
      createScanner: () => b,
      findNodeAtLocation: () => R,
      findNodeAtOffset: () => k,
      format: () => L,
      getLocation: () => D,
      getNodePath: () => x,
      getNodeValue: () => P,
      modify: () => K,
      parse: () => S,
      parseTree: () => T,
      printParseErrorCode: () => N,
      stripComments: () => M,
      visit: () => F
    });
    (function (e) {
      e[e.lineFeed = 10] = 'lineFeed';
      e[e.carriageReturn = 13] = 'carriageReturn';
      e[e.space = 32] = 'space';
      e[e._0 = 48] = '_0';
      e[e._1 = 49] = '_1';
      e[e._2 = 50] = '_2';
      e[e._3 = 51] = '_3';
      e[e._4 = 52] = '_4';
      e[e._5 = 53] = '_5';
      e[e._6 = 54] = '_6';
      e[e._7 = 55] = '_7';
      e[e._8 = 56] = '_8';
      e[e._9 = 57] = '_9';
      e[e.a = 97] = 'a';
      e[e.b = 98] = 'b';
      e[e.c = 99] = 'c';
      e[e.d = 100] = 'd';
      e[e.e = 101] = 'e';
      e[e.f = 102] = 'f';
      e[e.g = 103] = 'g';
      e[e.h = 104] = 'h';
      e[e.i = 105] = 'i';
      e[e.j = 106] = 'j';
      e[e.k = 107] = 'k';
      e[e.l = 108] = 'l';
      e[e.m = 109] = 'm';
      e[e.n = 110] = 'n';
      e[e.o = 111] = 'o';
      e[e.p = 112] = 'p';
      e[e.q = 113] = 'q';
      e[e.r = 114] = 'r';
      e[e.s = 115] = 's';
      e[e.t = 116] = 't';
      e[e.u = 117] = 'u';
      e[e.v = 118] = 'v';
      e[e.w = 119] = 'w';
      e[e.x = 120] = 'x';
      e[e.y = 121] = 'y';
      e[e.z = 122] = 'z';
      e[e.A = 65] = 'A';
      e[e.B = 66] = 'B';
      e[e.C = 67] = 'C';
      e[e.D = 68] = 'D';
      e[e.E = 69] = 'E';
      e[e.F = 70] = 'F';
      e[e.G = 71] = 'G';
      e[e.H = 72] = 'H';
      e[e.I = 73] = 'I';
      e[e.J = 74] = 'J';
      e[e.K = 75] = 'K';
      e[e.L = 76] = 'L';
      e[e.M = 77] = 'M';
      e[e.N = 78] = 'N';
      e[e.O = 79] = 'O';
      e[e.P = 80] = 'P';
      e[e.Q = 81] = 'Q';
      e[e.R = 82] = 'R';
      e[e.S = 83] = 'S';
      e[e.T = 84] = 'T';
      e[e.U = 85] = 'U';
      e[e.V = 86] = 'V';
      e[e.W = 87] = 'W';
      e[e.X = 88] = 'X';
      e[e.Y = 89] = 'Y';
      e[e.Z = 90] = 'Z';
      e[e.asterisk = 42] = 'asterisk';
      e[e.backslash = 92] = 'backslash';
      e[e.closeBrace = 125] = 'closeBrace';
      e[e.closeBracket = 93] = 'closeBracket';
      e[e.colon = 58] = 'colon';
      e[e.comma = 44] = 'comma';
      e[e.dot = 46] = 'dot';
      e[e.doubleQuote = 34] = 'doubleQuote';
      e[e.minus = 45] = 'minus';
      e[e.openBrace = 123] = 'openBrace';
      e[e.openBracket = 91] = 'openBracket';
      e[e.plus = 43] = 'plus';
      e[e.slash = 47] = 'slash';
      e[e.formFeed = 12] = 'formFeed';
      e[e.tab = 9] = 'tab';
    })(A ||= {});
    const c = new Array(20).fill(0).map((e, t) => ' '.repeat(t));
    const u = 200;
    const l = {
      ' ': {
        '\n': new Array(u).fill(0).map((e, t) => `
${' '.repeat(t)}`),
        '\r': new Array(u).fill(0).map((e, t) => `\r${' '.repeat(t)}`),
        '\r\n': new Array(u).fill(0).map((e, t) => `\r
${' '.repeat(t)}`)
      },
      '\t': {
        '\n': new Array(u).fill(0).map((e, t) => `
${'\t'.repeat(t)}`),
        '\r': new Array(u).fill(0).map((e, t) => `\r${'\t'.repeat(t)}`),
        '\r\n': new Array(u).fill(0).map((e, t) => `\r
${'\t'.repeat(t)}`)
      }
    };
    const g = ['\n', '\r', '\r\n'];
    function d(e, t, n) {
      let o;
      let s;
      let a;
      let A;
      let u;
      if (t) {
        A = t.offset;
        u = A + t.length;
        a = A;
        while (a > 0 && !f(e, a - 1)) {
          a--;
        }
        let r = u;
        while (r < e.length && !f(e, r)) {
          r++;
        }
        s = e.substring(a, r);
        o = function (e, t) {
          let n = 0;
          let r = 0;
          const o = t.tabSize || 4;
          while (n < e.length) {
            let t = e.charAt(n);
            if (t === c[1]) {
              r++;
            } else {
              if (t !== '\t') {
                break;
              }
              r += o;
            }
            n++;
          }
          return Math.floor(r / o);
        }(s, n);
      } else {
        s = e;
        o = 0;
        a = 0;
        A = 0;
        u = e.length;
      }
      const d = function (e, t) {
        for (let e = 0; e < t.length; e++) {
          const n = t.charAt(e);
          if (n === '\r') {
            if (e + 1 < t.length && t.charAt(e + 1) === '\n') {
              return '\r\n';
            } else {
              return '\r';
            }
          }
          if (n === '\n') {
            return '\n';
          }
        }
        return e && e.eol || '\n';
      }(n, e);
      const p = g.includes(d);
      let m;
      let I = 0;
      let E = 0;
      m = n.insertSpaces ? c[n.tabSize || 4] ?? h(c[1], n.tabSize || 4) : '\t';
      const y = m === '\t' ? '\t' : ' ';
      let w = r(s, false);
      let _ = false;
      function v() {
        if (I > 1) {
          return h(d, I) + h(m, o + E);
        }
        const e = m.length * (o + E);
        if (!p || e > l[y][d].length) {
          return d + h(m, o + E);
        } else {
          if (e <= 0) {
            return d;
          } else {
            return l[y][d][e];
          }
        }
      }
      function b() {
        let e = w.scan();
        for (I = 0; e === 15 || e === 14;) {
          if (e === 14 && n.keepLines) {
            I += 1;
          } else {
            if (e === 14) {
              I = 1;
            }
          }
          e = w.scan();
        }
        _ = e === 16 || w.getTokenError() !== 0;
        return e;
      }
      const B = [];
      function Q(n, r, o) {
        if (!_ && (!t || !!(r < u) && !!(o > A)) && e.substring(r, o) !== n) {
          B.push({
            offset: r,
            length: o - r,
            content: n
          });
        }
      }
      let D = b();
      if (n.keepLines && I > 0) {
        Q(h(d, I), 0, 0);
      }
      if (D !== 17) {
        let e = w.getTokenOffset() + a;
        Q(m.length * o < 20 && n.insertSpaces ? c[m.length * o] : h(m, o), a, e);
      }
      while (D !== 17) {
        let e = w.getTokenOffset() + w.getTokenLength() + a;
        let t = b();
        let r = '';
        let o = false;
        while (I === 0 && (t === 12 || t === 13)) {
          let n = w.getTokenOffset() + a;
          Q(c[1], e, n);
          e = w.getTokenOffset() + w.getTokenLength() + a;
          o = t === 12;
          r = o ? v() : '';
          t = b();
        }
        if (t === 2) {
          if (D !== 1) {
            E--;
          }
          if (n.keepLines && I > 0 || !n.keepLines && D !== 1) {
            r = v();
          } else {
            if (n.keepLines) {
              r = c[1];
            }
          }
        } else {
          if (t === 4) {
            if (D !== 3) {
              E--;
            }
            if (n.keepLines && I > 0 || !n.keepLines && D !== 3) {
              r = v();
            } else {
              if (n.keepLines) {
                r = c[1];
              }
            }
          } else {
            switch (D) {
              case 3:
              case 1:
                E++;
                r = n.keepLines && I > 0 || !n.keepLines ? v() : c[1];
                break;
              case 5:
                r = n.keepLines && I > 0 || !n.keepLines ? v() : c[1];
                break;
              case 12:
                r = v();
                break;
              case 13:
                if (I > 0) {
                  r = v();
                } else {
                  if (!o) {
                    r = c[1];
                  }
                }
                break;
              case 6:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (!o) {
                    r = c[1];
                  }
                }
                break;
              case 10:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (t === 6 && !o) {
                    r = '';
                  }
                }
                break;
              case 7:
              case 8:
              case 9:
              case 11:
              case 2:
              case 4:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (t !== 12 && t !== 13 || o) {
                    if (t !== 5 && t !== 17) {
                      _ = true;
                    }
                  } else {
                    r = c[1];
                  }
                }
                break;
              case 16:
                _ = true;
            }
            if (I > 0 && (t === 12 || t === 13)) {
              r = v();
            }
          }
        }
        if (t === 17) {
          r = n.keepLines && I > 0 ? v() : n.insertFinalNewline ? d : '';
        }
        Q(r, e, w.getTokenOffset() + a);
        D = t;
      }
      return B;
    }
    function h(e, t) {
      let n = '';
      for (let r = 0; r < t; r++) {
        n += e;
      }
      return n;
    }
    function f(e, t) {
      return '\r\n'.indexOf(e.charAt(t)) !== -1;
    }
    var p;
    function m(e, t = [], n = p.DEFAULT) {
      let r = {
        type: 'array',
        offset: -1,
        length: -1,
        children: [],
        parent: undefined
      };
      function o(e) {
        if (r.type === 'property') {
          r.length = e - r.offset;
          r = r.parent;
        }
      }
      function s(e) {
        r.children.push(e);
        return e;
      }
      E(e, {
        onObjectBegin: e => {
          r = s({
            type: 'object',
            offset: e,
            length: -1,
            parent: r,
            children: []
          });
        },
        onObjectProperty: (e, t, n) => {
          r = s({
            type: 'property',
            offset: t,
            length: -1,
            parent: r,
            children: []
          });
          r.children.push({
            type: 'string',
            value: e,
            offset: t,
            length: n,
            parent: r
          });
        },
        onObjectEnd: (e, t) => {
          o(e + t);
          r.length = e + t - r.offset;
          r = r.parent;
          o(e + t);
        },
        onArrayBegin: (e, t) => {
          r = s({
            type: 'array',
            offset: e,
            length: -1,
            parent: r,
            children: []
          });
        },
        onArrayEnd: (e, t) => {
          r.length = e + t - r.offset;
          r = r.parent;
          o(e + t);
        },
        onLiteralValue: (e, t, n) => {
          s({
            type: y(e),
            offset: t,
            length: n,
            parent: r,
            value: e
          });
          o(t + n);
        },
        onSeparator: (e, t, n) => {
          if (r.type === 'property') {
            if (e === ':') {
              r.colonOffset = t;
            } else {
              if (e === ',') {
                o(t);
              }
            }
          }
        },
        onError: (e, n, r) => {
          t.push({
            error: e,
            offset: n,
            length: r
          });
        }
      }, n);
      const a = r.children[0];
      if (a) {
        delete a.parent;
      }
      return a;
    }
    function I(e, t) {
      if (!e) {
        return;
      }
      let n = e;
      for (let e of t) {
        if (typeof e == 'string') {
          if (n.type !== 'object' || !Array.isArray(n.children)) {
            return;
          }
          let t = false;
          for (const r of n.children) {
            if (Array.isArray(r.children) && r.children[0].value === e && r.children.length === 2) {
              n = r.children[1];
              t = true;
              break;
            }
          }
          if (!t) {
            return;
          }
        } else {
          const t = e;
          if (n.type !== 'array' || t < 0 || !Array.isArray(n.children) || t >= n.children.length) {
            return;
          }
          n = n.children[t];
        }
      }
      return n;
    }
    function E(e, t, n = p.DEFAULT) {
      const o = r(e, false);
      const s = [];
      let a = 0;
      function A(e) {
        if (e) {
          return t => a === 0 && e(t, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter());
        } else {
          return () => true;
        }
      }
      function c(e) {
        if (e) {
          return t => a === 0 && e(t, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => s.slice());
        } else {
          return () => true;
        }
      }
      function u(e) {
        if (e) {
          return () => {
            if (a > 0) {
              a++;
            } else {
              if (e(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => s.slice()) === false) {
                a = 1;
              }
            }
          };
        } else {
          return () => true;
        }
      }
      function l(e) {
        if (e) {
          return () => {
            if (a > 0) {
              a--;
            }
            if (a === 0) {
              e(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter());
            }
          };
        } else {
          return () => true;
        }
      }
      const g = u(t.onObjectBegin);
      const d = c(t.onObjectProperty);
      const h = l(t.onObjectEnd);
      const f = u(t.onArrayBegin);
      const m = l(t.onArrayEnd);
      const I = c(t.onLiteralValue);
      const E = A(t.onSeparator);
      const y = (_ = t.onComment) ? () => a === 0 && _(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => true;
      const w = A(t.onError);
      var _;
      const v = n && n.disallowComments;
      const b = n && n.allowTrailingComma;
      function B() {
        while (true) {
          const e = o.scan();
          switch (o.getTokenError()) {
            case 4:
              Q(14);
              break;
            case 5:
              Q(15);
              break;
            case 3:
              Q(13);
              break;
            case 1:
              if (!v) {
                Q(11);
              }
              break;
            case 2:
              Q(12);
              break;
            case 6:
              Q(16);
          }
          switch (e) {
            case 12:
            case 13:
              if (v) {
                Q(10);
              } else {
                y();
              }
              break;
            case 16:
              Q(1);
              break;
            case 15:
            case 14:
              break;
            default:
              return e;
          }
        }
      }
      function Q(e, t = [], n = []) {
        w(e);
        if (t.length + n.length > 0) {
          let e = o.getToken();
          while (e !== 17) {
            if (t.indexOf(e) !== -1) {
              B();
              break;
            }
            if (n.indexOf(e) !== -1) {
              break;
            }
            e = B();
          }
        }
      }
      function D(e) {
        const t = o.getTokenValue();
        if (e) {
          I(t);
        } else {
          d(t);
          s.push(t);
        }
        B();
        return true;
      }
      function S() {
        switch (o.getToken()) {
          case 3:
            return function () {
              f();
              B();
              let e = true;
              let t = false;
              while (o.getToken() !== 4 && o.getToken() !== 17) {
                if (o.getToken() === 5) {
                  if (!t) {
                    Q(4, [], []);
                  }
                  E(',');
                  B();
                  if (o.getToken() === 4 && b) {
                    break;
                  }
                } else {
                  if (t) {
                    Q(6, [], []);
                  }
                }
                if (e) {
                  s.push(0);
                  e = false;
                } else {
                  s[s.length - 1]++;
                }
                if (!S()) {
                  Q(4, [], [4, 5]);
                }
                t = true;
              }
              m();
              if (!e) {
                s.pop();
              }
              if (o.getToken() !== 4) {
                Q(8, [4], []);
              } else {
                B();
              }
              return true;
            }();
          case 1:
            return function () {
              g();
              B();
              let e = false;
              while (o.getToken() !== 2 && o.getToken() !== 17) {
                if (o.getToken() === 5) {
                  if (!e) {
                    Q(4, [], []);
                  }
                  E(',');
                  B();
                  if (o.getToken() === 2 && b) {
                    break;
                  }
                } else {
                  if (e) {
                    Q(6, [], []);
                  }
                }
                if (!(o.getToken() !== 10 ? (Q(3, [], [2, 5]), 0) : (D(false), o.getToken() === 6 ? (E(':'), B(), S() || Q(4, [], [2, 5])) : Q(5, [], [2, 5]), s.pop(), 1))) {
                  Q(4, [], [2, 5]);
                }
                e = true;
              }
              h();
              if (o.getToken() !== 2) {
                Q(7, [2], []);
              } else {
                B();
              }
              return true;
            }();
          case 10:
            return D(true);
          default:
            return function () {
              switch (o.getToken()) {
                case 11:
                  const e = o.getTokenValue();
                  let t = Number(e);
                  if (isNaN(t)) {
                    Q(2);
                    t = 0;
                  }
                  I(t);
                  break;
                case 7:
                  I(null);
                  break;
                case 8:
                  I(true);
                  break;
                case 9:
                  I(false);
                  break;
                default:
                  return false;
              }
              B();
              return true;
            }();
        }
      }
      B();
      if (o.getToken() === 17) {
        return !!n.allowEmptyContent || (Q(4, [], []), false);
      } else {
        if (S()) {
          if (o.getToken() !== 17) {
            Q(9, [], []);
          }
          return true;
        } else {
          Q(4, [], []);
          return false;
        }
      }
    }
    function y(e) {
      switch (typeof e) {
        case 'boolean':
          return 'boolean';
        case 'number':
          return 'number';
        case 'string':
          return 'string';
        case 'object':
          if (e) {
            if (Array.isArray(e)) {
              return 'array';
            } else {
              return 'object';
            }
          } else {
            return 'null';
          }
        default:
          return 'null';
      }
    }
    function w(e, t, n, r) {
      const o = t.slice();
      const s = m(e, []);
      let a;
      let A;
      while (o.length > 0 && (A = o.pop(), a = I(s, o), a === undefined && n !== undefined)) {
        n = typeof A == 'string' ? {
          [A]: n
        } : [n];
      }
      if (a) {
        if (a.type === 'object' && typeof A == 'string' && Array.isArray(a.children)) {
          const t = I(a, [A]);
          if (t !== undefined) {
            if (n === undefined) {
              if (!t.parent) {
                throw new Error('Malformed AST');
              }
              const n = a.children.indexOf(t.parent);
              let o;
              let s = t.parent.offset + t.parent.length;
              if (n > 0) {
                let e = a.children[n - 1];
                o = e.offset + e.length;
              } else {
                o = a.offset + 1;
                if (a.children.length > 1) {
                  s = a.children[1].offset;
                }
              }
              return _(e, {
                offset: o,
                length: s - o,
                content: ''
              }, r);
            }
            return _(e, {
              offset: t.offset,
              length: t.length,
              content: JSON.stringify(n)
            }, r);
          }
          {
            if (n === undefined) {
              return [];
            }
            const t = `${JSON.stringify(A)}: ${JSON.stringify(n)}`;
            const o = r.getInsertionIndex ? r.getInsertionIndex(a.children.map(e => e.children[0].value)) : a.children.length;
            let s;
            if (o > 0) {
              let e = a.children[o - 1];
              s = {
                offset: e.offset + e.length,
                length: 0,
                content: `,${t}`
              };
            } else {
              s = a.children.length === 0 ? {
                offset: a.offset + 1,
                length: 0,
                content: t
              } : {
                offset: a.offset + 1,
                length: 0,
                content: t + ','
              };
            }
            return _(e, s, r);
          }
        }
        if (a.type === 'array' && typeof A == 'number' && Array.isArray(a.children)) {
          const t = A;
          if (t === -1) {
            const t = `${JSON.stringify(n)}`;
            let o;
            if (a.children.length === 0) {
              o = {
                offset: a.offset + 1,
                length: 0,
                content: t
              };
            } else {
              const e = a.children[a.children.length - 1];
              o = {
                offset: e.offset + e.length,
                length: 0,
                content: `,${t}`
              };
            }
            return _(e, o, r);
          }
          if (n === undefined && a.children.length >= 0) {
            const t = A;
            const n = a.children[t];
            let o;
            if (a.children.length === 1) {
              o = {
                offset: a.offset + 1,
                length: a.length - 2,
                content: ''
              };
            } else {
              if (a.children.length - 1 === t) {
                let e = a.children[t - 1];
                let n = e.offset + e.length;
                o = {
                  offset: n,
                  length: a.offset + a.length - 2 - n,
                  content: ''
                };
              } else {
                o = {
                  offset: n.offset,
                  length: a.children[t + 1].offset - n.offset,
                  content: ''
                };
              }
            }
            return _(e, o, r);
          }
          if (n !== undefined) {
            let t;
            const o = `${JSON.stringify(n)}`;
            if (!r.isArrayInsertion && a.children.length > A) {
              const e = a.children[A];
              t = {
                offset: e.offset,
                length: e.length,
                content: o
              };
            } else {
              if (a.children.length === 0 || A === 0) {
                t = {
                  offset: a.offset + 1,
                  length: 0,
                  content: a.children.length === 0 ? o : o + ','
                };
              } else {
                const e = A > a.children.length ? a.children.length : A;
                const n = a.children[e - 1];
                t = {
                  offset: n.offset + n.length,
                  length: 0,
                  content: `,${o}`
                };
              }
            }
            return _(e, t, r);
          }
          throw new Error(`Can not ${n === undefined ? 'remove' : r.isArrayInsertion ? 'insert' : 'modify'} Array index ${t} as length is not sufficient`);
        }
        throw new Error(`Can not add ${typeof A != 'number' ? 'index' : 'property'} to parent of type ${a.type}`);
      }
      if (n === undefined) {
        throw new Error('Can not delete in empty document');
      }
      return _(e, {
        offset: s ? s.offset : 0,
        length: s ? s.length : 0,
        content: JSON.stringify(n)
      }, r);
    }
    function _(e, t, n) {
      if (!n.formattingOptions) {
        return [t];
      }
      let r = v(e, t);
      let o = t.offset;
      let s = t.offset + t.content.length;
      if (t.length === 0 || t.content.length === 0) {
        while (o > 0 && !f(r, o - 1)) {
          o--;
        }
        while (s < r.length && !f(r, s)) {
          s++;
        }
      }
      const a = d(r, {
        offset: o,
        length: s - o
      }, {
        ...n.formattingOptions,
        keepLines: false
      });
      for (let e = a.length - 1; e >= 0; e--) {
        const t = a[e];
        r = v(r, t);
        o = Math.min(o, t.offset);
        s = Math.max(s, t.offset + t.length);
        s += t.content.length - t.length;
      }
      return [{
        offset: o,
        length: e.length - (r.length - s) - o,
        content: r.substring(o, s)
      }];
    }
    function v(e, t) {
      return e.substring(0, t.offset) + t.content + e.substring(t.offset + t.length);
    }
    (function (e) {
      e.DEFAULT = {
        allowTrailingComma: false
      };
    })(p ||= {});
    const b = r;
    var B;
    var Q;
    (function (e) {
      e[e.None = 0] = 'None';
      e[e.UnexpectedEndOfComment = 1] = 'UnexpectedEndOfComment';
      e[e.UnexpectedEndOfString = 2] = 'UnexpectedEndOfString';
      e[e.UnexpectedEndOfNumber = 3] = 'UnexpectedEndOfNumber';
      e[e.InvalidUnicode = 4] = 'InvalidUnicode';
      e[e.InvalidEscapeCharacter = 5] = 'InvalidEscapeCharacter';
      e[e.InvalidCharacter = 6] = 'InvalidCharacter';
    })(B ||= {});
    (function (e) {
      e[e.OpenBraceToken = 1] = 'OpenBraceToken';
      e[e.CloseBraceToken = 2] = 'CloseBraceToken';
      e[e.OpenBracketToken = 3] = 'OpenBracketToken';
      e[e.CloseBracketToken = 4] = 'CloseBracketToken';
      e[e.CommaToken = 5] = 'CommaToken';
      e[e.ColonToken = 6] = 'ColonToken';
      e[e.NullKeyword = 7] = 'NullKeyword';
      e[e.TrueKeyword = 8] = 'TrueKeyword';
      e[e.FalseKeyword = 9] = 'FalseKeyword';
      e[e.StringLiteral = 10] = 'StringLiteral';
      e[e.NumericLiteral = 11] = 'NumericLiteral';
      e[e.LineCommentTrivia = 12] = 'LineCommentTrivia';
      e[e.BlockCommentTrivia = 13] = 'BlockCommentTrivia';
      e[e.LineBreakTrivia = 14] = 'LineBreakTrivia';
      e[e.Trivia = 15] = 'Trivia';
      e[e.Unknown = 16] = 'Unknown';
      e[e.EOF = 17] = 'EOF';
    })(Q ||= {});
    const D = function (e, t) {
      const n = [];
      const r = new Object();
      let o;
      const s = {
        value: {},
        offset: 0,
        length: 0,
        type: 'object',
        parent: undefined
      };
      let a = false;
      function A(e, t, n, r) {
        s.value = e;
        s.offset = t;
        s.length = n;
        s.type = r;
        s.colonOffset = undefined;
        o = s;
      }
      try {
        E(e, {
          onObjectBegin: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            a = t > e;
            n.push('');
          },
          onObjectProperty: (e, o, s) => {
            if (t < o) {
              throw r;
            }
            A(e, o, s, 'property');
            n[n.length - 1] = e;
            if (t <= o + s) {
              throw r;
            }
          },
          onObjectEnd: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.pop();
          },
          onArrayBegin: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.push(0);
          },
          onArrayEnd: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.pop();
          },
          onLiteralValue: (e, n, o) => {
            if (t < n) {
              throw r;
            }
            A(e, n, o, y(e));
            if (t <= n + o) {
              throw r;
            }
          },
          onSeparator: (e, s, A) => {
            if (t <= s) {
              throw r;
            }
            if (e === ':' && o && o.type === 'property') {
              o.colonOffset = s;
              a = false;
              o = undefined;
            } else {
              if (e === ',') {
                const e = n[n.length - 1];
                if (typeof e == 'number') {
                  n[n.length - 1] = e + 1;
                } else {
                  a = true;
                  n[n.length - 1] = '';
                }
                o = undefined;
              }
            }
          }
        });
      } catch (e) {
        if (e !== r) {
          throw e;
        }
      }
      return {
        path: n,
        previousNode: o,
        isAtPropertyKey: a,
        matches: e => {
          let t = 0;
          for (let r = 0; t < e.length && r < n.length; r++) {
            if (e[t] === n[r] || e[t] === '*') {
              t++;
            } else {
              if (e[t] !== '**') {
                return false;
              }
            }
          }
          return t === e.length;
        }
      };
    };
    const S = function (e, t = [], n = p.DEFAULT) {
      let r = null;
      let o = [];
      const s = [];
      function a(e) {
        if (Array.isArray(o)) {
          o.push(e);
        } else {
          if (r !== null) {
            o[r] = e;
          }
        }
      }
      E(e, {
        onObjectBegin: () => {
          const e = {};
          a(e);
          s.push(o);
          o = e;
          r = null;
        },
        onObjectProperty: e => {
          r = e;
        },
        onObjectEnd: () => {
          o = s.pop();
        },
        onArrayBegin: () => {
          const e = [];
          a(e);
          s.push(o);
          o = e;
          r = null;
        },
        onArrayEnd: () => {
          o = s.pop();
        },
        onLiteralValue: a,
        onError: (e, n, r) => {
          t.push({
            error: e,
            offset: n,
            length: r
          });
        }
      }, n);
      return o[0];
    };
    const T = m;
    const R = I;
    const k = function e(t, n, r = false) {
      if (function (e, t, n = false) {
        return t >= e.offset && t < e.offset + e.length || n && t === e.offset + e.length;
      }(t, n, r)) {
        const o = t.children;
        if (Array.isArray(o)) {
          for (let t = 0; t < o.length && o[t].offset <= n; t++) {
            const s = e(o[t], n, r);
            if (s) {
              return s;
            }
          }
        }
        return t;
      }
    };
    const x = function e(t) {
      if (!t.parent || !t.parent.children) {
        return [];
      }
      const n = e(t.parent);
      if (t.parent.type === 'property') {
        const e = t.parent.children[0].value;
        n.push(e);
      } else {
        if (t.parent.type === 'array') {
          const e = t.parent.children.indexOf(t);
          if (e !== -1) {
            n.push(e);
          }
        }
      }
      return n;
    };
    const P = function e(t) {
      switch (t.type) {
        case 'array':
          return t.children.map(e);
        case 'object':
          const n = Object.create(null);
          for (let r of t.children) {
            const t = r.children[1];
            if (t) {
              n[r.children[0].value] = e(t);
            }
          }
          return n;
        case 'null':
        case 'string':
        case 'number':
        case 'boolean':
          return t.value;
        default:
          return;
      }
    };
    const F = E;
    const M = function (e, t) {
      let n;
      let o;
      let s = r(e);
      let a = [];
      let A = 0;
      do {
        o = s.getPosition();
        n = s.scan();
        switch (n) {
          case 12:
          case 13:
          case 17:
            if (A !== o) {
              a.push(e.substring(A, o));
            }
            if (t !== undefined) {
              a.push(s.getTokenValue().replace(/[^\r\n]/g, t));
            }
            A = s.getPosition();
        }
      } while (n !== 17);
      return a.join('');
    };
    var O;
    function N(e) {
      switch (e) {
        case 1:
          return 'InvalidSymbol';
        case 2:
          return 'InvalidNumberFormat';
        case 3:
          return 'PropertyNameExpected';
        case 4:
          return 'ValueExpected';
        case 5:
          return 'ColonExpected';
        case 6:
          return 'CommaExpected';
        case 7:
          return 'CloseBraceExpected';
        case 8:
          return 'CloseBracketExpected';
        case 9:
          return 'EndOfFileExpected';
        case 10:
          return 'InvalidCommentToken';
        case 11:
          return 'UnexpectedEndOfComment';
        case 12:
          return 'UnexpectedEndOfString';
        case 13:
          return 'UnexpectedEndOfNumber';
        case 14:
          return 'InvalidUnicode';
        case 15:
          return 'InvalidEscapeCharacter';
        case 16:
          return 'InvalidCharacter';
      }
      return '<unknown ParseErrorCode>';
    }
    function L(e, t, n) {
      return d(e, t, n);
    }
    function K(e, t, n, r) {
      return w(e, t, n, r);
    }
    function U(e, t) {
      let n = t.slice(0).sort((e, t) => {
        const n = e.offset - t.offset;
        if (n === 0) {
          return e.length - t.length;
        } else {
          return n;
        }
      });
      let r = e.length;
      for (let t = n.length - 1; t >= 0; t--) {
        let o = n[t];
        if (!(o.offset + o.length <= r)) {
          throw new Error('Overlapping edit');
        }
        e = v(e, o);
        r = o.offset;
      }
      return e;
    }
    (function (e) {
      e[e.InvalidSymbol = 1] = 'InvalidSymbol';
      e[e.InvalidNumberFormat = 2] = 'InvalidNumberFormat';
      e[e.PropertyNameExpected = 3] = 'PropertyNameExpected';
      e[e.ValueExpected = 4] = 'ValueExpected';
      e[e.ColonExpected = 5] = 'ColonExpected';
      e[e.CommaExpected = 6] = 'CommaExpected';
      e[e.CloseBraceExpected = 7] = 'CloseBraceExpected';
      e[e.CloseBracketExpected = 8] = 'CloseBracketExpected';
      e[e.EndOfFileExpected = 9] = 'EndOfFileExpected';
      e[e.InvalidCommentToken = 10] = 'InvalidCommentToken';
      e[e.UnexpectedEndOfComment = 11] = 'UnexpectedEndOfComment';
      e[e.UnexpectedEndOfString = 12] = 'UnexpectedEndOfString';
      e[e.UnexpectedEndOfNumber = 13] = 'UnexpectedEndOfNumber';
      e[e.InvalidUnicode = 14] = 'InvalidUnicode';
      e[e.InvalidEscapeCharacter = 15] = 'InvalidEscapeCharacter';
      e[e.InvalidCharacter = 16] = 'InvalidCharacter';
    })(O ||= {});
  },
  44653: module => {
    "use strict";

    const t = [];
    const n = [];
    const r = (e, r) => {
      if (e === r) {
        return 0;
      }
      const o = e;
      if (e.length > r.length) {
        e = r;
        r = o;
      }
      let s = e.length;
      let a = r.length;
      while (s > 0 && e.charCodeAt(~-s) === r.charCodeAt(~-a)) {
        s--;
        a--;
      }
      let A;
      let c;
      let u;
      let l;
      let g = 0;
      while (g < s && e.charCodeAt(g) === r.charCodeAt(g)) {
        g++;
      }
      s -= g;
      a -= g;
      if (s === 0) {
        return a;
      }
      let d = 0;
      let h = 0;
      while (d < s) {
        n[d] = e.charCodeAt(g + d);
        t[d] = ++d;
      }
      while (h < a) {
        A = r.charCodeAt(g + h);
        u = h++;
        c = h;
        d = 0;
        for (; d < s; d++) {
          l = A === n[d] ? u : u + 1;
          u = t[d];
          c = t[d] = u > c ? l > c ? c + 1 : l : l > u ? u + 1 : l;
        }
      }
      return c;
    };
    module.exports = r;
    module.exports.default = r;
  },
  73527: (module, exports, require) => {
    module = require.nmd(module);
    var r;
    var o = require(86239).SourceMapConsumer;
    var s = require(16928);
    try {
      if (!(r = require(79896)).existsSync || !r.readFileSync) {
        r = null;
      }
    } catch (e) {}
    var a = require(944);
    function A(e, t) {
      return e.require(t);
    }
    var c = false;
    var u = false;
    var l = false;
    var g = 'auto';
    var d = {};
    var h = {};
    var f = /^data:application\/json[^,]+base64,/;
    var p = [];
    var m = [];
    function I() {
      return g === 'browser' || g !== 'node' && typeof window != 'undefined' && typeof XMLHttpRequest == 'function' && (!window.require || !window.module || !window.process || window.process.type !== 'renderer');
    }
    function E(e) {
      return function (t) {
        for (var n = 0; n < e.length; n++) {
          var r = e[n](t);
          if (r) {
            return r;
          }
        }
        return null;
      };
    }
    var y = E(p);
    function w(e, t) {
      if (!e) {
        return t;
      }
      var n = s.dirname(e);
      var r = /^\w+:\/\/[^\/]*/.exec(n);
      var o = r ? r[0] : '';
      var a = n.slice(o.length);
      if (o && /^\/\w\:/.test(a)) {
        return (o += '/') + s.resolve(n.slice(o.length), t).replace(/\\/g, '/');
      } else {
        return o + s.resolve(n.slice(o.length), t);
      }
    }
    p.push(function (e) {
      e = e.trim();
      if (/^file:/.test(e)) {
        e = e.replace(/file:\/\/\/(\w:)?/, function (e, t) {
          if (t) {
            return '';
          } else {
            return '/';
          }
        });
      }
      if (e in d) {
        return d[e];
      }
      var t = '';
      try {
        if (r) {
          if (r.existsSync(e)) {
            t = r.readFileSync(e, 'utf8');
          }
        } else {
          var n = new XMLHttpRequest();
          n.open('GET', e, false);
          n.send(null);
          if (n.readyState === 4 && n.status === 200) {
            t = n.responseText;
          }
        }
      } catch (e) {}
      return d[e] = t;
    });
    var _ = E(m);
    function v(e) {
      var t = h[e.source];
      if (!t) {
        var n = _(e.source);
        if (n) {
          if ((t = h[e.source] = {
            url: n.url,
            map: new o(n.map)
          }).map.sourcesContent) {
            t.map.sources.forEach(function (e, n) {
              var r = t.map.sourcesContent[n];
              if (r) {
                var o = w(t.url, e);
                d[o] = r;
              }
            });
          }
        } else {
          t = h[e.source] = {
            url: null,
            map: null
          };
        }
      }
      if (t && t.map && typeof t.map.originalPositionFor == 'function') {
        var r = t.map.originalPositionFor(e);
        if (r.source !== null) {
          r.source = w(t.url, r.source);
          return r;
        }
      }
      return e;
    }
    function b(e) {
      var t = /^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(e);
      if (t) {
        var n = v({
          source: t[2],
          line: +t[3],
          column: t[4] - 1
        });
        return `eval at ${t[1]} (${n.source}:${n.line}:${n.column + 1})`;
      }
      if (t = /^eval at ([^(]+) \((.+)\)$/.exec(e)) {
        return `eval at ${t[1]} (${b(t[2])})`;
      } else {
        return e;
      }
    }
    function B() {
      var e;
      var t = '';
      if (this.isNative()) {
        t = 'native';
      } else {
        if (!(e = this.getScriptNameOrSourceURL()) && this.isEval()) {
          t = this.getEvalOrigin();
          t += ', ';
        }
        t += e || '<anonymous>';
        var n = this.getLineNumber();
        if (n != null) {
          t += `:${n}`;
          var r = this.getColumnNumber();
          if (r) {
            t += `:${r}`;
          }
        }
      }
      var o = '';
      var s = this.getFunctionName();
      var a = true;
      var A = this.isConstructor();
      if (!this.isToplevel() && !A) {
        var c = this.getTypeName();
        if (c === '[object Object]') {
          c = 'null';
        }
        var u = this.getMethodName();
        if (s) {
          if (c && s.indexOf(c) != 0) {
            o += c + '.';
          }
          o += s;
          if (u && s.indexOf(`.${u}`) != s.length - u.length - 1) {
            o += ` [as ${u}]`;
          }
        } else {
          o += c + '.' + (u || '<anonymous>');
        }
      } else {
        if (A) {
          o += `new ${s || '<anonymous>'}`;
        } else {
          if (s) {
            o += s;
          } else {
            o += t;
            a = false;
          }
        }
      }
      if (a) {
        o += ` (${t})`;
      }
      return o;
    }
    function Q(e) {
      var t = {};
      Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach(function (n) {
        t[n] = /^(?:is|get)/.test(n) ? function () {
          return e[n].call(e);
        } : e[n];
      });
      t.toString = B;
      return t;
    }
    function D(e, t = {
      nextPosition: null,
      curPosition: null
    }) {
      if (e.isNative()) {
        t.curPosition = null;
        return e;
      }
      var n = e.getFileName() || e.getScriptNameOrSourceURL();
      if (n) {
        var r = e.getLineNumber();
        var o = e.getColumnNumber() - 1;
        var s = /^v(10\.1[6-9]|10\.[2-9][0-9]|10\.[0-9]{3,}|1[2-9]\d*|[2-9]\d|\d{3,}|11\.11)/.test(typeof process == 'object' && process !== null ? process.version : '') ? 0 : 62;
        if (r === 1 && o > s && !I() && !e.isEval()) {
          o -= s;
        }
        var a = v({
          source: n,
          line: r,
          column: o
        });
        t.curPosition = a;
        var A = (e = Q(e)).getFunctionName;
        e.getFunctionName = function () {
          if (t.nextPosition == null) {
            return A();
          } else {
            return t.nextPosition.name || A();
          }
        };
        e.getFileName = function () {
          return a.source;
        };
        e.getLineNumber = function () {
          return a.line;
        };
        e.getColumnNumber = function () {
          return a.column + 1;
        };
        e.getScriptNameOrSourceURL = function () {
          return a.source;
        };
        return e;
      }
      var c = e.isEval() && e.getEvalOrigin();
      if (c) {
        c = b(c);
        (e = Q(e)).getEvalOrigin = function () {
          return c;
        };
        return e;
      } else {
        return e;
      }
    }
    function S(e, t) {
      if (l) {
        d = {};
        h = {};
      }
      var n = (e.name || 'Error') + ': ' + (e.message || '');
      var r = {
        nextPosition: null,
        curPosition: null
      };
      var o = [];
      for (var s = t.length - 1; s >= 0; s--) {
        o.push(`
    at ${D(t[s], r)}`);
        r.nextPosition = r.curPosition;
      }
      r.curPosition = r.nextPosition = null;
      return n + o.reverse().join('');
    }
    function T(e) {
      var t = /\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(e.stack);
      if (t) {
        var n = t[1];
        var o = +t[2];
        var s = +t[3];
        var a = d[n];
        if (!a && r && r.existsSync(n)) {
          try {
            a = r.readFileSync(n, 'utf8');
          } catch (e) {
            a = '';
          }
        }
        if (a) {
          var A = a.split(/(?:\r\n|\r|\n)/)[o - 1];
          if (A) {
            return n + ':' + o + '\n' + A + '\n' + new Array(s).join(' ') + '^';
          }
        }
      }
      return null;
    }
    function R(e) {
      var t = T(e);
      var n = function () {
        if (typeof process == 'object' && process !== null) {
          return process.stderr;
        }
      }();
      if (n && n._handle && n._handle.setBlocking) {
        n._handle.setBlocking(true);
      }
      if (t) {
        console.error();
        console.error(t);
      }
      console.error(e.stack);
      (function (e) {
        if (typeof process == 'object' && process !== null && typeof process.exit == 'function') {
          process.exit(e);
        }
      })(1);
    }
    m.push(function (e) {
      var t;
      var n = function (e) {
        var t;
        if (I()) {
          try {
            var n = new XMLHttpRequest();
            n.open('GET', e, false);
            n.send(null);
            t = n.readyState === 4 ? n.responseText : null;
            var r = n.getResponseHeader('SourceMap') || n.getResponseHeader('X-SourceMap');
            if (r) {
              return r;
            }
          } catch (e) {}
        }
        t = y(e);
        var o;
        for (var s, a = /(?:\/\/[@#][\s]*sourceMappingURL=([^\s'"]+)[\s]*$)|(?:\/\*[@#][\s]*sourceMappingURL=([^\s*'"]+)[\s]*(?:\*\/)[\s]*$)/gm; s = a.exec(t);) {
          o = s;
        }
        if (o) {
          return o[1];
        } else {
          return null;
        }
      }(e);
      if (!n) {
        return null;
      }
      if (f.test(n)) {
        var r = n.slice(n.indexOf(',') + 1);
        t = a(r, 'base64').toString();
        n = e;
      } else {
        n = w(e, n);
        t = y(n);
      }
      if (t) {
        return {
          url: n,
          map: t
        };
      } else {
        return null;
      }
    });
    var k = p.slice(0);
    var x = m.slice(0);
    exports.wrapCallSite = D;
    exports.getErrorSource = T;
    exports.mapSourcePosition = v;
    exports.retrieveSourceMap = _;
    exports.install = function (t) {
      if ((t = t || {}).environment && (g = t.environment, ['node', 'browser', 'auto'].indexOf(g) === -1)) {
        throw new Error(`environment ${g} was unknown. Available options are {auto, browser, node}`);
      }
      if (t.retrieveFile) {
        if (t.overrideRetrieveFile) {
          p.length = 0;
        }
        p.unshift(t.retrieveFile);
      }
      if (t.retrieveSourceMap) {
        if (t.overrideRetrieveSourceMap) {
          m.length = 0;
        }
        m.unshift(t.retrieveSourceMap);
      }
      if (t.hookRequire && !I()) {
        var n = A(module, 'module');
        var r = n.prototype._compile;
        if (!r.__sourceMapSupport) {
          n.prototype._compile = function (e, t) {
            d[t] = e;
            h[t] = undefined;
            return r.call(this, e, t);
          };
          n.prototype._compile.__sourceMapSupport = true;
        }
      }
      if (!l) {
        l = 'emptyCacheBetweenOperations' in t && t.emptyCacheBetweenOperations;
      }
      if (!c) {
        c = true;
        Error.prepareStackTrace = S;
      }
      if (!u) {
        var o = !('handleUncaughtExceptions' in t) || t.handleUncaughtExceptions;
        try {
          if (A(module, 'worker_threads').isMainThread === false) {
            o = false;
          }
        } catch (e) {}
        if (o && typeof process == 'object' && process !== null && typeof process.on == 'function') {
          u = true;
          s = process.emit;
          process.emit = function (e) {
            if (e === 'uncaughtException') {
              var t = arguments[1] && arguments[1].stack;
              var n = this.listeners(e).length > 0;
              if (t && !n) {
                return R(arguments[1]);
              }
            }
            return s.apply(this, arguments);
          };
        }
      }
      var s;
    };
    exports.resetRetrieveHandlers = function () {
      p.length = 0;
      m.length = 0;
      p = k.slice(0);
      m = x.slice(0);
      _ = E(m);
      y = E(p);
    };
  },
  41149: (module, exports, require) => {
    var r = require(43609);
    var o = Object.prototype.hasOwnProperty;
    var s = typeof Map != 'undefined';
    function a() {
      this._array = [];
      this._set = s ? new Map() : Object.create(null);
    }
    a.fromArray = function (e, t) {
      var n = new a();
      for (var r = 0, o = e.length; r < o; r++) {
        n.add(e[r], t);
      }
      return n;
    };
    a.prototype.size = function () {
      if (s) {
        return this._set.size;
      } else {
        return Object.getOwnPropertyNames(this._set).length;
      }
    };
    a.prototype.add = function (e, t) {
      var n = s ? e : r.toSetString(e);
      var a = s ? this.has(e) : o.call(this._set, n);
      var A = this._array.length;
      if (!a || !!t) {
        this._array.push(e);
      }
      if (!a) {
        if (s) {
          this._set.set(e, A);
        } else {
          this._set[n] = A;
        }
      }
    };
    a.prototype.has = function (e) {
      if (s) {
        return this._set.has(e);
      }
      var t = r.toSetString(e);
      return o.call(this._set, t);
    };
    a.prototype.indexOf = function (e) {
      if (s) {
        var t = this._set.get(e);
        if (t >= 0) {
          return t;
        }
      } else {
        var n = r.toSetString(e);
        if (o.call(this._set, n)) {
          return this._set[n];
        }
      }
      throw new Error(`"${e}" is not in the set.`);
    };
    a.prototype.at = function (e) {
      if (e >= 0 && e < this._array.length) {
        return this._array[e];
      }
      throw new Error(`No element indexed by ${e}`);
    };
    a.prototype.toArray = function () {
      return this._array.slice();
    };
    exports.C = a;
  },
  4538: (module, exports, require) => {
    var r = require(47206);
    exports.encode = function (e) {
      var t;
      var n = '';
      var o = function (e) {
        if (e < 0) {
          return 1 + (-e << 1);
        } else {
          return 0 + (e << 1);
        }
      }(e);
      do {
        t = o & 31;
        if ((o >>>= 5) > 0) {
          t |= 32;
        }
        n += r.encode(t);
      } while (o > 0);
      return n;
    };
    exports.decode = function (e, t, n) {
      var o;
      var s;
      var a;
      var A;
      var c = e.length;
      var u = 0;
      var l = 0;
      do {
        if (t >= c) {
          throw new Error('Expected more digits in base 64 VLQ value.');
        }
        if ((s = r.decode(e.charCodeAt(t++))) === -1) {
          throw new Error(`Invalid base64 digit: ${e.charAt(t - 1)}`);
        }
        o = !!(s & 32);
        u += (s &= 31) << l;
        l += 5;
      } while (o);
      A = (a = u) >> 1;
      n.value = ~a & 1 ? A : -A;
      n.rest = t;
    };
  },
  47206: (module, exports) => {
    var n = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');
    exports.encode = function (e) {
      if (e >= 0 && e < n.length) {
        return n[e];
      }
      throw new TypeError(`Must be between 0 and 63: ${e}`);
    };
    exports.decode = function (e) {
      if (e >= 65 && e <= 90) {
        return e - 65;
      } else {
        if (e >= 97 && e <= 122) {
          return e - 97 + 26;
        } else {
          if (e >= 48 && e <= 57) {
            return e - 48 + 52;
          } else {
            if (e == 43) {
              return 62;
            } else {
              if (e == 47) {
                return 63;
              } else {
                return -1;
              }
            }
          }
        }
      }
    };
  },
  453: (module, exports) => {
    function n(e, r, o, s, a, A) {
      var c = Math.floor((r - e) / 2) + e;
      var u = a(o, s[c], true);
      if (u === 0) {
        return c;
      } else {
        if (u > 0) {
          if (r - c > 1) {
            return n(c, r, o, s, a, A);
          } else {
            if (A == exports.LEAST_UPPER_BOUND) {
              if (r < s.length) {
                return r;
              } else {
                return -1;
              }
            } else {
              return c;
            }
          }
        } else {
          if (c - e > 1) {
            return n(e, c, o, s, a, A);
          } else {
            if (A == exports.LEAST_UPPER_BOUND) {
              return c;
            } else {
              if (e < 0) {
                return -1;
              } else {
                return e;
              }
            }
          }
        }
      }
    }
    exports.GREATEST_LOWER_BOUND = 1;
    exports.LEAST_UPPER_BOUND = 2;
    exports.search = function (e, r, o, s) {
      if (r.length === 0) {
        return -1;
      }
      var a = n(-1, r.length, e, r, o, s || exports.GREATEST_LOWER_BOUND);
      if (a < 0) {
        return -1;
      }
      while (a - 1 >= 0 && o(r[a], r[a - 1], true) === 0) {
        --a;
      }
      return a;
    };
  },
  19256: (module, exports, require) => {
    var r = require(43609);
    function o() {
      this._array = [];
      this._sorted = true;
      this._last = {
        generatedLine: -1,
        generatedColumn: 0
      };
    }
    o.prototype.unsortedForEach = function (e, t) {
      this._array.forEach(e, t);
    };
    o.prototype.add = function (e) {
      var t;
      var n;
      var o;
      var s;
      var a;
      var A;
      t = this._last;
      n = e;
      o = t.generatedLine;
      s = n.generatedLine;
      a = t.generatedColumn;
      A = n.generatedColumn;
      if (s > o || s == o && A >= a || r.compareByGeneratedPositionsInflated(t, n) <= 0) {
        this._last = e;
        this._array.push(e);
      } else {
        this._sorted = false;
        this._array.push(e);
      }
    };
    o.prototype.toArray = function () {
      if (!this._sorted) {
        this._array.sort(r.compareByGeneratedPositionsInflated);
        this._sorted = true;
      }
      return this._array;
    };
    exports.P = o;
  },
  30571: (module, exports) => {
    function n(e, t, n) {
      var r = e[t];
      e[t] = e[n];
      e[n] = r;
    }
    function r(e, t, o, s) {
      if (o < s) {
        var a = o - 1;
        n(e, (l = o, g = s, Math.round(l + Math.random() * (g - l))), s);
        var A = e[s];
        for (var c = o; c < s; c++) {
          if (t(e[c], A) <= 0) {
            n(e, a += 1, c);
          }
        }
        n(e, a + 1, c);
        var u = a + 1;
        r(e, t, o, u - 1);
        r(e, t, u + 1, s);
      }
      var l;
      var g;
    }
    exports.g = function (e, t) {
      r(e, t, 0, e.length - 1);
    };
  },
  91404: (module, exports, require) => {
    var r = require(43609);
    var o = require(453);
    var s = require(41149).C;
    var a = require(4538);
    var A = require(30571).g;
    function c(e, t) {
      var n = e;
      if (typeof e == 'string') {
        n = r.parseSourceMapInput(e);
      }
      if (n.sections != null) {
        return new g(n, t);
      } else {
        return new u(n, t);
      }
    }
    function u(e, t) {
      var n = e;
      if (typeof e == 'string') {
        n = r.parseSourceMapInput(e);
      }
      var o = r.getArg(n, 'version');
      var a = r.getArg(n, 'sources');
      var A = r.getArg(n, 'names', []);
      var c = r.getArg(n, 'sourceRoot', null);
      var u = r.getArg(n, 'sourcesContent', null);
      var l = r.getArg(n, 'mappings');
      var g = r.getArg(n, 'file', null);
      if (o != this._version) {
        throw new Error(`Unsupported version: ${o}`);
      }
      if (c) {
        c = r.normalize(c);
      }
      a = a.map(String).map(r.normalize).map(function (e) {
        if (c && r.isAbsolute(c) && r.isAbsolute(e)) {
          return r.relative(c, e);
        } else {
          return e;
        }
      });
      this._names = s.fromArray(A.map(String), true);
      this._sources = s.fromArray(a, true);
      this._absoluteSources = this._sources.toArray().map(function (e) {
        return r.computeSourceURL(c, e, t);
      });
      this.sourceRoot = c;
      this.sourcesContent = u;
      this._mappings = l;
      this._sourceMapURL = t;
      this.file = g;
    }
    function l() {
      this.generatedLine = 0;
      this.generatedColumn = 0;
      this.source = null;
      this.originalLine = null;
      this.originalColumn = null;
      this.name = null;
    }
    function g(e, t) {
      var n = e;
      if (typeof e == 'string') {
        n = r.parseSourceMapInput(e);
      }
      var o = r.getArg(n, 'version');
      var a = r.getArg(n, 'sections');
      if (o != this._version) {
        throw new Error(`Unsupported version: ${o}`);
      }
      this._sources = new s();
      this._names = new s();
      var A = {
        line: -1,
        column: 0
      };
      this._sections = a.map(function (e) {
        if (e.url) {
          throw new Error('Support for url field in sections not implemented.');
        }
        var n = r.getArg(e, 'offset');
        var o = r.getArg(n, 'line');
        var s = r.getArg(n, 'column');
        if (o < A.line || o === A.line && s < A.column) {
          throw new Error('Section offsets must be ordered and non-overlapping.');
        }
        A = n;
        return {
          generatedOffset: {
            generatedLine: o + 1,
            generatedColumn: s + 1
          },
          consumer: new c(r.getArg(e, 'map'), t)
        };
      });
    }
    c.fromSourceMap = function (e, t) {
      return u.fromSourceMap(e, t);
    };
    c.prototype._version = 3;
    c.prototype.__generatedMappings = null;
    Object.defineProperty(c.prototype, '_generatedMappings', {
      configurable: true,
      enumerable: true,
      get: function () {
        if (!this.__generatedMappings) {
          this._parseMappings(this._mappings, this.sourceRoot);
        }
        return this.__generatedMappings;
      }
    });
    c.prototype.__originalMappings = null;
    Object.defineProperty(c.prototype, '_originalMappings', {
      configurable: true,
      enumerable: true,
      get: function () {
        if (!this.__originalMappings) {
          this._parseMappings(this._mappings, this.sourceRoot);
        }
        return this.__originalMappings;
      }
    });
    c.prototype._charIsMappingSeparator = function (e, t) {
      var n = e.charAt(t);
      return n === ';' || n === ',';
    };
    c.prototype._parseMappings = function (e, t) {
      throw new Error('Subclasses must implement _parseMappings');
    };
    c.GENERATED_ORDER = 1;
    c.ORIGINAL_ORDER = 2;
    c.GREATEST_LOWER_BOUND = 1;
    c.LEAST_UPPER_BOUND = 2;
    c.prototype.eachMapping = function (e, t, n) {
      var o;
      var s = t || null;
      switch (n || c.GENERATED_ORDER) {
        case c.GENERATED_ORDER:
          o = this._generatedMappings;
          break;
        case c.ORIGINAL_ORDER:
          o = this._originalMappings;
          break;
        default:
          throw new Error('Unknown order of iteration.');
      }
      var a = this.sourceRoot;
      o.map(function (e) {
        var t = e.source === null ? null : this._sources.at(e.source);
        return {
          source: t = r.computeSourceURL(a, t, this._sourceMapURL),
          generatedLine: e.generatedLine,
          generatedColumn: e.generatedColumn,
          originalLine: e.originalLine,
          originalColumn: e.originalColumn,
          name: e.name === null ? null : this._names.at(e.name)
        };
      }, this).forEach(e, s);
    };
    c.prototype.allGeneratedPositionsFor = function (e) {
      var t = r.getArg(e, 'line');
      var n = {
        source: r.getArg(e, 'source'),
        originalLine: t,
        originalColumn: r.getArg(e, 'column', 0)
      };
      n.source = this._findSourceIndex(n.source);
      if (n.source < 0) {
        return [];
      }
      var s = [];
      var a = this._findMapping(n, this._originalMappings, 'originalLine', 'originalColumn', r.compareByOriginalPositions, o.LEAST_UPPER_BOUND);
      if (a >= 0) {
        var A = this._originalMappings[a];
        if (e.column === undefined) {
          for (var c = A.originalLine; A && A.originalLine === c;) {
            s.push({
              line: r.getArg(A, 'generatedLine', null),
              column: r.getArg(A, 'generatedColumn', null),
              lastColumn: r.getArg(A, 'lastGeneratedColumn', null)
            });
            A = this._originalMappings[++a];
          }
        } else {
          for (var u = A.originalColumn; A && A.originalLine === t && A.originalColumn == u;) {
            s.push({
              line: r.getArg(A, 'generatedLine', null),
              column: r.getArg(A, 'generatedColumn', null),
              lastColumn: r.getArg(A, 'lastGeneratedColumn', null)
            });
            A = this._originalMappings[++a];
          }
        }
      }
      return s;
    };
    exports.SourceMapConsumer = c;
    u.prototype = Object.create(c.prototype);
    u.prototype.consumer = c;
    u.prototype._findSourceIndex = function (e) {
      var t;
      var n = e;
      if (this.sourceRoot != null) {
        n = r.relative(this.sourceRoot, n);
      }
      if (this._sources.has(n)) {
        return this._sources.indexOf(n);
      }
      for (t = 0; t < this._absoluteSources.length; ++t) {
        if (this._absoluteSources[t] == e) {
          return t;
        }
      }
      return -1;
    };
    u.fromSourceMap = function (e, t) {
      var n = Object.create(u.prototype);
      var o = n._names = s.fromArray(e._names.toArray(), true);
      var a = n._sources = s.fromArray(e._sources.toArray(), true);
      n.sourceRoot = e._sourceRoot;
      n.sourcesContent = e._generateSourcesContent(n._sources.toArray(), n.sourceRoot);
      n.file = e._file;
      n._sourceMapURL = t;
      n._absoluteSources = n._sources.toArray().map(function (e) {
        return r.computeSourceURL(n.sourceRoot, e, t);
      });
      var c = e._mappings.toArray().slice();
      var g = n.__generatedMappings = [];
      var d = n.__originalMappings = [];
      for (var h = 0, f = c.length; h < f; h++) {
        var p = c[h];
        var m = new l();
        m.generatedLine = p.generatedLine;
        m.generatedColumn = p.generatedColumn;
        if (p.source) {
          m.source = a.indexOf(p.source);
          m.originalLine = p.originalLine;
          m.originalColumn = p.originalColumn;
          if (p.name) {
            m.name = o.indexOf(p.name);
          }
          d.push(m);
        }
        g.push(m);
      }
      A(n.__originalMappings, r.compareByOriginalPositions);
      return n;
    };
    u.prototype._version = 3;
    Object.defineProperty(u.prototype, 'sources', {
      get: function () {
        return this._absoluteSources.slice();
      }
    });
    u.prototype._parseMappings = function (e, t) {
      var n;
      var o;
      var s;
      var c;
      var u;
      var g = 1;
      var d = 0;
      for (var h = 0, f = 0, p = 0, m = 0, I = e.length, E = 0, y = {}, w = {}, _ = [], v = []; E < I;) {
        if (e.charAt(E) === ';') {
          g++;
          E++;
          d = 0;
        } else {
          if (e.charAt(E) === ',') {
            E++;
          } else {
            (n = new l()).generatedLine = g;
            c = E;
            for (; c < I && !this._charIsMappingSeparator(e, c); c++);
            if (s = y[o = e.slice(E, c)]) {
              E += o.length;
            } else {
              for (s = []; E < c;) {
                a.decode(e, E, w);
                u = w.value;
                E = w.rest;
                s.push(u);
              }
              if (s.length === 2) {
                throw new Error('Found a source, but no line and column');
              }
              if (s.length === 3) {
                throw new Error('Found a source and line, but no column');
              }
              y[o] = s;
            }
            n.generatedColumn = d + s[0];
            d = n.generatedColumn;
            if (s.length > 1) {
              n.source = p + s[1];
              p += s[1];
              n.originalLine = h + s[2];
              h = n.originalLine;
              n.originalLine += 1;
              n.originalColumn = f + s[3];
              f = n.originalColumn;
              if (s.length > 4) {
                n.name = m + s[4];
                m += s[4];
              }
            }
            v.push(n);
            if (typeof n.originalLine == 'number') {
              _.push(n);
            }
          }
        }
      }
      A(v, r.compareByGeneratedPositionsDeflated);
      this.__generatedMappings = v;
      A(_, r.compareByOriginalPositions);
      this.__originalMappings = _;
    };
    u.prototype._findMapping = function (e, t, n, r, s, a) {
      if (e[n] <= 0) {
        throw new TypeError(`Line must be greater than or equal to 1, got ${e[n]}`);
      }
      if (e[r] < 0) {
        throw new TypeError(`Column must be greater than or equal to 0, got ${e[r]}`);
      }
      return o.search(e, t, s, a);
    };
    u.prototype.computeColumnSpans = function () {
      for (var e = 0; e < this._generatedMappings.length; ++e) {
        var t = this._generatedMappings[e];
        if (e + 1 < this._generatedMappings.length) {
          var n = this._generatedMappings[e + 1];
          if (t.generatedLine === n.generatedLine) {
            t.lastGeneratedColumn = n.generatedColumn - 1;
            continue;
          }
        }
        t.lastGeneratedColumn = Infinity;
      }
    };
    u.prototype.originalPositionFor = function (e) {
      var t = {
        generatedLine: r.getArg(e, 'line'),
        generatedColumn: r.getArg(e, 'column')
      };
      var n = this._findMapping(t, this._generatedMappings, 'generatedLine', 'generatedColumn', r.compareByGeneratedPositionsDeflated, r.getArg(e, 'bias', c.GREATEST_LOWER_BOUND));
      if (n >= 0) {
        var o = this._generatedMappings[n];
        if (o.generatedLine === t.generatedLine) {
          var s = r.getArg(o, 'source', null);
          if (s !== null) {
            s = this._sources.at(s);
            s = r.computeSourceURL(this.sourceRoot, s, this._sourceMapURL);
          }
          var a = r.getArg(o, 'name', null);
          if (a !== null) {
            a = this._names.at(a);
          }
          return {
            source: s,
            line: r.getArg(o, 'originalLine', null),
            column: r.getArg(o, 'originalColumn', null),
            name: a
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    u.prototype.hasContentsOfAllSources = function () {
      return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (e) {
        return e == null;
      });
    };
    u.prototype.sourceContentFor = function (e, t) {
      if (!this.sourcesContent) {
        return null;
      }
      var n = this._findSourceIndex(e);
      if (n >= 0) {
        return this.sourcesContent[n];
      }
      var o;
      var s = e;
      if (this.sourceRoot != null) {
        s = r.relative(this.sourceRoot, s);
      }
      if (this.sourceRoot != null && (o = r.urlParse(this.sourceRoot))) {
        var a = s.replace(/^file:\/\//, '');
        if (o.scheme == 'file' && this._sources.has(a)) {
          return this.sourcesContent[this._sources.indexOf(a)];
        }
        if ((!o.path || o.path == '/') && this._sources.has(`/${s}`)) {
          return this.sourcesContent[this._sources.indexOf(`/${s}`)];
        }
      }
      if (t) {
        return null;
      }
      throw new Error(`"${s}" is not in the SourceMap.`);
    };
    u.prototype.generatedPositionFor = function (e) {
      var t = r.getArg(e, 'source');
      if ((t = this._findSourceIndex(t)) < 0) {
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      }
      var n = {
        source: t,
        originalLine: r.getArg(e, 'line'),
        originalColumn: r.getArg(e, 'column')
      };
      var o = this._findMapping(n, this._originalMappings, 'originalLine', 'originalColumn', r.compareByOriginalPositions, r.getArg(e, 'bias', c.GREATEST_LOWER_BOUND));
      if (o >= 0) {
        var s = this._originalMappings[o];
        if (s.source === n.source) {
          return {
            line: r.getArg(s, 'generatedLine', null),
            column: r.getArg(s, 'generatedColumn', null),
            lastColumn: r.getArg(s, 'lastGeneratedColumn', null)
          };
        }
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    };
    g.prototype = Object.create(c.prototype);
    g.prototype.constructor = c;
    g.prototype._version = 3;
    Object.defineProperty(g.prototype, 'sources', {
      get: function () {
        var e = [];
        for (var t = 0; t < this._sections.length; t++) {
          for (var n = 0; n < this._sections[t].consumer.sources.length; n++) {
            e.push(this._sections[t].consumer.sources[n]);
          }
        }
        return e;
      }
    });
    g.prototype.originalPositionFor = function (e) {
      var t = {
        generatedLine: r.getArg(e, 'line'),
        generatedColumn: r.getArg(e, 'column')
      };
      var n = o.search(t, this._sections, function (e, t) {
        var n = e.generatedLine - t.generatedOffset.generatedLine;
        return n || e.generatedColumn - t.generatedOffset.generatedColumn;
      });
      var s = this._sections[n];
      if (s) {
        return s.consumer.originalPositionFor({
          line: t.generatedLine - (s.generatedOffset.generatedLine - 1),
          column: t.generatedColumn - (s.generatedOffset.generatedLine === t.generatedLine ? s.generatedOffset.generatedColumn - 1 : 0),
          bias: e.bias
        });
      } else {
        return {
          source: null,
          line: null,
          column: null,
          name: null
        };
      }
    };
    g.prototype.hasContentsOfAllSources = function () {
      return this._sections.every(function (e) {
        return e.consumer.hasContentsOfAllSources();
      });
    };
    g.prototype.sourceContentFor = function (e, t) {
      for (var n = 0; n < this._sections.length; n++) {
        var r = this._sections[n].consumer.sourceContentFor(e, true);
        if (r) {
          return r;
        }
      }
      if (t) {
        return null;
      }
      throw new Error(`"${e}" is not in the SourceMap.`);
    };
    g.prototype.generatedPositionFor = function (e) {
      for (var t = 0; t < this._sections.length; t++) {
        var n = this._sections[t];
        if (n.consumer._findSourceIndex(r.getArg(e, 'source')) !== -1) {
          var o = n.consumer.generatedPositionFor(e);
          if (o) {
            return {
              line: o.line + (n.generatedOffset.generatedLine - 1),
              column: o.column + (n.generatedOffset.generatedLine === o.line ? n.generatedOffset.generatedColumn - 1 : 0)
            };
          }
        }
      }
      return {
        line: null,
        column: null
      };
    };
    g.prototype._parseMappings = function (e, t) {
      this.__generatedMappings = [];
      this.__originalMappings = [];
      for (var n = 0; n < this._sections.length; n++) {
        var o = this._sections[n];
        for (var s = o.consumer._generatedMappings, a = 0; a < s.length; a++) {
          var c = s[a];
          var u = o.consumer._sources.at(c.source);
          u = r.computeSourceURL(o.consumer.sourceRoot, u, this._sourceMapURL);
          this._sources.add(u);
          u = this._sources.indexOf(u);
          var l = null;
          if (c.name) {
            l = o.consumer._names.at(c.name);
            this._names.add(l);
            l = this._names.indexOf(l);
          }
          var g = {
            source: u,
            generatedLine: c.generatedLine + (o.generatedOffset.generatedLine - 1),
            generatedColumn: c.generatedColumn + (o.generatedOffset.generatedLine === c.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
            originalLine: c.originalLine,
            originalColumn: c.originalColumn,
            name: l
          };
          this.__generatedMappings.push(g);
          if (typeof g.originalLine == 'number') {
            this.__originalMappings.push(g);
          }
        }
      }
      A(this.__generatedMappings, r.compareByGeneratedPositionsDeflated);
      A(this.__originalMappings, r.compareByOriginalPositions);
    };
  },
  34267: (module, exports, require) => {
    var r = require(4538);
    var o = require(43609);
    var s = require(41149).C;
    var a = require(19256).P;
    function A(e) {
      if (!e) {
        e = {};
      }
      this._file = o.getArg(e, 'file', null);
      this._sourceRoot = o.getArg(e, 'sourceRoot', null);
      this._skipValidation = o.getArg(e, 'skipValidation', false);
      this._sources = new s();
      this._names = new s();
      this._mappings = new a();
      this._sourcesContents = null;
    }
    A.prototype._version = 3;
    A.fromSourceMap = function (e) {
      var t = e.sourceRoot;
      var n = new A({
        file: e.file,
        sourceRoot: t
      });
      e.eachMapping(function (e) {
        var r = {
          generated: {
            line: e.generatedLine,
            column: e.generatedColumn
          }
        };
        if (e.source != null) {
          r.source = e.source;
          if (t != null) {
            r.source = o.relative(t, r.source);
          }
          r.original = {
            line: e.originalLine,
            column: e.originalColumn
          };
          if (e.name != null) {
            r.name = e.name;
          }
        }
        n.addMapping(r);
      });
      e.sources.forEach(function (r) {
        var s = r;
        if (t !== null) {
          s = o.relative(t, r);
        }
        if (!n._sources.has(s)) {
          n._sources.add(s);
        }
        var a = e.sourceContentFor(r);
        if (a != null) {
          n.setSourceContent(r, a);
        }
      });
      return n;
    };
    A.prototype.addMapping = function (e) {
      var t = o.getArg(e, 'generated');
      var n = o.getArg(e, 'original', null);
      var r = o.getArg(e, 'source', null);
      var s = o.getArg(e, 'name', null);
      if (!this._skipValidation) {
        this._validateMapping(t, n, r, s);
      }
      if (r != null) {
        r = String(r);
        if (!this._sources.has(r)) {
          this._sources.add(r);
        }
      }
      if (s != null) {
        s = String(s);
        if (!this._names.has(s)) {
          this._names.add(s);
        }
      }
      this._mappings.add({
        generatedLine: t.line,
        generatedColumn: t.column,
        originalLine: n != null && n.line,
        originalColumn: n != null && n.column,
        source: r,
        name: s
      });
    };
    A.prototype.setSourceContent = function (e, t) {
      var n = e;
      if (this._sourceRoot != null) {
        n = o.relative(this._sourceRoot, n);
      }
      if (t != null) {
        if (!this._sourcesContents) {
          this._sourcesContents = Object.create(null);
        }
        this._sourcesContents[o.toSetString(n)] = t;
      } else {
        if (this._sourcesContents) {
          delete this._sourcesContents[o.toSetString(n)];
          if (Object.keys(this._sourcesContents).length === 0) {
            this._sourcesContents = null;
          }
        }
      }
    };
    A.prototype.applySourceMap = function (e, t, n) {
      var r = t;
      if (t == null) {
        if (e.file == null) {
          throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
        }
        r = e.file;
      }
      var a = this._sourceRoot;
      if (a != null) {
        r = o.relative(a, r);
      }
      var A = new s();
      var c = new s();
      this._mappings.unsortedForEach(function (t) {
        if (t.source === r && t.originalLine != null) {
          var s = e.originalPositionFor({
            line: t.originalLine,
            column: t.originalColumn
          });
          if (s.source != null) {
            t.source = s.source;
            if (n != null) {
              t.source = o.join(n, t.source);
            }
            if (a != null) {
              t.source = o.relative(a, t.source);
            }
            t.originalLine = s.line;
            t.originalColumn = s.column;
            if (s.name != null) {
              t.name = s.name;
            }
          }
        }
        var u = t.source;
        if (u != null && !A.has(u)) {
          A.add(u);
        }
        var l = t.name;
        if (l != null && !c.has(l)) {
          c.add(l);
        }
      }, this);
      this._sources = A;
      this._names = c;
      e.sources.forEach(function (t) {
        var r = e.sourceContentFor(t);
        if (r != null) {
          if (n != null) {
            t = o.join(n, t);
          }
          if (a != null) {
            t = o.relative(a, t);
          }
          this.setSourceContent(t, r);
        }
      }, this);
    };
    A.prototype._validateMapping = function (e, t, n, r) {
      if (t && typeof t.line != 'number' && typeof t.column != 'number') {
        throw new Error('original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.');
      }
      if ((!e || !('line' in e) || !('column' in e) || !(e.line > 0) || !(e.column >= 0) || t || n || r) && (!e || !('line' in e) || !('column' in e) || !t || !('line' in t) || !('column' in t) || !(e.line > 0) || !(e.column >= 0) || !(t.line > 0) || !(t.column >= 0) || !n)) {
        throw new Error(`Invalid mapping: ${JSON.stringify({
          generated: e,
          source: n,
          original: t,
          name: r
        })}`);
      }
    };
    A.prototype._serializeMappings = function () {
      var e;
      var t;
      var n;
      var s;
      var a = 0;
      var A = 1;
      var c = 0;
      var u = 0;
      var l = 0;
      var g = 0;
      var d = '';
      var h = this._mappings.toArray();
      for (var f = 0, p = h.length; f < p; f++) {
        e = '';
        if ((t = h[f]).generatedLine !== A) {
          for (a = 0; t.generatedLine !== A;) {
            e += ';';
            A++;
          }
        } else {
          if (f > 0) {
            if (!o.compareByGeneratedPositionsInflated(t, h[f - 1])) {
              continue;
            }
            e += ',';
          }
        }
        e += r.encode(t.generatedColumn - a);
        a = t.generatedColumn;
        if (t.source != null) {
          s = this._sources.indexOf(t.source);
          e += r.encode(s - g);
          g = s;
          e += r.encode(t.originalLine - 1 - u);
          u = t.originalLine - 1;
          e += r.encode(t.originalColumn - c);
          c = t.originalColumn;
          if (t.name != null) {
            n = this._names.indexOf(t.name);
            e += r.encode(n - l);
            l = n;
          }
        }
        d += e;
      }
      return d;
    };
    A.prototype._generateSourcesContent = function (e, t) {
      return e.map(function (e) {
        if (!this._sourcesContents) {
          return null;
        }
        if (t != null) {
          e = o.relative(t, e);
        }
        var n = o.toSetString(e);
        if (Object.prototype.hasOwnProperty.call(this._sourcesContents, n)) {
          return this._sourcesContents[n];
        } else {
          return null;
        }
      }, this);
    };
    A.prototype.toJSON = function () {
      var e = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      if (this._file != null) {
        e.file = this._file;
      }
      if (this._sourceRoot != null) {
        e.sourceRoot = this._sourceRoot;
      }
      if (this._sourcesContents) {
        e.sourcesContent = this._generateSourcesContent(e.sources, e.sourceRoot);
      }
      return e;
    };
    A.prototype.toString = function () {
      return JSON.stringify(this.toJSON());
    };
    exports.x = A;
  },
  24173: (module, exports, require) => {
    var r = require(34267).x;
    var o = require(43609);
    var s = /(\r?\n)/;
    var a = '$$$isSourceNode$$$';
    function A(e, t, n, r, o) {
      this.children = [];
      this.sourceContents = {};
      this.line = e == null ? null : e;
      this.column = t == null ? null : t;
      this.source = n == null ? null : n;
      this.name = o == null ? null : o;
      this[a] = true;
      if (r != null) {
        this.add(r);
      }
    }
    A.fromStringWithSourceMap = function (e, t, n) {
      var r = new A();
      var a = e.split(s);
      var c = 0;
      function u() {
        return e() + (e() || '');
        function e() {
          if (c < a.length) {
            return a[c++];
          } else {
            return undefined;
          }
        }
      }
      var l = 1;
      var g = 0;
      var d = null;
      t.eachMapping(function (e) {
        if (d !== null) {
          if (!(l < e.generatedLine)) {
            var t = (n = a[c] || '').substr(0, e.generatedColumn - g);
            a[c] = n.substr(e.generatedColumn - g);
            g = e.generatedColumn;
            h(d, t);
            d = e;
            return;
          }
          h(d, u());
          l++;
          g = 0;
        }
        while (l < e.generatedLine) {
          r.add(u());
          l++;
        }
        if (g < e.generatedColumn) {
          var n = a[c] || '';
          r.add(n.substr(0, e.generatedColumn));
          a[c] = n.substr(e.generatedColumn);
          g = e.generatedColumn;
        }
        d = e;
      }, this);
      if (c < a.length) {
        if (d) {
          h(d, u());
        }
        r.add(a.splice(c).join(''));
      }
      t.sources.forEach(function (e) {
        var s = t.sourceContentFor(e);
        if (s != null) {
          if (n != null) {
            e = o.join(n, e);
          }
          r.setSourceContent(e, s);
        }
      });
      return r;
      function h(e, t) {
        if (e === null || e.source === undefined) {
          r.add(t);
        } else {
          var s = n ? o.join(n, e.source) : e.source;
          r.add(new A(e.originalLine, e.originalColumn, s, t, e.name));
        }
      }
    };
    A.prototype.add = function (e) {
      if (Array.isArray(e)) {
        e.forEach(function (e) {
          this.add(e);
        }, this);
      } else {
        if (!e[a] && typeof e != 'string') {
          throw new TypeError(`Expected a SourceNode, string, or an array of SourceNodes and strings. Got ${e}`);
        }
        if (e) {
          this.children.push(e);
        }
      }
      return this;
    };
    A.prototype.prepend = function (e) {
      if (Array.isArray(e)) {
        for (var t = e.length - 1; t >= 0; t--) {
          this.prepend(e[t]);
        }
      } else {
        if (!e[a] && typeof e != 'string') {
          throw new TypeError(`Expected a SourceNode, string, or an array of SourceNodes and strings. Got ${e}`);
        }
        this.children.unshift(e);
      }
      return this;
    };
    A.prototype.walk = function (e) {
      var t;
      for (var n = 0, r = this.children.length; n < r; n++) {
        if ((t = this.children[n])[a]) {
          t.walk(e);
        } else {
          if (t !== '') {
            e(t, {
              source: this.source,
              line: this.line,
              column: this.column,
              name: this.name
            });
          }
        }
      }
    };
    A.prototype.join = function (e) {
      var t;
      var n;
      var r = this.children.length;
      if (r > 0) {
        t = [];
        n = 0;
        for (; n < r - 1; n++) {
          t.push(this.children[n]);
          t.push(e);
        }
        t.push(this.children[n]);
        this.children = t;
      }
      return this;
    };
    A.prototype.replaceRight = function (e, t) {
      var n = this.children[this.children.length - 1];
      if (n[a]) {
        n.replaceRight(e, t);
      } else {
        if (typeof n == 'string') {
          this.children[this.children.length - 1] = n.replace(e, t);
        } else {
          this.children.push(''.replace(e, t));
        }
      }
      return this;
    };
    A.prototype.setSourceContent = function (e, t) {
      this.sourceContents[o.toSetString(e)] = t;
    };
    A.prototype.walkSourceContents = function (e) {
      for (var t = 0, n = this.children.length; t < n; t++) {
        if (this.children[t][a]) {
          this.children[t].walkSourceContents(e);
        }
      }
      var r = Object.keys(this.sourceContents);
      t = 0;
      n = r.length;
      for (; t < n; t++) {
        e(o.fromSetString(r[t]), this.sourceContents[r[t]]);
      }
    };
    A.prototype.toString = function () {
      var e = '';
      this.walk(function (t) {
        e += t;
      });
      return e;
    };
    A.prototype.toStringWithSourceMap = function (e) {
      var t = {
        code: '',
        line: 1,
        column: 0
      };
      var n = new r(e);
      var o = false;
      var s = null;
      var a = null;
      var A = null;
      var c = null;
      this.walk(function (e, r) {
        t.code += e;
        if (r.source !== null && r.line !== null && r.column !== null) {
          if (s !== r.source || a !== r.line || A !== r.column || c !== r.name) {
            n.addMapping({
              source: r.source,
              original: {
                line: r.line,
                column: r.column
              },
              generated: {
                line: t.line,
                column: t.column
              },
              name: r.name
            });
          }
          s = r.source;
          a = r.line;
          A = r.column;
          c = r.name;
          o = true;
        } else {
          if (o) {
            n.addMapping({
              generated: {
                line: t.line,
                column: t.column
              }
            });
            s = null;
            o = false;
          }
        }
        for (var u = 0, l = e.length; u < l; u++) {
          if (e.charCodeAt(u) === 10) {
            t.line++;
            t.column = 0;
            if (u + 1 === l) {
              s = null;
              o = false;
            } else {
              if (o) {
                n.addMapping({
                  source: r.source,
                  original: {
                    line: r.line,
                    column: r.column
                  },
                  generated: {
                    line: t.line,
                    column: t.column
                  },
                  name: r.name
                });
              }
            }
          } else {
            t.column++;
          }
        }
      });
      this.walkSourceContents(function (e, t) {
        n.setSourceContent(e, t);
      });
      return {
        code: t.code,
        map: n
      };
    };
  },
  43609: (module, exports) => {
    exports.getArg = function (e, t, n) {
      if (t in e) {
        return e[t];
      }
      if (arguments.length === 3) {
        return n;
      }
      throw new Error(`"${t}" is a required argument.`);
    };
    var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
    var r = /^data:.+\,.+$/;
    function o(e) {
      var t = e.match(n);
      if (t) {
        return {
          scheme: t[1],
          auth: t[2],
          host: t[3],
          port: t[4],
          path: t[5]
        };
      } else {
        return null;
      }
    }
    function s(e) {
      var t = '';
      if (e.scheme) {
        t += e.scheme + ':';
      }
      t += '//';
      if (e.auth) {
        t += e.auth + '@';
      }
      if (e.host) {
        t += e.host;
      }
      if (e.port) {
        t += `:${e.port}`;
      }
      if (e.path) {
        t += e.path;
      }
      return t;
    }
    function a(e) {
      var n = e;
      var r = o(e);
      if (r) {
        if (!r.path) {
          return e;
        }
        n = r.path;
      }
      var a;
      var A = exports.isAbsolute(n);
      var c = n.split(/\/+/);
      var u = 0;
      for (var l = c.length - 1; l >= 0; l--) {
        if ((a = c[l]) === '.') {
          c.splice(l, 1);
        } else {
          if (a === '..') {
            u++;
          } else {
            if (u > 0) {
              if (a === '') {
                c.splice(l + 1, u);
                u = 0;
              } else {
                c.splice(l, 2);
                u--;
              }
            }
          }
        }
      }
      if ((n = c.join('/')) === '') {
        n = A ? '/' : '.';
      }
      if (r) {
        r.path = n;
        return s(r);
      } else {
        return n;
      }
    }
    function A(e, t) {
      if (e === '') {
        e = '.';
      }
      if (t === '') {
        t = '.';
      }
      var n = o(t);
      var A = o(e);
      if (A) {
        e = A.path || '/';
      }
      if (n && !n.scheme) {
        if (A) {
          n.scheme = A.scheme;
        }
        return s(n);
      }
      if (n || t.match(r)) {
        return t;
      }
      if (A && !A.host && !A.path) {
        A.host = t;
        return s(A);
      }
      var c = t.charAt(0) === '/' ? t : a(e.replace(/\/+$/, '') + '/' + t);
      if (A) {
        A.path = c;
        return s(A);
      } else {
        return c;
      }
    }
    exports.urlParse = o;
    exports.urlGenerate = s;
    exports.normalize = a;
    exports.join = A;
    exports.isAbsolute = function (e) {
      return e.charAt(0) === '/' || n.test(e);
    };
    exports.relative = function (e, t) {
      if (e === '') {
        e = '.';
      }
      e = e.replace(/\/$/, '');
      var n = 0;
      while (t.indexOf(e + '/') !== 0) {
        var r = e.lastIndexOf('/');
        if (r < 0) {
          return t;
        }
        if ((e = e.slice(0, r)).match(/^([^\/]+:\/)?\/*$/)) {
          return t;
        }
        ++n;
      }
      return Array(n + 1).join('../') + t.substr(e.length + 1);
    };
    var c = !('__proto__' in Object.create(null));
    function u(e) {
      return e;
    }
    function l(e) {
      if (!e) {
        return false;
      }
      var t = e.length;
      if (t < 9) {
        return false;
      }
      if (e.charCodeAt(t - 1) !== 95 || e.charCodeAt(t - 2) !== 95 || e.charCodeAt(t - 3) !== 111 || e.charCodeAt(t - 4) !== 116 || e.charCodeAt(t - 5) !== 111 || e.charCodeAt(t - 6) !== 114 || e.charCodeAt(t - 7) !== 112 || e.charCodeAt(t - 8) !== 95 || e.charCodeAt(t - 9) !== 95) {
        return false;
      }
      for (var n = t - 10; n >= 0; n--) {
        if (e.charCodeAt(n) !== 36) {
          return false;
        }
      }
      return true;
    }
    function g(e, t) {
      if (e === t) {
        return 0;
      } else {
        if (e === null) {
          return 1;
        } else {
          if (t === null) {
            return -1;
          } else {
            if (e > t) {
              return 1;
            } else {
              return -1;
            }
          }
        }
      }
    }
    exports.toSetString = c ? u : function (e) {
      if (l(e)) {
        return `\$${e}`;
      } else {
        return e;
      }
    };
    exports.fromSetString = c ? u : function (e) {
      if (l(e)) {
        return e.slice(1);
      } else {
        return e;
      }
    };
    exports.compareByOriginalPositions = function (e, t, n) {
      var r = g(e.source, t.source);
      if (r !== 0 || (r = e.originalLine - t.originalLine) !== 0 || (r = e.originalColumn - t.originalColumn) !== 0 || n || (r = e.generatedColumn - t.generatedColumn) !== 0 || (r = e.generatedLine - t.generatedLine) !== 0) {
        return r;
      } else {
        return g(e.name, t.name);
      }
    };
    exports.compareByGeneratedPositionsDeflated = function (e, t, n) {
      var r = e.generatedLine - t.generatedLine;
      if (r !== 0 || (r = e.generatedColumn - t.generatedColumn) !== 0 || n || (r = g(e.source, t.source)) !== 0 || (r = e.originalLine - t.originalLine) !== 0 || (r = e.originalColumn - t.originalColumn) !== 0) {
        return r;
      } else {
        return g(e.name, t.name);
      }
    };
    exports.compareByGeneratedPositionsInflated = function (e, t) {
      var n = e.generatedLine - t.generatedLine;
      if (n !== 0 || (n = e.generatedColumn - t.generatedColumn) !== 0 || (n = g(e.source, t.source)) !== 0 || (n = e.originalLine - t.originalLine) !== 0 || (n = e.originalColumn - t.originalColumn) !== 0) {
        return n;
      } else {
        return g(e.name, t.name);
      }
    };
    exports.parseSourceMapInput = function (e) {
      return JSON.parse(e.replace(/^\)]}'[^\n]*\n/, ''));
    };
    exports.computeSourceURL = function (e, t, n) {
      t = t || '';
      if (e) {
        if (e[e.length - 1] !== '/' && t[0] !== '/') {
          e += '/';
        }
        t = e + t;
      }
      if (n) {
        var r = o(n);
        if (!r) {
          throw new Error('sourceMapURL could not be parsed');
        }
        if (r.path) {
          var c = r.path.lastIndexOf('/');
          if (c >= 0) {
            r.path = r.path.substring(0, c + 1);
          }
        }
        t = A(s(r), t);
      }
      return a(t);
    };
  },
  86239: (module, exports, require) => {
    require(34267).x;
    exports.SourceMapConsumer = require(91404).SourceMapConsumer;
    require(24173);
  },
  57417: (module, exports, require) => {
    const r = require(79896);
    const o = require(70857);
    const s = require(16928);
    const a = require(76982);
    const A = {
      fs: r.constants,
      os: o.constants
    };
    const c = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
    const u = /XXXXXX/;
    const l = (A.O_CREAT || A.fs.O_CREAT) | (A.O_EXCL || A.fs.O_EXCL) | (A.O_RDWR || A.fs.O_RDWR);
    const g = o.platform() === 'win32';
    const d = A.EBADF || A.os.errno.EBADF;
    const h = A.ENOENT || A.os.errno.ENOENT;
    const f = [];
    const p = r.rmdirSync.bind(r);
    let m = false;
    function I(e, t) {
      return r.rm(e, {
        recursive: true
      }, t);
    }
    function E(e) {
      return r.rmSync(e, {
        recursive: true
      });
    }
    function y(e, t) {
      const n = T(e, t);
      const o = n[0];
      const s = n[1];
      try {
        k(o);
      } catch (e) {
        return s(e);
      }
      let a = o.tries;
      (function e() {
        try {
          const t = R(o);
          r.stat(t, function (n) {
            if (!n) {
              if (a-- > 0) {
                return e();
              } else {
                return s(new Error(`Could not get a unique tmp filename, max tries reached ${t}`));
              }
            }
            s(null, t);
          });
        } catch (e) {
          s(e);
        }
      })();
    }
    function w(e) {
      const t = T(e)[0];
      k(t);
      let n = t.tries;
      do {
        const e = R(t);
        try {
          r.statSync(e);
        } catch (t) {
          return e;
        }
      } while (n-- > 0);
      throw new Error('Could not get a unique tmp filename, max tries reached');
    }
    function _(e, t) {
      const n = function (e) {
        if (e && !F(e)) {
          return t(e);
        }
        t();
      };
      if (e[0] >= 0) {
        r.close(e[0], function () {
          r.unlink(e[1], n);
        });
      } else {
        r.unlink(e[1], n);
      }
    }
    function v(e) {
      let t = null;
      try {
        if (e[0] >= 0) {
          r.closeSync(e[0]);
        }
      } catch (e) {
        if (!(n = e, M(n, -d, 'EBADF') || F(e))) {
          throw e;
        }
      } finally {
        try {
          r.unlinkSync(e[1]);
        } catch (e) {
          if (!F(e)) {
            t = e;
          }
        }
      }
      var n;
      if (t !== null) {
        throw t;
      }
    }
    function b(e, t, n, r) {
      const o = Q(v, [t, e], r);
      const s = Q(_, [t, e], r, o);
      if (!n.keep) {
        f.unshift(o);
      }
      if (r) {
        return o;
      } else {
        return s;
      }
    }
    function B(e, t, n) {
      const o = t.unsafeCleanup ? I : r.rmdir.bind(r);
      const s = Q(t.unsafeCleanup ? E : p, e, n);
      const a = Q(o, e, n, s);
      if (!t.keep) {
        f.unshift(s);
      }
      if (n) {
        return s;
      } else {
        return a;
      }
    }
    function Q(e, t, n, r) {
      let o = false;
      return function s(a) {
        if (!o) {
          const A = r || s;
          const c = f.indexOf(A);
          if (c >= 0) {
            f.splice(c, 1);
          }
          o = true;
          if (n || e === p || e === E) {
            return e(t);
          } else {
            return e(t, a || function () {});
          }
        }
      };
    }
    function D(e) {
      let t = [];
      let n = null;
      try {
        n = a.randomBytes(e);
      } catch (t) {
        n = a.pseudoRandomBytes(e);
      }
      for (var r = 0; r < e; r++) {
        t.push(c[n[r] % 62]);
      }
      return t.join('');
    }
    function S(e) {
      return e === undefined;
    }
    function T(e, t) {
      if (typeof e == 'function') {
        return [{}, e];
      }
      if (S(e)) {
        return [{}, t];
      }
      const n = {};
      for (const t of Object.getOwnPropertyNames(e)) {
        n[t] = e[t];
      }
      return [n, t];
    }
    function R(e) {
      const t = e.tmpdir;
      if (!S(e.name)) {
        return s.join(t, e.dir, e.name);
      }
      if (!S(e.template)) {
        return s.join(t, e.dir, e.template).replace(u, D(6));
      }
      const n = [e.prefix ? e.prefix : 'tmp', '-', process.pid, '-', D(12), e.postfix ? `-${e.postfix}` : ''].join('');
      return s.join(t, e.dir, n);
    }
    function k(e) {
      e.tmpdir = O(e);
      const t = e.tmpdir;
      if (!S(e.name)) {
        P(e.name, 'name', t);
      }
      if (!S(e.dir)) {
        P(e.dir, 'dir', t);
      }
      if (!S(e.template) && (P(e.template, 'template', t), !e.template.match(u))) {
        throw new Error(`Invalid template, found "${e.template}".`);
      }
      if (!S(e.tries) && isNaN(e.tries) || e.tries < 0) {
        throw new Error(`Invalid tries, found "${e.tries}".`);
      }
      var n;
      e.tries = S(e.name) ? e.tries || 3 : 1;
      e.keep = !!e.keep;
      e.detachDescriptor = !!e.detachDescriptor;
      e.discardDescriptor = !!e.discardDescriptor;
      e.unsafeCleanup = !!e.unsafeCleanup;
      e.dir = S(e.dir) ? '' : s.relative(t, x(e.dir, t));
      e.template = S(e.template) ? undefined : s.relative(t, x(e.template, t));
      e.template = (n = e.template) === null || S(n) || !n.trim() ? undefined : s.relative(e.dir, e.template);
      e.name = S(e.name) ? undefined : e.name;
      e.prefix = S(e.prefix) ? '' : e.prefix;
      e.postfix = S(e.postfix) ? '' : e.postfix;
    }
    function x(e, t) {
      if (e.startsWith(t)) {
        return s.resolve(e);
      } else {
        return s.resolve(s.join(t, e));
      }
    }
    function P(e, t, n) {
      if (t === 'name') {
        if (s.isAbsolute(e)) {
          throw new Error(`${t} option must not contain an absolute path, found "${e}".`);
        }
        let n = s.basename(e);
        if (n === '..' || n === '.' || n !== e) {
          throw new Error(`${t} option must not contain a path, found "${e}".`);
        }
      } else {
        if (s.isAbsolute(e) && !e.startsWith(n)) {
          throw new Error(`${t} option must be relative to "${n}", found "${e}".`);
        }
        let r = x(e, n);
        if (!r.startsWith(n)) {
          throw new Error(`${t} option must be relative to "${n}", found "${r}".`);
        }
      }
    }
    function F(e) {
      return M(e, -h, 'ENOENT');
    }
    function M(e, t, n) {
      if (g) {
        return e.code === n;
      } else {
        return e.code === n && e.errno === t;
      }
    }
    function O(e) {
      return s.resolve(e && e.tmpdir || o.tmpdir());
    }
    process.addListener('exit', function () {
      if (m) {
        while (f.length) {
          try {
            f[0]();
          } catch (e) {}
        }
      }
    });
    Object.defineProperty(module.exports, 'tmpdir', {
      enumerable: true,
      configurable: false,
      get: function () {
        return O();
      }
    });
    module.exports.dir = function (e, t) {
      const n = T(e, t);
      const o = n[0];
      const s = n[1];
      y(o, function (e, t) {
        if (e) {
          return s(e);
        }
        r.mkdir(t, o.mode || 448, function (e) {
          if (e) {
            return s(e);
          }
          s(null, t, B(t, o, false));
        });
      });
    };
    module.exports.dirSync = function (e) {
      const t = T(e)[0];
      const n = w(t);
      r.mkdirSync(n, t.mode || 448);
      return {
        name: n,
        removeCallback: B(n, t, true)
      };
    };
    module.exports.file = function (e, t) {
      const n = T(e, t);
      const o = n[0];
      const s = n[1];
      y(o, function (e, t) {
        if (e) {
          return s(e);
        }
        r.open(t, l, o.mode || 384, function (e, n) {
          if (e) {
            return s(e);
          }
          if (o.discardDescriptor) {
            return r.close(n, function (e) {
              return s(e, t, undefined, b(t, -1, o, false));
            });
          }
          {
            const e = o.discardDescriptor || o.detachDescriptor;
            s(null, t, n, b(t, e ? -1 : n, o, false));
          }
        });
      });
    };
    module.exports.fileSync = function (e) {
      const t = T(e)[0];
      const n = t.discardDescriptor || t.detachDescriptor;
      const o = w(t);
      var s = r.openSync(o, l, t.mode || 384);
      if (t.discardDescriptor) {
        r.closeSync(s);
        s = undefined;
      }
      return {
        name: o,
        fd: s,
        removeCallback: b(o, n ? -1 : s, t, true)
      };
    };
    module.exports.tmpName = y;
    module.exports.tmpNameSync = w;
    module.exports.setGracefulCleanup = function () {
      m = true;
    };
  },
  70961: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      __assign: () => s,
      __asyncDelegator: () => w,
      __asyncGenerator: () => y,
      __asyncValues: () => _,
      __await: () => E,
      __awaiter: () => l,
      __classPrivateFieldGet: () => Q,
      __classPrivateFieldSet: () => D,
      __createBinding: () => d,
      __decorate: () => A,
      __exportStar: () => h,
      __extends: () => o,
      __generator: () => g,
      __importDefault: () => B,
      __importStar: () => b,
      __makeTemplateObject: () => v,
      __metadata: () => u,
      __param: () => c,
      __read: () => p,
      __rest: () => a,
      __spread: () => m,
      __spreadArrays: () => I,
      __values: () => f
    });
    function r(e, t) {
      r = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (e, t) {
        e.__proto__ = t;
      } || function (e, t) {
        for (var n in t) {
          if (t.hasOwnProperty(n)) {
            e[n] = t[n];
          }
        }
      };
      return r(e, t);
    }
    function o(e, t) {
      function n() {
        this.constructor = e;
      }
      r(e, t);
      e.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n());
    }
    function s() {
      s = Object.assign || function (e) {
        var t;
        for (var n = 1, r = arguments.length; n < r; n++) {
          for (var o in t = arguments[n]) {
            if (Object.prototype.hasOwnProperty.call(t, o)) {
              e[o] = t[o];
            }
          }
        }
        return e;
      };
      return s.apply(this, arguments);
    }
    function a(e, t) {
      var n = {};
      for (var r in e) {
        if (Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0) {
          n[r] = e[r];
        }
      }
      if (e != null && typeof Object.getOwnPropertySymbols == 'function') {
        var o = 0;
        for (r = Object.getOwnPropertySymbols(e); o < r.length; o++) {
          if (t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o])) {
            n[r[o]] = e[r[o]];
          }
        }
      }
      return n;
    }
    function A(e, t, n, r) {
      var o;
      var s = arguments.length;
      var a = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function') {
        a = Reflect.decorate(e, t, n, r);
      } else {
        for (var A = e.length - 1; A >= 0; A--) {
          if (o = e[A]) {
            a = (s < 3 ? o(a) : s > 3 ? o(t, n, a) : o(t, n)) || a;
          }
        }
      }
      if (s > 3 && a) {
        Object.defineProperty(t, n, a);
      }
      return a;
    }
    function c(e, t) {
      return function (n, r) {
        t(n, r, e);
      };
    }
    function u(e, t) {
      if (typeof Reflect == 'object' && typeof Reflect.metadata == 'function') {
        return Reflect.metadata(e, t);
      }
    }
    function l(e, t, n, r) {
      return new (n ||= Promise)(function (o, s) {
        function a(e) {
          try {
            c(r.next(e));
          } catch (e) {
            s(e);
          }
        }
        function A(e) {
          try {
            c(r.throw(e));
          } catch (e) {
            s(e);
          }
        }
        function c(e) {
          var t;
          if (e.done) {
            o(e.value);
          } else {
            (t = e.value, t instanceof n ? t : new n(function (e) {
              e(t);
            })).then(a, A);
          }
        }
        c((r = r.apply(e, t || [])).next());
      });
    }
    function g(e, t) {
      var n;
      var r;
      var o;
      var s;
      var a = {
        label: 0,
        sent: function () {
          if (o[0] & 1) {
            throw o[1];
          }
          return o[1];
        },
        trys: [],
        ops: []
      };
      s = {
        next: A(0),
        throw: A(1),
        return: A(2)
      };
      if (typeof Symbol == 'function') {
        s[Symbol.iterator] = function () {
          return this;
        };
      }
      return s;
      function A(s) {
        return function (A) {
          return function (s) {
            if (n) {
              throw new TypeError('Generator is already executing.');
            }
            while (a) {
              try {
                n = 1;
                if (r && (o = s[0] & 2 ? r.return : s[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, s[1])).done) {
                  return o;
                }
                r = 0;
                if (o) {
                  s = [s[0] & 2, o.value];
                }
                switch (s[0]) {
                  case 0:
                  case 1:
                    o = s;
                    break;
                  case 4:
                    a.label++;
                    return {
                      value: s[1],
                      done: false
                    };
                  case 5:
                    a.label++;
                    r = s[1];
                    s = [0];
                    continue;
                  case 7:
                    s = a.ops.pop();
                    a.trys.pop();
                    continue;
                  default:
                    if (!(o = a.trys, (o = o.length > 0 && o[o.length - 1]) || s[0] !== 6 && s[0] !== 2)) {
                      a = 0;
                      continue;
                    }
                    if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
                      a.label = s[1];
                      break;
                    }
                    if (s[0] === 6 && a.label < o[1]) {
                      a.label = o[1];
                      o = s;
                      break;
                    }
                    if (o && a.label < o[2]) {
                      a.label = o[2];
                      a.ops.push(s);
                      break;
                    }
                    if (o[2]) {
                      a.ops.pop();
                    }
                    a.trys.pop();
                    continue;
                }
                s = t.call(e, a);
              } catch (e) {
                s = [6, e];
                r = 0;
              } finally {
                n = o = 0;
              }
            }
            if (s[0] & 5) {
              throw s[1];
            }
            return {
              value: s[0] ? s[1] : undefined,
              done: true
            };
          }([s, A]);
        };
      }
    }
    function d(e, t, n, r = n) {
      e[r] = t[n];
    }
    function h(e, t) {
      for (var n in e) {
        if (n !== 'default' && !t.hasOwnProperty(n)) {
          t[n] = e[n];
        }
      }
    }
    function f(e) {
      var t = typeof Symbol == 'function' && Symbol.iterator;
      var n = t && e[t];
      var r = 0;
      if (n) {
        return n.call(e);
      }
      if (e && typeof e.length == 'number') {
        return {
          next: function () {
            if (e && r >= e.length) {
              e = undefined;
            }
            return {
              value: e && e[r++],
              done: !e
            };
          }
        };
      }
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    }
    function p(e, t) {
      var n = typeof Symbol == 'function' && e[Symbol.iterator];
      if (!n) {
        return e;
      }
      var r;
      var o;
      var s = n.call(e);
      var a = [];
      try {
        while ((t === undefined || t-- > 0) && !(r = s.next()).done) {
          a.push(r.value);
        }
      } catch (e) {
        o = {
          error: e
        };
      } finally {
        try {
          if (r && !r.done && (n = s.return)) {
            n.call(s);
          }
        } finally {
          if (o) {
            throw o.error;
          }
        }
      }
      return a;
    }
    function m() {
      var e = [];
      for (var t = 0; t < arguments.length; t++) {
        e = e.concat(p(arguments[t]));
      }
      return e;
    }
    function I() {
      var e = 0;
      for (var t = 0, n = arguments.length; t < n; t++) {
        e += arguments[t].length;
      }
      var r = Array(e);
      var o = 0;
      for (t = 0; t < n; t++) {
        var s = arguments[t];
        for (var a = 0, A = s.length; a < A; a++, o++) {
          r[o] = s[a];
        }
      }
      return r;
    }
    function E(e) {
      if (this instanceof E) {
        this.v = e;
        return this;
      } else {
        return new E(e);
      }
    }
    function y(e, t, n) {
      if (!Symbol.asyncIterator) {
        throw new TypeError('Symbol.asyncIterator is not defined.');
      }
      var r;
      var o = n.apply(e, t || []);
      var s = [];
      r = {};
      a('next');
      a('throw');
      a('return');
      r[Symbol.asyncIterator] = function () {
        return this;
      };
      return r;
      function a(e) {
        if (o[e]) {
          r[e] = function (t) {
            return new Promise(function (n, r) {
              if (!(s.push([e, t, n, r]) > 1)) {
                A(e, t);
              }
            });
          };
        }
      }
      function A(e, t) {
        try {
          if ((n = o[e](t)).value instanceof E) {
            Promise.resolve(n.value.v).then(c, u);
          } else {
            l(s[0][2], n);
          }
        } catch (e) {
          l(s[0][3], e);
        }
        var n;
      }
      function c(e) {
        A('next', e);
      }
      function u(e) {
        A('throw', e);
      }
      function l(e, t) {
        e(t);
        s.shift();
        if (s.length) {
          A(s[0][0], s[0][1]);
        }
      }
    }
    function w(e) {
      var t;
      var n;
      t = {};
      r('next');
      r('throw', function (e) {
        throw e;
      });
      r('return');
      t[Symbol.iterator] = function () {
        return this;
      };
      return t;
      function r(r, o) {
        t[r] = e[r] ? function (t) {
          if (n = !n) {
            return {
              value: E(e[r](t)),
              done: r === 'return'
            };
          } else {
            if (o) {
              return o(t);
            } else {
              return t;
            }
          }
        } : o;
      }
    }
    function _(e) {
      if (!Symbol.asyncIterator) {
        throw new TypeError('Symbol.asyncIterator is not defined.');
      }
      var t;
      var n = e[Symbol.asyncIterator];
      if (n) {
        return n.call(e);
      } else {
        e = f(e);
        t = {};
        r('next');
        r('throw');
        r('return');
        t[Symbol.asyncIterator] = function () {
          return this;
        };
        return t;
      }
      function r(n) {
        t[n] = e[n] && function (t) {
          return new Promise(function (r, o) {
            (function (e, t, n, r) {
              Promise.resolve(r).then(function (t) {
                e({
                  value: t,
                  done: n
                });
              }, t);
            })(r, o, (t = e[n](t)).done, t.value);
          });
        };
      }
    }
    function v(e, t) {
      if (Object.defineProperty) {
        Object.defineProperty(e, 'raw', {
          value: t
        });
      } else {
        e.raw = t;
      }
      return e;
    }
    function b(e) {
      if (e && e.__esModule) {
        return e;
      }
      var t = {};
      if (e != null) {
        for (var n in e) {
          if (Object.hasOwnProperty.call(e, n)) {
            t[n] = e[n];
          }
        }
      }
      t.default = e;
      return t;
    }
    function B(e) {
      if (e && e.__esModule) {
        return e;
      } else {
        return {
          default: e
        };
      }
    }
    function Q(e, t) {
      if (!t.has(e)) {
        throw new TypeError('attempted to get private field on non-instance');
      }
      return t.get(e);
    }
    function D(e, t, n) {
      if (!t.has(e)) {
        throw new TypeError('attempted to set private field on non-instance');
      }
      t.set(e, n);
      return n;
    }
  },
  90355: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = undefined;
    exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.TraceValue = exports.Trace = undefined;
    const o = require(39415);
    Object.defineProperty(exports, 'Message', {
      enumerable: true,
      get: function () {
        return o.Message;
      }
    });
    Object.defineProperty(exports, 'RequestType', {
      enumerable: true,
      get: function () {
        return o.RequestType;
      }
    });
    Object.defineProperty(exports, 'RequestType0', {
      enumerable: true,
      get: function () {
        return o.RequestType0;
      }
    });
    Object.defineProperty(exports, 'RequestType1', {
      enumerable: true,
      get: function () {
        return o.RequestType1;
      }
    });
    Object.defineProperty(exports, 'RequestType2', {
      enumerable: true,
      get: function () {
        return o.RequestType2;
      }
    });
    Object.defineProperty(exports, 'RequestType3', {
      enumerable: true,
      get: function () {
        return o.RequestType3;
      }
    });
    Object.defineProperty(exports, 'RequestType4', {
      enumerable: true,
      get: function () {
        return o.RequestType4;
      }
    });
    Object.defineProperty(exports, 'RequestType5', {
      enumerable: true,
      get: function () {
        return o.RequestType5;
      }
    });
    Object.defineProperty(exports, 'RequestType6', {
      enumerable: true,
      get: function () {
        return o.RequestType6;
      }
    });
    Object.defineProperty(exports, 'RequestType7', {
      enumerable: true,
      get: function () {
        return o.RequestType7;
      }
    });
    Object.defineProperty(exports, 'RequestType8', {
      enumerable: true,
      get: function () {
        return o.RequestType8;
      }
    });
    Object.defineProperty(exports, 'RequestType9', {
      enumerable: true,
      get: function () {
        return o.RequestType9;
      }
    });
    Object.defineProperty(exports, 'ResponseError', {
      enumerable: true,
      get: function () {
        return o.ResponseError;
      }
    });
    Object.defineProperty(exports, 'ErrorCodes', {
      enumerable: true,
      get: function () {
        return o.ErrorCodes;
      }
    });
    Object.defineProperty(exports, 'NotificationType', {
      enumerable: true,
      get: function () {
        return o.NotificationType;
      }
    });
    Object.defineProperty(exports, 'NotificationType0', {
      enumerable: true,
      get: function () {
        return o.NotificationType0;
      }
    });
    Object.defineProperty(exports, 'NotificationType1', {
      enumerable: true,
      get: function () {
        return o.NotificationType1;
      }
    });
    Object.defineProperty(exports, 'NotificationType2', {
      enumerable: true,
      get: function () {
        return o.NotificationType2;
      }
    });
    Object.defineProperty(exports, 'NotificationType3', {
      enumerable: true,
      get: function () {
        return o.NotificationType3;
      }
    });
    Object.defineProperty(exports, 'NotificationType4', {
      enumerable: true,
      get: function () {
        return o.NotificationType4;
      }
    });
    Object.defineProperty(exports, 'NotificationType5', {
      enumerable: true,
      get: function () {
        return o.NotificationType5;
      }
    });
    Object.defineProperty(exports, 'NotificationType6', {
      enumerable: true,
      get: function () {
        return o.NotificationType6;
      }
    });
    Object.defineProperty(exports, 'NotificationType7', {
      enumerable: true,
      get: function () {
        return o.NotificationType7;
      }
    });
    Object.defineProperty(exports, 'NotificationType8', {
      enumerable: true,
      get: function () {
        return o.NotificationType8;
      }
    });
    Object.defineProperty(exports, 'NotificationType9', {
      enumerable: true,
      get: function () {
        return o.NotificationType9;
      }
    });
    Object.defineProperty(exports, 'ParameterStructures', {
      enumerable: true,
      get: function () {
        return o.ParameterStructures;
      }
    });
    const s = require(59746);
    Object.defineProperty(exports, 'LinkedMap', {
      enumerable: true,
      get: function () {
        return s.LinkedMap;
      }
    });
    Object.defineProperty(exports, 'LRUCache', {
      enumerable: true,
      get: function () {
        return s.LRUCache;
      }
    });
    Object.defineProperty(exports, 'Touch', {
      enumerable: true,
      get: function () {
        return s.Touch;
      }
    });
    const a = require(38185);
    Object.defineProperty(exports, 'Disposable', {
      enumerable: true,
      get: function () {
        return a.Disposable;
      }
    });
    const A = require(29982);
    Object.defineProperty(exports, 'Event', {
      enumerable: true,
      get: function () {
        return A.Event;
      }
    });
    Object.defineProperty(exports, 'Emitter', {
      enumerable: true,
      get: function () {
        return A.Emitter;
      }
    });
    const c = require(47644);
    Object.defineProperty(exports, 'CancellationTokenSource', {
      enumerable: true,
      get: function () {
        return c.CancellationTokenSource;
      }
    });
    Object.defineProperty(exports, 'CancellationToken', {
      enumerable: true,
      get: function () {
        return c.CancellationToken;
      }
    });
    const u = require(5402);
    Object.defineProperty(exports, 'SharedArraySenderStrategy', {
      enumerable: true,
      get: function () {
        return u.SharedArraySenderStrategy;
      }
    });
    Object.defineProperty(exports, 'SharedArrayReceiverStrategy', {
      enumerable: true,
      get: function () {
        return u.SharedArrayReceiverStrategy;
      }
    });
    const l = require(46619);
    Object.defineProperty(exports, 'MessageReader', {
      enumerable: true,
      get: function () {
        return l.MessageReader;
      }
    });
    Object.defineProperty(exports, 'AbstractMessageReader', {
      enumerable: true,
      get: function () {
        return l.AbstractMessageReader;
      }
    });
    Object.defineProperty(exports, 'ReadableStreamMessageReader', {
      enumerable: true,
      get: function () {
        return l.ReadableStreamMessageReader;
      }
    });
    const g = require(36491);
    Object.defineProperty(exports, 'MessageWriter', {
      enumerable: true,
      get: function () {
        return g.MessageWriter;
      }
    });
    Object.defineProperty(exports, 'AbstractMessageWriter', {
      enumerable: true,
      get: function () {
        return g.AbstractMessageWriter;
      }
    });
    Object.defineProperty(exports, 'WriteableStreamMessageWriter', {
      enumerable: true,
      get: function () {
        return g.WriteableStreamMessageWriter;
      }
    });
    const d = require(69474);
    Object.defineProperty(exports, 'AbstractMessageBuffer', {
      enumerable: true,
      get: function () {
        return d.AbstractMessageBuffer;
      }
    });
    const h = require(88187);
    Object.defineProperty(exports, 'ConnectionStrategy', {
      enumerable: true,
      get: function () {
        return h.ConnectionStrategy;
      }
    });
    Object.defineProperty(exports, 'ConnectionOptions', {
      enumerable: true,
      get: function () {
        return h.ConnectionOptions;
      }
    });
    Object.defineProperty(exports, 'NullLogger', {
      enumerable: true,
      get: function () {
        return h.NullLogger;
      }
    });
    Object.defineProperty(exports, 'createMessageConnection', {
      enumerable: true,
      get: function () {
        return h.createMessageConnection;
      }
    });
    Object.defineProperty(exports, 'ProgressToken', {
      enumerable: true,
      get: function () {
        return h.ProgressToken;
      }
    });
    Object.defineProperty(exports, 'ProgressType', {
      enumerable: true,
      get: function () {
        return h.ProgressType;
      }
    });
    Object.defineProperty(exports, 'Trace', {
      enumerable: true,
      get: function () {
        return h.Trace;
      }
    });
    Object.defineProperty(exports, 'TraceValue', {
      enumerable: true,
      get: function () {
        return h.TraceValue;
      }
    });
    Object.defineProperty(exports, 'TraceFormat', {
      enumerable: true,
      get: function () {
        return h.TraceFormat;
      }
    });
    Object.defineProperty(exports, 'SetTraceNotification', {
      enumerable: true,
      get: function () {
        return h.SetTraceNotification;
      }
    });
    Object.defineProperty(exports, 'LogTraceNotification', {
      enumerable: true,
      get: function () {
        return h.LogTraceNotification;
      }
    });
    Object.defineProperty(exports, 'ConnectionErrors', {
      enumerable: true,
      get: function () {
        return h.ConnectionErrors;
      }
    });
    Object.defineProperty(exports, 'ConnectionError', {
      enumerable: true,
      get: function () {
        return h.ConnectionError;
      }
    });
    Object.defineProperty(exports, 'CancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'IdCancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.IdCancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'RequestCancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.RequestCancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'CancellationSenderStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationSenderStrategy;
      }
    });
    Object.defineProperty(exports, 'CancellationStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationStrategy;
      }
    });
    Object.defineProperty(exports, 'MessageStrategy', {
      enumerable: true,
      get: function () {
        return h.MessageStrategy;
      }
    });
    Object.defineProperty(exports, 'TraceValues', {
      enumerable: true,
      get: function () {
        return h.TraceValues;
      }
    });
    const f = __importDefault(require(58948));
    exports.RAL = f.default;
  },
  47644: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CancellationTokenSource = exports.CancellationToken = undefined;
    const A = __importDefault(require(58948));
    const c = __importStar(require(97499));
    const u = require(29982);
    var l;
    (function (e) {
      e.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: u.Event.None
      });
      e.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: u.Event.None
      });
      e.is = function (t) {
        const n = t;
        return n && (n === e.None || n === e.Cancelled || c.boolean(n.isCancellationRequested) && !!n.onCancellationRequested);
      };
    })(l || (exports.CancellationToken = l = {}));
    const g = Object.freeze(function (e, t) {
      const n = A.default().timer.setTimeout(e.bind(t), 0);
      return {
        dispose() {
          n.dispose();
        }
      };
    });
    class d {
      _isCancelled = false;
      _emitter;
      cancel() {
        if (!this._isCancelled) {
          this._isCancelled = true;
          if (this._emitter) {
            this._emitter.fire(undefined);
            this.dispose();
          }
        }
      }
      get isCancellationRequested() {
        return this._isCancelled;
      }
      get onCancellationRequested() {
        if (this._isCancelled) {
          return g;
        } else {
          if (!this._emitter) {
            this._emitter = new u.Emitter();
          }
          return this._emitter.event;
        }
      }
      dispose() {
        if (this._emitter) {
          this._emitter.dispose();
          this._emitter = undefined;
        }
      }
    }
    exports.CancellationTokenSource = class {
      _token;
      get token() {
        if (!this._token) {
          this._token = new d();
        }
        return this._token;
      }
      cancel() {
        if (this._token) {
          this._token.cancel();
        } else {
          this._token = l.Cancelled;
        }
      }
      dispose() {
        if (this._token) {
          if (this._token instanceof d) {
            this._token.dispose();
          }
        } else {
          this._token = l.None;
        }
      }
    };
  },
  88187: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.TraceValue = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = undefined;
    const A = __importDefault(require(58948));
    const c = __importStar(require(97499));
    const u = require(39415);
    const l = require(59746);
    const g = require(29982);
    const d = require(47644);
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    var v;
    var b;
    var B;
    var Q;
    var D;
    var S;
    var T;
    var R;
    var k;
    var x;
    (function (e) {
      e.type = new u.NotificationType('$/cancelRequest');
    })(h ||= {});
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string' || typeof e == 'number';
      };
    })(f || (exports.ProgressToken = f = {}));
    (function (e) {
      e.type = new u.NotificationType('$/progress');
    })(p ||= {});
    exports.ProgressType = class {
      __;
      _pr;
      constructor() {}
    };
    (function (e) {
      e.is = function (e) {
        return c.func(e);
      };
    })(m ||= {});
    exports.NullLogger = Object.freeze({
      error: () => {},
      warn: () => {},
      info: () => {},
      log: () => {}
    });
    (function (e) {
      e[e.Off = 0] = 'Off';
      e[e.Messages = 1] = 'Messages';
      e[e.Compact = 2] = 'Compact';
      e[e.Verbose = 3] = 'Verbose';
    })(I || (exports.Trace = I = {}));
    (function (e) {
      e.Off = 'off';
      e.Messages = 'messages';
      e.Compact = 'compact';
      e.Verbose = 'verbose';
    })(E || (exports.TraceValue = E = {}));
    exports.TraceValues = E;
    (function (e) {
      e.fromString = function (t) {
        if (!c.string(t)) {
          return e.Off;
        }
        switch (t = t.toLowerCase()) {
          case 'off':
          default:
            return e.Off;
          case 'messages':
            return e.Messages;
          case 'compact':
            return e.Compact;
          case 'verbose':
            return e.Verbose;
        }
      };
      e.toString = function (t) {
        switch (t) {
          case e.Off:
            return 'off';
          case e.Messages:
            return 'messages';
          case e.Compact:
            return 'compact';
          case e.Verbose:
            return 'verbose';
          default:
            return 'off';
        }
      };
    })(I || (exports.Trace = I = {}));
    (function (e) {
      e.Text = 'text';
      e.JSON = 'json';
    })(y || (exports.TraceFormat = y = {}));
    (function (e) {
      e.fromString = function (t) {
        if (c.string(t) && (t = t.toLowerCase()) === 'json') {
          return e.JSON;
        } else {
          return e.Text;
        }
      };
    })(y || (exports.TraceFormat = y = {}));
    (function (e) {
      e.type = new u.NotificationType('$/setTrace');
    })(w || (exports.SetTraceNotification = w = {}));
    (function (e) {
      e.type = new u.NotificationType('$/logTrace');
    })(_ || (exports.LogTraceNotification = _ = {}));
    (function (e) {
      e[e.Closed = 1] = 'Closed';
      e[e.Disposed = 2] = 'Disposed';
      e[e.AlreadyListening = 3] = 'AlreadyListening';
    })(v || (exports.ConnectionErrors = v = {}));
    class P extends Error {
      code;
      constructor(e, t) {
        super(t);
        this.code = e;
        Object.setPrototypeOf(this, P.prototype);
      }
    }
    exports.ConnectionError = P;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.cancelUndispatched);
      };
    })(b || (exports.ConnectionStrategy = b = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.kind === undefined || t.kind === 'id') && c.func(t.createCancellationTokenSource) && (t.dispose === undefined || c.func(t.dispose));
      };
    })(B || (exports.IdCancellationReceiverStrategy = B = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'request' && c.func(t.createCancellationTokenSource) && (t.dispose === undefined || c.func(t.dispose));
      };
    })(Q || (exports.RequestCancellationReceiverStrategy = Q = {}));
    (function (e) {
      e.Message = Object.freeze({
        createCancellationTokenSource: e => new d.CancellationTokenSource()
      });
      e.is = function (e) {
        return B.is(e) || Q.is(e);
      };
    })(D || (exports.CancellationReceiverStrategy = D = {}));
    (function (e) {
      e.Message = Object.freeze({
        sendCancellation: (e, t) => e.sendNotification(h.type, {
          id: t
        }),
        cleanup(e) {}
      });
      e.is = function (e) {
        const t = e;
        return t && c.func(t.sendCancellation) && c.func(t.cleanup);
      };
    })(S || (exports.CancellationSenderStrategy = S = {}));
    (function (e) {
      e.Message = Object.freeze({
        receiver: D.Message,
        sender: S.Message
      });
      e.is = function (e) {
        const t = e;
        return t && D.is(t.receiver) && S.is(t.sender);
      };
    })(T || (exports.CancellationStrategy = T = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.handleMessage);
      };
    })(R || (exports.MessageStrategy = R = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (T.is(t.cancellationStrategy) || b.is(t.connectionStrategy) || R.is(t.messageStrategy) || c.number(t.maxParallelism));
      };
    })(k || (exports.ConnectionOptions = k = {}));
    (function (e) {
      e[e.New = 1] = 'New';
      e[e.Listening = 2] = 'Listening';
      e[e.Closed = 3] = 'Closed';
      e[e.Disposed = 4] = 'Disposed';
    })(x ||= {});
    exports.createMessageConnection = function (e, n, r, o) {
      const s = r !== undefined ? r : exports.NullLogger;
      let a = 0;
      let E = 0;
      let b = 0;
      const Q = '2.0';
      const D = o?.maxParallelism ?? -1;
      let S;
      let k = 0;
      const F = new Map();
      let M;
      const O = new Map();
      const N = new Map();
      let L;
      let K;
      let U = new l.LinkedMap();
      let j = new Map();
      let q = new Set();
      let G = new Map();
      let Y = I.Off;
      let H = y.Text;
      let J = x.New;
      const z = new g.Emitter();
      const $ = new g.Emitter();
      const W = new g.Emitter();
      const V = new g.Emitter();
      const X = new g.Emitter();
      const Z = o && o.cancellationStrategy ? o.cancellationStrategy : T.Message;
      function ee(e) {}
      function te() {
        return J === x.Listening;
      }
      function ne() {
        return J === x.Closed;
      }
      function re() {
        return J === x.Disposed;
      }
      function oe() {
        if (J === x.New || J === x.Listening) {
          J = x.Closed;
          $.fire(undefined);
        }
      }
      function ie(e) {
        if (e === null) {
          throw new Error('Can\'t send requests with id null since the response can\'t be correlated.');
        }
        return `req-${e.toString()}`;
      }
      function se(e, t) {
        var n;
        if (u.Message.isRequest(t)) {
          e.set(ie(t.id), t);
        } else {
          if (u.Message.isResponse(t)) {
            if (D === -1) {
              e.set((n = t.id) === null ? `res-unknown-${(++b).toString()}` : `res-${n.toString()}`, t);
            } else {
              ue(t);
            }
          } else {
            e.set(`not-${(++E).toString()}`, t);
          }
        }
      }
      function ae() {
        if (!L && U.size !== 0 && (D === -1 || !(k >= D))) {
          L = A.default().timer.setImmediate(async () => {
            L = undefined;
            if (U.size === 0) {
              return;
            }
            if (D !== -1 && k >= D) {
              return;
            }
            const e = U.shift();
            let t;
            try {
              k++;
              const n = o?.messageStrategy;
              t = R.is(n) ? n.handleMessage(e, Ae) : Ae(e);
            } catch (e) {
              s.error(`Processing message queue failed: ${e.toString()}`);
            } finally {
              if (t instanceof Promise) {
                t.then(() => {
                  k--;
                  ae();
                }).catch(e => {
                  s.error(`Processing message queue failed: ${e.toString()}`);
                });
              } else {
                k--;
              }
              ae();
            }
          });
        }
      }
      async function Ae(e) {
        if (u.Message.isRequest(e)) {
          return async function (e) {
            if (re()) {
              return Promise.resolve();
            }
            function t(t, r, o) {
              const s = {
                jsonrpc: Q,
                id: e.id
              };
              if (t instanceof u.ResponseError) {
                s.error = t.toJson();
              } else {
                s.result = t === undefined ? null : t;
              }
              ge(s, r, o);
              return n.write(s);
            }
            function r(t, r, o) {
              const s = {
                jsonrpc: Q,
                id: e.id,
                error: t.toJson()
              };
              ge(s, r, o);
              return n.write(s);
            }
            (function (e) {
              if (Y === I.Off || !K) {
                return;
              }
              if (H === y.Text) {
                let t;
                if ((Y === I.Verbose || Y === I.Compact) && !!e.params) {
                  t = `Params: ${le(e.params)}\n\n`;
                }
                K.log(`Received request '${e.method} - (${e.id})'.`, t);
              } else {
                he('receive-request', e);
              }
            })(e);
            const o = F.get(e.method);
            let s;
            let a;
            if (o) {
              s = o.type;
              a = o.handler;
            }
            const A = Date.now();
            if (a || S) {
              const n = e.id ?? String(Date.now());
              const o = B.is(Z.receiver) ? Z.receiver.createCancellationTokenSource(n) : Z.receiver.createCancellationTokenSource(e);
              if (e.id !== null && q.has(e.id)) {
                o.cancel();
              }
              if (e.id !== null) {
                G.set(n, o);
              }
              try {
                let n;
                if (a) {
                  if (e.params === undefined) {
                    if (s !== undefined && s.numberOfParams !== 0) {
                      return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines ${s.numberOfParams} params but received none.`), e.method, A);
                    }
                    n = a(o.token);
                  } else {
                    if (Array.isArray(e.params)) {
                      if (s !== undefined && s.parameterStructures === u.ParameterStructures.byName) {
                        return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines parameters by name but received parameters by position`), e.method, A);
                      }
                      n = a(...e.params, o.token);
                    } else {
                      if (s !== undefined && s.parameterStructures === u.ParameterStructures.byPosition) {
                        return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines parameters by position but received parameters by name`), e.method, A);
                      }
                      n = a(e.params, o.token);
                    }
                  }
                } else {
                  if (S) {
                    n = S(e.method, e.params, o.token);
                  }
                }
                const c = await n;
                await t(c, e.method, A);
              } catch (n) {
                if (n instanceof u.ResponseError) {
                  await t(n, e.method, A);
                } else {
                  if (n && c.string(n.message)) {
                    await r(new u.ResponseError(u.ErrorCodes.InternalError, `Request ${e.method} failed with message: ${n.message}`), e.method, A);
                  } else {
                    await r(new u.ResponseError(u.ErrorCodes.InternalError, `Request ${e.method} failed unexpectedly without providing any details.`), e.method, A);
                  }
                }
              } finally {
                G.delete(n);
              }
            } else {
              await r(new u.ResponseError(u.ErrorCodes.MethodNotFound, `Unhandled method ${e.method}`), e.method, A);
            }
          }(e);
        } else {
          if (u.Message.isNotification(e)) {
            return async function (e) {
              if (re()) {
                return;
              }
              let t;
              let n;
              if (e.method === h.type.method) {
                const t = e.params.id;
                q.delete(t);
                de(e);
                return;
              }
              {
                const r = O.get(e.method);
                if (r) {
                  n = r.handler;
                  t = r.type;
                }
              }
              if (n || M) {
                try {
                  de(e);
                  if (n) {
                    if (e.params === undefined) {
                      if (t !== undefined && t.numberOfParams !== 0 && t.parameterStructures !== u.ParameterStructures.byName) {
                        s.error(`Notification ${e.method} defines ${t.numberOfParams} params but received none.`);
                      }
                      await n();
                    } else {
                      if (Array.isArray(e.params)) {
                        const r = e.params;
                        if (e.method === p.type.method && r.length === 2 && f.is(r[0])) {
                          await n({
                            token: r[0],
                            value: r[1]
                          });
                        } else {
                          if (t !== undefined) {
                            if (t.parameterStructures === u.ParameterStructures.byName) {
                              s.error(`Notification ${e.method} defines parameters by name but received parameters by position`);
                            }
                            if (t.numberOfParams !== e.params.length) {
                              s.error(`Notification ${e.method} defines ${t.numberOfParams} params but received ${r.length} arguments`);
                            }
                          }
                          await n(...r);
                        }
                      } else {
                        if (t !== undefined && t.parameterStructures === u.ParameterStructures.byPosition) {
                          s.error(`Notification ${e.method} defines parameters by position but received parameters by name`);
                        }
                        await n(e.params);
                      }
                    }
                  } else {
                    if (M) {
                      await M(e.method, e.params);
                    }
                  }
                } catch (t) {
                  if (t.message) {
                    s.error(`Notification handler '${e.method}' failed with message: ${t.message}`);
                  } else {
                    s.error(`Notification handler '${e.method}' failed unexpectedly.`);
                  }
                }
              } else {
                W.fire(e);
              }
            }(e);
          } else {
            if (u.Message.isResponse(e)) {
              return ue(e);
            } else {
              return function (e) {
                if (!e) {
                  s.error('Received empty message.');
                  return;
                }
                s.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e, null, 4)}`);
                const t = e;
                if (c.string(t.id) || c.number(t.id)) {
                  const e = t.id;
                  const n = j.get(e);
                  if (n) {
                    n.reject(new Error('The received response has neither a result nor an error property.'));
                  }
                }
              }(e);
            }
          }
        }
      }
      e.onClose(oe);
      e.onError(function (e) {
        z.fire([e, undefined, undefined]);
      });
      n.onClose(oe);
      n.onError(function (e) {
        z.fire(e);
      });
      const ce = e => {
        try {
          if (u.Message.isNotification(e) && e.method === h.type.method) {
            const t = e.params.id;
            const r = ie(t);
            const a = U.get(r);
            if (u.Message.isRequest(a)) {
              const A = o?.connectionStrategy;
              const c = A && A.cancelUndispatched ? A.cancelUndispatched(a, ee) : undefined;
              if (c && (c.error !== undefined || c.result !== undefined)) {
                U.delete(r);
                G.delete(t);
                c.id = a.id;
                ge(c, e.method, Date.now());
                n.write(c).catch(() => s.error('Sending response for canceled message failed.'));
                return;
              }
            }
            const A = G.get(t);
            if (A !== undefined) {
              A.cancel();
              de(e);
              return;
            }
            q.add(t);
          }
          se(U, e);
        } finally {
          ae();
        }
      };
      function ue(e) {
        if (!re()) {
          if (e.id === null) {
            if (e.error) {
              s.error(`Received response message without id: Error is: \n${JSON.stringify(e.error, undefined, 4)}`);
            } else {
              s.error('Received response message without id. No further error information provided.');
            }
          } else {
            const t = e.id;
            const n = j.get(t);
            (function (e, t) {
              if (Y === I.Off || !K) {
                return;
              }
              if (H === y.Text) {
                let n;
                if (Y === I.Verbose || Y === I.Compact) {
                  if (e.error && e.error.data) {
                    n = `Error data: ${le(e.error.data)}\n\n`;
                  } else {
                    if (e.result) {
                      n = `Result: ${le(e.result)}\n\n`;
                    } else {
                      if (e.error === undefined) {
                        n = 'No result returned.\n\n';
                      }
                    }
                  }
                }
                if (t) {
                  const r = e.error ? ` Request failed: ${e.error.message} (${e.error.code}).` : '';
                  K.log(`Received response '${t.method} - (${e.id})' in ${Date.now() - t.timerStart}ms.${r}`, n);
                } else {
                  K.log(`Received response ${e.id} without active response promise.`, n);
                }
              } else {
                he('receive-response', e);
              }
            })(e, n);
            if (n !== undefined) {
              j.delete(t);
              try {
                if (e.error) {
                  const t = e.error;
                  n.reject(new u.ResponseError(t.code, t.message, t.data));
                } else {
                  if (e.result === undefined) {
                    throw new Error('Should never happen.');
                  }
                  n.resolve(e.result);
                }
              } catch (e) {
                if (e.message) {
                  s.error(`Response handler '${n.method}' failed with message: ${e.message}`);
                } else {
                  s.error(`Response handler '${n.method}' failed unexpectedly.`);
                }
              }
            }
          }
        }
      }
      function le(e) {
        if (e != null) {
          switch (Y) {
            case I.Verbose:
              return JSON.stringify(e, null, 4);
            case I.Compact:
              return JSON.stringify(e);
            default:
              return;
          }
        }
      }
      function ge(e, t, n) {
        if (Y !== I.Off && K) {
          if (H === y.Text) {
            let r;
            if (Y === I.Verbose || Y === I.Compact) {
              if (e.error && e.error.data) {
                r = `Error data: ${le(e.error.data)}\n\n`;
              } else {
                if (e.result) {
                  r = `Result: ${le(e.result)}\n\n`;
                } else {
                  if (e.error === undefined) {
                    r = 'No result returned.\n\n';
                  }
                }
              }
            }
            K.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now() - n}ms`, r);
          } else {
            he('send-response', e);
          }
        }
      }
      function de(e) {
        if (Y !== I.Off && K && e.method !== _.type.method) {
          if (H === y.Text) {
            let t;
            if (Y === I.Verbose || Y === I.Compact) {
              t = e.params ? `Params: ${le(e.params)}\n\n` : 'No parameters provided.\n\n';
            }
            K.log(`Received notification '${e.method}'.`, t);
          } else {
            he('receive-notification', e);
          }
        }
      }
      function he(e, t) {
        if (!K || Y === I.Off) {
          return;
        }
        const n = {
          isLSPMessage: true,
          type: e,
          message: t,
          timestamp: Date.now()
        };
        K.log(n);
      }
      function fe() {
        if (ne()) {
          throw new P(v.Closed, 'Connection is closed.');
        }
        if (re()) {
          throw new P(v.Disposed, 'Connection is disposed.');
        }
      }
      function pe(e) {
        if (e === undefined) {
          return null;
        } else {
          return e;
        }
      }
      function Ce(e) {
        if (e === null) {
          return undefined;
        } else {
          return e;
        }
      }
      function me(e) {
        return e != null && !Array.isArray(e) && typeof e == 'object';
      }
      function Ie(e, t) {
        switch (e) {
          case u.ParameterStructures.auto:
            if (me(t)) {
              return Ce(t);
            } else {
              return [pe(t)];
            }
          case u.ParameterStructures.byName:
            if (!me(t)) {
              throw new Error('Received parameters by name but param is not an object literal.');
            }
            return Ce(t);
          case u.ParameterStructures.byPosition:
            return [pe(t)];
          default:
            throw new Error(`Unknown parameter structure ${e.toString()}`);
        }
      }
      function Ee(e, t) {
        let n;
        const r = e.numberOfParams;
        switch (r) {
          case 0:
            n = undefined;
            break;
          case 1:
            n = Ie(e.parameterStructures, t[0]);
            break;
          default:
            n = [];
            for (let e = 0; e < t.length && e < r; e++) {
              n.push(pe(t[e]));
            }
            if (t.length < r) {
              for (let e = t.length; e < r; e++) {
                n.push(null);
              }
            }
        }
        return n;
      }
      const ye = {
        sendNotification: (e, ...t) => {
          let r;
          let o;
          fe();
          if (c.string(e)) {
            r = e;
            const n = t[0];
            let s = 0;
            let a = u.ParameterStructures.auto;
            if (u.ParameterStructures.is(n)) {
              s = 1;
              a = n;
            }
            const A = t.length;
            const c = A - s;
            switch (c) {
              case 0:
                o = undefined;
                break;
              case 1:
                o = Ie(a, t[s]);
                break;
              default:
                if (a === u.ParameterStructures.byName) {
                  throw new Error(`Received ${c} parameters for 'by Name' notification parameter structure.`);
                }
                o = t.slice(s, A).map(e => pe(e));
            }
          } else {
            const n = t;
            r = e.method;
            o = Ee(e, n);
          }
          const a = {
            jsonrpc: Q,
            method: r,
            params: o
          };
          (function (e) {
            if (Y !== I.Off && K) {
              if (H === y.Text) {
                let t;
                if (Y === I.Verbose || Y === I.Compact) {
                  t = e.params ? `Params: ${le(e.params)}\n\n` : 'No parameters provided.\n\n';
                }
                K.log(`Sending notification '${e.method}'.`, t);
              } else {
                he('send-notification', e);
              }
            }
          })(a);
          return n.write(a).catch(e => {
            s.error('Sending notification failed.');
            throw e;
          });
        },
        onNotification: (e, t) => {
          let n;
          fe();
          if (c.func(e)) {
            M = e;
          } else {
            if (t) {
              if (c.string(e)) {
                n = e;
                O.set(e, {
                  type: undefined,
                  handler: t
                });
              } else {
                n = e.method;
                O.set(e.method, {
                  type: e,
                  handler: t
                });
              }
            }
          }
          return {
            dispose: () => {
              if (n !== undefined) {
                O.delete(n);
              } else {
                M = undefined;
              }
            }
          };
        },
        onProgress: (e, t, n) => {
          if (N.has(t)) {
            throw new Error(`Progress handler for token ${t} already registered`);
          }
          N.set(t, n);
          return {
            dispose: () => {
              N.delete(t);
            }
          };
        },
        sendProgress: (e, t, n) => ye.sendNotification(p.type, {
          token: t,
          value: n
        }),
        onUnhandledProgress: V.event,
        sendRequest: (e, ...t) => {
          function r(e, t) {
            const n = Z.sender.sendCancellation(e, t);
            if (n === undefined) {
              s.log(`Received no promise from cancellation strategy when cancelling id ${t}`);
            } else {
              n.catch(() => {
                s.log(`Sending cancellation messages for id ${t} failed.`);
              });
            }
          }
          let o;
          let A;
          let l;
          fe();
          (function () {
            if (!te()) {
              throw new Error('Call listen() first.');
            }
          })();
          if (c.string(e)) {
            o = e;
            const n = t[0];
            const r = t[t.length - 1];
            let s = 0;
            let a = u.ParameterStructures.auto;
            if (u.ParameterStructures.is(n)) {
              s = 1;
              a = n;
            }
            let c = t.length;
            if (d.CancellationToken.is(r)) {
              c -= 1;
              l = r;
            }
            const g = c - s;
            switch (g) {
              case 0:
                A = undefined;
                break;
              case 1:
                A = Ie(a, t[s]);
                break;
              default:
                if (a === u.ParameterStructures.byName) {
                  throw new Error(`Received ${g} parameters for 'by Name' request parameter structure.`);
                }
                A = t.slice(s, c).map(e => pe(e));
            }
          } else {
            const n = t;
            o = e.method;
            A = Ee(e, n);
            const r = e.numberOfParams;
            l = d.CancellationToken.is(n[r]) ? n[r] : undefined;
          }
          const g = a++;
          let h;
          let f = false;
          if (l !== undefined) {
            if (l.isCancellationRequested) {
              f = true;
            } else {
              h = l.onCancellationRequested(() => {
                r(ye, g);
              });
            }
          }
          const p = {
            jsonrpc: Q,
            id: g,
            method: o,
            params: A
          };
          (function (e) {
            if (Y !== I.Off && K) {
              if (H === y.Text) {
                let t;
                if ((Y === I.Verbose || Y === I.Compact) && !!e.params) {
                  t = `Params: ${le(e.params)}\n\n`;
                }
                K.log(`Sending request '${e.method} - (${e.id})'.`, t);
              } else {
                he('send-request', e);
              }
            }
          })(p);
          if (typeof Z.sender.enableCancellation == 'function') {
            Z.sender.enableCancellation(p);
          }
          return new Promise(async (e, t) => {
            const a = {
              method: o,
              timerStart: Date.now(),
              resolve: t => {
                e(t);
                Z.sender.cleanup(g);
                h?.dispose();
              },
              reject: e => {
                t(e);
                Z.sender.cleanup(g);
                h?.dispose();
              }
            };
            try {
              j.set(g, a);
              await n.write(p);
              if (f) {
                r(ye, g);
              }
            } catch (e) {
              j.delete(g);
              a.reject(new u.ResponseError(u.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));
              s.error('Sending request failed.');
              throw e;
            }
          });
        },
        onRequest: (e, t) => {
          fe();
          let n = null;
          if (m.is(e)) {
            n = undefined;
            S = e;
          } else {
            if (c.string(e)) {
              n = null;
              if (t !== undefined) {
                n = e;
                F.set(e, {
                  handler: t,
                  type: undefined
                });
              }
            } else {
              if (t !== undefined) {
                n = e.method;
                F.set(e.method, {
                  type: e,
                  handler: t
                });
              }
            }
          }
          return {
            dispose: () => {
              if (n !== null) {
                if (n !== undefined) {
                  F.delete(n);
                } else {
                  S = undefined;
                }
              }
            }
          };
        },
        hasPendingResponse: () => j.size > 0,
        trace: async (e, t, n) => {
          let r = false;
          let o = y.Text;
          if (n !== undefined) {
            if (c.boolean(n)) {
              r = n;
            } else {
              r = n.sendNotification || false;
              o = n.traceFormat || y.Text;
            }
          }
          Y = e;
          H = o;
          K = Y === I.Off ? undefined : t;
          if (!!r && !ne() && !re()) {
            await ye.sendNotification(w.type, {
              value: I.toString(e)
            });
          }
        },
        onError: z.event,
        onClose: $.event,
        onUnhandledNotification: W.event,
        onDispose: X.event,
        end: () => {
          n.end();
        },
        dispose: () => {
          if (re()) {
            return;
          }
          J = x.Disposed;
          X.fire(undefined);
          const t = new u.ResponseError(u.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');
          for (const e of j.values()) {
            e.reject(t);
          }
          j = new Map();
          G = new Map();
          q = new Set();
          U = new l.LinkedMap();
          if (c.func(n.dispose)) {
            n.dispose();
          }
          if (c.func(e.dispose)) {
            e.dispose();
          }
        },
        listen: () => {
          fe();
          (function () {
            if (te()) {
              throw new P(v.AlreadyListening, 'Connection is already listening');
            }
          })();
          J = x.Listening;
          e.listen(ce);
        },
        inspect: () => {
          A.default().console.log('inspect');
        }
      };
      ye.onNotification(_.type, e => {
        if (Y === I.Off || !K) {
          return;
        }
        const t = Y === I.Verbose || Y === I.Compact;
        K.log(e.message, t ? e.verbose : undefined);
      });
      ye.onNotification(p.type, async e => {
        const t = N.get(e.token);
        if (t) {
          await t(e.value);
        } else {
          V.fire(e);
        }
      });
      return ye;
    };
  },
  38185: (module, exports) => {
    "use strict";

    var n;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Disposable = undefined;
    (function (e) {
      e.create = function (e) {
        return {
          dispose: e
        };
      };
    })(n || (exports.Disposable = n = {}));
  },
  29982: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Emitter = exports.Event = undefined;
    const o = __importDefault(require(58948));
    var s;
    (function (e) {
      const t = {
        dispose() {}
      };
      e.None = function () {
        return t;
      };
    })(s || (exports.Event = s = {}));
    class a {
      _callbacks;
      _contexts;
      add(e, t = null, n) {
        if (!this._callbacks) {
          this._callbacks = [];
          this._contexts = [];
        }
        this._callbacks.push(e);
        this._contexts.push(t);
        if (Array.isArray(n)) {
          n.push({
            dispose: () => this.remove(e, t)
          });
        }
      }
      remove(e, t = null) {
        if (!this._callbacks) {
          return;
        }
        let n = false;
        for (let r = 0, o = this._callbacks.length; r < o; r++) {
          if (this._callbacks[r] === e) {
            if (this._contexts[r] === t) {
              this._callbacks.splice(r, 1);
              this._contexts.splice(r, 1);
              return;
            }
            n = true;
          }
        }
        if (n) {
          throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
      }
      invoke(...e) {
        if (!this._callbacks) {
          return [];
        }
        const t = [];
        const n = this._callbacks.slice(0);
        const r = this._contexts.slice(0);
        for (let s = 0, a = n.length; s < a; s++) {
          try {
            t.push(n[s].apply(r[s], e));
          } catch (e) {
            o.default().console.error(e);
          }
        }
        return t;
      }
      isEmpty() {
        return !this._callbacks || this._callbacks.length === 0;
      }
      dispose() {
        this._callbacks = undefined;
        this._contexts = undefined;
      }
    }
    class A {
      _options;
      static _noop = function () {};
      _event;
      _callbacks;
      constructor(e) {
        this._options = e;
      }
      get event() {
        if (!this._event) {
          this._event = (e, t, n) => {
            if (!this._callbacks) {
              this._callbacks = new a();
            }
            if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {
              this._options.onFirstListenerAdd(this);
            }
            this._callbacks.add(e, t);
            const r = {
              dispose: () => {
                if (this._callbacks) {
                  this._callbacks.remove(e, t);
                  r.dispose = A._noop;
                  if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {
                    this._options.onLastListenerRemove(this);
                  }
                }
              }
            };
            if (Array.isArray(n)) {
              n.push(r);
            }
            return r;
          };
        }
        return this._event;
      }
      fire(e) {
        if (this._callbacks) {
          this._callbacks.invoke.call(this._callbacks, e);
        }
      }
      dispose() {
        if (this._callbacks) {
          this._callbacks.dispose();
          this._callbacks = undefined;
        }
      }
    }
    exports.Emitter = A;
  },
  97499: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = function (e) {
      return typeof e == 'function';
    };
    exports.array = r;
    exports.stringArray = function (e) {
      return r(e) && e.every(e => n(e));
    };
  },
  59746: (module, exports) => {
    "use strict";

    var n;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LRUCache = exports.LinkedMap = exports.Touch = undefined;
    (function (e) {
      e.None = 0;
      e.First = 1;
      e.AsOld = e.First;
      e.Last = 2;
      e.AsNew = e.Last;
    })(n || (exports.Touch = n = {}));
    class r {
      [Symbol.toStringTag] = 'LinkedMap';
      _map;
      _head;
      _tail;
      _size;
      _state;
      constructor() {
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state = 0;
      }
      clear() {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state++;
      }
      isEmpty() {
        return !this._head && !this._tail;
      }
      get size() {
        return this._size;
      }
      get first() {
        return this._head?.value;
      }
      get last() {
        return this._tail?.value;
      }
      before(e) {
        const t = this._map.get(e);
        if (t) {
          return t.previous?.value;
        } else {
          return undefined;
        }
      }
      after(e) {
        const t = this._map.get(e);
        if (t) {
          return t.next?.value;
        } else {
          return undefined;
        }
      }
      has(e) {
        return this._map.has(e);
      }
      get(e, t = n.None) {
        const r = this._map.get(e);
        if (r) {
          if (t !== n.None) {
            this.touch(r, t);
          }
          return r.value;
        }
      }
      set(e, t, r = n.None) {
        let o = this._map.get(e);
        if (o) {
          o.value = t;
          if (r !== n.None) {
            this.touch(o, r);
          }
        } else {
          o = {
            key: e,
            value: t,
            next: undefined,
            previous: undefined
          };
          switch (r) {
            case n.None:
              this.addItemLast(o);
              break;
            case n.First:
              this.addItemFirst(o);
              break;
            case n.Last:
            default:
              this.addItemLast(o);
          }
          this._map.set(e, o);
          this._size++;
        }
        return this;
      }
      delete(e) {
        return !!this.remove(e);
      }
      remove(e) {
        const t = this._map.get(e);
        if (t) {
          this._map.delete(e);
          this.removeItem(t);
          this._size--;
          return t.value;
        }
      }
      shift() {
        if (!this._head && !this._tail) {
          return;
        }
        if (!this._head || !this._tail) {
          throw new Error('Invalid list');
        }
        const e = this._head;
        this._map.delete(e.key);
        this.removeItem(e);
        this._size--;
        return e.value;
      }
      forEach(e, t) {
        const n = this._state;
        let r = this._head;
        while (r) {
          if (t) {
            e.bind(t)(r.value, r.key, this);
          } else {
            e(r.value, r.key, this);
          }
          if (this._state !== n) {
            throw new Error('LinkedMap got modified during iteration.');
          }
          r = r.next;
        }
      }
      keys() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: t.key,
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      values() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: t.value,
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      entries() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: [t.key, t.value],
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      trimOld(e) {
        if (e >= this.size) {
          return;
        }
        if (e === 0) {
          this.clear();
          return;
        }
        let t = this._head;
        let n = this.size;
        while (t && n > e) {
          this._map.delete(t.key);
          t = t.next;
          n--;
        }
        this._head = t;
        this._size = n;
        if (t) {
          t.previous = undefined;
        }
        this._state++;
      }
      addItemFirst(e) {
        if (this._head || this._tail) {
          if (!this._head) {
            throw new Error('Invalid list');
          }
          e.next = this._head;
          this._head.previous = e;
        } else {
          this._tail = e;
        }
        this._head = e;
        this._state++;
      }
      addItemLast(e) {
        if (this._head || this._tail) {
          if (!this._tail) {
            throw new Error('Invalid list');
          }
          e.previous = this._tail;
          this._tail.next = e;
        } else {
          this._head = e;
        }
        this._tail = e;
        this._state++;
      }
      removeItem(e) {
        if (e === this._head && e === this._tail) {
          this._head = undefined;
          this._tail = undefined;
        } else {
          if (e === this._head) {
            if (!e.next) {
              throw new Error('Invalid list');
            }
            e.next.previous = undefined;
            this._head = e.next;
          } else {
            if (e === this._tail) {
              if (!e.previous) {
                throw new Error('Invalid list');
              }
              e.previous.next = undefined;
              this._tail = e.previous;
            } else {
              const t = e.next;
              const n = e.previous;
              if (!t || !n) {
                throw new Error('Invalid list');
              }
              t.previous = n;
              n.next = t;
            }
          }
        }
        e.next = undefined;
        e.previous = undefined;
        this._state++;
      }
      touch(e, t) {
        if (!this._head || !this._tail) {
          throw new Error('Invalid list');
        }
        if (t === n.First || t === n.Last) {
          if (t === n.First) {
            if (e === this._head) {
              return;
            }
            const t = e.next;
            const n = e.previous;
            if (e === this._tail) {
              n.next = undefined;
              this._tail = n;
            } else {
              t.previous = n;
              n.next = t;
            }
            e.previous = undefined;
            e.next = this._head;
            this._head.previous = e;
            this._head = e;
            this._state++;
          } else {
            if (t === n.Last) {
              if (e === this._tail) {
                return;
              }
              const t = e.next;
              const n = e.previous;
              if (e === this._head) {
                t.previous = undefined;
                this._head = t;
              } else {
                t.previous = n;
                n.next = t;
              }
              e.next = undefined;
              e.previous = this._tail;
              this._tail.next = e;
              this._tail = e;
              this._state++;
            }
          }
        }
      }
      toJSON() {
        const e = [];
        this.forEach((t, n) => {
          e.push([n, t]);
        });
        return e;
      }
      fromJSON(e) {
        this.clear();
        for (const [t, n] of e) {
          this.set(t, n);
        }
      }
    }
    exports.LinkedMap = r;
    exports.LRUCache = class extends r {
      _limit;
      _ratio;
      constructor(e, t = 1) {
        super();
        this._limit = e;
        this._ratio = Math.min(Math.max(0, t), 1);
      }
      get limit() {
        return this._limit;
      }
      set limit(e) {
        this._limit = e;
        this.checkTrim();
      }
      get ratio() {
        return this._ratio;
      }
      set ratio(e) {
        this._ratio = Math.min(Math.max(0, e), 1);
        this.checkTrim();
      }
      get(e, t = n.AsNew) {
        return super.get(e, t);
      }
      peek(e) {
        return super.get(e, n.None);
      }
      set(e, t) {
        super.set(e, t, n.Last);
        this.checkTrim();
        return this;
      }
      checkTrim() {
        if (this.size > this._limit) {
          this.trimOld(Math.round(this._limit * this._ratio));
        }
      }
    };
  },
  69474: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.AbstractMessageBuffer = undefined;
    exports.AbstractMessageBuffer = class {
      _encoding;
      _chunks;
      _totalLength;
      constructor(e = 'utf-8') {
        this._encoding = e;
        this._chunks = [];
        this._totalLength = 0;
      }
      get encoding() {
        return this._encoding;
      }
      append(e) {
        const t = typeof e == 'string' ? this.fromString(e, this._encoding) : e;
        this._chunks.push(t);
        this._totalLength += t.byteLength;
      }
      tryReadHeaders(e = false) {
        if (this._chunks.length === 0) {
          return;
        }
        let t = 0;
        let n = 0;
        let r = 0;
        let o = 0;
        e: while (n < this._chunks.length) {
          const e = this._chunks[n];
          for (r = 0; r < e.length;) {
            switch (e[r]) {
              case 13:
                switch (t) {
                  case 0:
                    t = 1;
                    break;
                  case 2:
                    t = 3;
                    break;
                  default:
                    t = 0;
                }
                break;
              case 10:
                switch (t) {
                  case 1:
                    t = 2;
                    break;
                  case 3:
                    t = 4;
                    r++;
                    break e;
                  default:
                    t = 0;
                }
                break;
              default:
                t = 0;
            }
            r++;
          }
          o += e.byteLength;
          n++;
        }
        if (t !== 4) {
          return;
        }
        const s = this._read(o + r);
        const a = new Map();
        const A = this.toString(s, 'ascii').split('\r\n');
        if (A.length < 2) {
          return a;
        }
        for (let t = 0; t < A.length - 2; t++) {
          const n = A[t];
          const r = n.indexOf(':');
          if (r === -1) {
            throw new Error(`Message header must separate key and value using ':'\n${n}`);
          }
          const o = n.substr(0, r);
          const s = n.substr(r + 1).trim();
          a.set(e ? o.toLowerCase() : o, s);
        }
        return a;
      }
      tryReadBody(e) {
        if (!(this._totalLength < e)) {
          return this._read(e);
        }
      }
      get numberOfBytes() {
        return this._totalLength;
      }
      _read(e) {
        if (e === 0) {
          return this.emptyBuffer();
        }
        if (e > this._totalLength) {
          throw new Error('Cannot read so many bytes!');
        }
        if (this._chunks[0].byteLength === e) {
          const t = this._chunks[0];
          this._chunks.shift();
          this._totalLength -= e;
          return this.asNative(t);
        }
        if (this._chunks[0].byteLength > e) {
          const t = this._chunks[0];
          const n = this.asNative(t, e);
          this._chunks[0] = t.slice(e);
          this._totalLength -= e;
          return n;
        }
        const t = this.allocNative(e);
        let n = 0;
        while (e > 0) {
          const r = this._chunks[0];
          if (r.byteLength > e) {
            const o = r.slice(0, e);
            t.set(o, n);
            n += e;
            this._chunks[0] = r.slice(e);
            this._totalLength -= e;
            e -= e;
          } else {
            t.set(r, n);
            n += r.byteLength;
            this._chunks.shift();
            this._totalLength -= r.byteLength;
            e -= r.byteLength;
          }
        }
        return t;
      }
    };
  },
  46619: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = undefined;
    const A = __importDefault(require(58948));
    const c = __importStar(require(97499));
    const u = require(29982);
    const l = require(9873);
    var g;
    var d;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.listen) && c.func(t.dispose) && c.func(t.onError) && c.func(t.onClose) && c.func(t.onPartialMessage);
      };
    })(g || (exports.MessageReader = g = {}));
    class h {
      errorEmitter;
      closeEmitter;
      partialMessageEmitter;
      constructor() {
        this.errorEmitter = new u.Emitter();
        this.closeEmitter = new u.Emitter();
        this.partialMessageEmitter = new u.Emitter();
      }
      dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
      }
      get onError() {
        return this.errorEmitter.event;
      }
      fireError(e) {
        this.errorEmitter.fire(this.asError(e));
      }
      get onClose() {
        return this.closeEmitter.event;
      }
      fireClose() {
        this.closeEmitter.fire(undefined);
      }
      get onPartialMessage() {
        return this.partialMessageEmitter.event;
      }
      firePartialMessage(e) {
        this.partialMessageEmitter.fire(e);
      }
      asError(e) {
        if (e instanceof Error) {
          return e;
        } else {
          return new Error(`Reader received error. Reason: ${c.string(e.message) ? e.message : 'unknown'}`);
        }
      }
    }
    exports.AbstractMessageReader = h;
    (function (e) {
      e.fromOptions = function (e) {
        let t;
        let n;
        const r = new Map();
        let o;
        const s = new Map();
        if (e === undefined || typeof e == 'string') {
          t = e ?? 'utf-8';
        } else {
          t = e.charset ?? 'utf-8';
          if (e.contentDecoder !== undefined) {
            n = e.contentDecoder;
            r.set(n.name, n);
          }
          if (e.contentDecoders !== undefined) {
            for (const t of e.contentDecoders) {
              r.set(t.name, t);
            }
          }
          if (e.contentTypeDecoder !== undefined) {
            o = e.contentTypeDecoder;
            s.set(o.name, o);
          }
          if (e.contentTypeDecoders !== undefined) {
            for (const t of e.contentTypeDecoders) {
              s.set(t.name, t);
            }
          }
        }
        if (o === undefined) {
          o = A.default().applicationJson.decoder;
          s.set(o.name, o);
        }
        return {
          charset: t,
          contentDecoder: n,
          contentDecoders: r,
          contentTypeDecoder: o,
          contentTypeDecoders: s
        };
      };
    })(d ||= {});
    exports.ReadableStreamMessageReader = class extends h {
      readable;
      options;
      callback;
      nextMessageLength;
      messageToken;
      buffer;
      partialMessageTimer;
      _partialMessageTimeout;
      readSemaphore;
      constructor(e, t) {
        super();
        this.readable = e;
        this.options = d.fromOptions(t);
        this.buffer = A.default().messageBuffer.create(this.options.charset);
        this._partialMessageTimeout = 10000;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.readSemaphore = new l.Semaphore(1);
      }
      set partialMessageTimeout(e) {
        this._partialMessageTimeout = e;
      }
      get partialMessageTimeout() {
        return this._partialMessageTimeout;
      }
      listen(e) {
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = e;
        const t = this.readable.onData(e => {
          this.onData(e);
        });
        this.readable.onError(e => this.fireError(e));
        this.readable.onClose(() => this.fireClose());
        return t;
      }
      onData(e) {
        try {
          for (this.buffer.append(e);;) {
            if (this.nextMessageLength === -1) {
              const e = this.buffer.tryReadHeaders(true);
              if (!e) {
                return;
              }
              const t = e.get('content-length');
              if (!t) {
                this.fireError(new Error(`Header must provide a Content-Length property.\n${JSON.stringify(Object.fromEntries(e))}`));
                return;
              }
              const n = parseInt(t);
              if (isNaN(n)) {
                this.fireError(new Error(`Content-Length value must be a number. Got ${t}`));
                return;
              }
              this.nextMessageLength = n;
            }
            const e = this.buffer.tryReadBody(this.nextMessageLength);
            if (e === undefined) {
              this.setPartialMessageTimer();
              return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            this.readSemaphore.lock(async () => {
              const t = this.options.contentDecoder !== undefined ? await this.options.contentDecoder.decode(e) : e;
              const n = await this.options.contentTypeDecoder.decode(t, this.options);
              this.callback(n);
            }).catch(e => {
              this.fireError(e);
            });
          }
        } catch (e) {
          this.fireError(e);
        }
      }
      clearPartialMessageTimer() {
        if (this.partialMessageTimer) {
          this.partialMessageTimer.dispose();
          this.partialMessageTimer = undefined;
        }
      }
      setPartialMessageTimer() {
        this.clearPartialMessageTimer();
        if (!(this._partialMessageTimeout <= 0)) {
          this.partialMessageTimer = A.default().timer.setTimeout((e, t) => {
            this.partialMessageTimer = undefined;
            if (e === this.messageToken) {
              this.firePartialMessage({
                messageToken: e,
                waitingTime: t
              });
              this.setPartialMessageTimer();
            }
          }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
        }
      }
    };
  },
  36491: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = undefined;
    const A = __importDefault(require(58948));
    const c = __importStar(require(97499));
    const u = require(9873);
    const l = require(29982);
    var g;
    var d;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.dispose) && c.func(t.onClose) && c.func(t.onError) && c.func(t.write);
      };
    })(g || (exports.MessageWriter = g = {}));
    class h {
      errorEmitter;
      closeEmitter;
      constructor() {
        this.errorEmitter = new l.Emitter();
        this.closeEmitter = new l.Emitter();
      }
      dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
      }
      get onError() {
        return this.errorEmitter.event;
      }
      fireError(e, t, n) {
        this.errorEmitter.fire([this.asError(e), t, n]);
      }
      get onClose() {
        return this.closeEmitter.event;
      }
      fireClose() {
        this.closeEmitter.fire(undefined);
      }
      asError(e) {
        if (e instanceof Error) {
          return e;
        } else {
          return new Error(`Writer received error. Reason: ${c.string(e.message) ? e.message : 'unknown'}`);
        }
      }
    }
    exports.AbstractMessageWriter = h;
    (function (e) {
      e.fromOptions = function (e) {
        if (e === undefined || typeof e == 'string') {
          return {
            charset: e ?? 'utf-8',
            contentTypeEncoder: A.default().applicationJson.encoder
          };
        } else {
          return {
            charset: e.charset ?? 'utf-8',
            contentEncoder: e.contentEncoder,
            contentTypeEncoder: e.contentTypeEncoder ?? A.default().applicationJson.encoder
          };
        }
      };
    })(d ||= {});
    exports.WriteableStreamMessageWriter = class extends h {
      writable;
      options;
      errorCount;
      writeSemaphore;
      constructor(e, t) {
        super();
        this.writable = e;
        this.options = d.fromOptions(t);
        this.errorCount = 0;
        this.writeSemaphore = new u.Semaphore(1);
        this.writable.onError(e => this.fireError(e));
        this.writable.onClose(() => this.fireClose());
      }
      async write(e) {
        return this.writeSemaphore.lock(async () => this.options.contentTypeEncoder.encode(e, this.options).then(e => this.options.contentEncoder !== undefined ? this.options.contentEncoder.encode(e) : e).then(t => {
          const n = [];
          n.push('Content-Length: ', t.byteLength.toString(), '\r\n');
          n.push('\r\n');
          return this.doWrite(e, n, t);
        }, e => {
          this.fireError(e);
          throw e;
        }));
      }
      async doWrite(e, t, n) {
        try {
          await this.writable.write(t.join(''), 'ascii');
          return this.writable.write(n);
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {
        this.writable.end();
      }
    };
  },
  39415: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = undefined;
    const a = __importStar(require(97499));
    var A;
    var c;
    (function (e) {
      e.ParseError = -32700;
      e.InvalidRequest = -32600;
      e.MethodNotFound = -32601;
      e.InvalidParams = -32602;
      e.InternalError = -32603;
      e.jsonrpcReservedErrorRangeStart = -32099;
      e.serverErrorStart = -32099;
      e.MessageWriteError = -32099;
      e.MessageReadError = -32098;
      e.PendingResponseRejected = -32097;
      e.ConnectionInactive = -32096;
      e.ServerNotInitialized = -32002;
      e.UnknownErrorCode = -32001;
      e.jsonrpcReservedErrorRangeEnd = -32000;
      e.serverErrorEnd = -32000;
    })(A || (exports.ErrorCodes = A = {}));
    class u extends Error {
      code;
      data;
      constructor(e, t, n) {
        super(t);
        this.code = a.number(e) ? e : A.UnknownErrorCode;
        this.data = n;
        Object.setPrototypeOf(this, u.prototype);
      }
      toJson() {
        const e = {
          code: this.code,
          message: this.message
        };
        if (this.data !== undefined) {
          e.data = this.data;
        }
        return e;
      }
    }
    exports.ResponseError = u;
    class l {
      kind;
      static auto = new l('auto');
      static byPosition = new l('byPosition');
      static byName = new l('byName');
      constructor(e) {
        this.kind = e;
      }
      static is(e) {
        return e === l.auto || e === l.byName || e === l.byPosition;
      }
      toString() {
        return this.kind;
      }
    }
    exports.ParameterStructures = l;
    class g {
      method;
      numberOfParams;
      constructor(e, t) {
        this.method = e;
        this.numberOfParams = t;
      }
      get parameterStructures() {
        return l.auto;
      }
    }
    exports.AbstractMessageSignature = g;
    exports.RequestType0 = class extends g {
      _;
      constructor(e) {
        super(e, 0);
      }
    };
    exports.RequestType = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.RequestType1 = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.RequestType2 = class extends g {
      _;
      constructor(e) {
        super(e, 2);
      }
    };
    exports.RequestType3 = class extends g {
      _;
      constructor(e) {
        super(e, 3);
      }
    };
    exports.RequestType4 = class extends g {
      _;
      constructor(e) {
        super(e, 4);
      }
    };
    exports.RequestType5 = class extends g {
      _;
      constructor(e) {
        super(e, 5);
      }
    };
    exports.RequestType6 = class extends g {
      _;
      constructor(e) {
        super(e, 6);
      }
    };
    exports.RequestType7 = class extends g {
      _;
      constructor(e) {
        super(e, 7);
      }
    };
    exports.RequestType8 = class extends g {
      _;
      constructor(e) {
        super(e, 8);
      }
    };
    exports.RequestType9 = class extends g {
      _;
      constructor(e) {
        super(e, 9);
      }
    };
    exports.NotificationType = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.NotificationType0 = class extends g {
      _;
      constructor(e) {
        super(e, 0);
      }
    };
    exports.NotificationType1 = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.NotificationType2 = class extends g {
      _;
      constructor(e) {
        super(e, 2);
      }
    };
    exports.NotificationType3 = class extends g {
      _;
      constructor(e) {
        super(e, 3);
      }
    };
    exports.NotificationType4 = class extends g {
      _;
      constructor(e) {
        super(e, 4);
      }
    };
    exports.NotificationType5 = class extends g {
      _;
      constructor(e) {
        super(e, 5);
      }
    };
    exports.NotificationType6 = class extends g {
      _;
      constructor(e) {
        super(e, 6);
      }
    };
    exports.NotificationType7 = class extends g {
      _;
      constructor(e) {
        super(e, 7);
      }
    };
    exports.NotificationType8 = class extends g {
      _;
      constructor(e) {
        super(e, 8);
      }
    };
    exports.NotificationType9 = class extends g {
      _;
      constructor(e) {
        super(e, 9);
      }
    };
    (function (e) {
      e.isRequest = function (e) {
        const t = e;
        return t && a.string(t.method) && (a.string(t.id) || a.number(t.id));
      };
      e.isNotification = function (e) {
        const t = e;
        return t && a.string(t.method) && e.id === undefined;
      };
      e.isResponse = function (e) {
        const t = e;
        return t && (t.result !== undefined || !!t.error) && (a.string(t.id) || a.number(t.id) || t.id === null);
      };
    })(c || (exports.Message = c = {}));
  },
  58948: (module, exports) => {
    "use strict";

    let n;
    function r() {
      if (n === undefined) {
        throw new Error('No runtime abstraction layer installed');
      }
      return n;
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    (function (e) {
      e.install = function (e) {
        if (e === undefined) {
          throw new Error('No runtime abstraction layer provided');
        }
        n = e;
      };
    })(r ||= {});
    exports.default = r;
  },
  9873: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Semaphore = undefined;
    const o = __importDefault(require(58948));
    exports.Semaphore = class {
      _capacity;
      _active;
      _waiting;
      constructor(e = 1) {
        if (e <= 0) {
          throw new Error('Capacity must be greater than 0');
        }
        this._capacity = e;
        this._active = 0;
        this._waiting = [];
      }
      lock(e) {
        return new Promise((t, n) => {
          this._waiting.push({
            thunk: e,
            resolve: t,
            reject: n
          });
          this.runNext();
        });
      }
      get active() {
        return this._active;
      }
      runNext() {
        if (this._waiting.length !== 0 && this._active !== this._capacity) {
          o.default().timer.setImmediate(() => this.doRunNext());
        }
      }
      doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
          return;
        }
        const e = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
          throw new Error('To many thunks active');
        }
        try {
          const t = e.thunk();
          if (t instanceof Promise) {
            t.then(t => {
              this._active--;
              e.resolve(t);
              this.runNext();
            }, t => {
              this._active--;
              e.reject(t);
              this.runNext();
            });
          } else {
            this._active--;
            e.resolve(t);
            this.runNext();
          }
        } catch (t) {
          this._active--;
          e.reject(t);
          this.runNext();
        }
      }
    };
  },
  5402: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = undefined;
    const r = require(47644);
    var o;
    (function (e) {
      e.Continue = 0;
      e.Cancelled = 1;
    })(o ||= {});
    exports.SharedArraySenderStrategy = class {
      buffers;
      constructor() {
        this.buffers = new Map();
      }
      enableCancellation(e) {
        if (e.id === null) {
          return;
        }
        const t = new SharedArrayBuffer(4);
        new Int32Array(t, 0, 1)[0] = o.Continue;
        this.buffers.set(e.id, t);
        e.$cancellationData = t;
      }
      async sendCancellation(e, t) {
        const n = this.buffers.get(t);
        if (n === undefined) {
          return;
        }
        const r = new Int32Array(n, 0, 1);
        Atomics.store(r, 0, o.Cancelled);
      }
      cleanup(e) {
        this.buffers.delete(e);
      }
      dispose() {
        this.buffers.clear();
      }
    };
    class s {
      data;
      constructor(e) {
        this.data = new Int32Array(e, 0, 1);
      }
      get isCancellationRequested() {
        return Atomics.load(this.data, 0) === o.Cancelled;
      }
      get onCancellationRequested() {
        throw new Error('Cancellation over SharedArrayBuffer doesn\'t support cancellation events');
      }
    }
    class a {
      token;
      constructor(e) {
        this.token = new s(e);
      }
      cancel() {}
      dispose() {}
    }
    exports.SharedArrayReceiverStrategy = class {
      kind = 'request';
      createCancellationTokenSource(e) {
        const t = e.$cancellationData;
        if (t === undefined) {
          return new r.CancellationTokenSource();
        } else {
          return new a(t);
        }
      }
    };
  },
  71741: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = undefined;
    const c = __importDefault(require(27849));
    c.default.install();
    const u = __importStar(require(16928));
    const l = __importStar(require(70857));
    const g = __importStar(require(79896));
    const d = require(76982);
    const h = require(69278);
    const f = require(90355);
    __exportStar(require(90355), exports);
    class p extends f.AbstractMessageReader {
      process;
      constructor(e) {
        super();
        this.process = e;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose());
      }
      listen(e) {
        this.process.on('message', e);
        return f.Disposable.create(() => this.process.off('message', e));
      }
    }
    exports.IPCMessageReader = p;
    class m extends f.AbstractMessageWriter {
      process;
      errorCount;
      constructor(e) {
        super();
        this.process = e;
        this.errorCount = 0;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose);
      }
      write(e) {
        try {
          if (typeof this.process.send == 'function') {
            this.process.send(e, undefined, undefined, t => {
              if (t) {
                this.errorCount++;
                this.handleError(t, e);
              } else {
                this.errorCount = 0;
              }
            });
          }
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.IPCMessageWriter = m;
    class I extends f.AbstractMessageReader {
      onData;
      constructor(e) {
        super();
        this.onData = new f.Emitter();
        e.on('close', () => this.fireClose);
        e.on('error', e => this.fireError(e));
        e.on('message', e => {
          this.onData.fire(e);
        });
      }
      listen(e) {
        return this.onData.event(e);
      }
    }
    exports.PortMessageReader = I;
    class E extends f.AbstractMessageWriter {
      port;
      errorCount;
      constructor(e) {
        super();
        this.port = e;
        this.errorCount = 0;
        e.on('close', () => this.fireClose());
        e.on('error', e => this.fireError(e));
      }
      write(e) {
        try {
          this.port.postMessage(e);
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.PortMessageWriter = E;
    class y extends f.ReadableStreamMessageReader {
      constructor(e, t = 'utf-8') {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.SocketMessageReader = y;
    class w extends f.WriteableStreamMessageWriter {
      socket;
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
        this.socket = e;
      }
      dispose() {
        super.dispose();
        this.socket.destroy();
      }
    }
    exports.SocketMessageWriter = w;
    class _ extends f.ReadableStreamMessageReader {
      constructor(e, t) {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.StreamMessageReader = _;
    class v extends f.WriteableStreamMessageWriter {
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
      }
    }
    exports.StreamMessageWriter = v;
    const b = process.env.XDG_RUNTIME_DIR;
    const B = new Map([['linux', 107], ['darwin', 103]]);
    exports.generateRandomPipeName = function () {
      if (process.platform === 'win32') {
        return `\\\\.\\pipe\\lsp-${d.randomBytes(16).toString('hex')}-sock`;
      }
      let e = 32;
      const t = g.realpathSync(b ?? l.tmpdir());
      const n = B.get(process.platform);
      if (n !== undefined) {
        e = Math.min(n - t.length - 9, e);
      }
      if (e < 16) {
        throw new Error(`Unable to generate a random pipe name with ${e} characters.`);
      }
      const r = d.randomBytes(Math.floor(e / 2)).toString('hex');
      return u.join(t, `lsp-${r}.sock`);
    };
    exports.createClientPipeTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerPipeTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e);
      return [new y(n, t), new w(n, t)];
    };
    exports.createClientSocketTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, '127.0.0.1', () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerSocketTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e, '127.0.0.1');
      return [new y(n, t), new w(n, t)];
    };
    exports.createMessageConnection = function (e, t, n, r) {
      if (!n) {
        n = f.NullLogger;
      }
      const o = function (e) {
        const t = e;
        return t.read !== undefined && t.addListener !== undefined;
      }(e) ? new _(e) : e;
      const s = function (e) {
        const t = e;
        return t.write !== undefined && t.addListener !== undefined;
      }(t) ? new v(t) : t;
      if (f.ConnectionStrategy.is(r)) {
        r = {
          connectionStrategy: r
        };
      }
      return f.createMessageConnection(o, s, n, r);
    };
  },
  27849: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const r = require(39023);
    const o = require(90355);
    class s extends o.AbstractMessageBuffer {
      static emptyBuffer = Buffer.allocUnsafe(0);
      constructor(e = 'utf-8') {
        super(e);
      }
      emptyBuffer() {
        return s.emptyBuffer;
      }
      fromString(e, t) {
        return Buffer.from(e, t);
      }
      toString(e, t) {
        if (e instanceof Buffer) {
          return e.toString(t);
        } else {
          return new r.TextDecoder(t).decode(e);
        }
      }
      asNative(e, t) {
        if (t === undefined) {
          if (e instanceof Buffer) {
            return e;
          } else {
            return Buffer.from(e);
          }
        } else {
          if (e instanceof Buffer) {
            return e.slice(0, t);
          } else {
            return Buffer.from(e, 0, t);
          }
        }
      }
      allocNative(e) {
        return Buffer.allocUnsafe(e);
      }
    }
    class a {
      stream;
      constructor(e) {
        this.stream = e;
      }
      onClose(e) {
        this.stream.on('close', e);
        return o.Disposable.create(() => this.stream.off('close', e));
      }
      onError(e) {
        this.stream.on('error', e);
        return o.Disposable.create(() => this.stream.off('error', e));
      }
      onEnd(e) {
        this.stream.on('end', e);
        return o.Disposable.create(() => this.stream.off('end', e));
      }
      onData(e) {
        this.stream.on('data', e);
        return o.Disposable.create(() => this.stream.off('data', e));
      }
    }
    class A {
      stream;
      constructor(e) {
        this.stream = e;
      }
      onClose(e) {
        this.stream.on('close', e);
        return o.Disposable.create(() => this.stream.off('close', e));
      }
      onError(e) {
        this.stream.on('error', e);
        return o.Disposable.create(() => this.stream.off('error', e));
      }
      onEnd(e) {
        this.stream.on('end', e);
        return o.Disposable.create(() => this.stream.off('end', e));
      }
      write(e, t) {
        return new Promise((n, r) => {
          const o = e => {
            if (e == null) {
              n();
            } else {
              r(e);
            }
          };
          if (typeof e == 'string') {
            this.stream.write(e, t, o);
          } else {
            this.stream.write(e, o);
          }
        });
      }
      end() {
        this.stream.end();
      }
    }
    const c = Object.freeze({
      messageBuffer: Object.freeze({
        create: e => new s(e)
      }),
      applicationJson: Object.freeze({
        encoder: Object.freeze({
          name: 'application/json',
          encode: (e, t) => {
            try {
              return Promise.resolve(Buffer.from(JSON.stringify(e, undefined, 0), t.charset));
            } catch (e) {
              return Promise.reject(e);
            }
          }
        }),
        decoder: Object.freeze({
          name: 'application/json',
          decode: (e, t) => {
            try {
              if (e instanceof Buffer) {
                return Promise.resolve(JSON.parse(e.toString(t.charset)));
              } else {
                return Promise.resolve(JSON.parse(new r.TextDecoder(t.charset).decode(e)));
              }
            } catch (e) {
              return Promise.reject(e);
            }
          }
        })
      }),
      stream: Object.freeze({
        asReadableStream: e => new a(e),
        asWritableStream: e => new A(e)
      }),
      console,
      timer: Object.freeze({
        setTimeout(e, t, ...n) {
          const r = setTimeout(e, t, ...n);
          return {
            dispose: () => clearTimeout(r)
          };
        },
        setImmediate(e, ...t) {
          const n = setImmediate(e, ...t);
          return {
            dispose: () => clearImmediate(n)
          };
        },
        setInterval(e, t, ...n) {
          const r = setInterval(e, t, ...n);
          return {
            dispose: () => clearInterval(r)
          };
        }
      })
    });
    function u() {
      return c;
    }
    (function (e) {
      e.install = function () {
        o.RAL.install(c);
      };
    })(u ||= {});
    exports.default = u;
  },
  37688: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LSPErrorCodes = exports.createProtocolConnection = undefined;
    __exportStar(require(90355), exports);
    __exportStar(require(38659), exports);
    __exportStar(require(29850), exports);
    __exportStar(require(88650), exports);
    var s;
    var a = require(12070);
    Object.defineProperty(exports, 'createProtocolConnection', {
      enumerable: true,
      get: function () {
        return a.createProtocolConnection;
      }
    });
    (function (e) {
      e.lspReservedErrorRangeStart = -32899;
      e.RequestFailed = -32803;
      e.ServerCancelled = -32802;
      e.ContentModified = -32801;
      e.RequestCancelled = -32800;
      e.lspReservedErrorRangeEnd = -32800;
    })(s || (exports.LSPErrorCodes = s = {}));
  },
  12070: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createProtocolConnection = undefined;
    const r = require(90355);
    exports.createProtocolConnection = function (e, t, n, o) {
      if (r.ConnectionStrategy.is(o)) {
        o = {
          connectionStrategy: o
        };
      }
      return r.createMessageConnection(e, t, n, o);
    };
  },
  29850: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = undefined;
    const r = require(90355);
    var o;
    (function (e) {
      e.clientToServer = 'clientToServer';
      e.serverToClient = 'serverToClient';
      e.both = 'both';
    })(o || (exports.MessageDirection = o = {}));
    exports.RegistrationType = class {
      ____;
      method;
      constructor(e) {
        this.method = e;
      }
    };
    class s extends r.RequestType0 {
      __;
      ___;
      ____;
      _pr;
      constructor(e) {
        super(e);
      }
    }
    exports.ProtocolRequestType0 = s;
    class a extends r.RequestType {
      __;
      ___;
      ____;
      _pr;
      constructor(e) {
        super(e, r.ParameterStructures.byName);
      }
    }
    exports.ProtocolRequestType = a;
    class A extends r.NotificationType0 {
      ___;
      ____;
      constructor(e) {
        super(e);
      }
    }
    exports.ProtocolNotificationType0 = A;
    class c extends r.NotificationType {
      ___;
      ____;
      constructor(e) {
        super(e, r.ParameterStructures.byName);
      }
    }
    exports.ProtocolNotificationType = c;
  },
  26523: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/prepareCallHierarchy';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.CallHierarchyPrepareRequest = o = {}));
    (function (e) {
      e.method = 'callHierarchy/incomingCalls';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.CallHierarchyIncomingCallsRequest = s = {}));
    (function (e) {
      e.method = 'callHierarchy/outgoingCalls';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.CallHierarchyOutgoingCallsRequest = a = {}));
  },
  81118: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ColorPresentationRequest = exports.DocumentColorRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/documentColor';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.DocumentColorRequest = o = {}));
    (function (e) {
      e.method = 'textDocument/colorPresentation';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.ColorPresentationRequest = s = {}));
  },
  33026: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ConfigurationRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'workspace/configuration';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ConfigurationRequest = o = {}));
  },
  93384: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DeclarationRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/declaration';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.DeclarationRequest = o = {}));
  },
  48329: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = undefined;
    const a = require(90355);
    const A = __importStar(require(760));
    const c = require(29850);
    var u;
    var l;
    var g;
    var d;
    var h;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && A.boolean(t.retriggerRequest);
      };
    })(u || (exports.DiagnosticServerCancellationData = u = {}));
    (function (e) {
      e.Full = 'full';
      e.Unchanged = 'unchanged';
    })(l || (exports.DocumentDiagnosticReportKind = l = {}));
    (function (e) {
      e.method = 'textDocument/diagnostic';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolRequestType(e.method);
      e.partialResult = new a.ProgressType();
    })(g || (exports.DocumentDiagnosticRequest = g = {}));
    (function (e) {
      e.method = 'workspace/diagnostic';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolRequestType(e.method);
      e.partialResult = new a.ProgressType();
    })(d || (exports.WorkspaceDiagnosticRequest = d = {}));
    (function (e) {
      e.method = 'workspace/diagnostic/refresh';
      e.messageDirection = c.MessageDirection.serverToClient;
      e.type = new c.ProtocolRequestType0(e.method);
    })(h || (exports.DiagnosticRefreshRequest = h = {}));
  },
  70842: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    (function (e) {
      e.file = 'file';
      e.folder = 'folder';
    })(o || (exports.FileOperationPatternKind = o = {}));
    (function (e) {
      e.method = 'workspace/willCreateFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.WillCreateFilesRequest = s = {}));
    (function (e) {
      e.method = 'workspace/didCreateFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(a || (exports.DidCreateFilesNotification = a = {}));
    (function (e) {
      e.method = 'workspace/willRenameFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(A || (exports.WillRenameFilesRequest = A = {}));
    (function (e) {
      e.method = 'workspace/didRenameFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(c || (exports.DidRenameFilesNotification = c = {}));
    (function (e) {
      e.method = 'workspace/didDeleteFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(u || (exports.DidDeleteFilesNotification = u = {}));
    (function (e) {
      e.method = 'workspace/willDeleteFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(l || (exports.WillDeleteFilesRequest = l = {}));
  },
  61128: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/foldingRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.FoldingRangeRequest = o = {}));
    (function (e) {
      e.method = 'workspace/foldingRange/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(s || (exports.FoldingRangeRefreshRequest = s = {}));
  },
  58220: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ImplementationRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/implementation';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ImplementationRequest = o = {}));
  },
  17582: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/inlayHint';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlayHintRequest = o = {}));
    (function (e) {
      e.method = 'inlayHint/resolve';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.InlayHintResolveRequest = s = {}));
    (function (e) {
      e.method = 'workspace/inlayHint/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(a || (exports.InlayHintRefreshRequest = a = {}));
  },
  38157: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineCompletionRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/inlineCompletion';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlineCompletionRequest = o = {}));
  },
  49118: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineValueRefreshRequest = exports.InlineValueRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/inlineValue';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlineValueRequest = o = {}));
    (function (e) {
      e.method = 'workspace/inlineValue/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(s || (exports.InlineValueRefreshRequest = s = {}));
  },
  88650: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.GlobPattern = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.RegularExpressionEngineKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = undefined;
    exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangesFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = undefined;
    exports.TextDocumentContentRefreshRequest = exports.TextDocumentContentRequest = exports.InlineCompletionRequest = exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = exports.MonikerRequest = exports.MonikerKind = undefined;
    const a = require(29850);
    const A = require(38659);
    const c = __importStar(require(760));
    const u = require(58220);
    Object.defineProperty(exports, 'ImplementationRequest', {
      enumerable: true,
      get: function () {
        return u.ImplementationRequest;
      }
    });
    const l = require(64119);
    Object.defineProperty(exports, 'TypeDefinitionRequest', {
      enumerable: true,
      get: function () {
        return l.TypeDefinitionRequest;
      }
    });
    const g = require(30481);
    Object.defineProperty(exports, 'WorkspaceFoldersRequest', {
      enumerable: true,
      get: function () {
        return g.WorkspaceFoldersRequest;
      }
    });
    Object.defineProperty(exports, 'DidChangeWorkspaceFoldersNotification', {
      enumerable: true,
      get: function () {
        return g.DidChangeWorkspaceFoldersNotification;
      }
    });
    const d = require(33026);
    Object.defineProperty(exports, 'ConfigurationRequest', {
      enumerable: true,
      get: function () {
        return d.ConfigurationRequest;
      }
    });
    const h = require(81118);
    Object.defineProperty(exports, 'DocumentColorRequest', {
      enumerable: true,
      get: function () {
        return h.DocumentColorRequest;
      }
    });
    Object.defineProperty(exports, 'ColorPresentationRequest', {
      enumerable: true,
      get: function () {
        return h.ColorPresentationRequest;
      }
    });
    const f = require(61128);
    Object.defineProperty(exports, 'FoldingRangeRequest', {
      enumerable: true,
      get: function () {
        return f.FoldingRangeRequest;
      }
    });
    Object.defineProperty(exports, 'FoldingRangeRefreshRequest', {
      enumerable: true,
      get: function () {
        return f.FoldingRangeRefreshRequest;
      }
    });
    const p = require(93384);
    Object.defineProperty(exports, 'DeclarationRequest', {
      enumerable: true,
      get: function () {
        return p.DeclarationRequest;
      }
    });
    const m = require(85621);
    Object.defineProperty(exports, 'SelectionRangeRequest', {
      enumerable: true,
      get: function () {
        return m.SelectionRangeRequest;
      }
    });
    const I = require(42609);
    Object.defineProperty(exports, 'WorkDoneProgress', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgress;
      }
    });
    Object.defineProperty(exports, 'WorkDoneProgressCreateRequest', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgressCreateRequest;
      }
    });
    Object.defineProperty(exports, 'WorkDoneProgressCancelNotification', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgressCancelNotification;
      }
    });
    const E = require(26523);
    Object.defineProperty(exports, 'CallHierarchyIncomingCallsRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyIncomingCallsRequest;
      }
    });
    Object.defineProperty(exports, 'CallHierarchyOutgoingCallsRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyOutgoingCallsRequest;
      }
    });
    Object.defineProperty(exports, 'CallHierarchyPrepareRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyPrepareRequest;
      }
    });
    const y = require(4884);
    Object.defineProperty(exports, 'TokenFormat', {
      enumerable: true,
      get: function () {
        return y.TokenFormat;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensDeltaRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensDeltaRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRangeRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRangeRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRefreshRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRefreshRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRegistrationType', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRegistrationType;
      }
    });
    const w = require(29726);
    Object.defineProperty(exports, 'ShowDocumentRequest', {
      enumerable: true,
      get: function () {
        return w.ShowDocumentRequest;
      }
    });
    const _ = require(44298);
    Object.defineProperty(exports, 'LinkedEditingRangeRequest', {
      enumerable: true,
      get: function () {
        return _.LinkedEditingRangeRequest;
      }
    });
    const v = require(70842);
    Object.defineProperty(exports, 'FileOperationPatternKind', {
      enumerable: true,
      get: function () {
        return v.FileOperationPatternKind;
      }
    });
    Object.defineProperty(exports, 'DidCreateFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidCreateFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillCreateFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillCreateFilesRequest;
      }
    });
    Object.defineProperty(exports, 'DidRenameFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidRenameFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillRenameFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillRenameFilesRequest;
      }
    });
    Object.defineProperty(exports, 'DidDeleteFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidDeleteFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillDeleteFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillDeleteFilesRequest;
      }
    });
    const b = require(64917);
    Object.defineProperty(exports, 'UniquenessLevel', {
      enumerable: true,
      get: function () {
        return b.UniquenessLevel;
      }
    });
    Object.defineProperty(exports, 'MonikerKind', {
      enumerable: true,
      get: function () {
        return b.MonikerKind;
      }
    });
    Object.defineProperty(exports, 'MonikerRequest', {
      enumerable: true,
      get: function () {
        return b.MonikerRequest;
      }
    });
    const B = require(50583);
    Object.defineProperty(exports, 'TypeHierarchyPrepareRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchyPrepareRequest;
      }
    });
    Object.defineProperty(exports, 'TypeHierarchySubtypesRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchySubtypesRequest;
      }
    });
    Object.defineProperty(exports, 'TypeHierarchySupertypesRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchySupertypesRequest;
      }
    });
    const Q = require(49118);
    Object.defineProperty(exports, 'InlineValueRequest', {
      enumerable: true,
      get: function () {
        return Q.InlineValueRequest;
      }
    });
    Object.defineProperty(exports, 'InlineValueRefreshRequest', {
      enumerable: true,
      get: function () {
        return Q.InlineValueRefreshRequest;
      }
    });
    const D = require(17582);
    Object.defineProperty(exports, 'InlayHintRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintRequest;
      }
    });
    Object.defineProperty(exports, 'InlayHintResolveRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintResolveRequest;
      }
    });
    Object.defineProperty(exports, 'InlayHintRefreshRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintRefreshRequest;
      }
    });
    const S = require(48329);
    Object.defineProperty(exports, 'DiagnosticServerCancellationData', {
      enumerable: true,
      get: function () {
        return S.DiagnosticServerCancellationData;
      }
    });
    Object.defineProperty(exports, 'DocumentDiagnosticReportKind', {
      enumerable: true,
      get: function () {
        return S.DocumentDiagnosticReportKind;
      }
    });
    Object.defineProperty(exports, 'DocumentDiagnosticRequest', {
      enumerable: true,
      get: function () {
        return S.DocumentDiagnosticRequest;
      }
    });
    Object.defineProperty(exports, 'WorkspaceDiagnosticRequest', {
      enumerable: true,
      get: function () {
        return S.WorkspaceDiagnosticRequest;
      }
    });
    Object.defineProperty(exports, 'DiagnosticRefreshRequest', {
      enumerable: true,
      get: function () {
        return S.DiagnosticRefreshRequest;
      }
    });
    const T = require(77959);
    Object.defineProperty(exports, 'NotebookCellKind', {
      enumerable: true,
      get: function () {
        return T.NotebookCellKind;
      }
    });
    Object.defineProperty(exports, 'ExecutionSummary', {
      enumerable: true,
      get: function () {
        return T.ExecutionSummary;
      }
    });
    Object.defineProperty(exports, 'NotebookCell', {
      enumerable: true,
      get: function () {
        return T.NotebookCell;
      }
    });
    Object.defineProperty(exports, 'NotebookDocument', {
      enumerable: true,
      get: function () {
        return T.NotebookDocument;
      }
    });
    Object.defineProperty(exports, 'NotebookDocumentSyncRegistrationType', {
      enumerable: true,
      get: function () {
        return T.NotebookDocumentSyncRegistrationType;
      }
    });
    Object.defineProperty(exports, 'DidOpenNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidOpenNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'NotebookCellArrayChange', {
      enumerable: true,
      get: function () {
        return T.NotebookCellArrayChange;
      }
    });
    Object.defineProperty(exports, 'DidChangeNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidChangeNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'DidSaveNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidSaveNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'DidCloseNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidCloseNotebookDocumentNotification;
      }
    });
    const R = require(38157);
    Object.defineProperty(exports, 'InlineCompletionRequest', {
      enumerable: true,
      get: function () {
        return R.InlineCompletionRequest;
      }
    });
    const k = require(3675);
    var x;
    var P;
    var F;
    var M;
    var O;
    var N;
    var L;
    var K;
    var U;
    var j;
    var q;
    var G;
    var Y;
    var H;
    var J;
    var z;
    var $;
    var W;
    var V;
    var X;
    var Z;
    var ee;
    var te;
    var ne;
    var re;
    var oe;
    var ie;
    var se;
    var ae;
    var Ae;
    var ce;
    var ue;
    var le;
    var ge;
    var de;
    var he;
    var fe;
    var pe;
    var Ce;
    var me;
    var Ie;
    var Ee;
    var ye;
    var we;
    var _e;
    var ve;
    var be;
    var Be;
    var Qe;
    var De;
    var Se;
    var Te;
    var Re;
    var ke;
    var xe;
    var Pe;
    var Fe;
    var Me;
    var Oe;
    var Ne;
    var Le;
    var Ke;
    var Ue;
    var je;
    var qe;
    var Ge;
    var Ye;
    Object.defineProperty(exports, 'TextDocumentContentRequest', {
      enumerable: true,
      get: function () {
        return k.TextDocumentContentRequest;
      }
    });
    Object.defineProperty(exports, 'TextDocumentContentRefreshRequest', {
      enumerable: true,
      get: function () {
        return k.TextDocumentContentRefreshRequest;
      }
    });
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.string(t) || c.string(t.language) || c.string(t.scheme) || fe.is(t.pattern);
      };
    })(x || (exports.TextDocumentFilter = x = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (c.string(t.notebookType) || c.string(t.scheme) || c.string(t.pattern));
      };
    })(P || (exports.NotebookDocumentFilter = P = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (c.string(t.notebook) || P.is(t.notebook)) && (t.language === undefined || c.string(t.language));
      };
    })(F || (exports.NotebookCellTextDocumentFilter = F = {}));
    (function (e) {
      e.is = function (e) {
        if (!Array.isArray(e)) {
          return false;
        }
        for (const t of e) {
          if (!c.string(t) && !x.is(t) && !F.is(t)) {
            return false;
          }
        }
        return true;
      };
    })(M || (exports.DocumentSelector = M = {}));
    (function (e) {
      e.method = 'client/registerCapability';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(O || (exports.RegistrationRequest = O = {}));
    (function (e) {
      e.method = 'client/unregisterCapability';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(N || (exports.UnregistrationRequest = N = {}));
    (function (e) {
      e.Create = 'create';
      e.Rename = 'rename';
      e.Delete = 'delete';
    })(L || (exports.ResourceOperationKind = L = {}));
    (function (e) {
      e.Abort = 'abort';
      e.Transactional = 'transactional';
      e.TextOnlyTransactional = 'textOnlyTransactional';
      e.Undo = 'undo';
    })(K || (exports.FailureHandlingKind = K = {}));
    (function (e) {
      e.ES2020 = 'ES2020';
    })(U || (exports.RegularExpressionEngineKind = U = {}));
    (function (e) {
      e.UTF8 = 'utf-8';
      e.UTF16 = 'utf-16';
      e.UTF32 = 'utf-32';
    })(j || (exports.PositionEncodingKind = j = {}));
    (function (e) {
      e.hasId = function (e) {
        const t = e;
        return t && c.string(t.id) && t.id.length > 0;
      };
    })(q || (exports.StaticRegistrationOptions = q = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.documentSelector === null || M.is(t.documentSelector));
      };
    })(G || (exports.TextDocumentRegistrationOptions = G = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (t.workDoneProgress === undefined || c.boolean(t.workDoneProgress));
      };
      e.hasWorkDoneProgress = function (e) {
        const t = e;
        return t && c.boolean(t.workDoneProgress);
      };
    })(Y || (exports.WorkDoneProgressOptions = Y = {}));
    (function (e) {
      e.method = 'initialize';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(H || (exports.InitializeRequest = H = {}));
    (function (e) {
      e.unknownProtocolVersion = 1;
    })(J || (exports.InitializeErrorCodes = J = {}));
    (function (e) {
      e.method = 'initialized';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(z || (exports.InitializedNotification = z = {}));
    (function (e) {
      e.method = 'shutdown';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType0(e.method);
    })($ || (exports.ShutdownRequest = $ = {}));
    (function (e) {
      e.method = 'exit';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType0(e.method);
    })(W || (exports.ExitNotification = W = {}));
    (function (e) {
      e.method = 'workspace/didChangeConfiguration';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(V || (exports.DidChangeConfigurationNotification = V = {}));
    (function (e) {
      e.Error = 1;
      e.Warning = 2;
      e.Info = 3;
      e.Log = 4;
      e.Debug = 5;
    })(X || (exports.MessageType = X = {}));
    (function (e) {
      e.method = 'window/showMessage';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Z || (exports.ShowMessageNotification = Z = {}));
    (function (e) {
      e.method = 'window/showMessageRequest';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(ee || (exports.ShowMessageRequest = ee = {}));
    (function (e) {
      e.method = 'window/logMessage';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(te || (exports.LogMessageNotification = te = {}));
    (function (e) {
      e.method = 'telemetry/event';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ne || (exports.TelemetryEventNotification = ne = {}));
    (function (e) {
      e.None = 0;
      e.Full = 1;
      e.Incremental = 2;
    })(re || (exports.TextDocumentSyncKind = re = {}));
    (function (e) {
      e.method = 'textDocument/didOpen';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(oe || (exports.DidOpenTextDocumentNotification = oe = {}));
    (function (e) {
      e.isIncremental = function (e) {
        const t = e;
        return t != null && typeof t.text == 'string' && t.range !== undefined && (t.rangeLength === undefined || typeof t.rangeLength == 'number');
      };
      e.isFull = function (e) {
        const t = e;
        return t != null && typeof t.text == 'string' && t.range === undefined && t.rangeLength === undefined;
      };
    })(ie || (exports.TextDocumentContentChangeEvent = ie = {}));
    (function (e) {
      e.method = 'textDocument/didChange';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(se || (exports.DidChangeTextDocumentNotification = se = {}));
    (function (e) {
      e.method = 'textDocument/didClose';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ae || (exports.DidCloseTextDocumentNotification = ae = {}));
    (function (e) {
      e.method = 'textDocument/didSave';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Ae || (exports.DidSaveTextDocumentNotification = Ae = {}));
    (function (e) {
      e.Manual = 1;
      e.AfterDelay = 2;
      e.FocusOut = 3;
    })(ce || (exports.TextDocumentSaveReason = ce = {}));
    (function (e) {
      e.method = 'textDocument/willSave';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ue || (exports.WillSaveTextDocumentNotification = ue = {}));
    (function (e) {
      e.method = 'textDocument/willSaveWaitUntil';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(le || (exports.WillSaveTextDocumentWaitUntilRequest = le = {}));
    (function (e) {
      e.method = 'workspace/didChangeWatchedFiles';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ge || (exports.DidChangeWatchedFilesNotification = ge = {}));
    (function (e) {
      e.Created = 1;
      e.Changed = 2;
      e.Deleted = 3;
    })(de || (exports.FileChangeType = de = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (A.URI.is(t.baseUri) || A.WorkspaceFolder.is(t.baseUri)) && c.string(t.pattern);
      };
    })(he || (exports.RelativePattern = he = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.string(t) || he.is(t);
      };
    })(fe || (exports.GlobPattern = fe = {}));
    (function (e) {
      e.Create = 1;
      e.Change = 2;
      e.Delete = 4;
    })(pe || (exports.WatchKind = pe = {}));
    (function (e) {
      e.method = 'textDocument/publishDiagnostics';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Ce || (exports.PublishDiagnosticsNotification = Ce = {}));
    (function (e) {
      e.Invoked = 1;
      e.TriggerCharacter = 2;
      e.TriggerForIncompleteCompletions = 3;
    })(me || (exports.CompletionTriggerKind = me = {}));
    (function (e) {
      e.method = 'textDocument/completion';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ie || (exports.CompletionRequest = Ie = {}));
    (function (e) {
      e.method = 'completionItem/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ee || (exports.CompletionResolveRequest = Ee = {}));
    (function (e) {
      e.method = 'textDocument/hover';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ye || (exports.HoverRequest = ye = {}));
    (function (e) {
      e.Invoked = 1;
      e.TriggerCharacter = 2;
      e.ContentChange = 3;
    })(we || (exports.SignatureHelpTriggerKind = we = {}));
    (function (e) {
      e.method = 'textDocument/signatureHelp';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(_e || (exports.SignatureHelpRequest = _e = {}));
    (function (e) {
      e.method = 'textDocument/definition';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ve || (exports.DefinitionRequest = ve = {}));
    (function (e) {
      e.method = 'textDocument/references';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(be || (exports.ReferencesRequest = be = {}));
    (function (e) {
      e.method = 'textDocument/documentHighlight';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Be || (exports.DocumentHighlightRequest = Be = {}));
    (function (e) {
      e.method = 'textDocument/documentSymbol';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Qe || (exports.DocumentSymbolRequest = Qe = {}));
    (function (e) {
      e.method = 'textDocument/codeAction';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(De || (exports.CodeActionRequest = De = {}));
    (function (e) {
      e.method = 'codeAction/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Se || (exports.CodeActionResolveRequest = Se = {}));
    (function (e) {
      e.method = 'workspace/symbol';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Te || (exports.WorkspaceSymbolRequest = Te = {}));
    (function (e) {
      e.method = 'workspaceSymbol/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Re || (exports.WorkspaceSymbolResolveRequest = Re = {}));
    (function (e) {
      e.method = 'textDocument/codeLens';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ke || (exports.CodeLensRequest = ke = {}));
    (function (e) {
      e.method = 'codeLens/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(xe || (exports.CodeLensResolveRequest = xe = {}));
    (function (e) {
      e.method = 'workspace/codeLens/refresh';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType0(e.method);
    })(Pe || (exports.CodeLensRefreshRequest = Pe = {}));
    (function (e) {
      e.method = 'textDocument/documentLink';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Fe || (exports.DocumentLinkRequest = Fe = {}));
    (function (e) {
      e.method = 'documentLink/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Me || (exports.DocumentLinkResolveRequest = Me = {}));
    (function (e) {
      e.method = 'textDocument/formatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Oe || (exports.DocumentFormattingRequest = Oe = {}));
    (function (e) {
      e.method = 'textDocument/rangeFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ne || (exports.DocumentRangeFormattingRequest = Ne = {}));
    (function (e) {
      e.method = 'textDocument/rangesFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Le || (exports.DocumentRangesFormattingRequest = Le = {}));
    (function (e) {
      e.method = 'textDocument/onTypeFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ke || (exports.DocumentOnTypeFormattingRequest = Ke = {}));
    (function (e) {
      e.Identifier = 1;
    })(Ue || (exports.PrepareSupportDefaultBehavior = Ue = {}));
    (function (e) {
      e.method = 'textDocument/rename';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(je || (exports.RenameRequest = je = {}));
    (function (e) {
      e.method = 'textDocument/prepareRename';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(qe || (exports.PrepareRenameRequest = qe = {}));
    (function (e) {
      e.method = 'workspace/executeCommand';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ge || (exports.ExecuteCommandRequest = Ge = {}));
    (function (e) {
      e.method = 'workspace/applyEdit';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType('workspace/applyEdit');
    })(Ye || (exports.ApplyWorkspaceEditRequest = Ye = {}));
  },
  44298: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LinkedEditingRangeRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/linkedEditingRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.LinkedEditingRangeRequest = o = {}));
  },
  64917: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    (function (e) {
      e.document = 'document';
      e.project = 'project';
      e.group = 'group';
      e.scheme = 'scheme';
      e.global = 'global';
    })(o || (exports.UniquenessLevel = o = {}));
    (function (e) {
      e.$import = 'import';
      e.$export = 'export';
      e.local = 'local';
    })(s || (exports.MonikerKind = s = {}));
    (function (e) {
      e.method = 'textDocument/moniker';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.MonikerRequest = a = {}));
  },
  77959: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = undefined;
    const a = require(38659);
    const A = __importStar(require(760));
    const c = require(29850);
    var u;
    var l;
    var g;
    var d;
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    (function (e) {
      e.Markup = 1;
      e.Code = 2;
      e.is = function (e) {
        return e === 1 || e === 2;
      };
    })(u || (exports.NotebookCellKind = u = {}));
    (function (e) {
      e.create = function (e, t) {
        const n = {
          executionOrder: e
        };
        if (t === true || t === false) {
          n.success = t;
        }
        return n;
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && a.uinteger.is(t.executionOrder) && (t.success === undefined || A.boolean(t.success));
      };
      e.equals = function (e, t) {
        return e === t || e != null && t != null && e.executionOrder === t.executionOrder && e.success === t.success;
      };
    })(l || (exports.ExecutionSummary = l = {}));
    (function (e) {
      function t(e, n) {
        if (e === n) {
          return true;
        }
        if (e == null || n == null) {
          return false;
        }
        if (typeof e != typeof n) {
          return false;
        }
        if (typeof e != 'object') {
          return false;
        }
        const r = Array.isArray(e);
        const o = Array.isArray(n);
        if (r !== o) {
          return false;
        }
        if (r && o) {
          if (e.length !== n.length) {
            return false;
          }
          for (let r = 0; r < e.length; r++) {
            if (!t(e[r], n[r])) {
              return false;
            }
          }
        }
        if (A.objectLiteral(e) && A.objectLiteral(n)) {
          const r = Object.keys(e);
          const o = Object.keys(n);
          if (r.length !== o.length) {
            return false;
          }
          r.sort();
          o.sort();
          if (!t(r, o)) {
            return false;
          }
          for (let o = 0; o < r.length; o++) {
            const s = r[o];
            if (!t(e[s], n[s])) {
              return false;
            }
          }
        }
        return true;
      }
      e.create = function (e, t) {
        return {
          kind: e,
          document: t
        };
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && u.is(t.kind) && a.DocumentUri.is(t.document) && (t.metadata === undefined || A.objectLiteral(t.metadata));
      };
      e.diff = function (e, n) {
        const r = new Set();
        if (e.document !== n.document) {
          r.add('document');
        }
        if (e.kind !== n.kind) {
          r.add('kind');
        }
        if (e.executionSummary !== n.executionSummary) {
          r.add('executionSummary');
        }
        if ((e.metadata !== undefined || n.metadata !== undefined) && !t(e.metadata, n.metadata)) {
          r.add('metadata');
        }
        if ((e.executionSummary !== undefined || n.executionSummary !== undefined) && !l.equals(e.executionSummary, n.executionSummary)) {
          r.add('executionSummary');
        }
        return r;
      };
    })(g || (exports.NotebookCell = g = {}));
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          uri: e,
          notebookType: t,
          version: n,
          cells: r
        };
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && A.string(t.uri) && a.integer.is(t.version) && A.typedArray(t.cells, g.is);
      };
    })(d || (exports.NotebookDocument = d = {}));
    (function (e) {
      e.method = 'notebookDocument/sync';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.RegistrationType(e.method);
    })(h || (exports.NotebookDocumentSyncRegistrationType = h = {}));
    (function (e) {
      e.method = 'notebookDocument/didOpen';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(f || (exports.DidOpenNotebookDocumentNotification = f = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && a.uinteger.is(t.start) && a.uinteger.is(t.deleteCount) && (t.cells === undefined || A.typedArray(t.cells, g.is));
      };
      e.create = function (e, t, n) {
        const r = {
          start: e,
          deleteCount: t
        };
        if (n !== undefined) {
          r.cells = n;
        }
        return r;
      };
    })(p || (exports.NotebookCellArrayChange = p = {}));
    (function (e) {
      e.method = 'notebookDocument/didChange';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(m || (exports.DidChangeNotebookDocumentNotification = m = {}));
    (function (e) {
      e.method = 'notebookDocument/didSave';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(I || (exports.DidSaveNotebookDocumentNotification = I = {}));
    (function (e) {
      e.method = 'notebookDocument/didClose';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(E || (exports.DidCloseNotebookDocumentNotification = E = {}));
  },
  42609: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = undefined;
    const r = require(90355);
    const o = require(29850);
    var s;
    var a;
    var A;
    (function (e) {
      e.type = new r.ProgressType();
      e.is = function (t) {
        return t === e.type;
      };
    })(s || (exports.WorkDoneProgress = s = {}));
    (function (e) {
      e.method = 'window/workDoneProgress/create';
      e.messageDirection = o.MessageDirection.serverToClient;
      e.type = new o.ProtocolRequestType(e.method);
    })(a || (exports.WorkDoneProgressCreateRequest = a = {}));
    (function (e) {
      e.method = 'window/workDoneProgress/cancel';
      e.messageDirection = o.MessageDirection.clientToServer;
      e.type = new o.ProtocolNotificationType(e.method);
    })(A || (exports.WorkDoneProgressCancelNotification = A = {}));
  },
  85621: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SelectionRangeRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/selectionRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.SelectionRangeRequest = o = {}));
  },
  4884: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    (function (e) {
      e.Relative = 'relative';
    })(o || (exports.TokenFormat = o = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens';
      e.type = new r.RegistrationType(e.method);
    })(s || (exports.SemanticTokensRegistrationType = s = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/full';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(a || (exports.SemanticTokensRequest = a = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/full/delta';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(A || (exports.SemanticTokensDeltaRequest = A = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/range';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(c || (exports.SemanticTokensRangeRequest = c = {}));
    (function (e) {
      e.method = 'workspace/semanticTokens/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(u || (exports.SemanticTokensRefreshRequest = u = {}));
  },
  29726: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ShowDocumentRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'window/showDocument';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ShowDocumentRequest = o = {}));
  },
  3675: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocumentContentRefreshRequest = exports.TextDocumentContentRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    (function (e) {
      e.method = 'workspace/textDocumentContent';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TextDocumentContentRequest = o = {}));
    (function (e) {
      e.method = 'workspace/textDocumentContent/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.TextDocumentContentRefreshRequest = s = {}));
  },
  64119: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeDefinitionRequest = undefined;
    const r = require(29850);
    var o;
    (function (e) {
      e.method = 'textDocument/typeDefinition';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TypeDefinitionRequest = o = {}));
  },
  50583: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/prepareTypeHierarchy';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TypeHierarchyPrepareRequest = o = {}));
    (function (e) {
      e.method = 'typeHierarchy/supertypes';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.TypeHierarchySupertypesRequest = s = {}));
    (function (e) {
      e.method = 'typeHierarchy/subtypes';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.TypeHierarchySubtypesRequest = a = {}));
  },
  30481: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = undefined;
    const r = require(29850);
    var o;
    var s;
    (function (e) {
      e.method = 'workspace/workspaceFolders';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(o || (exports.WorkspaceFoldersRequest = o = {}));
    (function (e) {
      e.method = 'workspace/didChangeWorkspaceFolders';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(s || (exports.DidChangeWorkspaceFoldersNotification = s = {}));
  },
  760: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = function (e) {
      return typeof e == 'function';
    };
    exports.array = r;
    exports.stringArray = function (e) {
      return r(e) && e.every(e => n(e));
    };
    exports.typedArray = function (e, t) {
      return Array.isArray(e) && e.every(t);
    };
    exports.objectLiteral = function (e) {
      return e !== null && typeof e == 'object';
    };
  },
  14100: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createProtocolConnection = undefined;
    const s = require(71741);
    __exportStar(require(71741), exports);
    __exportStar(require(37688), exports);
    exports.createProtocolConnection = function (e, t, n, r) {
      return s.createMessageConnection(e, t, n, r);
    };
  },
  55890: function (module, exports, require) {
    var r;
    var o;
    var s;
    var a = this && this.__spreadArray || function (e, t, n) {
      if (n || arguments.length === 2) {
        var r;
        for (var o = 0, s = t.length; o < s; o++) {
          if (!!r || !(o in t)) {
            if (!r) {
              r = Array.prototype.slice.call(t, 0, o);
            }
            r[o] = t[o];
          }
        }
      }
      return e.concat(r || Array.prototype.slice.call(t));
    };
    (function (a) {
      if (typeof module.exports == 'object') {
        var A = a(require(69338), exports);
        if (A !== undefined) {
          module.exports = A;
        }
      } else {
        o = [require, exports];
        if ((s = typeof (r = a) == 'function' ? r.apply(exports, o) : r) !== undefined) {
          module.exports = s;
        }
      }
    })(function (e, t) {
      "use strict";

      Object.defineProperty(t, '__esModule', {
        value: true
      });
      t.TextDocument = undefined;
      var n;
      var r = function () {
        function e(e, t, n, r) {
          this._uri = e;
          this._languageId = t;
          this._version = n;
          this._content = r;
          this._lineOffsets = undefined;
        }
        Object.defineProperty(e.prototype, 'uri', {
          get: function () {
            return this._uri;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(e.prototype, 'languageId', {
          get: function () {
            return this._languageId;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(e.prototype, 'version', {
          get: function () {
            return this._version;
          },
          enumerable: false,
          configurable: true
        });
        e.prototype.getText = function (e) {
          if (e) {
            var t = this.offsetAt(e.start);
            var n = this.offsetAt(e.end);
            return this._content.substring(t, n);
          }
          return this._content;
        };
        e.prototype.update = function (t, n) {
          for (var r = 0, o = t; r < o.length; r++) {
            var c = o[r];
            if (e.isIncremental(c)) {
              var u = A(c.range);
              var l = this.offsetAt(u.start);
              var g = this.offsetAt(u.end);
              this._content = this._content.substring(0, l) + c.text + this._content.substring(g, this._content.length);
              var d = Math.max(u.start.line, 0);
              var h = Math.max(u.end.line, 0);
              var f = this._lineOffsets;
              var p = s(c.text, false, l);
              if (h - d === p.length) {
                for (var m = 0, I = p.length; m < I; m++) {
                  f[m + d + 1] = p[m];
                }
              } else {
                if (p.length < 10000) {
                  f.splice.apply(f, a([d + 1, h - d], p, false));
                } else {
                  this._lineOffsets = f = f.slice(0, d + 1).concat(p, f.slice(h + 1));
                }
              }
              var E = c.text.length - (g - l);
              if (E !== 0) {
                m = d + 1 + p.length;
                I = f.length;
                for (; m < I; m++) {
                  f[m] = f[m] + E;
                }
              }
            } else {
              if (!e.isFull(c)) {
                throw new Error('Unknown change event received');
              }
              this._content = c.text;
              this._lineOffsets = undefined;
            }
          }
          this._version = n;
        };
        e.prototype.getLineOffsets = function () {
          if (this._lineOffsets === undefined) {
            this._lineOffsets = s(this._content, true);
          }
          return this._lineOffsets;
        };
        e.prototype.positionAt = function (e) {
          e = Math.max(Math.min(e, this._content.length), 0);
          var t = this.getLineOffsets();
          var n = 0;
          var r = t.length;
          if (r === 0) {
            return {
              line: 0,
              character: e
            };
          }
          while (n < r) {
            var o = Math.floor((n + r) / 2);
            if (t[o] > e) {
              r = o;
            } else {
              n = o + 1;
            }
          }
          var s = n - 1;
          return {
            line: s,
            character: e - t[s]
          };
        };
        e.prototype.offsetAt = function (e) {
          var t = this.getLineOffsets();
          if (e.line >= t.length) {
            return this._content.length;
          }
          if (e.line < 0) {
            return 0;
          }
          var n = t[e.line];
          var r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
          return Math.max(Math.min(n + e.character, r), n);
        };
        Object.defineProperty(e.prototype, 'lineCount', {
          get: function () {
            return this.getLineOffsets().length;
          },
          enumerable: false,
          configurable: true
        });
        e.isIncremental = function (e) {
          var t = e;
          return t != null && typeof t.text == 'string' && t.range !== undefined && (t.rangeLength === undefined || typeof t.rangeLength == 'number');
        };
        e.isFull = function (e) {
          var t = e;
          return t != null && typeof t.text == 'string' && t.range === undefined && t.rangeLength === undefined;
        };
        return e;
      }();
      function o(e, t) {
        if (e.length <= 1) {
          return e;
        }
        var n = e.length / 2 | 0;
        var r = e.slice(0, n);
        var s = e.slice(n);
        o(r, t);
        o(s, t);
        for (var a = 0, A = 0, c = 0; a < r.length && A < s.length;) {
          var u = t(r[a], s[A]);
          e[c++] = u <= 0 ? r[a++] : s[A++];
        }
        while (a < r.length) {
          e[c++] = r[a++];
        }
        while (A < s.length) {
          e[c++] = s[A++];
        }
        return e;
      }
      function s(e, t, n = 0) {
        var r = t ? [n] : [];
        for (var o = 0; o < e.length; o++) {
          var s = e.charCodeAt(o);
          if (s === 13 || s === 10) {
            if (s === 13 && o + 1 < e.length && e.charCodeAt(o + 1) === 10) {
              o++;
            }
            r.push(n + o + 1);
          }
        }
        return r;
      }
      function A(e) {
        var t = e.start;
        var n = e.end;
        if (t.line > n.line || t.line === n.line && t.character > n.character) {
          return {
            start: n,
            end: t
          };
        } else {
          return e;
        }
      }
      function c(e) {
        var t = A(e.range);
        if (t !== e.range) {
          return {
            newText: e.newText,
            range: t
          };
        } else {
          return e;
        }
      }
      (function (e) {
        e.create = function (e, t, n, o) {
          return new r(e, t, n, o);
        };
        e.update = function (e, t, n) {
          if (e instanceof r) {
            e.update(t, n);
            return e;
          }
          throw new Error('TextDocument.update: document must be created by TextDocument.create');
        };
        e.applyEdits = function (e, t) {
          var n = e.getText();
          var r = 0;
          var s = [];
          for (var a = 0, A = o(t.map(c), function (e, t) {
              var n = e.range.start.line - t.range.start.line;
              if (n === 0) {
                return e.range.start.character - t.range.start.character;
              } else {
                return n;
              }
            }); a < A.length; a++) {
            var u = A[a];
            var l = e.offsetAt(u.range.start);
            if (l < r) {
              throw new Error('Overlapping edit');
            }
            if (l > r) {
              s.push(n.substring(r, l));
            }
            if (u.newText.length) {
              s.push(u.newText);
            }
            r = e.offsetAt(u.range.end);
          }
          s.push(n.substr(r));
          return s.join('');
        };
      })(n || (t.TextDocument = n = {}));
    });
  },
  64819: (module, exports, require) => {
    var r;
    var o;
    var s;
    (function (a) {
      if (typeof module.exports == 'object') {
        var A = a(require(54861), exports);
        if (A !== undefined) {
          module.exports = A;
        }
      } else {
        o = [require, exports];
        if ((s = typeof (r = a) == 'function' ? r.apply(exports, o) : r) !== undefined) {
          module.exports = s;
        }
      }
    })(function (e, t) {
      "use strict";

      var n;
      var r;
      var o;
      var s;
      var a;
      var A;
      var c;
      var u;
      var l;
      var g;
      var d;
      var h;
      var f;
      var p;
      var m;
      var I;
      var E;
      var y;
      var w;
      var _;
      var v;
      var b;
      var B;
      var Q;
      var D;
      var S;
      var T;
      var R;
      Object.defineProperty(t, '__esModule', {
        value: true
      });
      t.TextDocument = t.EOL = t.WorkspaceFolder = t.InlineCompletionContext = t.SelectedCompletionInfo = t.InlineCompletionTriggerKind = t.InlineCompletionList = t.InlineCompletionItem = t.StringValue = t.InlayHint = t.InlayHintLabelPart = t.InlayHintKind = t.InlineValueContext = t.InlineValueEvaluatableExpression = t.InlineValueVariableLookup = t.InlineValueText = t.SemanticTokens = t.SemanticTokenModifiers = t.SemanticTokenTypes = t.SelectionRange = t.DocumentLink = t.FormattingOptions = t.CodeLens = t.CodeAction = t.CodeActionContext = t.CodeActionTriggerKind = t.CodeActionKind = t.DocumentSymbol = t.WorkspaceSymbol = t.SymbolInformation = t.SymbolTag = t.SymbolKind = t.DocumentHighlight = t.DocumentHighlightKind = t.SignatureInformation = t.ParameterInformation = t.Hover = t.MarkedString = t.CompletionList = t.CompletionItem = t.CompletionItemLabelDetails = t.InsertTextMode = t.InsertReplaceEdit = t.CompletionItemTag = t.InsertTextFormat = t.CompletionItemKind = t.MarkupContent = t.MarkupKind = t.TextDocumentItem = t.LanguageKind = t.OptionalVersionedTextDocumentIdentifier = t.VersionedTextDocumentIdentifier = t.TextDocumentIdentifier = t.WorkspaceChange = t.SnippetTextEdit = t.WorkspaceEdit = t.DeleteFile = t.RenameFile = t.CreateFile = t.TextDocumentEdit = t.AnnotatedTextEdit = t.ChangeAnnotationIdentifier = t.ChangeAnnotation = t.TextEdit = t.Command = t.Diagnostic = t.CodeDescription = t.DiagnosticTag = t.DiagnosticSeverity = t.DiagnosticRelatedInformation = t.FoldingRange = t.FoldingRangeKind = t.ColorPresentation = t.ColorInformation = t.Color = t.LocationLink = t.Location = t.Range = t.Position = t.uinteger = t.integer = t.URI = t.DocumentUri = undefined;
      (function (e) {
        e.is = function (e) {
          return typeof e == 'string';
        };
      })(n || (t.DocumentUri = n = {}));
      (function (e) {
        e.is = function (e) {
          return typeof e == 'string';
        };
      })(r || (t.URI = r = {}));
      (function (e) {
        e.MIN_VALUE = -2147483648;
        e.MAX_VALUE = 2147483647;
        e.is = function (t) {
          return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
        };
      })(o || (t.integer = o = {}));
      (function (e) {
        e.MIN_VALUE = 0;
        e.MAX_VALUE = 2147483647;
        e.is = function (t) {
          return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
        };
      })(s || (t.uinteger = s = {}));
      (function (e) {
        e.create = function (e, t) {
          if (e === Number.MAX_VALUE) {
            e = s.MAX_VALUE;
          }
          if (t === Number.MAX_VALUE) {
            t = s.MAX_VALUE;
          }
          return {
            line: e,
            character: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.uinteger(t.line) && Pe.uinteger(t.character);
        };
      })(a || (t.Position = a = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          if (Pe.uinteger(e) && Pe.uinteger(t) && Pe.uinteger(n) && Pe.uinteger(r)) {
            return {
              start: a.create(e, t),
              end: a.create(n, r)
            };
          }
          if (a.is(e) && a.is(t)) {
            return {
              start: e,
              end: t
            };
          }
          throw new Error(`Range#create called with invalid arguments[${e}, ${t}, ${n}, ${r}]`);
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && a.is(t.start) && a.is(t.end);
        };
      })(A || (t.Range = A = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            uri: e,
            range: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && A.is(t.range) && (Pe.string(t.uri) || Pe.undefined(t.uri));
        };
      })(c || (t.Location = c = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          return {
            targetUri: e,
            targetRange: t,
            targetSelectionRange: n,
            originSelectionRange: r
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && A.is(t.targetRange) && Pe.string(t.targetUri) && A.is(t.targetSelectionRange) && (A.is(t.originSelectionRange) || Pe.undefined(t.originSelectionRange));
        };
      })(u || (t.LocationLink = u = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          return {
            red: e,
            green: t,
            blue: n,
            alpha: r
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.numberRange(t.red, 0, 1) && Pe.numberRange(t.green, 0, 1) && Pe.numberRange(t.blue, 0, 1) && Pe.numberRange(t.alpha, 0, 1);
        };
      })(l || (t.Color = l = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            range: e,
            color: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && A.is(t.range) && l.is(t.color);
        };
      })(g || (t.ColorInformation = g = {}));
      (function (e) {
        e.create = function (e, t, n) {
          return {
            label: e,
            textEdit: t,
            additionalTextEdits: n
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.string(t.label) && (Pe.undefined(t.textEdit) || _.is(t)) && (Pe.undefined(t.additionalTextEdits) || Pe.typedArray(t.additionalTextEdits, _.is));
        };
      })(d || (t.ColorPresentation = d = {}));
      (function (e) {
        e.Comment = 'comment';
        e.Imports = 'imports';
        e.Region = 'region';
      })(h || (t.FoldingRangeKind = h = {}));
      (function (e) {
        e.create = function (e, t, n, r, o, s) {
          var a = {
            startLine: e,
            endLine: t
          };
          if (Pe.defined(n)) {
            a.startCharacter = n;
          }
          if (Pe.defined(r)) {
            a.endCharacter = r;
          }
          if (Pe.defined(o)) {
            a.kind = o;
          }
          if (Pe.defined(s)) {
            a.collapsedText = s;
          }
          return a;
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.uinteger(t.startLine) && Pe.uinteger(t.startLine) && (Pe.undefined(t.startCharacter) || Pe.uinteger(t.startCharacter)) && (Pe.undefined(t.endCharacter) || Pe.uinteger(t.endCharacter)) && (Pe.undefined(t.kind) || Pe.string(t.kind));
        };
      })(f || (t.FoldingRange = f = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            location: e,
            message: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && c.is(t.location) && Pe.string(t.message);
        };
      })(p || (t.DiagnosticRelatedInformation = p = {}));
      (function (e) {
        e.Error = 1;
        e.Warning = 2;
        e.Information = 3;
        e.Hint = 4;
      })(m || (t.DiagnosticSeverity = m = {}));
      (function (e) {
        e.Unnecessary = 1;
        e.Deprecated = 2;
      })(I || (t.DiagnosticTag = I = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.string(t.href);
        };
      })(E || (t.CodeDescription = E = {}));
      (function (e) {
        e.create = function (e, t, n, r, o, s) {
          var a = {
            range: e,
            message: t
          };
          if (Pe.defined(n)) {
            a.severity = n;
          }
          if (Pe.defined(r)) {
            a.code = r;
          }
          if (Pe.defined(o)) {
            a.source = o;
          }
          if (Pe.defined(s)) {
            a.relatedInformation = s;
          }
          return a;
        };
        e.is = function (e) {
          var t;
          var n = e;
          return Pe.defined(n) && A.is(n.range) && Pe.string(n.message) && (Pe.number(n.severity) || Pe.undefined(n.severity)) && (Pe.integer(n.code) || Pe.string(n.code) || Pe.undefined(n.code)) && (Pe.undefined(n.codeDescription) || Pe.string((t = n.codeDescription) === null || t === undefined ? undefined : t.href)) && (Pe.string(n.source) || Pe.undefined(n.source)) && (Pe.undefined(n.relatedInformation) || Pe.typedArray(n.relatedInformation, p.is));
        };
      })(y || (t.Diagnostic = y = {}));
      (function (e) {
        e.create = function (e, t) {
          var n = [];
          for (var r = 2; r < arguments.length; r++) {
            n[r - 2] = arguments[r];
          }
          var o = {
            title: e,
            command: t
          };
          if (Pe.defined(n) && n.length > 0) {
            o.arguments = n;
          }
          return o;
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.string(t.title) && (t.tooltip === undefined || Pe.string(t.tooltip)) && Pe.string(t.command);
        };
      })(w || (t.Command = w = {}));
      (function (e) {
        e.replace = function (e, t) {
          return {
            range: e,
            newText: t
          };
        };
        e.insert = function (e, t) {
          return {
            range: {
              start: e,
              end: e
            },
            newText: t
          };
        };
        e.del = function (e) {
          return {
            range: e,
            newText: ''
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.string(t.newText) && A.is(t.range);
        };
      })(_ || (t.TextEdit = _ = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            label: e
          };
          if (t !== undefined) {
            r.needsConfirmation = t;
          }
          if (n !== undefined) {
            r.description = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && Pe.string(t.label) && (Pe.boolean(t.needsConfirmation) || t.needsConfirmation === undefined) && (Pe.string(t.description) || t.description === undefined);
        };
      })(v || (t.ChangeAnnotation = v = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.string(t);
        };
      })(b || (t.ChangeAnnotationIdentifier = b = {}));
      (function (e) {
        e.replace = function (e, t, n) {
          return {
            range: e,
            newText: t,
            annotationId: n
          };
        };
        e.insert = function (e, t, n) {
          return {
            range: {
              start: e,
              end: e
            },
            newText: t,
            annotationId: n
          };
        };
        e.del = function (e, t) {
          return {
            range: e,
            newText: '',
            annotationId: t
          };
        };
        e.is = function (e) {
          var t = e;
          return _.is(t) && (v.is(t.annotationId) || b.is(t.annotationId));
        };
      })(B || (t.AnnotatedTextEdit = B = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            textDocument: e,
            edits: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && M.is(t.textDocument) && Array.isArray(t.edits);
        };
      })(Q || (t.TextDocumentEdit = Q = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            kind: 'create',
            uri: e
          };
          if (t !== undefined && (t.overwrite !== undefined || t.ignoreIfExists !== undefined)) {
            r.options = t;
          }
          if (n !== undefined) {
            r.annotationId = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return t && t.kind === 'create' && Pe.string(t.uri) && (t.options === undefined || (t.options.overwrite === undefined || Pe.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Pe.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || b.is(t.annotationId));
        };
      })(D || (t.CreateFile = D = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          var o = {
            kind: 'rename',
            oldUri: e,
            newUri: t
          };
          if (n !== undefined && (n.overwrite !== undefined || n.ignoreIfExists !== undefined)) {
            o.options = n;
          }
          if (r !== undefined) {
            o.annotationId = r;
          }
          return o;
        };
        e.is = function (e) {
          var t = e;
          return t && t.kind === 'rename' && Pe.string(t.oldUri) && Pe.string(t.newUri) && (t.options === undefined || (t.options.overwrite === undefined || Pe.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Pe.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || b.is(t.annotationId));
        };
      })(S || (t.RenameFile = S = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            kind: 'delete',
            uri: e
          };
          if (t !== undefined && (t.recursive !== undefined || t.ignoreIfNotExists !== undefined)) {
            r.options = t;
          }
          if (n !== undefined) {
            r.annotationId = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return t && t.kind === 'delete' && Pe.string(t.uri) && (t.options === undefined || (t.options.recursive === undefined || Pe.boolean(t.options.recursive)) && (t.options.ignoreIfNotExists === undefined || Pe.boolean(t.options.ignoreIfNotExists))) && (t.annotationId === undefined || b.is(t.annotationId));
        };
      })(T || (t.DeleteFile = T = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return t && (t.changes !== undefined || t.documentChanges !== undefined) && (t.documentChanges === undefined || t.documentChanges.every(function (e) {
            if (Pe.string(e.kind)) {
              return D.is(e) || S.is(e) || T.is(e);
            } else {
              return Q.is(e);
            }
          }));
        };
      })(R || (t.WorkspaceEdit = R = {}));
      var k;
      var x = function () {
        function e(e, t) {
          this.edits = e;
          this.changeAnnotations = t;
        }
        e.prototype.insert = function (e, t, n) {
          var r;
          var o;
          if (n === undefined) {
            r = _.insert(e, t);
          } else {
            if (b.is(n)) {
              o = n;
              r = B.insert(e, t, n);
            } else {
              this.assertChangeAnnotations(this.changeAnnotations);
              o = this.changeAnnotations.manage(n);
              r = B.insert(e, t, o);
            }
          }
          this.edits.push(r);
          if (o !== undefined) {
            return o;
          }
        };
        e.prototype.replace = function (e, t, n) {
          var r;
          var o;
          if (n === undefined) {
            r = _.replace(e, t);
          } else {
            if (b.is(n)) {
              o = n;
              r = B.replace(e, t, n);
            } else {
              this.assertChangeAnnotations(this.changeAnnotations);
              o = this.changeAnnotations.manage(n);
              r = B.replace(e, t, o);
            }
          }
          this.edits.push(r);
          if (o !== undefined) {
            return o;
          }
        };
        e.prototype.delete = function (e, t) {
          var n;
          var r;
          if (t === undefined) {
            n = _.del(e);
          } else {
            if (b.is(t)) {
              r = t;
              n = B.del(e, t);
            } else {
              this.assertChangeAnnotations(this.changeAnnotations);
              r = this.changeAnnotations.manage(t);
              n = B.del(e, r);
            }
          }
          this.edits.push(n);
          if (r !== undefined) {
            return r;
          }
        };
        e.prototype.add = function (e) {
          this.edits.push(e);
        };
        e.prototype.all = function () {
          return this.edits;
        };
        e.prototype.clear = function () {
          this.edits.splice(0, this.edits.length);
        };
        e.prototype.assertChangeAnnotations = function (e) {
          if (e === undefined) {
            throw new Error('Text edit change is not configured to manage change annotations.');
          }
        };
        return e;
      }();
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && A.is(t.range) && ve.isSnippet(t.snippet) && (t.annotationId === undefined || v.is(t.annotationId) || b.is(t.annotationId));
        };
      })(k || (t.SnippetTextEdit = k = {}));
      var P;
      var F;
      var M;
      var O;
      var N;
      var L;
      var K;
      var U;
      var j;
      var q;
      var G;
      var Y;
      var H;
      var J;
      var z;
      var $;
      var W;
      var V;
      var X;
      var Z;
      var ee;
      var te;
      var ne;
      var re;
      var oe;
      var ie;
      var se;
      var ae;
      var Ae;
      var ce;
      var ue;
      var le;
      var ge;
      var de;
      var he;
      var fe;
      var pe;
      var Ce;
      var me;
      var Ie;
      var Ee;
      var ye;
      var we;
      var _e;
      var ve;
      var be;
      var Be;
      var Qe;
      var De;
      var Se;
      var Te;
      var Re;
      var ke = function () {
        function e(e) {
          this._annotations = e === undefined ? Object.create(null) : e;
          this._counter = 0;
          this._size = 0;
        }
        e.prototype.all = function () {
          return this._annotations;
        };
        Object.defineProperty(e.prototype, 'size', {
          get: function () {
            return this._size;
          },
          enumerable: false,
          configurable: true
        });
        e.prototype.manage = function (e, t) {
          var n;
          if (b.is(e)) {
            n = e;
          } else {
            n = this.nextId();
            t = e;
          }
          if (this._annotations[n] !== undefined) {
            throw new Error(`Id ${n} is already in use.`);
          }
          if (t === undefined) {
            throw new Error(`No annotation provided for id ${n}`);
          }
          this._annotations[n] = t;
          this._size++;
          return n;
        };
        e.prototype.nextId = function () {
          this._counter++;
          return this._counter.toString();
        };
        return e;
      }();
      var xe = function () {
        function e(e) {
          var t = this;
          this._textEditChanges = Object.create(null);
          if (e !== undefined) {
            this._workspaceEdit = e;
            if (e.documentChanges) {
              this._changeAnnotations = new ke(e.changeAnnotations);
              e.changeAnnotations = this._changeAnnotations.all();
              e.documentChanges.forEach(function (e) {
                if (Q.is(e)) {
                  var n = new x(e.edits, t._changeAnnotations);
                  t._textEditChanges[e.textDocument.uri] = n;
                }
              });
            } else {
              if (e.changes) {
                Object.keys(e.changes).forEach(function (n) {
                  var r = new x(e.changes[n]);
                  t._textEditChanges[n] = r;
                });
              }
            }
          } else {
            this._workspaceEdit = {};
          }
        }
        Object.defineProperty(e.prototype, 'edit', {
          get: function () {
            this.initDocumentChanges();
            if (this._changeAnnotations !== undefined) {
              if (this._changeAnnotations.size === 0) {
                this._workspaceEdit.changeAnnotations = undefined;
              } else {
                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
              }
            }
            return this._workspaceEdit;
          },
          enumerable: false,
          configurable: true
        });
        e.prototype.getTextEditChange = function (e) {
          if (M.is(e)) {
            this.initDocumentChanges();
            if (this._workspaceEdit.documentChanges === undefined) {
              throw new Error('Workspace edit is not configured for document changes.');
            }
            var t = {
              uri: e.uri,
              version: e.version
            };
            if (!(r = this._textEditChanges[t.uri])) {
              var n = {
                textDocument: t,
                edits: o = []
              };
              this._workspaceEdit.documentChanges.push(n);
              r = new x(o, this._changeAnnotations);
              this._textEditChanges[t.uri] = r;
            }
            return r;
          }
          this.initChanges();
          if (this._workspaceEdit.changes === undefined) {
            throw new Error('Workspace edit is not configured for normal text edit changes.');
          }
          var r;
          if (!(r = this._textEditChanges[e])) {
            var o = [];
            this._workspaceEdit.changes[e] = o;
            r = new x(o);
            this._textEditChanges[e] = r;
          }
          return r;
        };
        e.prototype.initDocumentChanges = function () {
          if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
            this._changeAnnotations = new ke();
            this._workspaceEdit.documentChanges = [];
            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
          }
        };
        e.prototype.initChanges = function () {
          if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
            this._workspaceEdit.changes = Object.create(null);
          }
        };
        e.prototype.createFile = function (e, t, n) {
          this.initDocumentChanges();
          if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
          }
          var r;
          var o;
          var s;
          if (v.is(t) || b.is(t)) {
            r = t;
          } else {
            n = t;
          }
          if (r === undefined) {
            o = D.create(e, n);
          } else {
            s = b.is(r) ? r : this._changeAnnotations.manage(r);
            o = D.create(e, n, s);
          }
          this._workspaceEdit.documentChanges.push(o);
          if (s !== undefined) {
            return s;
          }
        };
        e.prototype.renameFile = function (e, t, n, r) {
          this.initDocumentChanges();
          if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
          }
          var o;
          var s;
          var a;
          if (v.is(n) || b.is(n)) {
            o = n;
          } else {
            r = n;
          }
          if (o === undefined) {
            s = S.create(e, t, r);
          } else {
            a = b.is(o) ? o : this._changeAnnotations.manage(o);
            s = S.create(e, t, r, a);
          }
          this._workspaceEdit.documentChanges.push(s);
          if (a !== undefined) {
            return a;
          }
        };
        e.prototype.deleteFile = function (e, t, n) {
          this.initDocumentChanges();
          if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
          }
          var r;
          var o;
          var s;
          if (v.is(t) || b.is(t)) {
            r = t;
          } else {
            n = t;
          }
          if (r === undefined) {
            o = T.create(e, n);
          } else {
            s = b.is(r) ? r : this._changeAnnotations.manage(r);
            o = T.create(e, n, s);
          }
          this._workspaceEdit.documentChanges.push(o);
          if (s !== undefined) {
            return s;
          }
        };
        return e;
      }();
      t.WorkspaceChange = xe;
      (function (e) {
        e.create = function (e) {
          return {
            uri: e
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.string(t.uri);
        };
      })(P || (t.TextDocumentIdentifier = P = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            uri: e,
            version: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.string(t.uri) && Pe.integer(t.version);
        };
      })(F || (t.VersionedTextDocumentIdentifier = F = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            uri: e,
            version: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.string(t.uri) && (t.version === null || Pe.integer(t.version));
        };
      })(M || (t.OptionalVersionedTextDocumentIdentifier = M = {}));
      (function (e) {
        e.ABAP = 'abap';
        e.WindowsBat = 'bat';
        e.BibTeX = 'bibtex';
        e.Clojure = 'clojure';
        e.Coffeescript = 'coffeescript';
        e.C = 'c';
        e.CPP = 'cpp';
        e.CSharp = 'csharp';
        e.CSS = 'css';
        e.D = 'd';
        e.Delphi = 'pascal';
        e.Diff = 'diff';
        e.Dart = 'dart';
        e.Dockerfile = 'dockerfile';
        e.Elixir = 'elixir';
        e.Erlang = 'erlang';
        e.FSharp = 'fsharp';
        e.GitCommit = 'git-commit';
        e.GitRebase = 'rebase';
        e.Go = 'go';
        e.Groovy = 'groovy';
        e.Handlebars = 'handlebars';
        e.Haskell = 'haskell';
        e.HTML = 'html';
        e.Ini = 'ini';
        e.Java = 'java';
        e.JavaScript = 'javascript';
        e.JavaScriptReact = 'javascriptreact';
        e.JSON = 'json';
        e.LaTeX = 'latex';
        e.Less = 'less';
        e.Lua = 'lua';
        e.Makefile = 'makefile';
        e.Markdown = 'markdown';
        e.ObjectiveC = 'objective-c';
        e.ObjectiveCPP = 'objective-cpp';
        e.Pascal = 'pascal';
        e.Perl = 'perl';
        e.Perl6 = 'perl6';
        e.PHP = 'php';
        e.Powershell = 'powershell';
        e.Pug = 'jade';
        e.Python = 'python';
        e.R = 'r';
        e.Razor = 'razor';
        e.Ruby = 'ruby';
        e.Rust = 'rust';
        e.SCSS = 'scss';
        e.SASS = 'sass';
        e.Scala = 'scala';
        e.ShaderLab = 'shaderlab';
        e.ShellScript = 'shellscript';
        e.SQL = 'sql';
        e.Swift = 'swift';
        e.TypeScript = 'typescript';
        e.TypeScriptReact = 'typescriptreact';
        e.TeX = 'tex';
        e.VisualBasic = 'vb';
        e.XML = 'xml';
        e.XSL = 'xsl';
        e.YAML = 'yaml';
      })(O || (t.LanguageKind = O = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          return {
            uri: e,
            languageId: t,
            version: n,
            text: r
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.string(t.uri) && Pe.string(t.languageId) && Pe.integer(t.version) && Pe.string(t.text);
        };
      })(N || (t.TextDocumentItem = N = {}));
      (function (e) {
        e.PlainText = 'plaintext';
        e.Markdown = 'markdown';
        e.is = function (t) {
          var n = t;
          return n === e.PlainText || n === e.Markdown;
        };
      })(L || (t.MarkupKind = L = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(e) && L.is(t.kind) && Pe.string(t.value);
        };
      })(K || (t.MarkupContent = K = {}));
      (function (e) {
        e.Text = 1;
        e.Method = 2;
        e.Function = 3;
        e.Constructor = 4;
        e.Field = 5;
        e.Variable = 6;
        e.Class = 7;
        e.Interface = 8;
        e.Module = 9;
        e.Property = 10;
        e.Unit = 11;
        e.Value = 12;
        e.Enum = 13;
        e.Keyword = 14;
        e.Snippet = 15;
        e.Color = 16;
        e.File = 17;
        e.Reference = 18;
        e.Folder = 19;
        e.EnumMember = 20;
        e.Constant = 21;
        e.Struct = 22;
        e.Event = 23;
        e.Operator = 24;
        e.TypeParameter = 25;
      })(U || (t.CompletionItemKind = U = {}));
      (function (e) {
        e.PlainText = 1;
        e.Snippet = 2;
      })(j || (t.InsertTextFormat = j = {}));
      (function (e) {
        e.Deprecated = 1;
      })(q || (t.CompletionItemTag = q = {}));
      (function (e) {
        e.create = function (e, t, n) {
          return {
            newText: e,
            insert: t,
            replace: n
          };
        };
        e.is = function (e) {
          var t = e;
          return t && Pe.string(t.newText) && A.is(t.insert) && A.is(t.replace);
        };
      })(G || (t.InsertReplaceEdit = G = {}));
      (function (e) {
        e.asIs = 1;
        e.adjustIndentation = 2;
      })(Y || (t.InsertTextMode = Y = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return t && (Pe.string(t.detail) || t.detail === undefined) && (Pe.string(t.description) || t.description === undefined);
        };
      })(H || (t.CompletionItemLabelDetails = H = {}));
      (function (e) {
        e.create = function (e) {
          return {
            label: e
          };
        };
      })(J || (t.CompletionItem = J = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            items: e || [],
            isIncomplete: !!t
          };
        };
      })(z || (t.CompletionList = z = {}));
      (function (e) {
        e.fromPlainText = function (e) {
          return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
        };
        e.is = function (e) {
          var t = e;
          return Pe.string(t) || Pe.objectLiteral(t) && Pe.string(t.language) && Pe.string(t.value);
        };
      })($ || (t.MarkedString = $ = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return !!t && Pe.objectLiteral(t) && (K.is(t.contents) || $.is(t.contents) || Pe.typedArray(t.contents, $.is)) && (e.range === undefined || A.is(e.range));
        };
      })(W || (t.Hover = W = {}));
      (function (e) {
        e.create = function (e, t) {
          if (t) {
            return {
              label: e,
              documentation: t
            };
          } else {
            return {
              label: e
            };
          }
        };
      })(V || (t.ParameterInformation = V = {}));
      (function (e) {
        e.create = function (e, t) {
          var n = [];
          for (var r = 2; r < arguments.length; r++) {
            n[r - 2] = arguments[r];
          }
          var o = {
            label: e
          };
          if (Pe.defined(t)) {
            o.documentation = t;
          }
          if (Pe.defined(n)) {
            o.parameters = n;
          } else {
            o.parameters = [];
          }
          return o;
        };
      })(X || (t.SignatureInformation = X = {}));
      (function (e) {
        e.Text = 1;
        e.Read = 2;
        e.Write = 3;
      })(Z || (t.DocumentHighlightKind = Z = {}));
      (function (e) {
        e.create = function (e, t) {
          var n = {
            range: e
          };
          if (Pe.number(t)) {
            n.kind = t;
          }
          return n;
        };
      })(ee || (t.DocumentHighlight = ee = {}));
      (function (e) {
        e.File = 1;
        e.Module = 2;
        e.Namespace = 3;
        e.Package = 4;
        e.Class = 5;
        e.Method = 6;
        e.Property = 7;
        e.Field = 8;
        e.Constructor = 9;
        e.Enum = 10;
        e.Interface = 11;
        e.Function = 12;
        e.Variable = 13;
        e.Constant = 14;
        e.String = 15;
        e.Number = 16;
        e.Boolean = 17;
        e.Array = 18;
        e.Object = 19;
        e.Key = 20;
        e.Null = 21;
        e.EnumMember = 22;
        e.Struct = 23;
        e.Event = 24;
        e.Operator = 25;
        e.TypeParameter = 26;
      })(te || (t.SymbolKind = te = {}));
      (function (e) {
        e.Deprecated = 1;
      })(ne || (t.SymbolTag = ne = {}));
      (function (e) {
        e.create = function (e, t, n, r, o) {
          var s = {
            name: e,
            kind: t,
            location: {
              uri: r,
              range: n
            }
          };
          if (o) {
            s.containerName = o;
          }
          return s;
        };
      })(re || (t.SymbolInformation = re = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          if (r !== undefined) {
            return {
              name: e,
              kind: t,
              location: {
                uri: n,
                range: r
              }
            };
          } else {
            return {
              name: e,
              kind: t,
              location: {
                uri: n
              }
            };
          }
        };
      })(oe || (t.WorkspaceSymbol = oe = {}));
      (function (e) {
        e.create = function (e, t, n, r, o, s) {
          var a = {
            name: e,
            detail: t,
            kind: n,
            range: r,
            selectionRange: o
          };
          if (s !== undefined) {
            a.children = s;
          }
          return a;
        };
        e.is = function (e) {
          var t = e;
          return t && Pe.string(t.name) && Pe.number(t.kind) && A.is(t.range) && A.is(t.selectionRange) && (t.detail === undefined || Pe.string(t.detail)) && (t.deprecated === undefined || Pe.boolean(t.deprecated)) && (t.children === undefined || Array.isArray(t.children)) && (t.tags === undefined || Array.isArray(t.tags));
        };
      })(ie || (t.DocumentSymbol = ie = {}));
      (function (e) {
        e.Empty = '';
        e.QuickFix = 'quickfix';
        e.Refactor = 'refactor';
        e.RefactorExtract = 'refactor.extract';
        e.RefactorInline = 'refactor.inline';
        e.RefactorMove = 'refactor.move';
        e.RefactorRewrite = 'refactor.rewrite';
        e.Source = 'source';
        e.SourceOrganizeImports = 'source.organizeImports';
        e.SourceFixAll = 'source.fixAll';
        e.Notebook = 'notebook';
      })(se || (t.CodeActionKind = se = {}));
      (function (e) {
        e.Invoked = 1;
        e.Automatic = 2;
      })(ae || (t.CodeActionTriggerKind = ae = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            diagnostics: e
          };
          if (t != null) {
            r.only = t;
          }
          if (n != null) {
            r.triggerKind = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.typedArray(t.diagnostics, y.is) && (t.only === undefined || Pe.typedArray(t.only, Pe.string)) && (t.triggerKind === undefined || t.triggerKind === ae.Invoked || t.triggerKind === ae.Automatic);
        };
      })(Ae || (t.CodeActionContext = Ae = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            title: e
          };
          var o = true;
          if (typeof t == 'string') {
            o = false;
            r.kind = t;
          } else {
            if (w.is(t)) {
              r.command = t;
            } else {
              r.edit = t;
            }
          }
          if (o && n !== undefined) {
            r.kind = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return t && Pe.string(t.title) && (t.diagnostics === undefined || Pe.typedArray(t.diagnostics, y.is)) && (t.kind === undefined || Pe.string(t.kind)) && (t.edit !== undefined || t.command !== undefined) && (t.command === undefined || w.is(t.command)) && (t.isPreferred === undefined || Pe.boolean(t.isPreferred)) && (t.edit === undefined || R.is(t.edit));
        };
      })(ce || (t.CodeAction = ce = {}));
      (function (e) {
        e.create = function (e, t) {
          var n = {
            range: e
          };
          if (Pe.defined(t)) {
            n.data = t;
          }
          return n;
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && A.is(t.range) && (Pe.undefined(t.command) || w.is(t.command));
        };
      })(ue || (t.CodeLens = ue = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            tabSize: e,
            insertSpaces: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && Pe.uinteger(t.tabSize) && Pe.boolean(t.insertSpaces);
        };
      })(le || (t.FormattingOptions = le = {}));
      (function (e) {
        e.create = function (e, t, n) {
          return {
            range: e,
            target: t,
            data: n
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && A.is(t.range) && (Pe.undefined(t.target) || Pe.string(t.target));
        };
      })(ge || (t.DocumentLink = ge = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            range: e,
            parent: t
          };
        };
        e.is = function (t) {
          var n = t;
          return Pe.objectLiteral(n) && A.is(n.range) && (n.parent === undefined || e.is(n.parent));
        };
      })(de || (t.SelectionRange = de = {}));
      (function (e) {
        e.namespace = 'namespace';
        e.type = 'type';
        e.class = 'class';
        e.enum = 'enum';
        e.interface = 'interface';
        e.struct = 'struct';
        e.typeParameter = 'typeParameter';
        e.parameter = 'parameter';
        e.variable = 'variable';
        e.property = 'property';
        e.enumMember = 'enumMember';
        e.event = 'event';
        e.function = 'function';
        e.method = 'method';
        e.macro = 'macro';
        e.keyword = 'keyword';
        e.modifier = 'modifier';
        e.comment = 'comment';
        e.string = 'string';
        e.number = 'number';
        e.regexp = 'regexp';
        e.operator = 'operator';
        e.decorator = 'decorator';
        e.label = 'label';
      })(he || (t.SemanticTokenTypes = he = {}));
      (function (e) {
        e.declaration = 'declaration';
        e.definition = 'definition';
        e.readonly = 'readonly';
        e.static = 'static';
        e.deprecated = 'deprecated';
        e.abstract = 'abstract';
        e.async = 'async';
        e.modification = 'modification';
        e.documentation = 'documentation';
        e.defaultLibrary = 'defaultLibrary';
      })(fe || (t.SemanticTokenModifiers = fe = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && (t.resultId === undefined || typeof t.resultId == 'string') && Array.isArray(t.data) && (t.data.length === 0 || typeof t.data[0] == 'number');
        };
      })(pe || (t.SemanticTokens = pe = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            range: e,
            text: t
          };
        };
        e.is = function (e) {
          var t = e;
          return t != null && A.is(t.range) && Pe.string(t.text);
        };
      })(Ce || (t.InlineValueText = Ce = {}));
      (function (e) {
        e.create = function (e, t, n) {
          return {
            range: e,
            variableName: t,
            caseSensitiveLookup: n
          };
        };
        e.is = function (e) {
          var t = e;
          return t != null && A.is(t.range) && Pe.boolean(t.caseSensitiveLookup) && (Pe.string(t.variableName) || t.variableName === undefined);
        };
      })(me || (t.InlineValueVariableLookup = me = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            range: e,
            expression: t
          };
        };
        e.is = function (e) {
          var t = e;
          return t != null && A.is(t.range) && (Pe.string(t.expression) || t.expression === undefined);
        };
      })(Ie || (t.InlineValueEvaluatableExpression = Ie = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            frameId: e,
            stoppedLocation: t
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.defined(t) && A.is(e.stoppedLocation);
        };
      })(Ee || (t.InlineValueContext = Ee = {}));
      (function (e) {
        e.Type = 1;
        e.Parameter = 2;
        e.is = function (e) {
          return e === 1 || e === 2;
        };
      })(ye || (t.InlayHintKind = ye = {}));
      (function (e) {
        e.create = function (e) {
          return {
            value: e
          };
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && (t.tooltip === undefined || Pe.string(t.tooltip) || K.is(t.tooltip)) && (t.location === undefined || c.is(t.location)) && (t.command === undefined || w.is(t.command));
        };
      })(we || (t.InlayHintLabelPart = we = {}));
      (function (e) {
        e.create = function (e, t, n) {
          var r = {
            position: e,
            label: t
          };
          if (n !== undefined) {
            r.kind = n;
          }
          return r;
        };
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && a.is(t.position) && (Pe.string(t.label) || Pe.typedArray(t.label, we.is)) && (t.kind === undefined || ye.is(t.kind)) && t.textEdits === undefined || Pe.typedArray(t.textEdits, _.is) && (t.tooltip === undefined || Pe.string(t.tooltip) || K.is(t.tooltip)) && (t.paddingLeft === undefined || Pe.boolean(t.paddingLeft)) && (t.paddingRight === undefined || Pe.boolean(t.paddingRight));
        };
      })(_e || (t.InlayHint = _e = {}));
      (function (e) {
        e.createSnippet = function (e) {
          return {
            kind: 'snippet',
            value: e
          };
        };
        e.isSnippet = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && t.kind === 'snippet' && Pe.string(t.value);
        };
      })(ve || (t.StringValue = ve = {}));
      (function (e) {
        e.create = function (e, t, n, r) {
          return {
            insertText: e,
            filterText: t,
            range: n,
            command: r
          };
        };
      })(be || (t.InlineCompletionItem = be = {}));
      (function (e) {
        e.create = function (e) {
          return {
            items: e
          };
        };
      })(Be || (t.InlineCompletionList = Be = {}));
      (function (e) {
        e.Invoked = 1;
        e.Automatic = 2;
      })(Qe || (t.InlineCompletionTriggerKind = Qe = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            range: e,
            text: t
          };
        };
      })(De || (t.SelectedCompletionInfo = De = {}));
      (function (e) {
        e.create = function (e, t) {
          return {
            triggerKind: e,
            selectedCompletionInfo: t
          };
        };
      })(Se || (t.InlineCompletionContext = Se = {}));
      (function (e) {
        e.is = function (e) {
          var t = e;
          return Pe.objectLiteral(t) && r.is(t.uri) && Pe.string(t.name);
        };
      })(Te || (t.WorkspaceFolder = Te = {}));
      t.EOL = ['\n', '\r\n', '\r'];
      (function (e) {
        function t(e, n) {
          if (e.length <= 1) {
            return e;
          }
          var r = e.length / 2 | 0;
          var o = e.slice(0, r);
          var s = e.slice(r);
          t(o, n);
          t(s, n);
          for (var a = 0, A = 0, c = 0; a < o.length && A < s.length;) {
            var u = n(o[a], s[A]);
            e[c++] = u <= 0 ? o[a++] : s[A++];
          }
          while (a < o.length) {
            e[c++] = o[a++];
          }
          while (A < s.length) {
            e[c++] = s[A++];
          }
          return e;
        }
        e.create = function (e, t, n, r) {
          return new Fe(e, t, n, r);
        };
        e.is = function (e) {
          var t = e;
          return !!Pe.defined(t) && !!Pe.string(t.uri) && (!!Pe.undefined(t.languageId) || !!Pe.string(t.languageId)) && !!Pe.uinteger(t.lineCount) && !!Pe.func(t.getText) && !!Pe.func(t.positionAt) && !!Pe.func(t.offsetAt);
        };
        e.applyEdits = function (e, n) {
          var r = e.getText();
          var o = t(n, function (e, t) {
            var n = e.range.start.line - t.range.start.line;
            if (n === 0) {
              return e.range.start.character - t.range.start.character;
            } else {
              return n;
            }
          });
          var s = r.length;
          for (var a = o.length - 1; a >= 0; a--) {
            var A = o[a];
            var c = e.offsetAt(A.range.start);
            var u = e.offsetAt(A.range.end);
            if (!(u <= s)) {
              throw new Error('Overlapping edit');
            }
            r = r.substring(0, c) + A.newText + r.substring(u, r.length);
            s = c;
          }
          return r;
        };
      })(Re || (t.TextDocument = Re = {}));
      var Pe;
      var Fe = function () {
        function e(e, t, n, r) {
          this._uri = e;
          this._languageId = t;
          this._version = n;
          this._content = r;
          this._lineOffsets = undefined;
        }
        Object.defineProperty(e.prototype, 'uri', {
          get: function () {
            return this._uri;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(e.prototype, 'languageId', {
          get: function () {
            return this._languageId;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(e.prototype, 'version', {
          get: function () {
            return this._version;
          },
          enumerable: false,
          configurable: true
        });
        e.prototype.getText = function (e) {
          if (e) {
            var t = this.offsetAt(e.start);
            var n = this.offsetAt(e.end);
            return this._content.substring(t, n);
          }
          return this._content;
        };
        e.prototype.update = function (e, t) {
          this._content = e.text;
          this._version = t;
          this._lineOffsets = undefined;
        };
        e.prototype.getLineOffsets = function () {
          if (this._lineOffsets === undefined) {
            var e = [];
            for (var t = this._content, n = true, r = 0; r < t.length; r++) {
              if (n) {
                e.push(r);
                n = false;
              }
              var o = t.charAt(r);
              n = o === '\r' || o === '\n';
              if (o === '\r' && r + 1 < t.length && t.charAt(r + 1) === '\n') {
                r++;
              }
            }
            if (n && t.length > 0) {
              e.push(t.length);
            }
            this._lineOffsets = e;
          }
          return this._lineOffsets;
        };
        e.prototype.positionAt = function (e) {
          e = Math.max(Math.min(e, this._content.length), 0);
          var t = this.getLineOffsets();
          var n = 0;
          var r = t.length;
          if (r === 0) {
            return a.create(0, e);
          }
          while (n < r) {
            var o = Math.floor((n + r) / 2);
            if (t[o] > e) {
              r = o;
            } else {
              n = o + 1;
            }
          }
          var s = n - 1;
          return a.create(s, e - t[s]);
        };
        e.prototype.offsetAt = function (e) {
          var t = this.getLineOffsets();
          if (e.line >= t.length) {
            return this._content.length;
          }
          if (e.line < 0) {
            return 0;
          }
          var n = t[e.line];
          var r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
          return Math.max(Math.min(n + e.character, r), n);
        };
        Object.defineProperty(e.prototype, 'lineCount', {
          get: function () {
            return this.getLineOffsets().length;
          },
          enumerable: false,
          configurable: true
        });
        return e;
      }();
      (function (e) {
        var t = Object.prototype.toString;
        e.defined = function (e) {
          return e !== undefined;
        };
        e.undefined = function (e) {
          return e === undefined;
        };
        e.boolean = function (e) {
          return e === true || e === false;
        };
        e.string = function (e) {
          return t.call(e) === '[object String]';
        };
        e.number = function (e) {
          return t.call(e) === '[object Number]';
        };
        e.numberRange = function (e, n, r) {
          return t.call(e) === '[object Number]' && n <= e && e <= r;
        };
        e.integer = function (e) {
          return t.call(e) === '[object Number]' && e >= -2147483648 && e <= 2147483647;
        };
        e.uinteger = function (e) {
          return t.call(e) === '[object Number]' && e >= 0 && e <= 2147483647;
        };
        e.func = function (e) {
          return t.call(e) === '[object Function]';
        };
        e.objectLiteral = function (e) {
          return e !== null && typeof e == 'object';
        };
        e.typedArray = function (e, t) {
          return Array.isArray(e) && e.every(t);
        };
      })(Pe ||= {});
    });
  },
  56911: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProposedFeatures = exports.NotebookDocuments = exports.TextDocuments = exports.SemanticTokensBuilder = undefined;
    const A = require(36297);
    Object.defineProperty(exports, 'SemanticTokensBuilder', {
      enumerable: true,
      get: function () {
        return A.SemanticTokensBuilder;
      }
    });
    const c = __importStar(require(90090));
    const u = __importStar(require(87280));
    __exportStar(require(37688), exports);
    const l = require(73112);
    Object.defineProperty(exports, 'TextDocuments', {
      enumerable: true,
      get: function () {
        return l.TextDocuments;
      }
    });
    const g = require(98178);
    var d;
    Object.defineProperty(exports, 'NotebookDocuments', {
      enumerable: true,
      get: function () {
        return g.NotebookDocuments;
      }
    });
    __exportStar(require(97360), exports);
    (function (e) {
      e.all = {
        __brand: 'features',
        workspace: u.TextDocumentContentFeature,
        languages: c.InlineCompletionFeature
      };
    })(d || (exports.ProposedFeatures = d = {}));
  },
  9632: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CallHierarchyFeature = undefined;
    const r = require(37688);
    exports.CallHierarchyFeature = e => class extends e {
      get callHierarchy() {
        return {
          onPrepare: e => this.connection.onRequest(r.CallHierarchyPrepareRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined)),
          onIncomingCalls: e => {
            const t = r.CallHierarchyIncomingCallsRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onOutgoingCalls: e => {
            const t = r.CallHierarchyOutgoingCallsRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  83557: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ConfigurationFeature = undefined;
    const a = require(37688);
    const A = __importStar(require(4693));
    exports.ConfigurationFeature = e => class extends e {
      getConfiguration(e) {
        if (e) {
          if (A.string(e)) {
            return this._getConfiguration({
              section: e
            });
          } else {
            return this._getConfiguration(e);
          }
        } else {
          return this._getConfiguration({});
        }
      }
      _getConfiguration(e) {
        const t = {
          items: Array.isArray(e) ? e : [e]
        };
        return this.connection.sendRequest(a.ConfigurationRequest.type, t).then(t => Array.isArray(t) ? Array.isArray(e) ? t : t[0] : Array.isArray(e) ? [] : null);
      }
    };
  },
  71244: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticFeature = undefined;
    const r = require(37688);
    exports.DiagnosticFeature = e => class extends e {
      get diagnostics() {
        return {
          refresh: () => this.connection.sendRequest(r.DiagnosticRefreshRequest.type),
          on: e => this.connection.onRequest(r.DocumentDiagnosticRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), this.attachPartialResultProgress(r.DocumentDiagnosticRequest.partialResult, t))),
          onWorkspace: e => this.connection.onRequest(r.WorkspaceDiagnosticRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), this.attachPartialResultProgress(r.WorkspaceDiagnosticRequest.partialResult, t)))
        };
      }
    };
  },
  62367: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FileOperationsFeature = undefined;
    const r = require(37688);
    exports.FileOperationsFeature = e => class extends e {
      onDidCreateFiles(e) {
        return this.connection.onNotification(r.DidCreateFilesNotification.type, t => e(t));
      }
      onDidRenameFiles(e) {
        return this.connection.onNotification(r.DidRenameFilesNotification.type, t => e(t));
      }
      onDidDeleteFiles(e) {
        return this.connection.onNotification(r.DidDeleteFilesNotification.type, t => e(t));
      }
      onWillCreateFiles(e) {
        return this.connection.onRequest(r.WillCreateFilesRequest.type, (t, n) => e(t, n));
      }
      onWillRenameFiles(e) {
        return this.connection.onRequest(r.WillRenameFilesRequest.type, (t, n) => e(t, n));
      }
      onWillDeleteFiles(e) {
        return this.connection.onRequest(r.WillDeleteFilesRequest.type, (t, n) => e(t, n));
      }
    };
  },
  44033: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FoldingRangeFeature = undefined;
    const r = require(37688);
    exports.FoldingRangeFeature = e => class extends e {
      get foldingRange() {
        return {
          refresh: () => this.connection.sendRequest(r.FoldingRangeRefreshRequest.type),
          on: e => {
            const t = r.FoldingRangeRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  50469: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlayHintFeature = undefined;
    const r = require(37688);
    exports.InlayHintFeature = e => class extends e {
      get inlayHint() {
        return {
          refresh: () => this.connection.sendRequest(r.InlayHintRefreshRequest.type),
          on: e => this.connection.onRequest(r.InlayHintRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t))),
          resolve: e => this.connection.onRequest(r.InlayHintResolveRequest.type, (t, n) => e(t, n))
        };
      }
    };
  },
  90090: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineCompletionFeature = undefined;
    const r = require(37688);
    exports.InlineCompletionFeature = e => class extends e {
      get inlineCompletion() {
        return {
          on: e => this.connection.onRequest(r.InlineCompletionRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t)))
        };
      }
    };
  },
  43861: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineValueFeature = undefined;
    const r = require(37688);
    exports.InlineValueFeature = e => class extends e {
      get inlineValue() {
        return {
          refresh: () => this.connection.sendRequest(r.InlineValueRefreshRequest.type),
          on: e => this.connection.onRequest(r.InlineValueRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t)))
        };
      }
    };
  },
  97207: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LinkedEditingRangeFeature = undefined;
    const r = require(37688);
    exports.LinkedEditingRangeFeature = e => class extends e {
      onLinkedEditingRange(e) {
        return this.connection.onRequest(r.LinkedEditingRangeRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined));
      }
    };
  },
  22850: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MonikerFeature = undefined;
    const r = require(37688);
    exports.MonikerFeature = e => class extends e {
      get moniker() {
        return {
          on: e => {
            const t = r.MonikerRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  98178: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NotebookDocuments = exports.NotebookSyncFeature = undefined;
    const r = require(37688);
    const o = require(73112);
    exports.NotebookSyncFeature = e => class extends e {
      get synchronization() {
        return {
          onDidOpenNotebookDocument: e => this.connection.onNotification(r.DidOpenNotebookDocumentNotification.type, t => e(t)),
          onDidChangeNotebookDocument: e => this.connection.onNotification(r.DidChangeNotebookDocumentNotification.type, t => e(t)),
          onDidSaveNotebookDocument: e => this.connection.onNotification(r.DidSaveNotebookDocumentNotification.type, t => e(t)),
          onDidCloseNotebookDocument: e => this.connection.onNotification(r.DidCloseNotebookDocumentNotification.type, t => e(t))
        };
      }
    };
    class s {
      static NULL_DISPOSE = Object.freeze({
        dispose: () => {}
      });
      openHandler;
      changeHandler;
      closeHandler;
      onDidOpenTextDocument(e) {
        this.openHandler = e;
        return r.Disposable.create(() => {
          this.openHandler = undefined;
        });
      }
      openTextDocument(e) {
        return this.openHandler && this.openHandler(e);
      }
      onDidChangeTextDocument(e) {
        this.changeHandler = e;
        return r.Disposable.create(() => {
          this.changeHandler = e;
        });
      }
      changeTextDocument(e) {
        return this.changeHandler && this.changeHandler(e);
      }
      onDidCloseTextDocument(e) {
        this.closeHandler = e;
        return r.Disposable.create(() => {
          this.closeHandler = undefined;
        });
      }
      closeTextDocument(e) {
        return this.closeHandler && this.closeHandler(e);
      }
      onWillSaveTextDocument() {
        return s.NULL_DISPOSE;
      }
      onWillSaveTextDocumentWaitUntil() {
        return s.NULL_DISPOSE;
      }
      onDidSaveTextDocument() {
        return s.NULL_DISPOSE;
      }
    }
    exports.NotebookDocuments = class {
      notebookDocuments;
      notebookCellMap;
      _onDidOpen;
      _onDidSave;
      _onDidChange;
      _onDidClose;
      _cellTextDocuments;
      constructor(e) {
        if (e instanceof o.TextDocuments) {
          this._cellTextDocuments = e;
        } else {
          this._cellTextDocuments = new o.TextDocuments(e);
        }
        this.notebookDocuments = new Map();
        this.notebookCellMap = new Map();
        this._onDidOpen = new r.Emitter();
        this._onDidChange = new r.Emitter();
        this._onDidSave = new r.Emitter();
        this._onDidClose = new r.Emitter();
      }
      get cellTextDocuments() {
        return this._cellTextDocuments;
      }
      getCellTextDocument(e) {
        return this._cellTextDocuments.get(e.document);
      }
      getNotebookDocument(e) {
        return this.notebookDocuments.get(e);
      }
      getNotebookCell(e) {
        const t = this.notebookCellMap.get(e);
        return t && t[0];
      }
      findNotebookDocumentForCell(e) {
        const t = typeof e == 'string' ? e : e.document;
        const n = this.notebookCellMap.get(t);
        return n && n[1];
      }
      get onDidOpen() {
        return this._onDidOpen.event;
      }
      get onDidSave() {
        return this._onDidSave.event;
      }
      get onDidChange() {
        return this._onDidChange.event;
      }
      get onDidClose() {
        return this._onDidClose.event;
      }
      listen(e) {
        const t = new s();
        const n = [];
        n.push(this.cellTextDocuments.listen(t));
        n.push(e.notebooks.synchronization.onDidOpenNotebookDocument(async e => {
          this.notebookDocuments.set(e.notebookDocument.uri, e.notebookDocument);
          for (const n of e.cellTextDocuments) {
            await t.openTextDocument({
              textDocument: n
            });
          }
          this.updateCellMap(e.notebookDocument);
          this._onDidOpen.fire(e.notebookDocument);
        }));
        n.push(e.notebooks.synchronization.onDidChangeNotebookDocument(async e => {
          const n = this.notebookDocuments.get(e.notebookDocument.uri);
          if (n === undefined) {
            return;
          }
          n.version = e.notebookDocument.version;
          const r = n.metadata;
          let o = false;
          const s = e.change;
          if (s.metadata !== undefined) {
            o = true;
            n.metadata = s.metadata;
          }
          const a = [];
          const A = [];
          const c = [];
          const u = [];
          if (s.cells !== undefined) {
            const e = s.cells;
            if (e.structure !== undefined) {
              const r = e.structure.array;
              n.cells.splice(r.start, r.deleteCount, ...(r.cells !== undefined ? r.cells : []));
              if (e.structure.didOpen !== undefined) {
                for (const n of e.structure.didOpen) {
                  await t.openTextDocument({
                    textDocument: n
                  });
                  a.push(n.uri);
                }
              }
              if (e.structure.didClose) {
                for (const n of e.structure.didClose) {
                  await t.closeTextDocument({
                    textDocument: n
                  });
                  A.push(n.uri);
                }
              }
            }
            if (e.data !== undefined) {
              const t = new Map(e.data.map(e => [e.document, e]));
              for (let e = 0; e <= n.cells.length; e++) {
                const r = t.get(n.cells[e].document);
                if (r !== undefined) {
                  const o = n.cells.splice(e, 1, r);
                  c.push({
                    old: o[0],
                    new: r
                  });
                  t.delete(r.document);
                  if (t.size === 0) {
                    break;
                  }
                }
              }
            }
            if (e.textContent !== undefined) {
              for (const n of e.textContent) {
                await t.changeTextDocument({
                  textDocument: n.document,
                  contentChanges: n.changes
                });
                u.push(n.document.uri);
              }
            }
          }
          this.updateCellMap(n);
          const l = {
            notebookDocument: n
          };
          if (o) {
            l.metadata = {
              old: r,
              new: n.metadata
            };
          }
          const g = [];
          for (const e of a) {
            g.push(this.getNotebookCell(e));
          }
          const d = [];
          for (const e of A) {
            d.push(this.getNotebookCell(e));
          }
          const h = [];
          for (const e of u) {
            h.push(this.getNotebookCell(e));
          }
          if (g.length > 0 || d.length > 0 || c.length > 0 || h.length > 0) {
            l.cells = {
              added: g,
              removed: d,
              changed: {
                data: c,
                textContent: h
              }
            };
          }
          if (l.metadata !== undefined || l.cells !== undefined) {
            this._onDidChange.fire(l);
          }
        }));
        n.push(e.notebooks.synchronization.onDidSaveNotebookDocument(e => {
          const t = this.notebookDocuments.get(e.notebookDocument.uri);
          if (t !== undefined) {
            this._onDidSave.fire(t);
          }
        }));
        n.push(e.notebooks.synchronization.onDidCloseNotebookDocument(async e => {
          const n = this.notebookDocuments.get(e.notebookDocument.uri);
          if (n !== undefined) {
            this._onDidClose.fire(n);
            for (const n of e.cellTextDocuments) {
              await t.closeTextDocument({
                textDocument: n
              });
            }
            this.notebookDocuments.delete(e.notebookDocument.uri);
            for (const e of n.cells) {
              this.notebookCellMap.delete(e.document);
            }
          }
        }));
        return r.Disposable.create(() => {
          n.forEach(e => e.dispose());
        });
      }
      updateCellMap(e) {
        for (const t of e.cells) {
          this.notebookCellMap.set(t.document, [t, e]);
        }
      }
    };
  },
  22712: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = undefined;
    const r = require(37688);
    const o = require(97794);
    class s {
      _connection;
      _token;
      static Instances = new Map();
      constructor(e, t) {
        this._connection = e;
        this._token = t;
        s.Instances.set(this._token, this);
      }
      begin(e, t, n, o) {
        const s = {
          kind: 'begin',
          title: e,
          message: n,
          cancellable: o
        };
        if (typeof t == 'number') {
          s.percentage = Math.round(t);
        }
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, s);
      }
      report(e, t) {
        const n = {
          kind: 'report'
        };
        if (typeof e == 'number') {
          n.percentage = Math.round(e);
          if (t !== undefined) {
            n.message = t;
          }
        } else {
          n.message = e;
        }
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, n);
      }
      done() {
        s.Instances.delete(this._token);
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, {
          kind: 'end'
        });
      }
    }
    class a extends s {
      _source;
      constructor(e, t) {
        super(e, t);
        this._source = new r.CancellationTokenSource();
      }
      get token() {
        return this._source.token;
      }
      done() {
        this._source.dispose();
        super.done();
      }
      cancel() {
        this._source.cancel();
      }
    }
    class A {
      constructor() {}
      begin() {}
      report() {}
      done() {}
    }
    class c extends A {
      _source;
      constructor() {
        super();
        this._source = new r.CancellationTokenSource();
      }
      get token() {
        return this._source.token;
      }
      done() {
        this._source.dispose();
      }
      cancel() {
        this._source.cancel();
      }
    }
    exports.attachWorkDone = function (e, t) {
      if (t === undefined || t.workDoneToken === undefined) {
        return new A();
      }
      const n = t.workDoneToken;
      delete t.workDoneToken;
      return new s(e, n);
    };
    var u;
    exports.ProgressFeature = e => class extends e {
      _progressSupported;
      constructor() {
        super();
        this._progressSupported = false;
      }
      initialize(e) {
        super.initialize(e);
        if (e?.window?.workDoneProgress === true) {
          this._progressSupported = true;
          this.connection.onNotification(r.WorkDoneProgressCancelNotification.type, e => {
            const t = s.Instances.get(e.token);
            if (t instanceof a || t instanceof c) {
              t.cancel();
            }
          });
        }
      }
      attachWorkDoneProgress(e) {
        if (e === undefined) {
          return new A();
        } else {
          return new s(this.connection, e);
        }
      }
      createWorkDoneProgress() {
        if (this._progressSupported) {
          const e = o.generateUuid();
          return this.connection.sendRequest(r.WorkDoneProgressCreateRequest.type, {
            token: e
          }).then(() => new a(this.connection, e));
        }
        return Promise.resolve(new c());
      }
    };
    (function (e) {
      e.type = new r.ProgressType();
    })(u ||= {});
    class l {
      _connection;
      _token;
      constructor(e, t) {
        this._connection = e;
        this._token = t;
      }
      report(e) {
        this._connection.sendProgress(u.type, this._token, e);
      }
    }
    exports.attachPartialResult = function (e, t) {
      if (t === undefined || t.partialResultToken === undefined) {
        return;
      }
      const n = t.partialResultToken;
      delete t.partialResultToken;
      return new l(e, n);
    };
  },
  36297: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SemanticTokensBuilder = exports.SemanticTokensDiff = exports.SemanticTokensFeature = undefined;
    const r = require(37688);
    exports.SemanticTokensFeature = e => class extends e {
      get semanticTokens() {
        return {
          refresh: () => this.connection.sendRequest(r.SemanticTokensRefreshRequest.type),
          on: e => {
            const t = r.SemanticTokensRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onDelta: e => {
            const t = r.SemanticTokensDeltaRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onRange: e => {
            const t = r.SemanticTokensRangeRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
    class o {
      originalSequence;
      modifiedSequence;
      constructor(e, t) {
        this.originalSequence = e;
        this.modifiedSequence = t;
      }
      computeDiff() {
        const e = this.originalSequence.length;
        const t = this.modifiedSequence.length;
        let n = 0;
        while (n < t && n < e && this.originalSequence[n] === this.modifiedSequence[n]) {
          n++;
        }
        if (n < t && n < e) {
          let r = e - 1;
          let o = t - 1;
          while (r >= n && o >= n && this.originalSequence[r] === this.modifiedSequence[o]) {
            r--;
            o--;
          }
          if (r < n || o < n) {
            r++;
            o++;
          }
          const s = r - n + 1;
          const a = this.modifiedSequence.slice(n, o + 1);
          if (a.length === 1 && a[0] === this.originalSequence[r]) {
            return [{
              start: n,
              deleteCount: s - 1
            }];
          } else {
            return [{
              start: n,
              deleteCount: s,
              data: a
            }];
          }
        }
        if (n < t) {
          return [{
            start: n,
            deleteCount: 0,
            data: this.modifiedSequence.slice(n)
          }];
        } else {
          if (n < e) {
            return [{
              start: n,
              deleteCount: e - n
            }];
          } else {
            return [];
          }
        }
      }
    }
    exports.SemanticTokensDiff = o;
    class s {
      _id;
      _prevLine;
      _prevChar;
      _dataIsSortedAndDeltaEncoded;
      _data;
      _dataNonDelta;
      _dataLen;
      _prevData;
      constructor() {
        this._prevData = undefined;
        this.initialize();
      }
      initialize() {
        this._id = Date.now();
        this._prevLine = 0;
        this._prevChar = 0;
        this._data = [];
        this._dataNonDelta = [];
        this._dataLen = 0;
        this._dataIsSortedAndDeltaEncoded = true;
      }
      push(e, t, n, r, o) {
        if (this._dataIsSortedAndDeltaEncoded && (e < this._prevLine || e === this._prevLine && t < this._prevChar)) {
          this._dataIsSortedAndDeltaEncoded = false;
          this._dataNonDelta = s._deltaDecode(this._data);
        }
        let a = e;
        let A = t;
        if (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {
          a -= this._prevLine;
          if (a === 0) {
            A -= this._prevChar;
          }
        }
        const c = this._dataIsSortedAndDeltaEncoded ? this._data : this._dataNonDelta;
        c[this._dataLen++] = a;
        c[this._dataLen++] = A;
        c[this._dataLen++] = n;
        c[this._dataLen++] = r;
        c[this._dataLen++] = o;
        this._prevLine = e;
        this._prevChar = t;
      }
      get id() {
        return this._id.toString();
      }
      static _deltaDecode(e) {
        const t = e.length / 5 | 0;
        let n = 0;
        let r = 0;
        const o = [];
        for (let s = 0; s < t; s++) {
          const t = s * 5;
          let a = e[t];
          let A = e[t + 1];
          if (a === 0) {
            a = n;
            A += r;
          } else {
            a += n;
          }
          const c = e[t + 2];
          const u = e[t + 3];
          const l = e[t + 4];
          o[t + 0] = a;
          o[t + 1] = A;
          o[t + 2] = c;
          o[t + 3] = u;
          o[t + 4] = l;
          n = a;
          r = A;
        }
        return o;
      }
      static _sortAndDeltaEncode(e) {
        const t = [];
        const n = e.length / 5 | 0;
        for (let e = 0; e < n; e++) {
          t[e] = e;
        }
        t.sort((t, n) => {
          const r = e[t * 5];
          const o = e[n * 5];
          if (r === o) {
            return e[t * 5 + 1] - e[n * 5 + 1];
          }
          return r - o;
        });
        const r = [];
        let o = 0;
        let s = 0;
        for (let a = 0; a < n; a++) {
          const n = t[a] * 5;
          const A = e[n + 0];
          const c = e[n + 1];
          const u = e[n + 2];
          const l = e[n + 3];
          const g = e[n + 4];
          const d = A - o;
          const h = d === 0 ? c - s : c;
          const f = a * 5;
          r[f + 0] = d;
          r[f + 1] = h;
          r[f + 2] = u;
          r[f + 3] = l;
          r[f + 4] = g;
          o = A;
          s = c;
        }
        return r;
      }
      getFinalDataDelta() {
        if (this._dataIsSortedAndDeltaEncoded) {
          return this._data;
        } else {
          return s._sortAndDeltaEncode(this._dataNonDelta);
        }
      }
      previousResult(e) {
        if (this.id === e) {
          this._prevData = this.getFinalDataDelta();
        }
        this.initialize();
      }
      build() {
        this._prevData = undefined;
        return {
          resultId: this.id,
          data: this.getFinalDataDelta()
        };
      }
      canBuildEdits() {
        return this._prevData !== undefined;
      }
      buildEdits() {
        if (this._prevData !== undefined) {
          return {
            resultId: this.id,
            edits: new o(this._prevData, this.getFinalDataDelta()).computeDiff()
          };
        } else {
          return this.build();
        }
      }
    }
    exports.SemanticTokensBuilder = s;
  },
  97360: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConnection = exports.combineFeatures = exports.combineNotebooksFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._NotebooksImpl = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = undefined;
    const a = require(37688);
    const A = __importStar(require(4693));
    const c = __importStar(require(97794));
    const u = require(22712);
    const l = require(83557);
    const g = require(83894);
    const d = require(9632);
    const h = require(36297);
    const f = require(77711);
    const p = require(62367);
    const m = require(97207);
    const I = require(86008);
    const E = require(43861);
    const y = require(44033);
    const w = require(50469);
    const _ = require(71244);
    const v = require(98178);
    const b = require(22850);
    function B(e) {
      if (e !== null) {
        return e;
      }
    }
    exports.ErrorMessageTracker = class {
      _messages;
      constructor() {
        this._messages = Object.create(null);
      }
      add(e) {
        let t = this._messages[e];
        if (!t) {
          t = 0;
        }
        t++;
        this._messages[e] = t;
      }
      sendErrors(e) {
        Object.keys(this._messages).forEach(t => {
          e.window.showErrorMessage(t);
        });
      }
    };
    class Q {
      _rawConnection;
      _connection;
      constructor() {}
      rawAttach(e) {
        this._rawConnection = e;
      }
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      fillServerCapabilities(e) {}
      initialize(e) {}
      error(e) {
        this.send(a.MessageType.Error, e);
      }
      warn(e) {
        this.send(a.MessageType.Warning, e);
      }
      info(e) {
        this.send(a.MessageType.Info, e);
      }
      log(e) {
        this.send(a.MessageType.Log, e);
      }
      debug(e) {
        this.send(a.MessageType.Debug, e);
      }
      send(e, t) {
        if (this._rawConnection) {
          this._rawConnection.sendNotification(a.LogMessageNotification.type, {
            type: e,
            message: t
          }).catch(() => {
            a.RAL().console.error('Sending log message failed');
          });
        }
      }
    }
    const D = f.ShowDocumentFeature(u.ProgressFeature(class {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      showErrorMessage(e, ...t) {
        const n = {
          type: a.MessageType.Error,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
      showWarningMessage(e, ...t) {
        const n = {
          type: a.MessageType.Warning,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
      showInformationMessage(e, ...t) {
        const n = {
          type: a.MessageType.Info,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
    }));
    var S;
    var T;
    (function (e) {
      e.create = function () {
        return new R();
      };
    })(S || (exports.BulkRegistration = S = {}));
    class R {
      _registrations = [];
      _registered = new Set();
      add(e, t) {
        const n = A.string(e) ? e : e.method;
        if (this._registered.has(n)) {
          throw new Error(`${n} is already added to this registration`);
        }
        const r = c.generateUuid();
        this._registrations.push({
          id: r,
          method: n,
          registerOptions: t || {}
        });
        this._registered.add(n);
      }
      asRegistrationParams() {
        return {
          registrations: this._registrations
        };
      }
    }
    (function (e) {
      e.create = function () {
        return new k(undefined, []);
      };
    })(T || (exports.BulkUnregistration = T = {}));
    class k {
      _connection;
      _unregistrations = new Map();
      constructor(e, t) {
        this._connection = e;
        t.forEach(e => {
          this._unregistrations.set(e.method, e);
        });
      }
      get isAttached() {
        return !!this._connection;
      }
      attach(e) {
        this._connection = e;
      }
      add(e) {
        this._unregistrations.set(e.method, e);
      }
      dispose() {
        const e = [];
        for (const t of this._unregistrations.values()) {
          e.push(t);
        }
        const t = {
          unregisterations: e
        };
        this._connection.sendRequest(a.UnregistrationRequest.type, t).catch(() => {
          this._connection.console.info('Bulk unregistration failed.');
        });
      }
      disposeSingle(e) {
        const t = A.string(e) ? e : e.method;
        const n = this._unregistrations.get(t);
        if (!n) {
          return false;
        }
        const r = {
          unregisterations: [n]
        };
        this._connection.sendRequest(a.UnregistrationRequest.type, r).then(() => {
          this._unregistrations.delete(t);
        }, e => {
          this._connection.console.info(`Un-registering request handler for ${n.id} failed.`);
        });
        return true;
      }
    }
    class x {
      _connection;
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      register(e, t, n) {
        if (e instanceof R) {
          return this.registerMany(e);
        } else {
          if (e instanceof k) {
            return this.registerSingle1(e, t, n);
          } else {
            return this.registerSingle2(e, t);
          }
        }
      }
      registerSingle1(e, t, n) {
        const r = A.string(t) ? t : t.method;
        const o = c.generateUuid();
        const s = {
          registrations: [{
            id: o,
            method: r,
            registerOptions: n || {}
          }]
        };
        if (!e.isAttached) {
          e.attach(this.connection);
        }
        return this.connection.sendRequest(a.RegistrationRequest.type, s).then(t => {
          e.add({
            id: o,
            method: r
          });
          return e;
        }, e => {
          this.connection.console.info(`Registering request handler for ${r} failed.`);
          return Promise.reject(e);
        });
      }
      registerSingle2(e, t) {
        const n = A.string(e) ? e : e.method;
        const r = c.generateUuid();
        const o = {
          registrations: [{
            id: r,
            method: n,
            registerOptions: t || {}
          }]
        };
        return this.connection.sendRequest(a.RegistrationRequest.type, o).then(e => a.Disposable.create(() => {
          this.unregisterSingle(r, n).catch(() => {
            this.connection.console.info(`Un-registering capability with id ${r} failed.`);
          });
        }), e => {
          this.connection.console.info(`Registering request handler for ${n} failed.`);
          return Promise.reject(e);
        });
      }
      unregisterSingle(e, t) {
        const n = {
          unregisterations: [{
            id: e,
            method: t
          }]
        };
        return this.connection.sendRequest(a.UnregistrationRequest.type, n).catch(() => {
          this.connection.console.info(`Un-registering request handler for ${e} failed.`);
        });
      }
      registerMany(e) {
        const t = e.asRegistrationParams();
        return this.connection.sendRequest(a.RegistrationRequest.type, t).then(() => new k(this._connection, t.registrations.map(e => ({
          id: e.id,
          method: e.method
        }))), e => {
          this.connection.console.info('Bulk registration failed.');
          return Promise.reject(e);
        });
      }
    }
    const P = p.FileOperationsFeature(g.WorkspaceFoldersFeature(l.ConfigurationFeature(class {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      applyEdit(e) {
        const t = (n = e) && n.edit ? e : {
          edit: e
        };
        var n;
        return this.connection.sendRequest(a.ApplyWorkspaceEditRequest.type, t);
      }
    })));
    class F {
      _trace;
      _connection;
      constructor() {
        this._trace = a.Trace.Off;
      }
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      set trace(e) {
        this._trace = e;
      }
      log(e, t) {
        if (this._trace !== a.Trace.Off) {
          this.connection.sendNotification(a.LogTraceNotification.type, {
            message: e,
            verbose: this._trace === a.Trace.Verbose ? t : undefined
          }).catch(() => {});
        }
      }
    }
    class M {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      logEvent(e) {
        this.connection.sendNotification(a.TelemetryEventNotification.type, e).catch(() => {
          this.connection.console.log('Sending TelemetryEventNotification failed');
        });
      }
    }
    class O {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      attachWorkDoneProgress(e) {
        return u.attachWorkDone(this.connection, e);
      }
      attachPartialResultProgress(e, t) {
        return u.attachPartialResult(this.connection, t);
      }
    }
    exports._LanguagesImpl = O;
    const N = y.FoldingRangeFeature(b.MonikerFeature(_.DiagnosticFeature(w.InlayHintFeature(E.InlineValueFeature(I.TypeHierarchyFeature(m.LinkedEditingRangeFeature(h.SemanticTokensFeature(d.CallHierarchyFeature(O)))))))));
    class L {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      attachWorkDoneProgress(e) {
        return u.attachWorkDone(this.connection, e);
      }
      attachPartialResultProgress(e, t) {
        return u.attachPartialResult(this.connection, t);
      }
    }
    exports._NotebooksImpl = L;
    const K = v.NotebookSyncFeature(L);
    function U(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function j(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function q(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function G(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function Y(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function H(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function J(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function z(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    exports.combineConsoleFeatures = U;
    exports.combineTelemetryFeatures = j;
    exports.combineTracerFeatures = q;
    exports.combineClientFeatures = G;
    exports.combineWindowFeatures = Y;
    exports.combineWorkspaceFeatures = H;
    exports.combineLanguagesFeatures = J;
    exports.combineNotebooksFeatures = z;
    exports.combineFeatures = function (e, t) {
      function n(e, t, n) {
        if (e && t) {
          return n(e, t);
        } else {
          return e || t;
        }
      }
      return {
        __brand: 'features',
        console: n(e.console, t.console, U),
        tracer: n(e.tracer, t.tracer, q),
        telemetry: n(e.telemetry, t.telemetry, j),
        client: n(e.client, t.client, G),
        window: n(e.window, t.window, Y),
        workspace: n(e.workspace, t.workspace, H),
        languages: n(e.languages, t.languages, J),
        notebooks: n(e.notebooks, t.notebooks, z)
      };
    };
    exports.createConnection = function (e, t, n) {
      const r = n && n.console ? new (n.console(Q))() : new Q();
      const o = e(r);
      r.rawAttach(o);
      const s = n && n.tracer ? new (n.tracer(F))() : new F();
      const c = n && n.telemetry ? new (n.telemetry(M))() : new M();
      const l = n && n.client ? new (n.client(x))() : new x();
      const g = n && n.window ? new (n.window(D))() : new D();
      const d = n && n.workspace ? new (n.workspace(P))() : new P();
      const h = n && n.languages ? new (n.languages(N))() : new N();
      const f = n && n.notebooks ? new (n.notebooks(K))() : new K();
      const p = [r, s, c, l, g, d, h, f];
      let m;
      let I;
      let E;
      const y = {
        listen: () => o.listen(),
        sendRequest: (e, ...t) => o.sendRequest(A.string(e) ? e : e.method, ...t),
        onRequest: (e, t) => o.onRequest(e, t),
        sendNotification: (e, t) => {
          const n = A.string(e) ? e : e.method;
          return o.sendNotification(n, t);
        },
        onNotification: (e, t) => o.onNotification(e, t),
        onProgress: o.onProgress,
        sendProgress: o.sendProgress,
        onInitialize: e => {
          I = e;
          return {
            dispose: () => {
              I = undefined;
            }
          };
        },
        onInitialized: e => o.onNotification(a.InitializedNotification.type, e),
        onShutdown: e => {
          m = e;
          return {
            dispose: () => {
              m = undefined;
            }
          };
        },
        onExit: e => {
          E = e;
          return {
            dispose: () => {
              E = undefined;
            }
          };
        },
        get console() {
          return r;
        },
        get telemetry() {
          return c;
        },
        get tracer() {
          return s;
        },
        get client() {
          return l;
        },
        get window() {
          return g;
        },
        get workspace() {
          return d;
        },
        get languages() {
          return h;
        },
        get notebooks() {
          return f;
        },
        onDidChangeConfiguration: e => o.onNotification(a.DidChangeConfigurationNotification.type, e),
        onDidChangeWatchedFiles: e => o.onNotification(a.DidChangeWatchedFilesNotification.type, e),
        __textDocumentSync: undefined,
        onDidOpenTextDocument: e => o.onNotification(a.DidOpenTextDocumentNotification.type, e),
        onDidChangeTextDocument: e => o.onNotification(a.DidChangeTextDocumentNotification.type, e),
        onDidCloseTextDocument: e => o.onNotification(a.DidCloseTextDocumentNotification.type, e),
        onWillSaveTextDocument: e => o.onNotification(a.WillSaveTextDocumentNotification.type, e),
        onWillSaveTextDocumentWaitUntil: e => o.onRequest(a.WillSaveTextDocumentWaitUntilRequest.type, e),
        onDidSaveTextDocument: e => o.onNotification(a.DidSaveTextDocumentNotification.type, e),
        sendDiagnostics: e => o.sendNotification(a.PublishDiagnosticsNotification.type, e),
        onHover: e => o.onRequest(a.HoverRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onCompletion: e => o.onRequest(a.CompletionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCompletionResolve: e => o.onRequest(a.CompletionResolveRequest.type, e),
        onSignatureHelp: e => o.onRequest(a.SignatureHelpRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDeclaration: e => o.onRequest(a.DeclarationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDefinition: e => o.onRequest(a.DefinitionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onTypeDefinition: e => o.onRequest(a.TypeDefinitionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onImplementation: e => o.onRequest(a.ImplementationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onReferences: e => o.onRequest(a.ReferencesRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentHighlight: e => o.onRequest(a.DocumentHighlightRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentSymbol: e => o.onRequest(a.DocumentSymbolRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onWorkspaceSymbol: e => o.onRequest(a.WorkspaceSymbolRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onWorkspaceSymbolResolve: e => o.onRequest(a.WorkspaceSymbolResolveRequest.type, e),
        onCodeAction: e => o.onRequest(a.CodeActionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCodeActionResolve: e => o.onRequest(a.CodeActionResolveRequest.type, (t, n) => e(t, n)),
        onCodeLens: e => o.onRequest(a.CodeLensRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCodeLensResolve: e => o.onRequest(a.CodeLensResolveRequest.type, (t, n) => e(t, n)),
        onDocumentFormatting: e => o.onRequest(a.DocumentFormattingRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDocumentRangeFormatting: e => o.onRequest(a.DocumentRangeFormattingRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDocumentOnTypeFormatting: e => o.onRequest(a.DocumentOnTypeFormattingRequest.type, (t, n) => e(t, n)),
        onRenameRequest: e => o.onRequest(a.RenameRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onPrepareRename: e => o.onRequest(a.PrepareRenameRequest.type, (t, n) => e(t, n)),
        onDocumentLinks: e => o.onRequest(a.DocumentLinkRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentLinkResolve: e => o.onRequest(a.DocumentLinkResolveRequest.type, (t, n) => e(t, n)),
        onDocumentColor: e => o.onRequest(a.DocumentColorRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onColorPresentation: e => o.onRequest(a.ColorPresentationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onFoldingRanges: e => o.onRequest(a.FoldingRangeRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onSelectionRanges: e => o.onRequest(a.SelectionRangeRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onExecuteCommand: e => o.onRequest(a.ExecuteCommandRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        dispose: () => o.dispose()
      };
      for (const e of p) {
        e.attach(y);
      }
      o.onRequest(a.InitializeRequest.type, e => {
        t.initialize(e);
        if (A.string(e.trace)) {
          s.trace = a.Trace.fromString(e.trace);
        }
        for (const t of p) {
          t.initialize(e.capabilities);
        }
        if (I) {
          const t = I(e, new a.CancellationTokenSource().token, u.attachWorkDone(o, e), undefined);
          return (n = t, n instanceof Promise ? n : A.thenable(n) ? new Promise((e, t) => {
            n.then(t => e(t), e => t(e));
          }) : Promise.resolve(n)).then(e => {
            if (e instanceof a.ResponseError) {
              return e;
            }
            let t = e;
            if (!t) {
              t = {
                capabilities: {}
              };
            }
            let n = t.capabilities;
            if (!n) {
              n = {};
              t.capabilities = n;
            }
            if (n.textDocumentSync === undefined || n.textDocumentSync === null) {
              n.textDocumentSync = A.number(y.__textDocumentSync) ? y.__textDocumentSync : a.TextDocumentSyncKind.None;
            } else {
              if (!A.number(n.textDocumentSync) && !A.number(n.textDocumentSync.change)) {
                n.textDocumentSync.change = A.number(y.__textDocumentSync) ? y.__textDocumentSync : a.TextDocumentSyncKind.None;
              }
            }
            for (const e of p) {
              e.fillServerCapabilities(n);
            }
            return t;
          });
        }
        {
          const e = {
            capabilities: {
              textDocumentSync: a.TextDocumentSyncKind.None
            }
          };
          for (const t of p) {
            t.fillServerCapabilities(e.capabilities);
          }
          return e;
        }
        var n;
      });
      o.onRequest(a.ShutdownRequest.type, () => {
        t.shutdownReceived = true;
        if (m) {
          return m(new a.CancellationTokenSource().token);
        } else {
          return undefined;
        }
      });
      o.onNotification(a.ExitNotification.type, () => {
        try {
          if (E) {
            return E();
          }
        } finally {
          if (t.shutdownReceived) {
            t.exit(0);
          } else {
            t.exit(1);
          }
        }
      });
      o.onNotification(a.SetTraceNotification.type, e => {
        s.trace = a.Trace.fromString(e.value);
      });
      return y;
    };
  },
  77711: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ShowDocumentFeature = undefined;
    const r = require(37688);
    exports.ShowDocumentFeature = e => class extends e {
      showDocument(e) {
        return this.connection.sendRequest(r.ShowDocumentRequest.type, e);
      }
    };
  },
  87280: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocumentContentFeature = undefined;
    const r = require(37688);
    exports.TextDocumentContentFeature = e => class extends e {
      get textDocumentContent() {
        return {
          refresh: e => this.connection.sendRequest(r.TextDocumentContentRefreshRequest.type, {
            uri: e
          }),
          on: e => this.connection.onRequest(r.TextDocumentContentRequest.type, (t, n) => e(t, n))
        };
      }
    };
  },
  73112: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocuments = undefined;
    const r = require(37688);
    exports.TextDocuments = class {
      _configuration;
      _syncedDocuments;
      _onDidChangeContent;
      _onDidOpen;
      _onDidClose;
      _onDidSave;
      _onWillSave;
      _willSaveWaitUntil;
      constructor(e) {
        this._configuration = e;
        this._syncedDocuments = new Map();
        this._onDidChangeContent = new r.Emitter();
        this._onDidOpen = new r.Emitter();
        this._onDidClose = new r.Emitter();
        this._onDidSave = new r.Emitter();
        this._onWillSave = new r.Emitter();
      }
      get onDidOpen() {
        return this._onDidOpen.event;
      }
      get onDidChangeContent() {
        return this._onDidChangeContent.event;
      }
      get onWillSave() {
        return this._onWillSave.event;
      }
      onWillSaveWaitUntil(e) {
        this._willSaveWaitUntil = e;
      }
      get onDidSave() {
        return this._onDidSave.event;
      }
      get onDidClose() {
        return this._onDidClose.event;
      }
      get(e) {
        return this._syncedDocuments.get(e);
      }
      all() {
        return Array.from(this._syncedDocuments.values());
      }
      keys() {
        return Array.from(this._syncedDocuments.keys());
      }
      listen(e) {
        e.__textDocumentSync = r.TextDocumentSyncKind.Incremental;
        const t = [];
        t.push(e.onDidOpenTextDocument(e => {
          const t = e.textDocument;
          const n = this._configuration.create(t.uri, t.languageId, t.version, t.text);
          this._syncedDocuments.set(t.uri, n);
          const r = Object.freeze({
            document: n
          });
          this._onDidOpen.fire(r);
          this._onDidChangeContent.fire(r);
        }));
        t.push(e.onDidChangeTextDocument(e => {
          const t = e.textDocument;
          const n = e.contentChanges;
          if (n.length === 0) {
            return;
          }
          const {
            version: r
          } = t;
          if (r == null) {
            throw new Error(`Received document change event for ${t.uri} without valid version identifier`);
          }
          let o = this._syncedDocuments.get(t.uri);
          if (o !== undefined) {
            o = this._configuration.update(o, n, r);
            this._syncedDocuments.set(t.uri, o);
            this._onDidChangeContent.fire(Object.freeze({
              document: o
            }));
          }
        }));
        t.push(e.onDidCloseTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._syncedDocuments.delete(e.textDocument.uri);
            this._onDidClose.fire(Object.freeze({
              document: t
            }));
          }
        }));
        t.push(e.onWillSaveTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._onWillSave.fire(Object.freeze({
              document: t,
              reason: e.reason
            }));
          }
        }));
        t.push(e.onWillSaveTextDocumentWaitUntil((e, t) => {
          const n = this._syncedDocuments.get(e.textDocument.uri);
          if (n !== undefined && this._willSaveWaitUntil) {
            return this._willSaveWaitUntil(Object.freeze({
              document: n,
              reason: e.reason
            }), t);
          } else {
            return [];
          }
        }));
        t.push(e.onDidSaveTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._onDidSave.fire(Object.freeze({
              document: t
            }));
          }
        }));
        return r.Disposable.create(() => {
          t.forEach(e => e.dispose());
        });
      }
    };
  },
  86008: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeHierarchyFeature = undefined;
    const r = require(37688);
    exports.TypeHierarchyFeature = e => class extends e {
      get typeHierarchy() {
        return {
          onPrepare: e => this.connection.onRequest(r.TypeHierarchyPrepareRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined)),
          onSupertypes: e => {
            const t = r.TypeHierarchySupertypesRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onSubtypes: e => {
            const t = r.TypeHierarchySubtypesRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  4693: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return typeof e == 'function';
    }
    function o(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = r;
    exports.array = o;
    exports.stringArray = function (e) {
      return o(e) && e.every(e => n(e));
    };
    exports.typedArray = function (e, t) {
      return Array.isArray(e) && e.every(t);
    };
    exports.thenable = function (e) {
      return e && r(e.then);
    };
  },
  97794: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = undefined;
    class n {
      _value;
      constructor(e) {
        this._value = e;
      }
      asHex() {
        return this._value;
      }
      equals(e) {
        return this.asHex() === e.asHex();
      }
    }
    class r extends n {
      static _chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
      static _timeHighBits = ['8', '9', 'a', 'b'];
      static _oneOf(e) {
        return e[Math.floor(e.length * Math.random())];
      }
      static _randomHex() {
        return r._oneOf(r._chars);
      }
      constructor() {
        super([r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', '4', r._randomHex(), r._randomHex(), r._randomHex(), '-', r._oneOf(r._timeHighBits), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex()].join(''));
      }
    }
    function o() {
      return new r();
    }
    exports.empty = new n('00000000-0000-0000-0000-000000000000');
    exports.v4 = o;
    const s = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
    function a(e) {
      return s.test(e);
    }
    exports.isUUID = a;
    exports.parse = function (e) {
      if (!a(e)) {
        throw new Error('invalid uuid');
      }
      return new n(e);
    };
    exports.generateUuid = function () {
      return o().asHex();
    };
  },
  83894: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkspaceFoldersFeature = undefined;
    const r = require(37688);
    exports.WorkspaceFoldersFeature = e => class extends e {
      _onDidChangeWorkspaceFolders;
      _unregistration;
      _notificationIsAutoRegistered;
      constructor() {
        super();
        this._notificationIsAutoRegistered = false;
      }
      initialize(e) {
        super.initialize(e);
        const t = e.workspace;
        if (t && t.workspaceFolders) {
          this._onDidChangeWorkspaceFolders = new r.Emitter();
          this.connection.onNotification(r.DidChangeWorkspaceFoldersNotification.type, e => {
            this._onDidChangeWorkspaceFolders.fire(e.event);
          });
        }
      }
      fillServerCapabilities(e) {
        super.fillServerCapabilities(e);
        const t = e.workspace?.workspaceFolders?.changeNotifications;
        this._notificationIsAutoRegistered = t === true || typeof t == 'string';
      }
      getWorkspaceFolders() {
        return this.connection.sendRequest(r.WorkspaceFoldersRequest.type);
      }
      get onDidChangeWorkspaceFolders() {
        if (!this._onDidChangeWorkspaceFolders) {
          throw new Error('Client doesn\'t support sending workspace folder change events.');
        }
        if (!this._notificationIsAutoRegistered && !this._unregistration) {
          this._unregistration = this.connection.client.register(r.DidChangeWorkspaceFoldersNotification.type);
        }
        return this._onDidChangeWorkspaceFolders.event;
      }
    };
  },
  5569: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.resolveModulePath = exports.FileSystem = exports.resolveGlobalYarnPath = exports.resolveGlobalNodePath = exports.resolve = exports.uriToFilePath = undefined;
    const a = __importStar(require(87016));
    const A = __importStar(require(16928));
    const c = __importStar(require(79896));
    const u = require(35317);
    function l() {
      return process.platform === 'win32';
    }
    function g(e, t, n, r) {
      const o = 'NODE_PATH';
      const s = ['var p = process;', 'p.on(\'message\',function(m){', 'if(m.c===\'e\'){', 'p.exit(0);', '}', 'else if(m.c===\'rs\'){', 'try{', 'var r=require.resolve(m.a);', 'p.send({c:\'r\',s:true,r:r});', '}', 'catch(err){', 'p.send({c:\'r\',s:false});', '}', '}', '});'].join('');
      return new Promise((a, l) => {
        const g = process.env;
        const d = Object.create(null);
        Object.keys(g).forEach(e => d[e] = g[e]);
        if (t && c.existsSync(t)) {
          if (d[o]) {
            d[o] = t + A.delimiter + d[o];
          } else {
            d[o] = t;
          }
          if (r) {
            r(`NODE_PATH value is: ${d[o]}`);
          }
        }
        d.ELECTRON_RUN_AS_NODE = '1';
        try {
          const t = u.fork('', [], {
            cwd: n,
            env: d,
            execArgv: ['-e', s]
          });
          if (t.pid === undefined) {
            l(new Error(`Starting process to resolve node module  ${e} failed`));
            return;
          }
          t.on('error', e => {
            l(e);
          });
          t.on('message', n => {
            if (n.c === 'r') {
              t.send({
                c: 'e'
              });
              if (n.s) {
                a(n.r);
              } else {
                l(new Error(`Failed to resolve module: ${e}`));
              }
            }
          });
          const r = {
            c: 'rs',
            a: e
          };
          t.send(r);
        } catch (e) {
          l(e);
        }
      });
    }
    function d(e) {
      let t = 'npm';
      const n = Object.create(null);
      Object.keys(process.env).forEach(e => n[e] = process.env[e]);
      n.NO_UPDATE_NOTIFIER = 'true';
      const r = {
        encoding: 'utf8',
        env: n
      };
      if (l()) {
        t = 'npm.cmd';
        r.shell = true;
      }
      const o = () => {};
      try {
        process.on('SIGPIPE', o);
        const n = u.spawnSync(t, ['config', 'get', 'prefix'], r).stdout;
        if (!n) {
          if (e) {
            e('\'npm config get prefix\' didn\'t return a value.');
          }
          return;
        }
        const s = n.trim();
        if (e) {
          e(`'npm config get prefix' value is: ${s}`);
        }
        if (s.length > 0) {
          if (l()) {
            return A.join(s, 'node_modules');
          } else {
            return A.join(s, 'lib', 'node_modules');
          }
        } else {
          return undefined;
        }
      } catch (e) {
        return;
      } finally {
        process.removeListener('SIGPIPE', o);
      }
    }
    var h;
    exports.uriToFilePath = function (e) {
      const t = a.parse(e);
      if (t.protocol !== 'file:' || !t.path) {
        return;
      }
      const n = t.path.split('/');
      for (let e = 0, t = n.length; e < t; e++) {
        n[e] = decodeURIComponent(n[e]);
      }
      if (process.platform === 'win32' && n.length > 1) {
        const e = n[0];
        const t = n[1];
        if (e.length === 0 && t.length > 1 && t[1] === ':') {
          n.shift();
        }
      }
      return A.normalize(n.join('/'));
    };
    exports.resolve = g;
    exports.resolveGlobalNodePath = d;
    exports.resolveGlobalYarnPath = function (e) {
      let t = 'yarn';
      const n = {
        encoding: 'utf8'
      };
      if (l()) {
        t = 'yarn.cmd';
        n.shell = true;
      }
      const r = () => {};
      try {
        process.on('SIGPIPE', r);
        const o = u.spawnSync(t, ['global', 'dir', '--json'], n);
        const s = o.stdout;
        if (!s) {
          if (e) {
            e('\'yarn global dir\' didn\'t return a value.');
            if (o.stderr) {
              e(o.stderr);
            }
          }
          return;
        }
        const a = s.trim().split(/\r?\n/);
        for (const e of a) {
          try {
            const t = JSON.parse(e);
            if (t.type === 'log') {
              return A.join(t.data, 'node_modules');
            }
          } catch (e) {}
        }
        return;
      } catch (e) {
        return;
      } finally {
        process.removeListener('SIGPIPE', r);
      }
    };
    (function (e) {
      let t;
      function n() {
        if (t === undefined) {
          t = process.platform !== 'win32' && (!c.existsSync(__filename.toUpperCase()) || !c.existsSync(__filename.toLowerCase()));
        }
        return t;
      }
      e.isCaseSensitive = n;
      e.isParent = function (e, t) {
        if (n()) {
          return A.normalize(t).indexOf(A.normalize(e)) === 0;
        } else {
          return A.normalize(t).toLowerCase().indexOf(A.normalize(e).toLowerCase()) === 0;
        }
      };
    })(h || (exports.FileSystem = h = {}));
    exports.resolveModulePath = function (e, t, n, r) {
      if (n) {
        if (!A.isAbsolute(n)) {
          n = A.join(e, n);
        }
        return g(t, n, n, r).then(e => h.isParent(n, e) ? e : Promise.reject(new Error(`Failed to load ${t} from node path location.`))).then(undefined, n => g(t, d(r), e, r));
      } else {
        return g(t, d(r), e, r);
      }
    };
  },
  8713: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConnection = exports.Files = undefined;
    const A = require(57975);
    const c = __importStar(require(4693));
    const u = require(97360);
    const l = __importStar(require(5569));
    const g = require(14100);
    var d;
    __exportStar(require(14100), exports);
    __exportStar(require(56911), exports);
    (function (e) {
      e.uriToFilePath = l.uriToFilePath;
      e.resolveGlobalNodePath = l.resolveGlobalNodePath;
      e.resolveGlobalYarnPath = l.resolveGlobalYarnPath;
      e.resolve = l.resolve;
      e.resolveModulePath = l.resolveModulePath;
    })(d || (exports.Files = d = {}));
    let h;
    let f = false;
    (function () {
      const e = '--clientProcessId';
      function t(e) {
        try {
          const t = parseInt(e);
          if (!isNaN(t)) {
            h = setInterval(() => {
              try {
                process.kill(t, 0);
              } catch (e) {
                process.exit(f ? 0 : 1);
              }
            }, 3000);
          }
        } catch (e) {}
      }
      for (let n = 2; n < process.argv.length; n++) {
        const r = process.argv[n];
        if (r === e && n + 1 < process.argv.length) {
          t(process.argv[n + 1]);
          return;
        }
        {
          const n = r.split('=');
          if (n[0] === e) {
            t(n[1]);
          }
        }
      }
    })();
    const p = {
      initialize: e => {
        const t = e.processId;
        if (c.number(t) && h === undefined) {
          setInterval(() => {
            try {
              process.kill(t, 0);
            } catch (e) {
              process.exit(f ? 0 : 1);
            }
          }, 3000);
        }
      },
      get shutdownReceived() {
        return f;
      },
      set shutdownReceived(e) {
        f = e;
      },
      exit: e => {
        process.exit(e);
      }
    };
    exports.createConnection = function (e, t, n, r) {
      let o;
      let s;
      let a;
      let l;
      if (e !== undefined && e.__brand === 'features') {
        o = e;
        e = t;
        t = n;
        n = r;
      }
      if (g.ConnectionStrategy.is(e) || g.ConnectionOptions.is(e)) {
        l = e;
      } else {
        s = e;
        a = t;
        l = n;
      }
      return function (e, t, n, r) {
        let o = false;
        if (!e && !t && process.argv.length > 2) {
          let n;
          let r;
          const s = process.argv.slice(2);
          for (let a = 0; a < s.length; a++) {
            const A = s[a];
            if (A === '--node-ipc') {
              e = new g.IPCMessageReader(process);
              t = new g.IPCMessageWriter(process);
              break;
            }
            if (A === '--stdio') {
              o = true;
              e = process.stdin;
              t = process.stdout;
              break;
            }
            if (A === '--socket') {
              n = parseInt(s[a + 1]);
              break;
            }
            if (A === '--pipe') {
              r = s[a + 1];
              break;
            }
            {
              const e = A.split('=');
              if (e[0] === '--socket') {
                n = parseInt(e[1]);
                break;
              }
              if (e[0] === '--pipe') {
                r = e[1];
                break;
              }
            }
          }
          if (n) {
            const r = g.createServerSocketTransport(n);
            e = r[0];
            t = r[1];
          } else {
            if (r) {
              const n = g.createServerPipeTransport(r);
              e = n[0];
              t = n[1];
            }
          }
        }
        const s = 'Use arguments of createConnection or set command line parameters: \'--node-ipc\', \'--stdio\' or \'--socket={number}\'';
        if (!e) {
          throw new Error(`Connection input stream is not set. ${s}`);
        }
        if (!t) {
          throw new Error(`Connection output stream is not set. ${s}`);
        }
        if (c.func(e.read) && c.func(e.on)) {
          const t = e;
          t.on('end', () => {
            process.exit(f ? 0 : 1);
          });
          t.on('close', () => {
            process.exit(f ? 0 : 1);
          });
        }
        const a = r => {
          const s = g.createProtocolConnection(e, t, r, n);
          if (o) {
            (function (e) {
              function t(e) {
                return e.map(e => typeof e == 'string' ? e : A.inspect(e)).join(' ');
              }
              const n = new Map();
              console.assert = function (n, ...r) {
                if (!n) {
                  if (r.length === 0) {
                    e.error('Assertion failed');
                  } else {
                    const [n, ...o] = r;
                    e.error(`Assertion failed: ${n} ${t(o)}`);
                  }
                }
              };
              console.count = function (t = 'default') {
                const r = String(t);
                let o = n.get(r) ?? 0;
                o += 1;
                n.set(r, o);
                e.log(`${r}: ${r}`);
              };
              console.countReset = function (e) {
                if (e === undefined) {
                  n.clear();
                } else {
                  n.delete(String(e));
                }
              };
              console.debug = function (...n) {
                e.log(t(n));
              };
              console.dir = function (t, n) {
                e.log(A.inspect(t, n));
              };
              console.log = function (...n) {
                e.log(t(n));
              };
              console.error = function (...n) {
                e.error(t(n));
              };
              console.trace = function (...n) {
                const r = new Error().stack.replace(/(.+\n){2}/, '');
                let o = 'Trace';
                if (n.length !== 0) {
                  o += `: ${t(n)}`;
                }
                e.log(`${o}\n${r}`);
              };
              console.warn = function (...n) {
                e.warn(t(n));
              };
            })(r);
          }
          return s;
        };
        return u.createConnection(a, p, r);
      }(s, a, l, o);
    };
  },
  75559: function (module) {
    var t;
    t = () => (() => {
      "use strict";

      var e = {
        470: _module => {
          function t(e) {
            if (typeof e != 'string') {
              throw new TypeError(`Path must be a string. Received ${JSON.stringify(e)}`);
            }
          }
          function n(e, t) {
            var n;
            var r = '';
            var o = 0;
            var s = -1;
            var a = 0;
            for (var A = 0; A <= e.length; ++A) {
              if (A < e.length) {
                n = e.charCodeAt(A);
              } else {
                if (n === 47) {
                  break;
                }
                n = 47;
              }
              if (n === 47) {
                if (s === A - 1 || a === 1) ;else {
                  if (s !== A - 1 && a === 2) {
                    if (r.length < 2 || o !== 2 || r.charCodeAt(r.length - 1) !== 46 || r.charCodeAt(r.length - 2) !== 46) {
                      if (r.length > 2) {
                        var c = r.lastIndexOf('/');
                        if (c !== r.length - 1) {
                          if (c === -1) {
                            r = '';
                            o = 0;
                          } else {
                            o = (r = r.slice(0, c)).length - 1 - r.lastIndexOf('/');
                          }
                          s = A;
                          a = 0;
                          continue;
                        }
                      } else {
                        if (r.length === 2 || r.length === 1) {
                          r = '';
                          o = 0;
                          s = A;
                          a = 0;
                          continue;
                        }
                      }
                    }
                    if (t) {
                      if (r.length > 0) {
                        r += '/..';
                      } else {
                        r = '..';
                      }
                      o = 2;
                    }
                  } else {
                    if (r.length > 0) {
                      r += `/${e.slice(s + 1, A)}`;
                    } else {
                      r = e.slice(s + 1, A);
                    }
                    o = A - s - 1;
                  }
                }
                s = A;
                a = 0;
              } else {
                if (n === 46 && a !== -1) {
                  ++a;
                } else {
                  a = -1;
                }
              }
            }
            return r;
          }
          var r = {
            resolve: function () {
              var e;
              var r = '';
              for (var o = false, s = arguments.length - 1; s >= -1 && !o; s--) {
                var a;
                if (s >= 0) {
                  a = arguments[s];
                } else {
                  if (e === undefined) {
                    e = process.cwd();
                  }
                  a = e;
                }
                t(a);
                if (a.length !== 0) {
                  r = a + '/' + r;
                  o = a.charCodeAt(0) === 47;
                }
              }
              r = n(r, !o);
              if (o) {
                if (r.length > 0) {
                  return `/${r}`;
                } else {
                  return '/';
                }
              } else {
                if (r.length > 0) {
                  return r;
                } else {
                  return '.';
                }
              }
            },
            normalize: function (e) {
              t(e);
              if (e.length === 0) {
                return '.';
              }
              var r = e.charCodeAt(0) === 47;
              var o = e.charCodeAt(e.length - 1) === 47;
              if ((e = n(e, !r)).length === 0 && !r) {
                e = '.';
              }
              if (e.length > 0 && o) {
                e += '/';
              }
              if (r) {
                return `/${e}`;
              } else {
                return e;
              }
            },
            isAbsolute: function (e) {
              t(e);
              return e.length > 0 && e.charCodeAt(0) === 47;
            },
            join: function () {
              if (arguments.length === 0) {
                return '.';
              }
              var e;
              for (var n = 0; n < arguments.length; ++n) {
                var o = arguments[n];
                t(o);
                if (o.length > 0) {
                  if (e === undefined) {
                    e = o;
                  } else {
                    e += `/${o}`;
                  }
                }
              }
              if (e === undefined) {
                return '.';
              } else {
                return r.normalize(e);
              }
            },
            relative: function (e, n) {
              t(e);
              t(n);
              if (e === n) {
                return '';
              }
              if ((e = r.resolve(e)) === (n = r.resolve(n))) {
                return '';
              }
              for (var o = 1; o < e.length && e.charCodeAt(o) === 47; ++o);
              var s = e.length;
              var a = s - o;
              for (var A = 1; A < n.length && n.charCodeAt(A) === 47; ++A);
              var c = n.length - A;
              for (var u = a < c ? a : c, l = -1, g = 0; g <= u; ++g) {
                if (g === u) {
                  if (c > u) {
                    if (n.charCodeAt(A + g) === 47) {
                      return n.slice(A + g + 1);
                    }
                    if (g === 0) {
                      return n.slice(A + g);
                    }
                  } else {
                    if (a > u) {
                      if (e.charCodeAt(o + g) === 47) {
                        l = g;
                      } else {
                        if (g === 0) {
                          l = 0;
                        }
                      }
                    }
                  }
                  break;
                }
                var d = e.charCodeAt(o + g);
                if (d !== n.charCodeAt(A + g)) {
                  break;
                }
                if (d === 47) {
                  l = g;
                }
              }
              var h = '';
              for (g = o + l + 1; g <= s; ++g) {
                if (g === s || e.charCodeAt(g) === 47) {
                  if (h.length === 0) {
                    h += '..';
                  } else {
                    h += '/..';
                  }
                }
              }
              if (h.length > 0) {
                return h + n.slice(A + l);
              } else {
                A += l;
                if (n.charCodeAt(A) === 47) {
                  ++A;
                }
                return n.slice(A);
              }
            },
            _makeLong: function (e) {
              return e;
            },
            dirname: function (e) {
              t(e);
              if (e.length === 0) {
                return '.';
              }
              var n = e.charCodeAt(0);
              var r = n === 47;
              var o = -1;
              var s = true;
              for (var a = e.length - 1; a >= 1; --a) {
                if ((n = e.charCodeAt(a)) === 47) {
                  if (!s) {
                    o = a;
                    break;
                  }
                } else {
                  s = false;
                }
              }
              if (o === -1) {
                if (r) {
                  return '/';
                } else {
                  return '.';
                }
              } else {
                if (r && o === 1) {
                  return '//';
                } else {
                  return e.slice(0, o);
                }
              }
            },
            basename: function (e, n) {
              if (n !== undefined && typeof n != 'string') {
                throw new TypeError('"ext" argument must be a string');
              }
              t(e);
              var r;
              var o = 0;
              var s = -1;
              var a = true;
              if (n !== undefined && n.length > 0 && n.length <= e.length) {
                if (n.length === e.length && n === e) {
                  return '';
                }
                var A = n.length - 1;
                var c = -1;
                for (r = e.length - 1; r >= 0; --r) {
                  var u = e.charCodeAt(r);
                  if (u === 47) {
                    if (!a) {
                      o = r + 1;
                      break;
                    }
                  } else {
                    if (c === -1) {
                      a = false;
                      c = r + 1;
                    }
                    if (A >= 0) {
                      if (u === n.charCodeAt(A)) {
                        if (--A == -1) {
                          s = r;
                        }
                      } else {
                        A = -1;
                        s = c;
                      }
                    }
                  }
                }
                if (o === s) {
                  s = c;
                } else {
                  if (s === -1) {
                    s = e.length;
                  }
                }
                return e.slice(o, s);
              }
              for (r = e.length - 1; r >= 0; --r) {
                if (e.charCodeAt(r) === 47) {
                  if (!a) {
                    o = r + 1;
                    break;
                  }
                } else {
                  if (s === -1) {
                    a = false;
                    s = r + 1;
                  }
                }
              }
              if (s === -1) {
                return '';
              } else {
                return e.slice(o, s);
              }
            },
            extname: function (e) {
              t(e);
              var n = -1;
              var r = 0;
              var o = -1;
              var s = true;
              var a = 0;
              for (var A = e.length - 1; A >= 0; --A) {
                var c = e.charCodeAt(A);
                if (c !== 47) {
                  if (o === -1) {
                    s = false;
                    o = A + 1;
                  }
                  if (c === 46) {
                    if (n === -1) {
                      n = A;
                    } else {
                      if (a !== 1) {
                        a = 1;
                      }
                    }
                  } else {
                    if (n !== -1) {
                      a = -1;
                    }
                  }
                } else {
                  if (!s) {
                    r = A + 1;
                    break;
                  }
                }
              }
              if (n === -1 || o === -1 || a === 0 || a === 1 && n === o - 1 && n === r + 1) {
                return '';
              } else {
                return e.slice(n, o);
              }
            },
            format: function (e) {
              if (e === null || typeof e != 'object') {
                throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof e}`);
              }
              return function (e, t) {
                var n = t.dir || t.root;
                var r = t.base || (t.name || '') + (t.ext || '');
                if (n) {
                  if (n === t.root) {
                    return n + r;
                  } else {
                    return n + '/' + r;
                  }
                } else {
                  return r;
                }
              }(0, e);
            },
            parse: function (e) {
              t(e);
              var n = {
                root: '',
                dir: '',
                base: '',
                ext: '',
                name: ''
              };
              if (e.length === 0) {
                return n;
              }
              var r;
              var o = e.charCodeAt(0);
              var s = o === 47;
              if (s) {
                n.root = '/';
                r = 1;
              } else {
                r = 0;
              }
              var a = -1;
              var A = 0;
              var c = -1;
              var u = true;
              for (var l = e.length - 1, g = 0; l >= r; --l) {
                if ((o = e.charCodeAt(l)) !== 47) {
                  if (c === -1) {
                    u = false;
                    c = l + 1;
                  }
                  if (o === 46) {
                    if (a === -1) {
                      a = l;
                    } else {
                      if (g !== 1) {
                        g = 1;
                      }
                    }
                  } else {
                    if (a !== -1) {
                      g = -1;
                    }
                  }
                } else {
                  if (!u) {
                    A = l + 1;
                    break;
                  }
                }
              }
              if (a === -1 || c === -1 || g === 0 || g === 1 && a === c - 1 && a === A + 1) {
                if (c !== -1) {
                  n.base = n.name = A === 0 && s ? e.slice(1, c) : e.slice(A, c);
                }
              } else {
                if (A === 0 && s) {
                  n.name = e.slice(1, a);
                  n.base = e.slice(1, c);
                } else {
                  n.name = e.slice(A, a);
                  n.base = e.slice(A, c);
                }
                n.ext = e.slice(a, c);
              }
              if (A > 0) {
                n.dir = e.slice(0, A - 1);
              } else {
                if (s) {
                  n.dir = '/';
                }
              }
              return n;
            },
            sep: '/',
            delimiter: ':',
            win32: null,
            posix: null
          };
          r.posix = r;
          _module.exports = r;
        },
        674: (_module, _exports) => {
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.isWindows = undefined;
          if (typeof process == 'object') {
            _exports.isWindows = process.platform === 'win32';
          } else {
            if (typeof navigator == 'object') {
              let e = navigator.userAgent;
              _exports.isWindows = e.indexOf('Windows') >= 0;
            }
          }
        },
        796: (_module, _exports, _require) => {
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.uriToFsPath = _exports.URI = undefined;
          const r = _require(674);
          const o = /^\w[\w\d+.-]*$/;
          const s = /^\//;
          const a = /^\/\//;
          function A(e, t) {
            if (!e.scheme && t) {
              throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`);
            }
            if (e.scheme && !o.test(e.scheme)) {
              throw new Error('[UriError]: Scheme contains illegal characters.');
            }
            if (e.path) {
              if (e.authority) {
                if (!s.test(e.path)) {
                  throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character');
                }
              } else {
                if (a.test(e.path)) {
                  throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")');
                }
              }
            }
          }
          const c = '';
          const u = '/';
          const l = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
          class g {
            static isUri(e) {
              return e instanceof g || !!e && typeof e.authority == 'string' && typeof e.fragment == 'string' && typeof e.path == 'string' && typeof e.query == 'string' && typeof e.scheme == 'string' && typeof e.fsPath == 'string' && typeof e.with == 'function' && typeof e.toString == 'function';
            }
            scheme;
            authority;
            path;
            query;
            fragment;
            constructor(e, t, n, r, o, s = false) {
              if (typeof e == 'object') {
                this.scheme = e.scheme || c;
                this.authority = e.authority || c;
                this.path = e.path || c;
                this.query = e.query || c;
                this.fragment = e.fragment || c;
              } else {
                this.scheme = function (e, t) {
                  if (e || t) {
                    return e;
                  } else {
                    return 'file';
                  }
                }(e, s);
                this.authority = t || c;
                this.path = function (e, t) {
                  switch (e) {
                    case 'https':
                    case 'http':
                    case 'file':
                      if (t) {
                        if (t[0] !== u) {
                          t = u + t;
                        }
                      } else {
                        t = u;
                      }
                  }
                  return t;
                }(this.scheme, n || c);
                this.query = r || c;
                this.fragment = o || c;
                A(this, s);
              }
            }
            get fsPath() {
              return I(this, false);
            }
            with(e) {
              if (!e) {
                return this;
              }
              let {
                scheme: t,
                authority: n,
                path: r,
                query: o,
                fragment: s
              } = e;
              if (t === undefined) {
                t = this.scheme;
              } else {
                if (t === null) {
                  t = c;
                }
              }
              if (n === undefined) {
                n = this.authority;
              } else {
                if (n === null) {
                  n = c;
                }
              }
              if (r === undefined) {
                r = this.path;
              } else {
                if (r === null) {
                  r = c;
                }
              }
              if (o === undefined) {
                o = this.query;
              } else {
                if (o === null) {
                  o = c;
                }
              }
              if (s === undefined) {
                s = this.fragment;
              } else {
                if (s === null) {
                  s = c;
                }
              }
              if (t === this.scheme && n === this.authority && r === this.path && o === this.query && s === this.fragment) {
                return this;
              } else {
                return new h(t, n, r, o, s);
              }
            }
            static parse(e, t = false) {
              const n = l.exec(e);
              if (n) {
                return new h(n[2] || c, _(n[4] || c), _(n[5] || c), _(n[7] || c), _(n[9] || c), t);
              } else {
                return new h(c, c, c, c, c);
              }
            }
            static file(e) {
              let t = c;
              if (r.isWindows) {
                e = e.replace(/\\/g, u);
              }
              if (e[0] === u && e[1] === u) {
                const n = e.indexOf(u, 2);
                if (n === -1) {
                  t = e.substring(2);
                  e = u;
                } else {
                  t = e.substring(2, n);
                  e = e.substring(n) || u;
                }
              }
              return new h('file', t, e, c, c);
            }
            static from(e) {
              const t = new h(e.scheme, e.authority, e.path, e.query, e.fragment);
              A(t, true);
              return t;
            }
            toString(e = false) {
              return E(this, e);
            }
            toJSON() {
              return this;
            }
            static revive(e) {
              if (e) {
                if (e instanceof g) {
                  return e;
                }
                {
                  const t = new h(e);
                  t._formatted = e.external;
                  t._fsPath = e._sep === d ? e.fsPath : null;
                  return t;
                }
              }
              return e;
            }
          }
          _exports.URI = g;
          const d = r.isWindows ? 1 : undefined;
          class h extends g {
            _formatted = null;
            _fsPath = null;
            get fsPath() {
              if (!this._fsPath) {
                this._fsPath = I(this, false);
              }
              return this._fsPath;
            }
            toString(e = false) {
              if (e) {
                return E(this, true);
              } else {
                if (!this._formatted) {
                  this._formatted = E(this, false);
                }
                return this._formatted;
              }
            }
            toJSON() {
              const e = {
                $mid: 1
              };
              if (this._fsPath) {
                e.fsPath = this._fsPath;
                e._sep = d;
              }
              if (this._formatted) {
                e.external = this._formatted;
              }
              if (this.path) {
                e.path = this.path;
              }
              if (this.scheme) {
                e.scheme = this.scheme;
              }
              if (this.authority) {
                e.authority = this.authority;
              }
              if (this.query) {
                e.query = this.query;
              }
              if (this.fragment) {
                e.fragment = this.fragment;
              }
              return e;
            }
          }
          const f = {
            58: '%3A',
            47: '%2F',
            63: '%3F',
            35: '%23',
            91: '%5B',
            93: '%5D',
            64: '%40',
            33: '%21',
            36: '%24',
            38: '%26',
            39: '%27',
            40: '%28',
            41: '%29',
            42: '%2A',
            43: '%2B',
            44: '%2C',
            59: '%3B',
            61: '%3D',
            32: '%20'
          };
          function p(e, t, n) {
            let r;
            let o = -1;
            for (let s = 0; s < e.length; s++) {
              const a = e.charCodeAt(s);
              if (a >= 97 && a <= 122 || a >= 65 && a <= 90 || a >= 48 && a <= 57 || a === 45 || a === 46 || a === 95 || a === 126 || t && a === 47 || n && a === 91 || n && a === 93 || n && a === 58) {
                if (o !== -1) {
                  r += encodeURIComponent(e.substring(o, s));
                  o = -1;
                }
                if (r !== undefined) {
                  r += e.charAt(s);
                }
              } else {
                if (r === undefined) {
                  r = e.substr(0, s);
                }
                const t = f[a];
                if (t !== undefined) {
                  if (o !== -1) {
                    r += encodeURIComponent(e.substring(o, s));
                    o = -1;
                  }
                  r += t;
                } else {
                  if (o === -1) {
                    o = s;
                  }
                }
              }
            }
            if (o !== -1) {
              r += encodeURIComponent(e.substring(o));
            }
            if (r !== undefined) {
              return r;
            } else {
              return e;
            }
          }
          function m(e) {
            let t;
            for (let n = 0; n < e.length; n++) {
              const r = e.charCodeAt(n);
              if (r === 35 || r === 63) {
                if (t === undefined) {
                  t = e.substr(0, n);
                }
                t += f[r];
              } else {
                if (t !== undefined) {
                  t += e[n];
                }
              }
            }
            if (t !== undefined) {
              return t;
            } else {
              return e;
            }
          }
          function I(e, t) {
            let n;
            n = e.authority && e.path.length > 1 && e.scheme === 'file' ? `//${e.authority}${e.path}` : e.path.charCodeAt(0) === 47 && (e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90 || e.path.charCodeAt(1) >= 97 && e.path.charCodeAt(1) <= 122) && e.path.charCodeAt(2) === 58 ? t ? e.path.substr(1) : e.path[1].toLowerCase() + e.path.substr(2) : e.path;
            if (r.isWindows) {
              n = n.replace(/\//g, '\\');
            }
            return n;
          }
          function E(e, t) {
            const n = t ? m : p;
            let r = '';
            let {
              scheme: o,
              authority: s,
              path: a,
              query: A,
              fragment: c
            } = e;
            if (o) {
              r += o;
              r += ':';
            }
            if (s || o === 'file') {
              r += u;
              r += u;
            }
            if (s) {
              let e = s.indexOf('@');
              if (e !== -1) {
                const t = s.substr(0, e);
                s = s.substr(e + 1);
                e = t.lastIndexOf(':');
                if (e === -1) {
                  r += n(t, false, false);
                } else {
                  r += n(t.substr(0, e), false, false);
                  r += ':';
                  r += n(t.substr(e + 1), false, true);
                }
                r += '@';
              }
              s = s.toLowerCase();
              e = s.lastIndexOf(':');
              if (e === -1) {
                r += n(s, false, true);
              } else {
                r += n(s.substr(0, e), false, true);
                r += s.substr(e);
              }
            }
            if (a) {
              if (a.length >= 3 && a.charCodeAt(0) === 47 && a.charCodeAt(2) === 58) {
                const e = a.charCodeAt(1);
                if (e >= 65 && e <= 90) {
                  a = `/${String.fromCharCode(e + 32)}:${a.substr(3)}`;
                }
              } else {
                if (a.length >= 2 && a.charCodeAt(1) === 58) {
                  const e = a.charCodeAt(0);
                  if (e >= 65 && e <= 90) {
                    a = `${String.fromCharCode(e + 32)}:${a.substr(2)}`;
                  }
                }
              }
              r += n(a, true, false);
            }
            if (A) {
              r += '?';
              r += n(A, false, false);
            }
            if (c) {
              r += '#';
              r += t ? c : p(c, false, false);
            }
            return r;
          }
          function y(e) {
            try {
              return decodeURIComponent(e);
            } catch {
              if (e.length > 3) {
                return e.substr(0, 3) + y(e.substr(3));
              } else {
                return e;
              }
            }
          }
          _exports.uriToFsPath = I;
          const w = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
          function _(e) {
            if (e.match(w)) {
              return e.replace(w, e => y(e));
            } else {
              return e;
            }
          }
        },
        679: function (_module, _exports, _require) {
          var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
              desc = {
                enumerable: true,
                get: function () {
                  return m[k];
                }
              };
            }
            Object.defineProperty(o, k2, desc);
          } : function (o, m, k, k2) {
            if (k2 === undefined) k2 = k;
            o[k2] = m[k];
          });
          var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
            Object.defineProperty(o, "default", {
              enumerable: true,
              value: v
            });
          } : function (o, v) {
            o["default"] = v;
          });
          var __importStar = this && this.__importStar || function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
          };
          Object.defineProperty(_exports, '__esModule', {
            value: true
          });
          _exports.Utils = undefined;
          const a = __importStar(_require(470));
          const A = a.posix || a;
          const c = '/';
          var u;
          (function (e) {
            e.joinPath = function (e, ...t) {
              return e.with({
                path: A.join(e.path, ...t)
              });
            };
            e.resolvePath = function (e, ...t) {
              let n = e.path;
              let r = false;
              if (n[0] !== c) {
                n = c + n;
                r = true;
              }
              let o = A.resolve(n, ...t);
              if (r && o[0] === c && !e.authority) {
                o = o.substring(1);
              }
              return e.with({
                path: o
              });
            };
            e.dirname = function (e) {
              if (e.path.length === 0 || e.path === c) {
                return e;
              }
              let t = A.dirname(e.path);
              if (t.length === 1 && t.charCodeAt(0) === 46) {
                t = '';
              }
              return e.with({
                path: t
              });
            };
            e.basename = function (e) {
              return A.basename(e.path);
            };
            e.extname = function (e) {
              return A.extname(e.path);
            };
          })(u || (_exports.Utils = u = {}));
        }
      };
      var t = {};
      function n(r) {
        var o = t[r];
        if (o !== undefined) {
          return o.exports;
        }
        var s = t[r] = {
          exports: {}
        };
        e[r].call(s.exports, s, s.exports, n);
        return s.exports;
      }
      var r = {};
      (() => {
        var e = r;
        Object.defineProperty(e, '__esModule', {
          value: true
        });
        e.Utils = e.URI = undefined;
        const t = n(796);
        Object.defineProperty(e, 'URI', {
          enumerable: true,
          get: function () {
            return t.URI;
          }
        });
        const o = n(679);
        Object.defineProperty(e, 'Utils', {
          enumerable: true,
          get: function () {
            return o.Utils;
          }
        });
      })();
      return r;
    })();
    module.exports = t();
  },
  10698: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      _: () => f
    });
    var r = require(10659);
    var o = require(68279);
    var s = require(269);
    var a = require(28156);
    var A = require(4296);
    var c = require(23775);
    var u = require(82774);
    var l = require(90937);
    var g = require(14822);
    var d = require(61739);
    var h = s.ZHX({
      endpointUrl: l.S,
      propertyStorageOverride: {
        isVal: function (e) {
          if (!!e && (!e.getProperty || !e.setProperty)) {
            s.$8('Invalid property storage override passed.');
          }
          return true;
        }
      }
    });
    var f = function (e) {
      function t() {
        var n = e.call(this) || this;
        o.A(t, n, function (e, t) {
          e[d.mE] = function (n, r, o, u) {
            a.r2(e, function () {
              return 'AppInsightsCore.initialize';
            }, function () {
              try {
                t[d.mE](A.e(n, h, o || e[d.Uw], false).cfg, r, o, u);
              } catch (t) {
                var a = e[d.Uw];
                var l = s.mmD(t);
                if (l[d.Sj]('channels') !== -1) {
                  l += '\n - Channels must be provided through config.channels only!';
                }
                c.ZP(a, 1, 514, `SDK Initialization Failed - no telemetry will be sent: ${l}`);
              }
            }, function () {
              return {
                config: n,
                extensions: r,
                logger: o,
                notificationManager: u
              };
            });
          };
          e.track = function (n) {
            a.r2(e, function () {
              return 'AppInsightsCore.track';
            }, function () {
              var r = n;
              if (r) {
                r[d.dg] = r[d.dg] || {};
                r[d.dg].trackStart = g.WB();
                if (!g.Hh(r.latency)) {
                  r.latency = 1;
                }
                var o = r.ext = r.ext || {};
                o.sdk = o.sdk || {};
                o.sdk.ver = g.xE;
                var s = r.baseData = r.baseData || {};
                s[l._0] = s[l._0] || {};
                var a = s[l._0];
                a[l.hj] = a[l.hj] || e.pluginVersionString || l.m5;
              }
              t.track(r);
            }, function () {
              return {
                item: n
              };
            }, !n.sync);
          };
          e[d.h4] = function (e) {
            return t[d.h4](e || 'InternalLog');
          };
        });
        return n;
      }
      r.qU(t, e);
      t.__ieDyn = 1;
      return t;
    }(u._);
  },
  53453: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      AN: () => o,
      XA: () => s,
      iD: () => A,
      kp: () => c,
      sC: () => a
    });
    var r = require(84282);
    var o = r.H({
      NotSet: 0,
      Pii_DistinguishedName: 1,
      Pii_GenericData: 2,
      Pii_IPV4Address: 3,
      Pii_IPv6Address: 4,
      Pii_MailSubject: 5,
      Pii_PhoneNumber: 6,
      Pii_QueryString: 7,
      Pii_SipAddress: 8,
      Pii_SmtpAddress: 9,
      Pii_Identity: 10,
      Pii_Uri: 11,
      Pii_Fqdn: 12,
      Pii_IPV4AddressLegacy: 13,
      Pii_IPv6ScrubLastHextets: 14,
      Pii_DropValue: 15,
      CustomerContent_GenericContent: 32
    });
    var s = r.H({
      Normal: 1,
      CostDeferred: 2,
      RealTime: 3,
      Immediate: 4
    });
    var a = r.H({
      Unspecified: 0,
      String: 1,
      Int32: 2,
      UInt32: 3,
      Int64: 4,
      UInt64: 5,
      Double: 6,
      Bool: 7,
      Guid: 8,
      DateTime: 9
    });
    var A = r.H({
      Normal: 1,
      Critical: 2
    });
    var c = r.H({
      NONE: 0,
      ERROR: 1,
      WARNING: 2,
      INFORMATION: 3
    });
  },
  23291: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      AppInsightsCore: () => r._,
      BaseTelemetryPlugin: () => A.s,
      DiagnosticLogger: () => g.wq,
      EventLatency: () => o.XA,
      EventPersistence: () => o.iD,
      EventPropertyType: () => o.sC,
      EventsDiscardedReason: () => l.x,
      FullVersionString: () => P.xE,
      InternalAppInsightsCore: () => f._,
      LoggingSeverity: () => d.b,
      MinChannelPriorty: () => u.T,
      NotificationManager: () => a.h,
      PerfEvent: () => h.Q6,
      PerfManager: () => h.NS,
      ProcessTelemetryContext: () => c.W0,
      SenderPostManager: () => R.v,
      TraceLevel: () => o.kp,
      Undefined: () => v.bA,
      ValueKind: () => o.AN,
      ValueSanitizer: () => s.H,
      Version: () => P.Rx,
      _InternalLogMessage: () => g.WD,
      __getRegisteredEvents: () => I.El,
      _appendHeader: () => E.LU,
      _getAllResponseHeaders: () => E.w3,
      _logInternalMessage: () => g.Oc,
      _testHookMaxUnloadHooksCb: () => x.d,
      _throwInternal: () => g.ZP,
      _warnToConsole: () => g.OG,
      addEventHandler: () => I.So,
      addEventListeners: () => I.lQ,
      addPageHideEventListener: () => I.Fc,
      addPageShowEventListener: () => I.oS,
      addPageUnloadEventListener: () => I.ee,
      areCookiesSupported: () => b.gi,
      arrForEach: () => m.Iuo,
      arrIndexOf: () => m.rDm,
      arrMap: () => m.W$7,
      arrReduce: () => m.KTd,
      attachEvent: () => I.Q3,
      blockDynamicConversion: () => T.V9,
      convertAllHeadersToMap: () => E.IL,
      cookieAvailable: () => b.gi,
      createCookieMgr: () => b.xN,
      createDynamicConfig: () => S.e,
      createEnumStyle: () => p.H,
      createGuid: () => P.gj,
      createProcessTelemetryContext: () => c.i8,
      createTraceParent: () => D.wk,
      createUniqueNamespace: () => B.Z,
      createUnloadHandlerContainer: () => Q.P,
      dateNow: () => m.f0d,
      detachEvent: () => I.Ym,
      disallowsSameSiteNone: () => b.It,
      doPerf: () => h.r2,
      dumpObj: () => m.mmD,
      eventOff: () => I.ML,
      eventOn: () => I.mB,
      extend: () => P.X$,
      findW3cTraceParent: () => D.ef,
      forceDynamicConversion: () => T.Hf,
      formatErrorMessageXdr: () => E.HU,
      formatErrorMessageXhr: () => E.r4,
      formatTraceParent: () => D.L0,
      generateW3CId: () => y.cL,
      getCommonSchemaMetaData: () => P.Go,
      getConsole: () => _.U5,
      getCookieValue: () => P.UM,
      getCrypto: () => _.MY,
      getDocument: () => m.YEm,
      getDynamicConfigHandler: () => T.QA,
      getExceptionName: () => E.lL,
      getFieldValueType: () => P.cq,
      getGlobal: () => m.mS$,
      getGlobalInst: () => m.zS2,
      getHistory: () => m.JKf,
      getIEVersion: () => _.L0,
      getISOString: () => E._u,
      getJSON: () => _.hm,
      getLocation: () => _.g$,
      getMsCrypto: () => _.iN,
      getNavigator: () => m.w3n,
      getPerformance: () => m.FJj,
      getResponseText: () => E.Lo,
      getSetValue: () => E.c2,
      getTenantId: () => P.EO,
      getTime: () => P.WB,
      getWindow: () => m.zkX,
      hasDocument: () => m.Wtk,
      hasHistory: () => m.twz,
      hasJSON: () => _.Z,
      hasNavigator: () => m.w9M,
      hasOwnProperty: () => m.v0u,
      hasWindow: () => m.Vdv,
      isArray: () => m.cyL,
      isArrayValid: () => P.wJ,
      isBeaconsSupported: () => _.Uf,
      isBoolean: () => m.Lmq,
      isChromium: () => P.F2,
      isDate: () => m.$PY,
      isDocumentObjectAvailable: () => P.g8,
      isError: () => m.bJ7,
      isFetchSupported: () => _.R7,
      isFunction: () => m.Tnt,
      isGreaterThanZero: () => P.ei,
      isIE: () => _.lT,
      isLatency: () => P.Hh,
      isNotTruthy: () => m.woc,
      isNullOrUndefined: () => m.hXl,
      isNumber: () => m.EtT,
      isObject: () => m.Gvm,
      isReactNative: () => _.lV,
      isSampledFlag: () => D.N7,
      isString: () => m.KgX,
      isTruthy: () => m.zzB,
      isTypeof: () => m.Edw,
      isUint8ArrayAvailable: () => P.h3,
      isUndefined: () => m.b07,
      isValidSpanId: () => D.wN,
      isValidTraceId: () => D.hX,
      isValidTraceParent: () => D.mJ,
      isValueAssigned: () => P.yD,
      isValueKind: () => P.m0,
      isWindowObjectAvailable: () => P.P$,
      isXhrSupported: () => _.xk,
      mergeEvtNamespace: () => I.Hm,
      newGuid: () => y.aq,
      newId: () => w.Si,
      normalizeJsName: () => E.cH,
      objDefineAccessors: () => m.raO,
      objForEachKey: () => m.zav,
      objFreeze: () => m.N6t,
      objKeys: () => m.cGk,
      objSeal: () => m.jsL,
      onConfigChange: () => S.a,
      openXhr: () => P.H$,
      optimizeObject: () => E.hW,
      parseResponse: () => k.x,
      parseTraceParent: () => D.ZI,
      perfNow: () => m.UUD,
      prependTransports: () => E.jL,
      proxyAssign: () => E.qz,
      proxyFunctionAs: () => E.RF,
      proxyFunctions: () => E.o$,
      random32: () => w.VN,
      randomValue: () => w.Z1,
      removeEventHandler: () => I.zh,
      removeEventListeners: () => I.Wg,
      removePageHideEventListener: () => I.sq,
      removePageShowEventListener: () => I.vF,
      removePageUnloadEventListener: () => I.Ds,
      safeGetCookieMgr: () => b.um,
      safeGetLogger: () => g.y0,
      sanitizeProperty: () => P.TC,
      setEnableEnvMocks: () => _.cU,
      setProcessTelemetryTimings: () => P.u9,
      setValue: () => E.KY,
      strContains: () => E.Ju,
      strEndsWith: () => m.Cv9,
      strFunction: () => v.hW,
      strObject: () => v._1,
      strPrototype: () => v.vR,
      strStartsWith: () => m.tGl,
      strTrim: () => m.EHq,
      strUndefined: () => v.bA,
      throwError: () => m.$8,
      toISOString: () => E._u,
      useXDomainRequest: () => _.PV
    });
    if (require.j == 606) {
      var r = require(10698);
    }
    if (require.j == 606) {
      var o = require(53453);
    }
    if (require.j == 606) {
      var s = require(33091);
    }
    if (require.j == 606) {
      var a = require(51356);
    }
    if (require.j == 606) {
      var A = require(98257);
    }
    if (require.j == 606) {
      var c = require(72317);
    }
    if (require.j == 606) {
      var u = require(35494);
    }
    if (require.j == 606) {
      var l = require(13662);
    }
    if (require.j == 606) {
      var g = require(23775);
    }
    if (require.j == 606) {
      var d = require(32897);
    }
    if (require.j == 606) {
      var h = require(28156);
    }
    if (require.j == 606) {
      var f = require(82774);
    }
    if (require.j == 606) {
      var p = require(84282);
    }
    if (require.j == 606) {
      var m = require(269);
    }
    if (require.j == 606) {
      var I = require(56149);
    }
    if (require.j == 606) {
      var E = require(13673);
    }
    if (require.j == 606) {
      var y = require(69882);
    }
    if (require.j == 606) {
      var w = require(76535);
    }
    if (require.j == 606) {
      var _ = require(7292);
    }
    if (require.j == 606) {
      var v = require(45664);
    }
    if (require.j == 606) {
      var b = require(25034);
    }
    if (require.j == 606) {
      var B = require(24276);
    }
    if (require.j == 606) {
      var Q = require(60836);
    }
    if (require.j == 606) {
      var D = require(91864);
    }
    if (require.j == 606) {
      var S = require(4296);
    }
    if (require.j == 606) {
      var T = require(99147);
    }
    if (require.j == 606) {
      var R = require(90856);
    }
    if (require.j == 606) {
      var k = require(31190);
    }
    if (require.j == 606) {
      var x = require(98969);
    }
    if (require.j == 606) {
      var P = require(14822);
    }
  },
  90937: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      S: () => o,
      _0: () => a,
      hj: () => s,
      m5: () => r
    });
    var r = '';
    var o = 'https://browser.events.data.microsoft.com/OneCollector/1.0/';
    var s = 'version';
    var a = 'properties';
  },
  14822: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      EO: () => _,
      F2: () => M,
      Go: () => Q,
      H$: () => O,
      Hh: () => b,
      P$: () => y,
      Rx: () => l,
      TC: () => B,
      UM: () => D,
      WB: () => R,
      X$: () => T,
      cq: () => F,
      ei: () => N,
      g8: () => E,
      gj: () => S,
      h3: () => v,
      m0: () => k,
      u9: () => P,
      wJ: () => x,
      xE: () => g,
      yD: () => w
    });
    var r = require(269);
    if (require.j == 606) {
      var o = require(7292);
    }
    if (require.j == 606) {
      var s = require(69882);
    }
    var a;
    var A = require(45664);
    if (require.j == 606) {
      var c = require(90937);
    }
    if (require.j == 606) {
      var u = require(61739);
    }
    var l = '4.3.2';
    var g = `1DS-Web-JS-${l}`;
    var d = A.Wy.hasOwnProperty;
    var h = 'Microsoft_ApplicationInsights_BypassAjaxInstrumentation';
    var f = 'withCredentials';
    var p = 'timeout';
    (a = {})[0] = 0;
    a[2] = 6;
    a[1] = 1;
    a[3] = 7;
    a[4098] = 6;
    a[4097] = 1;
    a[4099] = 7;
    var m = a;
    var I = null;
    var E = r.Wtk();
    var y = r.Vdv();
    function w(e) {
      return e !== c.m5 && !r.hXl(e);
    }
    function _(e) {
      if (e) {
        var t = r.HzD(e, '-');
        if (t > -1) {
          return r.ZWZ(e, t);
        }
      }
      return c.m5;
    }
    function v() {
      if (I === null) {
        I = !r.b07(Uint8Array) && !function () {
          var e = r.w3n();
          if (!r.b07(e) && e.userAgent) {
            var t = e.userAgent.toLowerCase();
            if ((t[u.Sj]('safari') >= 0 || t[u.Sj]('firefox') >= 0) && t[u.Sj]('chrome') < 0) {
              return true;
            }
          }
          return false;
        }() && !o.lV();
      }
      return I;
    }
    function b(e) {
      return !!e && !!r.EtT(e) && !!(e >= 1) && !!(e <= 4);
    }
    function B(e, t, n) {
      if (!t && !w(t) || typeof e != 'string') {
        return null;
      }
      var o = typeof t;
      if (o === 'string' || o === 'number' || o === 'boolean' || r.cyL(t)) {
        t = {
          value: t
        };
      } else {
        if (o !== 'object' || d.call(t, 'value')) {
          if (r.hXl(t[u.pF]) || t[u.pF] === c.m5 || !r.KgX(t[u.pF]) && !r.EtT(t[u.pF]) && !r.Lmq(t[u.pF]) && !r.cyL(t[u.pF])) {
            return null;
          }
        } else {
          t = {
            value: n ? JSON.stringify(t) : t
          };
        }
      }
      if (r.cyL(t[u.pF]) && !x(t[u.pF])) {
        return null;
      }
      if (!r.hXl(t[u.QV])) {
        if (r.cyL(t[u.pF]) || !k(t[u.QV])) {
          return null;
        }
        t[u.pF] = t[u.pF].toString();
      }
      return t;
    }
    function Q(e, t, n) {
      var o = -1;
      if (!r.b07(e)) {
        if (t > 0) {
          if (t === 32) {
            o = 8192;
          } else {
            if (t <= 13) {
              o = t << 5;
            }
          }
        }
        if (function (e) {
          if (e >= 0 && e <= 9) {
            return true;
          }
          return false;
        }(n)) {
          if (o === -1) {
            o = 0;
          }
          o |= n;
        } else {
          var s = m[F(e)] || -1;
          if (o !== -1 && s !== -1) {
            o |= s;
          } else {
            if (s === 6) {
              o = s;
            }
          }
        }
      }
      return o;
    }
    function D(e, t, n) {
      var r;
      if (n === undefined) {
        n = true;
      }
      if (e) {
        r = e.get(t);
        if (n && r && decodeURIComponent) {
          r = decodeURIComponent(r);
        }
      }
      return r || c.m5;
    }
    function S(e = 'D') {
      var t = s.aq();
      if (e === 'B') {
        t = `{${t}}`;
      } else {
        if (e === 'P') {
          t = `(${t})`;
        } else {
          if (e === 'N') {
            t = t.replace(/-/g, c.m5);
          }
        }
      }
      return t;
    }
    function T(e, t, n, o, s) {
      var a = {};
      var A = false;
      var c = 0;
      var l = arguments[u.oI];
      var g = arguments;
      for (r.Lmq(g[0]) && (A = g[0], c++); c < l; c++) {
        e = g[c];
        r.zav(e, function (e, t) {
          if (A && t && r.Gvm(t)) {
            if (r.cyL(t)) {
              a[e] = a[e] || [];
              r.Iuo(t, function (t, n) {
                if (t && r.Gvm(t)) {
                  a[e][n] = T(true, a[e][n], t);
                } else {
                  a[e][n] = t;
                }
              });
            } else {
              a[e] = T(true, a[e], t);
            }
          } else {
            a[e] = t;
          }
        });
      }
      return a;
    }
    var R = require.j == 606 ? r.UUD : null;
    function k(e) {
      return e === 0 || e > 0 && e <= 13 || e === 32;
    }
    function x(e) {
      return e[u.oI] > 0;
    }
    function P(e, t) {
      var n = e;
      n[u.dg] = n[u.dg] || {};
      n[u.dg][u.Jg] = n[u.dg][u.Jg] || {};
      n[u.dg][u.Jg][t] = R();
    }
    function F(e) {
      var t = 0;
      if (e != null) {
        var n = typeof e;
        if (n === 'string') {
          t = 1;
        } else {
          if (n === 'number') {
            t = 2;
          } else {
            if (n === 'boolean') {
              t = 3;
            } else {
              if (n === A._1) {
                t = 4;
                if (r.cyL(e)) {
                  t = 4096;
                  if (e[u.oI] > 0) {
                    t |= F(e[0]);
                  }
                } else {
                  if (d.call(e, 'value')) {
                    t = F(e[u.pF]) | 8192;
                  }
                }
              }
            }
          }
        }
      }
      return t;
    }
    function M() {
      return !!r.zS2('chrome');
    }
    function O(e, t, n, r, o, s) {
      function a(e, t, n) {
        try {
          e[t] = n;
        } catch (e) {}
      }
      if (r === undefined) {
        r = false;
      }
      if (o === undefined) {
        o = false;
      }
      var A = new XMLHttpRequest();
      if (r) {
        a(A, h, r);
      }
      if (n) {
        a(A, f, n);
      }
      A.open(e, t, !o);
      if (n) {
        a(A, f, n);
      }
      if (!o && s) {
        a(A, p, s);
      }
      return A;
    }
    function N(e) {
      return e > 0;
    }
  },
  33091: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      H: () => A
    });
    var r = require(269);
    var o = require(90937);
    var s = require(14822);
    var a = require(61739);
    var A = function () {
      function e(e) {
        var t = this;
        var n = {};
        var A = [];
        var c = [];
        function u(e, t) {
          var o;
          var s = n[e];
          if (s) {
            o = s[t];
          }
          if (!o && o !== null) {
            if (r.KgX(e) && r.KgX(t)) {
              if (c[a.oI] > 0) {
                for (var u = 0; u < c[a.oI]; u++) {
                  if (c[u][a.hF](e, t)) {
                    o = {
                      canHandle: true,
                      fieldHandler: c[u]
                    };
                    break;
                  }
                }
              } else {
                if (A[a.oI] === 0) {
                  o = {
                    canHandle: true
                  };
                }
              }
            }
            if (!o && o !== null) {
              o = null;
              for (u = 0; u < A[a.oI]; u++) {
                if (A[u][a.hF](e, t)) {
                  o = {
                    canHandle: true,
                    handler: A[u],
                    fieldHandler: null
                  };
                  break;
                }
              }
            }
            if (!s) {
              s = n[e] = {};
            }
            s[t] = o;
          }
          return o;
        }
        function l(e, t, n, o, A, c) {
          if (e.handler) {
            return e.handler.property(t, n, A, c);
          }
          if (!r.hXl(A[a.QV])) {
            if (!(~o & 4096) || !s.m0(A[a.QV])) {
              return null;
            }
            A[a.pF] = A[a.pF].toString();
          }
          return d(e.fieldHandler, t, n, o, A);
        }
        function g(e, t, n) {
          if (s.yD(n)) {
            return {
              value: n
            };
          } else {
            return null;
          }
        }
        function d(e, n, o, A, c) {
          if (c && e) {
            var u = e.getSanitizer(n, o, A, c[a.QV], c.propertyType);
            if (u) {
              if (A === 4) {
                var l = {};
                var h = c[a.pF];
                r.zav(h, function (t, r) {
                  var A = n + '.' + o;
                  if (s.yD(r)) {
                    var c = g(0, 0, r);
                    if (c = d(e, A, t, s.cq(r), c)) {
                      l[t] = c[a.pF];
                    }
                  }
                });
                c[a.pF] = l;
              } else {
                var f = {
                  path: n,
                  name: o,
                  type: A,
                  prop: c,
                  sanitizer: t
                };
                c = u.call(t, f);
              }
            }
          }
          return c;
        }
        if (e) {
          c.push(e);
        }
        t.clearCache = function () {
          n = {};
        };
        t.addSanitizer = function (e) {
          if (e) {
            if (!r.Nq2(A, e)) {
              A.push(e);
            }
            n = {};
          }
        };
        t.addFieldSanitizer = function (e) {
          if (e) {
            if (!r.Nq2(c, e)) {
              c.push(e);
            }
            n = {};
          }
        };
        t[a.Rl] = function (e) {
          if (e) {
            var t = r.rDm(A, e);
            if (t !== -1) {
              A.splice(t, 1);
              n = {};
            }
            r.Iuo(A, function (t) {
              if (t && t[a.Rl]) {
                t[a.Rl](e);
              }
            });
          }
        };
        t[a.Mr] = function (e) {
          if (e) {
            var t = r.rDm(c, e);
            if (t !== -1) {
              c.splice(t, 1);
              n = {};
            }
            r.Iuo(A, function (t) {
              if (t && t[a.Mr]) {
                t[a.Mr](e);
              }
            });
          }
        };
        t.isEmpty = function () {
          return r.R3R(A) + r.R3R(c) === 0;
        };
        t[a.hF] = function (e, t) {
          var n = u(e, t);
          return !!n && n[a.nw];
        };
        t[a.pF] = function (e, t, n, A) {
          var c = u(e, t);
          if (c && c[a.nw]) {
            if (!c || !c[a.nw]) {
              return null;
            }
            if (c.handler) {
              return c.handler[a.pF](e, t, n, A);
            }
            if (!r.KgX(t) || r.hXl(n) || n === o.m5) {
              return null;
            }
            var d = null;
            var h = s.cq(n);
            if (~h & 8192) {
              if (h !== 1 && h !== 2 && h !== 3 && ~h & 4096) {
                if (h === 4) {
                  d = g(e, t, A ? JSON.stringify(n) : n);
                }
              } else {
                d = g(e, t, n);
              }
            } else {
              var f = h & -8193;
              d = n;
              if (!s.yD(d[a.pF]) || f !== 1 && f !== 2 && f !== 3 && ~f & 4096) {
                return null;
              }
            }
            if (d) {
              return l(c, e, t, h, d, A);
            }
          }
          return null;
        };
        t.property = function (e, t, n, o) {
          var A = u(e, t);
          if (!A || !A[a.nw]) {
            return null;
          }
          if (!r.KgX(t) || r.hXl(n) || !s.yD(n[a.pF])) {
            return null;
          }
          var c = s.cq(n[a.pF]);
          if (c === 0) {
            return null;
          } else {
            return l(A, e, t, c, n, o);
          }
        };
      }
      e.getFieldType = s.cq;
      return e;
    }();
  },
  61739: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Jg: () => g,
      Mr: () => f,
      QV: () => u,
      Rl: () => h,
      Sj: () => s,
      Uw: () => o,
      dg: () => a,
      h4: () => A,
      hF: () => d,
      mE: () => r,
      nw: () => p,
      oI: () => l,
      pF: () => c
    });
    var r = 'initialize';
    var o = 'logger';
    var s = 'indexOf';
    var a = 'timings';
    var A = 'pollInternalLogs';
    var c = 'value';
    var u = 'kind';
    var l = 'length';
    var g = 'processTelemetryStart';
    var d = 'handleField';
    var h = 'rmSanitizer';
    var f = 'rmFieldSanitizer';
    var p = 'canHandle';
  },
  2110: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      RI: () => o,
      ev: () => s,
      z3: () => r
    });
    var r = 'REAL_TIME';
    var o = 'NEAR_REAL_TIME';
    var s = 'BEST_EFFORT';
  },
  76838: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      BE_PROFILE: () => r.ev,
      NRT_PROFILE: () => r.RI,
      PostChannel: () => o.s,
      RT_PROFILE: () => r.z3
    });
    if (require.j == 606) {
      var r = require(2110);
    }
    if (require.j == 606) {
      var o = require(25568);
    }
  },
  25568: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      s: () => bt
    });
    var r = require(10659);
    var o = require(68279);
    var s = require(14822);
    var a = require(269);
    var A = require(28156);
    var c = require(56149);
    var u = require(24276);
    var l = require(4296);
    var g = require(72317);
    var d = require(13673);
    var h = require(13662);
    var f = require(23775);
    var p = require(98257);
    var m = require(8205);
    var I = require(2110);
    var E = '';
    var y = 'drop';
    var w = 'send';
    var _ = 'requeue';
    var v = 'rspFail';
    var b = 'no-cache, no-store';
    var B = 'application/x-json-stream';
    var Q = 'cache-control';
    var D = 'content-type';
    var S = 'kill-tokens';
    var T = 'kill-duration';
    var R = 'time-delta-millis';
    var k = 'client-version';
    var x = 'client-id';
    var P = 'time-delta-to-apply-millis';
    var F = 'upload-time';
    var M = 'apikey';
    var O = 'AuthMsaDeviceTicket';
    var N = 'WebAuthToken';
    var L = 'AuthXToken';
    var K = 'msfpc';
    var U = 'trace';
    var j = 'user';
    var q = 'allowRequestSending';
    var G = 'firstRequestSent';
    var Y = 'shouldAddClockSkewHeaders';
    var H = 'getClockSkewHeaderValue';
    var J = 'setClockSkew';
    var z = 'length';
    var $ = 'concat';
    var W = 'iKey';
    var V = 'count';
    var X = 'events';
    var Z = 'push';
    var ee = 'split';
    var te = 'splice';
    var ne = 'toLowerCase';
    var re = 'hdrs';
    var oe = 'useHdrs';
    var ie = 'initialize';
    var se = 'setTimeoutOverride';
    var ae = 'clearTimeoutOverride';
    var Ae = 'overrideEndpointUrl';
    var ce = 'avoidOptions';
    var ue = 'enableCompoundKey';
    var le = 'disableXhrSync';
    var ge = 'disableFetchKeepAlive';
    var de = 'useSendBeacon';
    var he = 'fetchCredentials';
    var fe = 'alwaysUseXhrOverride';
    var pe = 'serializeOfflineEvt';
    var Ce = 'getOfflineRequestDetails';
    var me = 'createPayload';
    var Ie = 'createOneDSPayload';
    var Ee = 'payloadBlob';
    var ye = 'headers';
    var we = '_thePayload';
    var _e = 'urlString';
    var ve = 'batches';
    var be = 'sendType';
    var Be = 'addHeader';
    var Qe = 'canSendRequest';
    var De = 'sendQueuedRequests';
    var Se = 'isCompletelyIdle';
    var Te = 'setUnloading';
    var Re = 'sendSynchronousBatch';
    var ke = '_transport';
    var xe = 'getWParam';
    var Pe = 'isBeacon';
    var Fe = 'timings';
    var Me = 'isTeardown';
    var Oe = 'isSync';
    var Ne = 'data';
    var Le = '_sendReason';
    var Ke = 'setKillSwitchTenants';
    var Ue = '_backOffTransmission';
    var je = 'identifier';
    var qe = 'eventsLimitInMem';
    var Ge = 'autoFlushEventsLimit';
    var Ye = 'baseData';
    var He = 'sendAttempt';
    var Je = 'latency';
    var ze = 'sync';
    function $e(e) {
      var t = (e.ext || {}).intweb;
      if (t && s.yD(t[K])) {
        return t[K];
      } else {
        return null;
      }
    }
    function We(e) {
      for (var t = null, n = 0; t === null && n < e[z]; n++) {
        t = $e(e[n]);
      }
      return t;
    }
    var Ve = function () {
      function e(t, n) {
        var r = n ? [][$](n) : [];
        var o = this;
        var s = We(r);
        o[W] = function () {
          return t;
        };
        o.Msfpc = function () {
          return s || E;
        };
        o[V] = function () {
          return r[z];
        };
        o[X] = function () {
          return r;
        };
        o.addEvent = function (e) {
          return !!e && (r[Z](e), s ||= $e(e), true);
        };
        o[ee] = function (n, o) {
          var A;
          if (n < r[z]) {
            var c = r[z] - n;
            if (!a.hXl(o)) {
              c = o < c ? o : c;
            }
            A = r[te](n, c);
            s = We(r);
          }
          return new e(t, A);
        };
      }
      e.create = function (t, n) {
        return new e(t, n);
      };
      return e;
    }();
    var Xe = require(7292);
    var Ze = require(90856);
    var et = require(45664);
    var tt = function () {
      function e() {
        var t = true;
        var n = true;
        var r = true;
        var s = 'use-collector-delta';
        var a = false;
        o.A(e, this, function (e) {
          e[q] = function () {
            return t;
          };
          e[G] = function () {
            if (r) {
              r = false;
              if (!a) {
                t = false;
              }
            }
          };
          e[Y] = function () {
            return n;
          };
          e[H] = function () {
            return s;
          };
          e[J] = function (e) {
            if (!a) {
              if (e) {
                s = e;
                n = true;
                a = true;
              } else {
                n = false;
              }
              t = true;
            }
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    var nt = function () {
      function e() {
        var t = {};
        o.A(e, this, function (e) {
          e[Ke] = function (e, n) {
            if (e && n) {
              try {
                A = e[ee](',');
                c = [];
                if (A) {
                  a.Iuo(A, function (e) {
                    c[Z](a.EHq(e));
                  });
                }
                var r = c;
                if (n === 'this-request-only') {
                  return r;
                }
                var o = parseInt(n, 10) * 1000;
                for (var s = 0; s < r[z]; ++s) {
                  t[r[s]] = a.f0d() + o;
                }
              } catch (e) {
                return [];
              }
            }
            var A;
            var c;
            return [];
          };
          e.isTenantKilled = function (e) {
            var n = t;
            var r = a.EHq(e);
            return n[r] !== undefined && n[r] > a.f0d() || (delete n[r], false);
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    function rt(e) {
      var t;
      var n = Math.floor(Math.random() * 1200) + 2400;
      t = Math.pow(2, e) * n;
      return Math.min(t, 600000);
    }
    var ot;
    var it = 2000000;
    var st = Math.min(it, 65000);
    var at = 'metadata';
    var At = 'f';
    var ct = /\./;
    var ut = function () {
      function e(t, n, r, c, u, l) {
        var g = 'data';
        var d = 'baseData';
        var h = !!c;
        var f = true;
        var p = n;
        var m = {};
        var I = !!l;
        var y = u || s.Go;
        o.A(e, this, function (e) {
          function n(e, t, o, A, c, u, l) {
            a.zav(e, function (e, g) {
              var d = null;
              if (g || s.yD(g)) {
                var f = o;
                var I = e;
                var E = c;
                var y = t;
                if (h && !A && ct.test(e)) {
                  var w = e.split('.');
                  var _ = w.length;
                  if (_ > 1) {
                    if (E) {
                      E = E.slice();
                    }
                    for (var v = 0; v < _ - 1; v++) {
                      var b = w[v];
                      y = y[b] = y[b] || {};
                      f += `.${b}`;
                      if (E) {
                        E.push(b);
                      }
                    }
                    I = w[_ - 1];
                  }
                }
                var B = A && function (e) {
                  var t = m[e];
                  if (t === undefined) {
                    if (e.length >= 7) {
                      t = a.tGl(e, 'ext.metadata') || a.tGl(e, 'ext.web');
                    }
                    m[e] = t;
                  }
                  return t;
                }(f);
                if (d = !B && p && p.handleField(f, I) ? p.value(f, I, g, r) : s.TC(I, g, r)) {
                  var Q = d.value;
                  y[I] = Q;
                  if (u) {
                    u(E, I, d);
                  }
                  if (l && typeof Q == 'object' && !a.cyL(Q)) {
                    var D = E;
                    if (D) {
                      (D = D.slice()).push(I);
                    }
                    n(g, Q, f + '.' + I, A, D, u, l);
                  }
                }
              }
            });
          }
          e.createPayload = function (e, t, n, r, o, s) {
            return {
              apiKeys: [],
              payloadBlob: E,
              overflow: null,
              sizeExceed: [],
              failedEvts: [],
              batches: [],
              numEvents: 0,
              retryCnt: e,
              isTeardown: t,
              isSync: n,
              isBeacon: r,
              sendType: s,
              sendReason: o
            };
          };
          e.appendPayload = function (n, r, o) {
            var s = n && r && !n.overflow;
            if (s) {
              A.r2(t, function () {
                return 'Serializer:appendPayload';
              }, function () {
                for (var t = r.events(), s = n.payloadBlob, A = n.numEvents, c = false, u = [], l = [], g = n.isBeacon, d = g ? 65000 : 3984588, h = g ? st : it, f = 0, p = 0; f < t.length;) {
                  var m = t[f];
                  if (m) {
                    if (A >= o) {
                      n.overflow = r.split(f);
                      break;
                    }
                    var I = e.getEventBlob(m);
                    if (I && I.length <= h) {
                      var E = I.length;
                      if (s.length + E > d) {
                        n.overflow = r.split(f);
                        break;
                      }
                      if (s) {
                        s += '\n';
                      }
                      s += I;
                      if (++p > 20) {
                        a.hKY(s, 0, 1);
                        p = 0;
                      }
                      c = true;
                      A++;
                    } else {
                      if (I) {
                        u.push(m);
                      } else {
                        l.push(m);
                      }
                      t.splice(f, 1);
                      f--;
                    }
                  }
                  f++;
                }
                if (u.length > 0) {
                  n.sizeExceed.push(Ve.create(r.iKey(), u));
                }
                if (l.length > 0) {
                  n.failedEvts.push(Ve.create(r.iKey(), l));
                }
                if (c) {
                  n.batches.push(r);
                  n.payloadBlob = s;
                  n.numEvents = A;
                  var y = r.iKey();
                  if (a.rDm(n.apiKeys, y) === -1) {
                    n.apiKeys.push(y);
                  }
                }
              }, function () {
                return {
                  payload: n,
                  theBatch: {
                    iKey: r.iKey(),
                    evts: r.events()
                  },
                  max: o
                };
              });
            }
            return s;
          };
          e.getEventBlob = function (e) {
            try {
              return A.r2(t, function () {
                return 'Serializer.getEventBlob';
              }, function () {
                var t = {
                  name: e.name,
                  time: e.time,
                  ver: e.ver
                };
                t.iKey = `o:${s.EO(e.iKey)}`;
                var r;
                var o = {};
                if (!I) {
                  r = function (e, t, n) {
                    (function (e, t, n, r, o) {
                      if (o && t) {
                        var s = e(o.value, o.kind, o.propertyType);
                        if (s > -1) {
                          var A = t[at];
                          if (!A) {
                            A = t[at] = {
                              f: {}
                            };
                          }
                          var c = A[At];
                          if (!c) {
                            c = A[At] = {};
                          }
                          if (n) {
                            for (var u = 0; u < n.length; u++) {
                              var l = n[u];
                              if (!c[l]) {
                                c[l] = {
                                  f: {}
                                };
                              }
                              var g = c[l][At];
                              if (!g) {
                                g = c[l][At] = {};
                              }
                              c = g;
                            }
                          }
                          c = c[r] = {};
                          if (a.cyL(o.value)) {
                            c.a = {
                              t: s
                            };
                          } else {
                            c.t = s;
                          }
                        }
                      }
                    })(y, o, e, t, n);
                  };
                }
                var A = e.ext;
                if (A) {
                  t.ext = o;
                  a.zav(A, function (e, t) {
                    n(t, o[e] = {}, `ext.${e}`, true, null, null, true);
                  });
                }
                var c = t[g] = {};
                c.baseType = e.baseType;
                var u = c[d] = {};
                n(e.baseData, u, d, false, [d], r, f);
                n(e.data, c, g, false, [], r, f);
                return JSON.stringify(t);
              }, function () {
                return {
                  item: e
                };
              });
            } catch (e) {
              return null;
            }
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    function lt(e, t) {
      return {
        set: function (n, r) {
          var o = [];
          for (var s = 2; s < arguments.length; s++) {
            o[s - 2] = arguments[s];
          }
          return a.vKV([e, t], n, r, o);
        }
      };
    }
    var gt = 'sendAttempt';
    var dt = `?cors=true&${D[ne]()}=${B}`;
    (ot = {})[1] = _;
    ot[100] = _;
    ot[200] = 'sent';
    ot[8004] = y;
    ot[8003] = y;
    var ht = ot;
    var ft = {};
    var pt = {};
    function Ct(e, t, n) {
      ft[e] = t;
      if (n !== false) {
        pt[t] = e;
      }
    }
    function mt(e, t) {
      var n = false;
      if (e && t) {
        var r = a.cGk(e);
        if (r && r[z] > 0) {
          var o = t[ne]();
          for (var s = 0; s < r[z]; s++) {
            var A = r[s];
            if (A && a.v0u(t, A) && A[ne]() === o) {
              n = true;
              break;
            }
          }
        }
      }
      return n;
    }
    function It(e, t, n, r) {
      if (t && n && n[z] > 0) {
        if (r && ft[t]) {
          e[re][ft[t]] = n;
          e[oe] = true;
        } else {
          e.url += `&${t}=${n}`;
        }
      }
    }
    Ct(O, O, false);
    Ct(k, k);
    Ct(x, 'Client-Id');
    Ct(M, M);
    Ct(P, P);
    Ct(F, F);
    Ct(L, L);
    var Et = function () {
      function e(t, n, r, c) {
        var u;
        var g;
        var h;
        var p;
        var m;
        var I;
        var _;
        var O;
        var N;
        var L;
        var U;
        var j;
        var ne;
        var je;
        var qe;
        var Ge;
        var Ye;
        var He;
        var Je;
        var ze;
        var $e;
        var We;
        var ot;
        var it;
        var st;
        var at;
        var At;
        var ct;
        var ft;
        var Ct;
        var Et;
        var yt;
        var wt = false;
        o.A(e, this, function (e) {
          (function () {
            var e;
            u = null;
            g = new nt();
            h = false;
            p = new tt();
            wt = false;
            m = 0;
            I = null;
            _ = null;
            O = null;
            N = null;
            L = true;
            U = [];
            j = {};
            ne = [];
            je = null;
            qe = false;
            Ge = null;
            Ye = false;
            He = false;
            Je = e;
            ze = e;
            $e = e;
            We = e;
            ot = e;
            it = [];
            st = e;
            at = e;
            At = [];
            ct = false;
            ft = lt();
            Ct = false;
            Et = null;
          })();
          function o(e, t) {
            try {
              return Et && Et.getSenderInst(e, t);
            } catch (e) {}
            return null;
          }
          function _t() {
            try {
              return {
                enableSendPromise: false,
                isOneDs: true,
                disableCredentials: false,
                fetchCredentials: yt,
                disableXhr: false,
                disableBeacon: !wt,
                disableBeaconSync: !wt,
                disableFetchKeepAlive: $e,
                timeWrapper: ft,
                addNoResponse: ot,
                senderOnCompleteCallBack: {
                  xdrOnComplete: vt,
                  fetchOnComplete: bt,
                  xhrOnComplete: Bt,
                  beaconOnRetry: Dt
                }
              };
            } catch (e) {}
            return null;
          }
          function vt(e, t, n) {
            var r = d.Lo(e);
            Qt(t, 200, {}, r);
            Kt(r);
          }
          function bt(e, t, n, r) {
            var o = {};
            var s = e[ye];
            if (s) {
              s.forEach(function (e, t) {
                o[t] = e;
              });
            }
            (function (e, n, r) {
              Qt(t, e, n, r);
              Kt(r);
            })(e.status, o, n || E);
          }
          function Bt(e, t, n) {
            var r = d.Lo(e);
            Qt(t, e.status, d.w3(e, true), r);
            Kt(r);
          }
          function Qt(e, t, n, r) {
            try {
              e(t, n, r);
            } catch (e) {
              f.ZP(_, 2, 518, a.mmD(e));
            }
          }
          function Dt(e, t, n) {
            var r = 200;
            var o = e[we];
            var s = e[_e] + (ot ? '&NoResponseBody=true' : E);
            try {
              var A = a.w3n();
              if (o) {
                var c = !!N.getPlugin('LocalStorage');
                var u = [];
                var l = [];
                a.Iuo(o[ve], function (e) {
                  if (u && e && e[V]() > 0) {
                    for (var t = e[X](), n = 0; n < t[z]; n++) {
                      if (!A.sendBeacon(s, je.getEventBlob(t[n]))) {
                        u[Z](e[ee](n));
                        break;
                      }
                      l[Z](e[n]);
                    }
                  } else {
                    u[Z](e[ee](0));
                  }
                });
                if (l[z] > 0) {
                  o.sentEvts = l;
                }
                if (!c) {
                  Ut(u, 8003, o[be], true);
                }
              } else {
                r = 0;
              }
            } catch (e) {
              f.OG(_, `Failed to send telemetry using sendBeacon API. Ex:${a.mmD(e)}`);
              r = 0;
            } finally {
              Qt(t, r, {}, E);
            }
          }
          function St(e) {
            return e === 2 || e === 3;
          }
          function Tt(e) {
            if (Ye && St(e)) {
              e = 2;
            }
            return e;
          }
          function Rt() {
            return !h && m < n;
          }
          function kt() {
            var e = ne;
            ne = [];
            return e;
          }
          function xt(e, t, n) {
            var r = false;
            if (e && e[z] > 0 && !h && O[t] && je) {
              r = t !== 0 || Rt() && (n > 0 || p[q]());
            }
            return r;
          }
          function Pt(e) {
            var t = {};
            if (e) {
              a.Iuo(e, function (e, n) {
                t[n] = {
                  iKey: e[W](),
                  evts: e[X]()
                };
              });
            }
            return t;
          }
          function Ft(e, n, r, o, c) {
            if (e && e[z] !== 0) {
              if (h) {
                Ut(e, 1, o);
              } else {
                o = Tt(o);
                try {
                  var u = e;
                  var l = o !== 0;
                  A.r2(N, function () {
                    return 'HttpManager:_sendBatches';
                  }, function (a) {
                    if (a) {
                      e = e.slice(0);
                    }
                    var A = [];
                    for (var u = null, d = s.WB(), h = O[o] || (l ? O[1] : O[0]), f = h && h[ke], p = We && (Ye || St(o) || f === 3 || h._isSync && f === 2); xt(e, o, n);) {
                      var m = e.shift();
                      if (m && m[V]() > 0) {
                        if (g.isTenantKilled(m[W]())) {
                          A[Z](m);
                        } else {
                          u = u || je[me](n, r, l, p, c, o);
                          if (je.appendPayload(u, m, t)) {
                            if (u.overflow !== null) {
                              e = [u.overflow][$](e);
                              u.overflow = null;
                              Nt(u, d, s.WB(), c);
                              d = s.WB();
                              u = null;
                            }
                          } else {
                            Nt(u, d, s.WB(), c);
                            d = s.WB();
                            e = [m][$](e);
                            u = null;
                          }
                        }
                      }
                    }
                    if (u) {
                      Nt(u, d, s.WB(), c);
                    }
                    if (e[z] > 0) {
                      ne = e[$](ne);
                    }
                    Ut(A, 8004, o);
                  }, function () {
                    return {
                      batches: Pt(u),
                      retryCount: n,
                      isTeardown: r,
                      isSynchronous: l,
                      sendReason: c,
                      useSendBeacon: St(o),
                      sendType: o
                    };
                  }, !l);
                } catch (e) {
                  f.ZP(_, 2, 48, `Unexpected Exception sending batch: ${a.mmD(e)}`);
                }
              }
            }
          }
          function Mt(e, t) {
            var n = {
              url: u,
              hdrs: {},
              useHdrs: false
            };
            if (t) {
              n[re] = s.X$(n[re], j);
              n.useHdrs = a.cGk(n.hdrs)[z] > 0;
            } else {
              a.zav(j, function (e, t) {
                if (pt[e]) {
                  It(n, pt[e], t, false);
                } else {
                  n[re][e] = t;
                  n[oe] = true;
                }
              });
            }
            It(n, x, 'NO_AUTH', t);
            It(n, k, s.xE, t);
            var r = E;
            a.Iuo(e.apiKeys, function (e) {
              if (r[z] > 0) {
                r += ',';
              }
              r += e;
            });
            It(n, M, r, t);
            It(n, F, a.f0d().toString(), t);
            var o = function (e) {
              for (var t = 0; t < e.batches[z]; t++) {
                var n = e[ve][t].Msfpc();
                if (n) {
                  return encodeURIComponent(n);
                }
              }
              return E;
            }(e);
            if (s.yD(o)) {
              n.url += `&ext.intweb.msfpc=${o}`;
            }
            if (p[Y]()) {
              It(n, P, p[H](), t);
            }
            if (N[xe]) {
              var A = N[xe]();
              if (A >= 0) {
                n.url += `&w=${A}`;
              }
            }
            for (var c = 0; c < U[z]; c++) {
              n.url += `&${U[c].name}=${U[c].value}`;
            }
            return n;
          }
          function Ot(e, t, n) {
            e[t] = e[t] || {};
            e[t][I.identifier] = n;
          }
          function Nt(t, n, o, c) {
            if (t && t.payloadBlob && t.payloadBlob[z] > 0) {
              var u = !!st;
              var l = O[t.sendType];
              if (!St(t[be]) && t[Pe] && t.sendReason === 2) {
                l = O[2] || O[3] || l;
              }
              var d = He;
              if (t.isBeacon || l[ke] === 3) {
                d = false;
              }
              var h = Mt(t, d);
              d = d || h[oe];
              var E = s.WB();
              A.r2(N, function () {
                return 'HttpManager:_doPayloadSend';
              }, function () {
                for (var y = 0; y < t.batches[z]; y++) {
                  for (var w = t[ve][y][X](), v = 0; v < w[z]; v++) {
                    var k = w[v];
                    if (qe) {
                      var x = k[Fe] = k[Fe] || {};
                      Ot(x, 'sendEventStart', E);
                      Ot(x, 'serializationStart', n);
                      Ot(x, 'serializationCompleted', o);
                    }
                    if (k[gt] > 0) {
                      k[gt]++;
                    } else {
                      k[gt] = 1;
                    }
                  }
                }
                Ut(t[ve], 1000 + (c || 0), t[be], true);
                var P = {
                  data: t[Ee],
                  urlString: h.url,
                  headers: h[re],
                  _thePayload: t,
                  _sendReason: c,
                  timeout: Je,
                  disableXhrSync: ze,
                  disableFetchKeepAlive: $e
                };
                if (d) {
                  if (!mt(P[ye], Q)) {
                    P[ye][Q] = b;
                  }
                  if (!mt(P[ye], D)) {
                    P[ye][D] = B;
                  }
                }
                var F = null;
                if (l) {
                  F = function (n) {
                    p[G]();
                    function o(n, o) {
                      (function (t, n, o, A) {
                        var c = 9000;
                        var u = null;
                        var l = false;
                        var d = false;
                        try {
                          var h = true;
                          if (typeof t !== et.bA) {
                            if (n) {
                              p[J](n[R]);
                              var f = n[T] || n['kill-duration-seconds'];
                              a.Iuo(g[Ke](n[S], f), function (e) {
                                a.Iuo(o[ve], function (t) {
                                  if (t[W]() === e) {
                                    u = u || [];
                                    var n = t[ee](0);
                                    o.numEvents -= n[V]();
                                    u[Z](n);
                                  }
                                });
                              });
                            }
                            if (t == 200 || t == 204) {
                              c = 200;
                              return;
                            }
                            if ((y = t) >= 300 && y < 500 && y != 429 || y == 501 || y == 505 || o.numEvents <= 0) {
                              h = false;
                            }
                            c = 9000 + t % 1000;
                          }
                          if (h) {
                            c = 100;
                            var E = o.retryCnt;
                            if (o[be] === 0) {
                              if (E < r) {
                                l = true;
                                Lt(function () {
                                  if (o[be] === 0) {
                                    m--;
                                  }
                                  Ft(o[ve], E + 1, o[Me], Ye ? 2 : o[be], 5);
                                }, Ye, rt(E));
                              } else {
                                d = true;
                                if (Ye) {
                                  c = 8001;
                                }
                              }
                            }
                          }
                        } finally {
                          if (!l) {
                            p[J]();
                            (function (t, n, r, o) {
                              try {
                                if (o) {
                                  I[Ue]();
                                }
                                var A = t[ve];
                                if (n === 200) {
                                  A = t.sentEvts || t[ve];
                                  if (!o && !t[Oe]) {
                                    I._clearBackOff();
                                  }
                                  (function (e) {
                                    if (qe) {
                                      var t = s.WB();
                                      a.Iuo(e, function (e) {
                                        if (e && e[V]() > 0) {
                                          (function (e, t) {
                                            if (qe) {
                                              a.Iuo(e, function (e) {
                                                Ot(e[Fe] = e[Fe] || {}, 'sendEventCompleted', t);
                                              });
                                            }
                                          })(e[X](), t);
                                        }
                                      });
                                    }
                                  })(A);
                                }
                                Ut(A, n, t[be], true);
                              } finally {
                                if (t[be] === 0) {
                                  m--;
                                  if (r !== 5) {
                                    e.sendQueuedRequests(t[be], r);
                                  }
                                }
                              }
                            })(o, c, A, d);
                          }
                          Ut(u, 8004, o[be]);
                        }
                        var y;
                      })(n, o, t, c);
                    }
                    var A = t[Me] || t[Oe];
                    try {
                      l.sendPOST(n, o, A);
                      if (at) {
                        at(P, n, A, t[Pe]);
                      }
                    } catch (e) {
                      f.OG(_, `Unexpected exception sending payload. Ex:${a.mmD(e)}`);
                      Qt(o, 0, {});
                    }
                  };
                }
                A.r2(N, function () {
                  return 'HttpManager:_doPayloadSend.sender';
                }, function () {
                  if (F) {
                    if (t[be] === 0) {
                      m++;
                    }
                    if (u && !t.isBeacon && l[ke] !== 3) {
                      var e = {
                        data: P[Ne],
                        urlString: P[_e],
                        headers: s.X$({}, P[ye]),
                        timeout: P.timeout,
                        disableXhrSync: P[le],
                        disableFetchKeepAlive: P[ge]
                      };
                      var n = false;
                      A.r2(N, function () {
                        return 'HttpManager:_doPayloadSend.sendHook';
                      }, function () {
                        try {
                          st(e, function (e) {
                            n = true;
                            if (!L && !e[we]) {
                              e[we] = e[we] || P[we];
                              e[Le] = e[Le] || P[Le];
                            }
                            F(e);
                          }, t.isSync || t[Me]);
                        } catch (e) {
                          if (!n) {
                            F(P);
                          }
                        }
                      });
                    } else {
                      F(P);
                    }
                  }
                });
              }, function () {
                return {
                  thePayload: t,
                  serializationStart: n,
                  serializationCompleted: o,
                  sendReason: c
                };
              }, t[Oe]);
            }
            if (t.sizeExceed && t.sizeExceed[z] > 0) {
              Ut(t.sizeExceed, 8003, t[be]);
            }
            if (t.failedEvts && t.failedEvts[z] > 0) {
              Ut(t.failedEvts, 8002, t[be]);
            }
          }
          function Lt(e, t, n) {
            if (t) {
              e();
            } else {
              ft.set(e, n);
            }
          }
          function Kt(e) {
            var t = At;
            try {
              for (var n = 0; n < t[z]; n++) {
                try {
                  t[n](e);
                } catch (e) {
                  f.ZP(_, 1, 519, `Response handler failed: ${e}`);
                }
              }
              if (e) {
                var r = JSON.parse(e);
                if (s.yD(r.webResult) && s.yD(r.webResult[K])) {
                  Ge.set('MSFPC', r.webResult[K], 31536000);
                }
              }
            } catch (e) {}
          }
          function Ut(e, t, n, r) {
            if (e && e[z] > 0 && c) {
              var o = c[function (e) {
                var t = ht[e];
                if (!s.yD(t)) {
                  t = 'oth';
                  if (e >= 9000 && e <= 9999) {
                    t = v;
                  } else {
                    if (e >= 8000 && e <= 8999) {
                      t = y;
                    } else {
                      if (e >= 1000 && e <= 1999) {
                        t = w;
                      }
                    }
                  }
                }
                return t;
              }(t)];
              if (o) {
                var a = n !== 0;
                A.r2(N, function () {
                  return 'HttpManager:_sendBatchesNotification';
                }, function () {
                  Lt(function () {
                    try {
                      o.call(c, e, t, a, n);
                    } catch (e) {
                      f.ZP(_, 1, 74, `send request notification failed: ${e}`);
                    }
                  }, r || a, 0);
                }, function () {
                  return {
                    batches: Pt(e),
                    reason: t,
                    isSync: a,
                    sendSync: r,
                    sendType: n
                  };
                }, !a);
              }
            }
          }
          e[ie] = function (e, t, n) {
            if (!ct) {
              N = t;
              Ge = t.getCookieMgr();
              _ = (I = n).diagLog();
              a.Yny(it, l.a(e, function (e) {
                var r;
                var A = e.cfg;
                var c = e.cfg.extensionConfig[n.identifier];
                ft = lt(c[se], c[ae]);
                if (s.yD(A.anonCookieName)) {
                  (function (e, t, n) {
                    for (var r = 0; r < e[z]; r++) {
                      if (e[r].name === t) {
                        e[r].value = n;
                        return;
                      }
                    }
                    e[Z]({
                      name: t,
                      value: n
                    });
                  })(U, 'anoncknm', A.anonCookieName);
                } else {
                  (function (e, t) {
                    for (var n = 0; n < e[z]; n++) {
                      if (e[n].name === t) {
                        e[te](n, 1);
                        return;
                      }
                    }
                  })(U, 'anoncknm');
                }
                st = c.payloadPreprocessor;
                at = c.payloadListener;
                var l = c.httpXHROverride;
                var g = c[Ae] ? c[Ae] : A.endpointUrl;
                u = g + dt;
                He = !!a.b07(c[ce]) || !c[ce];
                qe = !c.disableEventTimings;
                var h = c.valueSanitizer;
                var p = c.stringifyObjects;
                var m = !!A[ue];
                if (!a.b07(c[ue])) {
                  m = !!c[ue];
                }
                Je = c.xhrTimeout;
                ze = !!c[le];
                $e = !!c[ge];
                ot = c.addNoResponse !== false;
                Ct = !!c.excludeCsMetaData;
                if (t.getPlugin('LocalStorage')) {
                  $e = true;
                }
                wt = !Xe.lV();
                je = new ut(N, h, p, m, s.Go, Ct);
                if (!a.hXl(c[de])) {
                  wt = !!c[de];
                }
                if (c[he]) {
                  yt = c[he];
                }
                var I = _t();
                if (Et) {
                  Et.SetConfig(I);
                } else {
                  (Et = new Ze.v())[ie](I, _);
                }
                var E = l;
                var y = c[fe] ? l : null;
                var w = c[fe] ? l : null;
                var v = [3, 2];
                if (!l) {
                  L = false;
                  var b = [];
                  if (Xe.lV()) {
                    b = [2, 1];
                    v = [2, 1, 3];
                  } else {
                    b = [1, 2, 3];
                  }
                  if (!(l = o(b = d.jL(b, c.transports), false))) {
                    f.OG(_, 'No available transport to send events');
                  }
                  E = o(b, true);
                }
                if (!y) {
                  y = o(v = d.jL(v, c.unloadTransports), true);
                }
                We = !L && (wt && Xe.Uf() || !$e && Xe.R7(true));
                (r = {})[0] = l;
                r[1] = E || o([1, 2, 3], true);
                r[2] = y || E || o([1], true);
                r[3] = w || o([2, 3], true) || E || o([1], true);
                O = r;
              }));
              ct = true;
            }
          };
          e.addResponseHandler = function (e) {
            At[Z](e);
            return {
              rm: function () {
                var t = At.indexOf(e);
                if (t >= 0) {
                  At[te](t, 1);
                }
              }
            };
          };
          e[pe] = function (e) {
            try {
              if (je) {
                return je.getEventBlob(e);
              }
            } catch (e) {}
            return E;
          };
          e[Ce] = function () {
            try {
              return Mt(je && je[me](0, false, false, false, 1, 0), He);
            } catch (e) {}
            return null;
          };
          e[Ie] = function (e, n) {
            try {
              var r = [];
              a.Iuo(e, function (e) {
                if (n) {
                  e = d.hW(e);
                }
                var t = Ve.create(e[W], [e]);
                r[Z](t);
              });
              for (var o = null; r[z] > 0 && je;) {
                var s = r.shift();
                if (s && s[V]() > 0) {
                  o = o || je[me](0, false, false, false, 1, 0);
                  je.appendPayload(o, s, t);
                }
              }
              var A = Mt(o, He);
              var c = {
                data: o[Ee],
                urlString: A.url,
                headers: A[re],
                timeout: Je,
                disableXhrSync: ze,
                disableFetchKeepAlive: $e
              };
              if (He) {
                if (!mt(c[ye], Q)) {
                  c[ye][Q] = b;
                }
                if (!mt(c[ye], D)) {
                  c[ye][D] = B;
                }
              }
              return c;
            } catch (e) {}
            return null;
          };
          e._getDbgPlgTargets = function () {
            return [O[0], g, je, O, _t()];
          };
          e[Be] = function (e, t) {
            j[e] = t;
          };
          e.removeHeader = function (e) {
            delete j[e];
          };
          e[Qe] = function () {
            return Rt() && p[q]();
          };
          e[De] = function (e, t) {
            if (a.b07(e)) {
              e = 0;
            }
            if (Ye) {
              e = Tt(e);
              t = 2;
            }
            if (xt(ne, e, 0)) {
              Ft(kt(), 0, false, e, t || 0);
            }
          };
          e[Se] = function () {
            return !h && m === 0 && ne[z] === 0;
          };
          e[Te] = function (e) {
            Ye = e;
          };
          e.addBatch = function (e) {
            if (e && e[V]() > 0) {
              if (g.isTenantKilled(e[W]())) {
                return false;
              }
              ne[Z](e);
            }
            return true;
          };
          e.teardown = function () {
            if (ne[z] > 0) {
              Ft(kt(), 0, true, 2, 2);
            }
            a.Iuo(it, function (e) {
              if (e && e.rm) {
                e.rm();
              }
            });
            it = [];
          };
          e.pause = function () {
            h = true;
          };
          e.resume = function () {
            h = false;
            e[De](0, 4);
          };
          e[Re] = function (e, t, n) {
            if (e && e[V]() > 0) {
              if (a.hXl(t)) {
                t = 1;
              }
              if (Ye) {
                t = Tt(t);
                n = 2;
              }
              Ft([e], 0, false, t, n || 0);
            }
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    var yt = 10000;
    var wt = 'eventsDiscarded';
    var _t = undefined;
    var vt = a.ZHX({
      eventsLimitInMem: {
        isVal: s.ei,
        v: yt
      },
      immediateEventLimit: {
        isVal: s.ei,
        v: 500
      },
      autoFlushEventsLimit: {
        isVal: s.ei,
        v: 0
      },
      disableAutoBatchFlushLimit: false,
      httpXHROverride: {
        isVal: function (e) {
          return e && e.sendPOST;
        },
        v: _t
      },
      overrideInstrumentationKey: _t,
      overrideEndpointUrl: _t,
      disableTelemetry: false,
      ignoreMc1Ms0CookieProcessing: false,
      setTimeoutOverride: _t,
      clearTimeoutOverride: _t,
      payloadPreprocessor: _t,
      payloadListener: _t,
      disableEventTimings: _t,
      valueSanitizer: _t,
      stringifyObjects: _t,
      enableCompoundKey: _t,
      disableOptimizeObj: false,
      fetchCredentials: _t,
      transports: _t,
      unloadTransports: _t,
      useSendBeacon: _t,
      disableFetchKeepAlive: _t,
      avoidOptions: false,
      xhrTimeout: _t,
      disableXhrSync: _t,
      alwaysUseXhrOverride: false,
      maxEventRetryAttempts: {
        isVal: a.EtT,
        v: 6
      },
      maxUnloadEventRetryAttempts: {
        isVal: a.EtT,
        v: 2
      },
      addNoResponse: _t,
      excludeCsMetaData: _t
    });
    var bt = function (e) {
      function t() {
        var n;
        var r = e.call(this) || this;
        r.identifier = 'PostChannel';
        r.priority = 1011;
        r.version = '4.3.2';
        var p;
        var E;
        var y;
        var w;
        var _;
        var v;
        var b;
        var B;
        var Q;
        var D;
        var S;
        var T;
        var R;
        var k;
        var x;
        var P;
        var F;
        var M;
        var L;
        var K;
        var q;
        var G;
        var Y;
        var H;
        var J;
        var ne = false;
        var re = [];
        var oe = false;
        var Ae = 0;
        var ce = 0;
        var ue = {};
        var le = I.z3;
        o.A(t, r, function (e, t) {
          function r() {
            c.Ds(null, M);
            c.sq(null, M);
            c.vF(null, M);
          }
          function o(e) {
            var t = '';
            if (e && e[z]) {
              a.Iuo(e, function (e) {
                if (t) {
                  t += '\n';
                }
                t += e;
              });
            }
            return t;
          }
          function ge(e) {
            var t = '';
            try {
              fe(e);
              t = B[pe](e);
            } catch (e) {}
            return t;
          }
          function de(e) {
            if ((e || a.zkX().event).type !== 'beforeunload') {
              x = true;
              B[Te](x);
            }
            Pe(2, 2);
          }
          function he(e) {
            x = false;
            B[Te](x);
          }
          function fe(e) {
            if (e.ext && e.ext[U]) {
              delete e.ext[U];
            }
            if (e.ext && e.ext[j] && e.ext[j].id) {
              delete e.ext[j].id;
            }
            if (k) {
              e.ext = d.hW(e.ext);
              if (e[Ye]) {
                e[Ye] = d.hW(e[Ye]);
              }
              if (e[Ne]) {
                e[Ne] = d.hW(e[Ne]);
              }
            }
          }
          function me(e, t) {
            if (!e[He]) {
              e[He] = 0;
            }
            if (!e[Je]) {
              e[Je] = 1;
            }
            fe(e);
            if (e[ze]) {
              if (v || oe) {
                e[Je] = 3;
                e[ze] = false;
              } else {
                if (B) {
                  if (k) {
                    e = d.hW(e);
                  }
                  B[Re](Ve.create(e[W], [e]), e[ze] === true ? 1 : e[ze], 3);
                  return;
                }
              }
            }
            var n = e[Je];
            var r = ce;
            var o = y;
            if (n === 4) {
              r = Ae;
              o = E;
            }
            var s = false;
            if (r < o) {
              s = !Oe(e, t);
            } else {
              var a = 1;
              var A = 20;
              if (n === 4) {
                a = 4;
                A = 1;
              }
              s = true;
              if (function (e, t, n, r) {
                while (n <= t) {
                  var o = Fe(e, t, true);
                  if (o && o[V]() > 0) {
                    var s = o[ee](0, r);
                    var a = s[V]();
                    if (a > 0) {
                      if (n === 4) {
                        Ae -= a;
                      } else {
                        ce -= a;
                      }
                      nt(wt, [s], h.x.QueueFull);
                      return true;
                    }
                  }
                  n++;
                }
                Le();
                return false;
              }(e[W], e[Je], a, A)) {
                s = !Oe(e, t);
              }
            }
            if (s) {
              tt(wt, [e], h.x.QueueFull);
            }
          }
          function Ee(e, t, n) {
            var r = Ke(e, t, n);
            B[De](t, n);
            return r;
          }
          function ye() {
            return ce > 0;
          }
          function we() {
            if (T >= 0 && Ke(T, 0, R)) {
              B[De](0, R);
            }
            if (Ae > 0 && !_ && !oe) {
              var e = ue[le][2];
              if (e >= 0) {
                _ = be(function () {
                  _ = null;
                  Ee(4, 0, 1);
                  we();
                }, e);
              }
            }
            var t = ue[le][1];
            if (!w && !p && t >= 0 && !oe) {
              if (ye()) {
                w = be(function () {
                  w = null;
                  Ee(b === 0 ? 3 : 1, 0, 1);
                  b++;
                  b %= 2;
                  we();
                }, t);
              } else {
                b = 0;
              }
            }
          }
          function _e() {
            n = null;
            ne = false;
            re = [];
            p = null;
            oe = false;
            Ae = 0;
            E = 500;
            ce = 0;
            y = yt;
            ue = {};
            le = I.z3;
            w = null;
            _ = null;
            v = 0;
            b = 0;
            Q = {};
            D = 0;
            Y = false;
            S = 0;
            T = -1;
            R = null;
            k = true;
            x = false;
            P = 6;
            F = 2;
            M = null;
            H = null;
            J = false;
            L = lt();
            B = new Et(500, 2, 1, {
              requeue: Ze,
              send: ot,
              sent: it,
              drop: st,
              rspFail: at,
              oth: At
            });
            Xe();
            Q[4] = {
              batches: [],
              iKeyMap: {}
            };
            Q[3] = {
              batches: [],
              iKeyMap: {}
            };
            Q[2] = {
              batches: [],
              iKeyMap: {}
            };
            Q[1] = {
              batches: [],
              iKeyMap: {}
            };
            ct();
          }
          function be(e, t) {
            if (t === 0 && v) {
              t = 1;
            }
            var n = 1000;
            if (v) {
              n = rt(v - 1);
            }
            return L.set(e, t * n);
          }
          function ke() {
            return w !== null && (w.cancel(), w = null, b = 0, true);
          }
          function Pe(e, t) {
            ke();
            if (p) {
              p.cancel();
              p = null;
            }
            if (!oe) {
              Ee(1, e, t);
            }
          }
          function Fe(e, t, n) {
            var r = Q[t];
            if (!r) {
              r = Q[t = 1];
            }
            var o = r.iKeyMap[e];
            if (!o && n) {
              o = Ve.create(e);
              r.batches[Z](o);
              r.iKeyMap[e] = o;
            }
            return o;
          }
          function Me(t, n) {
            if (B[Qe]() && !v) {
              if (D > 0 && ce > D) {
                n = true;
              }
              if (n && p == null) {
                e.flush(t, function () {}, 20);
              }
            }
          }
          function Oe(e, t) {
            if (k) {
              e = d.hW(e);
            }
            var n = e[Je];
            var r = Fe(e[W], n, true);
            return !!r.addEvent(e) && (n !== 4 ? (ce++, t && e[He] === 0 && Me(!e.sync, S > 0 && r[V]() >= S)) : Ae++, true);
          }
          function Le() {
            var e = 0;
            var t = 0;
            var n = function (n) {
              var r = Q[n];
              if (r && r[ve]) {
                a.Iuo(r[ve], function (r) {
                  if (n === 4) {
                    e += r[V]();
                  } else {
                    t += r[V]();
                  }
                });
              }
            };
            for (var r = 1; r <= 4; r++) {
              n(r);
            }
            ce = t;
            Ae = e;
          }
          function Ke(t, n, r) {
            var o = false;
            var s = n === 0;
            if (!s || B[Qe]()) {
              A.r2(e.core, function () {
                return 'PostChannel._queueBatches';
              }, function () {
                var e = [];
                for (var n = 4; n >= t;) {
                  var r = Q[n];
                  if (r && r.batches && r.batches[z] > 0) {
                    a.Iuo(r[ve], function (t) {
                      if (B.addBatch(t)) {
                        o = o || t && t[V]() > 0;
                      } else {
                        e = e[$](t[X]());
                      }
                      if (n === 4) {
                        Ae -= t[V]();
                      } else {
                        ce -= t[V]();
                      }
                    });
                    r[ve] = [];
                    r.iKeyMap = {};
                  }
                  n--;
                }
                if (e[z] > 0) {
                  tt(wt, e, h.x.KillSwitch);
                }
                if (o && T >= t) {
                  T = -1;
                  R = 0;
                }
              }, function () {
                return {
                  latency: t,
                  sendType: n,
                  sendReason: r
                };
              }, !s);
            } else {
              T = T >= 0 ? Math.min(T, t) : t;
              R = Math.max(R, r);
            }
            return o;
          }
          function $e(e, t) {
            Ee(1, 0, t);
            Le();
            We(function () {
              if (e) {
                e();
              }
              if (re[z] > 0) {
                p = be(function () {
                  p = null;
                  $e(re.shift(), t);
                }, 0);
              } else {
                p = null;
                we();
              }
            });
          }
          function We(e) {
            if (B[Se]()) {
              e();
            } else {
              p = be(function () {
                p = null;
                We(e);
              }, 0.25);
            }
          }
          function Xe() {
            (ue = {})[I.z3] = [2, 1, 0];
            ue[I.RI] = [6, 3, 0];
            ue[I.ev] = [18, 9, 0];
          }
          function Ze(t, n) {
            var r = [];
            var o = P;
            if (x) {
              o = F;
            }
            a.Iuo(t, function (t) {
              if (t && t[V]() > 0) {
                a.Iuo(t[X](), function (t) {
                  if (t) {
                    if (t[ze]) {
                      t[Je] = 4;
                      t[ze] = false;
                    }
                    if (t[He] < o) {
                      s.u9(t, e[je]);
                      me(t, false);
                    } else {
                      r[Z](t);
                    }
                  }
                });
              }
            });
            if (r[z] > 0) {
              tt(wt, r, h.x.NonRetryableStatus);
            }
            if (x) {
              Pe(2, 2);
            }
          }
          function et(t, n) {
            var r = G || {};
            var o = r[t];
            if (o) {
              try {
                o.apply(r, n);
              } catch (n) {
                f.ZP(e.diagLog(), 1, 74, t + ' notification failed: ' + n);
              }
            }
          }
          function tt(e, t) {
            var n = [];
            for (var r = 2; r < arguments.length; r++) {
              n[r - 2] = arguments[r];
            }
            if (t && t[z] > 0) {
              et(e, [t][$](n));
            }
          }
          function nt(e, t) {
            var n = [];
            for (var r = 2; r < arguments.length; r++) {
              n[r - 2] = arguments[r];
            }
            if (t && t[z] > 0) {
              a.Iuo(t, function (t) {
                if (t && t[V]() > 0) {
                  et(e, [t.events()][$](n));
                }
              });
            }
          }
          function ot(e, t, n) {
            if (e && e[z] > 0) {
              et('eventsSendRequest', [t >= 1000 && t <= 1999 ? t - 1000 : 0, n !== true]);
            }
          }
          function it(e, t) {
            nt('eventsSent', e, t);
            we();
          }
          function st(e, t) {
            nt(wt, e, t >= 8000 && t <= 8999 ? t - 8000 : h.x.Unknown);
          }
          function at(e) {
            nt(wt, e, h.x.NonRetryableStatus);
            we();
          }
          function At(e, t) {
            nt(wt, e, h.x.Unknown);
            we();
          }
          function ct() {
            S = q ? 0 : Math.max(1500, y / 6);
          }
          _e();
          e._getDbgPlgTargets = function () {
            return [B, n];
          };
          e[ie] = function (o, a, d) {
            A.r2(a, function () {
              return 'PostChannel:initialize';
            }, function () {
              t[ie](o, a, d);
              G = a.getNotifyMgr();
              try {
                M = c.Hm(u.Z(e[je]), a.evtNamespace && a.evtNamespace());
                e._addHook(l.a(o, function (t) {
                  var o = t.cfg;
                  var A = g.i8(null, o, a);
                  n = A.getExtCfg(e[je], vt);
                  L = lt(n[se], n[ae]);
                  k = !n.disableOptimizeObj && s.F2();
                  K = n.ignoreMc1Ms0CookieProcessing;
                  (function (e) {
                    var t = e[xe];
                    e[xe] = function () {
                      var n = 0;
                      if (K) {
                        n |= 2;
                      }
                      return n | t.call(e);
                    };
                  })(a);
                  y = n[qe];
                  E = n.immediateEventLimit;
                  D = n[Ge];
                  P = n.maxEventRetryAttempts;
                  F = n.maxUnloadEventRetryAttempts;
                  q = n.disableAutoBatchFlushLimit;
                  ct();
                  H = n.overrideInstrumentationKey;
                  J = !!n.disableTelemetry;
                  if (Y) {
                    r();
                  }
                  var u = o.disablePageUnloadEvents || [];
                  Y = c.ee(de, u, M);
                  Y = c.Fc(de, u, M) || Y;
                  Y = c.oS(he, o.disablePageShowEvents, M) || Y;
                }));
                B[ie](o, e.core, e);
              } catch (t) {
                e.setInitialized(false);
                throw t;
              }
            }, function () {
              return {
                theConfig: o,
                core: a,
                extensions: d
              };
            });
          };
          e.processTelemetry = function (t, n) {
            s.u9(t, e[je]);
            n = n || e._getTelCtx(n);
            var r = t;
            if (!J && !ne) {
              if (H) {
                r[W] = H;
              }
              me(r, true);
              if (x) {
                Pe(2, 2);
              } else {
                we();
              }
            }
            e.processNext(r, n);
          };
          e.getOfflineSupport = function () {
            try {
              var e = B && B[Ce]();
              if (B) {
                return {
                  getUrl: function () {
                    if (e) {
                      return e.url;
                    } else {
                      return null;
                    }
                  },
                  serialize: ge,
                  batch: o,
                  shouldProcess: function (e) {
                    return !J;
                  },
                  createPayload: function (e) {
                    return null;
                  },
                  createOneDSPayload: function (e) {
                    if (B[Ie]) {
                      return B[Ie](e, k);
                    }
                  }
                };
              }
            } catch (e) {}
            return null;
          };
          e._doTeardown = function (e, t) {
            Pe(2, 2);
            ne = true;
            B.teardown();
            r();
            _e();
          };
          e.setEventQueueLimits = function (e, t) {
            n[qe] = y = s.ei(e) ? e : yt;
            n[Ge] = D = s.ei(t) ? t : 0;
            ct();
            var r = ce > e;
            if (!r && S > 0) {
              for (var o = 1; !r && o <= 3; o++) {
                var A = Q[o];
                if (A && A[ve]) {
                  a.Iuo(A[ve], function (e) {
                    if (e && e[V]() >= S) {
                      r = true;
                    }
                  });
                }
              }
            }
            Me(true, r);
          };
          e.pause = function () {
            ke();
            oe = true;
            B.pause();
          };
          e.resume = function () {
            oe = false;
            B.resume();
            we();
          };
          e._loadTransmitProfiles = function (e) {
            ke();
            Xe();
            le = I.z3;
            we();
            a.zav(e, function (e, t) {
              var n = t[z];
              if (n >= 2) {
                var r = n > 2 ? t[2] : 0;
                t[te](0, n - 2);
                if (t[1] < 0) {
                  t[0] = -1;
                }
                if (t[1] > 0 && t[0] > 0) {
                  var o = t[0] / t[1];
                  t[0] = Math.ceil(o) * t[1];
                }
                if (r >= 0 && t[1] >= 0 && r > t[1]) {
                  r = t[1];
                }
                t[Z](r);
                ue[e] = t;
              }
            });
          };
          e.flush = function (e, t, n) {
            var r;
            if (e === undefined) {
              e = true;
            }
            if (!oe) {
              n = n || 1;
              if (e) {
                if (!t) {
                  r = m.Qo(function (e) {
                    t = e;
                  });
                }
                if (p == null) {
                  ke();
                  Ke(1, 0, n);
                  p = be(function () {
                    p = null;
                    $e(t, n);
                  }, 0);
                } else {
                  re[Z](t);
                }
              } else {
                var o = ke();
                Ee(1, 1, n);
                if (t) {
                  t();
                }
                if (o) {
                  we();
                }
              }
            }
            return r;
          };
          e.setMsaAuthTicket = function (e) {
            B[Be](O, e);
          };
          e.setAuthPluginHeader = function (e) {
            B[Be](N, e);
          };
          e.removeAuthPluginHeader = function () {
            B.removeHeader(N);
          };
          e.hasEvents = ye;
          e._setTransmitProfile = function (e) {
            if (le !== e && ue[e] !== undefined) {
              ke();
              le = e;
              we();
            }
          };
          d.o$(e, function () {
            return B;
          }, ['addResponseHandler']);
          e[Ue] = function () {
            if (v < 4) {
              v++;
              ke();
              we();
            }
          };
          e._clearBackOff = function () {
            if (v) {
              v = 0;
              ke();
              we();
            }
          };
        });
        return r;
      }
      r.qU(t, e);
      t.__ieDyn = 1;
      return t;
    }(p.s);
  },
  82586: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      p: () => r
    });
    var r = 'duration';
  },
  14642: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      $S: () => Z,
      $o: () => v,
      Af: () => X,
      Cd: () => s,
      E4: () => B,
      EW: () => D,
      F2: () => m,
      Fz: () => j,
      HT: () => L,
      I2: () => G,
      Jj: () => u,
      Li: () => g,
      MG: () => O,
      MY: () => W,
      NE: () => k,
      P5: () => A,
      Ps: () => d,
      RS: () => a,
      T9: () => V,
      Tc: () => r,
      WU: () => Y,
      Ws: () => p,
      XA: () => l,
      Xq: () => Ae,
      Xt: () => o,
      YT: () => M,
      YX: () => R,
      Yr: () => $,
      _7: () => te,
      _N: () => J,
      _Q: () => ie,
      b1: () => q,
      bd: () => y,
      cp: () => ne,
      e4: () => x,
      eZ: () => S,
      fD: () => Q,
      fH: () => f,
      fS: () => oe,
      hi: () => I,
      jq: () => K,
      ky: () => re,
      lb: () => w,
      mE: () => P,
      nc: () => _,
      oI: () => c,
      pF: () => b,
      sb: () => ce,
      sl: () => H,
      u0: () => ee,
      uJ: () => F,
      ux: () => T,
      v0: () => se,
      vO: () => z,
      wT: () => ae,
      x9: () => U,
      xE: () => h,
      y5: () => E,
      yH: () => N
    });
    var r = 'tags';
    var o = 'deviceType';
    var s = 'data';
    var a = 'name';
    var A = 'traceID';
    var c = 'length';
    var u = 'stringify';
    var l = 'measurements';
    var g = 'dataType';
    var d = 'envelopeType';
    var h = 'toString';
    var f = '_get';
    var p = 'enqueue';
    var m = 'count';
    var I = 'eventsLimitInMem';
    var E = 'push';
    var y = 'item';
    var w = 'emitLineDelimitedJson';
    var _ = 'clear';
    var v = 'createNew';
    var b = 'markAsSent';
    var B = 'clearSent';
    var Q = 'bufferOverride';
    var D = 'BUFFER_KEY';
    var S = 'SENT_BUFFER_KEY';
    var T = 'concat';
    var R = 'MAX_BUFFER_SIZE';
    var k = 'triggerSend';
    var x = 'diagLog';
    var P = 'initialize';
    var F = '_sender';
    var M = 'customHeaders';
    var O = 'maxBatchSizeInBytes';
    var N = 'onunloadDisableBeacon';
    var L = 'isBeaconApiDisabled';
    var K = 'alwaysUseXhrOverride';
    var U = 'disableXhr';
    var j = 'enableSessionStorageBuffer';
    var q = '_buffer';
    var G = 'onunloadDisableFetch';
    var Y = 'disableSendBeaconSplit';
    var H = 'instrumentationKey';
    var J = 'enableSendPromise';
    var z = 'getSenderInst';
    var $ = 'unloadTransports';
    var W = 'convertUndefined';
    var V = 'maxBatchInterval';
    var X = 'serialize';
    var Z = '_onError';
    var ee = '_onPartialSuccess';
    var te = '_onSuccess';
    var ne = 'itemsReceived';
    var re = 'itemsAccepted';
    var oe = 'oriPayload';
    var ie = 'baseType';
    var se = 'sampleRate';
    var ae = 'eventsSendRequest';
    var Ae = 'getSamplingScore';
    var ce = 'getHashCodeScore';
  },
  74484: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      F: () => u,
      H: () => c
    });
    var r = require(269);
    var o = require(55025);
    var s = require(15130);
    var a = ';';
    var A = '=';
    function c(e) {
      if (!e) {
        return {};
      }
      var t = e[s.sY](a);
      var n = r.KTd(t, function (e, t) {
        var n = t[s.sY](A);
        if (n[s.oI] === 2) {
          var r = n[0][s.OL]();
          var o = n[1];
          e[r] = o;
        }
        return e;
      }, {});
      if (r.cGk(n)[s.oI] > 0) {
        if (n.endpointsuffix) {
          var c = n.location ? n.location + '.' : '';
          n[s.zV] = n[s.zV] || `https://${c}dc.${n.endpointsuffix}`;
        }
        n[s.zV] = n[s.zV] || o._G;
        if (r.Cv9(n[s.zV], '/')) {
          n[s.zV] = n[s.zV].slice(0, -1);
        }
      }
      return n;
    }
    var u = {
      parse: c
    };
  },
  55025: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      R2: () => u,
      _G: () => A,
      jp: () => s,
      ks: () => l,
      tU: () => o,
      wc: () => c,
      xF: () => r,
      ym: () => a
    });
    var r = 'Microsoft_ApplicationInsights_BypassAjaxInstrumentation';
    var o = 'sampleRate';
    var s = 'ProcessLegacy';
    var a = 'http.method';
    var A = 'https://dc.services.visualstudio.com';
    var c = '/v2/track';
    var u = 'not_specified';
    var l = 'iKey';
  },
  26249: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      N: () => o
    });
    if (require.j == 606) {
      var r = require(269);
    }
    function o(e) {
      var t = null;
      if (r.Tnt(Event)) {
        t = new Event(e);
      } else {
        var n = r.YEm();
        if (n && n.createEvent) {
          (t = n.createEvent('Event')).initEvent(e, true, true);
        }
      }
      return t;
    }
  },
  7374: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      eL: () => o,
      iD: () => a,
      uG: () => s
    });
    var r = require(84282);
    var o = r.H({
      LocalStorage: 0,
      SessionStorage: 1
    });
    var s = r.H({
      AI: 0,
      AI_AND_W3C: 1,
      W3C: 2
    });
    var a = r.H({
      Normal: 1,
      Critical: 2
    });
  },
  60087: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Dt: () => a,
      Y8: () => c,
      bb: () => A,
      vv: () => u
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(15130);
    }
    var s = '';
    function a(e, t = false) {
      if (e == null) {
        return t;
      } else {
        return e.toString()[o.OL]() === 'true';
      }
    }
    function A(e) {
      if (isNaN(e) || e < 0) {
        e = 0;
      }
      e = Math.round(e);
      var t = s + e % 1000;
      var n = s + Math.floor(e / 1000) % 60;
      var r = s + Math.floor(e / 60000) % 60;
      var a = s + Math.floor(e / 3600000) % 24;
      var A = Math.floor(e / 86400000);
      t = t[o.oI] === 1 ? `00${t}` : t[o.oI] === 2 ? `0${t}` : t;
      n = n[o.oI] < 2 ? `0${n}` : n;
      r = r[o.oI] < 2 ? `0${r}` : r;
      a = a[o.oI] < 2 ? `0${a}` : a;
      return (A > 0 ? A + '.' : s) + a + ':' + r + ':' + n + '.' + t;
    }
    function c(e, t) {
      var n = null;
      r.Iuo(e, function (e) {
        if (e.identifier === t) {
          n = e;
          return -1;
        }
      });
      return n;
    }
    function u(e, t, n, o, s) {
      return !s && r.KgX(e) && (e === 'Script error.' || e === 'Script error');
    }
  },
  8596: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      o: () => f
    });
    var r = require(10659);
    var o = require(13673);
    function s(e) {
      var t = `ai.${e}.`;
      return function (e) {
        return t + e;
      };
    }
    var a = s('application');
    var A = s('device');
    var c = s('location');
    var u = s('operation');
    var l = s('session');
    var g = s('user');
    var d = s('cloud');
    var h = s('internal');
    var f = function (e) {
      function t() {
        return e.call(this) || this;
      }
      r.qU(t, e);
      return t;
    }(o.SZ({
      applicationVersion: a('ver'),
      applicationBuild: a('build'),
      applicationTypeId: a('typeId'),
      applicationId: a('applicationId'),
      applicationLayer: a('layer'),
      deviceId: A('id'),
      deviceIp: A('ip'),
      deviceLanguage: A('language'),
      deviceLocale: A('locale'),
      deviceModel: A('model'),
      deviceFriendlyName: A('friendlyName'),
      deviceNetwork: A('network'),
      deviceNetworkName: A('networkName'),
      deviceOEMName: A('oemName'),
      deviceOS: A('os'),
      deviceOSVersion: A('osVersion'),
      deviceRoleInstance: A('roleInstance'),
      deviceRoleName: A('roleName'),
      deviceScreenResolution: A('screenResolution'),
      deviceType: A('type'),
      deviceMachineName: A('machineName'),
      deviceVMName: A('vmName'),
      deviceBrowser: A('browser'),
      deviceBrowserVersion: A('browserVersion'),
      locationIp: c('ip'),
      locationCountry: c('country'),
      locationProvince: c('province'),
      locationCity: c('city'),
      operationId: u('id'),
      operationName: u('name'),
      operationParentId: u('parentId'),
      operationRootId: u('rootId'),
      operationSyntheticSource: u('syntheticSource'),
      operationCorrelationVector: u('correlationVector'),
      sessionId: l('id'),
      sessionIsFirst: l('isFirst'),
      sessionIsNew: l('isNew'),
      userAccountAcquisitionDate: g('accountAcquisitionDate'),
      userAccountId: g('accountId'),
      userAgent: g('userAgent'),
      userId: g('id'),
      userStoreRegion: g('storeRegion'),
      userAuthUserId: g('authUserId'),
      userAnonymousUserAcquisitionDate: g('anonUserAcquisitionDate'),
      userAuthenticatedUserAcquisitionDate: g('authUserAcquisitionDate'),
      cloudName: d('name'),
      cloudRole: d('role'),
      cloudRoleVer: d('roleVer'),
      cloudRoleInstance: d('roleInstance'),
      cloudEnvironment: d('environment'),
      cloudLocation: d('location'),
      cloudDeploymentUnit: d('deploymentUnit'),
      internalNodeName: h('nodeName'),
      internalSdkVersion: h('sdkVersion'),
      internalAgentVersion: h('agentVersion'),
      internalSnippet: h('snippet'),
      internalSdkSrc: h('sdkSrc')
    }));
  },
  29762: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      O: () => r
    });
    var r = require(84282).H({
      Verbose: 0,
      Information: 1,
      Warning: 2,
      Error: 3,
      Critical: 4
    });
  },
  16628: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      y: () => s
    });
    var r = require(269);
    var o = require(15130);
    var s = function () {
      function e() {}
      e.getConfig = function (e, t, n, s) {
        var a;
        if (s === undefined) {
          s = false;
        }
        a = n && e[o.up] && e[o.up][n] && !r.hXl(e[o.up][n][t]) ? e[o.up][n][t] : e[t];
        if (r.hXl(a)) {
          return s;
        } else {
          return a;
        }
      };
      return e;
    }();
  },
  81575: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      F: () => o,
      O: () => s
    });
    var r = require(8596);
    var o = {
      UserExt: 'user',
      DeviceExt: 'device',
      TraceExt: 'trace',
      WebExt: 'web',
      AppExt: 'app',
      OSExt: 'os',
      SessionExt: 'ses',
      SDKExt: 'sdk'
    };
    var s = new r.o();
  },
  85571: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      G: () => c
    });
    if (require.j == 606) {
      var r = require(56149);
    }
    if (require.j == 606) {
      var o = require(269);
    }
    if (require.j == 606) {
      var s = require(24276);
    }
    if (require.j == 606) {
      var a = require(15130);
    }
    function A(e, t) {
      r.ML(e, null, null, t);
    }
    function c(e) {
      var t = o.YEm();
      var n = o.w3n();
      var c = false;
      var u = [];
      var l = 1;
      if (!!n && !o.hXl(n.onLine) && !n.onLine) {
        l = 2;
      }
      var g = 0;
      var d = m();
      var h = r.Hm(s.Z('OfflineListener'), e);
      try {
        if (p(o.zkX())) {
          c = true;
        }
        if (t) {
          var f = t.body || t;
          if (f.ononline && p(f)) {
            c = true;
          }
        }
      } catch (e) {
        c = false;
      }
      function p(e) {
        var t = false;
        if (e && (t = r.mB(e, 'online', E, h))) {
          r.mB(e, 'offline', y, h);
        }
        return t;
      }
      function m() {
        return g !== 2 && l !== 2;
      }
      function I() {
        var e = m();
        if (d !== e) {
          d = e;
          o.Iuo(u, function (e) {
            var t = {
              isOnline: d,
              rState: l,
              uState: g
            };
            try {
              e(t);
            } catch (e) {}
          });
        }
      }
      function E() {
        l = 1;
        I();
      }
      function y() {
        l = 2;
        I();
      }
      return {
        isOnline: function () {
          return d;
        },
        isListening: function () {
          return c;
        },
        unload: function () {
          var e = o.zkX();
          if (e && c) {
            A(e, h);
            if (t) {
              var n = t.body || t;
              if (!o.b07(n.ononline)) {
                A(n, h);
              }
            }
            c = false;
          }
        },
        addListener: function (e) {
          u[a.y5](e);
          return {
            rm: function () {
              var t = u.indexOf(e);
              if (t > -1) {
                return u.splice(t, 1);
              } else {
                return undefined;
              }
            }
          };
        },
        setOnlineState: function (e) {
          g = e;
          I();
        }
      };
    }
  },
  52910: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      a: () => r
    });
    var r = require(84282).o({
      requestContextHeader: [0, 'Request-Context'],
      requestContextTargetKey: [1, 'appId'],
      requestContextAppIdFormat: [2, 'appId=cid-v1:'],
      requestIdHeader: [3, 'Request-Id'],
      traceParentHeader: [4, 'traceparent'],
      traceStateHeader: [5, 'tracestate'],
      sdkContextHeader: [6, 'Sdk-Context'],
      sdkContextHeaderAppIdRequest: [7, 'appId'],
      requestContextHeaderLowerCase: [8, 'request-context']
    });
  },
  14658: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      AN: () => _,
      BW: () => I,
      Dt: () => B,
      Nu: () => f,
      Se: () => E,
      T9: () => v,
      _M: () => y,
      iw: () => m,
      tm: () => w,
      v7: () => Q,
      vH: () => b,
      vh: () => p
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(23775);
    }
    if (require.j == 606) {
      var s = require(13673);
    }
    if (require.j == 606) {
      var a = require(7374);
    }
    if (require.j == 606) {
      var A = require(15130);
    }
    var c = require.j == 606 ? undefined : null;
    var u = require.j == 606 ? undefined : null;
    var l = '';
    function g() {
      if (I()) {
        return d(a.eL.LocalStorage);
      } else {
        return null;
      }
    }
    function d(e) {
      try {
        if (r.hXl(r.mS$())) {
          return null;
        }
        var t = new Date()[A.xE]();
        var n = r.zS2(e === a.eL.LocalStorage ? 'localStorage' : 'sessionStorage');
        var o = l + t;
        n.setItem(o, t);
        var s = n.getItem(o) !== t;
        n[A.AZ](o);
        if (!s) {
          return n;
        }
      } catch (e) {}
      return null;
    }
    function h() {
      if (_()) {
        return d(a.eL.SessionStorage);
      } else {
        return null;
      }
    }
    function f() {
      c = false;
      u = false;
    }
    function p(e) {
      l = e || '';
    }
    function m() {
      c = I(true);
      u = _(true);
    }
    function I(e) {
      if (e || c === undefined) {
        c = !!d(a.eL.LocalStorage);
      }
      return c;
    }
    function E(e, t) {
      var n = g();
      if (n !== null) {
        try {
          return n.getItem(t);
        } catch (t) {
          c = false;
          o.ZP(e, 2, 1, `Browser failed read of local storage. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return null;
    }
    function y(e, t, n) {
      var a = g();
      if (a !== null) {
        try {
          a.setItem(t, n);
          return true;
        } catch (t) {
          c = false;
          o.ZP(e, 2, 3, `Browser failed write to local storage. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return false;
    }
    function w(e, t) {
      var n = g();
      if (n !== null) {
        try {
          n[A.AZ](t);
          return true;
        } catch (t) {
          c = false;
          o.ZP(e, 2, 5, `Browser failed removal of local storage item. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return false;
    }
    function _(e) {
      if (e || u === undefined) {
        u = !!d(a.eL.SessionStorage);
      }
      return u;
    }
    function v() {
      var e = [];
      if (_()) {
        r.zav(r.zS2('sessionStorage'), function (t) {
          e[A.y5](t);
        });
      }
      return e;
    }
    function b(e, t) {
      var n = h();
      if (n !== null) {
        try {
          return n.getItem(t);
        } catch (t) {
          u = false;
          o.ZP(e, 2, 2, `Browser failed read of session storage. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return null;
    }
    function B(e, t, n) {
      var a = h();
      if (a !== null) {
        try {
          a.setItem(t, n);
          return true;
        } catch (t) {
          u = false;
          o.ZP(e, 2, 4, `Browser failed write to session storage. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return false;
    }
    function Q(e, t) {
      var n = h();
      if (n !== null) {
        try {
          n[A.AZ](t);
          return true;
        } catch (t) {
          u = false;
          o.ZP(e, 2, 6, `Browser failed removal of session storage item. ${s.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return false;
    }
  },
  93602: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      V: () => c,
      r: () => u
    });
    var r = require(269);
    var o = require(13673);
    var s = require(55025);
    var a = require(67975);
    var A = require(15130);
    function c(e, t, n, c, u, l) {
      var g;
      n = a.Rr(c, n) || s.R2;
      if (r.hXl(e) || r.hXl(t) || r.hXl(n)) {
        r.$8('Input doesn\'t contain all required fields');
      }
      var d = '';
      if (e[s.ks]) {
        d = e[s.ks];
        delete e[s.ks];
      }
      (g = {})[A.RS] = n;
      g.time = o._u(new Date());
      g.iKey = d;
      g.ext = l || {};
      g.tags = [];
      g.data = {};
      g.baseType = t;
      g.baseData = e;
      var h = g;
      if (!r.hXl(u)) {
        r.zav(u, function (e, t) {
          h.data[e] = t;
        });
      }
      return h;
    }
    var u = function () {
      function e() {}
      e.create = c;
      return e;
    }();
  },
  27358: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      B: () => r
    });
    function r(e, t) {
      this.aiDataContract = {
        baseType: 1,
        baseData: 1
      };
      this.baseType = e;
      this.baseData = t;
    }
  },
  67975: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      HQ: () => p,
      Rr: () => u,
      Vj: () => f,
      Vk: () => g,
      Vt: () => d,
      _T: () => m,
      lq: () => c,
      pJ: () => l,
      qW: () => I,
      xP: () => h,
      zx: () => A
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(23775);
    }
    if (require.j == 606) {
      var s = require(7292);
    }
    if (require.j == 606) {
      var a = require(15130);
    }
    function A(e, t, n) {
      var o = t[a.oI];
      var s = c(e, t);
      if (s[a.oI] !== o) {
        var A = 0;
        for (var u = s; n[u] !== undefined;) {
          A++;
          u = r.P0f(s, 0, 147) + I(A);
        }
        s = u;
      }
      return s;
    }
    function c(e, t) {
      var n;
      if (t && (t = r.EHq(r.oJg(t)))[a.oI] > 150) {
        n = r.P0f(t, 0, 150);
        o.ZP(e, 2, 57, 'name is too long.  It has been truncated to 150 characters.', {
          name: t
        }, true);
      }
      return n || t;
    }
    function u(e, t, n) {
      var s;
      if (n === undefined) {
        n = 1024;
      }
      if (t) {
        n = n || 1024;
        if ((t = r.EHq(r.oJg(t)))[a.oI] > n) {
          s = r.P0f(t, 0, n);
          o.ZP(e, 2, 61, `string value is too long. It has been truncated to ${n} characters.`, {
            value: t
          }, true);
        }
      }
      return s || t;
    }
    function l(e, t) {
      return m(e, t, 2048, 66);
    }
    function g(e, t) {
      var n;
      if (t && t[a.oI] > 32768) {
        n = r.P0f(t, 0, 32768);
        o.ZP(e, 2, 56, 'message is too long, it has been truncated to 32768 characters.', {
          message: t
        }, true);
      }
      return n || t;
    }
    function d(e, t) {
      var n;
      if (t) {
        var s = `${t}`;
        if (s[a.oI] > 32768) {
          n = r.P0f(s, 0, 32768);
          o.ZP(e, 2, 52, 'exception is too long, it has been truncated to 32768 characters.', {
            exception: t
          }, true);
        }
      }
      return n || t;
    }
    function h(e, t) {
      if (t) {
        var n = {};
        r.zav(t, function (t, c) {
          if (r.Gvm(c) && s.Z()) {
            try {
              c = s.hm()[a.Jj](c);
            } catch (t) {
              o.ZP(e, 2, 49, 'custom property is not valid', {
                exception: t
              }, true);
            }
          }
          c = u(e, c, 8192);
          t = A(e, t, n);
          n[t] = c;
        });
        t = n;
      }
      return t;
    }
    function f(e, t) {
      if (t) {
        var n = {};
        r.zav(t, function (t, r) {
          t = A(e, t, n);
          n[t] = r;
        });
        t = n;
      }
      return t;
    }
    function p(e, t) {
      if (t) {
        return m(e, t, 128, 69)[a.xE]();
      } else {
        return t;
      }
    }
    function m(e, t, n, s) {
      var A;
      if (t && (t = r.EHq(r.oJg(t)))[a.oI] > n) {
        A = r.P0f(t, 0, n);
        o.ZP(e, 2, s, `input is too long, it has been truncated to ${n} characters.`, {
          data: t
        }, true);
      }
      return A || t;
    }
    function I(e) {
      var t = `00${e}`;
      return r.hKY(t, t[a.oI] - 3);
    }
  },
  21062: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      L: () => A
    });
    var r = require(13673);
    var o = require(55025);
    var s = require(15130);
    var a = require(67975);
    function A(e, t, n) {
      var A = this;
      var c = this;
      c.ver = 1;
      c.sampleRate = 100;
      c.tags = {};
      c[s.RS] = a.Rr(e, n) || o.R2;
      c.data = t;
      c.time = r._u(new Date());
      c.aiDataContract = {
        time: 1,
        iKey: 1,
        name: 1,
        sampleRate: function () {
          if (A.sampleRate === 100) {
            return 4;
          } else {
            return 1;
          }
        },
        tags: 1,
        data: 1
      };
    }
  },
  43072: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      J: () => a
    });
    var r = require(55025);
    var o = require(15130);
    var s = require(67975);
    var a = function () {
      function e(e, t, n, a) {
        this.aiDataContract = {
          ver: 1,
          name: 1,
          properties: 0,
          measurements: 0
        };
        var A = this;
        A.ver = 2;
        A[o.RS] = s.Rr(e, t) || r.R2;
        A[o.$y] = s.xP(e, n);
        A[o.XA] = s.Vj(e, a);
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.Event';
      e.dataType = 'EventData';
      return e;
    }();
  },
  65397: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      WJ: () => _
    });
    var r = require(10659);
    var o = require(269);
    var s = require(55025);
    var a = require(15130);
    var A = require(67975);
    var c = 'error';
    var u = 'stack';
    var l = 'stackDetails';
    var g = 'errorSrc';
    var d = 'message';
    var h = 'description';
    function f(e, t) {
      var n = e;
      if (n && !o.KgX(n)) {
        if (JSON && JSON[a.Jj]) {
          n = JSON[a.Jj](e);
          if (!!t && (!n || n === '{}')) {
            n = o.Tnt(e[a.xE]) ? e[a.xE]() : `${e}`;
          }
        } else {
          n = e + ' - (Missing JSON.stringify)';
        }
      }
      return n || '';
    }
    function p(e, t) {
      var n = e;
      if (e) {
        if (n && !o.KgX(n)) {
          n = e[d] || e[h] || n;
        }
        if (n && !o.KgX(n)) {
          n = f(n, true);
        }
        if (e.filename) {
          n = n + ' @' + (e.filename || '') + ':' + (e.lineno || '?') + ':' + (e.colno || '?');
        }
      }
      if (t && t !== 'String' && t !== 'Object' && t !== 'Error' && o.HzD(n || '', t) === -1) {
        n = t + ': ' + n;
      }
      return n || '';
    }
    function m(e) {
      return e && e.src && o.KgX(e.src) && e.obj && o.cyL(e.obj);
    }
    function I(e) {
      var t = e || '';
      if (!o.KgX(t)) {
        t = o.KgX(t[u]) ? t[u] : `${t}`;
      }
      var n = t[a.sY]('\n');
      return {
        src: t,
        obj: n
      };
    }
    function E(e) {
      var t = null;
      if (e) {
        try {
          if (e[u]) {
            t = I(e[u]);
          } else {
            if (e[c] && e[c][u]) {
              t = I(e[c][u]);
            } else {
              if (e.exception && e.exception[u]) {
                t = I(e.exception[u]);
              } else {
                if (m(e)) {
                  t = e;
                } else {
                  if (m(e[l])) {
                    t = e[l];
                  } else {
                    if (o.zkX() && o.zkX().opera && e[d]) {
                      t = function (e) {
                        var t = [];
                        for (var n = e[a.sY]('\n'), r = 0; r < n[a.oI]; r++) {
                          var o = n[r];
                          if (n[r + 1]) {
                            o += `@${n[r + 1]}`;
                            r++;
                          }
                          t[a.y5](o);
                        }
                        return {
                          src: e,
                          obj: t
                        };
                      }(e[a.pM]);
                    } else {
                      if (e.reason && e.reason[u]) {
                        t = I(e.reason[u]);
                      } else {
                        if (o.KgX(e)) {
                          t = I(e);
                        } else {
                          var n = e[d] || e[h] || '';
                          if (o.KgX(e[g])) {
                            if (n) {
                              n += '\n';
                            }
                            n += ` from ${e[g]}`;
                          }
                          if (n) {
                            t = I(n);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        } catch (e) {
          t = I(e);
        }
      }
      return t || {
        src: '',
        obj: null
      };
    }
    function y(e) {
      var t = '';
      if (e && !(t = e.typeName || e[a.RS] || '')) {
        try {
          var n = /function (.{1,200})\(/.exec(e.constructor[a.xE]());
          t = n && n[a.oI] > 1 ? n[1] : '';
        } catch (e) {}
      }
      return t;
    }
    function w(e) {
      if (e) {
        try {
          if (!o.KgX(e)) {
            var t = y(e);
            var n = f(e, false);
            if (!n || n === '{}') {
              if (e[c]) {
                t = y(e = e[c]);
              }
              n = f(e, true);
            }
            if (o.HzD(n, t) !== 0 && t !== 'String') {
              return t + ':' + n;
            } else {
              return n;
            }
          }
        } catch (e) {}
      }
      return `${e || ''}`;
    }
    var _ = function () {
      function e(e, t, n, r, s, c) {
        this.aiDataContract = {
          ver: 1,
          exceptions: 1,
          severityLevel: 0,
          properties: 0,
          measurements: 0
        };
        var u = this;
        u.ver = 2;
        if (!function (e) {
          try {
            if (o.Gvm(e)) {
              return 'ver' in e && 'exceptions' in e && 'properties' in e;
            }
          } catch (e) {}
          return false;
        }(t)) {
          if (!n) {
            n = {};
          }
          if (c) {
            n.id = c;
          }
          u[a.OK] = [new v(e, t, n)];
          u[a.$y] = A.xP(e, n);
          u[a.XA] = A.Vj(e, r);
          if (s) {
            u[a.Ur] = s;
          }
          if (c) {
            u.id = c;
          }
        } else {
          u[a.OK] = t[a.OK] || [];
          u[a.$y] = t[a.$y];
          u[a.XA] = t[a.XA];
          if (t[a.Ur]) {
            u[a.Ur] = t[a.Ur];
          }
          if (t.id) {
            u.id = t.id;
            t[a.$y].id = t.id;
          }
          if (t[a.Fq]) {
            u[a.Fq] = t[a.Fq];
          }
          if (!o.hXl(t[a.r1])) {
            u[a.r1] = t[a.r1];
          }
        }
      }
      e.CreateAutoException = function (e, t, n, r, o, s, A, c) {
        var u;
        var l = y(o || s || e);
        (u = {})[a.pM] = p(e, l);
        u.url = t;
        u.lineNumber = n;
        u.columnNumber = r;
        u.error = w(o || s || e);
        u.evt = w(s || e);
        u[a.qg] = l;
        u.stackDetails = E(A || o || s);
        u.errorSrc = c;
        return u;
      };
      e.CreateFromInterface = function (t, n, s, A) {
        var c = n[a.OK] && o.W$7(n[a.OK], function (e) {
          return v[a.vu](t, e);
        });
        return new e(t, r.Im(r.Im({}, n), {
          exceptions: c
        }), s, A);
      };
      e.prototype.toInterface = function () {
        var e;
        var t = this;
        var n = t.exceptions;
        var r = t.properties;
        var s = t.measurements;
        var A = t.severityLevel;
        var c = t.problemGroup;
        var u = t.id;
        var l = t.isManual;
        var g = n instanceof Array && o.W$7(n, function (e) {
          return e.toInterface();
        }) || undefined;
        (e = {
          ver: '4.0'
        })[a.OK] = g;
        e.severityLevel = A;
        e.properties = r;
        e.measurements = s;
        e.problemGroup = c;
        e.id = u;
        e.isManual = l;
        return e;
      };
      e.CreateSimpleException = function (e, t, n, r, o, s) {
        var A;
        return {
          exceptions: [(A = {}, A[a.lW] = true, A.message = e, A.stack = o, A.typeName = t, A)]
        };
      };
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.Exception';
      e.dataType = 'ExceptionData';
      e.formatError = w;
      return e;
    }();
    var v = function () {
      function e(e, t, n) {
        this.aiDataContract = {
          id: 0,
          outerId: 0,
          typeName: 1,
          message: 1,
          hasFullStack: 0,
          stack: 0,
          parsedStack: 2
        };
        var r = this;
        if (function (e) {
          try {
            if (o.Gvm(e)) {
              return 'hasFullStack' in e && 'typeName' in e;
            }
          } catch (e) {}
          return false;
        }(t)) {
          r[a.qg] = t[a.qg];
          r[a.pM] = t[a.pM];
          r[u] = t[u];
          r[a.on] = t[a.on] || [];
          r[a.lW] = t[a.lW];
        } else {
          var g = t;
          var d = g && g.evt;
          if (!o.bJ7(g)) {
            g = g[c] || d || g;
          }
          r[a.qg] = A.Rr(e, y(g)) || s.R2;
          r[a.pM] = A.Vk(e, p(t || g, r[a.qg])) || s.R2;
          var h = t[l] || E(t);
          r[a.on] = function (e) {
            var t;
            var n = e.obj;
            if (n && n[a.oI] > 0) {
              t = [];
              var r = 0;
              var s = 0;
              o.Iuo(n, function (e) {
                var n = e[a.xE]();
                if (b.regex.test(n)) {
                  var o = new b(n, r++);
                  s += o[a.J$];
                  t[a.y5](o);
                }
              });
              if (s > 32768) {
                for (var A = 0, c = t[a.oI] - 1, u = 0, l = A, g = c; A < c;) {
                  if ((u += t[A][a.J$] + t[c][a.J$]) > 32768) {
                    var d = g - l + 1;
                    t.splice(l, d);
                    break;
                  }
                  l = A;
                  g = c;
                  A++;
                  c--;
                }
              }
            }
            return t;
          }(h);
          if (o.cyL(r[a.on])) {
            o.W$7(r[a.on], function (t) {
              t[a.QE] = A.Rr(e, t[a.QE]);
              t[a.IE] = A.Rr(e, t[a.IE]);
            });
          }
          r[u] = A.Vt(e, function (e) {
            var t = '';
            if (e) {
              if (e.obj) {
                o.Iuo(e.obj, function (e) {
                  t += e + '\n';
                });
              } else {
                t = e.src || '';
              }
            }
            return t;
          }(h));
          r.hasFullStack = o.cyL(r.parsedStack) && r.parsedStack[a.oI] > 0;
          if (n) {
            n[a.qg] = n[a.qg] || r[a.qg];
          }
        }
      }
      e.prototype.toInterface = function () {
        var e;
        var t = this;
        var n = t[a.on] instanceof Array && o.W$7(t[a.on], function (e) {
          return e.toInterface();
        });
        (e = {
          id: t.id,
          outerId: t.outerId,
          typeName: t[a.qg],
          message: t[a.pM],
          hasFullStack: t[a.lW],
          stack: t[u]
        })[a.on] = n || undefined;
        return e;
      };
      e.CreateFromInterface = function (t, n) {
        var s = n[a.on] instanceof Array && o.W$7(n[a.on], function (e) {
          return b[a.vu](e);
        }) || n[a.on];
        return new e(t, r.Im(r.Im({}, n), {
          parsedStack: s
        }));
      };
      return e;
    }();
    var b = function () {
      function e(t, n) {
        this.aiDataContract = {
          level: 1,
          method: 1,
          assembly: 0,
          fileName: 0,
          line: 0
        };
        var r = this;
        r[a.J$] = 0;
        if (typeof t == 'string') {
          var s = t;
          r[a.Av] = n;
          r[a.lx] = '<no_method>';
          r[a.QE] = o.EHq(s);
          r[a.IE] = '';
          r[a.h_] = 0;
          var A = s.match(e.regex);
          if (A && A[a.oI] >= 5) {
            r[a.lx] = o.EHq(A[2]) || r[a.lx];
            r[a.IE] = o.EHq(A[4]);
            r[a.h_] = parseInt(A[5]) || 0;
          }
        } else {
          r[a.Av] = t[a.Av];
          r[a.lx] = t[a.lx];
          r[a.QE] = t[a.QE];
          r[a.IE] = t[a.IE];
          r[a.h_] = t[a.h_];
          r[a.J$] = 0;
        }
        r.sizeInBytes += r.method[a.oI];
        r.sizeInBytes += r.fileName[a.oI];
        r.sizeInBytes += r.assembly[a.oI];
        r[a.J$] += e.baseSize;
        r.sizeInBytes += r.level.toString()[a.oI];
        r.sizeInBytes += r.line.toString()[a.oI];
      }
      e.CreateFromInterface = function (t) {
        return new e(t, null);
      };
      e.prototype.toInterface = function () {
        var e = this;
        return {
          level: e[a.Av],
          method: e[a.lx],
          assembly: e[a.QE],
          fileName: e[a.IE],
          line: e[a.h_]
        };
      };
      e.regex = /^([\s]+at)?[\s]{0,50}([^\@\()]+?)[\s]{0,50}(\@|\()([^\(\n]+):([0-9]+):([0-9]+)(\)?)$/;
      e.baseSize = 58;
      return e;
    }();
  },
  45014: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      J: () => A
    });
    var r = require(55025);
    var o = require(15130);
    function s() {
      this.aiDataContract = {
        name: 1,
        kind: 0,
        value: 1,
        count: 0,
        min: 0,
        max: 0,
        stdDev: 0
      };
      this.kind = 0;
    }
    var a = require(67975);
    var A = function () {
      function e(e, t, n, A, c, u, l, g, d) {
        this.aiDataContract = {
          ver: 1,
          metrics: 1,
          properties: 0
        };
        var h = this;
        h.ver = 2;
        var f = new s();
        f[o.F2] = A > 0 ? A : undefined;
        f.max = isNaN(u) || u === null ? undefined : u;
        f.min = isNaN(c) || c === null ? undefined : c;
        f[o.RS] = a.Rr(e, t) || r.R2;
        f.value = n;
        f.stdDev = isNaN(l) || l === null ? undefined : l;
        h.metrics = [f];
        h[o.$y] = a.xP(e, g);
        h[o.XA] = a.Vj(e, d);
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.Metric';
      e.dataType = 'MetricData';
      return e;
    }();
  },
  51448: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      h: () => A
    });
    var r = require(55025);
    var o = require(60087);
    var s = require(15130);
    var a = require(67975);
    var A = function () {
      function e(e, t, n, A, c, u, l) {
        this.aiDataContract = {
          ver: 1,
          name: 0,
          url: 0,
          duration: 0,
          properties: 0,
          measurements: 0,
          id: 0
        };
        var g = this;
        g.ver = 2;
        g.id = a.HQ(e, l);
        g.url = a.pJ(e, n);
        g[s.RS] = a.Rr(e, t) || r.R2;
        if (!isNaN(A)) {
          g[s.qd] = o.bb(A);
        }
        g[s.$y] = a.xP(e, c);
        g[s.XA] = a.Vj(e, u);
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.Pageview';
      e.dataType = 'PageviewData';
      return e;
    }();
  },
  64164: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      H: () => a
    });
    var r = require(55025);
    var o = require(15130);
    var s = require(67975);
    var a = function () {
      function e(e, t, n, a, A, c, u) {
        this.aiDataContract = {
          ver: 1,
          name: 0,
          url: 0,
          duration: 0,
          perfTotal: 0,
          networkConnect: 0,
          sentRequest: 0,
          receivedResponse: 0,
          domProcessing: 0,
          properties: 0,
          measurements: 0
        };
        var l = this;
        l.ver = 2;
        l.url = s.pJ(e, n);
        l[o.RS] = s.Rr(e, t) || r.R2;
        l[o.$y] = s.xP(e, A);
        l[o.XA] = s.Vj(e, c);
        if (u) {
          l.domProcessing = u.domProcessing;
          l[o.qd] = u[o.qd];
          l.networkConnect = u.networkConnect;
          l.perfTotal = u.perfTotal;
          l[o.fd] = u[o.fd];
          l.sentRequest = u.sentRequest;
        }
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.PageviewPerformance';
      e.dataType = 'PageviewPerformanceData';
      return e;
    }();
  },
  1365: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      A: () => A
    });
    var r = require(60087);
    var o = require(42318);
    var s = require(15130);
    var a = require(67975);
    var A = function () {
      function e(e, t, n, A, c, u, l, g, d = 'Ajax', h, f, p) {
        this.aiDataContract = {
          id: 1,
          ver: 1,
          name: 0,
          resultCode: 0,
          duration: 0,
          success: 0,
          data: 0,
          target: 0,
          type: 0,
          properties: 0,
          measurements: 0,
          kind: 0,
          value: 0,
          count: 0,
          min: 0,
          max: 0,
          stdDev: 0,
          dependencyKind: 0,
          dependencySource: 0,
          commandName: 0,
          dependencyTypeName: 0
        };
        var m = this;
        m.ver = 2;
        m.id = t;
        m[s.qd] = r.bb(c);
        m.success = u;
        m.resultCode = l + '';
        m.type = a.Rr(e, d);
        var I = o._U(e, n, g, A);
        m.data = a.pJ(e, A) || I.data;
        m.target = a.Rr(e, I.target);
        if (h) {
          m.target = `${m.target} | ${h}`;
        }
        m[s.RS] = a.Rr(e, I[s.RS]);
        m[s.$y] = a.xP(e, f);
        m[s.XA] = a.Vj(e, p);
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.RemoteDependency';
      e.dataType = 'RemoteDependencyData';
      return e;
    }();
  },
  82445: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      C: () => a
    });
    var r = require(55025);
    var o = require(15130);
    var s = require(67975);
    var a = function () {
      function e(e, t, n, a, A) {
        this.aiDataContract = {
          ver: 1,
          message: 1,
          severityLevel: 0,
          properties: 0
        };
        var c = this;
        c.ver = 2;
        t = t || r.R2;
        c[o.pM] = s.Vk(e, t);
        c[o.$y] = s.xP(e, a);
        c[o.XA] = s.Vj(e, A);
        if (n) {
          c[o.Ur] = n;
        }
      }
      e.envelopeType = 'Microsoft.ApplicationInsights.{0}.Message';
      e.dataType = 'MessageData';
      return e;
    }();
  },
  15122: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      J: () => l
    });
    var r = require(269);
    var o = require(23775);
    var s = require(13673);
    var a = require(4296);
    var A = require(76535);
    var c = require(14658);
    var u = require(15130);
    function l(e, t) {
      var n;
      var l;
      var g;
      var d;
      var h;
      var f;
      var p;
      var m = this;
      var I = false;
      var E = false;
      function y(e, t, r, o) {
        if (I) {
          var s = function (e) {
            try {
              var t = w(e);
              return A.Z1(1000000) <= t.limit.samplingRate;
            } catch (e) {}
            return false;
          }(e);
          if (!s) {
            return;
          }
          var a = w(e);
          var c = T(e);
          var g = v(a, n, c);
          var d = false;
          var f = 0;
          var p = R(e);
          try {
            if (g && !p) {
              f = Math.min(a.limit.maxSendNumber, c[u.F2] + 1);
              c[u.F2] = 0;
              d = true;
              h[e] = true;
              c[u.Jm] = new Date();
            } else {
              h[e] = g;
              c[u.F2] += 1;
            }
            var m = b(e);
            Q(l, m, c);
            for (var E = 0; E < f; E++) {
              S(e, l, t, r);
            }
          } catch (e) {}
          return {
            isThrottled: d,
            throttleNum: f
          };
        }
        if (o) {
          k(e)[u.y5]({
            msgID: e,
            message: t,
            severity: r
          });
        }
        return null;
      }
      function w(e) {
        return g[e] || g[109];
      }
      function _(e, t) {
        var n;
        var o;
        var s;
        var a;
        var A;
        try {
          var c = t || {};
          var l = {
            [u.Cx]: !!c[u.Cx]
          };
          var d = c[u.zw] || {};
          E = (d == null ? undefined : d.daysOfMonth) && (d == null ? undefined : d.daysOfMonth[u.oI]) > 0;
          l[u.zw] = (a = (s = (s = d) || {}) === null || s === undefined ? undefined : s.monthInterval, A = s == null ? undefined : s.dayInterval, r.hXl(a) && r.hXl(A) && (s.monthInterval = 3, E || (s[u.i9] = [28], E = true)), s = {
            monthInterval: s == null ? undefined : s.monthInterval,
            dayInterval: s == null ? undefined : s.dayInterval,
            daysOfMonth: s == null ? undefined : s.daysOfMonth
          });
          var h = {
            samplingRate: ((n = c.limit) === null || n === undefined ? undefined : n.samplingRate) || 100,
            maxSendNumber: ((o = c.limit) === null || o === undefined ? undefined : o.maxSendNumber) || 1
          };
          l.limit = h;
          g[e] = l;
        } catch (e) {}
      }
      function v(e, t, n) {
        if (e && !e[u.Cx] && t && s.Gh(n)) {
          var o = B();
          var a = n[u.C9];
          var A = e[u.zw];
          var c = 1;
          if (A == null ? undefined : A.monthInterval) {
            var l = (o.getUTCFullYear() - a.getUTCFullYear()) * 12 + o.getUTCMonth() - a.getUTCMonth();
            c = D(A.monthInterval, 0, l);
          }
          var g = 1;
          if (E) {
            g = r.rDm(A[u.i9], o[u.$e]());
          } else {
            if (A == null ? undefined : A.dayInterval) {
              var d = Math.floor((o.getTime() - a.getTime()) / 86400000);
              g = D(A.dayInterval, 0, d);
            }
          }
          return c >= 0 && g >= 0;
        }
        return false;
      }
      function b(e, t) {
        var n = s.Gh(t) ? t : '';
        if (e) {
          return `appInsightsThrottle${n}-${e}`;
        } else {
          return null;
        }
      }
      function B(e) {
        try {
          if (!e) {
            return new Date();
          }
          var t = new Date(e);
          if (!isNaN(t.getDate())) {
            return t;
          }
        } catch (e) {}
        return null;
      }
      function Q(e, t, n) {
        try {
          return c._M(e, t, r.EHq(JSON[u.Jj](n)));
        } catch (e) {}
        return false;
      }
      function D(e, t, n) {
        if (e <= 0) {
          return 1;
        } else {
          if (n >= t && (n - t) % e == 0) {
            return Math.floor((n - t) / e) + 1;
          } else {
            return -1;
          }
        }
      }
      function S(e, t, n, r) {
        o.ZP(t, r || 1, e, n);
      }
      function T(e) {
        try {
          var t = d[e];
          if (!t) {
            var n = b(e, f);
            t = function (e, t, n) {
              try {
                var r = {
                  date: B(),
                  count: 0
                };
                if (e) {
                  var o = JSON.parse(e);
                  return {
                    date: B(o[u.C9]) || r[u.C9],
                    count: o[u.F2] || r[u.F2],
                    preTriggerDate: o.preTriggerDate ? B(o[u.Jm]) : undefined
                  };
                }
                Q(t, n, r);
                return r;
              } catch (e) {}
              return null;
            }(c.Se(l, n), l, n);
            d[e] = t;
          }
          return d[e];
        } catch (e) {}
        return null;
      }
      function R(e) {
        var t = h[e];
        if (r.hXl(t)) {
          t = false;
          var n = T(e);
          if (n) {
            t = function (e) {
              try {
                if (e) {
                  var t = new Date();
                  return e.getUTCFullYear() === t.getUTCFullYear() && e.getUTCMonth() === t.getUTCMonth() && e[u.$e]() === t[u.$e]();
                }
              } catch (e) {}
              return false;
            }(n[u.Jm]);
          }
          h[e] = t;
        }
        return h[e];
      }
      function k(e) {
        p = p || {};
        if (r.hXl(p[e])) {
          p[e] = [];
        }
        return p[e];
      }
      l = o.y0(e);
      h = {};
      d = {};
      p = {};
      g = {};
      _(109);
      f = s.Gh(t) ? t : '';
      e.addUnloadHook(a.a(e.config, function (e) {
        var t = e.cfg;
        n = c.BW();
        var o = t.throttleMgrCfg || {};
        r.zav(o, function (e, t) {
          _(parseInt(e), t);
        });
      }));
      m._getDbgPlgTargets = function () {
        return [p];
      };
      m.getConfig = function () {
        return g;
      };
      m.canThrottle = function (e) {
        var t = T(e);
        return v(w(e), n, t);
      };
      m.isTriggered = function (e) {
        return R(e);
      };
      m.isReady = function () {
        return I;
      };
      m.flush = function (e) {
        try {
          var t = k(e);
          if (t && t[u.oI] > 0) {
            var n = t.slice(0);
            p[e] = [];
            r.Iuo(n, function (e) {
              y(e.msgID, e[u.pM], e.severity, false);
            });
            return true;
          }
        } catch (e) {}
        return false;
      };
      m.flushAll = function () {
        try {
          if (p) {
            var e = true;
            r.zav(p, function (t) {
              var n = m.flush(parseInt(t));
              e = e && n;
            });
            return e;
          }
        } catch (e) {}
        return false;
      };
      m.onReadyState = function (e, t = true) {
        if ((I = !!r.hXl(e) || e) && t) {
          return m.flushAll();
        } else {
          return null;
        }
      };
      m.sendMessage = function (e, t, n) {
        return y(e, t, n, true);
      };
    }
  },
  59354: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Gz: () => l,
      M0: () => h,
      PS: () => d,
      cM: () => c,
      k6: () => g,
      wX: () => u
    });
    var r = require(269);
    if (require.j == 606) {
      var o = require(15130);
    }
    var s = r.YEm() || {};
    var a = 0;
    var A = require.j == 606 ? [null, null, null, null, null] : null;
    function c(e) {
      var t = a;
      var n = A;
      var r = n[t];
      if (s.createElement) {
        if (!n[t]) {
          r = n[t] = s.createElement('a');
        }
      } else {
        r = {
          host: d(e, true)
        };
      }
      r.href = e;
      if (++t >= n[o.oI]) {
        t = 0;
      }
      a = t;
      return r;
    }
    function u(e) {
      var t;
      var n = c(e);
      if (n) {
        t = n.href;
      }
      return t;
    }
    function l(e) {
      var t;
      var n = c(e);
      if (n) {
        t = n[o.Ue];
      }
      return t;
    }
    function g(e, t) {
      if (e) {
        return e.toUpperCase() + ' ' + t;
      } else {
        return t;
      }
    }
    function d(e, t) {
      var n = h(e, t) || '';
      if (n) {
        var s = n.match(/(www\d{0,5}\.)?([^\/:]{1,256})(:\d{1,20})?/i);
        if (s != null && s[o.oI] > 3 && r.KgX(s[2]) && s[2][o.oI] > 0) {
          return s[2] + (s[3] || '');
        }
      }
      return n;
    }
    function h(e, t) {
      var n = null;
      if (e) {
        var s = e.match(/(\w{1,150}):\/\/([^\/:]{1,256})(:\d{1,20})?/i);
        if (s != null && s[o.oI] > 2 && r.KgX(s[2]) && s[2][o.oI] > 0 && (n = s[2] || '', t && s[o.oI] > 2)) {
          var a = (s[1] || '')[o.OL]();
          var A = s[3] || '';
          if (a === 'http' && A === ':80' || a === 'https' && A === ':443') {
            A = '';
          }
          n += A;
        }
      }
      return n;
    }
  },
  42318: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Ft: () => _,
      Qu: () => d,
      Rs: () => p,
      Wt: () => h,
      _U: () => E,
      jj: () => w,
      lt: () => y,
      mD: () => I,
      mp: () => f,
      pg: () => m
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(91864);
    }
    var s = require(55025);
    if (require.j == 606) {
      var a = require(52910);
    }
    if (require.j == 606) {
      var A = require(67975);
    }
    if (require.j == 606) {
      var c = require(59354);
    }
    if (require.j == 606) {
      var u = require(15130);
    }
    var l = [s._G + s.wc, `https://breeze.aimon.applicationinsights.io${s.wc}`, `https://dc-int.services.visualstudio.com${s.wc}`];
    var g = 'cid-v1:';
    function d(e) {
      return r.rDm(l, e[u.OL]()) !== -1;
    }
    function h(e) {
      g = e;
    }
    function f() {
      return g;
    }
    function p(e, t, n) {
      if (!t || e && e.disableCorrelationHeaders) {
        return false;
      }
      if (e && e[u.Ol]) {
        for (var o = 0; o < e.correlationHeaderExcludePatterns[u.oI]; o++) {
          if (e[u.Ol][o].test(t)) {
            return false;
          }
        }
      }
      var s = c.cM(t).host[u.OL]();
      if (!!s && (r.HzD(s, ':443') !== -1 || r.HzD(s, ':80') !== -1)) {
        s = (c.M0(t, true) || '')[u.OL]();
      }
      if ((!e || !e.enableCorsCorrelation) && s && s !== n) {
        return false;
      }
      var a;
      var A = e && e.correlationHeaderDomains;
      if (A && (r.Iuo(A, function (e) {
        var t = new RegExp(e.toLowerCase().replace(/\\/g, '\\\\').replace(/\./g, '\\.').replace(/\*/g, '.*'));
        a = a || t.test(s);
      }), !a)) {
        return false;
      }
      var l = e && e.correlationHeaderExcludedDomains;
      if (!l || l[u.oI] === 0) {
        return true;
      }
      for (o = 0; o < l[u.oI]; o++) {
        if (new RegExp(l[o].toLowerCase().replace(/\\/g, '\\\\').replace(/\./g, '\\.').replace(/\*/g, '.*')).test(s)) {
          return false;
        }
      }
      return s && s[u.oI] > 0;
    }
    function m(e) {
      if (e) {
        var t = I(e, a.a[1]);
        if (t && t !== g) {
          return t;
        }
      }
    }
    function I(e, t) {
      if (e) {
        for (var n = e[u.sY](','), r = 0; r < n[u.oI]; ++r) {
          var o = n[r][u.sY]('=');
          if (o[u.oI] === 2 && o[0] === t) {
            return o[1];
          }
        }
      }
    }
    function E(e, t, n, r) {
      var o;
      var s = r;
      var a = r;
      if (t && t[u.oI] > 0) {
        var l = c.cM(t);
        o = l.host;
        if (!s) {
          if (l[u.Ue] != null) {
            var g = l.pathname[u.oI] === 0 ? '/' : l[u.Ue];
            if (g.charAt(0) !== '/') {
              g = `/${g}`;
            }
            a = l[u.Ue];
            s = A.Rr(e, n ? n + ' ' + g : g);
          } else {
            s = A.Rr(e, t);
          }
        }
      } else {
        o = r;
        s = r;
      }
      return {
        target: o,
        name: s,
        data: a
      };
    }
    function y() {
      var e = r.FJj();
      if (e && e.now && e.timing) {
        var t = e.now() + e.timing.navigationStart;
        if (t > 0) {
          return t;
        }
      }
      return r.f0d();
    }
    function w(e, t) {
      var n = null;
      if (e !== 0 && t !== 0 && !r.hXl(e) && !r.hXl(t)) {
        n = t - e;
      }
      return n;
    }
    function _(e, t) {
      var n = e || {};
      return {
        getName: function () {
          return n[u.RS];
        },
        setName: function (e) {
          if (t) {
            t.setName(e);
          }
          n[u.RS] = e;
        },
        getTraceId: function () {
          return n.traceID;
        },
        setTraceId: function (e) {
          if (t) {
            t.setTraceId(e);
          }
          if (o.hX(e)) {
            n.traceID = e;
          }
        },
        getSpanId: function () {
          return n.parentID;
        },
        setSpanId: function (e) {
          if (t) {
            t.setSpanId(e);
          }
          if (o.wN(e)) {
            n.parentID = e;
          }
        },
        getTraceFlags: function () {
          return n.traceFlags;
        },
        setTraceFlags: function (e) {
          if (t) {
            t.setTraceFlags(e);
          }
          n.traceFlags = e;
        }
      };
    }
  },
  15130: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      $e: () => E,
      $y: () => Q,
      AZ: () => u,
      Av: () => N,
      C9: () => I,
      Cx: () => f,
      F2: () => d,
      Fq: () => k,
      IE: () => M,
      J$: () => S,
      Jj: () => y,
      Jm: () => h,
      OK: () => b,
      OL: () => s,
      Ol: () => _,
      QE: () => F,
      RS: () => l,
      Ue: () => w,
      Ur: () => R,
      XA: () => D,
      fd: () => j,
      h_: () => K,
      i9: () => m,
      lW: () => O,
      lx: () => L,
      oI: () => o,
      on: () => B,
      pM: () => g,
      qd: () => U,
      qg: () => T,
      r1: () => x,
      sY: () => r,
      up: () => v,
      vu: () => P,
      xE: () => A,
      y5: () => c,
      zV: () => a,
      zw: () => p
    });
    var r = 'split';
    var o = 'length';
    var s = 'toLowerCase';
    var a = 'ingestionendpoint';
    var A = 'toString';
    var c = 'push';
    var u = 'removeItem';
    var l = 'name';
    var g = 'message';
    var d = 'count';
    var h = 'preTriggerDate';
    var f = 'disabled';
    var p = 'interval';
    var m = 'daysOfMonth';
    var I = 'date';
    var E = 'getUTCDate';
    var y = 'stringify';
    var w = 'pathname';
    var _ = 'correlationHeaderExcludePatterns';
    var v = 'extensionConfig';
    var b = 'exceptions';
    var B = 'parsedStack';
    var Q = 'properties';
    var D = 'measurements';
    var S = 'sizeInBytes';
    var T = 'typeName';
    var R = 'severityLevel';
    var k = 'problemGroup';
    var x = 'isManual';
    var P = 'CreateFromInterface';
    var F = 'assembly';
    var M = 'fileName';
    var O = 'hasFullStack';
    var N = 'level';
    var L = 'method';
    var K = 'line';
    var U = 'duration';
    var j = 'receivedResponse';
  },
  2845: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      AnalyticsPluginIdentifier: () => F,
      BreezeChannelIdentifier: () => P,
      ConfigurationManager: () => E.y,
      ConnectionStringParser: () => s.F,
      ContextTagKeys: () => y.o,
      CtxTagKeys: () => v.O,
      DEFAULT_BREEZE_ENDPOINT: () => A._G,
      DEFAULT_BREEZE_PATH: () => A.wc,
      Data: () => m.B,
      DisabledPropertyName: () => A.xF,
      DistributedTracingModes: () => b.uG,
      Envelope: () => c.L,
      Event: () => u.J,
      EventPersistence: () => b.iD,
      Exception: () => l.WJ,
      Extensions: () => v.F,
      HttpMethod: () => A.ym,
      Metric: () => g.J,
      PageView: () => d.h,
      PageViewPerformance: () => p.H,
      ProcessLegacy: () => A.jp,
      PropertiesPluginIdentifier: () => x,
      RemoteDependencyData: () => h.A,
      RequestHeaders: () => a.a,
      SampleRate: () => A.tU,
      SeverityLevel: () => I.O,
      TelemetryItemCreator: () => _.r,
      ThrottleMgr: () => o.J,
      Trace: () => f.C,
      correlationIdCanIncludeCorrelationHeader: () => r.Rs,
      correlationIdGetCorrelationContext: () => r.pg,
      correlationIdGetCorrelationContextValue: () => r.mD,
      correlationIdGetPrefix: () => r.mp,
      correlationIdSetPrefix: () => r.Wt,
      createDistributedTraceContextFromTrace: () => r.Ft,
      createDomEvent: () => S.N,
      createOfflineListener: () => k.G,
      createTelemetryItem: () => _.V,
      createTraceParent: () => D.wk,
      dataSanitizeException: () => w.Vt,
      dataSanitizeId: () => w.HQ,
      dataSanitizeInput: () => w._T,
      dataSanitizeKey: () => w.lq,
      dataSanitizeKeyAndAddUniqueness: () => w.zx,
      dataSanitizeMeasurements: () => w.Vj,
      dataSanitizeMessage: () => w.Vk,
      dataSanitizeProperties: () => w.xP,
      dataSanitizeString: () => w.Rr,
      dataSanitizeUrl: () => w.pJ,
      dateTimeUtilsDuration: () => r.jj,
      dateTimeUtilsNow: () => r.lt,
      dsPadNumber: () => w.qW,
      findAllScripts: () => D.V5,
      findW3cTraceParent: () => D.ef,
      formatTraceParent: () => D.L0,
      getExtensionByName: () => B.Y8,
      isBeaconApiSupported: () => Q.Uf,
      isCrossOriginError: () => B.vv,
      isInternalApplicationInsightsEndpoint: () => r.Qu,
      isSampledFlag: () => D.N7,
      isValidSpanId: () => D.wN,
      isValidTraceId: () => D.hX,
      isValidTraceParent: () => D.mJ,
      msToTimeSpan: () => B.bb,
      parseConnectionString: () => s.H,
      parseTraceParent: () => D.ZI,
      strNotSpecified: () => A.R2,
      stringToBoolOrDefault: () => B.Dt,
      urlGetAbsoluteUrl: () => R.wX,
      urlGetCompleteUrl: () => R.k6,
      urlGetPathName: () => R.Gz,
      urlParseFullHost: () => R.M0,
      urlParseHost: () => R.PS,
      urlParseUrl: () => R.cM,
      utlCanUseLocalStorage: () => T.BW,
      utlCanUseSessionStorage: () => T.AN,
      utlDisableStorage: () => T.Nu,
      utlEnableStorage: () => T.iw,
      utlGetLocalStorage: () => T.Se,
      utlGetSessionStorage: () => T.vH,
      utlGetSessionStorageKeys: () => T.T9,
      utlRemoveSessionStorage: () => T.v7,
      utlRemoveStorage: () => T.tm,
      utlSetLocalStorage: () => T._M,
      utlSetSessionStorage: () => T.Dt,
      utlSetStoragePrefix: () => T.vh
    });
    if (require.j == 606) {
      var r = require(42318);
    }
    if (require.j == 606) {
      var o = require(15122);
    }
    if (require.j == 606) {
      var s = require(74484);
    }
    if (require.j == 606) {
      var a = require(52910);
    }
    if (require.j == 606) {
      var A = require(55025);
    }
    if (require.j == 606) {
      var c = require(21062);
    }
    if (require.j == 606) {
      var u = require(43072);
    }
    if (require.j == 606) {
      var l = require(65397);
    }
    if (require.j == 606) {
      var g = require(45014);
    }
    if (require.j == 606) {
      var d = require(51448);
    }
    if (require.j == 606) {
      var h = require(1365);
    }
    if (require.j == 606) {
      var f = require(82445);
    }
    if (require.j == 606) {
      var p = require(64164);
    }
    if (require.j == 606) {
      var m = require(27358);
    }
    if (require.j == 606) {
      var I = require(29762);
    }
    if (require.j == 606) {
      var E = require(16628);
    }
    if (require.j == 606) {
      var y = require(8596);
    }
    if (require.j == 606) {
      var w = require(67975);
    }
    if (require.j == 606) {
      var _ = require(93602);
    }
    if (require.j == 606) {
      var v = require(81575);
    }
    if (require.j == 606) {
      var b = require(7374);
    }
    if (require.j == 606) {
      var B = require(60087);
    }
    if (require.j == 606) {
      var Q = require(7292);
    }
    if (require.j == 606) {
      var D = require(91864);
    }
    if (require.j == 606) {
      var S = require(26249);
    }
    if (require.j == 606) {
      var T = require(14658);
    }
    if (require.j == 606) {
      var R = require(59354);
    }
    if (require.j == 606) {
      var k = require(85571);
    }
    var x = 'AppInsightsPropertiesPlugin';
    var P = 'AppInsightsChannelPlugin';
    var F = 'ApplicationInsightsAnalytics';
  },
  52475: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      DD: () => c,
      Lx: () => A,
      NU: () => a
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    function s(e, t, n) {
      if (!e && r.hXl(e)) {
        return t;
      } else {
        if (r.Lmq(e)) {
          return e;
        } else {
          return r.oJg(e)[o.OL]() === 'true';
        }
      }
    }
    function a(e) {
      return {
        mrg: true,
        v: e
      };
    }
    function A(e, t, n) {
      return {
        fb: n,
        isVal: e,
        v: t
      };
    }
    function c(e, t) {
      return {
        fb: t,
        set: s,
        v: !!e
      };
    }
  },
  60991: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      q: () => c
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    function s(e) {
      return e && r.Gvm(e) && (e.isVal || e.fb || r.KhI(e, 'v') || r.KhI(e, 'mrg') || r.KhI(e, 'ref') || e.set);
    }
    function a(e, t, n) {
      var s;
      var a = n.dfVal || r.O9V;
      if (t && n.fb) {
        var A = n.fb;
        if (!r.cyL(A)) {
          A = [A];
        }
        for (var c = 0; c < A[o.oI]; c++) {
          var u = A[c];
          var l = t[u];
          if (a(l)) {
            s = l;
          } else {
            if (e) {
              if (a(l = e.cfg[u])) {
                s = l;
              }
              e.set(e.cfg, r.oJg(u), l);
            }
          }
          if (a(s)) {
            break;
          }
        }
      }
      if (!a(s) && a(n.v)) {
        s = n.v;
      }
      return s;
    }
    function A(e, t, n) {
      var c;
      var u = n;
      if (n && s(n)) {
        u = a(e, t, n);
      }
      if (u) {
        if (s(u)) {
          u = A(e, t, u);
        }
        if (r.cyL(u)) {
          (c = [])[o.oI] = u[o.oI];
        } else {
          if (r.QdQ(u)) {
            c = {};
          }
        }
        if (c) {
          r.zav(u, function (n, r) {
            if (r && s(r)) {
              r = A(e, t, r);
            }
            c[n] = r;
          });
          u = c;
        }
      }
      return u;
    }
    function c(e, t, n, u) {
      var l;
      var g;
      var d;
      var h;
      var f;
      var p;
      var m;
      var I;
      var E = u;
      if (s(E)) {
        l = E.isVal;
        g = E.set;
        p = E[o.XW];
        m = E[o.JQ];
        h = E.mrg;
        if (!(f = E.ref) && r.b07(f)) {
          f = !!h;
        }
        d = a(e, t, E);
      } else {
        d = u;
      }
      if (m) {
        e[o.JQ](t, n);
      }
      var y = true;
      var w = t[n];
      if (!!w || !r.hXl(w)) {
        I = w;
        y = false;
        if (l && I !== d && !l(I)) {
          I = d;
          y = true;
        }
        if (g) {
          y = (I = g(I, d, t)) === d;
        }
      }
      if (y) {
        I = d ? A(e, t, d) : d;
      } else {
        if ((r.QdQ(I) || r.cyL(d)) && h && d && (r.QdQ(d) || r.cyL(d))) {
          r.zav(d, function (t, n) {
            c(e, I, t, n);
          });
        }
      }
      e.set(t, n, I);
      if (f) {
        e.ref(t, n);
      }
      if (p) {
        e[o.XW](t, n);
      }
    }
  },
  4296: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      a: () => h,
      e: () => d
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(24276);
    }
    if (require.j == 606) {
      var s = require(96492);
    }
    if (require.j == 606) {
      var a = require(6182);
    }
    if (require.j == 606) {
      var A = require(60991);
    }
    if (require.j == 606) {
      var c = require(75819);
    }
    if (require.j == 606) {
      var u = require(42885);
    }
    if (require.j == 606) {
      var l = require(99147);
    }
    function g(e, t, n) {
      var s;
      var g = l.QA(t);
      if (g) {
        return g;
      }
      var d;
      var h = o.Z('dyncfg', true);
      var f = t && n !== false ? t : l.Dy(t);
      (s = {
        uid: null,
        cfg: f
      })[a.Uw] = e;
      s[a.zs] = function () {
        d[a.zs]();
      };
      s.set = function (t, n, r) {
        try {
          t = c.av(d, t, n, r);
        } catch (t) {
          c.Ds(e, n, 'Setting value', t);
        }
        return t[n];
      };
      s[a.h0] = function (e, t) {
        if (t) {
          r.zav(t, function (t, n) {
            A.q(p, e, t, n);
          });
        }
        return e;
      };
      s[a.x6] = function (e) {
        return function (e, t) {
          var n = {
            fn: t,
            rm: function () {
              n.fn = null;
              e = null;
              t = null;
            }
          };
          r.vF1(n, 'toJSON', {
            v: function () {
              return `WatcherHandler${n.fn ? '' : '[X]'}`;
            }
          });
          e.use(n, t);
          return n;
        }(d, e);
      };
      s.ref = function (e, t) {
        var n;
        return c.tF(d, e, t, (n = {}, n[0] = true, n))[t];
      };
      s[a.XW] = function (e, t) {
        var n;
        return c.tF(d, e, t, (n = {}, n[1] = true, n))[t];
      };
      s[a.JQ] = function (e, t) {
        var n;
        return c.tF(d, e, t, (n = {}, n[2] = true, n))[t];
      };
      s._block = function (e, t) {
        d.use(null, function (n) {
          var o = d.upd;
          try {
            if (!r.b07(t)) {
              d.upd = t;
            }
            e(n);
          } finally {
            d.upd = o;
          }
        });
      };
      var p = s;
      r.vF1(p, 'uid', {
        c: false,
        e: false,
        w: false,
        v: h
      });
      d = u.B(p);
      c.i5(d, f, 'config', 'Creating');
      return p;
    }
    function d(e, t, n, r) {
      var o = g(n, e || {}, r);
      if (t) {
        o[a.h0](o.cfg, t);
      }
      return o;
    }
    function h(e, t, n) {
      var o = e[l.nM] || e;
      if (!o.cfg || o.cfg !== e && o.cfg[l.nM] !== o) {
        (function (e, t) {
          if (e) {
            e[a.on](t);
            e[a.ih](2, 108, t);
          } else {
            l.If(t);
          }
        })(n, s.xW + r.mmD(e));
        return d(e, null, n)[a.x6](t);
      } else {
        return o[a.x6](t);
      }
    }
  },
  75819: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Ds: () => c,
      av: () => l,
      i5: () => d,
      tF: () => g
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(96492);
    }
    if (require.j == 606) {
      var s = require(6182);
    }
    if (require.j == 606) {
      var a = require(99147);
    }
    var A = require.j == 606 ? ['push', 'pop', 'shift', 'unshift', 'splice'] : null;
    function c(e, t, n, o) {
      if (e) {
        e[s.ih](3, 108, `${n} [${t}] failed - ${r.mmD(o)}`);
      }
    }
    function u(e, t) {
      var n = r.kgX(e, t);
      return n && n.get;
    }
    function l(e, t, n, A) {
      if (t) {
        var g = u(t, n);
        if (g && !!g[e.prop]) {
          t[n] = A;
        } else {
          (function (e, t, n, A) {
            var g = {
              n,
              h: [],
              trk: function (t) {
                if (t && t.fn) {
                  if (r.rDm(g.h, t) === -1) {
                    g.h[s.y5](t);
                  }
                  e.trk(t, g);
                }
              },
              clr: function (e) {
                var t = r.rDm(g.h, e);
                if (t !== -1) {
                  g.h[s.Ic](t, 1);
                }
              }
            };
            var h = true;
            var f = false;
            function p() {
              if (h) {
                f = f || a.hF(p, e, A);
                if (A && !A[a.nM] && f) {
                  A = d(e, A, n, 'Converting');
                }
                h = false;
              }
              var t = e.act;
              if (t) {
                g.trk(t);
              }
              return A;
            }
            p[e.prop] = {
              chng: function () {
                e.add(g);
              }
            };
            r.vF1(t, g.n, {
              g: p,
              s: function (m) {
                if (A !== m) {
                  if (p[e.ro] && !e.upd) {
                    a.If(`[${n}] is read-only:${r.mmD(t)}`);
                  }
                  if (h) {
                    f = f || a.hF(p, e, A);
                    h = false;
                  }
                  var I = f && p[e.rf];
                  if (f) {
                    if (I) {
                      r.zav(A, function (e) {
                        A[e] = m ? m[e] : o.HP;
                      });
                      try {
                        r.zav(m, function (t, n) {
                          l(e, A, t, n);
                        });
                        m = A;
                      } catch (t) {
                        c((e.hdlr || {})[s.Uw], n, 'Assigning', t);
                        f = false;
                      }
                    } else {
                      if (A && A[a.nM]) {
                        r.zav(A, function (t) {
                          var n = u(A, t);
                          if (n) {
                            var r = n[e.prop];
                            if (r) {
                              r.chng();
                            }
                          }
                        });
                      }
                    }
                  }
                  if (m !== A) {
                    var E = m && a.hF(p, e, m);
                    if (!I && E) {
                      m = d(e, m, n, 'Converting');
                    }
                    A = m;
                    f = E;
                  }
                  e.add(g);
                }
              }
            });
          })(e, t, n, A);
        }
      }
      return t;
    }
    function g(e, t, n, r) {
      if (t) {
        var o = u(t, n);
        var A = o && !!o[e.prop];
        var g = r && r[0];
        var d = r && r[1];
        var h = r && r[2];
        if (!A) {
          if (h) {
            try {
              a.V9(t);
            } catch (t) {
              c((e.hdlr || {})[s.Uw], n, 'Blocking', t);
            }
          }
          try {
            l(e, t, n, t[n]);
            o = u(t, n);
          } catch (t) {
            c((e.hdlr || {})[s.Uw], n, 'State', t);
          }
        }
        if (g) {
          o[e.rf] = g;
        }
        if (d) {
          o[e.ro] = d;
        }
        if (h) {
          o[e.blkVal] = true;
        }
      }
      return t;
    }
    function d(e, t, n, o) {
      try {
        r.zav(t, function (n, r) {
          l(e, t, n, r);
        });
        if (!t[a.nM]) {
          r.UxO(t, a.nM, {
            get: function () {
              return e[s.K0];
            }
          });
          (function (e, t, n) {
            if (r.cyL(t)) {
              r.Iuo(A, function (r) {
                var o = t[r];
                t[r] = function () {
                  var r = [];
                  for (var a = 0; a < arguments.length; a++) {
                    r[a] = arguments[a];
                  }
                  var A = o[s.y9](this, r);
                  d(e, t, n, 'Patching');
                  return A;
                };
              });
            }
          })(e, t, n);
        }
      } catch (t) {
        c((e.hdlr || {})[s.Uw], n, o, t);
      }
      return t;
    }
  },
  42885: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      B: () => c
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(64400);
    }
    if (require.j == 606) {
      var s = require(6182);
    }
    var a = '[[ai_';
    var A = ']]';
    function c(e) {
      var t;
      var n;
      var c = r.jjc(a + 'get' + e.uid + A);
      var u = r.jjc(a + 'ro' + e.uid + A);
      var l = r.jjc(a + 'rf' + e.uid + A);
      var g = r.jjc(a + 'blkVal' + e.uid + A);
      var d = r.jjc(a + 'dtl' + e.uid + A);
      var h = null;
      var f = null;
      function p(t, o) {
        var a = n.act;
        try {
          n.act = t;
          if (t && t[d]) {
            r.Iuo(t[d], function (e) {
              e.clr(t);
            });
            t[d] = [];
          }
          o({
            cfg: e.cfg,
            set: e.set.bind(e),
            setDf: e[s.h0].bind(e),
            ref: e.ref.bind(e),
            rdOnly: e[s.XW].bind(e)
          });
        } catch (t) {
          var A = e[s.Uw];
          if (A) {
            A[s.ih](1, 107, r.mmD(t));
          }
          throw t;
        } finally {
          n.act = a || null;
        }
      }
      function m() {
        if (h) {
          var e = h;
          h = null;
          if (f) {
            f[s._w]();
          }
          f = null;
          var t = [];
          r.Iuo(e, function (e) {
            if (e && (e[d] && (r.Iuo(e[d], function (t) {
              t.clr(e);
            }), e[d] = null), e.fn)) {
              try {
                p(e, e.fn);
              } catch (e) {
                t[s.y5](e);
              }
            }
          });
          if (h) {
            try {
              m();
            } catch (e) {
              t[s.y5](e);
            }
          }
          if (t[s.oI] > 0) {
            o.P('Watcher error(s): ', t);
          }
        }
      }
      (t = {
        prop: c,
        ro: u,
        rf: l
      })[s.JQ] = g;
      t[s.K0] = e;
      t.add = function (e) {
        if (e && e.h[s.oI] > 0) {
          if (!h) {
            h = [];
          }
          if (!f) {
            f = r.dRz(function () {
              f = null;
              m();
            }, 0);
          }
          for (var t = 0; t < e.h[s.oI]; t++) {
            var n = e.h[t];
            if (n && r.rDm(h, n) === -1) {
              h[s.y5](n);
            }
          }
        }
      };
      t[s.zs] = m;
      t.use = p;
      t.trk = function (e, t) {
        if (e) {
          var n = e[d] = e[d] || [];
          if (r.rDm(n, t) === -1) {
            n[s.y5](t);
          }
        }
      };
      return n = t;
    }
  },
  99147: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Dy: () => c,
      Hf: () => g,
      If: () => h,
      QA: () => u,
      V9: () => l,
      hF: () => d,
      nM: () => s
    });
    var r = require(269);
    if (require.j == 606) {
      var o = require(6182);
    }
    var s = r.eCG('[[ai_dynCfg_1]]');
    var a = r.eCG('[[ai_blkDynCfg_1]]');
    var A = r.eCG('[[ai_frcDynCfg_1]]');
    function c(e) {
      var t;
      if (e && (r.cyL(e) ? (t = [])[o.oI] = e[o.oI] : r.QdQ(e) && (t = {}), t)) {
        r.zav(e, function (e, n) {
          t[e] = c(n);
        });
        return t;
      }
      return e;
    }
    function u(e) {
      if (e) {
        var t = e[s] || e;
        if (t.cfg && (t.cfg === e || t.cfg[s] === t)) {
          return t;
        }
      }
      return null;
    }
    function l(e) {
      if (e && (r.QdQ(e) || r.cyL(e))) {
        try {
          e[a] = true;
        } catch (e) {}
      }
      return e;
    }
    function g(e) {
      if (e) {
        try {
          e[A] = true;
        } catch (e) {}
      }
      return e;
    }
    function d(e, t, n) {
      var o = false;
      if (n && !e[t.blkVal]) {
        if (!(o = n[A]) && !n[a]) {
          o = r.QdQ(n) || r.cyL(n);
        }
      }
      return o;
    }
    function h(e) {
      r.zkd(`InvalidAccess:${e}`);
    }
  },
  84282: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      H: () => o,
      o: () => s
    });
    if (require.j == 606) {
      var r = require(269);
    }
    var o = require.j == 606 ? r.WSA : null;
    var s = require.j == 606 ? r.fn0 : null;
  },
  13662: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      x: () => o
    });
    var r = require(84282);
    var o = r.H({
      Unknown: 0,
      NonRetryableStatus: 1,
      InvalidEvent: 2,
      SizeLimitExceeded: 3,
      KillSwitch: 4,
      QueueFull: 5
    });
    r.H({
      Unknown: 0,
      NonRetryableStatus: 1,
      CleanStorage: 2,
      MaxInStorageTimeExceeded: 3
    });
  },
  54875: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      f: () => r
    });
    var r = require(84282).H({
      NONE: 0,
      PENDING: 3,
      INACTIVE: 1,
      ACTIVE: 2
    });
  },
  32897: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      b: () => r
    });
    var r = require(84282).H({
      DISABLED: 0,
      CRITICAL: 1,
      WARNING: 2,
      DEBUG: 3
    });
  },
  35494: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      T: () => r
    });
    var r = 100;
  },
  64400: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      P: () => a
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    var s;
    function a(e, t) {
      if (!s) {
        s = r.aqQ('AggregationError', function (e, t) {
          if (t[o.oI] > 1) {
            e.errors = t[1];
          }
        });
      }
      var n = e || 'One or more errors occurred.';
      r.Iuo(t, function (e, t) {
        n += `
${t} > ${r.mmD(e)}`;
      });
      throw new s(n, t || []);
    }
  },
  82774: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      _: () => F
    });
    var r = require(10659);
    var o = require(68279);
    var s = require(8205);
    var a = require(269);
    var A = require(4296);
    var c = require(54875);
    var u = require(6182);
    var l = require(34013);
    var g = require(27847);
    var d = require(25034);
    var h = require(24276);
    var f = require(27867);
    var p = require(23775);
    var m = require(13673);
    var I = require(96492);
    var E = require(51356);
    var y = require(28156);
    var w = require(72317);
    var _ = require(90380);
    var v;
    var b = function (e) {
      function t() {
        var n;
        var r;
        var s = e.call(this) || this;
        function A() {
          n = 0;
          r = [];
        }
        s.identifier = 'TelemetryInitializerPlugin';
        s.priority = 199;
        A();
        o.A(t, s, function (e, t) {
          e.addTelemetryInitializer = function (e) {
            return function (e, t, n) {
              var r = {
                id: t,
                fn: n
              };
              a.Yny(e, r);
              return {
                remove: function () {
                  a.Iuo(e, function (t, n) {
                    if (t.id === r.id) {
                      e[u.Ic](n, 1);
                      return -1;
                    }
                  });
                }
              };
            }(r, n++, e);
          };
          e[I.qT] = function (t, n) {
            if (function (e, t, n) {
              var r = false;
              for (var o = e[u.oI], s = 0; s < o; ++s) {
                var A = e[s];
                if (A) {
                  try {
                    if (A.fn[u.y9](null, [t]) === false) {
                      r = true;
                      break;
                    }
                  } catch (e) {
                    p.ZP(n, 2, 64, `Telemetry initializer failed: ${m.lL(e)}`, {
                      exception: a.mmD(e)
                    }, true);
                  }
                }
              }
              return !r;
            }(r, t, n ? n[u.e4]() : e[u.e4]())) {
              e[u.$5](t, n);
            }
          };
          e[u.tn] = function () {
            A();
          };
        });
        return s;
      }
      r.qU(t, e);
      t.__ieDyn = 1;
      return t;
    }(require(98257).s);
    var B = require(60836);
    var Q = require(98969);
    var D = 'Plugins must provide initialize method';
    var S = 'SDK is still unloading...';
    var T = a.ZHX(((v = {
      cookieCfg: {}
    })[I.jy] = {
      rdOnly: true,
      ref: true,
      v: []
    }, v[I.LZ] = {
      rdOnly: true,
      ref: true,
      v: []
    }, v[I.Bw] = {
      ref: true,
      v: {}
    }, v[I.Yd] = I.HP, v.loggingLevelConsole = 0, v.diagnosticLogInterval = I.HP, v));
    function R(e, t) {
      return new y.NS(t);
    }
    function k(e, t) {
      var n = false;
      a.Iuo(t, function (t) {
        if (t === e) {
          n = true;
          return -1;
        }
      });
      return n;
    }
    function x(e, t, n, r) {
      if (n) {
        a.zav(n, function (n, o) {
          if (r && a.QdQ(o) && a.QdQ(t[n])) {
            x(e, t[n], o, r);
          }
          if (r && a.QdQ(o) && a.QdQ(t[n])) {
            x(e, t[n], o, r);
          } else {
            e.set(t, n, o);
          }
        });
      }
    }
    function P(e, t) {
      var n = null;
      var r = -1;
      a.Iuo(e, function (e, o) {
        if (e.w === t) {
          n = e;
          r = o;
          return -1;
        }
      });
      return {
        i: r,
        l: n
      };
    }
    var F = function () {
      function e() {
        var t;
        var n;
        var v;
        var F;
        var M;
        var O;
        var N;
        var L;
        var K;
        var U;
        var j;
        var q;
        var G;
        var Y;
        var H;
        var J;
        var z;
        var $;
        var W;
        var V;
        var X;
        var Z;
        var ee;
        var te;
        var ne;
        var re;
        var oe;
        var ie;
        var se;
        var ae;
        var Ae;
        var ce;
        o.A(e, this, function (e) {
          function o() {
            se = true;
            if (a.hXl(X)) {
              re = c.f[u.Yq];
              p.ZP(v, 1, 112, 'ikey can\'t be resolved from promises');
            } else {
              re = c.f.ACTIVE;
            }
            ue();
          }
          function ue() {
            if (n) {
              e.releaseQueue();
              e[u.h4]();
            }
          }
          function le(e) {
            if ((!ae || !ae[u.XM]) && !ce) {
              if (e || v && v.queue[u.oI] > 0) {
                if (!Ae) {
                  Ae = true;
                  ve(t[u.x6](function (e) {
                    var t = e.cfg.diagnosticLogInterval;
                    if (!t || !(t > 0)) {
                      t = 10000;
                    }
                    var n = false;
                    if (ae) {
                      n = ae[u.XM];
                      ae[u._w]();
                    }
                    (ae = a.AHH(Ie, t)).unref();
                    ae[u.XM] = n;
                  }));
                }
                ae[u.XM] = true;
              }
            }
            return ae;
          }
          function ge() {
            var e = {};
            te = [];
            function t(t) {
              if (t) {
                a.Iuo(t, function (t) {
                  if (t[u.Ju] && t[u.s] && !e[t.identifier]) {
                    var n = t[u.Ju] + '=' + t[u.s];
                    te[u.y5](n);
                    e[t.identifier] = t;
                  }
                });
              }
            }
            t(q);
            if (j) {
              a.Iuo(j, function (e) {
                t(e);
              });
            }
            t(U);
          }
          function de() {
            n = false;
            (t = A.e({}, T, e[u.Uw])).cfg[u.Bl] = 1;
            a.vF1(e, 'config', {
              g: function () {
                return t.cfg;
              },
              s: function (t) {
                e.updateCfg(t, false);
              }
            });
            a.vF1(e, 'pluginVersionStringArr', {
              g: function () {
                if (!te) {
                  ge();
                }
                return te;
              }
            });
            a.vF1(e, 'pluginVersionString', {
              g: function () {
                if (!ne) {
                  if (!te) {
                    ge();
                  }
                  ne = te.join(';');
                }
                return ne || I.m5;
              }
            });
            a.vF1(e, 'logger', {
              g: function () {
                if (!v) {
                  v = new p.wq(t.cfg);
                  t[u.Uw] = v;
                }
                return v;
              },
              s: function (e) {
                t[u.Uw] = e;
                if (v !== e) {
                  l.K(v, false);
                  v = e;
                }
              }
            });
            e[u.Uw] = new p.wq(t.cfg);
            ee = [];
            var r = e.config[I.jy] || [];
            r.splice(0, r[u.oI]);
            a.Yny(r, ee);
            Y = new b();
            F = [];
            l.K(M, false);
            M = null;
            O = null;
            N = null;
            l.K(L, false);
            L = null;
            K = null;
            U = [];
            j = null;
            q = null;
            G = false;
            H = null;
            J = h.Z('AIBaseCore', true);
            z = B.P();
            V = null;
            X = null;
            $ = Q.w();
            Z = [];
            ne = null;
            te = null;
            ce = false;
            ae = null;
            Ae = false;
            re = 0;
            oe = null;
            ie = null;
            se = false;
            null;
          }
          function he() {
            var n = w.i8(Ce(), t.cfg, e);
            n[u.by](le);
            return n;
          }
          function fe(t) {
            var n = function (e, t, n) {
              var r;
              var o = [];
              var s = [];
              var A = {};
              a.Iuo(n, function (n) {
                if (a.hXl(n) || a.hXl(n[u.mE])) {
                  a.$8(D);
                }
                var r = n[I.Vo];
                var c = n[u.Ju];
                if (n && r) {
                  if (a.hXl(A[r])) {
                    A[r] = c;
                  } else {
                    p.OG(e, `Two extensions have same priority #${r} - ${A[r]}, ${c}`);
                  }
                }
                if (!r || r < t) {
                  o[u.y5](n);
                } else {
                  s[u.y5](n);
                }
              });
              (r = {})[I.eT] = o;
              r[I.LZ] = s;
              return r;
            }(e[u.Uw], g.i, U);
            K = null;
            ne = null;
            te = null;
            q = (j || [])[0] || [];
            q = _.Xc(a.Yny(q, n[I.LZ]));
            var r = a.Yny(_.Xc(n[I.eT]), q);
            ee = a.N6t(r);
            var o = e.config[I.jy] || [];
            o.splice(0, o[u.oI]);
            a.Yny(o, ee);
            var s = he();
            if (q && q[u.oI] > 0) {
              _.pI(s[u.$o](q), r);
            }
            _.pI(s, r);
            if (t) {
              ye(t);
            }
          }
          function pe(e) {
            var t = null;
            var n = null;
            var r = [];
            a.Iuo(ee, function (t) {
              if (t[u.Ju] === e && t !== Y) {
                n = t;
                return -1;
              }
              if (t.getChannel) {
                r[u.y5](t);
              }
            });
            if (!n && r[u.oI] > 0) {
              a.Iuo(r, function (t) {
                if (!(n = t.getChannel(e))) {
                  return -1;
                }
              });
            }
            if (n) {
              t = {
                plugin: n,
                setEnabled: function (e) {
                  _.Cr(n)[I.Hr] = !e;
                },
                isEnabled: function () {
                  var e = _.Cr(n);
                  return !e[u.Ik] && !e[I.Hr];
                },
                remove: function (e, t) {
                  var r;
                  if (e === undefined) {
                    e = true;
                  }
                  var o = [n];
                  (r = {
                    reason: 1
                  })[u.tI] = e;
                  var s = r;
                  me(o, s, function (e) {
                    if (e) {
                      fe({
                        reason: 32,
                        removed: o
                      });
                    }
                    if (t) {
                      t(e);
                    }
                  });
                }
              };
            }
            return t;
          }
          function Ce() {
            if (!K) {
              var n = (ee || []).slice();
              if (a.rDm(n, Y) === -1) {
                n[u.y5](Y);
              }
              K = w.PV(_.Xc(n), t.cfg, e);
            }
            return K;
          }
          function me(n, r, o) {
            if (n && n[u.oI] > 0) {
              var s = w.PV(n, t.cfg, e);
              var A = w.tS(s, e);
              A[u.by](function () {
                var e = false;
                var t = [];
                a.Iuo(U, function (r, o) {
                  if (k(r, n)) {
                    e = true;
                  } else {
                    t[u.y5](r);
                  }
                });
                U = t;
                ne = null;
                te = null;
                var r = [];
                if (j) {
                  a.Iuo(j, function (t, o) {
                    var s = [];
                    a.Iuo(t, function (t) {
                      if (k(t, n)) {
                        e = true;
                      } else {
                        s[u.y5](t);
                      }
                    });
                    r[u.y5](s);
                  });
                  j = r;
                }
                if (o) {
                  o(e);
                }
                le();
              });
              A[u.$5](r);
            } else {
              o(false);
            }
          }
          function Ie() {
            if (v && v.queue) {
              var t = v.queue.slice(0);
              v.queue[u.oI] = 0;
              a.Iuo(t, function (t) {
                var n;
                (n = {})[u.RS] = H || `InternalMessageId: ${t[u.JR]}`;
                n[u.FI] = X;
                n[u.fA] = m._u(new Date());
                n.baseType = p.WD.dataType;
                n.baseData = {
                  message: t[u.pM]
                };
                var r = n;
                e.track(r);
              });
            }
          }
          function Ee(e, t, n, r) {
            var o = 1;
            var s = false;
            var A = null;
            function c() {
              o--;
              if (s && o === 0) {
                if (A) {
                  A[u._w]();
                }
                A = null;
                if (t) {
                  t(s);
                }
                t = null;
              }
            }
            r = r || 5000;
            if (q && q[u.oI] > 0) {
              he()[u.$o](q).iterate(function (t) {
                if (t.flush) {
                  o++;
                  var s = false;
                  if (!t.flush(e, function () {
                    s = true;
                    c();
                  }, n) && !s) {
                    if (e && A == null) {
                      A = a.dRz(function () {
                        A = null;
                        c();
                      }, r);
                    } else {
                      c();
                    }
                  }
                }
              });
            }
            s = true;
            c();
            return true;
          }
          function ye(t) {
            var n = w.nU(Ce(), e);
            n[u.by](le);
            if (!e._updateHook || e._updateHook(n, t) !== true) {
              n[u.$5](t);
            }
          }
          function we(t) {
            var n = e[u.Uw];
            if (n) {
              p.ZP(n, 2, 73, t);
              le();
            } else {
              a.$8(t);
            }
          }
          function _e(t) {
            var n = e[u.RF]();
            if (n) {
              n[I.Yp]([t], 2);
            }
          }
          function ve(e) {
            $.add(e);
          }
          de();
          e._getDbgPlgTargets = function () {
            return [ee, F];
          };
          e[u.tZ] = function () {
            return n;
          };
          e.activeStatus = function () {
            return re;
          };
          e._setPendingStatus = function () {
            re = 3;
          };
          e[u.mE] = function (l, g, d, h) {
            var E;
            if (G) {
              a.$8(S);
            }
            if (e[u.tZ]()) {
              a.$8('Core cannot be initialized more than once');
            }
            t = A.e(l, T, d || e[u.Uw], false);
            l = t.cfg;
            ve(t[u.x6](function (e) {
              var t = e.cfg;
              if (re !== 3) {
                ie = t.initInMemoMaxSize || 100;
                var r = t[u.sl];
                var A = t.endpointUrl;
                if (a.hXl(r)) {
                  X = null;
                  re = c.f[u.Yq];
                  var g = 'Please provide instrumentation key';
                  if (n) {
                    p.ZP(v, 1, 100, g);
                    ue();
                  } else {
                    a.$8(g);
                  }
                } else {
                  var d = [];
                  if (a.$XS(r)) {
                    d[u.y5](r);
                    X = null;
                  } else {
                    X = r;
                  }
                  if (a.$XS(A)) {
                    d[u.y5](A);
                    oe = null;
                  } else {
                    oe = A;
                  }
                  if (d[u.oI]) {
                    se = false;
                    re = 3;
                    var h = m.Gh(t.initTimeOut) ? t.initTimeOut : 50000;
                    var f = s.Ov(d);
                    a.dRz(function () {
                      if (!se) {
                        o();
                      }
                    }, h);
                    s.Dv(f, function (e) {
                      try {
                        if (se) {
                          return;
                        }
                        if (!e.rejected) {
                          var t = e[u.pF];
                          if (t && t[u.oI]) {
                            var n = t[0];
                            X = n && n[u.pF];
                            if (t[u.oI] > 1) {
                              var r = t[1];
                              oe = r && r[u.pF];
                            }
                          }
                          if (X) {
                            l[u.sl] = X;
                            l.endpointUrl = oe;
                          }
                        }
                        o();
                      } catch (e) {
                        if (!se) {
                          o();
                        }
                      }
                    });
                  } else {
                    o();
                  }
                  var E = e.ref(e.cfg, I.Bw);
                  a.zav(E, function (t) {
                    e.ref(E, t);
                  });
                }
              }
            }));
            W = function (e, t, n, r) {
              t.add(e[u.x6](function (e) {
                var t = e.cfg.disableDbgExt;
                if (t === true && r) {
                  n[u.h3](r);
                  r = null;
                }
                if (n && !r && t !== true) {
                  r = f.M(e.cfg);
                  n[u.vR](r);
                }
              }));
              return r;
            }(t, $, (M = h) && e[u.RF](), W);
            ve(t[u.x6](function (t) {
              if (t.cfg.enablePerfMgr) {
                var n = t.cfg[I.Yd];
                if (E !== n) {
                  if (!n) {
                    n = R;
                  }
                  m.c2(t.cfg, I.Yd, n);
                  E = n;
                  N = null;
                }
                if (!O && !N && !!a.Tnt(n)) {
                  N = n(e, e[u.RF]());
                }
              } else {
                N = null;
                E = null;
              }
            }));
            e[u.Uw] = d;
            var y = l[I.jy];
            (U = [])[u.y5].apply(U, r.vz(r.vz([], g, false), y, false));
            j = l[I.LZ];
            fe(null);
            if (!q || q[u.oI] === 0) {
              a.$8(`No ${I.LZ} available`);
            }
            if (j && j[u.oI] > 1) {
              var w = e[u.AP]('TeeChannelController');
              if (!w || !w.plugin) {
                p.ZP(v, 1, 28, 'TeeChannel required');
              }
            }
            (function (e, t, n) {
              a.Iuo(t, function (t) {
                var r = A.a(e, t.w, n);
                delete t.w;
                t.rm = function () {
                  r.rm();
                };
              });
            })(l, Z, v);
            Z = null;
            n = true;
            if (re === c.f.ACTIVE) {
              ue();
            }
          };
          e.getChannels = function () {
            var e = [];
            if (q) {
              a.Iuo(q, function (t) {
                e[u.y5](t);
              });
            }
            return a.N6t(e);
          };
          e.track = function (t) {
            y.r2(e[I.kI](), function () {
              return 'AppInsightsCore:track';
            }, function () {
              if (t === null) {
                _e(t);
                a.$8('Invalid telemetry item');
              }
              if (!t[u.RS] && a.hXl(t[u.RS])) {
                _e(t);
                a.$8('telemetry name required');
              }
              t[u.FI] = t[u.FI] || X;
              t[u.fA] = t[u.fA] || m._u(new Date());
              t.ver = t.ver || '4.0';
              if (!G && e[u.tZ]() && re === c.f.ACTIVE) {
                he()[u.$5](t);
              } else {
                if (re !== c.f[u.Yq] && F[u.oI] <= ie) {
                  F[u.y5](t);
                }
              }
            }, function () {
              return {
                item: t
              };
            }, !t.sync);
          };
          e[u.DI] = he;
          e[u.RF] = function () {
            if (!M) {
              M = new E.h(t.cfg);
              e._notificationManager = M;
            }
            return M;
          };
          e[u.vR] = function (t) {
            e.getNotifyMgr()[u.vR](t);
          };
          e[u.h3] = function (e) {
            if (M) {
              M[u.h3](e);
            }
          };
          e.getCookieMgr = function () {
            if (!L) {
              L = d.xN(t.cfg, e[u.Uw]);
            }
            return L;
          };
          e.setCookieMgr = function (e) {
            if (L !== e) {
              l.K(L, false);
              L = e;
            }
          };
          e[I.kI] = function () {
            return O || N || y.Z4();
          };
          e.setPerfMgr = function (e) {
            O = e;
          };
          e.eventCnt = function () {
            return F[u.oI];
          };
          e.releaseQueue = function () {
            if (n && F[u.oI] > 0) {
              var e = F;
              F = [];
              if (re === 2) {
                a.Iuo(e, function (e) {
                  e[u.FI] = e[u.FI] || X;
                  he()[u.$5](e);
                });
              } else {
                p.ZP(v, 2, 20, 'core init status is not active');
              }
            }
          };
          e[u.h4] = function (e) {
            H = e || null;
            ce = false;
            if (ae) {
              ae[u._w]();
            }
            return le(true);
          };
          e[u.Di] = function () {
            ce = true;
            if (ae) {
              ae[u._w]();
            }
            Ie();
          };
          m.o$(e, function () {
            return Y;
          }, ['addTelemetryInitializer']);
          e[u.M5] = function (t, r, o) {
            var A;
            if (t === undefined) {
              t = true;
            }
            if (!n) {
              a.$8('SDK is not initialized');
            }
            if (G) {
              a.$8(S);
            }
            var c;
            (A = {
              reason: 50
            })[u.tI] = t;
            A.flushComplete = false;
            var g = A;
            if (t && !r) {
              c = s.Qo(function (e) {
                r = e;
              });
            }
            var d = w.tS(Ce(), e);
            function h(t) {
              g.flushComplete = t;
              G = true;
              z.run(d, g);
              e[u.Di]();
              d[u.$5](g);
            }
            d[u.by](function () {
              $.run(e[u.Uw]);
              l.k([L, M, v], t, function () {
                de();
                if (r) {
                  r(g);
                }
              });
            }, e);
            Ie();
            if (!Ee(t, h, 6, o)) {
              h(false);
            }
            return c;
          };
          e[u.AP] = pe;
          e.addPlugin = function (e, t, n, r) {
            if (!e) {
              if (r) {
                r(false);
              }
              we(D);
              return;
            }
            var o = pe(e[u.Ju]);
            if (o && !t) {
              if (r) {
                r(false);
              }
              we(`Plugin [${e[u.Ju]}] is already loaded!`);
              return;
            }
            var s = {
              reason: 16
            };
            function a(t) {
              U[u.y5](e);
              s.added = [e];
              fe(s);
              if (r) {
                r(true);
              }
            }
            if (o) {
              var A = [o.plugin];
              me(A, {
                reason: 2,
                isAsync: !!n
              }, function (e) {
                if (e) {
                  s.removed = A;
                  s.reason |= 32;
                  a();
                } else {
                  if (r) {
                    r(false);
                  }
                }
              });
            } else {
              a();
            }
          };
          e.updateCfg = function (n, r) {
            var o;
            if (r === undefined) {
              r = true;
            }
            if (e[u.tZ]()) {
              o = {
                reason: 1,
                cfg: t.cfg,
                oldCfg: a.zwS({}, t.cfg),
                newConfig: a.zwS({}, n),
                merge: r
              };
              n = o.newConfig;
              var s = t.cfg;
              n[I.jy] = s[I.jy];
              n[I.LZ] = s[I.LZ];
            }
            t._block(function (e) {
              var t = e.cfg;
              x(e, t, n, r);
              if (!r) {
                a.zav(t, function (r) {
                  if (!a.KhI(n, r)) {
                    e.set(t, r, I.HP);
                  }
                });
              }
              e[u.h0](t, T);
            }, true);
            t[u.zs]();
            if (o) {
              ye(o);
            }
          };
          e.evtNamespace = function () {
            return J;
          };
          e.flush = Ee;
          e.getTraceCtx = function (e) {
            if (!V) {
              V = _.u7();
            }
            return V;
          };
          e.setTraceCtx = function (e) {
            V = e || null;
          };
          e.addUnloadHook = ve;
          m.RF(e, 'addUnloadCb', function () {
            return z;
          }, 'add');
          e.onCfgChange = function (r) {
            var o;
            var s;
            var c;
            var l;
            if (n) {
              o = A.a(t.cfg, r, e[u.Uw]);
            } else {
              if (!(l = P(s = Z, c = r).l)) {
                l = {
                  w: c,
                  rm: function () {
                    var e = P(s, c);
                    if (e.i !== -1) {
                      s[u.Ic](e.i, 1);
                    }
                  }
                };
                s[u.y5](l);
              }
              o = l;
            }
            return function (e) {
              return a.vF1({
                rm: function () {
                  e.rm();
                }
              }, 'toJSON', {
                v: function () {
                  return `aicore::onCfgChange<${JSON.stringify(e)}>`;
                }
              });
            }(o);
          };
          e.getWParam = function () {
            if (a.Wtk() || t.cfg.enableWParam) {
              return 0;
            } else {
              return -1;
            }
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
  },
  34013: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      K: () => a,
      k: () => A
    });
    if (require.j == 606) {
      var r = require(8205);
    }
    if (require.j == 606) {
      var o = require(269);
    }
    if (require.j == 606) {
      var s = require(6182);
    }
    function a(e, t) {
      if (e && e[s.M5]) {
        return e[s.M5](t);
      }
    }
    function A(e, t, n) {
      var s;
      if (!n) {
        s = r.Qo(function (e) {
          n = e;
        });
      }
      if (e && o.R3R(e) > 0) {
        r.Dv(a(e[0], t), function () {
          A(o.KVm(e, 1), t, n);
        });
      } else {
        n();
      }
      return s;
    }
  },
  98257: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      s: () => m
    });
    var r;
    var o = require(68279);
    var s = require(269);
    var a = require(4296);
    var A = require(6182);
    var c = require(23775);
    var u = require(13673);
    var l = require(96492);
    var g = require(72317);
    var d = require(60836);
    var h = require(98969);
    var f = 'getPlugin';
    (r = {})[l.Bw] = {
      isVal: u.Gh,
      v: {}
    };
    var p = r;
    var m = function () {
      function e() {
        var t;
        var n;
        var r;
        var m;
        var I;
        var E = this;
        function y(e = null) {
          var t = e;
          if (!t) {
            var o = n || g.i8(null, {}, E[l.eT]);
            t = r && r[f] ? o[A.$o](null, r[f]) : o[A.$o](null, r);
          }
          return t;
        }
        function w(e, t, o) {
          a.e(e, p, c.y0(t));
          if (!o && t) {
            o = t[A.DI]()[A.uR]();
          }
          var s = r;
          if (r && r[f]) {
            s = r[f]();
          }
          E[l.eT] = t;
          n = g.i8(o, e, t, s);
        }
        function _() {
          t = false;
          E[l.eT] = null;
          n = null;
          r = null;
          I = h.w();
          m = d.P();
        }
        _();
        o.A(e, E, function (e) {
          e[A.mE] = function (e, n, r, o) {
            w(e, n, o);
            t = true;
          };
          e[A.Ik] = function (t, n) {
            var o;
            var s = e[l.eT];
            if (s && (!t || s === t[l.eT]())) {
              var a;
              var c = false;
              var u = t || g.tS(null, s, r && r[f] ? r[f]() : r);
              var d = n || ((o = {
                reason: 0
              })[A.tI] = false, o);
              if (e[A.tn] && e[A.tn](u, d, h) === true) {
                a = true;
              } else {
                h();
              }
              return a;
            }
            function h() {
              if (!c) {
                c = true;
                m.run(u, n);
                I.run(u[A.e4]());
                if (a === true) {
                  u[A.$5](d);
                }
                _();
              }
            }
          };
          e[A.HC] = function (t, n) {
            var o = e[l.eT];
            if (o && (!t || o === t[l.eT]())) {
              var s;
              var a = false;
              var c = t || g.nU(null, o, r && r[f] ? r[f]() : r);
              var u = n || {
                reason: 0
              };
              if (e._doUpdate && e._doUpdate(c, u, d) === true) {
                s = true;
              } else {
                d();
              }
              return s;
            }
            function d() {
              if (!a) {
                a = true;
                w(c.getCfg(), c.core(), c[A.uR]());
              }
            }
          };
          u.RF(e, '_addUnloadCb', function () {
            return m;
          }, 'add');
          u.RF(e, '_addHook', function () {
            return I;
          }, 'add');
          s.vF1(e, '_unloadHooks', {
            g: function () {
              return I;
            }
          });
        });
        E[A.e4] = function (e) {
          return y(e)[A.e4]();
        };
        E[A.tZ] = function () {
          return t;
        };
        E.setInitialized = function (e) {
          t = e;
        };
        E[A.YH] = function (e) {
          r = e;
        };
        E[A.$5] = function (e, t) {
          if (t) {
            t[A.$5](e);
          } else {
            if (r && s.Tnt(r[l.qT])) {
              r[l.qT](e, null);
            }
          }
        };
        E._getTelCtx = y;
      }
      e.__ieDyn = 1;
      return e;
    }();
  },
  27847: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      i: () => r,
      x: () => o
    });
    var r = 500;
    var o = 'Microsoft_ApplicationInsights_BypassAjaxInstrumentation';
  },
  25034: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      It: () => U,
      gi: () => F,
      um: () => x,
      xN: () => P
    });
    if (require.j == 606) {
      var r = require(269);
    }
    var o = require(52475);
    if (require.j == 606) {
      var s = require(4296);
    }
    if (require.j == 606) {
      var a = require(6182);
    }
    if (require.j == 606) {
      var A = require(23775);
    }
    if (require.j == 606) {
      var c = require(7292);
    }
    var u;
    var l;
    var g;
    var d = require(13673);
    var h = require(96492);
    var f = 'toGMTString';
    var p = 'toUTCString';
    var m = 'cookie';
    var I = 'expires';
    var E = 'isCookieUseDisabled';
    var y = 'disableCookiesUsage';
    var w = '_ckMgr';
    var _ = null;
    var v = null;
    var b = null;
    var B = {};
    var Q = {};
    (u = {
      cookieCfg: o.NU((l = {}, l[h.Fk] = {
        fb: 'cookieDomain',
        dfVal: d.Gh
      }, l.path = {
        fb: 'cookiePath',
        dfVal: d.Gh
      }, l.enabled = h.HP, l.ignoreCookies = h.HP, l.blockedCookies = h.HP, l)),
      cookieDomain: h.HP,
      cookiePath: h.HP
    })[y] = h.HP;
    var D = u;
    function S() {
      if (!g) {
        g = r.nRs(function () {
          return r.YEm();
        });
      }
    }
    function T(e) {
      return !e || e.isEnabled();
    }
    function R(e, t) {
      return !!t && !!e && !!r.cyL(e.ignoreCookies) && r.rDm(e.ignoreCookies, t) !== -1;
    }
    function k(e, t) {
      var n = t[a.XM];
      if (r.hXl(n)) {
        var o = undefined;
        if (!r.b07(e[E])) {
          o = !e[E];
        }
        if (!r.b07(e[y])) {
          o = !e[y];
        }
        n = o;
      }
      return n;
    }
    function x(e, t) {
      var n;
      if (e) {
        n = e.getCookieMgr();
      } else {
        if (t) {
          var r = t.cookieCfg;
          n = r && r[w] ? r[w] : P(t);
        }
      }
      if (!n) {
        n = function (e, t) {
          var n = P[w] || Q[w];
          if (!n) {
            n = P[w] = P(e, t);
            Q[w] = n;
          }
          return n;
        }(t, (e || {})[a.Uw]);
      }
      return n;
    }
    function P(e, t) {
      var n;
      var o;
      var A;
      var u;
      var l;
      var g;
      var m;
      var E;
      var y;
      e = s.e(e || Q, null, t).cfg;
      l = s.a(e, function (t) {
        t[a.h0](t.cfg, D);
        o = t.ref(t.cfg, 'cookieCfg');
        A = o[h.QW] || '/';
        u = o[h.Fk];
        g = k(e, o) !== false;
        m = o.getCookie || L;
        E = o.setCookie || K;
        y = o.delCookie || K;
      }, t);
      (n = {
        isEnabled: function () {
          var n = k(e, o) !== false && g && F(t);
          var r = Q[w];
          if (n && r && _ !== r) {
            n = T(r);
          }
          return n;
        },
        setEnabled: function (e) {
          g = e !== false;
          o[a.XM] = e;
        },
        set: function (e, t, n, s, l) {
          var g = false;
          if (T(_) && !function (e, t) {
            return !!t && !!e && !!r.cyL(e.blockedCookies) && r.rDm(e.blockedCookies, t) !== -1 || R(e, t);
          }(o, e)) {
            var m = {};
            var y = r.EHq(t || h.m5);
            var w = r.HzD(y, ';');
            if (w !== -1) {
              y = r.EHq(r.ZWZ(t, w));
              m = M(r.P0f(t, w + 1));
            }
            d.KY(m, h.Fk, s || u, r.zzB, r.b07);
            if (!r.hXl(n)) {
              var b = c.lT();
              if (r.b07(m[I])) {
                var B = r.f0d() + n * 1000;
                if (B > 0) {
                  var Q = new Date();
                  Q.setTime(B);
                  d.KY(m, I, O(Q, b ? f : p) || O(Q, b ? f : p) || h.m5, r.zzB);
                }
              }
              if (!b) {
                d.KY(m, 'max-age', h.m5 + n, null, r.b07);
              }
            }
            var D = c.g$();
            if (D && D[a.Qg] === 'https:') {
              d.KY(m, 'secure', null, null, r.b07);
              if (v === null) {
                v = !U((r.w3n() || {})[a.tX]);
              }
              if (v) {
                d.KY(m, 'SameSite', 'None', null, r.b07);
              }
            }
            d.KY(m, h.QW, l || A, null, r.b07);
            E(e, N(y, m));
            g = true;
          }
          return g;
        },
        get: function (e) {
          var t = h.m5;
          if (T(_) && !R(o, e)) {
            t = m(e);
          }
          return t;
        },
        del: function (e, t) {
          var n = false;
          if (T(_)) {
            n = _.purge(e, t);
          }
          return n;
        },
        purge: function (e, n) {
          var r;
          var o = false;
          if (F(t)) {
            (r = {})[h.QW] = n || '/';
            r[I] = 'Thu, 01 Jan 1970 00:00:01 GMT';
            var s = r;
            if (!c.lT()) {
              s['max-age'] = '0';
            }
            y(e, N(h.m5, s));
            o = true;
          }
          return o;
        }
      })[a.M5] = function (e) {
        if (l) {
          l.rm();
        }
        l = null;
      };
      var _ = n;
      _[w] = _;
      return _;
    }
    function F(e) {
      if (_ === null) {
        _ = false;
        if (!g) {
          S();
        }
        try {
          var t = g.v || {};
          _ = t[m] !== undefined;
        } catch (t) {
          A.ZP(e, 2, 68, `Cannot access document.cookie - ${d.lL(t)}`, {
            exception: r.mmD(t)
          });
        }
      }
      return _;
    }
    function M(e) {
      var t = {};
      if (e && e[a.oI]) {
        var n = r.EHq(e)[a.sY](';');
        r.Iuo(n, function (e) {
          if (e = r.EHq(e || h.m5)) {
            var n = r.HzD(e, '=');
            if (n === -1) {
              t[e] = null;
            } else {
              t[r.EHq(r.ZWZ(e, n))] = r.EHq(r.P0f(e, n + 1));
            }
          }
        });
      }
      return t;
    }
    function O(e, t) {
      if (r.Tnt(e[t])) {
        return e[t]();
      } else {
        return null;
      }
    }
    function N(e, t) {
      var n = e || h.m5;
      r.zav(t, function (e, t) {
        n += `; ${e}${r.hXl(t) ? h.m5 : `=${t}`}`;
      });
      return n;
    }
    function L(e) {
      var t = h.m5;
      if (!g) {
        S();
      }
      if (g.v) {
        var n = g.v[m] || h.m5;
        if (b !== n) {
          B = M(n);
          b = n;
        }
        t = r.EHq(B[e] || h.m5);
      }
      return t;
    }
    function K(e, t) {
      if (!g) {
        S();
      }
      if (g.v) {
        g.v[m] = e + '=' + t;
      }
    }
    function U(e) {
      return !!r.KgX(e) && (!!d.Ju(e, 'CPU iPhone OS 12') || !!d.Ju(e, 'iPad; CPU OS 12') || !!d.Ju(e, 'Macintosh; Intel Mac OS X 10_14') && !!d.Ju(e, 'Version/') && !!d.Ju(e, 'Safari') || !!d.Ju(e, 'Macintosh; Intel Mac OS X 10_14') && !!r.Cv9(e, 'AppleWebKit/605.1.15 (KHTML, like Gecko)') || !!d.Ju(e, 'Chrome/5') || !!d.Ju(e, 'Chrome/6') || !!d.Ju(e, 'UnrealEngine') && !d.Ju(e, 'Chrome') || !!d.Ju(e, 'UCBrowser/12') || !!d.Ju(e, 'UCBrowser/11'));
    }
  },
  69882: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      aq: () => a,
      cL: () => A
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(96492);
    }
    if (require.j == 606) {
      var s = require(76535);
    }
    function a() {
      var e = A();
      return r.P0f(e, 0, 8) + '-' + r.P0f(e, 8, 12) + '-' + r.P0f(e, 12, 16) + '-' + r.P0f(e, 16, 20) + '-' + r.P0f(e, 20);
    }
    function A() {
      var e;
      var t = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
      var n = o.m5;
      for (var a = 0; a < 4; a++) {
        n += t[(e = s.VN()) & 15] + t[e >> 4 & 15] + t[e >> 8 & 15] + t[e >> 12 & 15] + t[e >> 16 & 15] + t[e >> 20 & 15] + t[e >> 24 & 15] + t[e >> 28 & 15];
      }
      var A = t[8 + (s.VN() & 3) | 0];
      return r.hKY(n, 0, 8) + r.hKY(n, 9, 4) + '4' + r.hKY(n, 13, 3) + A + r.hKY(n, 16, 3) + r.hKY(n, 19, 12);
    }
  },
  24276: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      T: () => h,
      Z: () => d
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(13673);
    }
    if (require.j == 606) {
      var a = require(96492);
    }
    var A = require(76535);
    var c = '3.3.2';
    var u = `.${A.Si(6)}`;
    var l = 0;
    function g(e) {
      return e[o.re] === 1 || e[o.re] === 9 || !+e[o.re];
    }
    function d(e, t = false) {
      return s.cH(e + l++ + (t ? `.${c}` : a.m5) + u);
    }
    function h(e) {
      var t = {
        id: d(`_aiData-${e || a.m5}.${c}`),
        accept: function (e) {
          return g(e);
        },
        get: function (e, n, o, a) {
          var A = e[t.id];
          if (A) {
            return A[s.cH(n)];
          } else {
            if (a) {
              A = function (e, t) {
                var n = t[e.id];
                if (!n) {
                  n = {};
                  try {
                    if (g(t)) {
                      r.vF1(t, e.id, {
                        e: false,
                        v: n
                      });
                    }
                  } catch (e) {}
                }
                return n;
              }(t, e);
              A[s.cH(n)] = o;
            }
            return o;
          }
        },
        kill: function (e, t) {
          if (e && e[t]) {
            try {
              delete e[t];
            } catch (e) {}
          }
        }
      };
      return t;
    }
  },
  27867: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      $: () => l,
      M: () => g
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    var s;
    var a = require(96492);
    var A = [a.fc, a.Yp, a.dI, a.l0];
    var c = null;
    function u(e, t) {
      return function () {
        var n = arguments;
        var r = l(t);
        if (r) {
          var s = r.listener;
          if (s && s[e]) {
            s[e][o.y9](s, n);
          }
        }
      };
    }
    function l(e) {
      var t;
      var n = c;
      if (!n && e.disableDbgExt !== true) {
        n = c || ((t = r.zS2('Microsoft')) && (c = t.ApplicationInsights), c);
      }
      if (n) {
        return n.ChromeDbgExt;
      } else {
        return null;
      }
    }
    function g(e) {
      if (!s) {
        s = {};
        for (var t = 0; t < A[o.oI]; t++) {
          s[A[t]] = u(A[t], e);
        }
      }
      return s;
    }
  },
  23775: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      OG: () => _,
      Oc: () => v,
      WD: () => m,
      ZP: () => w,
      wq: () => E,
      y0: () => I
    });
    var r;
    var o = require(68279);
    var s = require(269);
    var a = require(4296);
    var A = require(6182);
    var c = require(27867);
    var u = require(7292);
    var l = require(96492);
    var g = 'warnToConsole';
    var d = {
      loggingLevelConsole: 0,
      loggingLevelTelemetry: 1,
      maxMessageLimit: 25,
      enableDebug: false
    };
    (r = {})[0] = null;
    r[1] = 'errorToConsole';
    r[2] = g;
    r[3] = 'debugToConsole';
    var h = r;
    function f(e) {
      if (e) {
        return `"${e[A.W7](/\"/g, l.m5)}"`;
      } else {
        return l.m5;
      }
    }
    function p(e, t) {
      var n = u.U5();
      if (n) {
        var r = 'log';
        if (n[e]) {
          r = e;
        }
        if (s.Tnt(n[r])) {
          n[r](t);
        }
      }
    }
    var m = function () {
      function e(e, t, n = false, r) {
        var o = this;
        o[A.JR] = e;
        o[A.pM] = (n ? 'AI: ' : 'AI (Internal): ') + e;
        var s = l.m5;
        if (u.Z()) {
          s = u.hm().stringify(r);
        }
        var a = (t ? ` message:${f(t)}` : l.m5) + (r ? ` props:${f(s)}` : l.m5);
        o[A.pM] += a;
      }
      e.dataType = 'MessageData';
      return e;
    }();
    function I(e, t) {
      return (e || {})[A.Uw] || new E(t);
    }
    var E = function () {
      function e(t) {
        this.identifier = 'DiagnosticLogger';
        this.queue = [];
        var n;
        var r;
        var u;
        var l;
        var f;
        var I = 0;
        var E = {};
        o.A(e, this, function (e) {
          function o(t, n) {
            if (!(I >= u)) {
              var o = true;
              var s = `AITR_${n[A.JR]}`;
              if (E[s]) {
                o = false;
              } else {
                E[s] = true;
              }
              if (o && (t <= r && (e.queue[A.y5](n), I++, y(t === 1 ? 'error' : 'warn', n)), I === u)) {
                var a = 'Internal events throttle limit per PageView reached for this app.';
                var c = new m(23, a, false);
                e.queue[A.y5](c);
                if (t === 1) {
                  e.errorToConsole(a);
                } else {
                  e[A.on](a);
                }
              }
            }
          }
          function y(e, n) {
            var r = c.$(t || {});
            if (r && r[A.e4]) {
              r[A.e4](e, n);
            }
          }
          f = function (t) {
            return a.a(a.e(t, d, e).cfg, function (e) {
              var t = e.cfg;
              n = t[A.Bl];
              r = t.loggingLevelTelemetry;
              u = t.maxMessageLimit;
              l = t.enableDebug;
            });
          }(t || {});
          e.consoleLoggingLevel = function () {
            return n;
          };
          e[A.ih] = function (t, r, a, c, u = false) {
            var d = new m(r, a, u, c);
            if (l) {
              throw s.mmD(d);
            }
            var f = h[t] || g;
            if (s.b07(d[A.pM])) {
              y(`throw${t === 1 ? 'Critical' : 'Warning'}`, d);
            } else {
              if (u) {
                var p = +d[A.JR];
                if (!E[p] && n >= t) {
                  e[f](d[A.pM]);
                  E[p] = true;
                }
              } else {
                if (n >= t) {
                  e[f](d[A.pM]);
                }
              }
              o(t, d);
            }
          };
          e.debugToConsole = function (e) {
            p('debug', e);
            y('warning', e);
          };
          e[A.on] = function (e) {
            p('warn', e);
            y('warning', e);
          };
          e.errorToConsole = function (e) {
            p('error', e);
            y('error', e);
          };
          e.resetInternalMessageCount = function () {
            I = 0;
            E = {};
          };
          e[A.sx] = o;
          e[A.M5] = function (e) {
            if (f) {
              f.rm();
            }
            f = null;
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    function y(e) {
      return e || new E();
    }
    function w(e, t, n, r, o, s = false) {
      y(e)[A.ih](t, n, r, o, s);
    }
    function _(e, t) {
      y(e)[A.on](t);
    }
    function v(e, t, n) {
      y(e)[A.sx](t, n);
    }
  },
  7292: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      $Z: () => U,
      Iu: () => j,
      L0: () => F,
      MY: () => R,
      PV: () => N,
      R7: () => O,
      U5: () => D,
      Uf: () => M,
      Z: () => S,
      cU: () => B,
      g$: () => Q,
      hm: () => T,
      iN: () => k,
      lT: () => P,
      lV: () => x,
      xk: () => L
    });
    if (require.j == 606) {
      var r = require(45664);
    }
    if (require.j == 606) {
      var o = require(269);
    }
    if (require.j == 606) {
      var s = require(6182);
    }
    if (require.j == 606) {
      var a = require(13673);
    }
    if (require.j == 606) {
      var A = require(96492);
    }
    var c = 'documentMode';
    var u = 'location';
    var l = 'console';
    var g = 'JSON';
    var d = 'crypto';
    var h = 'msCrypto';
    var f = 'ReactNative';
    var p = 'msie';
    var m = 'trident/';
    var I = 'XMLHttpRequest';
    var E = null;
    var y = null;
    var w = false;
    var _ = null;
    var v = null;
    function b(e, t) {
      var n = false;
      if (e) {
        try {
          if (!(n = t in e)) {
            var s = e[r.vR];
            if (s) {
              n = t in s;
            }
          }
        } catch (e) {}
        if (!n) {
          try {
            var a = new e();
            n = !o.b07(a[t]);
          } catch (e) {}
        }
      }
      return n;
    }
    function B(e) {
      w = e;
    }
    function Q(e) {
      if (e && w) {
        var t = o.zS2('__mockLocation');
        if (t) {
          return t;
        }
      }
      if (typeof location === r._1 && location) {
        return location;
      } else {
        return o.zS2(u);
      }
    }
    function D() {
      if (typeof console !== r.bA) {
        return console;
      } else {
        return o.zS2(l);
      }
    }
    function S() {
      return Boolean(typeof JSON === r._1 && JSON || o.zS2(g) !== null);
    }
    function T() {
      if (S()) {
        return JSON || o.zS2(g);
      } else {
        return null;
      }
    }
    function R() {
      return o.zS2(d);
    }
    function k() {
      return o.zS2(h);
    }
    function x() {
      var e = o.w3n();
      return !!e && !!e.product && e.product === f;
    }
    function P() {
      var e = o.w3n();
      if (e && (e[s.tX] !== y || E === null)) {
        var t = ((y = e[s.tX]) || A.m5)[s.OL]();
        E = a.Ju(t, p) || a.Ju(t, m);
      }
      return E;
    }
    function F(e = null) {
      if (!e) {
        var t = o.w3n() || {};
        e = t ? (t.userAgent || A.m5)[s.OL]() : A.m5;
      }
      var n = (e || A.m5)[s.OL]();
      if (a.Ju(n, p)) {
        var r = o.YEm() || {};
        return Math.max(parseInt(n[s.sY](p)[1]), r[c] || 0);
      }
      if (a.Ju(n, m)) {
        var u = parseInt(n[s.sY](m)[1]);
        if (u) {
          return u + 4;
        }
      }
      return null;
    }
    function M(e) {
      if (v === null || e === false) {
        v = o.w9M() && Boolean(o.w3n().sendBeacon);
      }
      return v;
    }
    function O(e) {
      var t = false;
      try {
        t = !!o.zS2('fetch');
        var n = o.zS2('Request');
        if (t && e && n) {
          t = b(n, 'keepalive');
        }
      } catch (e) {}
      return t;
    }
    function N() {
      if (_ === null && (_ = typeof XDomainRequest !== r.bA) && L()) {
        _ = _ && !b(o.zS2(I), 'withCredentials');
      }
      return _;
    }
    function L() {
      var e = false;
      try {
        e = !!o.zS2(I);
      } catch (e) {}
      return e;
    }
    function K(e, t) {
      if (e) {
        for (var n = 0; n < e[s.oI]; n++) {
          var r = e[n];
          if (r[s.RS] && r[s.RS] === t) {
            return r;
          }
        }
      }
      return {};
    }
    function U(e) {
      var t = o.YEm();
      if (t && e) {
        return K(t.querySelectorAll('meta'), e).content;
      } else {
        return null;
      }
    }
    function j(e) {
      var t;
      var n = o.FJj();
      if (n) {
        var r = n.getEntriesByType('navigation') || [];
        t = K((r[s.oI] > 0 ? r[0] : {}).serverTiming, e).description;
      }
      return t;
    }
  },
  56149: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Ds: () => G,
      El: () => S,
      Fc: () => Y,
      Hm: () => x,
      ML: () => F,
      Q3: () => M,
      So: () => N,
      Wg: () => j,
      Ym: () => O,
      ee: () => q,
      lQ: () => U,
      mB: () => P,
      oS: () => J,
      sq: () => H,
      vF: () => z,
      zh: () => L
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    var s = require(24276);
    if (require.j == 606) {
      var a = require(96492);
    }
    var A = 'on';
    var c = 'attachEvent';
    var u = 'addEventListener';
    var l = 'detachEvent';
    var g = 'removeEventListener';
    var d = 'events';
    var h = 'visibilitychange';
    var f = 'pagehide';
    var p = 'pageshow';
    var m = 'unload';
    var I = 'beforeunload';
    var E = s.Z('aiEvtPageHide');
    var y = s.Z('aiEvtPageShow');
    var w = /\.[\.]+/g;
    var _ = /[\.]+$/;
    var v = 1;
    var b = s.T('events');
    var B = /^([^.]*)(?:\.(.+)|)/;
    function Q(e) {
      if (e && e[o.W7]) {
        return e[o.W7](/^[\s\.]+|(?=[\s\.])[\.\s]+$/g, a.m5);
      } else {
        return e;
      }
    }
    function D(e, t) {
      var n;
      if (t) {
        var s = a.m5;
        if (r.cyL(t)) {
          s = a.m5;
          r.Iuo(t, function (e) {
            if (e = Q(e)) {
              if (e[0] !== '.') {
                e = `.${e}`;
              }
              s += e;
            }
          });
        } else {
          s = Q(t);
        }
        if (s) {
          if (s[0] !== '.') {
            s = `.${s}`;
          }
          e = (e || a.m5) + s;
        }
      }
      var A = B.exec(e || a.m5) || [];
      (n = {})[o.QM] = A[1];
      n.ns = (A[2] || a.m5).replace(w, '.').replace(_, a.m5)[o.sY]('.').sort().join('.');
      return n;
    }
    function S(e, t, n) {
      var s = [];
      var A = b.get(e, d, {}, false);
      var c = D(t, n);
      r.zav(A, function (e, t) {
        r.Iuo(t, function (e) {
          var t;
          if ((!c[o.QM] || c[o.QM] === e.evtName[o.QM]) && (!c.ns || c.ns == c.ns)) {
            s[o.y5](((t = {})[o.RS] = e.evtName[o.QM] + (e.evtName.ns ? `.${e.evtName.ns}` : a.m5), t.handler = e[o.Yo], t));
          }
        });
      });
      return s;
    }
    function T(e, t, n = true) {
      var r = b.get(e, d, {}, n);
      var o = r[t];
      if (!o) {
        o = r[t] = [];
      }
      return o;
    }
    function R(e, t, n, r) {
      if (e && t && t[o.QM]) {
        if (e[g]) {
          e[g](t[o.QM], n, r);
        } else {
          if (e[l]) {
            e[l](A + t[o.QM], n);
          }
        }
      }
    }
    function k(e, t, n, r) {
      for (var s = t[o.oI]; s--;) {
        var a = t[s];
        if (a) {
          if ((!n.ns || n.ns === a.evtName.ns) && (!r || !!r(a))) {
            R(e, a.evtName, a[o.Yo], a.capture);
            t[o.Ic](s, 1);
          }
        }
      }
    }
    function x(e, t) {
      if (t) {
        return D('xx', r.cyL(t) ? [e].concat(t) : [e, t]).ns[o.sY]('.');
      } else {
        return e;
      }
    }
    function P(e, t, n, r, s) {
      var a;
      if (s === undefined) {
        s = false;
      }
      var l = false;
      if (e) {
        try {
          var g = D(t, r);
          l = function (e, t, n, r) {
            var s = false;
            if (e && t && t[o.QM] && n) {
              if (e[u]) {
                e[u](t[o.QM], n, r);
                s = true;
              } else {
                if (e[c]) {
                  e[c](A + t[o.QM], n);
                  s = true;
                }
              }
            }
            return s;
          }(e, g, n, s);
          if (l && b.accept(e)) {
            (a = {
              guid: v++,
              evtName: g
            })[o.Yo] = n;
            a.capture = s;
            var d = a;
            T(e, g.type)[o.y5](d);
          }
        } catch (e) {}
      }
      return l;
    }
    function F(e, t, n, s, a = false) {
      if (e) {
        try {
          var A = D(t, s);
          var c = false;
          (function (e, t, n) {
            if (t[o.QM]) {
              k(e, T(e, t[o.QM]), t, n);
            } else {
              var s = b.get(e, d, {});
              r.zav(s, function (r, o) {
                k(e, o, t, n);
              });
              if (r.cGk(s)[o.oI] === 0) {
                b.kill(e, d);
              }
            }
          })(e, A, function (e) {
            return (!!A.ns && !n || e[o.Yo] === n) && (c = true, true);
          });
          if (!c) {
            R(e, A, n, a);
          }
        } catch (e) {}
      }
    }
    function M(e, t, n, r = false) {
      return P(e, t, n, null, r);
    }
    function O(e, t, n, r = false) {
      F(e, t, n, null, r);
    }
    function N(e, t, n) {
      var o = false;
      var s = r.zkX();
      if (s) {
        o = P(s, e, t, n);
        o = P(s.body, e, t, n) || o;
      }
      var a = r.YEm();
      if (a) {
        o = P(a, e, t, n) || o;
      }
      return o;
    }
    function L(e, t, n) {
      var o = r.zkX();
      if (o) {
        F(o, e, t, n);
        F(o.body, e, t, n);
      }
      var s = r.YEm();
      if (s) {
        F(s, e, t, n);
      }
    }
    function K(e, t, n, s) {
      var a = false;
      if (t && e && e[o.oI] > 0) {
        r.Iuo(e, function (e) {
          if (e) {
            if (!n || r.rDm(n, e) === -1) {
              a = N(e, t, s) || a;
            }
          }
        });
      }
      return a;
    }
    function U(e, t, n, s) {
      var a = false;
      if (t && e && r.cyL(e) && !(a = K(e, t, n, s)) && n && n[o.oI] > 0) {
        a = K(e, t, null, s);
      }
      return a;
    }
    function j(e, t, n) {
      if (e && r.cyL(e)) {
        r.Iuo(e, function (e) {
          if (e) {
            L(e, t, n);
          }
        });
      }
    }
    function q(e, t, n) {
      return U([I, m, f], e, t, n);
    }
    function G(e, t) {
      j([I, m, f], e, t);
    }
    function Y(e, t, n) {
      var o = x(E, n);
      var s = K([f], e, t, o);
      if (!t || r.rDm(t, h) === -1) {
        s = K([h], function (t) {
          var n = r.YEm();
          if (e && n && n.visibilityState === 'hidden') {
            e(t);
          }
        }, t, o) || s;
      }
      if (!s && t) {
        s = Y(e, null, n);
      }
      return s;
    }
    function H(e, t) {
      var n = x(E, t);
      j([f], e, n);
      j([h], null, n);
    }
    function J(e, t, n) {
      var o = x(y, n);
      var s = K([p], e, t, o);
      if (!(s = K([h], function (t) {
        var n = r.YEm();
        if (e && n && n.visibilityState === 'visible') {
          e(t);
        }
      }, t, o) || s) && t) {
        s = J(e, null, n);
      }
      return s;
    }
    function z(e, t) {
      var n = x(y, t);
      j([p], e, n);
      j([h], null, n);
    }
  },
  13673: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      CP: () => b,
      Gh: () => l,
      H$: () => x,
      HU: () => Q,
      IL: () => P,
      Ju: () => d,
      KY: () => p,
      LU: () => F,
      Lo: () => B,
      RF: () => y,
      SZ: () => _,
      _u: () => h,
      c2: () => m,
      cH: () => g,
      hW: () => v,
      jL: () => S,
      lL: () => f,
      o$: () => w,
      qz: () => E,
      r4: () => D,
      w3: () => L
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(45664);
    }
    if (require.j == 606) {
      var s = require(6182);
    }
    if (require.j == 606) {
      var a = require(96492);
    }
    var A = /-([a-z])/g;
    var c = /([^\w\d_$])/g;
    var u = /^(\d+[\w\d_$])/;
    Object.getPrototypeOf;
    function l(e) {
      return !r.hXl(e);
    }
    function g(e) {
      var t = e;
      if (t && r.KgX(t)) {
        t = (t = (t = t[s.W7](A, function (e, t) {
          return t.toUpperCase();
        }))[s.W7](c, '_'))[s.W7](u, function (e, t) {
          return `_${t}`;
        });
      }
      return t;
    }
    function d(e, t) {
      return !!e && !!t && r.HzD(e, t) !== -1;
    }
    function h(e) {
      return e && e.toISOString() || '';
    }
    function f(e) {
      if (r.bJ7(e)) {
        return e[s.RS];
      } else {
        return a.m5;
      }
    }
    function p(e, t, n, r, o) {
      var s = n;
      if (e) {
        if ((s = e[t]) !== n && (!o || !!o(s)) && (!r || !!r(n))) {
          s = n;
          e[t] = s;
        }
      }
      return s;
    }
    function m(e, t, n) {
      var o;
      if (e) {
        if (!(o = e[t]) && r.hXl(o)) {
          o = r.b07(n) ? {} : n;
          e[t] = o;
        }
      } else {
        o = r.b07(n) ? {} : n;
      }
      return o;
    }
    function I(e, t) {
      var n = null;
      var o = null;
      if (r.Tnt(e)) {
        n = e;
      } else {
        o = e;
      }
      return function () {
        var e = arguments;
        if (n) {
          o = n();
        }
        if (o) {
          return o[t][s.y9](o, e);
        }
      };
    }
    function E(e, t, n) {
      if (e && t && r.Gvm(e) && r.Gvm(t)) {
        function o(o) {
          if (r.KgX(o)) {
            var s = t[o];
            if (r.Tnt(s)) {
              if (!n || !!n(o, true, t, e)) {
                e[o] = I(t, o);
              }
            } else {
              if (!n || !!n(o, false, t, e)) {
                if (r.KhI(e, o)) {
                  delete e[o];
                }
                r.vF1(e, o, {
                  g: function () {
                    return t[o];
                  },
                  s: function (e) {
                    t[o] = e;
                  }
                });
              }
            }
          }
        }
        for (var s in t) {
          o(s);
        }
      }
      return e;
    }
    function y(e, t, n, o, s) {
      if (e && t && n && (s !== false || r.b07(e[t]))) {
        e[t] = I(n, o);
      }
    }
    function w(e, t, n, o) {
      if (e && t && r.Gvm(e) && r.cyL(n)) {
        r.Iuo(n, function (n) {
          if (r.KgX(n)) {
            y(e, n, t, n, o);
          }
        });
      }
      return e;
    }
    function _(e) {
      return function () {
        var t = this;
        if (e) {
          r.zav(e, function (e, n) {
            t[e] = n;
          });
        }
      };
    }
    function v(e) {
      if (e && r.vE3) {
        e = o.s6(r.vE3({}, e));
      }
      return e;
    }
    function b(e, t, n, o, a, A) {
      var c = arguments;
      var u = c[0] || {};
      var l = c[s.oI];
      var g = false;
      var d = 1;
      if (l > 0 && r.Lmq(u)) {
        g = u;
        u = c[d] || {};
        d++;
      }
      if (!r.Gvm(u)) {
        u = {};
      }
      for (; d < l; d++) {
        var h = c[d];
        var f = r.cyL(h);
        var p = r.Gvm(h);
        for (var m in h) {
          if (f && m in h || p && r.KhI(h, m)) {
            var I = h[m];
            var E = undefined;
            if (g && I && ((E = r.cyL(I)) || r.QdQ(I))) {
              var y = u[m];
              if (E) {
                if (!r.cyL(y)) {
                  y = [];
                }
              } else {
                if (!r.QdQ(y)) {
                  y = {};
                }
              }
              I = b(g, y, I);
            }
            if (I !== undefined) {
              u[m] = I;
            }
          }
        }
      }
      return u;
    }
    function B(e) {
      try {
        return e.responseText;
      } catch (e) {}
      return null;
    }
    function Q(e, t) {
      if (e) {
        return `XDomainRequest,Response:${B(e)}` || 0;
      } else {
        return t;
      }
    }
    function D(e, t) {
      if (e) {
        return `XMLHttpRequest,Status:${e[s.cV]},Response:${B(e)}` || 0;
      } else {
        return t;
      }
    }
    function S(e, t) {
      if (t) {
        if (r.EtT(t)) {
          e = [t].concat(e);
        } else {
          if (r.cyL(t)) {
            e = t.concat(e);
          }
        }
      }
      return e;
    }
    var T = 'Microsoft_ApplicationInsights_BypassAjaxInstrumentation';
    var R = 'withCredentials';
    var k = 'timeout';
    function x(e, t, n, r, o, s) {
      function a(e, t, n) {
        try {
          e[t] = n;
        } catch (e) {}
      }
      if (r === undefined) {
        r = false;
      }
      if (o === undefined) {
        o = false;
      }
      var A = new XMLHttpRequest();
      if (r) {
        a(A, T, r);
      }
      if (n) {
        a(A, R, n);
      }
      A.open(e, t, !o);
      if (n) {
        a(A, R, n);
      }
      if (!o && s) {
        a(A, k, s);
      }
      return A;
    }
    function P(e) {
      var t = {};
      if (r.KgX(e)) {
        var n = r.EHq(e)[s.sY](/[\r\n]+/);
        r.Iuo(n, function (e) {
          if (e) {
            var n = e.indexOf(': ');
            if (n !== -1) {
              var o = r.EHq(e.substring(0, n))[s.OL]();
              var a = r.EHq(e.substring(n + 1));
              t[o] = a;
            } else {
              t[r.EHq(e)] = 1;
            }
          }
        });
      }
      return t;
    }
    function F(e, t, n) {
      if (!e[n] && t && t[s.Az]) {
        var o = t[s.Az](n);
        if (o) {
          e[n] = r.EHq(o);
        }
      }
      return e;
    }
    var M = 'kill-duration';
    var O = 'kill-duration-seconds';
    var N = 'time-delta-millis';
    function L(e, t) {
      var n = {};
      if (e[s.wJ]) {
        n = P(e[s.wJ]());
      } else {
        if (t) {
          n = F(n, e, N);
          n = F(n, e, M);
          n = F(n, e, O);
        }
      }
      return n;
    }
  },
  96492: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Bw: () => u,
      Ev: () => y,
      Fk: () => _,
      HP: () => r,
      Hr: () => c,
      LZ: () => s,
      QW: () => v,
      Vj: () => E,
      Vo: () => d,
      Yd: () => A,
      Yp: () => f,
      dI: () => p,
      eT: () => a,
      fc: () => h,
      jy: () => l,
      kI: () => w,
      l0: () => m,
      m5: () => o,
      qT: () => g,
      s4: () => I,
      xW: () => b
    });
    var r = require.j == 606 ? undefined : null;
    var o = '';
    var s = 'channels';
    var a = 'core';
    var A = 'createPerfMgr';
    var c = 'disabled';
    var u = 'extensionConfig';
    var l = 'extensions';
    var g = 'processTelemetry';
    var d = 'priority';
    var h = 'eventsSent';
    var f = 'eventsDiscarded';
    var p = 'eventsSendRequest';
    var m = 'perfEvent';
    var I = 'offlineEventsStored';
    var E = 'offlineBatchSent';
    var y = 'offlineBatchDrop';
    var w = 'getPerfMgr';
    var _ = 'domain';
    var v = 'path';
    var b = 'Not dynamic - ';
  },
  51356: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      h: () => d
    });
    var r = require(68279);
    var o = require(8205);
    var s = require(269);
    var a = require(4296);
    var A = require(6182);
    var c = require(96492);
    var u = {
      perfEvtsSendAll: false
    };
    function l(e) {
      e.h = null;
      var t = e.cb;
      e.cb = [];
      s.Iuo(t, function (e) {
        s.gBW(e.fn, [e.arg]);
      });
    }
    function g(e, t, n, r) {
      s.Iuo(e, function (e) {
        if (e && e[t]) {
          if (n) {
            n.cb[A.y5]({
              fn: r,
              arg: e
            });
            n.h = n.h || s.dRz(l, 0, n);
          } else {
            s.gBW(r, [e]);
          }
        }
      });
    }
    var d = function () {
      function e(t) {
        var n;
        var l;
        this.listeners = [];
        var d = [];
        var h = {
          h: null,
          cb: []
        };
        var f = a.e(t, u);
        l = f[A.x6](function (e) {
          n = !!e.cfg.perfEvtsSendAll;
        });
        r.A(e, this, function (e) {
          s.vF1(e, 'listeners', {
            g: function () {
              return d;
            }
          });
          e[A.vR] = function (e) {
            d[A.y5](e);
          };
          e[A.h3] = function (e) {
            for (var t = s.rDm(d, e); t > -1;) {
              d[A.Ic](t, 1);
              t = s.rDm(d, e);
            }
          };
          e[c.fc] = function (e) {
            g(d, c.fc, h, function (t) {
              t[c.fc](e);
            });
          };
          e[c.Yp] = function (e, t) {
            g(d, c.Yp, h, function (n) {
              n[c.Yp](e, t);
            });
          };
          e[c.dI] = function (e, t) {
            g(d, c.dI, t ? h : null, function (n) {
              n[c.dI](e, t);
            });
          };
          e[c.l0] = function (e) {
            if (e) {
              if (!!n || !e[A.Zu]()) {
                g(d, c.l0, null, function (t) {
                  if (e[A.tI]) {
                    s.dRz(function () {
                      return t[c.l0](e);
                    }, 0);
                  } else {
                    t[c.l0](e);
                  }
                });
              }
            }
          };
          e[c.s4] = function (e) {
            if (e && e[A.oI]) {
              g(d, c.s4, h, function (t) {
                t[c.s4](e);
              });
            }
          };
          e[c.Vj] = function (e) {
            if (e && e[A.Cd]) {
              g(d, c.Vj, h, function (t) {
                t[c.Vj](e);
              });
            }
          };
          e[c.Ev] = function (e, t) {
            if (e > 0) {
              var n = t || 0;
              g(d, c.Ev, h, function (t) {
                t[c.Ev](e, n);
              });
            }
          };
          e[A.M5] = function (e) {
            var t;
            function n() {
              if (l) {
                l.rm();
              }
              l = null;
              d = [];
              if (h.h) {
                h.h[A._w]();
              }
              h.h = null;
              h.cb = [];
            }
            g(d, 'unload', null, function (n) {
              var r = n[A.M5](e);
              if (r) {
                if (!t) {
                  t = [];
                }
                t[A.y5](r);
              }
            });
            if (t) {
              return o.Qo(function (e) {
                return o.Dv(o.Xf(t), function () {
                  n();
                  e();
                });
              });
            }
            n();
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
  },
  28156: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      NS: () => d,
      Q6: () => g,
      Z4: () => p,
      r2: () => f
    });
    var r = require(68279);
    var o = require(269);
    var s = require(6182);
    var a = require(96492);
    var A = 'ctx';
    var c = 'ParentContextKey';
    var u = 'ChildrenContextKey';
    var l = null;
    var g = function () {
      function e(t, n, r) {
        var a;
        var l = this;
        l.start = o.f0d();
        l[s.RS] = t;
        l[s.tI] = r;
        l[s.Zu] = function () {
          return false;
        };
        if (o.Tnt(n)) {
          o.vF1(l, 'payload', {
            g: function () {
              if (!a && o.Tnt(n)) {
                a = n();
                n = null;
              }
              return a;
            }
          });
        }
        l[s.O_] = function (t) {
          if (t) {
            if (t === e[c] || t === e[u]) {
              return l[t];
            } else {
              return (l[A] || {})[t];
            }
          } else {
            return null;
          }
        };
        l[s.e_] = function (t, n) {
          if (t) {
            if (t === e[c]) {
              if (!l[t]) {
                l[s.Zu] = function () {
                  return true;
                };
              }
              l[t] = n;
            } else {
              if (t === e[u]) {
                l[t] = n;
              } else {
                (l[A] = l[A] || {})[t] = n;
              }
            }
          }
        };
        l[s.Ru] = function () {
          var t = 0;
          var n = l[s.O_](e[u]);
          if (o.cyL(n)) {
            for (var r = 0; r < n[s.oI]; r++) {
              var a = n[r];
              if (a) {
                t += a[s.fA];
              }
            }
          }
          l[s.fA] = o.f0d() - l.start;
          l.exTime = l[s.fA] - t;
          l[s.Ru] = function () {};
        };
      }
      e.ParentContextKey = 'parent';
      e.ChildrenContextKey = 'childEvts';
      return e;
    }();
    var d = function () {
      function e(t) {
        this.ctx = {};
        r.A(e, this, function (e) {
          e.create = function (e, t, n) {
            return new g(e, t, n);
          };
          e.fire = function (e) {
            if (e) {
              e[s.Ru]();
              if (t && o.Tnt(t[a.l0])) {
                t[a.l0](e);
              }
            }
          };
          e[s.e_] = function (t, n) {
            if (t) {
              (e[A] = e[A] || {})[t] = n;
            }
          };
          e[s.O_] = function (t) {
            return (e[A] || {})[t];
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    var h = 'CoreUtils.doPerf';
    function f(e, t, n, r, o) {
      if (e) {
        var A = e;
        if (A[a.kI]) {
          A = A[a.kI]();
        }
        if (A) {
          var l = undefined;
          var d = A[s.O_](h);
          try {
            if (l = A.create(t(), r, o)) {
              if (d && l[s.e_] && (l[s.e_](g[c], d), d[s.O_] && d[s.e_])) {
                var f = d[s.O_](g[u]);
                if (!f) {
                  f = [];
                  d[s.e_](g[u], f);
                }
                f[s.y5](l);
              }
              A[s.e_](h, l);
              return n(l);
            }
          } catch (e) {
            if (l && l[s.e_]) {
              l[s.e_]('exception', e);
            }
          } finally {
            if (l) {
              A.fire(l);
            }
            A[s.e_](h, d);
          }
        }
      }
      return n();
    }
    function p() {
      return l;
    }
  },
  72317: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      PV: () => w,
      W0: () => _,
      i8: () => I,
      nU: () => y,
      tS: () => E
    });
    var r = require(269);
    var o = require(60991);
    var s = require(4296);
    var a = require(6182);
    var A = require(23775);
    var c = require(13673);
    var u = require(96492);
    var l = require(28156);
    var g = require(90380);
    var d = 'TelemetryPluginChain';
    var h = '_hasRun';
    var f = '_getTelCtx';
    var p = 0;
    function m(e, t, n, c) {
      var l = null;
      var g = [];
      if (!t) {
        t = s.e({}, null, n[a.Uw]);
      }
      if (c !== null) {
        l = c ? function (e, t, n) {
          while (e) {
            if (e[a.AP]() === n) {
              return e;
            }
            e = e[a.uR]();
          }
          return w([n], t.config || {}, t);
        }(e, n, c) : e;
      }
      var d = {
        _next: function () {
          var e = l;
          l = e ? e[a.uR]() : null;
          if (!e) {
            var t = g;
            if (t && t[a.oI] > 0) {
              r.Iuo(t, function (e) {
                try {
                  e.func.call(e.self, e.args);
                } catch (e) {
                  A.ZP(n[a.Uw], 2, 73, `Unexpected Exception during onComplete - ${r.mmD(e)}`);
                }
              });
              g = [];
            }
          }
          return e;
        },
        ctx: {
          core: function () {
            return n;
          },
          diagLog: function () {
            return A.y0(n, t.cfg);
          },
          getCfg: function () {
            return t.cfg;
          },
          getExtCfg: function (e, n) {
            var s = h(e, true);
            if (n) {
              r.zav(n, function (e, n) {
                if (r.hXl(s[e])) {
                  var a = t.cfg[e];
                  if (!!a || !r.hXl(a)) {
                    s[e] = a;
                  }
                }
                o.q(t, s, e, n);
              });
            }
            return t[a.h0](s, n);
          },
          getConfig: function (e, n, o = false) {
            var s;
            var a = h(e, false);
            var A = t.cfg;
            if (!a || !a[n] && r.hXl(a[n])) {
              if (!!A[n] || !r.hXl(A[n])) {
                s = A[n];
              }
            } else {
              s = a[n];
            }
            if (s || !r.hXl(s)) {
              return s;
            } else {
              return o;
            }
          },
          hasNext: function () {
            return !!l;
          },
          getNext: function () {
            return l;
          },
          setNext: function (e) {
            l = e;
          },
          iterate: function (e) {
            var t;
            while (t = d._next()) {
              var n = t[a.AP]();
              if (n) {
                e(n);
              }
            }
          },
          onComplete: function (e, t) {
            var n = [];
            for (var o = 2; o < arguments.length; o++) {
              n[o - 2] = arguments[o];
            }
            if (e) {
              g[a.y5]({
                func: e,
                self: r.b07(t) ? d.ctx : t,
                args: n
              });
            }
          }
        }
      };
      function h(e, n) {
        var r = null;
        var o = t.cfg;
        if (o && e) {
          var s = o[u.Bw];
          if (!s && n) {
            s = {};
          }
          o[u.Bw] = s;
          if (s = t.ref(o, u.Bw)) {
            if (!(r = s[e]) && n) {
              r = {};
            }
            s[e] = r;
            r = t.ref(s, e);
          }
        }
        return r;
      }
      return d;
    }
    function I(e, t, n, o) {
      var A = s.e(t);
      var c = m(e, A, n, o);
      var l = c.ctx;
      l[a.$5] = function (e) {
        var t = c._next();
        if (t) {
          t[u.qT](e, l);
        }
        return !t;
      };
      l[a.$o] = function (e = null, t) {
        if (r.cyL(e)) {
          e = w(e, A.cfg, n, t);
        }
        return I(e || l[a.uR](), A.cfg, n, t);
      };
      return l;
    }
    function E(e, t, n) {
      var o = s.e(t.config);
      var A = m(e, o, t, n);
      var c = A.ctx;
      c[a.$5] = function (e) {
        var t = A._next();
        if (t) {
          t[a.M5](c, e);
        }
        return !t;
      };
      c[a.$o] = function (e = null, n) {
        if (r.cyL(e)) {
          e = w(e, o.cfg, t, n);
        }
        return E(e || c[a.uR](), t, n);
      };
      return c;
    }
    function y(e, t, n) {
      var o = s.e(t.config);
      var A = m(e, o, t, n).ctx;
      A[a.$5] = function (e) {
        return A.iterate(function (t) {
          if (r.Tnt(t[a.HC])) {
            t[a.HC](A, e);
          }
        });
      };
      A[a.$o] = function (e = null, n) {
        if (r.cyL(e)) {
          e = w(e, o.cfg, t, n);
        }
        return y(e || A[a.uR](), t, n);
      };
      return A;
    }
    function w(e, t, n, o) {
      var s = null;
      var c = !o;
      if (r.cyL(e) && e[a.oI] > 0) {
        var m = null;
        r.Iuo(e, function (e) {
          if (!c && o === e) {
            c = true;
          }
          if (c && e && r.Tnt(e[u.qT])) {
            var E = function (e, t, n) {
              var o;
              var s = null;
              var c = r.Tnt(e[u.qT]);
              var m = r.Tnt(e[a.YH]);
              o = e ? e[a.Ju] + '-' + e[u.Vo] + '-' + p++ : `Unknown-0-${p++}`;
              var E = {
                getPlugin: function () {
                  return e;
                },
                getNext: function () {
                  return s;
                },
                processTelemetry: _,
                unload: v,
                update: b,
                _id: o,
                _setNext: function (e) {
                  s = e;
                }
              };
              function y() {
                var o;
                if (e && r.Tnt(e[f])) {
                  o = e[f]();
                }
                if (!o) {
                  o = I(E, t, n);
                }
                return o;
              }
              function w(t, n, c, g, f) {
                var p = false;
                var m = e ? e[a.Ju] : d;
                var I = t[h];
                if (!I) {
                  I = t[h] = {};
                }
                t.setNext(s);
                if (e) {
                  l.r2(t[u.eT](), function () {
                    return m + ':' + c;
                  }, function () {
                    I[o] = true;
                    try {
                      var e = s ? s._id : u.m5;
                      if (e) {
                        I[e] = false;
                      }
                      p = n(t);
                    } catch (e) {
                      var l = !s || I[s._id];
                      if (l) {
                        p = true;
                      }
                      if (!s || !l) {
                        A.ZP(t[a.e4](), 1, 73, `Plugin [${m}] failed during ${c} - ${r.mmD(e)}, run flags: ${r.mmD(I)}`);
                      }
                    }
                  }, g, f);
                }
                return p;
              }
              function _(t, n) {
                function r(n) {
                  if (!e || !c) {
                    return false;
                  }
                  var r = g.Cr(e);
                  return !r[a.Ik] && !r[u.Hr] && (m && e[a.YH](s), e[u.qT](t, n), true);
                }
                if (!w(n = n || y(), r, 'processTelemetry', function () {
                  return {
                    item: t
                  };
                }, !t.sync)) {
                  n[a.$5](t);
                }
              }
              function v(t, n) {
                function r() {
                  var r = false;
                  if (e) {
                    var o = g.Cr(e);
                    var s = e[u.eT] || o[u.eT];
                    if (!!e && (!s || s === t.core()) && !o[a.Ik]) {
                      o[u.eT] = null;
                      o[a.Ik] = true;
                      o[a.tZ] = false;
                      if (e[a.Ik] && e[a.Ik](t, n) === true) {
                        r = true;
                      }
                    }
                  }
                  return r;
                }
                if (!w(t, r, 'unload', function () {}, n[a.tI])) {
                  t[a.$5](n);
                }
              }
              function b(t, n) {
                function r() {
                  var r = false;
                  if (e) {
                    var o = g.Cr(e);
                    var s = e[u.eT] || o[u.eT];
                    if (!!e && (!s || s === t.core()) && !o[a.Ik]) {
                      if (e[a.HC] && e[a.HC](t, n) === true) {
                        r = true;
                      }
                    }
                  }
                  return r;
                }
                if (!w(t, r, 'update', function () {}, false)) {
                  t[a.$5](n);
                }
              }
              return r.N6t(E);
            }(e, t, n);
            if (!s) {
              s = E;
            }
            if (m) {
              m._setNext(E);
            }
            m = E;
          }
        });
      }
      if (o && !s) {
        return w([o], t, n);
      } else {
        return s;
      }
    }
    function _(e, t, n, o) {
      var s = I(e, t, n, o);
      c.o$(this, s, r.cGk(s));
    }
  },
  76535: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Si: () => E,
      VN: () => I,
      Z1: () => m
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(7292);
    }
    if (require.j == 606) {
      var a = require(96492);
    }
    var A = 4294967296;
    var c = 4294967295;
    var u = 123456789;
    var l = 987654321;
    var g = false;
    var d = require.j == 606 ? u : null;
    var h = require.j == 606 ? l : null;
    function f(e) {
      if (e < 0) {
        e >>>= 0;
      }
      d = u + e & c;
      h = l - e & c;
      g = true;
    }
    function p() {
      try {
        var e = r.f0d() & 2147483647;
        f((Math.random() * A ^ e) + e);
      } catch (e) {}
    }
    function m(e) {
      if (e > 0) {
        return Math.floor(I() / c * (e + 1)) >>> 0;
      } else {
        return 0;
      }
    }
    function I(e) {
      var t = 0;
      var n = s.MY() || s.iN();
      if (n && n.getRandomValues) {
        t = n.getRandomValues(new Uint32Array(1))[0] & c;
      }
      if (t === 0 && s.lT()) {
        if (!g) {
          p();
        }
        t = function (e) {
          var t = ((h = (h & 65535) * 36969 + (h >> 16) & c) << 16) + ((d = (d & 65535) * 18000 + (d >> 16) & c) & 65535) >>> 0 & c;
          if (!e) {
            t >>>= 0;
          }
          return t;
        }() & c;
      }
      if (t === 0) {
        t = Math.floor(A * Math.random() | 0);
      }
      if (!e) {
        t >>>= 0;
      }
      return t;
    }
    function E(e = 22) {
      for (var t = I() >>> 0, n = 0, r = a.m5; r[o.oI] < e;) {
        n++;
        r += 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(t & 63);
        t >>>= 6;
        if (n === 5) {
          t = (I() << 2 & 4294967295 | t & 3) >>> 0;
          n = 0;
        }
      }
      return r;
    }
  },
  31190: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      x: () => A
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(23775);
    }
    if (require.j == 606) {
      var a = require(7292);
    }
    function A(e, t) {
      try {
        if (e && e !== '') {
          var n = a.hm().parse(e);
          if (n && n[o.cp] && n[o.cp] >= n.itemsAccepted && n.itemsReceived - n.itemsAccepted === n.errors[o.oI]) {
            return n;
          }
        }
      } catch (n) {
        s.ZP(t, 1, 43, `Cannot parse the response. ${n[o.RS] || r.mmD(n)}`, {
          response: e
        });
      }
      return null;
    }
  },
  90856: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      v: () => f
    });
    var r = require(68279);
    var o = require(8205);
    var s = require(269);
    var a = require(6182);
    var A = require(27847);
    var c = require(23775);
    var u = require(7292);
    var l = require(13673);
    var g = '';
    var d = '&NoResponseBody=true';
    var h = 'POST';
    var f = function () {
      function e() {
        var t;
        var n;
        var f;
        var p;
        var m;
        var I;
        var E;
        var y;
        var w;
        var _;
        var v;
        var b;
        var B;
        var Q;
        var D = 0;
        r.A(e, this, function (e, r) {
          var S = true;
          function T(e, t) {
            c.ZP(f, 2, 26, 'Failed to send telemetry.', {
              message: e
            });
            k(t, 400, {});
          }
          function R(e) {
            T('No endpoint url is provided for the batch', e);
          }
          function k(e, t, n, r) {
            try {
              if (e) {
                e(t, n, r);
              }
            } catch (e) {}
          }
          function x(e, t) {
            var n = s.w3n();
            var r = e[a.Vq];
            if (!r) {
              R(t);
              return true;
            }
            r = e[a.Vq] + (B ? d : g);
            var o = e[a.Cd];
            var A = p ? o : new Blob([o], {
              type: 'text/plain;charset=UTF-8'
            });
            return n.sendBeacon(r, A);
          }
          function P(e, t, n) {
            var r = e[a.Cd];
            try {
              if (r) {
                if (x(e, t)) {
                  k(t, 200, {}, g);
                } else {
                  var o = m && m.beaconOnRetry;
                  if (o && s.Tnt(o)) {
                    o(e, t, x);
                  } else {
                    if (y) {
                      y[a.L](e, t, true);
                    }
                    c.ZP(f, 2, 40, '. Failed to send telemetry with Beacon API, retried with normal sender.');
                  }
                }
              }
            } catch (e) {
              if (p) {
                c.OG(f, `Failed to send telemetry using sendBeacon API. Ex:${s.mmD(e)}`);
              }
              k(t, p ? 0 : 400, {}, g);
            }
          }
          function F(e, n, r) {
            var A;
            var c;
            var u;
            var d = e[a.c1] || {};
            if (!r && t) {
              A = o.Qo(function (e, t) {
                c = e;
                u = t;
              });
            }
            if (p && r && e.disableXhrSync) {
              r = false;
            }
            var f = e[a.Vq];
            if (!f) {
              R(n);
              if (c) {
                c(false);
              }
              return;
            }
            var I = l.H$(h, f, S, true, r, e[a.do]);
            function E(t) {
              var r = m && m.xhrOnComplete;
              if (r && s.Tnt(r)) {
                r(t, n, e);
              } else {
                var o = l.Lo(t);
                k(n, t[a.cV], l.w3(t, p), o);
              }
            }
            if (!p) {
              I[a.yy]('Content-type', 'application/json');
            }
            s.Iuo(s.cGk(d), function (e) {
              I[a.yy](e, d[e]);
            });
            I.onreadystatechange = function () {
              if (!p) {
                E(I);
                if (I.readyState === 4 && c) {
                  c(true);
                }
              }
            };
            I.onload = function () {
              if (p) {
                E(I);
              }
            };
            I.onerror = function (e) {
              k(n, p ? I[a.cV] : 400, l.w3(I, p), p ? g : l.r4(I));
              if (u) {
                u(e);
              }
            };
            I.ontimeout = function () {
              k(n, p ? I[a.cV] : 500, l.w3(I, p), p ? g : l.r4(I));
              if (c) {
                c(false);
              }
            };
            I.send(e[a.Cd]);
            return A;
          }
          function M(e, n, r) {
            var c;
            var u;
            var l;
            var f;
            var I = e[a.Vq];
            var y = e[a.Cd];
            var w = p ? y : new Blob([y], {
              type: 'application/json'
            });
            var _ = new Headers();
            var v = y[a.oI];
            var b = false;
            var T = false;
            var x = e[a.c1] || {};
            (c = {
              method: h,
              body: w
            })[A.x] = true;
            var P = c;
            if (e.headers && s.cGk(e.headers)[a.oI] > 0) {
              s.Iuo(s.cGk(x), function (e) {
                _.append(e, x[e]);
              });
              P[a.c1] = _;
            }
            if (E) {
              P.credentials = E;
            } else {
              if (S && p) {
                P.credentials = 'include';
              }
            }
            if (r) {
              P.keepalive = true;
              D += v;
              if (p) {
                if (e._sendReason === 2) {
                  b = true;
                  if (B) {
                    I += d;
                  }
                }
              } else {
                b = true;
              }
            }
            var F = new Request(I, P);
            try {
              F[A.x] = true;
            } catch (e) {}
            if (!r && t) {
              u = o.Qo(function (e, t) {
                l = e;
                f = t;
              });
            }
            if (!I) {
              R(n);
              if (l) {
                l(false);
              }
              return;
            }
            function M(e) {
              k(n, p ? 0 : 400, {}, p ? g : e);
            }
            function O(e, t, r) {
              var o = e[a.cV];
              var A = m.fetchOnComplete;
              if (A && s.Tnt(A)) {
                A(e, n, r || g, t);
              } else {
                k(n, o, {}, r || g);
              }
            }
            try {
              o.Dv(fetch(p ? I : F, p ? P : null), function (t) {
                if (r) {
                  D -= v;
                  v = 0;
                }
                if (!T) {
                  T = true;
                  if (t.rejected) {
                    M(t.reason && t.reason[a.pM]);
                    if (f) {
                      f(t.reason);
                    }
                  } else {
                    var n = t[a.pF];
                    try {
                      if (p || n.ok) {
                        if (p && !n.body) {
                          O(n, null, g);
                          if (l) {
                            l(true);
                          }
                        } else {
                          o.Dv(n.text(), function (t) {
                            O(n, e, t[a.pF]);
                            if (l) {
                              l(true);
                            }
                          });
                        }
                      } else {
                        M(n.statusText);
                        if (l) {
                          l(false);
                        }
                      }
                    } catch (e) {
                      M(s.mmD(e));
                      if (f) {
                        f(e);
                      }
                    }
                  }
                }
              });
            } catch (e) {
              if (!T) {
                M(s.mmD(e));
                if (f) {
                  f(e);
                }
              }
            }
            if (b && !T) {
              T = true;
              k(n, 200, {});
              if (l) {
                l(true);
              }
            }
            if (p && !T && e[a.do] > 0 && Q) {
              Q.set(function () {
                if (!T) {
                  T = true;
                  k(n, 500, {});
                  if (l) {
                    l(true);
                  }
                }
              }, e[a.do]);
            }
            return u;
          }
          function O(e, t, n) {
            var r = s.zkX();
            var o = new XDomainRequest();
            var A = e[a.Cd];
            o.onload = function () {
              var n = l.Lo(o);
              var r = m && m.xdrOnComplete;
              if (r && s.Tnt(r)) {
                r(o, t, e);
              } else {
                k(t, 200, {}, n);
              }
            };
            o.onerror = function () {
              k(t, 400, {}, p ? g : l.HU(o));
            };
            o.ontimeout = function () {
              k(t, 500, {});
            };
            o.onprogress = function () {};
            var u = r && r.location && r.location[a.Qg] || '';
            var d = e[a.Vq];
            if (d) {
              if (!p && d.lastIndexOf(u, 0) !== 0) {
                var I = 'Cannot send XDomain request. The endpoint URL protocol doesn\'t match the hosting page protocol.';
                c.ZP(f, 2, 40, `. ${I}`);
                T(I, t);
                return;
              }
              var E = p ? d : d[a.W7](/^(https?:)/, '');
              o.open(h, E);
              if (e[a.do]) {
                o[a.do] = e[a.do];
              }
              o.send(A);
              if (p && n) {
                if (Q) {
                  Q.set(function () {
                    o.send(A);
                  }, 0);
                }
              } else {
                o.send(A);
              }
            } else {
              R(t);
            }
          }
          function N() {
            D = 0;
            n = false;
            t = false;
            f = null;
            p = null;
            m = null;
            I = null;
            E = null;
            y = null;
            w = false;
            _ = false;
            v = false;
            b = false;
            B = false;
            Q = null;
          }
          N();
          e[a.mE] = function (t, r) {
            f = r;
            if (n) {
              c.ZP(f, 1, 28, 'Sender is already initialized');
            }
            e.SetConfig(t);
            n = true;
          };
          e._getDbgPlgTargets = function () {
            return [n, p, I, t];
          };
          e.SetConfig = function (e) {
            try {
              m = e.senderOnCompleteCallBack || {};
              I = !!e.disableCredentials;
              E = e.fetchCredentials;
              p = !!e.isOneDs;
              t = !!e.enableSendPromise;
              w = !!e.disableXhr;
              _ = !!e.disableBeacon;
              v = !!e.disableBeaconSync;
              Q = e.timeWrapper;
              B = !!e.addNoResponse;
              b = !!e.disableFetchKeepAlive;
              y = {
                sendPOST: F
              };
              if (!p) {
                S = false;
              }
              if (I) {
                var n = u.g$();
                if (n && n.protocol && n.protocol[a.OL]() === 'file:') {
                  S = false;
                }
              }
              return true;
            } catch (e) {}
            return false;
          };
          e.getSyncFetchPayload = function () {
            return D;
          };
          e.getSenderInst = function (e, t) {
            if (e && e[a.oI]) {
              return function (e, t) {
                var n;
                var r = 0;
                var o = null;
                var s = 0;
                while (o == null && s < e[a.oI]) {
                  r = e[s];
                  if (w || r !== 1) {
                    if (r !== 2 || !u.R7(t) || t && b) {
                      if (r === 3 && !!u.Uf() && !(t ? v : _)) {
                        o = P;
                      }
                    } else {
                      o = M;
                    }
                  } else {
                    if (u.PV()) {
                      o = O;
                    } else {
                      if (u.xk()) {
                        o = F;
                      }
                    }
                  }
                  s++;
                }
                if (o) {
                  (n = {
                    _transport: r,
                    _isSync: t
                  })[a.L] = o;
                  return n;
                }
                return null;
              }(e, t);
            } else {
              return null;
            }
          };
          e.getFallbackInst = function () {
            return y;
          };
          e[a.tn] = function (e, t) {
            N();
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
  },
  90380: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Cr: () => u,
      Xc: () => g,
      pI: () => l,
      u7: () => d
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    var s = require(24276);
    if (require.j == 606) {
      var a = require(96492);
    }
    if (require.j == 606) {
      var A = require(91864);
    }
    var c = s.T('plugin');
    function u(e) {
      return c.get(e, 'state', {}, true);
    }
    function l(e, t) {
      var n;
      var s = [];
      var A = null;
      for (var c = e[o.uR](); c;) {
        var l = c[o.AP]();
        if (l) {
          if (A && A[o.YH] && l[a.qT]) {
            A[o.YH](l);
          }
          var g = !!(n = u(l))[o.tZ];
          if (l[o.tZ]) {
            g = l[o.tZ]();
          }
          if (!g) {
            s[o.y5](l);
          }
          A = l;
          c = c[o.uR]();
        }
      }
      r.Iuo(s, function (r) {
        var s = e[a.eT]();
        r[o.mE](e.getCfg(), s, t, e[o.uR]());
        n = u(r);
        if (!r[a.eT] && !n[a.eT]) {
          n[a.eT] = s;
        }
        n[o.tZ] = true;
        delete n[o.Ik];
      });
    }
    function g(e) {
      return e.sort(function (e, t) {
        var n = 0;
        if (t) {
          var r = t[a.qT];
          if (e[a.qT]) {
            n = r ? e[a.Vo] - t[a.Vo] : 1;
          } else {
            if (r) {
              n = -1;
            }
          }
        } else {
          n = e ? 1 : -1;
        }
        return n;
      });
    }
    function d(e) {
      var t = {};
      return {
        getName: function () {
          return t[o.RS];
        },
        setName: function (n) {
          if (e) {
            e.setName(n);
          }
          t[o.RS] = n;
        },
        getTraceId: function () {
          return t[o.P5];
        },
        setTraceId: function (n) {
          if (e) {
            e.setTraceId(n);
          }
          if (A.hX(n)) {
            t[o.P5] = n;
          }
        },
        getSpanId: function () {
          return t[o.wi];
        },
        setSpanId: function (n) {
          if (e) {
            e.setSpanId(n);
          }
          if (A.wN(n)) {
            t[o.wi] = n;
          }
        },
        getTraceFlags: function () {
          return t[o.Rr];
        },
        setTraceFlags: function (n) {
          if (e) {
            e.setTraceFlags(n);
          }
          t[o.Rr] = n;
        }
      };
    }
  },
  60836: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      P: () => a
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(23775);
    }
    function a() {
      var e = [];
      return {
        add: function (t) {
          if (t) {
            e[o.y5](t);
          }
        },
        run: function (t, n) {
          r.Iuo(e, function (e) {
            try {
              e(t, n);
            } catch (e) {
              s.ZP(t[o.e4](), 2, 73, `Unexpected error calling unload handler - ${r.mmD(e)}`);
            }
          });
          e = [];
        }
      };
    }
  },
  98969: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      d: () => c,
      w: () => u
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(23775);
    }
    var a;
    var A;
    function c(e, t) {
      a = e;
      A = t;
    }
    function u() {
      var e = [];
      return {
        run: function (t) {
          var n = e;
          e = [];
          r.Iuo(n, function (e) {
            try {
              (e.rm || e.remove).call(e);
            } catch (e) {
              s.ZP(t, 2, 73, `Unloading:${r.mmD(e)}`);
            }
          });
          if (a && n[o.oI] > a) {
            if (A) {
              A('doUnload', n);
            } else {
              s.ZP(null, 1, 48, 'Max unload hooks exceeded. An excessive number of unload hooks has been detected.');
            }
          }
        },
        add: function (t) {
          if (t) {
            r.Yny(e, t);
            if (a && e[o.oI] > a) {
              if (A) {
                A('Add', e);
              } else {
                s.ZP(null, 1, 48, 'Max unload hooks exceeded. An excessive number of unload hooks has been detected.');
              }
            }
          }
        }
      };
    }
  },
  91864: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      L0: () => b,
      N7: () => v,
      V5: () => Q,
      ZI: () => E,
      ef: () => B,
      hX: () => y,
      mJ: () => _,
      wN: () => w,
      wk: () => I
    });
    if (require.j == 606) {
      var r = require(269);
    }
    if (require.j == 606) {
      var o = require(6182);
    }
    if (require.j == 606) {
      var s = require(69882);
    }
    if (require.j == 606) {
      var a = require(7292);
    }
    if (require.j == 606) {
      var A = require(96492);
    }
    var c = /^([\da-f]{2})-([\da-f]{32})-([\da-f]{16})-([\da-f]{2})(-[^\s]{1,64})?$/i;
    var u = '00';
    var l = 'ff';
    var g = '00000000000000000000000000000000';
    var d = '0000000000000000';
    var h = 1;
    function f(e, t, n) {
      return !!e && e[o.oI] === t && e !== n && !!e.match(/^[\da-f]*$/i);
    }
    function p(e, t, n) {
      if (f(e, t)) {
        return e;
      } else {
        return n;
      }
    }
    function m(e) {
      if (isNaN(e) || e < 0 || e > 255) {
        e = 1;
      }
      for (var t = e.toString(16); t[o.oI] < 2;) {
        t = `0${t}`;
      }
      return t;
    }
    function I(e, t, n, a) {
      var A;
      (A = {})[o.s] = f(a, 2, l) ? a : u;
      A[o.P5] = y(e) ? e : s.cL();
      A[o.wi] = w(t) ? t : r.ZWZ(s.cL(), 16);
      A.traceFlags = n >= 0 && n <= 255 ? n : 1;
      return A;
    }
    function E(e, t) {
      var n;
      if (!e) {
        return null;
      }
      if (r.cyL(e)) {
        e = e[0] || '';
      }
      if (!e || !r.KgX(e) || e[o.oI] > 8192) {
        return null;
      }
      if (e.indexOf(',') !== -1) {
        var s = e[o.sY](',');
        e = s[t > 0 && s[o.oI] > t ? t : 0];
      }
      var a = c.exec(r.EHq(e));
      if (a && a[1] !== l && a[2] !== g && a[3] !== d) {
        (n = {
          version: (a[1] || A.m5)[o.OL](),
          traceId: (a[2] || A.m5)[o.OL](),
          spanId: (a[3] || A.m5)[o.OL]()
        })[o.Rr] = parseInt(a[4], 16);
        return n;
      } else {
        return null;
      }
    }
    function y(e) {
      return f(e, 32, g);
    }
    function w(e) {
      return f(e, 16, d);
    }
    function _(e) {
      return !!e && !!f(e[o.s], 2, l) && !!f(e[o.P5], 32, g) && !!f(e[o.wi], 16, d) && !!f(m(e[o.Rr]), 2);
    }
    function v(e) {
      return !!_(e) && (e[o.Rr] & h) === h;
    }
    function b(e) {
      if (e) {
        var t = m(e[o.Rr]);
        if (!f(t, 2)) {
          t = '01';
        }
        var n = e[o.s] || u;
        if (n !== '00' && n !== 'ff') {
          n = u;
        }
        return `${n.toLowerCase()}-${p(e.traceId, 32, g).toLowerCase()}-${p(e.spanId, 16, d).toLowerCase()}-${t.toLowerCase()}`;
      }
      return '';
    }
    function B(e) {
      var t = 'traceparent';
      var n = E(a.$Z(t), e);
      if (!n) {
        n = E(a.Iu(t), e);
      }
      return n;
    }
    function Q(e) {
      var t = e.getElementsByTagName('script');
      var n = [];
      r.Iuo(t, function (e) {
        var t = e[o.NA]('src');
        if (t) {
          var r = e[o.NA]('crossorigin');
          var s = e.hasAttribute('async') === true;
          var a = e.hasAttribute('defer') === true;
          var A = e[o.NA]('referrerpolicy');
          var c = {
            url: t
          };
          if (r) {
            c.crossOrigin = r;
          }
          if (s) {
            c.async = s;
          }
          if (a) {
            c.defer = a;
          }
          if (A) {
            c.referrerPolicy = A;
          }
          n[o.y5](c);
        }
      });
      return n;
    }
  },
  6182: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      $5: () => x,
      $o: () => j,
      AP: () => S,
      Az: () => ae,
      Bl: () => U,
      Cd: () => ue,
      DI: () => P,
      Di: () => O,
      FI: () => R,
      HC: () => $,
      Ic: () => p,
      Ik: () => q,
      JQ: () => o,
      JR: () => G,
      Ju: () => y,
      K0: () => m,
      L: () => pe,
      M5: () => N,
      NA: () => _e,
      OL: () => r,
      O_: () => le,
      P5: () => Ee,
      QM: () => oe,
      Qg: () => X,
      RF: () => D,
      RS: () => T,
      Rr: () => we,
      Ru: () => de,
      Uw: () => d,
      Vq: () => fe,
      W7: () => ne,
      XM: () => M,
      XW: () => a,
      YH: () => V,
      Yo: () => ie,
      Yq: () => B,
      Zu: () => ce,
      _w: () => I,
      by: () => L,
      c1: () => Ce,
      cV: () => se,
      cp: () => he,
      do: () => me,
      e4: () => J,
      e_: () => ge,
      fA: () => k,
      h0: () => l,
      h3: () => w,
      h4: () => F,
      ih: () => u,
      mE: () => E,
      oI: () => s,
      on: () => c,
      pF: () => Q,
      pM: () => Y,
      re: () => te,
      s: () => K,
      sY: () => ee,
      sl: () => b,
      sx: () => re,
      tI: () => H,
      tX: () => Z,
      tZ: () => v,
      tn: () => z,
      uR: () => W,
      vR: () => _,
      wJ: () => Ae,
      wi: () => ye,
      x6: () => g,
      y5: () => f,
      y9: () => h,
      yy: () => Ie,
      zs: () => A
    });
    var r = 'toLowerCase';
    var o = 'blkVal';
    var s = 'length';
    var a = 'rdOnly';
    var A = 'notify';
    var c = 'warnToConsole';
    var u = 'throwInternal';
    var l = 'setDf';
    var g = 'watch';
    var d = 'logger';
    var h = 'apply';
    var f = 'push';
    var p = 'splice';
    var m = 'hdlr';
    var I = 'cancel';
    var E = 'initialize';
    var y = 'identifier';
    var w = 'removeNotificationListener';
    var _ = 'addNotificationListener';
    var v = 'isInitialized';
    var b = 'instrumentationKey';
    var B = 'INACTIVE';
    var Q = 'value';
    var D = 'getNotifyMgr';
    var S = 'getPlugin';
    var T = 'name';
    var R = 'iKey';
    var k = 'time';
    var x = 'processNext';
    var P = 'getProcessTelContext';
    var F = 'pollInternalLogs';
    var M = 'enabled';
    var O = 'stopPollingInternalLogs';
    var N = 'unload';
    var L = 'onComplete';
    var K = 'version';
    var U = 'loggingLevelConsole';
    var j = 'createNew';
    var q = 'teardown';
    var G = 'messageId';
    var Y = 'message';
    var H = 'isAsync';
    var J = 'diagLog';
    var z = '_doTeardown';
    var $ = 'update';
    var W = 'getNext';
    var V = 'setNextPlugin';
    var X = 'protocol';
    var Z = 'userAgent';
    var ee = 'split';
    var te = 'nodeType';
    var ne = 'replace';
    var re = 'logInternalMessage';
    var oe = 'type';
    var ie = 'handler';
    var se = 'status';
    var ae = 'getResponseHeader';
    var Ae = 'getAllResponseHeaders';
    var ce = 'isChildEvt';
    var ue = 'data';
    var le = 'getCtx';
    var ge = 'setCtx';
    var de = 'complete';
    var he = 'itemsReceived';
    var fe = 'urlString';
    var pe = 'sendPOST';
    var Ce = 'headers';
    var me = 'timeout';
    var Ie = 'setRequestHeader';
    var Ee = 'traceId';
    var ye = 'spanId';
    var we = 'traceFlags';
    var _e = 'getAttribute';
  },
  45664: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Wy: () => c,
      _1: () => o,
      bA: () => s,
      hW: () => r,
      s6: () => A,
      vR: () => a
    });
    var r = 'function';
    var o = 'object';
    var s = 'undefined';
    var a = 'prototype';
    var A = Object;
    var c = A[a];
  },
  10659: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Im: () => a,
      qU: () => c,
      vz: () => u
    });
    var r = require(269);
    if (require.j == 606) {
      var o = require(45664);
    }
    (r.mS$() || {}).Symbol;
    (r.mS$() || {}).Reflect;
    var s = 'hasOwnProperty';
    var a = require.j == 606 ? r.vE3 || function (e) {
      var t;
      for (var n = 1, r = arguments.length; n < r; n++) {
        for (var a in t = arguments[n]) {
          if (o.Wy[s].call(t, a)) {
            e[a] = t[a];
          }
        }
      }
      return e;
    } : null;
    function A(e, t) {
      A = o.s6.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (e, t) {
        e.__proto__ = t;
      } || function (e, t) {
        for (var n in t) {
          if (t[s](n)) {
            e[n] = t[n];
          }
        }
      };
      return A(e, t);
    }
    function c(e, t) {
      function n() {
        this.constructor = e;
      }
      if (typeof t !== o.hW && t !== null) {
        r.zkd(`Class extends value ${String(t)} is not a constructor or null`);
      }
      A(e, t);
      e[o.vR] = t === null ? r.sSX(t) : (n[o.vR] = t[o.vR], new n());
    }
    function u(e, t) {
      for (var n = 0, r = t.length, o = e.length; n < r; n++, o++) {
        e[o] = t[n];
      }
      return e;
    }
  },
  64766: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      AppInsightsCore: () => he._,
      ApplicationInsights: () => ve,
      Sender: () => ge,
      SeverityLevel: () => we.O,
      arrForEach: () => _.Iuo,
      isNullOrUndefined: () => _.hXl,
      proxyFunctions: () => w.o$,
      throwError: () => _.$8
    });
    var r = require(68279);
    var o = require(10659);
    var s = require(55025);
    var a = require(43072);
    var A = require(82445);
    var c = require(51448);
    var u = require(64164);
    var l = require(65397);
    var g = require(45014);
    var d = require(1365);
    var h = require(2845);
    var f = require(85571);
    var p = require(14658);
    var m = require(42318);
    var I = require(52910);
    var E = require(52475);
    var y = require(23775);
    var w = require(13673);
    var _ = require(269);
    var v = require(56149);
    var b = require(24276);
    var B = require(4296);
    var Q = require(72317);
    var D = require(54875);
    var S = require(7292);
    var T = require(90856);
    var R = require(34013);
    var k = require(31190);
    var x = require(98257);
    var P = require(81575);
    var F = require(67975);
    var M = require(21062);
    var O = require(27358);
    var N = require(82586);
    var L = require(14642);
    var K = 'baseType';
    var U = 'baseData';
    var j = 'properties';
    var q = 'true';
    function G(e, t, n) {
      return w.KY(e, t, n, _.zzB);
    }
    function Y(e, t, n) {
      if (!_.hXl(e)) {
        _.zav(e, function (e, r) {
          if (_.EtT(r)) {
            n[e] = r;
          } else {
            if (_.KgX(r)) {
              t[e] = r;
            } else {
              if (S.Z()) {
                t[e] = S.hm()[L.Jj](r);
              }
            }
          }
        });
      }
    }
    function H(e, t) {
      if (!_.hXl(e)) {
        _.zav(e, function (n, r) {
          e[n] = r || t;
        });
      }
    }
    function J(e, t, n, r) {
      var a = new M.L(e, r, t);
      G(a, 'sampleRate', n[s.tU]);
      if ((n[U] || {}).startTime) {
        a.time = w._u(n[U].startTime);
      }
      a.iKey = n.iKey;
      var A = n.iKey.replace(/-/g, '');
      a[L.RS] = a[L.RS].replace('{0}', A);
      (function (e, t, n) {
        var r = n[L.Tc] = n[L.Tc] || {};
        var s = t.ext = t.ext || {};
        var a = t[L.Tc] = t[L.Tc] || [];
        var A = s.user;
        if (A) {
          G(r, P.O.userAuthUserId, A.authId);
          G(r, P.O.userId, A.id || A.localId);
        }
        var c = s.app;
        if (c) {
          G(r, P.O.sessionId, c.sesId);
        }
        var u = s.device;
        if (u) {
          G(r, P.O.deviceId, u.id || u.localId);
          G(r, P.O[L.Xt], u.deviceClass);
          G(r, P.O.deviceIp, u.ip);
          G(r, P.O.deviceModel, u.model);
          G(r, P.O[L.Xt], u[L.Xt]);
        }
        var l = t.ext.web;
        if (l) {
          G(r, P.O.deviceLanguage, l.browserLang);
          G(r, P.O.deviceBrowserVersion, l.browserVer);
          G(r, P.O.deviceBrowser, l.browser);
          var g = n[L.Cd] = n[L.Cd] || {};
          var d = g[U] = g[U] || {};
          var h = d[j] = d[j] || {};
          G(h, 'domain', l.domain);
          G(h, 'isManual', l.isManual ? q : null);
          G(h, 'screenRes', l.screenRes);
          G(h, 'userConsent', l.userConsent ? q : null);
        }
        var f = s.os;
        if (f) {
          G(r, P.O.deviceOS, f[L.RS]);
          G(r, P.O.deviceOSVersion, f.osVer);
        }
        var p = s.trace;
        if (p) {
          G(r, P.O.operationParentId, p.parentID);
          G(r, P.O.operationName, F.Rr(e, p[L.RS]));
          G(r, P.O.operationId, p[L.P5]);
        }
        var m = {};
        for (var I = a[L.oI] - 1; I >= 0; I--) {
          var E = a[I];
          _.zav(E, function (e, t) {
            m[e] = t;
          });
          a.splice(I, 1);
        }
        _.zav(a, function (e, t) {
          m[e] = t;
        });
        var y = o.Im(o.Im({}, r), m);
        if (!y[P.O.internalSdkVersion]) {
          y[P.O.internalSdkVersion] = F.Rr(e, `javascript:${$.Version}`, 64);
        }
        n[L.Tc] = w.hW(y);
      })(e, n, a);
      n[L.Tc] = n[L.Tc] || [];
      return w.hW(a);
    }
    function z(e, t) {
      if (_.hXl(t[U])) {
        y.ZP(e, 1, 46, 'telemetryItem.baseData cannot be null.');
      }
    }
    var $ = {
      Version: '3.3.2'
    };
    function W(e, t, n) {
      z(e, t);
      var r = {};
      var o = {};
      if (t[K] !== a.J[L.Li]) {
        r.baseTypeSource = t[K];
      }
      if (t[K] === a.J[L.Li]) {
        r = t[U][j] || {};
        o = t[U][L.XA] || {};
      } else {
        if (t[U]) {
          Y(t[U], r, o);
        }
      }
      Y(t[L.Cd], r, o);
      if (!_.hXl(n)) {
        H(r, n);
      }
      var s = t[U][L.RS];
      var A = new a.J(e, s, r, o);
      var c = new O.B(a.J[L.Li], A);
      return J(e, a.J[L.Ps], t, c);
    }
    var V;
    var X;
    var Z = function () {
      function e(t, n) {
        var o = [];
        var s = false;
        var a = n.maxRetryCnt;
        this[L.fH] = function () {
          return o;
        };
        this._set = function (e) {
          return o = e;
        };
        r.A(e, this, function (e) {
          e[L.Ws] = function (r) {
            if (e[L.F2]() >= n[L.hi]) {
              if (!s) {
                y.ZP(t, 2, 105, `Maximum in-memory buffer size reached: ${e[L.F2]()}`, true);
                s = true;
              }
            } else {
              r.cnt = r.cnt || 0;
              if (!!_.hXl(a) || !(r.cnt > a)) {
                o[L.y5](r);
              }
            }
          };
          e[L.F2] = function () {
            return o[L.oI];
          };
          e.size = function () {
            var e = o[L.oI];
            for (var t = 0; t < o[L.oI]; t++) {
              e += o[t].item[L.oI];
            }
            if (!n[L.lb]) {
              e += 2;
            }
            return e;
          };
          e[L.nc] = function () {
            o = [];
            s = false;
          };
          e.getItems = function () {
            return o.slice(0);
          };
          e.batchPayloads = function (e) {
            if (e && e[L.oI] > 0) {
              var t = [];
              _.Iuo(e, function (e) {
                t[L.y5](e[L.bd]);
              });
              if (n[L.lb]) {
                return t.join('\n');
              } else {
                return `[${t.join(',')}]`;
              }
            }
            return null;
          };
          e[L.$o] = function (e, n, r) {
            var s = o.slice(0);
            e = e || t;
            n = n || {};
            var a = r ? new ne(e, n) : new ee(e, n);
            _.Iuo(s, function (e) {
              a[L.Ws](e);
            });
            return a;
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    var ee = function (e) {
      function t(n, o) {
        var s = e.call(this, n, o) || this;
        r.A(t, s, function (e, t) {
          e[L.pF] = function (e) {
            t[L.nc]();
          };
          e[L.E4] = function (e) {};
        });
        return s;
      }
      o.qU(t, e);
      t.__ieDyn = 1;
      return t;
    }(Z);
    var te = ['AI_buffer', 'AI_sentBuffer'];
    var ne = function (e) {
      function t(n, o) {
        var s = e.call(this, n, o) || this;
        var a = false;
        var A = o == null ? undefined : o.namePrefix;
        var c = o[L.fD] || {
          getItem: p.vH,
          setItem: p.Dt
        };
        var u = c.getItem;
        var l = c.setItem;
        var g = o.maxRetryCnt;
        r.A(t, s, function (e, r) {
          var o = m(t[L.EW]);
          var s = m(t[L.eZ]);
          var c = function () {
            var e = [];
            try {
              _.Iuo(te, function (t) {
                var n = v(t);
                e = e[L.ux](n);
                if (A) {
                  var r = v(A + '_' + t);
                  e = e[L.ux](r);
                }
              });
              return e;
            } catch (e) {
              y.ZP(n, 2, 41, `Transfer events from previous buffers: ${w.lL(e)}. previous Buffer items can not be removed`, {
                exception: _.mmD(e)
              });
            }
            return [];
          }();
          var d = s[L.ux](c);
          var h = e._set(o[L.ux](d));
          function f(e, t) {
            var n = [];
            var r = [];
            _.Iuo(e, function (e) {
              r[L.y5](e[L.bd]);
            });
            _.Iuo(t, function (e) {
              if (!_.Tnt(e) && _.rDm(r, e[L.bd]) === -1) {
                n[L.y5](e);
              }
            });
            return n;
          }
          function m(e) {
            var t = e;
            return I(t = A ? A + '_' + t : t);
          }
          function I(e) {
            try {
              var t = u(n, e);
              if (t) {
                var r = S.hm().parse(t);
                if (_.KgX(r)) {
                  r = S.hm().parse(r);
                }
                if (r && _.cyL(r)) {
                  return r;
                }
              }
            } catch (t) {
              y.ZP(n, 1, 42, ` storage key: ${e}, ${w.lL(t)}`, {
                exception: _.mmD(t)
              });
            }
            return [];
          }
          function E(e, t) {
            var r = e;
            try {
              r = A ? A + '_' + r : r;
              var o = JSON[L.Jj](t);
              l(n, r, o);
            } catch (e) {
              l(n, r, JSON[L.Jj]([]));
              y.ZP(n, 2, 41, ` storage key: ${r}, ${w.lL(e)}. Buffer cleared`, {
                exception: _.mmD(e)
              });
            }
          }
          function v(e) {
            try {
              var t = I(e);
              var r = [];
              _.Iuo(t, function (e) {
                var t = {
                  item: e,
                  cnt: 0
                };
                r[L.y5](t);
              });
              p.v7(n, e);
              return r;
            } catch (e) {}
            return [];
          }
          if (h[L.oI] > t[L.YX]) {
            h[L.oI] = t[L.YX];
          }
          E(t[L.eZ], []);
          E(t[L.EW], h);
          e[L.Ws] = function (o) {
            if (e[L.F2]() >= t[L.YX]) {
              if (!a) {
                y.ZP(n, 2, 67, `Maximum buffer size reached: ${e[L.F2]()}`, true);
                a = true;
              }
            } else {
              o.cnt = o.cnt || 0;
              if (!!_.hXl(g) || !(o.cnt > g)) {
                r[L.Ws](o);
                E(t.BUFFER_KEY, e[L.fH]());
              }
            }
          };
          e[L.nc] = function () {
            r[L.nc]();
            E(t.BUFFER_KEY, e[L.fH]());
            E(t[L.eZ], []);
            a = false;
          };
          e[L.pF] = function (r) {
            E(t[L.EW], e._set(f(r, e[L.fH]())));
            var o = m(t[L.eZ]);
            if (o instanceof Array && r instanceof Array) {
              if ((o = o[L.ux](r))[L.oI] > t[L.YX]) {
                y.ZP(n, 1, 67, `Sent buffer reached its maximum size: ${o[L.oI]}`, true);
                o[L.oI] = t[L.YX];
              }
              E(t[L.eZ], o);
            }
          };
          e[L.E4] = function (e) {
            var n = m(t[L.eZ]);
            n = f(e, n);
            E(t[L.eZ], n);
          };
          e[L.$o] = function (r, o, s) {
            s = !!s;
            var a = e[L.fH]().slice(0);
            var A = m(t[L.eZ]).slice(0);
            r = r || n;
            o = o || {};
            e[L.nc]();
            var c = s ? new t(r, o) : new ee(r, o);
            _.Iuo(a, function (e) {
              c[L.Ws](e);
            });
            if (s) {
              c[L.pF](A);
            }
            return c;
          };
        });
        return s;
      }
      var n;
      o.qU(t, e);
      n = t;
      t.VERSION = '_1';
      t.BUFFER_KEY = `AI_buffer${n.VERSION}`;
      t.SENT_BUFFER_KEY = `AI_sentBuffer${n.VERSION}`;
      t.MAX_BUFFER_SIZE = 2000;
      return t;
    }(Z);
    var re = function () {
      function e(t) {
        r.A(e, this, function (e) {
          function n(e, s) {
            var a = '__aiCircularRefCheck';
            var A = {};
            if (!e) {
              y.ZP(t, 1, 48, 'cannot serialize object because it is null or undefined', {
                name: s
              }, true);
              return A;
            }
            if (e[a]) {
              y.ZP(t, 2, 50, 'Circular reference detected while serializing object', {
                name: s
              }, true);
              return A;
            }
            if (!e.aiDataContract) {
              if (s === 'measurements') {
                A = o(e, 'number', s);
              } else {
                if (s === 'properties') {
                  A = o(e, 'string', s);
                } else {
                  if (s === 'tags') {
                    A = o(e, 'string', s);
                  } else {
                    if (_.cyL(e)) {
                      A = r(e, s);
                    } else {
                      y.ZP(t, 2, 49, 'Attempting to serialize an object which does not implement ISerializable', {
                        name: s
                      }, true);
                      try {
                        S.hm()[L.Jj](e);
                        A = e;
                      } catch (e) {
                        y.ZP(t, 1, 48, e && _.Tnt(e[L.xE]) ? e[L.xE]() : 'Error serializing object', null, true);
                      }
                    }
                  }
                }
              }
              return A;
            }
            e[a] = true;
            _.zav(e.aiDataContract, function (o, a) {
              var c = _.Tnt(a) ? a() & 1 : a & 1;
              var u = _.Tnt(a) ? a() & 4 : a & 4;
              var l = a & 2;
              var g = e[o] !== undefined;
              var d = _.Gvm(e[o]) && e[o] !== null;
              if (!c || g || l) {
                if (!u) {
                  var h = undefined;
                  if ((h = d ? l ? r(e[o], o) : n(e[o], o) : e[o]) !== undefined) {
                    A[o] = h;
                  }
                }
              } else {
                y.ZP(t, 1, 24, 'Missing required field specification. The field is required but not present on source', {
                  field: o,
                  name: s
                });
              }
            });
            delete e[a];
            return A;
          }
          function r(e, r) {
            var o;
            if (e) {
              if (_.cyL(e)) {
                o = [];
                for (var s = 0; s < e[L.oI]; s++) {
                  var a = n(e[s], r + '[' + s + ']');
                  o[L.y5](a);
                }
              } else {
                y.ZP(t, 1, 54, 'This field was specified as an array in the contract but the item is not an array.\r\n', {
                  name: r
                }, true);
              }
            }
            return o;
          }
          function o(e, n, r) {
            var o;
            if (e) {
              o = {};
              _.zav(e, function (e, s) {
                if (n === 'string') {
                  if (s === undefined) {
                    o[e] = 'undefined';
                  } else {
                    if (s === null) {
                      o[e] = 'null';
                    } else {
                      if (s[L.xE]) {
                        o[e] = s[L.xE]();
                      } else {
                        o[e] = 'invalid field: toString() is not defined.';
                      }
                    }
                  }
                } else {
                  if (n === 'number') {
                    if (s === undefined) {
                      o[e] = 'undefined';
                    } else {
                      if (s === null) {
                        o[e] = 'null';
                      } else {
                        var a = parseFloat(s);
                        o[e] = a;
                      }
                    }
                  } else {
                    o[e] = `invalid field: ${r} is of unknown type.`;
                    y.ZP(t, 1, o[e], null, true);
                  }
                }
              });
            }
            return o;
          }
          e[L.Af] = function (e) {
            var r = n(e, 'root');
            try {
              return S.hm()[L.Jj](r);
            } catch (e) {
              y.ZP(t, 1, 48, e && _.Tnt(e[L.xE]) ? e[L.xE]() : 'Error serializing object', null, true);
            }
          };
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
    var oe = require(8596);
    var ie = function () {
      function e() {}
      e.prototype.getHashCodeScore = function (t) {
        return this.getHashCode(t) / e.INT_MAX_VALUE * 100;
      };
      e.prototype.getHashCode = function (e) {
        if (e === '') {
          return 0;
        }
        while (e[L.oI] < 8) {
          e = e[L.ux](e);
        }
        var t = 5381;
        for (var n = 0; n < e[L.oI]; ++n) {
          t = (t << 5) + t + e.charCodeAt(n);
          t |= 0;
        }
        return Math.abs(t);
      };
      e.INT_MAX_VALUE = 2147483647;
      return e;
    }();
    function se() {
      var e = new ie();
      var t = new oe.o();
      this[L.Xq] = function (n) {
        if (n[L.Tc] && n[L.Tc][t.userId]) {
          return e.getHashCodeScore(n[L.Tc][t.userId]);
        } else {
          if (n.ext && n.ext.user && n.ext.user.id) {
            return e[L.sb](n.ext.user.id);
          } else {
            if (n[L.Tc] && n[L.Tc][t.operationId]) {
              return e.getHashCodeScore(n[L.Tc][t.operationId]);
            } else {
              if (n.ext && n.ext.telemetryTrace && n.ext.telemetryTrace[L.P5]) {
                return e.getHashCodeScore(n.ext.telemetryTrace[L.P5]);
              } else {
                return Math.random() * 100;
              }
            }
          }
        }
      };
    }
    var ae = function () {
      function e(e, t) {
        this.INT_MAX_VALUE = 2147483647;
        var n = t || y.y0(null);
        if (e > 100 || e < 0) {
          n.throwInternal(2, 58, 'Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.', {
            samplingRate: e
          }, true);
          e = 100;
        }
        this[L.v0] = e;
        this.samplingScoreGenerator = new se();
      }
      e.prototype.isSampledIn = function (e) {
        var t = this[L.v0];
        return t == null || t >= 100 || e.baseType === g.J[L.Li] || this.samplingScoreGenerator[L.Xq](e) < t;
      };
      return e;
    }();
    var Ae = undefined;
    function ce(e) {
      try {
        return e.responseText;
      } catch (e) {}
      return null;
    }
    var ue = _.ZHX(((V = {
      endpointUrl: E.Lx(_.zzB, s._G + s.wc)
    })[L.lb] = E.DD(), V[L.T9] = 15000, V[L.MG] = 102400, V.disableTelemetry = E.DD(), V[L.Fz] = E.DD(true), V.isRetryDisabled = E.DD(), V[L.HT] = E.DD(true), V[L.WU] = E.DD(true), V[L.x9] = E.DD(), V[L.I2] = E.DD(), V[L.yH] = E.DD(), V[L.sl] = Ae, V.namePrefix = Ae, V.samplingPercentage = E.Lx(function (e) {
      return !isNaN(e) && e > 0 && e <= 100;
    }, 100), V[L.YT] = Ae, V[L.MY] = Ae, V[L.hi] = 10000, V[L.fD] = false, V.httpXHROverride = {
      isVal: function (e) {
        return e && e.sendPOST;
      },
      v: Ae
    }, V[L.jq] = E.DD(), V.transports = Ae, V.retryCodes = Ae, V.maxRetryCnt = {
      isVal: _.EtT,
      v: 10
    }, V));
    (X = {})[a.J.dataType] = W;
    X[A.C.dataType] = function (e, t, n) {
      z(e, t);
      var r = t[U].message;
      var o = t[U].severityLevel;
      var s = t[U][j] || {};
      var a = t[U][L.XA] || {};
      Y(t[L.Cd], s, a);
      if (!_.hXl(n)) {
        H(s, n);
      }
      var c = new A.C(e, r, o, s, a);
      var u = new O.B(A.C[L.Li], c);
      return J(e, A.C[L.Ps], t, u);
    };
    X[c.h.dataType] = function (e, t, n) {
      var r;
      z(e, t);
      var o = t[U];
      if (_.hXl(o) || _.hXl(o[j]) || _.hXl(o[j][N.p])) {
        if (!_.hXl(t[L.Cd]) && !_.hXl(t[L.Cd][N.p])) {
          r = t[L.Cd][N.p];
          delete t[L.Cd][N.p];
        }
      } else {
        r = o[j][N.p];
        delete o[j][N.p];
      }
      var s;
      var a = t[U];
      if (((t.ext || {}).trace || {})[L.P5]) {
        s = t.ext.trace[L.P5];
      }
      var A = a.id || s;
      var u = a[L.RS];
      var l = a.uri;
      var g = a[j] || {};
      var d = a[L.XA] || {};
      if (!_.hXl(a.refUri)) {
        g.refUri = a.refUri;
      }
      if (!_.hXl(a.pageType)) {
        g.pageType = a.pageType;
      }
      if (!_.hXl(a.isLoggedIn)) {
        g.isLoggedIn = a.isLoggedIn[L.xE]();
      }
      if (!_.hXl(a[j])) {
        var h = a[j];
        _.zav(h, function (e, t) {
          g[e] = t;
        });
      }
      Y(t[L.Cd], g, d);
      if (!_.hXl(n)) {
        H(g, n);
      }
      var f = new c.h(e, u, l, r, g, d, A);
      var p = new O.B(c.h[L.Li], f);
      return J(e, c.h[L.Ps], t, p);
    };
    X[u.H.dataType] = function (e, t, n) {
      z(e, t);
      var r = t[U];
      var o = r[L.RS];
      var s = r.uri || r.url;
      var a = r[j] || {};
      var A = r[L.XA] || {};
      Y(t[L.Cd], a, A);
      if (!_.hXl(n)) {
        H(a, n);
      }
      var c = new u.H(e, o, s, undefined, a, A, r);
      var l = new O.B(u.H[L.Li], c);
      return J(e, u.H[L.Ps], t, l);
    };
    X[l.WJ.dataType] = function (e, t, n) {
      z(e, t);
      var r = t[U][L.XA] || {};
      var o = t[U][j] || {};
      Y(t[L.Cd], o, r);
      if (!_.hXl(n)) {
        H(o, n);
      }
      var s = t[U];
      var a = l.WJ.CreateFromInterface(e, s, o, r);
      var A = new O.B(l.WJ[L.Li], a);
      return J(e, l.WJ[L.Ps], t, A);
    };
    X[g.J.dataType] = function (e, t, n) {
      z(e, t);
      var r = t[U];
      var o = r[j] || {};
      var s = r[L.XA] || {};
      Y(t[L.Cd], o, s);
      if (!_.hXl(n)) {
        H(o, n);
      }
      var a = new g.J(e, r[L.RS], r.average, r.sampleCount, r.min, r.max, r.stdDev, o, s);
      var A = new O.B(g.J[L.Li], a);
      return J(e, g.J[L.Ps], t, A);
    };
    X[d.A.dataType] = function (e, t, n) {
      z(e, t);
      var r = t[U][L.XA] || {};
      var o = t[U][j] || {};
      Y(t[L.Cd], o, r);
      if (!_.hXl(n)) {
        H(o, n);
      }
      var a = t[U];
      if (_.hXl(a)) {
        y.OG(e, 'Invalid input for dependency data');
        return null;
      }
      var A = a[j] && a[j][s.ym] ? a[j][s.ym] : 'GET';
      var c = new d.A(e, a.id, a.target, a[L.RS], a[N.p], a.success, a.responseCode, A, a.type, a.correlationContext, o, r);
      var u = new O.B(d.A[L.Li], c);
      return J(e, d.A[L.Ps], t, u);
    };
    var le = X;
    var ge = function (e) {
      function t() {
        var n;
        var o;
        var a;
        var A;
        var c;
        var u;
        var l;
        var g = e.call(this) || this;
        g.priority = 1001;
        g.identifier = h.BreezeChannelIdentifier;
        var d;
        var E;
        var x;
        var P;
        var F;
        var M;
        var O;
        var N;
        var K;
        var U;
        var j;
        var q;
        var G;
        var Y;
        var H;
        var J;
        var z;
        var $;
        var W;
        var V;
        var X;
        var Z;
        var te;
        var oe;
        var ie;
        var se;
        var le;
        var ge = 0;
        r.A(t, g, function (e, r) {
          function h(t, r) {
            var o = ce(t);
            if (!t || o + '' != '200' && o !== '') {
              var s = k.x(o);
              if (s && s[L.cp] && s[L.cp] > s[L.ky] && !Y) {
                e[L.u0](r, s);
              } else {
                e[L.$S](r, w.HU(t));
              }
            } else {
              n = 0;
              e[L._7](r, 0);
            }
          }
          function de(e, t, n) {
            if (e.readyState === 4) {
              ve(e.status, t, e.responseURL, n, w.r4(e), ce(e) || e.response);
            }
          }
          function he(e) {
            try {
              if (e) {
                var t = e[L.fS];
                if (t && t[L.oI]) {
                  return t;
                } else {
                  return null;
                }
              }
            } catch (e) {}
            return null;
          }
          function fe(t, n) {
            return !j && (t ? t.baseData && !t[L._Q] ? (n && y.ZP(n, 1, 70, 'Cannot send telemetry without baseData and baseType'), false) : (t[L._Q] ||= 'EventData', e[L.uJ] ? (r = t, e._sample.isSampledIn(r) ? (t[s.tU] = e._sample[L.v0], true) : (n && y.ZP(n, 2, 33, 'Telemetry item was sampled out and not sent', {
              SampleRate: e._sample[L.v0]
            }), false)) : (n && y.ZP(n, 1, 28, 'Sender was not initialized'), false)) : (n && y.ZP(n, 1, 7, 'Cannot send empty telemetry'), false));
            var r;
          }
          function pe(e, n) {
            var r = e.iKey || q;
            var o = t.constructEnvelope(e, r, n, G);
            if (o) {
              var a = false;
              if (e[L.Tc] && e[L.Tc][s.jp]) {
                _.Iuo(e[L.Tc][s.jp], function (e) {
                  try {
                    if (e && e(o) === false) {
                      a = true;
                      y.OG(n, 'Telemetry processor check returns false');
                    }
                  } catch (e) {
                    y.ZP(n, 1, 64, `One of telemetry initializers failed, telemetry item will not be sent: ${w.lL(e)}`, {
                      exception: _.mmD(e)
                    }, true);
                  }
                });
                delete e[L.Tc][s.jp];
              }
              if (!a) {
                return o;
              }
            } else {
              y.ZP(n, 1, 47, 'Unable to create an AppInsights envelope');
            }
          }
          function Ce(t) {
            var n = '';
            var r = e[L.e4]();
            try {
              var o = fe(t, r);
              var s = null;
              if (o) {
                s = pe(t, r);
              }
              if (s) {
                n = c[L.Af](s);
              }
            } catch (e) {}
            return n;
          }
          function me(e) {
            var t = '';
            if (e && e[L.oI]) {
              t = `[${e.join(',')}]`;
            }
            return t;
          }
          function Ie(e) {
            var t;
            var n = we();
            (t = {
              urlString: P
            })[L.Cd] = e;
            t.headers = n;
            return t;
          }
          function Ee(t, n, r, o = true) {
            var s = ye(n);
            var a = t && t.sendPOST;
            if (a && s) {
              if (o) {
                e._buffer[L.pF](n);
              }
              return a(s, function (t, r, o) {
                return function (t, n, r, o) {
                  if (n === 200 && t) {
                    e._onSuccess(t, t[L.oI]);
                  } else {
                    if (o) {
                      e[L.$S](t, o);
                    }
                  }
                }(n, t, 0, o);
              }, !r);
            } else {
              return null;
            }
          }
          function ye(t) {
            var n;
            if (_.cyL(t) && t[L.oI] > 0) {
              var r = e[L.b1].batchPayloads(t);
              var o = we();
              (n = {})[L.Cd] = r;
              n.urlString = P;
              n.headers = o;
              n.disableXhrSync = X;
              n.disableFetchKeepAlive = !Z;
              n[L.fS] = t;
              return n;
            }
            return null;
          }
          function we() {
            try {
              var e = l || {};
              if (m.Qu(P)) {
                e[I.a[6]] = I.a[7];
              }
              return e;
            } catch (e) {}
            return null;
          }
          function _e(t) {
            var n = t ? t[L.oI] : 0;
            return e[L.b1].size() + n > M && (E && !E.isOnline() || e[L.NE](true, null, 10), true);
          }
          function ve(t, r, o, s, a, A) {
            var c = null;
            if (!e._appId) {
              if ((c = k.x(A)) && c.appId) {
                e._appId = c.appId;
              }
            }
            if ((t < 200 || t >= 300) && t !== 0) {
              if ((t === 301 || t === 307 || t === 308) && !be(o)) {
                e[L.$S](r, a);
                return;
              }
              if (E && !E.isOnline()) {
                if (!Y) {
                  Se(r, 10);
                  y.ZP(e[L.e4](), 2, 40, `. Offline - Response Code: ${t}. Offline status: ${!E.isOnline()}. Will retry to send ${r.length} items.`);
                }
                return;
              }
              if (!Y && ke(t)) {
                Se(r);
                y.ZP(e[L.e4](), 2, 40, `. Response code ${t}. Will retry to send ${r[L.oI]} items.`);
              } else {
                e[L.$S](r, a);
              }
            } else {
              be(o);
              if (t === 206) {
                if (!c) {
                  c = k.x(A);
                }
                if (c && !Y) {
                  e[L.u0](r, c);
                } else {
                  e[L.$S](r, a);
                }
              } else {
                n = 0;
                e[L._7](r, s);
              }
            }
          }
          function be(e) {
            return !(u >= 10) && !_.hXl(e) && e !== '' && e !== P && (P = e, ++u, true);
          }
          function Be(e, t) {
            if (!d) {
              return Ee(se && se[L.vO]([3], true), e, t);
            }
            d(e, false);
          }
          function Qe(e) {
            try {
              if (e && e[L.oI]) {
                return _.KgX(e[0]);
              }
            } catch (e) {}
            return null;
          }
          function De(t, n) {
            var r = null;
            if (_.cyL(t)) {
              var o = t[L.oI];
              for (var s = 0; s < t[L.oI]; s++) {
                o += t[s].item[L.oI];
              }
              if (se.getSyncFetchPayload() + o <= 65000) {
                r = 2;
              } else {
                if (S.Uf()) {
                  r = 3;
                } else {
                  r = 1;
                  y.ZP(e[L.e4](), 2, 40, '. Failed to send telemetry with Beacon API, retried with xhrSender.');
                }
              }
              return Ee(se && se[L.vO]([r], true), t, n);
            }
            return null;
          }
          function Se(t, r = 1) {
            if (t && t[L.oI] !== 0) {
              var s = e[L.b1];
              s[L.E4](t);
              n++;
              for (var a = 0, A = t; a < A.length; a++) {
                var c = A[a];
                c.cnt = c.cnt || 0;
                c.cnt++;
                s[L.Ws](c);
              }
              (function (e) {
                var t;
                var r = 10;
                if (n <= 1) {
                  t = r;
                } else {
                  var s = (Math.pow(2, n) - 1) / 2;
                  var a = Math.floor(Math.random() * s * r) + 1;
                  a *= e;
                  t = Math.max(Math.min(a, 3600), r);
                }
                var A = _.f0d() + t * 1000;
                o = A;
              })(r);
              Te();
            }
          }
          function Te() {
            if (!A && !a) {
              var t = o ? Math.max(0, o - _.f0d()) : 0;
              var n = Math.max(H, t);
              A = _.dRz(function () {
                A = null;
                e[L.NE](true, null, 1);
              }, n);
            }
          }
          function Re() {
            if (A) {
              A.cancel();
            }
            A = null;
            o = null;
          }
          function ke(e) {
            if (_.hXl(le)) {
              return e === 401 || e === 408 || e === 429 || e === 500 || e === 502 || e === 503 || e === 504;
            } else {
              return le[L.oI] && le.indexOf(e) > -1;
            }
          }
          function xe() {
            e[L.uJ] = null;
            e[L.b1] = null;
            e._appId = null;
            e._sample = null;
            l = {};
            E = null;
            n = 0;
            o = null;
            a = false;
            A = null;
            c = null;
            u = 0;
            ge = 0;
            d = null;
            x = null;
            P = null;
            F = null;
            M = 0;
            O = false;
            U = null;
            j = false;
            q = null;
            G = Ae;
            Y = false;
            J = null;
            $ = Ae;
            X = false;
            Z = false;
            ie = false;
            te = null;
            oe = null;
            se = null;
            _.vF1(e, '_senderConfig', {
              g: function () {
                return w.CP({}, ue);
              }
            });
          }
          xe();
          e.pause = function () {
            Re();
            a = true;
          };
          e.resume = function () {
            if (a) {
              a = false;
              o = null;
              _e();
              Te();
            }
          };
          e.flush = function (t = true, n, r) {
            if (!a) {
              Re();
              try {
                return e[L.NE](t, null, r || 1);
              } catch (t) {
                y.ZP(e[L.e4](), 1, 22, `flush failed, telemetry will not be collected: ${w.lL(t)}`, {
                  exception: _.mmD(t)
                });
              }
            }
          };
          e.onunloadFlush = function () {
            if (!a) {
              if (O || V) {
                try {
                  return e[L.NE](true, Be, 2);
                } catch (t) {
                  y.ZP(e[L.e4](), 1, 20, `failed to flush with beacon sender on page unload, telemetry will not be collected: ${w.lL(t)}`, {
                    exception: _.mmD(t)
                  });
                }
              } else {
                e.flush(false);
              }
            }
          };
          e.addHeader = function (e, t) {
            l[e] = t;
          };
          e[L.mE] = function (t, s, a, A) {
            if (e.isInitialized()) {
              y.ZP(e[L.e4](), 1, 28, 'Sender is already initialized');
            }
            r[L.mE](t, s, a, A);
            var I = e.identifier;
            c = new re(s.logger);
            n = 0;
            o = null;
            e[L.uJ] = null;
            u = 0;
            var R = e[L.e4]();
            x = v.Hm(b.Z('Sender'), s.evtNamespace && s.evtNamespace());
            E = f.G(x);
            e._addHook(B.a(t, function (t) {
              var n = t.cfg;
              if (n.storagePrefix) {
                p.vh(n.storagePrefix);
              }
              var r = Q.i8(null, n, s).getExtCfg(I, ue);
              _.vF1(e, '_senderConfig', {
                g: function () {
                  return r;
                }
              });
              if (s.activeStatus() === D.f.PENDING) {
                e.pause();
              } else {
                if (s.activeStatus() === D.f.ACTIVE) {
                  e.resume();
                }
              }
              if (F !== r.endpointUrl) {
                P = F = r.endpointUrl;
              }
              if (U && U !== r[L.YT]) {
                _.Iuo(U, function (e) {
                  delete l[e.header];
                });
              }
              M = r[L.MG];
              O = (r[L.yH] === false || r[L.HT] === false) && S.Uf();
              N = r[L.yH] === false && S.Uf();
              K = r[L.HT] === false && S.Uf();
              V = r[L.jq];
              X = !!r[L.x9];
              le = r.retryCodes;
              var o = r[L.fD];
              var a = !!r[L.Fz] && (!!o || p.AN());
              var A = r.namePrefix;
              var c = a !== J || a && $ !== A || a && z !== o;
              if (e[L.b1]) {
                if (c) {
                  try {
                    e._buffer = e._buffer[L.$o](R, r, a);
                  } catch (t) {
                    y.ZP(e[L.e4](), 1, 12, `failed to transfer telemetry to different buffer storage, telemetry will be lost: ${w.lL(t)}`, {
                      exception: _.mmD(t)
                    });
                  }
                }
                _e();
              } else {
                e[L.b1] = a ? new ne(R, r) : new ee(R, r);
              }
              $ = A;
              J = a;
              z = o;
              Z = !r[L.I2] && S.R7(true);
              ie = !!r[L.WU];
              e._sample = new ae(r.samplingPercentage, R);
              if (!function (e, t) {
                var n = t.disableInstrumentationKeyValidation;
                if (!_.hXl(n) && n) {
                  return true;
                }
                return new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$').test(e);
              }(q = r[L.sl], n)) {
                y.ZP(R, 1, 100, `Invalid Instrumentation key ${q}`);
              }
              U = r[L.YT];
              if (_.KgX(P) && !m.Qu(P) && U && U[L.oI] > 0) {
                _.Iuo(U, function (e) {
                  g.addHeader(e.header, e.value);
                });
              } else {
                U = null;
              }
              W = r[L._N];
              var u = function () {
                var t;
                try {
                  var n = {
                    xdrOnComplete: function (e, t, n) {
                      var r = he(n);
                      if (r) {
                        return h(e, r);
                      }
                    },
                    fetchOnComplete: function (e, t, n, r) {
                      var o = he(r);
                      if (o) {
                        return ve(e.status, o, e.url, o[L.oI], e.statusText, n || '');
                      }
                    },
                    xhrOnComplete: function (e, t, n) {
                      var r = he(n);
                      if (r) {
                        return de(e, r, r[L.oI]);
                      }
                    },
                    beaconOnRetry: function (t, n, r) {
                      return function (t, n, r) {
                        var o = t;
                        var s = o && o[L.fS];
                        if (ie) {
                          if (oe) {
                            oe(s, true);
                          }
                          y.ZP(e[L.e4](), 2, 40, '. Failed to send telemetry with Beacon API, retried with normal sender.');
                        } else {
                          var a = [];
                          for (var A = 0; A < s[L.oI]; A++) {
                            var c = s[A];
                            var u = [c];
                            if (r(ye(u), n)) {
                              e._onSuccess(u, u[L.oI]);
                            } else {
                              a[L.y5](c);
                            }
                          }
                          if (a[L.oI] > 0) {
                            if (oe) {
                              oe(a, true);
                            }
                            y.ZP(e[L.e4](), 2, 40, '. Failed to send telemetry with Beacon API, retried with normal sender.');
                          }
                        }
                      }(t, n, r);
                    }
                  };
                  (t = {})[L._N] = W;
                  t.isOneDs = false;
                  t.disableCredentials = false;
                  t[L.x9] = X;
                  t.disableBeacon = !K;
                  t.disableBeaconSync = !N;
                  t.senderOnCompleteCallBack = n;
                  return t;
                } catch (e) {}
                return null;
              }();
              if (se) {
                se.SetConfig(u);
              } else {
                (se = new T.v())[L.mE](u, R);
              }
              var f = r.httpXHROverride;
              var E = null;
              var v = null;
              var b = w.jL([3, 1, 2], r.transports);
              E = se && se[L.vO](b, false);
              var B = se && se.getFallbackInst();
              te = function (e, t) {
                return Ee(B, e, t);
              };
              oe = function (e, t) {
                return Ee(B, e, t, false);
              };
              E = V ? f : E || f || B;
              e[L.uJ] = function (e, t) {
                return Ee(E, e, t);
              };
              if (Z) {
                d = De;
              }
              var k = w.jL([3, 1], r[L.Yr]);
              if (!Z) {
                k = k.filter(function (e) {
                  return e !== 2;
                });
              }
              v = se && se[L.vO](k, true);
              v = V ? f : v || f;
              if ((V || r[L.Yr] || !d) && v) {
                d = function (e, t) {
                  return Ee(v, e, t);
                };
              }
              if (!d) {
                d = te;
              }
              j = r.disableTelemetry;
              G = r[L.MY] || Ae;
              Y = r.isRetryDisabled;
              H = r[L.T9];
            }));
          };
          e.processTelemetry = function (t, n) {
            var r;
            var o = (n = e._getTelCtx(n))[L.e4]();
            try {
              if (!fe(t, o)) {
                return;
              }
              var s = pe(t, o);
              if (!s) {
                return;
              }
              var a = c[L.Af](s);
              var A = e[L.b1];
              _e(a);
              (r = {})[L.bd] = a;
              r.cnt = 0;
              var u = r;
              A[L.Ws](u);
              Te();
            } catch (e) {
              y.ZP(o, 2, 12, `Failed adding telemetry to the sender's buffer, some telemetry will be lost: ${w.lL(e)}`, {
                exception: _.mmD(e)
              });
            }
            e.processNext(t, n);
          };
          e.isCompletelyIdle = function () {
            return !a && ge === 0 && e._buffer[L.F2]() === 0;
          };
          e._xhrReadyStateChange = function (e, t, n) {
            if (!Qe(t)) {
              return de(e, t, n);
            }
          };
          e[L.NE] = function (t, n, r) {
            var o;
            if (t === undefined) {
              t = true;
            }
            if (!a) {
              try {
                var s = e[L.b1];
                if (j) {
                  s[L.nc]();
                } else {
                  if (s[L.F2]() > 0) {
                    var A = s.getItems();
                    (function (t, n) {
                      var r = function () {
                        var t = 'getNotifyMgr';
                        if (e.core[t]) {
                          return e.core[t]();
                        }
                        return e.core._notificationManager;
                      }();
                      if (r && r[L.wT]) {
                        try {
                          r[L.wT](t, n);
                        } catch (t) {
                          y.ZP(e[L.e4](), 1, 74, `send request notification failed: ${w.lL(t)}`, {
                            exception: _.mmD(t)
                          });
                        }
                      }
                    })(r || 0, t);
                    o = n ? n.call(e, A, t) : e[L.uJ](A, t);
                  }
                  +new Date();
                }
                Re();
              } catch (t) {
                var c = S.L0();
                if (!c || c > 9) {
                  y.ZP(e[L.e4](), 1, 40, `Telemetry transmission failed, some telemetry will be lost: ${w.lL(t)}`, {
                    exception: _.mmD(t)
                  });
                }
              }
            }
            return o;
          };
          e.getOfflineSupport = function () {
            var e;
            (e = {
              getUrl: function () {
                return P;
              },
              createPayload: Ie
            })[L.Af] = Ce;
            e.batch = me;
            e.shouldProcess = function (e) {
              return !!fe(e);
            };
            return e;
          };
          e._doTeardown = function (t, n) {
            e.onunloadFlush();
            R.K(E, false);
            xe();
          };
          e[L.$S] = function (t, n, r) {
            if (!Qe(t)) {
              return function (t, n) {
                y.ZP(e[L.e4](), 2, 26, 'Failed to send telemetry.', {
                  message: n
                });
                if (e._buffer) {
                  e._buffer[L.E4](t);
                }
              }(t, n);
            }
          };
          e[L.u0] = function (t, n) {
            if (!Qe(t)) {
              return function (t, n) {
                var r = [];
                var o = [];
                var s = n.errors.reverse();
                for (var a = 0, A = s; a < A.length; a++) {
                  var c = A[a];
                  var u = t.splice(c.index, 1)[0];
                  if (ke(c.statusCode)) {
                    o[L.y5](u);
                  } else {
                    r[L.y5](u);
                  }
                }
                if (t[L.oI] > 0) {
                  e[L._7](t, n[L.ky]);
                }
                if (r[L.oI] > 0) {
                  e[L.$S](r, w.r4(null, ['partial success', n[L.ky], 'of', n.itemsReceived].join(' ')));
                }
                if (o[L.oI] > 0) {
                  Se(o);
                  y.ZP(e[L.e4](), 2, 40, `Partial success. Delivered: ${t[L.oI]}, Failed: ${r[L.oI]}. Will retry to send ${o[L.oI]} our of ${n[L.cp]} items`);
                }
              }(t, n);
            }
          };
          e[L._7] = function (t, n) {
            if (!Qe(t)) {
              return function (t) {
                if (e._buffer) {
                  e._buffer[L.E4](t);
                }
              }(t);
            }
          };
          e._xdrOnLoad = function (e, t) {
            if (!Qe(t)) {
              return h(e, t);
            }
          };
        });
        return g;
      }
      o.qU(t, e);
      t.constructEnvelope = function (e, t, n, r) {
        var s;
        s = t === e.iKey || _.hXl(t) ? e : o.Im(o.Im({}, e), {
          iKey: t
        });
        return (le[s.baseType] || W)(n, s, r);
      };
      return t;
    }(x.s);
    var de = require(74484);
    var he = require(82774);
    var fe = require(8205);
    var pe = 'instrumentationKey';
    var Ce = 'connectionString';
    var me = 'instrumentationkey';
    var Ie = 'endpointUrl';
    var Ee = 'ingestionendpoint';
    var ye = 'userOverrideEndpointUrl';
    var we = require(29762);
    var _e = {
      diagnosticLogInterval: E.Lx(function (e) {
        return e && e > 0;
      }, 10000)
    };
    var ve = function () {
      function e(t) {
        var n;
        var o = new he._();
        function a(e) {
          if (e) {
            e.baseData = e.baseData || {};
            e.baseType = e.baseType || 'EventData';
          }
          o.track(e);
        }
        if (_.hXl(t) || _.hXl(t[pe]) && _.hXl(t[Ce])) {
          _.$8('Invalid input configuration');
        }
        r.A(e, this, function (e) {
          function r() {
            var e = B.e(t || {}, _e);
            n = e.cfg;
            o.addUnloadHook(B.a(e, function () {
              var e = n[Ce];
              if (_.$XS(e)) {
                var t = fe.c$(function (t, r) {
                  fe.Dv(e, function (e) {
                    var r = e.value;
                    var o = n[pe];
                    if (!e.rejected && r) {
                      n[Ce] = r;
                      o = de.H(r)[me] || o;
                    }
                    t(o);
                  });
                });
                var r = fe.c$(function (t, r) {
                  fe.Dv(e, function (e) {
                    var r = e.value;
                    var o = n[Ie];
                    if (!e.rejected && r) {
                      var a = de.H(r)[Ee];
                      o = a ? a + s.wc : o;
                    }
                    t(o);
                  });
                });
                n[pe] = t;
                n[Ie] = n[ye] || r;
              }
              if (_.KgX(e)) {
                var o = de.H(e);
                var a = o[Ee];
                n[Ie] = n[ye] ? n[ye] : a + s.wc;
                n[pe] = o[me] || n[pe];
              }
              n[Ie] = n[ye] ? n[ye] : n[Ie];
            }));
            o.initialize(n, [new ge()]);
          }
          _.vF1(e, 'config', {
            g: function () {
              return n;
            }
          });
          r();
          e.initialize = r;
          e.track = a;
          w.o$(e, o, ['flush', 'pollInternalLogs', 'stopPollingInternalLogs', 'unload', 'getPlugin', 'addPlugin', 'evtNamespace', 'addUnloadCb', 'onCfgChange', 'getTraceCtx', 'updateCfg', 'addTelemetryInitializer']);
        });
      }
      e.__ieDyn = 1;
      return e;
    }();
  },
  68279: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      A: () => N
    });
    var r;
    var o = require(269);
    var s = 'constructor';
    var a = 'prototype';
    var A = 'function';
    var c = '_dynInstFuncs';
    var u = '_isDynProxy';
    var l = '_dynClass';
    var g = '_dynCls$';
    var d = '_dynInstChk';
    var h = d;
    var f = '_dfOpts';
    var p = '_unknown_';
    var m = '__proto__';
    var I = `_dyn${m}`;
    var E = '__dynProto$Gbl';
    var y = '_dynInstProto';
    var w = 'useBaseInst';
    var _ = 'setInstFuncs';
    var v = Object;
    var b = v.getPrototypeOf;
    var B = v.getOwnPropertyNames;
    var Q = o.mS$();
    var D = Q[E] ||= {
      o: (r = {}, r[_] = true, r[w] = true, r),
      n: 1000
    };
    function S(e) {
      return e && (e === v[a] || e === Array[a]);
    }
    function T(e) {
      return S(e) || e === Function[a];
    }
    function R(e) {
      var t;
      if (e) {
        if (b) {
          return b(e);
        }
        var n = e[m] || e[a] || (e[s] ? e[s][a] : null);
        t = e[I] || n;
        if (!o.v0u(e, I)) {
          delete e[y];
          t = e[I] = e[y] || e[I];
          e[y] = n;
        }
      }
      return t;
    }
    function k(e, t) {
      var n = [];
      if (B) {
        n = B(e);
      } else {
        for (var r in e) {
          if (typeof r == 'string' && o.v0u(e, r)) {
            n.push(r);
          }
        }
      }
      if (n && n.length > 0) {
        for (var s = 0; s < n.length; s++) {
          t(n[s]);
        }
      }
    }
    function x(e, t, n) {
      return t !== s && typeof e[t] === A && (n || o.v0u(e, t)) && t !== m && t !== a;
    }
    function P(e) {
      o.zkd(`DynamicProto: ${e}`);
    }
    function F(e, t) {
      for (var n = e.length - 1; n >= 0; n--) {
        if (e[n] === t) {
          return true;
        }
      }
      return false;
    }
    function M(e, t, n, r, s) {
      function a(e, t) {
        function n() {
          var r = function (e, t, n, r) {
            var s = null;
            if (e && o.v0u(n, l)) {
              var a = e[c] || o.sSX(null);
              if (!(s = (a[n[l]] || o.sSX(null))[t])) {
                P(`Missing [${t}] ${A}`);
              }
              if (!s[d] && a[h] !== false) {
                for (var u = !o.v0u(e, t), g = R(e), f = []; u && g && !T(g) && !F(f, g);) {
                  var p = g[t];
                  if (p) {
                    u = p === r;
                    break;
                  }
                  f.push(g);
                  g = R(g);
                }
                try {
                  if (u) {
                    e[t] = s;
                  }
                  s[d] = 1;
                } catch (e) {
                  a[h] = false;
                }
              }
            }
            return s;
          }(this, t, e, n) || function (e, t, n) {
            var r = t[e];
            if (r === n) {
              r = R(t)[e];
            }
            if (typeof r !== A) {
              P(`[${e}] is not a ${A}`);
            }
            return r;
          }(t, e, n);
          return r.apply(this, arguments);
        }
        n[u] = 1;
        return n;
      }
      if (!S(e)) {
        var g = n[c] = n[c] || o.sSX(null);
        if (!S(g)) {
          var f = g[t] = g[t] || o.sSX(null);
          if (g[h] !== false) {
            g[h] = !!s;
          }
          if (!S(f)) {
            k(n, function (t) {
              if (x(n, t, false) && n[t] !== r[t]) {
                f[t] = n[t];
                delete n[t];
                if (!o.v0u(e, t) || e[t] && !e[t][u]) {
                  e[t] = a(e, t);
                }
              }
            });
          }
        }
      }
    }
    function O(e, t) {
      if (o.v0u(e, a)) {
        return e.name || t || p;
      } else {
        return ((e || {})[s] || {}).name || t || p;
      }
    }
    function N(e, t, n, r) {
      if (!o.v0u(e, a)) {
        P('theClass is an invalid class definition.');
      }
      var s = e[a];
      if (!function (e, t) {
        if (b) {
          for (var n = [], r = R(t); r && !T(r) && !F(n, r);) {
            if (r === e) {
              return true;
            }
            n.push(r);
            r = R(r);
          }
          return false;
        }
        return true;
      }(s, t)) {
        P(`[${O(e)}] not in hierarchy of [${O(t)}]`);
      }
      var A = null;
      if (o.v0u(s, l)) {
        A = s[l];
      } else {
        A = g + O(e, '_') + '$' + D.n;
        D.n++;
        s[l] = A;
      }
      var d = N[f];
      var p = !!d[w];
      if (p && r && r[w] !== undefined) {
        p = !!r[w];
      }
      var m = function (e) {
        var t = o.sSX(null);
        k(e, function (n) {
          if (!t[n] && x(e, n, false)) {
            t[n] = e[n];
          }
        });
        return t;
      }(t);
      var I = function (e, t, n, r) {
        function s(e, t, n) {
          var o = t[n];
          if (o[u] && r) {
            var s = e[c] || {};
            if (s[h] !== false) {
              o = (s[t[l]] || {})[n] || o;
            }
          }
          return function () {
            return o.apply(e, arguments);
          };
        }
        var a = o.sSX(null);
        k(n, function (e) {
          a[e] = s(t, n, e);
        });
        for (var A = R(e), g = []; A && !T(A) && !F(g, A);) {
          k(A, function (e) {
            if (!a[e] && x(A, e, !b)) {
              a[e] = s(t, A, e);
            }
          });
          g.push(A);
          A = R(A);
        }
        return a;
      }(s, t, m, p);
      n(t, I);
      var E = !!b && !!d[_];
      if (E && r) {
        E = !!r[_];
      }
      M(s, A, t, m, E !== false);
    }
    N[f] = D.o;
  },
  8205: (module, exports, require) => {
    "use strict";

    require.d(exports, {
      Dv: () => u,
      Ov: () => O,
      Qo: () => F,
      Xf: () => M,
      c$: () => T
    });
    var r;
    var o;
    var s;
    var a = require(269);
    var A = 'Promise';
    var c = 'rejected';
    function u(e, t) {
      return l(e, function (e) {
        if (t) {
          return t({
            status: 'fulfilled',
            rejected: false,
            value: e
          });
        } else {
          return e;
        }
      }, function (e) {
        if (t) {
          return t({
            status: c,
            rejected: true,
            reason: e
          });
        } else {
          return e;
        }
      });
    }
    function l(e, t, n, r) {
      var o = e;
      try {
        if (a.$XS(e)) {
          if (t || n) {
            o = e.then(t, n);
          }
        } else {
          try {
            if (t) {
              o = t(e);
            }
          } catch (e) {
            if (!n) {
              throw e;
            }
            o = n(e);
          }
        }
      } finally {
        if (r) {
          g(o, r);
        }
      }
      return o;
    }
    function g(e, t) {
      var n = e;
      if (t) {
        if (a.$XS(e)) {
          n = e.finally ? e.finally(t) : e.then(function (e) {
            t();
            return e;
          }, function (e) {
            t();
            throw e;
          });
        } else {
          t();
        }
      }
      return n;
    }
    var d = false;
    var h;
    var f = ['pending', 'resolving', 'resolved', c];
    var p = 'dispatchEvent';
    function m(e) {
      var t;
      if (e && e.createEvent) {
        t = e.createEvent('Event');
      }
      return !!t && t.initEvent;
    }
    var I;
    var E = 'unhandledRejection';
    var y = E.toLowerCase();
    var w = require.j == 606 ? [] : null;
    var _ = 0;
    var v = 10;
    function b(e) {
      if (a.Tnt(e)) {
        return e.toString();
      } else {
        return a.mmD(e);
      }
    }
    function B(e, t, n) {
      var c;
      var u;
      var l = a.KVm(arguments, 3);
      var g = 0;
      var B = false;
      var Q = [];
      var D = _++;
      var S = w.length > 0 ? w[w.length - 1] : undefined;
      var T = false;
      var R = null;
      function k(t, n) {
        try {
          w.push(D);
          T = true;
          if (R) {
            R.cancel();
          }
          R = null;
          return e(function (e, r) {
            Q.push(function () {
              try {
                var o = g === 2 ? t : n;
                var s = a.b07(o) ? c : a.Tnt(o) ? o(c) : o;
                if (a.$XS(s)) {
                  s.then(e, r);
                } else {
                  if (o) {
                    e(s);
                  } else {
                    if (g === 3) {
                      r(s);
                    } else {
                      e(s);
                    }
                  }
                }
              } catch (e) {
                r(e);
              }
            });
            if (B) {
              P();
            }
          }, l);
        } finally {
          w.pop();
        }
      }
      function x() {
        return f[g];
      }
      function P() {
        if (Q.length > 0) {
          var e = Q.slice();
          Q = [];
          T = true;
          if (R) {
            R.cancel();
          }
          R = null;
          t(e);
        }
      }
      function F(e, t) {
        return function (n) {
          if (g === t) {
            if (e === 2 && a.$XS(n)) {
              g = 1;
              n.then(F(2, 1), F(3, 1));
              return;
            }
            g = e;
            B = true;
            c = n;
            P();
            if (!T && e === 3 && !R) {
              R = a.dRz(M, v);
            }
          }
        };
      }
      function M() {
        if (!T) {
          T = true;
          if (a.Lln()) {
            process.emit(E, c, u);
          } else {
            var e = a.zkX() || a.mS$();
            if (!I) {
              I = a.GuU(a.gBW(a.zS2, [A + 'RejectionEvent']).v);
            }
            (function (e, t, n, r) {
              var o = a.YEm();
              if (!h) {
                h = a.GuU(!!a.gBW(m, [o]).v);
              }
              var s = h.v ? o.createEvent('Event') : r ? new Event(t) : {};
              if (n) {
                n(s);
              }
              if (h.v) {
                s.initEvent(t, false, true);
              }
              if (s && e[p]) {
                e[p](s);
              } else {
                var A = e[`on${t}`];
                if (A) {
                  A(s);
                } else {
                  var c = a.zS2('console');
                  if (c) {
                    (c.error || c.log)(t, a.mmD(s));
                  }
                }
              }
            })(e, y, function (e) {
              a.vF1(e, 'promise', {
                g: function () {
                  return u;
                }
              });
              e.reason = c;
              return e;
            }, !!I.v);
          }
        }
      }
      u = {
        then: k,
        catch: function (e) {
          return k(undefined, e);
        },
        finally: function (e) {
          var t = e;
          var n = e;
          if (a.Tnt(e)) {
            t = function (t) {
              if (e) {
                e();
              }
              return t;
            };
            n = function (t) {
              if (e) {
                e();
              }
              throw t;
            };
          }
          return k(t, n);
        }
      };
      a.UxO(u, 'state', {
        get: x
      });
      if (d) {
        (function (e, t, n, A) {
          o = o || {
            toString: function () {
              return '[[PromiseResult]]';
            }
          };
          s = s || {
            toString: function () {
              return '[[PromiseIsHandled]]';
            }
          };
          var c = {
            [r = r || {
              toString: function () {
                return '[[PromiseState]]';
              }
            }]: {
              get: t
            },
            [o]: {
              get: n
            },
            [s]: {
              get: A
            }
          };
          a.isD(e, c);
        })(u, x, function () {
          return a.SZ2(c);
        }, function () {
          return T;
        });
      }
      if (a.Lok()) {
        u[a.Y0g(11)] = 'IPromise';
      }
      u.toString = function () {
        return `IPromise${d ? `[${D}${a.b07(S) ? '' : `:${S}`}]` : ''} ${x()}${B ? ` - ${b(c)}` : ''}`;
      };
      (function () {
        if (!a.Tnt(n)) {
          a.zkd(A + ': executor is not a function - ' + b(n));
        }
        var e = F(3, 0);
        try {
          n.call(u, F(2, 0), e);
        } catch (t) {
          e(t);
        }
      })();
      return u;
    }
    function Q(e) {
      return function (t) {
        var n = a.KVm(arguments, 1);
        return e(function (e, n) {
          try {
            var r = [];
            var o = 1;
            a.DA8(t, function (t, s) {
              if (t) {
                o++;
                l(t, function (t) {
                  r[s] = t;
                  if (--o == 0) {
                    e(r);
                  }
                }, n);
              }
            });
            if (--o === 0) {
              e(r);
            }
          } catch (e) {
            n(e);
          }
        }, n);
      };
    }
    function D(e) {
      return a.GuU(function (t) {
        var n = a.KVm(arguments, 1);
        return e(function (e, n) {
          var r = [];
          var o = 1;
          function s(t, n) {
            o++;
            u(t, function (t) {
              if (t.rejected) {
                r[n] = {
                  status: c,
                  reason: t.reason
                };
              } else {
                r[n] = {
                  status: 'fulfilled',
                  value: t.value
                };
              }
              if (--o == 0) {
                e(r);
              }
            });
          }
          try {
            if (a.cyL(t)) {
              a.Iuo(t, s);
            } else {
              if (a.xZI(t)) {
                a.DA8(t, s);
              } else {
                a.zkd('Input is not an iterable');
              }
            }
            if (--o === 0) {
              e(r);
            }
          } catch (e) {
            n(e);
          }
        }, n);
      });
    }
    function S(e) {
      a.Iuo(e, function (e) {
        try {
          e();
        } catch (e) {}
      });
    }
    function T(e, t) {
      return B(T, function (e) {
        var t = a.EtT(e) ? e : 0;
        return function (e) {
          a.dRz(function () {
            S(e);
          }, t);
        };
      }(t), e, t);
    }
    var R;
    function k(e, t) {
      if (!R) {
        R = a.GuU(a.gBW(a.zS2, [A]).v || null);
      }
      var n = R.v;
      if (!n) {
        return T(e);
      }
      if (!a.Tnt(e)) {
        a.zkd(A + ': executor is not a function - ' + a.mmD(e));
      }
      var r = 0;
      var o = new n(function (t, n) {
        e(function (e) {
          r = 2;
          t(e);
        }, function (e) {
          r = 3;
          n(e);
        });
      });
      a.UxO(o, 'state', {
        get: function () {
          return f[r];
        }
      });
      return o;
    }
    var x;
    var P;
    function F(e, t) {
      if (!x) {
        x = a.GuU(k);
      }
      return x.v.call(this, e, t);
    }
    var M = require.j == 606 ? Q(F) : null;
    function O(e, t) {
      if (!P) {
        P = D(F);
      }
      return P.v(e, t);
    }
    a.Y0g(11);
  },
  269: (module, exports, require) => {
    "use strict";

    function r(e, t) {
      return e || t;
    }
    function o(e, t) {
      return e[t];
    }
    require.d(exports, {
      $8: () => de,
      $PY: () => G,
      $XS: () => z,
      AHH: () => dn,
      Cv9: () => tn,
      DA8: () => Et,
      EHq: () => Nt,
      Edw: () => F,
      EtT: () => Y,
      FJj: () => Zt,
      GuU: () => Je,
      Gvm: () => j,
      HzD: () => nn,
      Iuo: () => _t,
      JKf: () => At,
      KTd: () => Dt,
      KVm: () => Bt,
      KgX: () => K,
      KhI: () => Z,
      Lln: () => ct,
      Lmq: () => H,
      Lok: () => dt,
      N6t: () => Ee,
      Nq2: () => Qt,
      O9V: () => N,
      P0f: () => Fe,
      QdQ: () => jt,
      R3R: () => Xt,
      SZ2: () => P,
      Tnt: () => U,
      UUD: () => en,
      UxO: () => oe,
      Vdv: () => tt,
      W$7: () => bt,
      WSA: () => _e,
      Wtk: () => Ze,
      Y0g: () => ft,
      YEm: () => et,
      Yny: () => wt,
      ZHX: () => Ie,
      ZWZ: () => Oe,
      aqQ: () => xt,
      b07: () => M,
      bJ7: () => J,
      cGk: () => me,
      cyL: () => q,
      dRz: () => ln,
      eCG: () => Ct,
      f0d: () => Pt,
      fn0: () => be,
      gBW: () => R,
      hKY: () => Me,
      hXl: () => O,
      isD: () => ie,
      jjc: () => pt,
      jsL: () => ye,
      kgX: () => V,
      mS$: () => Ve,
      mmD: () => ge,
      nRs: () => He,
      oJg: () => ue,
      rDm: () => vt,
      raO: () => se,
      sSX: () => Tt,
      tGl: () => rn,
      twz: () => it,
      v0u: () => X,
      vE3: () => Ce,
      vF1: () => ae,
      vKV: () => gn,
      w3n: () => ot,
      w9M: () => rt,
      woc: () => $,
      xZI: () => It,
      zS2: () => Xe,
      zav: () => te,
      zkX: () => nt,
      zkd: () => he,
      zwS: () => $t,
      zzB: () => W
    });
    var s;
    var a = undefined;
    var A = null;
    var c = '';
    var u = 'function';
    var l = 'object';
    var g = 'prototype';
    var d = '__proto__';
    var h = 'undefined';
    var f = 'constructor';
    var p = 'Symbol';
    var m = '_polyfill';
    var I = 'length';
    var E = 'name';
    var y = 'call';
    var w = 'toString';
    var _ = r(Object);
    var v = o(_, g);
    var b = r(String);
    var B = o(b, g);
    var Q = require.j == 606 ? r(Math) : null;
    var D = r(Array);
    var S = o(D, g);
    var T = o(S, 'slice');
    function R(e, t) {
      try {
        return {
          v: e.apply(this, t)
        };
      } catch (e) {
        return {
          e
        };
      }
    }
    function k(e) {
      return function (t) {
        return typeof t === e;
      };
    }
    function x(e) {
      var t = `[object ${e}]`;
      return function (e) {
        return !!e && P(e) === t;
      };
    }
    function P(e) {
      return v[w].call(e);
    }
    function F(e, t) {
      return typeof e === t;
    }
    function M(e) {
      return typeof e === h || e === h;
    }
    function O(e) {
      return e === A || M(e);
    }
    function N(e) {
      return !!e || e !== a;
    }
    function L(e) {
      if (!s) {
        s = ['string', 'number', 'boolean', h, 'symbol', 'bigint'];
      }
      return e !== l && s.indexOf(e) !== -1;
    }
    var K = require.j == 606 ? k('string') : null;
    var U = require.j == 606 ? k(u) : null;
    function j(e) {
      return (!!e || !O(e)) && !!e && typeof e === l;
    }
    var q = o(D, 'isArray');
    var G = x('Date');
    var Y = require.j == 606 ? k('number') : null;
    var H = require.j == 606 ? k('boolean') : null;
    var J = require.j == 606 ? x('Error') : null;
    function z(e) {
      return !!e && !!e.then && !!U(e.then);
    }
    function $(e) {
      return !e || !W(e);
    }
    function W(e) {
      return !!e && !(t = function () {
        return !e || !(0 + e);
      }, n = !e, r = R(t), r.e ? n : r.v);
      var t;
      var n;
      var r;
    }
    var V = o(_, 'getOwnPropertyDescriptor');
    function X(e, t) {
      return !!e && v.hasOwnProperty[y](e, t);
    }
    var Z = r(o(_, 'hasOwn'), ee);
    function ee(e, t) {
      return X(e, t) || !!V(e, t);
    }
    function te(e, t, n) {
      if (e && j(e)) {
        for (var r in e) {
          if (Z(e, r) && t[y](n || e, r, e[r]) === -1) {
            break;
          }
        }
      }
    }
    var ne = {
      e: 'enumerable',
      c: 'configurable',
      v: 'value',
      w: 'writable',
      g: 'get',
      s: 'set'
    };
    function re(e) {
      var t = {
        [ne.c]: true,
        [ne.e]: true
      };
      if (e.l) {
        t.get = function () {
          return e.l.v;
        };
        var n = V(e.l, 'v');
        if (n && n.set) {
          t.set = function (t) {
            e.l.v = t;
          };
        }
      }
      te(e, function (e, n) {
        t[ne[e]] = M(n) ? t[ne[e]] : n;
      });
      return t;
    }
    var oe = o(_, 'defineProperty');
    var ie = require.j == 606 ? o(_, 'defineProperties') : null;
    function se(e, t, n, r, o, s) {
      var a = {
        e: s,
        c: o
      };
      if (n) {
        a.g = n;
      }
      if (r) {
        a.s = r;
      }
      return oe(e, t, re(a));
    }
    function ae(e, t, n) {
      return oe(e, t, re(n));
    }
    function Ae(e, t, n, r, o) {
      var s = {};
      te(e, function (e, r) {
        ce(s, e, t ? r : e, o);
        ce(s, r, n ? r : e, o);
      });
      if (r) {
        return r(s);
      } else {
        return s;
      }
    }
    function ce(e, t, n, r) {
      oe(e, t, {
        value: n,
        enumerable: true,
        writable: !!r
      });
    }
    var ue = r(b);
    var le = '[object Error]';
    function ge(e, t) {
      var n = c;
      var r = v[w][y](e);
      if (r === le) {
        e = {
          stack: ue(e.stack),
          message: ue(e.message),
          name: ue(e.name)
        };
      }
      try {
        n = (n = JSON.stringify(e, A, t ? typeof t == 'number' ? t : 4 : a)) && n.replace(/"(\w+)"\s*:\s{0,1}/g, '$1: ') || ue(e);
      } catch (e) {
        n = ` - ${ge(e, t)}`;
      }
      return r + ': ' + n;
    }
    function de(e) {
      throw new Error(e);
    }
    function he(e) {
      throw new TypeError(e);
    }
    var fe = o(_, 'freeze');
    function pe(e) {
      return e;
    }
    var Ce = require.j == 606 ? o(_, 'assign') : null;
    var me = require.j == 606 ? o(_, 'keys') : null;
    function Ie(e) {
      if (fe) {
        te(e, function (e, t) {
          if (q(t) || j(t)) {
            Ie(t);
          }
        });
      }
      return Ee(e);
    }
    var Ee = r(fe, pe);
    var ye = require.j == 606 ? r(o(_, 'seal'), pe) : null;
    var we = require.j == 606 ? r(o(_, 'getPrototypeOf'), function (e) {
      return e[d] || A;
    }) : null;
    function _e(e) {
      return Ae(e, 1, 0, Ee);
    }
    function ve(e) {
      return Ae(e, 0, 0, Ee);
    }
    function be(e) {
      return function (e) {
        var t = {};
        te(e, function (e, n) {
          ce(t, e, n[1]);
          ce(t, n[0], n[1]);
        });
        return Ee(t);
      }(e);
    }
    var Be;
    var Qe = ve({
      asyncIterator: 0,
      hasInstance: 1,
      isConcatSpreadable: 2,
      iterator: 3,
      match: 4,
      matchAll: 5,
      replace: 6,
      search: 7,
      species: 8,
      split: 9,
      toPrimitive: 10,
      toStringTag: 11,
      unscopables: 12
    });
    var De = '__tsUtils$gblCfg';
    function Se() {
      var e;
      if (typeof globalThis !== h) {
        e = globalThis;
      }
      if (!e && typeof self !== h) {
        e = self;
      }
      if (!e && typeof window !== h) {
        e = window;
      }
      if (!e && typeof global !== h) {
        e = global;
      }
      return e;
    }
    function Te() {
      if (!Be) {
        var e = R(Se).v || {};
        Be = e[De] = e[De] || {};
      }
      return Be;
    }
    var Re = require.j == 606 ? ke : null;
    function ke(e, t, n) {
      var r = t && t[e];
      return function (t) {
        var o = t && t[e] || r;
        if (o || n) {
          var s = arguments;
          return (o || n).apply(t, o ? T[y](s, 1) : s);
        }
        he(`"${ue(e)}" not defined for ${ge(t)}`);
      };
    }
    var xe = require.j == 606 ? o(Q, 'max') : null;
    var Pe = require.j == 606 ? Re('slice', B) : null;
    var Fe = require.j == 606 ? Re('substring', B) : null;
    var Me = require.j == 606 ? ke('substr', B, function (e, t, n) {
      if (O(e)) {
        he(`Invalid ${ge(e)}`);
      }
      if (n < 0) {
        return c;
      }
      if ((t = t || 0) < 0) {
        t = xe(t + e[I], 0);
      }
      if (M(n)) {
        return Pe(e, t);
      }
      return Pe(e, t, t + n);
    }) : null;
    function Oe(e, t) {
      return Fe(e, 0, t);
    }
    var Ne;
    var Le;
    var Ke;
    var Ue = '_urid';
    function je() {
      if (!Ne) {
        var e = Te();
        Ne = e.gblSym = e.gblSym || {
          k: {},
          s: {}
        };
      }
      return Ne;
    }
    function qe(e) {
      var t = {
        description: ue(e),
        toString: function () {
          return p + '(' + e + ')';
        }
      };
      t[m] = true;
      return t;
    }
    function Ge(e) {
      var t = je();
      if (!Z(t.k, e)) {
        var n = qe(e);
        var r = me(t.s).length;
        n[Ue] = function () {
          return r + '_' + n[w]();
        };
        t.k[e] = n;
        t.s[n[Ue]()] = ue(e);
      }
      return t.k[e];
    }
    function Ye() {
      Ke = Te();
    }
    function He(e) {
      var t = {};
      if (!Ke) {
        Ye();
      }
      t.b = Ke.lzy;
      oe(t, 'v', {
        configurable: true,
        get: function () {
          var n = e();
          if (!Ke.lzy) {
            oe(t, 'v', {
              value: n
            });
          }
          t.b = Ke.lzy;
          return n;
        }
      });
      return t;
    }
    function Je(e) {
      return oe({
        toJSON: function () {
          return e;
        }
      }, 'v', {
        value: e
      });
    }
    var ze;
    var $e = 'window';
    function We(e, t) {
      var n;
      return function () {
        if (!Ke) {
          Ye();
        }
        if (!n || Ke.lzy) {
          n = Je(R(e, t).v);
        }
        return n.v;
      };
    }
    function Ve(e) {
      if (!Ke) {
        Ye();
      }
      if (!ze || e === false || Ke.lzy) {
        ze = Je(R(Se).v || A);
      }
      return ze.v;
    }
    function Xe(e, t) {
      var n = ze && t !== false ? ze.v : Ve(t);
      if (n && n[e]) {
        return n[e];
      } else {
        if (e === $e) {
          return nt();
        } else {
          return A;
        }
      }
    }
    function Ze() {
      return !!et();
    }
    var et = require.j == 606 ? We(Xe, ['document']) : null;
    function tt() {
      return !!nt();
    }
    var nt = We(Xe, [$e]);
    function rt() {
      return !!ot();
    }
    var ot = require.j == 606 ? We(Xe, ['navigator']) : null;
    function it() {
      return !!At();
    }
    var st;
    var at;
    var At = require.j == 606 ? We(Xe, ['history']) : null;
    var ct = require.j == 606 ? We(function () {
      return !!R(function () {
        return process && (process.versions || {}).node;
      }).v;
    }) : null;
    function ut() {
      return st = Je(R(Xe, [p]).v);
    }
    function lt(e) {
      var t = (Ke.lzy ? 0 : st) || ut();
      if (t.v) {
        return t.v[e];
      } else {
        return a;
      }
    }
    var gt;
    function dt() {
      return !!ht();
    }
    function ht() {
      if (!Ke) {
        Ye();
      }
      return ((Ke.lzy ? 0 : st) || ut()).v;
    }
    function ft(e, t) {
      var n = Qe[e];
      if (!Ke) {
        Ye();
      }
      var r = (Ke.lzy ? 0 : st) || ut();
      if (r.v) {
        return r.v[n || e];
      } else {
        if (t) {
          return a;
        } else {
          return function (e) {
            var t;
            if (!Le) {
              Le = {};
            }
            var n = Qe[e];
            if (n) {
              t = Le[n] = Le[n] || qe(p + '.' + n);
            }
            return t;
          }(e);
        }
      }
    }
    function pt(e, t) {
      if (!Ke) {
        Ye();
      }
      var n = (Ke.lzy ? 0 : st) || ut();
      if (n.v) {
        return n.v(e);
      } else {
        if (t) {
          return A;
        } else {
          return qe(e);
        }
      }
    }
    function Ct(e) {
      if (!Ke) {
        Ye();
      }
      return ((at = (Ke.lzy ? 0 : at) || Je(R(lt, ['for']).v)).v || Ge)(e);
    }
    function mt(e) {
      return !!e && U(e.next);
    }
    function It(e) {
      return !function (e) {
        return e === A || !N(e);
      }(e) && U(e[ft(3)]);
    }
    function Et(e, t, n) {
      if (e && (mt(e) || (!gt && (gt = Je(ft(3))), e = e[gt.v] ? e[gt.v]() : null), mt(e))) {
        var r = a;
        var o = a;
        try {
          for (var s = 0; !(o = e.next()).done && t[y](n || e, o.value, s, e) !== -1;) {
            s++;
          }
        } catch (t) {
          r = {
            e: t
          };
          if (e.throw) {
            o = A;
            e.throw(r);
          }
        } finally {
          try {
            if (o && !o.done && e.return) {
              e.return(o);
            }
          } finally {
            if (r) {
              throw r.e;
            }
          }
        }
      }
    }
    function yt(e, t, n) {
      return e.apply(t, n);
    }
    function wt(e, t) {
      if (!M(t) && e) {
        if (q(t)) {
          yt(e.push, e, t);
        } else {
          if (mt(t) || It(t)) {
            Et(t, function (t) {
              e.push(t);
            });
          } else {
            e.push(t);
          }
        }
      }
      return e;
    }
    function _t(e, t, n) {
      if (e) {
        for (var r = e[I] >>> 0, o = 0; o < r && (!(o in e) || t[y](n || e, e[o], o, e) !== -1); o++);
      }
    }
    var vt = require.j == 606 ? Re('indexOf', S) : null;
    var bt = require.j == 606 ? Re('map', S) : null;
    function Bt(e, t, n) {
      return (e && e.slice || T).apply(e, T[y](arguments, 1));
    }
    var Qt = require.j == 606 ? ke('includes', S, function (e, t, n) {
      return vt(e, t, n) !== -1;
    }) : null;
    var Dt = require.j == 606 ? Re('reduce', S) : null;
    var St;
    var Tt = require.j == 606 ? r(o(_, 'create'), function (e) {
      if (!e) {
        return {};
      }
      var t = typeof e;
      if (t !== l && t !== u) {
        he(`Prototype must be an Object or function: ${ge(e)}`);
      }
      function n() {}
      n[g] = e;
      return new n();
    }) : null;
    function Rt(e, t) {
      return (_.setPrototypeOf || function (e, t) {
        var n;
        if (!St) {
          St = Je(((n = {})[d] = [], n instanceof Array));
        }
        if (St.v) {
          e[d] = t;
        } else {
          te(t, function (t, n) {
            return e[t] = n;
          });
        }
      })(e, t);
    }
    function kt(e, t) {
      if (t) {
        e[E] = t;
      }
    }
    function xt(e, t, n) {
      var r = n || Error;
      var o = r[g][E];
      var s = Error.captureStackTrace;
      return function (e, t, n) {
        function r() {
          this[f] = t;
          R(ae, [this, E, {
            v: e,
            c: true,
            e: false
          }]);
        }
        R(ae, [t, E, {
          v: e,
          c: true,
          e: false
        }]);
        (t = Rt(t, n))[g] = n === A ? Tt(n) : (r[g] = n[g], new r());
        return t;
      }(e, function () {
        var n = this;
        var a = arguments;
        try {
          R(kt, [r, e]);
          var A = yt(r, n, T[y](a)) || n;
          if (A !== n) {
            var c = we(n);
            if (c !== we(A)) {
              Rt(A, c);
            }
          }
          if (s) {
            s(A, n[f]);
          }
          if (t) {
            t(A, a);
          }
          return A;
        } finally {
          R(kt, [r, o]);
        }
      }, r);
    }
    function Pt() {
      return (Date.now || Ft)();
    }
    function Ft() {
      return new Date().getTime();
    }
    function Mt(e) {
      return function (t) {
        if (O(t)) {
          he(`strTrim called [${ge(t)}]`);
        }
        if (t && t.replace) {
          t = t.replace(e, c);
        }
        return t;
      };
    }
    var Ot = require.j == 606 ? Mt(/^\s+|(?=\s)\s+$/g) : null;
    var Nt = require.j == 606 ? ke('trim', B, Ot) : null;
    var Lt;
    var Kt;
    var Ut;
    function jt(e) {
      if (!e || typeof e !== l) {
        return false;
      }
      if (!Ut) {
        Ut = !tt() || nt();
      }
      var t = false;
      if (e !== Ut) {
        if (!Kt) {
          Lt = Function[g][w];
          Kt = Lt[y](_);
        }
        try {
          var n = we(e);
          if (!(t = !n)) {
            if (X(n, f)) {
              n = n[f];
            }
            t = n && typeof n === u && Lt[y](n) === Kt;
          }
        } catch (e) {}
      }
      return t;
    }
    function qt(e) {
      if (e.value) {
        Jt(e);
      }
      return true;
    }
    var Gt = [function (e) {
      var t = e.value;
      if (q(t)) {
        var n = e.result = [];
        n.length = t.length;
        e.copyTo(n, t);
        return true;
      }
      return false;
    }, Jt, function (e) {
      if (e.type === u) {
        return true;
      }
      return false;
    }, function (e) {
      var t = e.value;
      if (G(t)) {
        e.result = new Date(t.getTime());
        return true;
      }
      return false;
    }];
    function Yt(e, t, n, r) {
      var o = n.handler;
      var s = n.path ? r ? n.path.concat(r) : n.path : [];
      var a = {
        handler: n.handler,
        src: n.src,
        path: s
      };
      var c = typeof t;
      var u = false;
      var g = false;
      if (t && c === l) {
        u = jt(t);
      } else {
        g = t === A || L(c);
      }
      var d = {
        type: c,
        isPrim: g,
        isPlain: u,
        value: t,
        result: t,
        path: s,
        origin: n.src,
        copy: function (t, r) {
          return Yt(e, t, r ? a : n, r);
        },
        copyTo: function (t, n) {
          return Ht(e, t, n, a);
        }
      };
      if (d.isPrim) {
        if (o && o[y](n, d)) {
          return d.result;
        } else {
          return t;
        }
      } else {
        return function (e, t, n, r) {
          var o;
          _t(e, function (e) {
            if (e.k === t) {
              o = e;
              return -1;
            }
          });
          if (!o) {
            o = {
              k: t,
              v: t
            };
            e.push(o);
            r(o);
          }
          return o.v;
        }(e, t, 0, function (e) {
          ae(d, 'result', {
            g: function () {
              return e.v;
            },
            s: function (t) {
              e.v = t;
            }
          });
          for (var t = 0, r = o; !(r || (t < Gt.length ? Gt[t++] : qt))[y](n, d);) {
            r = A;
          }
        });
      }
    }
    function Ht(e, t, n, r) {
      if (!O(n)) {
        for (var o in n) {
          t[o] = Yt(e, n[o], r, o);
        }
      }
      return t;
    }
    function Jt(e) {
      var t = e.value;
      if (t && e.isPlain) {
        var n = e.result = {};
        e.copyTo(n, t);
        return true;
      }
      return false;
    }
    function zt(e, t) {
      _t(t, function (t) {
        (function (e, t, n) {
          Ht([], e, t, {
            handler: n,
            src: t,
            path: []
          });
        })(e, t);
      });
      return e;
    }
    function $t(e, t, n, r, o, s, a) {
      return zt(Yt([], A = e, {
        handler: c,
        src: A
      }) || {}, T[y](arguments));
      var A;
      var c;
    }
    var Wt;
    var Vt;
    var Xt = require.j == 606 ? (Wt = I, function (e) {
      return e[Wt];
    }) : null;
    function Zt() {
      if (!Ke) {
        Ye();
      }
      if (!Vt || Ke.lzy) {
        Vt = Je(R(Xe, ['performance']).v);
      }
      return Vt.v;
    }
    function en() {
      var e = Zt();
      if (e && e.now) {
        return e.now();
      } else {
        return Pt();
      }
    }
    dt();
    var tn = require.j == 606 ? ke('endsWith', B, function (e, t, n) {
      if (!K(e)) {
        he(`'${ge(e)}' is not a string`);
      }
      var r = K(t) ? t : ue(t);
      var o = !M(n) && n < e[I] ? n : e[I];
      return Fe(e, o - r[I], o) === r;
    }) : null;
    var nn = require.j == 606 ? Re('indexOf', B) : null;
    var rn = require.j == 606 ? ke('startsWith', B, function (e, t, n) {
      if (!K(e)) {
        he(`'${ge(e)}' is not a string`);
      }
      var r = K(t) ? t : ue(t);
      var o = n > 0 ? n : 0;
      return Fe(e, o, o + r[I]) === r;
    }) : null;
    var on = 'ref';
    var sn = 'unref';
    var an = 'hasRef';
    var An = 'enabled';
    function cn(e, t, n) {
      var r;
      var o = true;
      var s = e ? t(A) : A;
      function a() {
        o = false;
        if (s && s[sn]) {
          s[sn]();
        }
        return r;
      }
      function c() {
        if (s) {
          n(s);
        }
        s = A;
      }
      function u() {
        s = t(s);
        if (!o) {
          a();
        }
        return r;
      }
      (r = {
        cancel: c,
        refresh: u
      })[an] = function () {
        if (s && s[an]) {
          return s[an]();
        } else {
          return o;
        }
      };
      r[on] = function () {
        o = true;
        if (s && s[on]) {
          s[on]();
        }
        return r;
      };
      r[sn] = a;
      return {
        h: r = oe(r, An, {
          get: function () {
            return !!s;
          },
          set: function (e) {
            if (!e && s) {
              c();
            }
            if (e && !s) {
              u();
            }
          }
        }),
        dn: function () {
          s = A;
        }
      };
    }
    function un(e, t, n) {
      var r = q(t);
      var o = r ? t.length : 0;
      var s = (o > 0 ? t[0] : r ? a : t) || setTimeout;
      var A = (o > 1 ? t[1] : a) || clearTimeout;
      var c = n[0];
      n[0] = function () {
        u.dn();
        yt(c, a, T[y](arguments));
      };
      var u = cn(e, function (e) {
        if (e) {
          if (e.refresh) {
            e.refresh();
            return e;
          }
          yt(A, a, [e]);
        }
        return yt(s, a, n);
      }, function (e) {
        yt(A, a, [e]);
      });
      return u.h;
    }
    function ln(e, t) {
      return un(true, a, T[y](arguments));
    }
    function gn(e, t, n) {
      return un(true, e, T[y](arguments, 1));
    }
    function dn(e, t) {
      return un(false, a, T[y](arguments));
    }
  },
  25396: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.oneDataSystemClientFactory = undefined;
    exports.oneDataSystemClientFactory = async (e, t, r) => {
      let o = await (async (e, t, r) => {
        const o = await Promise.resolve().then(() => __importStar(require(23291)));
        const a = await Promise.resolve().then(() => __importStar(require(76838)));
        const A = new o.AppInsightsCore();
        const c = new a.PostChannel();
        const u = {
          instrumentationKey: e,
          endpointUrl: 'https://mobile.events.data.microsoft.com/OneCollector/1.0',
          loggingLevelTelemetry: 0,
          loggingLevelConsole: 0,
          disableCookiesUsage: true,
          disableDbgExt: true,
          disableInstrumentationKeyValidation: true,
          channels: [[c]]
        };
        if (r) {
          u.extensionConfig = {};
          const e = {
            alwaysUseXhrOverride: true,
            httpXHROverride: r
          };
          u.extensionConfig[c.identifier] = e;
        }
        const l = t.workspace.getConfiguration('telemetry').get('internalTesting');
        A.initialize(u, []);
        A.addTelemetryInitializer(e => {
          e.ext = e.ext ?? {};
          e.ext.web = e.ext.web ?? {};
          e.ext.web.consentDetails = '{"GPC_DataSharingOptIn":false}';
          if (l) {
            e.ext.utc = e.ext.utc ?? {};
            e.ext.utc.flags = 8462029;
          }
        });
        return A;
      })(e, t, r);
      return {
        logEvent: (e, t) => {
          try {
            o?.track({
              name: e,
              baseData: {
                name: e,
                properties: t?.properties,
                measurements: t?.measurements
              }
            });
          } catch (e) {
            throw new Error(`Failed to log event to app insights!
${e.message}`);
          }
        },
        flush: async () => {
          try {
            return new Promise((e, t) => {
              if (o) {
                o.flush(true, e => {
                  if (!e) {
                    t('Failed to flush app 1DS!');
                  }
                });
              } else {
                e();
              }
            });
          } catch (e) {
            throw new Error(`Failed to flush 1DS!
${e.message}`);
          }
        },
        dispose: async () => new Promise(e => {
          if (o) {
            o.unload(false, () => {
              e();
              o = undefined;
            }, 1000);
          } else {
            e();
          }
        })
      };
    };
  },
  72468: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.appInsightsClientFactory = undefined;
    const a = require(2845);
    const A = require(38393);
    exports.appInsightsClientFactory = async (e, t, r, o) => {
      let c;
      try {
        const t = await Promise.resolve().then(() => __importStar(require(64766)));
        const o = {};
        if (r) {
          const e = {
            alwaysUseXhrOverride: true,
            httpXHROverride: r
          };
          o[a.BreezeChannelIdentifier] = e;
        }
        c = new t.ApplicationInsights({
          connectionString: e,
          disableAjaxTracking: true,
          disableExceptionTracking: true,
          disableFetchTracking: true,
          disableCorrelationHeaders: true,
          disableCookiesUsage: true,
          autoTrackPageVisitTime: false,
          emitLineDelimitedJson: false,
          disableInstrumentationKeyValidation: true,
          extensionConfig: o
        });
      } catch (e) {
        return Promise.reject(e);
      }
      return {
        logEvent: (e, n) => {
          const r = {
            ...n?.properties,
            ...n?.measurements
          };
          if (o?.length) {
            A.TelemetryUtil.applyReplacements(r, o);
          }
          c?.track({
            name: e,
            data: r,
            baseType: 'EventData',
            ext: {
              user: {
                id: t,
                authId: t
              }
            },
            baseData: {
              name: e,
              properties: n?.properties,
              measurements: n?.measurements
            }
          });
        },
        flush: async () => {
          c?.flush(false);
        },
        dispose: async () => new Promise(e => {
          c?.unload(true, () => {
            e();
            c = undefined;
          }, 1000);
        })
      };
    };
  },
  86548: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseTelemetryReporter = undefined;
    exports.BaseTelemetryReporter = class {
      constructor(e, t, n) {
        this.telemetrySender = e;
        this.vscodeAPI = t;
        this.userOptIn = false;
        this.errorOptIn = false;
        this.disposables = [];
        this._onDidChangeTelemetryLevel = new this.vscodeAPI.EventEmitter();
        this.onDidChangeTelemetryLevel = this._onDidChangeTelemetryLevel.event;
        this.telemetryLogger = this.vscodeAPI.env.createTelemetryLogger(this.telemetrySender, n);
        this.updateUserOptIn();
        this.telemetryLogger.onDidChangeEnableStates(() => {
          this.updateUserOptIn();
        });
      }
      updateUserOptIn() {
        this.errorOptIn = this.telemetryLogger.isErrorsEnabled;
        this.userOptIn = this.telemetryLogger.isUsageEnabled;
        if (this.telemetryLogger.isErrorsEnabled || this.telemetryLogger.isUsageEnabled) {
          this.telemetrySender.instantiateSender();
        }
        this._onDidChangeTelemetryLevel.fire(this.telemetryLevel);
      }
      get telemetryLevel() {
        if (this.errorOptIn && this.userOptIn) {
          return 'all';
        } else {
          if (this.errorOptIn) {
            return 'error';
          } else {
            return 'off';
          }
        }
      }
      internalSendTelemetryEvent(e, t, n, r) {
        if (r) {
          this.telemetrySender.sendEventData(e, {
            properties: t,
            measurements: n
          });
        } else {
          this.telemetryLogger.logUsage(e, {
            properties: t,
            measurements: n
          });
        }
      }
      sendTelemetryEvent(e, t, n) {
        this.internalSendTelemetryEvent(e, t, n, false);
      }
      sendRawTelemetryEvent(e, t, n) {
        const r = {
          ...t
        };
        for (const e of Object.keys(r ?? {})) {
          const t = r[e];
          if (typeof e == 'string' && t !== undefined) {
            r[e] = new this.vscodeAPI.TelemetryTrustedValue(typeof t == 'string' ? t : t.value);
          }
        }
        this.sendTelemetryEvent(e, r, n);
      }
      sendDangerousTelemetryEvent(e, t, n) {
        this.telemetrySender.instantiateSender();
        this.internalSendTelemetryEvent(e, t, n, true);
      }
      internalSendTelemetryErrorEvent(e, t, n, r) {
        if (r) {
          this.telemetrySender.sendEventData(e, {
            properties: t,
            measurements: n
          });
        } else {
          this.telemetryLogger.logError(e, {
            properties: t,
            measurements: n
          });
        }
      }
      sendTelemetryErrorEvent(e, t, n) {
        this.internalSendTelemetryErrorEvent(e, t, n, false);
      }
      sendDangerousTelemetryErrorEvent(e, t, n) {
        this.telemetrySender.instantiateSender();
        this.internalSendTelemetryErrorEvent(e, t, n, true);
      }
      async dispose() {
        await this.telemetrySender.dispose();
        this.telemetryLogger.dispose();
        return Promise.all(this.disposables.map(e => e.dispose()));
      }
    };
  },
  52396: (module, exports) => {
    "use strict";

    var n;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseTelemetrySender = undefined;
    (function (e) {
      e[e.NOT_INSTANTIATED = 0] = 'NOT_INSTANTIATED';
      e[e.INSTANTIATING = 1] = 'INSTANTIATING';
      e[e.INSTANTIATED = 2] = 'INSTANTIATED';
    })(n ||= {});
    exports.BaseTelemetrySender = class {
      constructor(e, t) {
        this._instantiationStatus = n.NOT_INSTANTIATED;
        this._eventQueue = [];
        this._exceptionQueue = [];
        this._clientFactory = t;
        this._key = e;
      }
      sendEventData(e, t) {
        if (this._telemetryClient) {
          this._telemetryClient.logEvent(e, t);
        } else {
          if (this._instantiationStatus !== n.INSTANTIATED) {
            this._eventQueue.push({
              eventName: e,
              data: t
            });
          }
        }
      }
      sendErrorData(e, t) {
        if (!this._telemetryClient) {
          if (this._instantiationStatus !== n.INSTANTIATED) {
            this._exceptionQueue.push({
              exception: e,
              data: t
            });
          }
          return;
        }
        const r = {
          stack: e.stack,
          message: e.message,
          name: e.name
        };
        if (t) {
          const e = t.properties || t;
          t.properties = {
            ...e,
            ...r
          };
        } else {
          t = {
            properties: r
          };
        }
        this._telemetryClient.logEvent('unhandlederror', t);
      }
      async flush() {
        return this._telemetryClient?.flush();
      }
      async dispose() {
        if (this._telemetryClient) {
          await this._telemetryClient.dispose();
          this._telemetryClient = undefined;
        }
      }
      _flushQueues() {
        this._eventQueue.forEach(({
          eventName: e,
          data: t
        }) => this.sendEventData(e, t));
        this._eventQueue = [];
        this._exceptionQueue.forEach(({
          exception: e,
          data: t
        }) => this.sendErrorData(e, t));
        this._exceptionQueue = [];
      }
      instantiateSender() {
        if (this._instantiationStatus === n.NOT_INSTANTIATED) {
          this._instantiationStatus = n.INSTANTIATING;
          this._clientFactory(this._key).then(e => {
            this._telemetryClient = e;
            this._instantiationStatus = n.INSTANTIATED;
            this._flushQueues();
          }).catch(e => {
            console.error(e);
            this._instantiationStatus = n.INSTANTIATED;
          });
        }
      }
    };
  },
  38393: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TelemetryUtil = undefined;
    class n {
      static applyReplacements(e, t) {
        for (const n of Object.keys(e)) {
          for (const r of t) {
            if (r.lookup.test(n)) {
              if (r.replacementString !== undefined) {
                e[n] = r.replacementString;
              } else {
                delete e[n];
              }
            }
          }
        }
      }
      static shouldUseOneDataSystemSDK(e) {
        return e.length === 74 && e[32] === '-' && e[41] === '-' && e[46] === '-' && e[51] === '-' && e[56] === '-' && e[69] === '-';
      }
      static getAdditionalCommonProperties(e) {
        return {
          'common.os': e.platform,
          'common.nodeArch': e.architecture,
          'common.platformversion': (e.release || '').replace(/^(\d+)(\.\d+)?(\.\d+)?(.*)/, '$1$2$3'),
          'common.telemetryclientversion': '0.9.7'
        };
      }
      static getInstance() {
        if (!n._instance) {
          n._instance = new n();
        }
        return n._instance;
      }
    }
    exports.TelemetryUtil = n;
  },
  81170: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(65692));
    const A = __importStar(require(70857));
    const c = __importStar(require(91398));
    const u = require(25396);
    const l = require(72468);
    const g = require(86548);
    const d = require(52396);
    const h = require(38393);
    function f() {
      return {
        sendPOST: (e, t) => {
          const n = {
            method: 'POST',
            headers: {
              ...e.headers,
              'Content-Type': 'application/json',
              'Content-Length': Buffer.byteLength(e.data)
            }
          };
          try {
            const r = a.request(e.urlString, n, e => {
              e.on('data', function (n) {
                t(e.statusCode ?? 200, e.headers, n.toString());
              });
              e.on('error', function () {
                t(0, {});
              });
            });
            r.write(e.data, e => {
              if (e) {
                t(0, {});
              }
            });
            r.end();
          } catch {
            t(0, {});
          }
        }
      };
    }
    class p extends g.BaseTelemetryReporter {
      constructor(e, t) {
        let n = e => l.appInsightsClientFactory(e, c.env.machineId, f(), t);
        if (h.TelemetryUtil.shouldUseOneDataSystemSDK(e)) {
          n = e => u.oneDataSystemClientFactory(e, c, f());
        }
        const r = {
          release: A.release(),
          platform: A.platform(),
          architecture: A.arch()
        };
        const o = new d.BaseTelemetrySender(e, n);
        if (e && e.indexOf('AIF-') === 0) {
          throw new Error('AIF keys are no longer supported. Please switch to 1DS keys for 1st party extensions');
        }
        super(o, c, {
          additionalCommonProperties: h.TelemetryUtil.getAdditionalCommonProperties(r)
        });
      }
    }
    exports.default = p;
  },
  28594: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseMessageConnection = exports.Cancellation = exports.RAL = undefined;
    __exportStar(require(82000), exports);
    __exportStar(require(99660), exports);
    const a = __importDefault(require(83817));
    exports.RAL = a.default;
    var A = require(86386);
    Object.defineProperty(exports, 'Cancellation', {
      enumerable: true,
      get: function () {
        return A.Cancellation;
      }
    });
    var c = require(95737);
    Object.defineProperty(exports, 'BaseMessageConnection', {
      enumerable: true,
      get: function () {
        return c.BaseMessageConnection;
      }
    });
  },
  82000: function (module, exports, require) {
    "use strict";

    var r;
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    var g;
    var d = this && this.__classPrivateFieldSet || function (e, t, n, r, o) {
      if (r === 'm') {
        throw new TypeError('Private method is not writable');
      }
      if (r === 'a' && !o) {
        throw new TypeError('Private accessor was defined without a setter');
      }
      if (typeof t == 'function' ? e !== t || !o : !t.has(e)) {
        throw new TypeError('Cannot write private member to an object whose class did not declare it');
      }
      if (r === 'a') {
        o.call(e, n);
      } else {
        if (o) {
          o.value = n;
        } else {
          t.set(e, n);
        }
      }
      return n;
    };
    var h = this && this.__classPrivateFieldGet || function (e, t, n, r) {
      if (n === 'a' && !r) {
        throw new TypeError('Private accessor was defined without a getter');
      }
      if (typeof t == 'function' ? e !== t || !r : !t.has(e)) {
        throw new TypeError('Cannot read private member from an object whose class did not declare it');
      }
      if (n === 'm') {
        return r;
      } else {
        if (n === 'a') {
          return r.call(e);
        } else {
          if (r) {
            return r.value;
          } else {
            return t.get(e);
          }
        }
      }
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseServiceConnection = exports.RequestResult = exports.BaseClientConnection = exports.RPCError = exports.RPCErrno = exports.VariableResult = exports.Int64Result = exports.Uint64Result = exports.Int32Result = exports.Uint32Result = exports.Int16Result = exports.Uint16Result = exports.Int8Result = exports.Uint8Result = exports.Notification = exports.Request = undefined;
    const p = __importDefault(require(83817));
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    (function (e) {
      e.is = function (e) {
        return e instanceof Uint8Array || e instanceof Int8Array || e instanceof Uint16Array || e instanceof Int16Array || e instanceof Uint32Array || e instanceof Int32Array || e instanceof BigUint64Array || e instanceof BigInt64Array;
      };
      e.set = function (e, t, n) {
        if (n instanceof Uint8Array) {
          new Uint8Array(e, t, n.length).set(n);
        } else {
          if (n instanceof Int8Array) {
            new Int8Array(e, t, n.length).set(n);
          } else {
            if (n instanceof Uint16Array) {
              new Uint16Array(e, t, n.length).set(n);
            } else {
              if (n instanceof Int16Array) {
                new Int16Array(e, t, n.length).set(n);
              } else {
                if (n instanceof Uint32Array) {
                  new Uint32Array(e, t, n.length).set(n);
                } else {
                  if (n instanceof Int32Array) {
                    new Int32Array(e, t, n.length).set(n);
                  } else {
                    if (n instanceof BigUint64Array) {
                      new BigUint64Array(e, t, n.length).set(n);
                    } else {
                      if (!(n instanceof BigInt64Array)) {
                        throw new Error('Unknown type array type');
                      }
                      new BigInt64Array(e, t, n.length).set(n);
                    }
                  }
                }
              }
            }
          }
        }
      };
    })(m ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string';
      };
    })(I = exports.Request ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string' && t.id === undefined;
      };
    })(exports.Notification ||= {});
    class v {
      constructor() {}
      get kind() {
        return v.kind;
      }
      get byteLength() {
        return 0;
      }
      get length() {
        return 0;
      }
      getPadding(e) {
        return 0;
      }
      createResultArray(e, t) {
        return new Uint8Array(e, t, 0);
      }
    }
    v.kind = 0;
    class b {
      static fromLength(e) {
        return new b(e);
      }
      static fromByteLength(e) {
        return new b(e);
      }
      constructor(e) {
        r.set(this, undefined);
        d(this, r, e, 'f');
      }
      get kind() {
        return b.kind;
      }
      get byteLength() {
        return h(this, r, 'f') * Uint8Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, r, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint8Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint8Array;
      }
    }
    exports.Uint8Result = b;
    r = new WeakMap();
    b.kind = 1;
    class B {
      static fromLength(e) {
        return new B(e);
      }
      static fromByteLength(e) {
        return new B(e);
      }
      constructor(e) {
        o.set(this, undefined);
        d(this, o, e, 'f');
      }
      get kind() {
        return B.kind;
      }
      get byteLength() {
        return h(this, o, 'f') * Int8Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, o, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int8Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int8Array;
      }
    }
    exports.Int8Result = B;
    o = new WeakMap();
    B.kind = 2;
    class Q {
      static fromLength(e) {
        return new Q(e);
      }
      static fromByteLength(e) {
        if (e % Uint16Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Uint16Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new Q(e / Uint16Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        s.set(this, undefined);
        d(this, s, e, 'f');
      }
      get kind() {
        return Q.kind;
      }
      get byteLength() {
        return h(this, s, 'f') * Uint16Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, s, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint16Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint16Array;
      }
    }
    exports.Uint16Result = Q;
    s = new WeakMap();
    Q.kind = 3;
    class D {
      static fromLength(e) {
        return new D(e);
      }
      static fromByteLength(e) {
        if (e % Int16Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Int16Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new D(e / Int16Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        a.set(this, undefined);
        d(this, a, e, 'f');
      }
      get kind() {
        return D.kind;
      }
      get byteLength() {
        return h(this, a, 'f') * Int16Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, a, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int16Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int16Array;
      }
    }
    exports.Int16Result = D;
    a = new WeakMap();
    D.kind = 4;
    class S {
      static fromLength(e) {
        return new S(e);
      }
      static fromByteLength(e) {
        if (e % Uint32Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Uint32Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new S(e / Uint32Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        A.set(this, undefined);
        d(this, A, e, 'f');
      }
      get kind() {
        return S.kind;
      }
      get byteLength() {
        return h(this, A, 'f') * Uint32Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, A, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Uint32Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Uint32Array;
      }
    }
    exports.Uint32Result = S;
    A = new WeakMap();
    S.kind = 5;
    class T {
      static fromLength(e) {
        return new T(e);
      }
      static fromByteLength(e) {
        if (e % Int32Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${Int32Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new T(e / Int32Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        c.set(this, undefined);
        d(this, c, e, 'f');
      }
      get kind() {
        return T.kind;
      }
      get byteLength() {
        return h(this, c, 'f') * Int32Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, c, 'f');
      }
      getPadding(e) {
        return E.getPadding(e);
      }
      createResultArray(e, t) {
        return new Int32Array(e, t, this.length);
      }
      is(e) {
        return e instanceof Int32Array;
      }
    }
    exports.Int32Result = T;
    c = new WeakMap();
    T.kind = 6;
    class R {
      static fromLength(e) {
        return new R(e);
      }
      static fromByteLength(e) {
        if (e % BigUint64Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${BigUint64Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new R(e / BigUint64Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        u.set(this, undefined);
        d(this, u, e, 'f');
      }
      get kind() {
        return R.kind;
      }
      get byteLength() {
        return h(this, u, 'f') * BigUint64Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, u, 'f');
      }
      getPadding(e) {
        return BigUint64Array.BYTES_PER_ELEMENT - e % BigUint64Array.BYTES_PER_ELEMENT;
      }
      createResultArray(e, t) {
        return new BigUint64Array(e, t, this.length);
      }
      is(e) {
        return e instanceof BigUint64Array;
      }
    }
    exports.Uint64Result = R;
    u = new WeakMap();
    R.kind = 7;
    class k {
      static fromLength(e) {
        return new k(e);
      }
      static fromByteLength(e) {
        if (e % BigInt64Array.BYTES_PER_ELEMENT != 0) {
          throw new Error(`Byte length must be a multiple of ${BigInt64Array.BYTES_PER_ELEMENT} but was ${e}`);
        }
        return new k(e / BigInt64Array.BYTES_PER_ELEMENT);
      }
      constructor(e) {
        l.set(this, undefined);
        d(this, l, e, 'f');
      }
      get kind() {
        return k.kind;
      }
      get byteLength() {
        return h(this, l, 'f') * BigInt64Array.BYTES_PER_ELEMENT;
      }
      get length() {
        return h(this, l, 'f');
      }
      getPadding(e) {
        return BigInt64Array.BYTES_PER_ELEMENT - e % BigInt64Array.BYTES_PER_ELEMENT;
      }
      createResultArray(e, t) {
        return new BigInt64Array(e, t, this.length);
      }
      is(e) {
        return e instanceof BigInt64Array;
      }
    }
    exports.Int64Result = k;
    l = new WeakMap();
    k.kind = 8;
    class x {
      constructor(e) {
        g.set(this, undefined);
        d(this, g, e, 'f');
      }
      get kind() {
        return x.kind;
      }
      get mode() {
        return h(this, g, 'f');
      }
      get byteLength() {
        return 0;
      }
      get length() {
        return 0;
      }
      getPadding(e) {
        return 0;
      }
    }
    exports.VariableResult = x;
    g = new WeakMap();
    x.kind = 9;
    (function (e) {
      e.fromByteLength = function (e, t) {
        switch (e) {
          case b.kind:
            return b.fromByteLength(t);
          case B.kind:
            return B.fromByteLength(t);
          case Q.kind:
            return Q.fromByteLength(t);
          case D.kind:
            return D.fromByteLength(t);
          case S.kind:
            return S.fromByteLength(t);
          case T.kind:
            return T.fromByteLength(t);
          case R.kind:
            return R.fromByteLength(t);
          case k.kind:
            return k.fromByteLength(t);
          case x.kind:
            throw new Error('No result array for variable results result type.');
          default:
            throw new Error(`Unknown result kind ${e}`);
        }
      };
      e.getPadding = function (e) {
        return 4 - e % 4;
      };
    })(E ||= {});
    (function (e) {
      e.is = function (e) {
        return e instanceof b || e instanceof B || e instanceof Q || e instanceof D || e instanceof S || e instanceof T || e instanceof R || e instanceof k || e instanceof x || e instanceof v;
      };
    })(y ||= {});
    (function (e) {
      e.Success = 0;
      e.TimedOut = 1;
      e.UnknownError = 16384;
      e.LazyResultFailed = e.UnknownError + 1;
      e.NoHandlerFound = e.LazyResultFailed + 1;
      e.InvalidMessageFormat = e.NoHandlerFound + 1;
      e.$Custom = 32768;
    })(w = exports.RPCErrno ||= {});
    class P extends Error {
      constructor(e, t) {
        super(t);
        this.errno = e;
      }
    }
    exports.RPCError = P;
    exports.BaseClientConnection = class {
      constructor() {
        this.sendRequest = this._sendRequest;
        this.id = 1;
        this.textEncoder = p.default().TextEncoder.create();
        this.textDecoder = p.default().TextDecoder.create();
        this.readyPromise = new Promise((e, t) => {
          this.readyCallbacks = {
            resolve: e,
            reject: t
          };
        });
      }
      serviceReady() {
        return this.readyPromise;
      }
      _sendRequest(e, t, n, r) {
        const o = this.id++;
        const s = {
          id: o,
          method: e
        };
        let a;
        let A;
        let c = new v();
        if (y.is(t)) {
          c = t;
        } else {
          if (typeof t == 'number') {
            A = t;
          } else {
            if (t !== undefined || t !== null) {
              a = t;
            }
          }
        }
        if (typeof n == 'number') {
          A = n;
        } else {
          if (n !== undefined) {
            c = n;
          }
        }
        if (typeof r == 'number') {
          A = r;
        }
        if (a !== undefined) {
          s.params = {};
          for (const e of Object.keys(a)) {
            if (e !== 'binary') {
              s.params[e] = a[e];
            } else {
              s.params.binary = null;
            }
          }
        }
        const u = this.textEncoder.encode(JSON.stringify(s, undefined, 0));
        const l = a?.binary;
        const g = l !== undefined ? l.byteLength : 0;
        const d = 36 + u.byteLength;
        const h = c.byteLength;
        const f = c.getPadding(d + g);
        const m = d + g + f;
        const I = 36 + u.byteLength + g + f + h;
        const E = new SharedArrayBuffer(I);
        const B = new Uint32Array(E, 4, 8);
        B[0] = 36;
        B[1] = u.byteLength;
        B[2] = d;
        B[3] = g;
        B[4] = w.Success;
        B[5] = c.kind;
        B[6] = m;
        B[7] = h;
        const Q = new Uint8Array(E);
        Q.set(u, 36);
        if (l !== undefined) {
          Q.set(l, d);
        }
        const D = new Int32Array(E, 0, 1);
        Atomics.store(D, 0, 0);
        this.postMessage(E);
        switch (Atomics.wait(D, 0, 0, A)) {
          case 'timed-out':
            return {
              errno: w.TimedOut
            };
          case 'not-equal':
            if (Atomics.load(D, 0) !== 1) {
              return {
                errno: w.UnknownError
              };
            }
        }
        const S = B[4];
        if (S !== 0) {
          return {
            errno: S
          };
        }
        switch (c.kind) {
          case v.kind:
            return {
              errno: 0
            };
          case x.kind:
            const e = B[7];
            if (e === 0) {
              return {
                errno: 0,
                data: c.mode === 'binary' ? new Uint8Array(0) : ''
              };
            }
            const t = this._sendRequest('$/fetchResult', {
              resultId: o
            }, b.fromLength(e), A);
            if (t.errno !== 0) {
              return {
                errno: t.errno
              };
            }
            if (!_.hasData(t)) {
              return {
                errno: w.LazyResultFailed
              };
            }
            try {
              return {
                errno: 0,
                data: c.mode === 'binary' ? t.data : JSON.parse(this.textDecoder.decode(t.data.slice()))
              };
            } catch (e) {
              p.default().console.error(e);
              return {
                errno: w.LazyResultFailed
              };
            }
          default:
            return {
              errno: 0,
              data: c.createResultArray(E, m)
            };
        }
      }
      handleMessage(e) {
        if (e.method === '$/ready') {
          this.readyCallbacks.resolve(e.params);
        }
      }
    };
    (function (e) {
      e.hasData = function (e) {
        const t = e;
        return t.errno === 0 && t.data !== undefined;
      };
    })(_ = exports.RequestResult ||= {});
    exports.BaseServiceConnection = class {
      constructor() {
        this.onRequest = this._onRequest;
        this.textDecoder = p.default().TextDecoder.create();
        this.textEncoder = p.default().TextEncoder.create();
        this.requestHandlers = new Map();
        this.requestResults = new Map();
      }
      _onRequest(e, t) {
        this.requestHandlers.set(e, t);
        return {
          dispose: () => this.requestHandlers.delete(e)
        };
      }
      async handleMessage(e) {
        const t = new Uint32Array(e, 4, 8);
        const n = t[0];
        const r = t[1];
        try {
          const o = JSON.parse(this.textDecoder.decode(new Uint8Array(e, n, r).slice()));
          if (I.is(o)) {
            if (o.method === '$/fetchResult') {
              const n = o.params.resultId;
              const r = this.requestResults.get(n);
              this.requestResults.delete(n);
              const s = t[6];
              const a = t[7];
              if (r !== undefined && r.byteLength === a) {
                m.set(e, s, r);
                t[4] = w.Success;
              } else {
                t[4] = w.LazyResultFailed;
              }
            } else {
              if (o.params?.binary === null) {
                const n = t[3];
                const r = t[2];
                const s = new Uint8Array(e, r, n);
                o.params = o.params ?? {};
                o.params.binary = s;
              }
              const n = this.requestHandlers.get(o.method);
              if (n !== undefined) {
                const r = t[5];
                const s = t[6];
                const a = t[7];
                let A;
                let c;
                switch (r) {
                  case v.kind:
                    A = o.params !== undefined ? n(o.params) : n();
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                    break;
                  case x.kind:
                    A = o.params !== undefined ? n(o.params) : n();
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                    if (c.errno === 0 && _.hasData(c)) {
                      const e = c.data;
                      const n = m.is(e) ? e : this.textEncoder.encode(JSON.stringify(e, undefined, 0));
                      t[7] = n.byteLength;
                      if (n.byteLength > 0) {
                        this.requestResults.set(o.id, n);
                      }
                    }
                    break;
                  default:
                    const u = E.fromByteLength(r, a).createResultArray(e, s);
                    A = o.params !== undefined ? n(o.params, u) : n(u);
                    c = A instanceof Promise ? await A : A;
                    t[4] = c.errno;
                }
              } else {
                t[4] = w.NoHandlerFound;
              }
            }
          } else {
            t[4] = w.InvalidMessageFormat;
          }
        } catch (e) {
          p.default().console.error(e);
          t[4] = w.UnknownError;
        }
        const o = new Int32Array(e, 0, 1);
        Atomics.store(o, 0, 1);
        Atomics.notify(o, 0);
      }
      signalReady(e) {
        const t = {
          method: '$/ready',
          params: e
        };
        this.postMessage(t);
      }
    };
  },
  86386: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Cancellation = undefined;
    (function (e) {
      e.addData = function (e) {
        if (e.$cancellationData !== undefined) {
          throw new Error('Message already has a property $cancellationData');
        }
        const t = new SharedArrayBuffer(4);
        const n = new Int32Array(t, 0, 1);
        n[0] = 0;
        e.$cancellationData = t;
        return () => {
          Atomics.store(n, 0, 1);
        };
      };
      e.retrieveCheck = function (e) {
        const t = e;
        if (!(t.$cancellationData instanceof SharedArrayBuffer)) {
          return () => false;
        }
        const n = new Int32Array(t.$cancellationData, 0, 1);
        return () => Atomics.load(n, 0) === 1;
      };
    })(exports.Cancellation ||= {});
  },
  95737: (module, exports) => {
    "use strict";

    var n;
    var r;
    var o;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseMessageConnection = undefined;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.id == 'number' && typeof t.method == 'string';
      };
    })(n ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.method == 'string' && t.id === undefined;
      };
    })(r ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && typeof t.id == 'number' && (t.error !== undefined || t.result !== undefined);
      };
    })(o ||= {});
    class s {
      constructor() {
        this.sendRequest = this._sendRequest;
        this.onRequest = this._onRequest;
        this.sendNotification = this._sendNotification;
        this.onNotification = this._onNotification;
        this.id = 1;
        this.responsePromises = new Map();
        this.requestHandlers = new Map();
        this.notificationHandlers = new Map();
      }
      _sendRequest(e, t, n) {
        if (e === undefined) {
          return Promise.resolve();
        } else {
          return new Promise((r, o) => {
            const s = this.id++;
            const a = {
              id: s,
              method: e
            };
            if (t !== undefined) {
              a.params = t;
            }
            this.responsePromises.set(s, {
              resolve: r,
              reject: o,
              method: a.method
            });
            this.postMessage(a, n);
          });
        }
      }
      _onRequest(e, t) {
        if (e !== undefined && t !== undefined) {
          this.requestHandlers.set(e, t);
        }
      }
      _sendNotification(e, t, n) {
        if (e === undefined) {
          return;
        }
        const r = {
          method: e
        };
        if (t !== undefined) {
          r.params = t;
        }
        this.postMessage(r, n);
      }
      _onNotification(e, t) {
        if (e !== undefined && t !== undefined) {
          this.notificationHandlers.set(e, t);
        }
      }
      async handleMessage(e) {
        if (n.is(e)) {
          const t = e.id;
          const n = this.requestHandlers.get(e.method);
          if (n !== undefined) {
            try {
              const r = await n(e.params);
              this.sendResultResponse(t, r);
            } catch (e) {
              this.sendErrorResponse(t, e);
            }
          }
        } else {
          if (r.is(e)) {
            const t = this.notificationHandlers.get(e.method);
            if (t !== undefined) {
              t(e.params);
            }
          } else {
            if (o.is(e)) {
              const t = e.id;
              const n = this.responsePromises.get(t);
              if (n !== undefined) {
                this.responsePromises.delete(t);
                if (e.result !== undefined) {
                  n.resolve(e.result);
                } else {
                  if (e.error !== undefined) {
                    n.reject(typeof e.error == 'string' ? new Error(e.error) : e.error);
                  } else {
                    n.reject(new Error('Response has neither a result nor an error value'));
                  }
                }
              }
            }
          }
        }
      }
      sendResultResponse(e, t) {
        const n = {
          id: e,
          result: t === undefined ? null : t
        };
        this.postMessage(n);
      }
      sendErrorResponse(e, t) {
        const n = {
          id: e,
          error: t === undefined ? 'Unknown error' : t instanceof Error ? t.message : t
        };
        this.postMessage(n);
      }
    }
    exports.BaseMessageConnection = s;
    (function (e) {
      e.Request = n;
      e.Notification = r;
      e.Response = o;
    })(s = exports.BaseMessageConnection ||= {});
  },
  99660: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DTOs = undefined;
    const r = require(82000);
    (function (e) {
      let t;
      let n;
      let o;
      let s;
      (function (e) {
        e.FileNotFound = r.RPCErrno.$Custom;
        e.FileExists = e.FileNotFound + 1;
        e.FileNotADirectory = e.FileExists + 1;
        e.FileIsADirectory = e.FileNotADirectory + 1;
        e.NoPermissions = e.FileIsADirectory + 1;
        e.Unavailable = e.NoPermissions + 1;
      })(t = e.FileSystemError ||= {});
      (function (e) {
        e[e.Unknown = 0] = 'Unknown';
        e[e.File = 1] = 'File';
        e[e.Directory = 2] = 'Directory';
        e[e.SymbolicLink = 64] = 'SymbolicLink';
      })(n = e.FileType ||= {});
      (function (e) {
        e[e.Readonly = 1] = 'Readonly';
      })(o = e.FilePermission ||= {});
      (function (e) {
        e.typedResult = r.Uint32Result.fromLength(5);
        e.create = function (e) {
          return {
            get type() {
              return e[0];
            },
            set type(t) {
              e[0] = t;
            },
            get ctime() {
              return e[1];
            },
            set ctime(t) {
              e[1] = t;
            },
            get mtime() {
              return e[2];
            },
            set mtime(t) {
              e[2] = t;
            },
            get size() {
              return e[3];
            },
            set size(t) {
              e[3] = t;
            },
            get permission() {
              return e[4];
            },
            set permission(t) {
              e[4] = t;
            }
          };
        };
      })(s = e.Stat ||= {});
    })(exports.DTOs ||= {});
  },
  83817: (module, exports) => {
    "use strict";

    var n;
    let r;
    function o() {
      if (r === undefined) {
        throw new Error('No runtime abstraction layer installed');
      }
      return r;
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports._RALType = undefined;
    (function (e) {
      e[e.Browser = 1] = 'Browser';
      e[e.Node = 2] = 'Node';
    })(n = exports._RALType ||= {});
    (function (e) {
      e.Type = n;
      e.install = function (e) {
        if (e === undefined) {
          throw new Error('No runtime abstraction layer provided');
        }
        r = e;
      };
    })(o ||= {});
    exports.default = o;
  },
  5279: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ServiceConnection = exports.ClientConnection = undefined;
    const o = __importDefault(require(83817));
    const s = require(82000);
    class a extends s.BaseClientConnection {
      constructor(e) {
        super();
        this.port = e;
        this.port.on('message', e => {
          try {
            this.handleMessage(e);
          } catch (e) {
            o.default().console.error(e);
          }
        });
      }
      postMessage(e) {
        this.port.postMessage(e);
      }
    }
    exports.ClientConnection = a;
    class A extends s.BaseServiceConnection {
      constructor(e) {
        super();
        this.port = e;
        this.port.on('message', async e => {
          try {
            await this.handleMessage(e);
          } catch (e) {
            o.default().console.error(e);
          }
        });
      }
      postMessage(e) {
        this.port.postMessage(e);
      }
    }
    exports.ServiceConnection = A;
  },
  16078: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MessageConnection = exports.ClientConnection = exports.ServiceConnection = undefined;
    __importDefault(require(60184)).default.install();
    __exportStar(require(28594), exports);
    var a = require(5279);
    Object.defineProperty(exports, 'ServiceConnection', {
      enumerable: true,
      get: function () {
        return a.ServiceConnection;
      }
    });
    Object.defineProperty(exports, 'ClientConnection', {
      enumerable: true,
      get: function () {
        return a.ClientConnection;
      }
    });
    var A = require(73580);
    Object.defineProperty(exports, 'MessageConnection', {
      enumerable: true,
      get: function () {
        return A.MessageConnection;
      }
    });
  },
  73580: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MessageConnection = undefined;
    const o = __importDefault(require(83817));
    const s = require(28167);
    const a = require(95737);
    class A extends a.BaseMessageConnection {
      constructor(e) {
        super();
        this.port = e;
      }
      postMessage(e, t) {
        this.port.postMessage(e, t);
      }
      listen() {
        this.port.on('message', e => {
          this.handleMessage(e).catch(o.default().console.error);
        });
      }
    }
    exports.MessageConnection = A;
    new A(s.parentPort);
  },
  60184: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const o = require(39023);
    const s = require(28167);
    const a = __importDefault(require(83817));
    const A = require(5279);
    class c extends A.ServiceConnection {
      constructor(e, t) {
        const n = new s.Worker(e, t !== undefined ? {
          argv: [t]
        } : undefined);
        super(n);
        this.worker = n;
      }
      terminate() {
        return this.worker.terminate();
      }
    }
    const u = Object.freeze({
      type: a.default.Type.Node,
      TextEncoder: Object.freeze({
        create: (e = 'utf-8') => ({
          encode: t => Buffer.from(t ?? '', e)
        })
      }),
      TextDecoder: Object.freeze({
        create: (e = 'utf-8') => new o.TextDecoder(e)
      }),
      console,
      timer: Object.freeze({
        setTimeout(e, t, ...n) {
          const r = setTimeout(e, t, ...n);
          return {
            dispose: () => clearTimeout(r)
          };
        },
        setImmediate(e, ...t) {
          const n = setImmediate(e, ...t);
          return {
            dispose: () => clearImmediate(n)
          };
        },
        setInterval(e, t, ...n) {
          const r = setInterval(e, t, ...n);
          return {
            dispose: () => clearInterval(r)
          };
        }
      }),
      $testing: Object.freeze({
        ClientConnection: Object.freeze({
          create() {
            if (!s.parentPort) {
              throw new Error('No parent port defined. Shouldn\'t happen in test setup');
            }
            return new A.ClientConnection(s.parentPort);
          }
        }),
        ServiceConnection: Object.freeze({
          create: (e, t) => new c(e, t)
        }),
        get testCase() {
          return process.argv[2];
        }
      })
    });
    function l() {
      return u;
    }
    (function (e) {
      e.install = function () {
        a.default.install(u);
      };
    })(l ||= {});
    exports.default = l;
  },
  98696: (module, exports, require) => {
    "use strict";

    const r = require(83817);
    module.exports = require(16078);
    module.exports.default = r.default;
  },
  8505: module => {
    "use strict";

    function t(e, t, o) {
      if (e instanceof RegExp) {
        e = n(e, o);
      }
      if (t instanceof RegExp) {
        t = n(t, o);
      }
      var s = r(e, t, o);
      return s && {
        start: s[0],
        end: s[1],
        pre: o.slice(0, s[0]),
        body: o.slice(s[0] + e.length, s[1]),
        post: o.slice(s[1] + t.length)
      };
    }
    function n(e, t) {
      var n = t.match(e);
      if (n) {
        return n[0];
      } else {
        return null;
      }
    }
    function r(e, t, n) {
      var r;
      var o;
      var s;
      var a;
      var A;
      var c = n.indexOf(e);
      var u = n.indexOf(t, c + 1);
      var l = c;
      if (c >= 0 && u > 0) {
        if (e === t) {
          return [c, u];
        }
        r = [];
        s = n.length;
        while (l >= 0 && !A) {
          if (l == c) {
            r.push(l);
            c = n.indexOf(e, l + 1);
          } else {
            if (r.length == 1) {
              A = [r.pop(), u];
            } else {
              if ((o = r.pop()) < s) {
                s = o;
                a = u;
              }
              u = n.indexOf(t, l + 1);
            }
          }
          l = c < u && c >= 0 ? c : u;
        }
        if (r.length) {
          A = [s, a];
        }
      }
      return A;
    }
    module.exports = t;
    t.range = r;
  },
  55211: (module, exports, require) => {
    "use strict";

    function r(e, t = false) {
      const n = e.length;
      let r = 0;
      let A = '';
      let c = 0;
      let u = 16;
      let l = 0;
      let g = 0;
      let d = 0;
      let h = 0;
      let f = 0;
      function p(t, n) {
        let o = 0;
        let s = 0;
        while (o < t || !n) {
          let t = e.charCodeAt(r);
          if (t >= 48 && t <= 57) {
            s = s * 16 + t - 48;
          } else {
            if (t >= 65 && t <= 70) {
              s = s * 16 + t - 65 + 10;
            } else {
              if (!(t >= 97) || !(t <= 102)) {
                break;
              }
              s = s * 16 + t - 97 + 10;
            }
          }
          r++;
          o++;
        }
        if (o < t) {
          s = -1;
        }
        return s;
      }
      function m() {
        A = '';
        f = 0;
        c = r;
        g = l;
        h = d;
        if (r >= n) {
          c = n;
          return u = 17;
        }
        let t = e.charCodeAt(r);
        if (o(t)) {
          do {
            r++;
            A += String.fromCharCode(t);
            t = e.charCodeAt(r);
          } while (o(t));
          return u = 15;
        }
        if (s(t)) {
          r++;
          A += String.fromCharCode(t);
          if (t === 13 && e.charCodeAt(r) === 10) {
            r++;
            A += '\n';
          }
          l++;
          d = r;
          return u = 14;
        }
        switch (t) {
          case 123:
            r++;
            return u = 1;
          case 125:
            r++;
            return u = 2;
          case 91:
            r++;
            return u = 3;
          case 93:
            r++;
            return u = 4;
          case 58:
            r++;
            return u = 6;
          case 44:
            r++;
            return u = 5;
          case 34:
            r++;
            A = function () {
              let t = '';
              let o = r;
              while (true) {
                if (r >= n) {
                  t += e.substring(o, r);
                  f = 2;
                  break;
                }
                const a = e.charCodeAt(r);
                if (a === 34) {
                  t += e.substring(o, r);
                  r++;
                  break;
                }
                if (a !== 92) {
                  if (a >= 0 && a <= 31) {
                    if (s(a)) {
                      t += e.substring(o, r);
                      f = 2;
                      break;
                    }
                    f = 6;
                  }
                  r++;
                } else {
                  t += e.substring(o, r);
                  r++;
                  if (r >= n) {
                    f = 2;
                    break;
                  }
                  switch (e.charCodeAt(r++)) {
                    case 34:
                      t += '"';
                      break;
                    case 92:
                      t += '\\';
                      break;
                    case 47:
                      t += '/';
                      break;
                    case 98:
                      t += '\b';
                      break;
                    case 102:
                      t += '\f';
                      break;
                    case 110:
                      t += '\n';
                      break;
                    case 114:
                      t += '\r';
                      break;
                    case 116:
                      t += '\t';
                      break;
                    case 117:
                      const e = p(4, true);
                      if (e >= 0) {
                        t += String.fromCharCode(e);
                      } else {
                        f = 4;
                      }
                      break;
                    default:
                      f = 5;
                  }
                  o = r;
                }
              }
              return t;
            }();
            return u = 10;
          case 47:
            const o = r - 1;
            if (e.charCodeAt(r + 1) === 47) {
              for (r += 2; r < n && !s(e.charCodeAt(r));) {
                r++;
              }
              A = e.substring(o, r);
              return u = 12;
            }
            if (e.charCodeAt(r + 1) === 42) {
              r += 2;
              const t = n - 1;
              let a = false;
              while (r < t) {
                const t = e.charCodeAt(r);
                if (t === 42 && e.charCodeAt(r + 1) === 47) {
                  r += 2;
                  a = true;
                  break;
                }
                r++;
                if (s(t)) {
                  if (t === 13 && e.charCodeAt(r) === 10) {
                    r++;
                  }
                  l++;
                  d = r;
                }
              }
              if (!a) {
                r++;
                f = 1;
              }
              A = e.substring(o, r);
              return u = 13;
            }
            A += String.fromCharCode(t);
            r++;
            return u = 16;
          case 45:
            A += String.fromCharCode(t);
            r++;
            if (r === n || !a(e.charCodeAt(r))) {
              return u = 16;
            }
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            A += function () {
              let t = r;
              if (e.charCodeAt(r) === 48) {
                r++;
              } else {
                for (r++; r < e.length && a(e.charCodeAt(r));) {
                  r++;
                }
              }
              if (r < e.length && e.charCodeAt(r) === 46) {
                r++;
                if (!(r < e.length) || !a(e.charCodeAt(r))) {
                  f = 3;
                  return e.substring(t, r);
                }
                for (r++; r < e.length && a(e.charCodeAt(r));) {
                  r++;
                }
              }
              let n = r;
              if (r < e.length && (e.charCodeAt(r) === 69 || e.charCodeAt(r) === 101)) {
                r++;
                if (r < e.length && e.charCodeAt(r) === 43 || e.charCodeAt(r) === 45) {
                  r++;
                }
                if (r < e.length && a(e.charCodeAt(r))) {
                  for (r++; r < e.length && a(e.charCodeAt(r));) {
                    r++;
                  }
                  n = r;
                } else {
                  f = 3;
                }
              }
              return e.substring(t, n);
            }();
            return u = 11;
          default:
            while (r < n && I(t)) {
              r++;
              t = e.charCodeAt(r);
            }
            if (c !== r) {
              A = e.substring(c, r);
              switch (A) {
                case 'true':
                  return u = 8;
                case 'false':
                  return u = 9;
                case 'null':
                  return u = 7;
              }
              return u = 16;
            }
            A += String.fromCharCode(t);
            r++;
            return u = 16;
        }
      }
      function I(e) {
        if (o(e) || s(e)) {
          return false;
        }
        switch (e) {
          case 125:
          case 93:
          case 123:
          case 91:
          case 34:
          case 58:
          case 44:
          case 47:
            return false;
        }
        return true;
      }
      return {
        setPosition: function (e) {
          r = e;
          A = '';
          c = 0;
          u = 16;
          f = 0;
        },
        getPosition: () => r,
        scan: t ? function () {
          let e;
          do {
            e = m();
          } while (e >= 12 && e <= 15);
          return e;
        } : m,
        getToken: () => u,
        getTokenValue: () => A,
        getTokenOffset: () => c,
        getTokenLength: () => r - c,
        getTokenStartLine: () => g,
        getTokenStartCharacter: () => c - h,
        getTokenError: () => f
      };
    }
    function o(e) {
      return e === 32 || e === 9;
    }
    function s(e) {
      return e === 10 || e === 13;
    }
    function a(e) {
      return e >= 48 && e <= 57;
    }
    var A;
    require.r(exports);
    require.d(exports, {
      ParseErrorCode: () => O,
      ScanError: () => B,
      SyntaxKind: () => Q,
      applyEdits: () => U,
      createScanner: () => b,
      findNodeAtLocation: () => R,
      findNodeAtOffset: () => k,
      format: () => L,
      getLocation: () => D,
      getNodePath: () => x,
      getNodeValue: () => P,
      modify: () => K,
      parse: () => S,
      parseTree: () => T,
      printParseErrorCode: () => N,
      stripComments: () => M,
      visit: () => F
    });
    (function (e) {
      e[e.lineFeed = 10] = 'lineFeed';
      e[e.carriageReturn = 13] = 'carriageReturn';
      e[e.space = 32] = 'space';
      e[e._0 = 48] = '_0';
      e[e._1 = 49] = '_1';
      e[e._2 = 50] = '_2';
      e[e._3 = 51] = '_3';
      e[e._4 = 52] = '_4';
      e[e._5 = 53] = '_5';
      e[e._6 = 54] = '_6';
      e[e._7 = 55] = '_7';
      e[e._8 = 56] = '_8';
      e[e._9 = 57] = '_9';
      e[e.a = 97] = 'a';
      e[e.b = 98] = 'b';
      e[e.c = 99] = 'c';
      e[e.d = 100] = 'd';
      e[e.e = 101] = 'e';
      e[e.f = 102] = 'f';
      e[e.g = 103] = 'g';
      e[e.h = 104] = 'h';
      e[e.i = 105] = 'i';
      e[e.j = 106] = 'j';
      e[e.k = 107] = 'k';
      e[e.l = 108] = 'l';
      e[e.m = 109] = 'm';
      e[e.n = 110] = 'n';
      e[e.o = 111] = 'o';
      e[e.p = 112] = 'p';
      e[e.q = 113] = 'q';
      e[e.r = 114] = 'r';
      e[e.s = 115] = 's';
      e[e.t = 116] = 't';
      e[e.u = 117] = 'u';
      e[e.v = 118] = 'v';
      e[e.w = 119] = 'w';
      e[e.x = 120] = 'x';
      e[e.y = 121] = 'y';
      e[e.z = 122] = 'z';
      e[e.A = 65] = 'A';
      e[e.B = 66] = 'B';
      e[e.C = 67] = 'C';
      e[e.D = 68] = 'D';
      e[e.E = 69] = 'E';
      e[e.F = 70] = 'F';
      e[e.G = 71] = 'G';
      e[e.H = 72] = 'H';
      e[e.I = 73] = 'I';
      e[e.J = 74] = 'J';
      e[e.K = 75] = 'K';
      e[e.L = 76] = 'L';
      e[e.M = 77] = 'M';
      e[e.N = 78] = 'N';
      e[e.O = 79] = 'O';
      e[e.P = 80] = 'P';
      e[e.Q = 81] = 'Q';
      e[e.R = 82] = 'R';
      e[e.S = 83] = 'S';
      e[e.T = 84] = 'T';
      e[e.U = 85] = 'U';
      e[e.V = 86] = 'V';
      e[e.W = 87] = 'W';
      e[e.X = 88] = 'X';
      e[e.Y = 89] = 'Y';
      e[e.Z = 90] = 'Z';
      e[e.asterisk = 42] = 'asterisk';
      e[e.backslash = 92] = 'backslash';
      e[e.closeBrace = 125] = 'closeBrace';
      e[e.closeBracket = 93] = 'closeBracket';
      e[e.colon = 58] = 'colon';
      e[e.comma = 44] = 'comma';
      e[e.dot = 46] = 'dot';
      e[e.doubleQuote = 34] = 'doubleQuote';
      e[e.minus = 45] = 'minus';
      e[e.openBrace = 123] = 'openBrace';
      e[e.openBracket = 91] = 'openBracket';
      e[e.plus = 43] = 'plus';
      e[e.slash = 47] = 'slash';
      e[e.formFeed = 12] = 'formFeed';
      e[e.tab = 9] = 'tab';
    })(A ||= {});
    const c = new Array(20).fill(0).map((e, t) => ' '.repeat(t));
    const u = 200;
    const l = {
      ' ': {
        '\n': new Array(u).fill(0).map((e, t) => `
${' '.repeat(t)}`),
        '\r': new Array(u).fill(0).map((e, t) => `\r${' '.repeat(t)}`),
        '\r\n': new Array(u).fill(0).map((e, t) => `\r
${' '.repeat(t)}`)
      },
      '\t': {
        '\n': new Array(u).fill(0).map((e, t) => `
${'\t'.repeat(t)}`),
        '\r': new Array(u).fill(0).map((e, t) => `\r${'\t'.repeat(t)}`),
        '\r\n': new Array(u).fill(0).map((e, t) => `\r
${'\t'.repeat(t)}`)
      }
    };
    const g = ['\n', '\r', '\r\n'];
    function d(e, t, n) {
      let o;
      let s;
      let a;
      let A;
      let u;
      if (t) {
        A = t.offset;
        u = A + t.length;
        a = A;
        while (a > 0 && !f(e, a - 1)) {
          a--;
        }
        let r = u;
        while (r < e.length && !f(e, r)) {
          r++;
        }
        s = e.substring(a, r);
        o = function (e, t) {
          let n = 0;
          let r = 0;
          const o = t.tabSize || 4;
          while (n < e.length) {
            let t = e.charAt(n);
            if (t === c[1]) {
              r++;
            } else {
              if (t !== '\t') {
                break;
              }
              r += o;
            }
            n++;
          }
          return Math.floor(r / o);
        }(s, n);
      } else {
        s = e;
        o = 0;
        a = 0;
        A = 0;
        u = e.length;
      }
      const d = function (e, t) {
        for (let e = 0; e < t.length; e++) {
          const n = t.charAt(e);
          if (n === '\r') {
            if (e + 1 < t.length && t.charAt(e + 1) === '\n') {
              return '\r\n';
            } else {
              return '\r';
            }
          }
          if (n === '\n') {
            return '\n';
          }
        }
        return e && e.eol || '\n';
      }(n, e);
      const p = g.includes(d);
      let m;
      let I = 0;
      let E = 0;
      m = n.insertSpaces ? c[n.tabSize || 4] ?? h(c[1], n.tabSize || 4) : '\t';
      const y = m === '\t' ? '\t' : ' ';
      let w = r(s, false);
      let _ = false;
      function v() {
        if (I > 1) {
          return h(d, I) + h(m, o + E);
        }
        const e = m.length * (o + E);
        if (!p || e > l[y][d].length) {
          return d + h(m, o + E);
        } else {
          if (e <= 0) {
            return d;
          } else {
            return l[y][d][e];
          }
        }
      }
      function b() {
        let e = w.scan();
        for (I = 0; e === 15 || e === 14;) {
          if (e === 14 && n.keepLines) {
            I += 1;
          } else {
            if (e === 14) {
              I = 1;
            }
          }
          e = w.scan();
        }
        _ = e === 16 || w.getTokenError() !== 0;
        return e;
      }
      const B = [];
      function Q(n, r, o) {
        if (!_ && (!t || !!(r < u) && !!(o > A)) && e.substring(r, o) !== n) {
          B.push({
            offset: r,
            length: o - r,
            content: n
          });
        }
      }
      let D = b();
      if (n.keepLines && I > 0) {
        Q(h(d, I), 0, 0);
      }
      if (D !== 17) {
        let e = w.getTokenOffset() + a;
        Q(m.length * o < 20 && n.insertSpaces ? c[m.length * o] : h(m, o), a, e);
      }
      while (D !== 17) {
        let e = w.getTokenOffset() + w.getTokenLength() + a;
        let t = b();
        let r = '';
        let o = false;
        while (I === 0 && (t === 12 || t === 13)) {
          let n = w.getTokenOffset() + a;
          Q(c[1], e, n);
          e = w.getTokenOffset() + w.getTokenLength() + a;
          o = t === 12;
          r = o ? v() : '';
          t = b();
        }
        if (t === 2) {
          if (D !== 1) {
            E--;
          }
          if (n.keepLines && I > 0 || !n.keepLines && D !== 1) {
            r = v();
          } else {
            if (n.keepLines) {
              r = c[1];
            }
          }
        } else {
          if (t === 4) {
            if (D !== 3) {
              E--;
            }
            if (n.keepLines && I > 0 || !n.keepLines && D !== 3) {
              r = v();
            } else {
              if (n.keepLines) {
                r = c[1];
              }
            }
          } else {
            switch (D) {
              case 3:
              case 1:
                E++;
                r = n.keepLines && I > 0 || !n.keepLines ? v() : c[1];
                break;
              case 5:
                r = n.keepLines && I > 0 || !n.keepLines ? v() : c[1];
                break;
              case 12:
                r = v();
                break;
              case 13:
                if (I > 0) {
                  r = v();
                } else {
                  if (!o) {
                    r = c[1];
                  }
                }
                break;
              case 6:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (!o) {
                    r = c[1];
                  }
                }
                break;
              case 10:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (t === 6 && !o) {
                    r = '';
                  }
                }
                break;
              case 7:
              case 8:
              case 9:
              case 11:
              case 2:
              case 4:
                if (n.keepLines && I > 0) {
                  r = v();
                } else {
                  if (t !== 12 && t !== 13 || o) {
                    if (t !== 5 && t !== 17) {
                      _ = true;
                    }
                  } else {
                    r = c[1];
                  }
                }
                break;
              case 16:
                _ = true;
            }
            if (I > 0 && (t === 12 || t === 13)) {
              r = v();
            }
          }
        }
        if (t === 17) {
          r = n.keepLines && I > 0 ? v() : n.insertFinalNewline ? d : '';
        }
        Q(r, e, w.getTokenOffset() + a);
        D = t;
      }
      return B;
    }
    function h(e, t) {
      let n = '';
      for (let r = 0; r < t; r++) {
        n += e;
      }
      return n;
    }
    function f(e, t) {
      return '\r\n'.indexOf(e.charAt(t)) !== -1;
    }
    var p;
    function m(e, t = [], n = p.DEFAULT) {
      let r = {
        type: 'array',
        offset: -1,
        length: -1,
        children: [],
        parent: undefined
      };
      function o(e) {
        if (r.type === 'property') {
          r.length = e - r.offset;
          r = r.parent;
        }
      }
      function s(e) {
        r.children.push(e);
        return e;
      }
      E(e, {
        onObjectBegin: e => {
          r = s({
            type: 'object',
            offset: e,
            length: -1,
            parent: r,
            children: []
          });
        },
        onObjectProperty: (e, t, n) => {
          r = s({
            type: 'property',
            offset: t,
            length: -1,
            parent: r,
            children: []
          });
          r.children.push({
            type: 'string',
            value: e,
            offset: t,
            length: n,
            parent: r
          });
        },
        onObjectEnd: (e, t) => {
          o(e + t);
          r.length = e + t - r.offset;
          r = r.parent;
          o(e + t);
        },
        onArrayBegin: (e, t) => {
          r = s({
            type: 'array',
            offset: e,
            length: -1,
            parent: r,
            children: []
          });
        },
        onArrayEnd: (e, t) => {
          r.length = e + t - r.offset;
          r = r.parent;
          o(e + t);
        },
        onLiteralValue: (e, t, n) => {
          s({
            type: y(e),
            offset: t,
            length: n,
            parent: r,
            value: e
          });
          o(t + n);
        },
        onSeparator: (e, t, n) => {
          if (r.type === 'property') {
            if (e === ':') {
              r.colonOffset = t;
            } else {
              if (e === ',') {
                o(t);
              }
            }
          }
        },
        onError: (e, n, r) => {
          t.push({
            error: e,
            offset: n,
            length: r
          });
        }
      }, n);
      const a = r.children[0];
      if (a) {
        delete a.parent;
      }
      return a;
    }
    function I(e, t) {
      if (!e) {
        return;
      }
      let n = e;
      for (let e of t) {
        if (typeof e == 'string') {
          if (n.type !== 'object' || !Array.isArray(n.children)) {
            return;
          }
          let t = false;
          for (const r of n.children) {
            if (Array.isArray(r.children) && r.children[0].value === e && r.children.length === 2) {
              n = r.children[1];
              t = true;
              break;
            }
          }
          if (!t) {
            return;
          }
        } else {
          const t = e;
          if (n.type !== 'array' || t < 0 || !Array.isArray(n.children) || t >= n.children.length) {
            return;
          }
          n = n.children[t];
        }
      }
      return n;
    }
    function E(e, t, n = p.DEFAULT) {
      const o = r(e, false);
      const s = [];
      let a = 0;
      function A(e) {
        if (e) {
          return t => a === 0 && e(t, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter());
        } else {
          return () => true;
        }
      }
      function c(e) {
        if (e) {
          return t => a === 0 && e(t, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => s.slice());
        } else {
          return () => true;
        }
      }
      function u(e) {
        if (e) {
          return () => {
            if (a > 0) {
              a++;
            } else {
              if (e(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => s.slice()) === false) {
                a = 1;
              }
            }
          };
        } else {
          return () => true;
        }
      }
      function l(e) {
        if (e) {
          return () => {
            if (a > 0) {
              a--;
            }
            if (a === 0) {
              e(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter());
            }
          };
        } else {
          return () => true;
        }
      }
      const g = u(t.onObjectBegin);
      const d = c(t.onObjectProperty);
      const h = l(t.onObjectEnd);
      const f = u(t.onArrayBegin);
      const m = l(t.onArrayEnd);
      const I = c(t.onLiteralValue);
      const E = A(t.onSeparator);
      const y = (_ = t.onComment) ? () => a === 0 && _(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => true;
      const w = A(t.onError);
      var _;
      const v = n && n.disallowComments;
      const b = n && n.allowTrailingComma;
      function B() {
        while (true) {
          const e = o.scan();
          switch (o.getTokenError()) {
            case 4:
              Q(14);
              break;
            case 5:
              Q(15);
              break;
            case 3:
              Q(13);
              break;
            case 1:
              if (!v) {
                Q(11);
              }
              break;
            case 2:
              Q(12);
              break;
            case 6:
              Q(16);
          }
          switch (e) {
            case 12:
            case 13:
              if (v) {
                Q(10);
              } else {
                y();
              }
              break;
            case 16:
              Q(1);
              break;
            case 15:
            case 14:
              break;
            default:
              return e;
          }
        }
      }
      function Q(e, t = [], n = []) {
        w(e);
        if (t.length + n.length > 0) {
          let e = o.getToken();
          while (e !== 17) {
            if (t.indexOf(e) !== -1) {
              B();
              break;
            }
            if (n.indexOf(e) !== -1) {
              break;
            }
            e = B();
          }
        }
      }
      function D(e) {
        const t = o.getTokenValue();
        if (e) {
          I(t);
        } else {
          d(t);
          s.push(t);
        }
        B();
        return true;
      }
      function S() {
        switch (o.getToken()) {
          case 3:
            return function () {
              f();
              B();
              let e = true;
              let t = false;
              while (o.getToken() !== 4 && o.getToken() !== 17) {
                if (o.getToken() === 5) {
                  if (!t) {
                    Q(4, [], []);
                  }
                  E(',');
                  B();
                  if (o.getToken() === 4 && b) {
                    break;
                  }
                } else {
                  if (t) {
                    Q(6, [], []);
                  }
                }
                if (e) {
                  s.push(0);
                  e = false;
                } else {
                  s[s.length - 1]++;
                }
                if (!S()) {
                  Q(4, [], [4, 5]);
                }
                t = true;
              }
              m();
              if (!e) {
                s.pop();
              }
              if (o.getToken() !== 4) {
                Q(8, [4], []);
              } else {
                B();
              }
              return true;
            }();
          case 1:
            return function () {
              g();
              B();
              let e = false;
              while (o.getToken() !== 2 && o.getToken() !== 17) {
                if (o.getToken() === 5) {
                  if (!e) {
                    Q(4, [], []);
                  }
                  E(',');
                  B();
                  if (o.getToken() === 2 && b) {
                    break;
                  }
                } else {
                  if (e) {
                    Q(6, [], []);
                  }
                }
                if (!(o.getToken() !== 10 ? (Q(3, [], [2, 5]), 0) : (D(false), o.getToken() === 6 ? (E(':'), B(), S() || Q(4, [], [2, 5])) : Q(5, [], [2, 5]), s.pop(), 1))) {
                  Q(4, [], [2, 5]);
                }
                e = true;
              }
              h();
              if (o.getToken() !== 2) {
                Q(7, [2], []);
              } else {
                B();
              }
              return true;
            }();
          case 10:
            return D(true);
          default:
            return function () {
              switch (o.getToken()) {
                case 11:
                  const e = o.getTokenValue();
                  let t = Number(e);
                  if (isNaN(t)) {
                    Q(2);
                    t = 0;
                  }
                  I(t);
                  break;
                case 7:
                  I(null);
                  break;
                case 8:
                  I(true);
                  break;
                case 9:
                  I(false);
                  break;
                default:
                  return false;
              }
              B();
              return true;
            }();
        }
      }
      B();
      if (o.getToken() === 17) {
        return !!n.allowEmptyContent || (Q(4, [], []), false);
      } else {
        if (S()) {
          if (o.getToken() !== 17) {
            Q(9, [], []);
          }
          return true;
        } else {
          Q(4, [], []);
          return false;
        }
      }
    }
    function y(e) {
      switch (typeof e) {
        case 'boolean':
          return 'boolean';
        case 'number':
          return 'number';
        case 'string':
          return 'string';
        case 'object':
          if (e) {
            if (Array.isArray(e)) {
              return 'array';
            } else {
              return 'object';
            }
          } else {
            return 'null';
          }
        default:
          return 'null';
      }
    }
    function w(e, t, n, r) {
      const o = t.slice();
      const s = m(e, []);
      let a;
      let A;
      while (o.length > 0 && (A = o.pop(), a = I(s, o), a === undefined && n !== undefined)) {
        n = typeof A == 'string' ? {
          [A]: n
        } : [n];
      }
      if (a) {
        if (a.type === 'object' && typeof A == 'string' && Array.isArray(a.children)) {
          const t = I(a, [A]);
          if (t !== undefined) {
            if (n === undefined) {
              if (!t.parent) {
                throw new Error('Malformed AST');
              }
              const n = a.children.indexOf(t.parent);
              let o;
              let s = t.parent.offset + t.parent.length;
              if (n > 0) {
                let e = a.children[n - 1];
                o = e.offset + e.length;
              } else {
                o = a.offset + 1;
                if (a.children.length > 1) {
                  s = a.children[1].offset;
                }
              }
              return _(e, {
                offset: o,
                length: s - o,
                content: ''
              }, r);
            }
            return _(e, {
              offset: t.offset,
              length: t.length,
              content: JSON.stringify(n)
            }, r);
          }
          {
            if (n === undefined) {
              return [];
            }
            const t = `${JSON.stringify(A)}: ${JSON.stringify(n)}`;
            const o = r.getInsertionIndex ? r.getInsertionIndex(a.children.map(e => e.children[0].value)) : a.children.length;
            let s;
            if (o > 0) {
              let e = a.children[o - 1];
              s = {
                offset: e.offset + e.length,
                length: 0,
                content: `,${t}`
              };
            } else {
              s = a.children.length === 0 ? {
                offset: a.offset + 1,
                length: 0,
                content: t
              } : {
                offset: a.offset + 1,
                length: 0,
                content: t + ','
              };
            }
            return _(e, s, r);
          }
        }
        if (a.type === 'array' && typeof A == 'number' && Array.isArray(a.children)) {
          const t = A;
          if (t === -1) {
            const t = `${JSON.stringify(n)}`;
            let o;
            if (a.children.length === 0) {
              o = {
                offset: a.offset + 1,
                length: 0,
                content: t
              };
            } else {
              const e = a.children[a.children.length - 1];
              o = {
                offset: e.offset + e.length,
                length: 0,
                content: `,${t}`
              };
            }
            return _(e, o, r);
          }
          if (n === undefined && a.children.length >= 0) {
            const t = A;
            const n = a.children[t];
            let o;
            if (a.children.length === 1) {
              o = {
                offset: a.offset + 1,
                length: a.length - 2,
                content: ''
              };
            } else {
              if (a.children.length - 1 === t) {
                let e = a.children[t - 1];
                let n = e.offset + e.length;
                o = {
                  offset: n,
                  length: a.offset + a.length - 2 - n,
                  content: ''
                };
              } else {
                o = {
                  offset: n.offset,
                  length: a.children[t + 1].offset - n.offset,
                  content: ''
                };
              }
            }
            return _(e, o, r);
          }
          if (n !== undefined) {
            let t;
            const o = `${JSON.stringify(n)}`;
            if (!r.isArrayInsertion && a.children.length > A) {
              const e = a.children[A];
              t = {
                offset: e.offset,
                length: e.length,
                content: o
              };
            } else {
              if (a.children.length === 0 || A === 0) {
                t = {
                  offset: a.offset + 1,
                  length: 0,
                  content: a.children.length === 0 ? o : o + ','
                };
              } else {
                const e = A > a.children.length ? a.children.length : A;
                const n = a.children[e - 1];
                t = {
                  offset: n.offset + n.length,
                  length: 0,
                  content: `,${o}`
                };
              }
            }
            return _(e, t, r);
          }
          throw new Error(`Can not ${n === undefined ? 'remove' : r.isArrayInsertion ? 'insert' : 'modify'} Array index ${t} as length is not sufficient`);
        }
        throw new Error(`Can not add ${typeof A != 'number' ? 'index' : 'property'} to parent of type ${a.type}`);
      }
      if (n === undefined) {
        throw new Error('Can not delete in empty document');
      }
      return _(e, {
        offset: s ? s.offset : 0,
        length: s ? s.length : 0,
        content: JSON.stringify(n)
      }, r);
    }
    function _(e, t, n) {
      if (!n.formattingOptions) {
        return [t];
      }
      let r = v(e, t);
      let o = t.offset;
      let s = t.offset + t.content.length;
      if (t.length === 0 || t.content.length === 0) {
        while (o > 0 && !f(r, o - 1)) {
          o--;
        }
        while (s < r.length && !f(r, s)) {
          s++;
        }
      }
      const a = d(r, {
        offset: o,
        length: s - o
      }, {
        ...n.formattingOptions,
        keepLines: false
      });
      for (let e = a.length - 1; e >= 0; e--) {
        const t = a[e];
        r = v(r, t);
        o = Math.min(o, t.offset);
        s = Math.max(s, t.offset + t.length);
        s += t.content.length - t.length;
      }
      return [{
        offset: o,
        length: e.length - (r.length - s) - o,
        content: r.substring(o, s)
      }];
    }
    function v(e, t) {
      return e.substring(0, t.offset) + t.content + e.substring(t.offset + t.length);
    }
    (function (e) {
      e.DEFAULT = {
        allowTrailingComma: false
      };
    })(p ||= {});
    const b = r;
    var B;
    var Q;
    (function (e) {
      e[e.None = 0] = 'None';
      e[e.UnexpectedEndOfComment = 1] = 'UnexpectedEndOfComment';
      e[e.UnexpectedEndOfString = 2] = 'UnexpectedEndOfString';
      e[e.UnexpectedEndOfNumber = 3] = 'UnexpectedEndOfNumber';
      e[e.InvalidUnicode = 4] = 'InvalidUnicode';
      e[e.InvalidEscapeCharacter = 5] = 'InvalidEscapeCharacter';
      e[e.InvalidCharacter = 6] = 'InvalidCharacter';
    })(B ||= {});
    (function (e) {
      e[e.OpenBraceToken = 1] = 'OpenBraceToken';
      e[e.CloseBraceToken = 2] = 'CloseBraceToken';
      e[e.OpenBracketToken = 3] = 'OpenBracketToken';
      e[e.CloseBracketToken = 4] = 'CloseBracketToken';
      e[e.CommaToken = 5] = 'CommaToken';
      e[e.ColonToken = 6] = 'ColonToken';
      e[e.NullKeyword = 7] = 'NullKeyword';
      e[e.TrueKeyword = 8] = 'TrueKeyword';
      e[e.FalseKeyword = 9] = 'FalseKeyword';
      e[e.StringLiteral = 10] = 'StringLiteral';
      e[e.NumericLiteral = 11] = 'NumericLiteral';
      e[e.LineCommentTrivia = 12] = 'LineCommentTrivia';
      e[e.BlockCommentTrivia = 13] = 'BlockCommentTrivia';
      e[e.LineBreakTrivia = 14] = 'LineBreakTrivia';
      e[e.Trivia = 15] = 'Trivia';
      e[e.Unknown = 16] = 'Unknown';
      e[e.EOF = 17] = 'EOF';
    })(Q ||= {});
    const D = function (e, t) {
      const n = [];
      const r = new Object();
      let o;
      const s = {
        value: {},
        offset: 0,
        length: 0,
        type: 'object',
        parent: undefined
      };
      let a = false;
      function A(e, t, n, r) {
        s.value = e;
        s.offset = t;
        s.length = n;
        s.type = r;
        s.colonOffset = undefined;
        o = s;
      }
      try {
        E(e, {
          onObjectBegin: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            a = t > e;
            n.push('');
          },
          onObjectProperty: (e, o, s) => {
            if (t < o) {
              throw r;
            }
            A(e, o, s, 'property');
            n[n.length - 1] = e;
            if (t <= o + s) {
              throw r;
            }
          },
          onObjectEnd: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.pop();
          },
          onArrayBegin: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.push(0);
          },
          onArrayEnd: (e, s) => {
            if (t <= e) {
              throw r;
            }
            o = undefined;
            n.pop();
          },
          onLiteralValue: (e, n, o) => {
            if (t < n) {
              throw r;
            }
            A(e, n, o, y(e));
            if (t <= n + o) {
              throw r;
            }
          },
          onSeparator: (e, s, A) => {
            if (t <= s) {
              throw r;
            }
            if (e === ':' && o && o.type === 'property') {
              o.colonOffset = s;
              a = false;
              o = undefined;
            } else {
              if (e === ',') {
                const e = n[n.length - 1];
                if (typeof e == 'number') {
                  n[n.length - 1] = e + 1;
                } else {
                  a = true;
                  n[n.length - 1] = '';
                }
                o = undefined;
              }
            }
          }
        });
      } catch (e) {
        if (e !== r) {
          throw e;
        }
      }
      return {
        path: n,
        previousNode: o,
        isAtPropertyKey: a,
        matches: e => {
          let t = 0;
          for (let r = 0; t < e.length && r < n.length; r++) {
            if (e[t] === n[r] || e[t] === '*') {
              t++;
            } else {
              if (e[t] !== '**') {
                return false;
              }
            }
          }
          return t === e.length;
        }
      };
    };
    const S = function (e, t = [], n = p.DEFAULT) {
      let r = null;
      let o = [];
      const s = [];
      function a(e) {
        if (Array.isArray(o)) {
          o.push(e);
        } else {
          if (r !== null) {
            o[r] = e;
          }
        }
      }
      E(e, {
        onObjectBegin: () => {
          const e = {};
          a(e);
          s.push(o);
          o = e;
          r = null;
        },
        onObjectProperty: e => {
          r = e;
        },
        onObjectEnd: () => {
          o = s.pop();
        },
        onArrayBegin: () => {
          const e = [];
          a(e);
          s.push(o);
          o = e;
          r = null;
        },
        onArrayEnd: () => {
          o = s.pop();
        },
        onLiteralValue: a,
        onError: (e, n, r) => {
          t.push({
            error: e,
            offset: n,
            length: r
          });
        }
      }, n);
      return o[0];
    };
    const T = m;
    const R = I;
    const k = function e(t, n, r = false) {
      if (function (e, t, n = false) {
        return t >= e.offset && t < e.offset + e.length || n && t === e.offset + e.length;
      }(t, n, r)) {
        const o = t.children;
        if (Array.isArray(o)) {
          for (let t = 0; t < o.length && o[t].offset <= n; t++) {
            const s = e(o[t], n, r);
            if (s) {
              return s;
            }
          }
        }
        return t;
      }
    };
    const x = function e(t) {
      if (!t.parent || !t.parent.children) {
        return [];
      }
      const n = e(t.parent);
      if (t.parent.type === 'property') {
        const e = t.parent.children[0].value;
        n.push(e);
      } else {
        if (t.parent.type === 'array') {
          const e = t.parent.children.indexOf(t);
          if (e !== -1) {
            n.push(e);
          }
        }
      }
      return n;
    };
    const P = function e(t) {
      switch (t.type) {
        case 'array':
          return t.children.map(e);
        case 'object':
          const n = Object.create(null);
          for (let r of t.children) {
            const t = r.children[1];
            if (t) {
              n[r.children[0].value] = e(t);
            }
          }
          return n;
        case 'null':
        case 'string':
        case 'number':
        case 'boolean':
          return t.value;
        default:
          return;
      }
    };
    const F = E;
    const M = function (e, t) {
      let n;
      let o;
      let s = r(e);
      let a = [];
      let A = 0;
      do {
        o = s.getPosition();
        n = s.scan();
        switch (n) {
          case 12:
          case 13:
          case 17:
            if (A !== o) {
              a.push(e.substring(A, o));
            }
            if (t !== undefined) {
              a.push(s.getTokenValue().replace(/[^\r\n]/g, t));
            }
            A = s.getPosition();
        }
      } while (n !== 17);
      return a.join('');
    };
    var O;
    function N(e) {
      switch (e) {
        case 1:
          return 'InvalidSymbol';
        case 2:
          return 'InvalidNumberFormat';
        case 3:
          return 'PropertyNameExpected';
        case 4:
          return 'ValueExpected';
        case 5:
          return 'ColonExpected';
        case 6:
          return 'CommaExpected';
        case 7:
          return 'CloseBraceExpected';
        case 8:
          return 'CloseBracketExpected';
        case 9:
          return 'EndOfFileExpected';
        case 10:
          return 'InvalidCommentToken';
        case 11:
          return 'UnexpectedEndOfComment';
        case 12:
          return 'UnexpectedEndOfString';
        case 13:
          return 'UnexpectedEndOfNumber';
        case 14:
          return 'InvalidUnicode';
        case 15:
          return 'InvalidEscapeCharacter';
        case 16:
          return 'InvalidCharacter';
      }
      return '<unknown ParseErrorCode>';
    }
    function L(e, t, n) {
      return d(e, t, n);
    }
    function K(e, t, n, r) {
      return w(e, t, n, r);
    }
    function U(e, t) {
      let n = t.slice(0).sort((e, t) => {
        const n = e.offset - t.offset;
        if (n === 0) {
          return e.length - t.length;
        } else {
          return n;
        }
      });
      let r = e.length;
      for (let t = n.length - 1; t >= 0; t--) {
        let o = n[t];
        if (!(o.offset + o.length <= r)) {
          throw new Error('Overlapping edit');
        }
        e = v(e, o);
        r = o.offset;
      }
      return e;
    }
    (function (e) {
      e[e.InvalidSymbol = 1] = 'InvalidSymbol';
      e[e.InvalidNumberFormat = 2] = 'InvalidNumberFormat';
      e[e.PropertyNameExpected = 3] = 'PropertyNameExpected';
      e[e.ValueExpected = 4] = 'ValueExpected';
      e[e.ColonExpected = 5] = 'ColonExpected';
      e[e.CommaExpected = 6] = 'CommaExpected';
      e[e.CloseBraceExpected = 7] = 'CloseBraceExpected';
      e[e.CloseBracketExpected = 8] = 'CloseBracketExpected';
      e[e.EndOfFileExpected = 9] = 'EndOfFileExpected';
      e[e.InvalidCommentToken = 10] = 'InvalidCommentToken';
      e[e.UnexpectedEndOfComment = 11] = 'UnexpectedEndOfComment';
      e[e.UnexpectedEndOfString = 12] = 'UnexpectedEndOfString';
      e[e.UnexpectedEndOfNumber = 13] = 'UnexpectedEndOfNumber';
      e[e.InvalidUnicode = 14] = 'InvalidUnicode';
      e[e.InvalidEscapeCharacter = 15] = 'InvalidEscapeCharacter';
      e[e.InvalidCharacter = 16] = 'InvalidCharacter';
    })(O ||= {});
  },
  2543: function (module, exports, require) {
    var r;
    module = require.nmd(module);
    (function () {
      var o;
      var s = 'Expected a function';
      var a = '__lodash_hash_undefined__';
      var A = '__lodash_placeholder__';
      var c = 16;
      var u = 32;
      var l = 64;
      var g = 128;
      var d = 256;
      var h = Infinity;
      var f = 9007199254740991;
      var p = NaN;
      var m = 4294967295;
      var I = [['ary', g], ['bind', 1], ['bindKey', 2], ['curry', 8], ['curryRight', c], ['flip', 512], ['partial', u], ['partialRight', l], ['rearg', d]];
      var E = '[object Arguments]';
      var y = '[object Array]';
      var w = '[object Boolean]';
      var _ = '[object Date]';
      var v = '[object Error]';
      var b = '[object Function]';
      var B = '[object GeneratorFunction]';
      var Q = '[object Map]';
      var D = '[object Number]';
      var S = '[object Object]';
      var T = '[object Promise]';
      var R = '[object RegExp]';
      var k = '[object Set]';
      var x = '[object String]';
      var P = '[object Symbol]';
      var F = '[object WeakMap]';
      var M = '[object ArrayBuffer]';
      var O = '[object DataView]';
      var N = '[object Float32Array]';
      var L = '[object Float64Array]';
      var K = '[object Int8Array]';
      var U = '[object Int16Array]';
      var j = '[object Int32Array]';
      var q = '[object Uint8Array]';
      var G = '[object Uint8ClampedArray]';
      var Y = '[object Uint16Array]';
      var H = '[object Uint32Array]';
      var J = /\b__p \+= '';/g;
      var z = /\b(__p \+=) '' \+/g;
      var $ = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var W = /&(?:amp|lt|gt|quot|#39);/g;
      var V = /[&<>"']/g;
      var X = RegExp(W.source);
      var Z = RegExp(V.source);
      var ee = /<%-([\s\S]+?)%>/g;
      var te = /<%([\s\S]+?)%>/g;
      var ne = /<%=([\s\S]+?)%>/g;
      var re = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
      var oe = /^\w*$/;
      var ie = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var se = /[\\^$.*+?()[\]{}|]/g;
      var ae = RegExp(se.source);
      var Ae = /^\s+/;
      var ce = /\s/;
      var ue = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
      var le = /\{\n\/\* \[wrapped with (.+)\] \*/;
      var ge = /,? & /;
      var de = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var he = /[()=,{}\[\]\/\s]/;
      var fe = /\\(\\)?/g;
      var pe = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var Ce = /\w*$/;
      var me = /^[-+]0x[0-9a-f]+$/i;
      var Ie = /^0b[01]+$/i;
      var Ee = /^\[object .+?Constructor\]$/;
      var ye = /^0o[0-7]+$/i;
      var we = /^(?:0|[1-9]\d*)$/;
      var _e = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var ve = /($^)/;
      var be = /['\n\r\u2028\u2029\\]/g;
      var Be = '\\ud800-\\udfff';
      var Qe = '\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff';
      var De = '\\u2700-\\u27bf';
      var Se = 'a-z\\xdf-\\xf6\\xf8-\\xff';
      var Te = 'A-Z\\xc0-\\xd6\\xd8-\\xde';
      var Re = '\\ufe0e\\ufe0f';
      var ke = '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000';
      var xe = '[\'’]';
      var Pe = `[${Be}]`;
      var Fe = `[${ke}]`;
      var Me = `[${Qe}]`;
      var Oe = '\\d+';
      var Ne = `[${De}]`;
      var Le = `[${Se}]`;
      var Ke = `[^${Be}${ke}${Oe}${De}${Se}${Te}]`;
      var Ue = '\\ud83c[\\udffb-\\udfff]';
      var je = `[^${Be}]`;
      var qe = '(?:\\ud83c[\\udde6-\\uddff]){2}';
      var Ge = '[\\ud800-\\udbff][\\udc00-\\udfff]';
      var Ye = `[${Te}]`;
      var He = '\\u200d';
      var Je = `(?:${Le}|${Ke})`;
      var ze = `(?:${Ye}|${Ke})`;
      var $e = '(?:[\'’](?:d|ll|m|re|s|t|ve))?';
      var We = '(?:[\'’](?:D|LL|M|RE|S|T|VE))?';
      var Ve = `(?:${Me}|${Ue})?`;
      var Xe = `[${Re}]?`;
      var Ze = `${Xe + Ve}(?:${He}(?:${[je, qe, Ge].join('|')})${Xe}${Ve})*`;
      var et = `(?:${[Ne, qe, Ge].join('|')})${Ze}`;
      var tt = `(?:${[je + Me + '?', Me, qe, Ge, Pe].join('|')})`;
      var nt = RegExp(xe, 'g');
      var rt = RegExp(Me, 'g');
      var ot = RegExp(Ue + '(?=' + Ue + ')|' + tt + Ze, 'g');
      var it = RegExp([Ye + '?' + Le + '+' + $e + '(?=' + [Fe, Ye, '$'].join('|') + ')', ze + '+' + We + '(?=' + [Fe, Ye + Je, '$'].join('|') + ')', Ye + '?' + Je + '+' + $e, Ye + '+' + We, '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])', '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])', Oe, et].join('|'), 'g');
      var st = RegExp(`[${He}${Be}${Qe}${Re}]`);
      var at = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var At = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
      var ct = -1;
      var ut = {};
      ut[N] = ut[L] = ut[K] = ut[U] = ut[j] = ut[q] = ut[G] = ut[Y] = ut[H] = true;
      ut[E] = ut[y] = ut[M] = ut[w] = ut[O] = ut[_] = ut[v] = ut[b] = ut[Q] = ut[D] = ut[S] = ut[R] = ut[k] = ut[x] = ut[F] = false;
      var lt = {};
      lt[E] = lt[y] = lt[M] = lt[O] = lt[w] = lt[_] = lt[N] = lt[L] = lt[K] = lt[U] = lt[j] = lt[Q] = lt[D] = lt[S] = lt[R] = lt[k] = lt[x] = lt[P] = lt[q] = lt[G] = lt[Y] = lt[H] = true;
      lt[v] = lt[b] = lt[F] = false;
      var gt = {
        '\\': '\\',
        '\'': '\'',
        '\n': 'n',
        '\r': 'r',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
      };
      var dt = parseFloat;
      var ht = parseInt;
      var ft = typeof global == 'object' && global && global.Object === Object && global;
      var pt = typeof self == 'object' && self && self.Object === Object && self;
      var Ct = ft || pt || Function('return this')();
      var mt = exports && !exports.nodeType && exports;
      var It = mt && module && !module.nodeType && module;
      var Et = It && It.exports === mt;
      var yt = Et && ft.process;
      var wt = function () {
        try {
          var e = It && It.require && It.require('util').types;
          return e || yt && yt.binding && yt.binding('util');
        } catch (e) {}
      }();
      var _t = wt && wt.isArrayBuffer;
      var vt = wt && wt.isDate;
      var bt = wt && wt.isMap;
      var Bt = wt && wt.isRegExp;
      var Qt = wt && wt.isSet;
      var Dt = wt && wt.isTypedArray;
      function St(e, t, n) {
        switch (n.length) {
          case 0:
            return e.call(t);
          case 1:
            return e.call(t, n[0]);
          case 2:
            return e.call(t, n[0], n[1]);
          case 3:
            return e.call(t, n[0], n[1], n[2]);
        }
        return e.apply(t, n);
      }
      function Tt(e, t, n, r) {
        for (var o = -1, s = e == null ? 0 : e.length; ++o < s;) {
          var a = e[o];
          t(r, a, n(a), e);
        }
        return r;
      }
      function Rt(e, t) {
        for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== false;);
        return e;
      }
      function kt(e, t) {
        for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== false;);
        return e;
      }
      function xt(e, t) {
        for (var n = -1, r = e == null ? 0 : e.length; ++n < r;) {
          if (!t(e[n], n, e)) {
            return false;
          }
        }
        return true;
      }
      function Pt(e, t) {
        for (var n = -1, r = e == null ? 0 : e.length, o = 0, s = []; ++n < r;) {
          var a = e[n];
          if (t(a, n, e)) {
            s[o++] = a;
          }
        }
        return s;
      }
      function Ft(e, t) {
        return !!(e == null ? 0 : e.length) && Yt(e, t, 0) > -1;
      }
      function Mt(e, t, n) {
        for (var r = -1, o = e == null ? 0 : e.length; ++r < o;) {
          if (n(t, e[r])) {
            return true;
          }
        }
        return false;
      }
      function Ot(e, t) {
        for (var n = -1, r = e == null ? 0 : e.length, o = Array(r); ++n < r;) {
          o[n] = t(e[n], n, e);
        }
        return o;
      }
      function Nt(e, t) {
        for (var n = -1, r = t.length, o = e.length; ++n < r;) {
          e[o + n] = t[n];
        }
        return e;
      }
      function Lt(e, t, n, r) {
        var o = -1;
        var s = e == null ? 0 : e.length;
        for (r && s && (n = e[++o]); ++o < s;) {
          n = t(n, e[o], o, e);
        }
        return n;
      }
      function Kt(e, t, n, r) {
        var o = e == null ? 0 : e.length;
        for (r && o && (n = e[--o]); o--;) {
          n = t(n, e[o], o, e);
        }
        return n;
      }
      function Ut(e, t) {
        for (var n = -1, r = e == null ? 0 : e.length; ++n < r;) {
          if (t(e[n], n, e)) {
            return true;
          }
        }
        return false;
      }
      var jt = $t('length');
      function qt(e, t, n) {
        var r;
        n(e, function (e, n, o) {
          if (t(e, n, o)) {
            r = n;
            return false;
          }
        });
        return r;
      }
      function Gt(e, t, n, r) {
        for (var o = e.length, s = n + (r ? 1 : -1); r ? s-- : ++s < o;) {
          if (t(e[s], s, e)) {
            return s;
          }
        }
        return -1;
      }
      function Yt(e, t, n) {
        if (t == t) {
          return function (e, t, n) {
            var r = n - 1;
            var o = e.length;
            while (++r < o) {
              if (e[r] === t) {
                return r;
              }
            }
            return -1;
          }(e, t, n);
        } else {
          return Gt(e, Jt, n);
        }
      }
      function Ht(e, t, n, r) {
        for (var o = n - 1, s = e.length; ++o < s;) {
          if (r(e[o], t)) {
            return o;
          }
        }
        return -1;
      }
      function Jt(e) {
        return e != e;
      }
      function zt(e, t) {
        var n = e == null ? 0 : e.length;
        if (n) {
          return Xt(e, t) / n;
        } else {
          return p;
        }
      }
      function $t(e) {
        return function (t) {
          if (t == null) {
            return o;
          } else {
            return t[e];
          }
        };
      }
      function Wt(e) {
        return function (t) {
          if (e == null) {
            return o;
          } else {
            return e[t];
          }
        };
      }
      function Vt(e, t, n, r, o) {
        o(e, function (e, o, s) {
          n = r ? (r = false, e) : t(n, e, o, s);
        });
        return n;
      }
      function Xt(e, t) {
        var n;
        for (var r = -1, s = e.length; ++r < s;) {
          var a = t(e[r]);
          if (a !== o) {
            n = n === o ? a : n + a;
          }
        }
        return n;
      }
      function Zt(e, t) {
        for (var n = -1, r = Array(e); ++n < e;) {
          r[n] = t(n);
        }
        return r;
      }
      function en(e) {
        if (e) {
          return e.slice(0, mn(e) + 1).replace(Ae, '');
        } else {
          return e;
        }
      }
      function tn(e) {
        return function (t) {
          return e(t);
        };
      }
      function nn(e, t) {
        return Ot(t, function (t) {
          return e[t];
        });
      }
      function rn(e, t) {
        return e.has(t);
      }
      function on(e, t) {
        for (var n = -1, r = e.length; ++n < r && Yt(t, e[n], 0) > -1;);
        return n;
      }
      function sn(e, t) {
        for (var n = e.length; n-- && Yt(t, e[n], 0) > -1;);
        return n;
      }
      var an = Wt({
        À: 'A',
        Á: 'A',
        Â: 'A',
        Ã: 'A',
        Ä: 'A',
        Å: 'A',
        à: 'a',
        á: 'a',
        â: 'a',
        ã: 'a',
        ä: 'a',
        å: 'a',
        Ç: 'C',
        ç: 'c',
        Ð: 'D',
        ð: 'd',
        È: 'E',
        É: 'E',
        Ê: 'E',
        Ë: 'E',
        è: 'e',
        é: 'e',
        ê: 'e',
        ë: 'e',
        Ì: 'I',
        Í: 'I',
        Î: 'I',
        Ï: 'I',
        ì: 'i',
        í: 'i',
        î: 'i',
        ï: 'i',
        Ñ: 'N',
        ñ: 'n',
        Ò: 'O',
        Ó: 'O',
        Ô: 'O',
        Õ: 'O',
        Ö: 'O',
        Ø: 'O',
        ò: 'o',
        ó: 'o',
        ô: 'o',
        õ: 'o',
        ö: 'o',
        ø: 'o',
        Ù: 'U',
        Ú: 'U',
        Û: 'U',
        Ü: 'U',
        ù: 'u',
        ú: 'u',
        û: 'u',
        ü: 'u',
        Ý: 'Y',
        ý: 'y',
        ÿ: 'y',
        Æ: 'Ae',
        æ: 'ae',
        Þ: 'Th',
        þ: 'th',
        ß: 'ss',
        Ā: 'A',
        Ă: 'A',
        Ą: 'A',
        ā: 'a',
        ă: 'a',
        ą: 'a',
        Ć: 'C',
        Ĉ: 'C',
        Ċ: 'C',
        Č: 'C',
        ć: 'c',
        ĉ: 'c',
        ċ: 'c',
        č: 'c',
        Ď: 'D',
        Đ: 'D',
        ď: 'd',
        đ: 'd',
        Ē: 'E',
        Ĕ: 'E',
        Ė: 'E',
        Ę: 'E',
        Ě: 'E',
        ē: 'e',
        ĕ: 'e',
        ė: 'e',
        ę: 'e',
        ě: 'e',
        Ĝ: 'G',
        Ğ: 'G',
        Ġ: 'G',
        Ģ: 'G',
        ĝ: 'g',
        ğ: 'g',
        ġ: 'g',
        ģ: 'g',
        Ĥ: 'H',
        Ħ: 'H',
        ĥ: 'h',
        ħ: 'h',
        Ĩ: 'I',
        Ī: 'I',
        Ĭ: 'I',
        Į: 'I',
        İ: 'I',
        ĩ: 'i',
        ī: 'i',
        ĭ: 'i',
        į: 'i',
        ı: 'i',
        Ĵ: 'J',
        ĵ: 'j',
        Ķ: 'K',
        ķ: 'k',
        ĸ: 'k',
        Ĺ: 'L',
        Ļ: 'L',
        Ľ: 'L',
        Ŀ: 'L',
        Ł: 'L',
        ĺ: 'l',
        ļ: 'l',
        ľ: 'l',
        ŀ: 'l',
        ł: 'l',
        Ń: 'N',
        Ņ: 'N',
        Ň: 'N',
        Ŋ: 'N',
        ń: 'n',
        ņ: 'n',
        ň: 'n',
        ŋ: 'n',
        Ō: 'O',
        Ŏ: 'O',
        Ő: 'O',
        ō: 'o',
        ŏ: 'o',
        ő: 'o',
        Ŕ: 'R',
        Ŗ: 'R',
        Ř: 'R',
        ŕ: 'r',
        ŗ: 'r',
        ř: 'r',
        Ś: 'S',
        Ŝ: 'S',
        Ş: 'S',
        Š: 'S',
        ś: 's',
        ŝ: 's',
        ş: 's',
        š: 's',
        Ţ: 'T',
        Ť: 'T',
        Ŧ: 'T',
        ţ: 't',
        ť: 't',
        ŧ: 't',
        Ũ: 'U',
        Ū: 'U',
        Ŭ: 'U',
        Ů: 'U',
        Ű: 'U',
        Ų: 'U',
        ũ: 'u',
        ū: 'u',
        ŭ: 'u',
        ů: 'u',
        ű: 'u',
        ų: 'u',
        Ŵ: 'W',
        ŵ: 'w',
        Ŷ: 'Y',
        ŷ: 'y',
        Ÿ: 'Y',
        Ź: 'Z',
        Ż: 'Z',
        Ž: 'Z',
        ź: 'z',
        ż: 'z',
        ž: 'z',
        Ĳ: 'IJ',
        ĳ: 'ij',
        Œ: 'Oe',
        œ: 'oe',
        ŉ: '\'n',
        ſ: 's'
      });
      var An = Wt({
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        '\'': '&#39;'
      });
      function cn(e) {
        return `\\${gt[e]}`;
      }
      function un(e) {
        return st.test(e);
      }
      function ln(e) {
        var t = -1;
        var n = Array(e.size);
        e.forEach(function (e, r) {
          n[++t] = [r, e];
        });
        return n;
      }
      function gn(e, t) {
        return function (n) {
          return e(t(n));
        };
      }
      function dn(e, t) {
        for (var n = -1, r = e.length, o = 0, s = []; ++n < r;) {
          var a = e[n];
          if (a === t || a === A) {
            e[n] = A;
            s[o++] = n;
          }
        }
        return s;
      }
      function hn(e) {
        var t = -1;
        var n = Array(e.size);
        e.forEach(function (e) {
          n[++t] = e;
        });
        return n;
      }
      function fn(e) {
        var t = -1;
        var n = Array(e.size);
        e.forEach(function (e) {
          n[++t] = [e, e];
        });
        return n;
      }
      function pn(e) {
        if (un(e)) {
          return function (e) {
            var t = ot.lastIndex = 0;
            while (ot.test(e)) {
              ++t;
            }
            return t;
          }(e);
        } else {
          return jt(e);
        }
      }
      function Cn(e) {
        if (un(e)) {
          return function (e) {
            return e.match(ot) || [];
          }(e);
        } else {
          return function (e) {
            return e.split('');
          }(e);
        }
      }
      function mn(e) {
        for (var t = e.length; t-- && ce.test(e.charAt(t)););
        return t;
      }
      var In = Wt({
        '&amp;': '&',
        '&lt;': '<',
        '&gt;': '>',
        '&quot;': '"',
        '&#39;': '\''
      });
      var En = function e(t) {
        var n;
        var r = (t = t == null ? Ct : En.defaults(Ct.Object(), t, En.pick(Ct, At))).Array;
        var ce = t.Date;
        var Be = t.Error;
        var Qe = t.Function;
        var De = t.Math;
        var Se = t.Object;
        var Te = t.RegExp;
        var Re = t.String;
        var ke = t.TypeError;
        var xe = r.prototype;
        var Pe = Qe.prototype;
        var Fe = Se.prototype;
        var Me = t['__core-js_shared__'];
        var Oe = Pe.toString;
        var Ne = Fe.hasOwnProperty;
        var Le = 0;
        var Ke = (n = /[^.]+$/.exec(Me && Me.keys && Me.keys.IE_PROTO || '')) ? `Symbol(src)_1.${n}` : '';
        var Ue = Fe.toString;
        var je = Oe.call(Se);
        var qe = Ct._;
        var Ge = Te(`^${Oe.call(Ne).replace(se, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?')}\$`);
        var Ye = Et ? t.Buffer : o;
        var He = t.Symbol;
        var Je = t.Uint8Array;
        var ze = Ye ? Ye.allocUnsafe : o;
        var $e = gn(Se.getPrototypeOf, Se);
        var We = Se.create;
        var Ve = Fe.propertyIsEnumerable;
        var Xe = xe.splice;
        var Ze = He ? He.isConcatSpreadable : o;
        var et = He ? He.iterator : o;
        var tt = He ? He.toStringTag : o;
        var ot = function () {
          try {
            var e = fi(Se, 'defineProperty');
            e({}, '', {});
            return e;
          } catch (e) {}
        }();
        var st = t.clearTimeout !== Ct.clearTimeout && t.clearTimeout;
        var gt = ce && ce.now !== Ct.Date.now && ce.now;
        var ft = t.setTimeout !== Ct.setTimeout && t.setTimeout;
        var pt = De.ceil;
        var mt = De.floor;
        var It = Se.getOwnPropertySymbols;
        var yt = Ye ? Ye.isBuffer : o;
        var wt = t.isFinite;
        var jt = xe.join;
        var Wt = gn(Se.keys, Se);
        var yn = De.max;
        var wn = De.min;
        var _n = ce.now;
        var vn = t.parseInt;
        var bn = De.random;
        var Bn = xe.reverse;
        var Qn = fi(t, 'DataView');
        var Dn = fi(t, 'Map');
        var Sn = fi(t, 'Promise');
        var Tn = fi(t, 'Set');
        var Rn = fi(t, 'WeakMap');
        var kn = fi(Se, 'create');
        var xn = Rn && new Rn();
        var Pn = {};
        var Fn = Ui(Qn);
        var Mn = Ui(Dn);
        var On = Ui(Sn);
        var Nn = Ui(Tn);
        var Ln = Ui(Rn);
        var Kn = He ? He.prototype : o;
        var Un = Kn ? Kn.valueOf : o;
        var jn = Kn ? Kn.toString : o;
        function qn(e) {
          if (ia(e) && !zs(e) && !(e instanceof Jn)) {
            if (e instanceof Hn) {
              return e;
            }
            if (Ne.call(e, '__wrapped__')) {
              return ji(e);
            }
          }
          return new Hn(e);
        }
        var Gn = function () {
          function e() {}
          return function (t) {
            if (!oa(t)) {
              return {};
            }
            if (We) {
              return We(t);
            }
            e.prototype = t;
            var n = new e();
            e.prototype = o;
            return n;
          };
        }();
        function Yn() {}
        function Hn(e, t) {
          this.__wrapped__ = e;
          this.__actions__ = [];
          this.__chain__ = !!t;
          this.__index__ = 0;
          this.__values__ = o;
        }
        function Jn(e) {
          this.__wrapped__ = e;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = m;
          this.__views__ = [];
        }
        function zn(e) {
          var t = -1;
          var n = e == null ? 0 : e.length;
          for (this.clear(); ++t < n;) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        function $n(e) {
          var t = -1;
          var n = e == null ? 0 : e.length;
          for (this.clear(); ++t < n;) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        function Wn(e) {
          var t = -1;
          var n = e == null ? 0 : e.length;
          for (this.clear(); ++t < n;) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        function Vn(e) {
          var t = -1;
          var n = e == null ? 0 : e.length;
          for (this.__data__ = new Wn(); ++t < n;) {
            this.add(e[t]);
          }
        }
        function Xn(e) {
          var t = this.__data__ = new $n(e);
          this.size = t.size;
        }
        function Zn(e, t) {
          var n = zs(e);
          var r = !n && Js(e);
          var o = !n && !r && Xs(e);
          var s = !n && !r && !o && da(e);
          var a = n || r || o || s;
          var A = a ? Zt(e.length, Re) : [];
          var c = A.length;
          for (var u in e) {
            if ((!!t || !!Ne.call(e, u)) && (!a || u != 'length' && (!o || u != 'offset' && u != 'parent') && (!s || u != 'buffer' && u != 'byteLength' && u != 'byteOffset') && !wi(u, c))) {
              A.push(u);
            }
          }
          return A;
        }
        function er(e) {
          var t = e.length;
          if (t) {
            return e[Vr(0, t - 1)];
          } else {
            return o;
          }
        }
        function tr(e, t) {
          return Ni(xo(e), ur(t, 0, e.length));
        }
        function nr(e) {
          return Ni(xo(e));
        }
        function rr(e, t, n) {
          if (n !== o && !Gs(e[t], n) || n === o && !(t in e)) {
            Ar(e, t, n);
          }
        }
        function or(e, t, n) {
          var r = e[t];
          if (!Ne.call(e, t) || !Gs(r, n) || n === o && !(t in e)) {
            Ar(e, t, n);
          }
        }
        function ir(e, t) {
          for (var n = e.length; n--;) {
            if (Gs(e[n][0], t)) {
              return n;
            }
          }
          return -1;
        }
        function sr(e, t, n, r) {
          fr(e, function (e, o, s) {
            t(r, e, n(e), s);
          });
          return r;
        }
        function ar(e, t) {
          return e && Po(t, Fa(t), e);
        }
        function Ar(e, t, n) {
          if (t == '__proto__' && ot) {
            ot(e, t, {
              configurable: true,
              enumerable: true,
              value: n,
              writable: true
            });
          } else {
            e[t] = n;
          }
        }
        function cr(e, t) {
          for (var n = -1, s = t.length, a = r(s), A = e == null; ++n < s;) {
            a[n] = A ? o : Ta(e, t[n]);
          }
          return a;
        }
        function ur(e, t, n) {
          if (e == e) {
            if (n !== o) {
              e = e <= n ? e : n;
            }
            if (t !== o) {
              e = e >= t ? e : t;
            }
          }
          return e;
        }
        function lr(e, t, n, r, s, a) {
          var A;
          var c = t & 1;
          var u = t & 2;
          var l = t & 4;
          if (n) {
            A = s ? n(e, r, s, a) : n(e);
          }
          if (A !== o) {
            return A;
          }
          if (!oa(e)) {
            return e;
          }
          var g = zs(e);
          if (g) {
            A = function (e) {
              var t = e.length;
              var n = new e.constructor(t);
              if (t && typeof e[0] == 'string' && Ne.call(e, 'index')) {
                n.index = e.index;
                n.input = e.input;
              }
              return n;
            }(e);
            if (!c) {
              return xo(e, A);
            }
          } else {
            var d = mi(e);
            var h = d == b || d == B;
            if (Xs(e)) {
              return Qo(e, c);
            }
            if (d == S || d == E || h && !s) {
              A = u || h ? {} : Ei(e);
              if (!c) {
                if (u) {
                  return function (e, t) {
                    return Po(e, Ci(e), t);
                  }(e, function (e, t) {
                    return e && Po(t, Ma(t), e);
                  }(A, e));
                } else {
                  return function (e, t) {
                    return Po(e, pi(e), t);
                  }(e, ar(A, e));
                }
              }
            } else {
              if (!lt[d]) {
                if (s) {
                  return e;
                } else {
                  return {};
                }
              }
              A = function (e, t, n) {
                var r = e.constructor;
                switch (t) {
                  case M:
                    return Do(e);
                  case w:
                  case _:
                    return new r(+e);
                  case O:
                    return function (e, t) {
                      var n = t ? Do(e.buffer) : e.buffer;
                      return new e.constructor(n, e.byteOffset, e.byteLength);
                    }(e, n);
                  case N:
                  case L:
                  case K:
                  case U:
                  case j:
                  case q:
                  case G:
                  case Y:
                  case H:
                    return So(e, n);
                  case Q:
                    return new r();
                  case D:
                  case x:
                    return new r(e);
                  case R:
                    return function (e) {
                      var t = new e.constructor(e.source, Ce.exec(e));
                      t.lastIndex = e.lastIndex;
                      return t;
                    }(e);
                  case k:
                    return new r();
                  case P:
                    o = e;
                    if (Un) {
                      return Se(Un.call(o));
                    } else {
                      return {};
                    }
                }
                var o;
              }(e, d, c);
            }
          }
          if (!a) {
            a = new Xn();
          }
          var f = a.get(e);
          if (f) {
            return f;
          }
          a.set(e, A);
          if (ua(e)) {
            e.forEach(function (r) {
              A.add(lr(r, t, n, r, e, a));
            });
          } else {
            if (sa(e)) {
              e.forEach(function (r, o) {
                A.set(o, lr(r, t, n, o, e, a));
              });
            }
          }
          var p = g ? o : (l ? u ? Ai : ai : u ? Ma : Fa)(e);
          Rt(p || e, function (r, o) {
            if (p) {
              r = e[o = r];
            }
            or(A, o, lr(r, t, n, o, e, a));
          });
          return A;
        }
        function gr(e, t, n) {
          var r = n.length;
          if (e == null) {
            return !r;
          }
          for (e = Se(e); r--;) {
            var s = n[r];
            var a = t[s];
            var A = e[s];
            if (A === o && !(s in e) || !a(A)) {
              return false;
            }
          }
          return true;
        }
        function dr(e, t, n) {
          if (typeof e != 'function') {
            throw new ke(s);
          }
          return Pi(function () {
            e.apply(o, n);
          }, t);
        }
        function hr(e, t, n, r) {
          var o = -1;
          var s = Ft;
          var a = true;
          var A = e.length;
          var c = [];
          var u = t.length;
          if (!A) {
            return c;
          }
          if (n) {
            t = Ot(t, tn(n));
          }
          if (r) {
            s = Mt;
            a = false;
          } else {
            if (t.length >= 200) {
              s = rn;
              a = false;
              t = new Vn(t);
            }
          }
          e: while (++o < A) {
            var l = e[o];
            var g = n == null ? l : n(l);
            l = r || l !== 0 ? l : 0;
            if (a && g == g) {
              for (var d = u; d--;) {
                if (t[d] === g) {
                  continue e;
                }
              }
              c.push(l);
            } else {
              if (!s(t, g, r)) {
                c.push(l);
              }
            }
          }
          return c;
        }
        qn.templateSettings = {
          escape: ee,
          evaluate: te,
          interpolate: ne,
          variable: '',
          imports: {
            _: qn
          }
        };
        qn.prototype = Yn.prototype;
        qn.prototype.constructor = qn;
        Hn.prototype = Gn(Yn.prototype);
        Hn.prototype.constructor = Hn;
        Jn.prototype = Gn(Yn.prototype);
        Jn.prototype.constructor = Jn;
        zn.prototype.clear = function () {
          this.__data__ = kn ? kn(null) : {};
          this.size = 0;
        };
        zn.prototype.delete = function (e) {
          var t = this.has(e) && delete this.__data__[e];
          this.size -= t ? 1 : 0;
          return t;
        };
        zn.prototype.get = function (e) {
          var t = this.__data__;
          if (kn) {
            var n = t[e];
            if (n === a) {
              return o;
            } else {
              return n;
            }
          }
          if (Ne.call(t, e)) {
            return t[e];
          } else {
            return o;
          }
        };
        zn.prototype.has = function (e) {
          var t = this.__data__;
          if (kn) {
            return t[e] !== o;
          } else {
            return Ne.call(t, e);
          }
        };
        zn.prototype.set = function (e, t) {
          var n = this.__data__;
          this.size += this.has(e) ? 0 : 1;
          n[e] = kn && t === o ? a : t;
          return this;
        };
        $n.prototype.clear = function () {
          this.__data__ = [];
          this.size = 0;
        };
        $n.prototype.delete = function (e) {
          var t = this.__data__;
          var n = ir(t, e);
          return !(n < 0) && (n == t.length - 1 ? t.pop() : Xe.call(t, n, 1), --this.size, true);
        };
        $n.prototype.get = function (e) {
          var t = this.__data__;
          var n = ir(t, e);
          if (n < 0) {
            return o;
          } else {
            return t[n][1];
          }
        };
        $n.prototype.has = function (e) {
          return ir(this.__data__, e) > -1;
        };
        $n.prototype.set = function (e, t) {
          var n = this.__data__;
          var r = ir(n, e);
          if (r < 0) {
            ++this.size;
            n.push([e, t]);
          } else {
            n[r][1] = t;
          }
          return this;
        };
        Wn.prototype.clear = function () {
          this.size = 0;
          this.__data__ = {
            hash: new zn(),
            map: new (Dn || $n)(),
            string: new zn()
          };
        };
        Wn.prototype.delete = function (e) {
          var t = di(this, e).delete(e);
          this.size -= t ? 1 : 0;
          return t;
        };
        Wn.prototype.get = function (e) {
          return di(this, e).get(e);
        };
        Wn.prototype.has = function (e) {
          return di(this, e).has(e);
        };
        Wn.prototype.set = function (e, t) {
          var n = di(this, e);
          var r = n.size;
          n.set(e, t);
          this.size += n.size == r ? 0 : 1;
          return this;
        };
        Vn.prototype.add = Vn.prototype.push = function (e) {
          this.__data__.set(e, a);
          return this;
        };
        Vn.prototype.has = function (e) {
          return this.__data__.has(e);
        };
        Xn.prototype.clear = function () {
          this.__data__ = new $n();
          this.size = 0;
        };
        Xn.prototype.delete = function (e) {
          var t = this.__data__;
          var n = t.delete(e);
          this.size = t.size;
          return n;
        };
        Xn.prototype.get = function (e) {
          return this.__data__.get(e);
        };
        Xn.prototype.has = function (e) {
          return this.__data__.has(e);
        };
        Xn.prototype.set = function (e, t) {
          var n = this.__data__;
          if (n instanceof $n) {
            var r = n.__data__;
            if (!Dn || r.length < 199) {
              r.push([e, t]);
              this.size = ++n.size;
              return this;
            }
            n = this.__data__ = new Wn(r);
          }
          n.set(e, t);
          this.size = n.size;
          return this;
        };
        var fr = Oo(_r);
        var pr = Oo(vr, true);
        function Cr(e, t) {
          var n = true;
          fr(e, function (e, r, o) {
            return n = !!t(e, r, o);
          });
          return n;
        }
        function mr(e, t, n) {
          for (var r = -1, s = e.length; ++r < s;) {
            var a = e[r];
            var A = t(a);
            if (A != null && (c === o ? A == A && !ga(A) : n(A, c))) {
              var c = A;
              var u = a;
            }
          }
          return u;
        }
        function Ir(e, t) {
          var n = [];
          fr(e, function (e, r, o) {
            if (t(e, r, o)) {
              n.push(e);
            }
          });
          return n;
        }
        function Er(e, t, n, r, o) {
          var s = -1;
          var a = e.length;
          if (!n) {
            n = yi;
          }
          if (!o) {
            o = [];
          }
          while (++s < a) {
            var A = e[s];
            if (t > 0 && n(A)) {
              if (t > 1) {
                Er(A, t - 1, n, r, o);
              } else {
                Nt(o, A);
              }
            } else {
              if (!r) {
                o[o.length] = A;
              }
            }
          }
          return o;
        }
        var yr = No();
        var wr = No(true);
        function _r(e, t) {
          return e && yr(e, t, Fa);
        }
        function vr(e, t) {
          return e && wr(e, t, Fa);
        }
        function br(e, t) {
          return Pt(t, function (t) {
            return ta(e[t]);
          });
        }
        function Br(e, t) {
          for (var n = 0, r = (t = _o(t, e)).length; e != null && n < r;) {
            e = e[Ki(t[n++])];
          }
          if (n && n == r) {
            return e;
          } else {
            return o;
          }
        }
        function Qr(e, t, n) {
          var r = t(e);
          if (zs(e)) {
            return r;
          } else {
            return Nt(r, n(e));
          }
        }
        function Dr(e) {
          if (e == null) {
            if (e === o) {
              return '[object Undefined]';
            } else {
              return '[object Null]';
            }
          } else {
            if (tt && tt in Se(e)) {
              return function (e) {
                var t = Ne.call(e, tt);
                var n = e[tt];
                try {
                  e[tt] = o;
                  var r = true;
                } catch (e) {}
                var s = Ue.call(e);
                if (r) {
                  if (t) {
                    e[tt] = n;
                  } else {
                    delete e[tt];
                  }
                }
                return s;
              }(e);
            } else {
              return function (e) {
                return Ue.call(e);
              }(e);
            }
          }
        }
        function Sr(e, t) {
          return e > t;
        }
        function Tr(e, t) {
          return e != null && Ne.call(e, t);
        }
        function Rr(e, t) {
          return e != null && t in Se(e);
        }
        function kr(e, t, n) {
          var s = n ? Mt : Ft;
          var a = e[0].length;
          var A = e.length;
          for (var c = A, u = r(A), l = Infinity, g = []; c--;) {
            var d = e[c];
            if (c && t) {
              d = Ot(d, tn(t));
            }
            l = wn(d.length, l);
            u[c] = !n && (t || a >= 120 && d.length >= 120) ? new Vn(c && d) : o;
          }
          d = e[0];
          var h = -1;
          var f = u[0];
          e: while (++h < a && g.length < l) {
            var p = d[h];
            var m = t ? t(p) : p;
            p = n || p !== 0 ? p : 0;
            if (!(f ? rn(f, m) : s(g, m, n))) {
              for (c = A; --c;) {
                var I = u[c];
                if (!(I ? rn(I, m) : s(e[c], m, n))) {
                  continue e;
                }
              }
              if (f) {
                f.push(m);
              }
              g.push(p);
            }
          }
          return g;
        }
        function xr(e, t, n) {
          var r = (e = Ri(e, t = _o(t, e))) == null ? e : e[Ki(Zi(t))];
          if (r == null) {
            return o;
          } else {
            return St(r, e, n);
          }
        }
        function Pr(e) {
          return ia(e) && Dr(e) == E;
        }
        function Fr(e, t, n, r, s) {
          return e === t || (e == null || t == null || !ia(e) && !ia(t) ? e != e && t != t : function (e, t, n, r, s, a) {
            var A = zs(e);
            var c = zs(t);
            var u = A ? y : mi(e);
            var l = c ? y : mi(t);
            var g = (u = u == E ? S : u) == S;
            var d = (l = l == E ? S : l) == S;
            var h = u == l;
            if (h && Xs(e)) {
              if (!Xs(t)) {
                return false;
              }
              A = true;
              g = false;
            }
            if (h && !g) {
              if (!a) {
                a = new Xn();
              }
              if (A || da(e)) {
                return ii(e, t, n, r, s, a);
              } else {
                return function (e, t, n, r, o, s, a) {
                  switch (n) {
                    case O:
                      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) {
                        return false;
                      }
                      e = e.buffer;
                      t = t.buffer;
                    case M:
                      return e.byteLength == t.byteLength && !!s(new Je(e), new Je(t));
                    case w:
                    case _:
                    case D:
                      return Gs(+e, +t);
                    case v:
                      return e.name == t.name && e.message == t.message;
                    case R:
                    case x:
                      return e == t + '';
                    case Q:
                      var A = ln;
                    case k:
                      var c = r & 1;
                      if (!A) {
                        A = hn;
                      }
                      if (e.size != t.size && !c) {
                        return false;
                      }
                      var u = a.get(e);
                      if (u) {
                        return u == t;
                      }
                      r |= 2;
                      a.set(e, t);
                      var l = ii(A(e), A(t), r, o, s, a);
                      a.delete(e);
                      return l;
                    case P:
                      if (Un) {
                        return Un.call(e) == Un.call(t);
                      }
                  }
                  return false;
                }(e, t, u, n, r, s, a);
              }
            }
            if (!(n & 1)) {
              var f = g && Ne.call(e, '__wrapped__');
              var p = d && Ne.call(t, '__wrapped__');
              if (f || p) {
                var m = f ? e.value() : e;
                var I = p ? t.value() : t;
                if (!a) {
                  a = new Xn();
                }
                return s(m, I, n, r, a);
              }
            }
            if (!h) {
              return false;
            }
            if (!a) {
              a = new Xn();
            }
            return function (e, t, n, r, s, a) {
              var A = n & 1;
              var c = ai(e);
              var u = c.length;
              var l = ai(t);
              var g = l.length;
              if (u != g && !A) {
                return false;
              }
              var d = u;
              while (d--) {
                var h = c[d];
                if (!(A ? h in t : Ne.call(t, h))) {
                  return false;
                }
              }
              var f = a.get(e);
              var p = a.get(t);
              if (f && p) {
                return f == t && p == e;
              }
              var m = true;
              a.set(e, t);
              a.set(t, e);
              var I = A;
              while (++d < u) {
                var E = e[h = c[d]];
                var y = t[h];
                if (r) {
                  var w = A ? r(y, E, h, t, e, a) : r(E, y, h, e, t, a);
                }
                if (!(w === o ? E === y || s(E, y, n, r, a) : w)) {
                  m = false;
                  break;
                }
                if (!I) {
                  I = h == 'constructor';
                }
              }
              if (m && !I) {
                var _ = e.constructor;
                var v = t.constructor;
                if (_ != v && !!('constructor' in e) && !!('constructor' in t) && (typeof _ != 'function' || !(_ instanceof _) || typeof v != 'function' || !(v instanceof v))) {
                  m = false;
                }
              }
              a.delete(e);
              a.delete(t);
              return m;
            }(e, t, n, r, s, a);
          }(e, t, n, r, Fr, s));
        }
        function Mr(e, t, n, r) {
          var s = n.length;
          var a = s;
          var A = !r;
          if (e == null) {
            return !a;
          }
          for (e = Se(e); s--;) {
            var c = n[s];
            if (A && c[2] ? c[1] !== e[c[0]] : !(c[0] in e)) {
              return false;
            }
          }
          while (++s < a) {
            var u = (c = n[s])[0];
            var l = e[u];
            var g = c[1];
            if (A && c[2]) {
              if (l === o && !(u in e)) {
                return false;
              }
            } else {
              var d = new Xn();
              if (r) {
                var h = r(l, g, u, e, t, d);
              }
              if (!(h === o ? Fr(g, l, 3, r, d) : h)) {
                return false;
              }
            }
          }
          return true;
        }
        function Or(e) {
          return !!oa(e) && !(t = e, Ke && Ke in t) && (ta(e) ? Ge : Ee).test(Ui(e));
          var t;
        }
        function Nr(e) {
          if (typeof e == 'function') {
            return e;
          } else {
            if (e == null) {
              return aA;
            } else {
              if (typeof e == 'object') {
                if (zs(e)) {
                  return Gr(e[0], e[1]);
                } else {
                  return qr(e);
                }
              } else {
                return pA(e);
              }
            }
          }
        }
        function Lr(e) {
          if (!Qi(e)) {
            return Wt(e);
          }
          var t = [];
          for (var n in Se(e)) {
            if (Ne.call(e, n) && n != 'constructor') {
              t.push(n);
            }
          }
          return t;
        }
        function Kr(e) {
          if (!oa(e)) {
            return function (e) {
              var t = [];
              if (e != null) {
                for (var n in Se(e)) {
                  t.push(n);
                }
              }
              return t;
            }(e);
          }
          var t = Qi(e);
          var n = [];
          for (var r in e) {
            if (r != 'constructor' || !t && Ne.call(e, r)) {
              n.push(r);
            }
          }
          return n;
        }
        function Ur(e, t) {
          return e < t;
        }
        function jr(e, t) {
          var n = -1;
          var o = Ws(e) ? r(e.length) : [];
          fr(e, function (e, r, s) {
            o[++n] = t(e, r, s);
          });
          return o;
        }
        function qr(e) {
          var t = hi(e);
          if (t.length == 1 && t[0][2]) {
            return Si(t[0][0], t[0][1]);
          } else {
            return function (n) {
              return n === e || Mr(n, e, t);
            };
          }
        }
        function Gr(e, t) {
          if (vi(e) && Di(t)) {
            return Si(Ki(e), t);
          } else {
            return function (n) {
              var r = Ta(n, e);
              if (r === o && r === t) {
                return Ra(n, e);
              } else {
                return Fr(t, r, 3);
              }
            };
          }
        }
        function Yr(e, t, n, r, s) {
          if (e !== t) {
            yr(t, function (a, A) {
              if (!s) {
                s = new Xn();
              }
              if (oa(a)) {
                (function (e, t, n, r, s, a, A) {
                  var c = ki(e, n);
                  var u = ki(t, n);
                  var l = A.get(u);
                  if (l) {
                    rr(e, n, l);
                    return;
                  }
                  var g = a ? a(c, u, n + '', e, t, A) : o;
                  var d = g === o;
                  if (d) {
                    var h = zs(u);
                    var f = !h && Xs(u);
                    var p = !h && !f && da(u);
                    g = u;
                    if (h || f || p) {
                      if (zs(c)) {
                        g = c;
                      } else {
                        if (Vs(c)) {
                          g = xo(c);
                        } else {
                          if (f) {
                            d = false;
                            g = Qo(u, true);
                          } else {
                            if (p) {
                              d = false;
                              g = So(u, true);
                            } else {
                              g = [];
                            }
                          }
                        }
                      }
                    } else {
                      if (Aa(u) || Js(u)) {
                        g = c;
                        if (Js(c)) {
                          g = ya(c);
                        } else {
                          if (!oa(c) || !!ta(c)) {
                            g = Ei(u);
                          }
                        }
                      } else {
                        d = false;
                      }
                    }
                  }
                  if (d) {
                    A.set(u, g);
                    s(g, u, r, a, A);
                    A.delete(u);
                  }
                  rr(e, n, g);
                })(e, t, A, n, Yr, r, s);
              } else {
                var c = r ? r(ki(e, A), a, A + '', e, t, s) : o;
                if (c === o) {
                  c = a;
                }
                rr(e, A, c);
              }
            }, Ma);
          }
        }
        function Hr(e, t) {
          var n = e.length;
          if (n) {
            if (wi(t += t < 0 ? n : 0, n)) {
              return e[t];
            } else {
              return o;
            }
          }
        }
        function Jr(e, t, n) {
          t = t.length ? Ot(t, function (e) {
            if (zs(e)) {
              return function (t) {
                return Br(t, e.length === 1 ? e[0] : e);
              };
            } else {
              return e;
            }
          }) : [aA];
          var r = -1;
          t = Ot(t, tn(gi()));
          var o = jr(e, function (e, n, o) {
            var s = Ot(t, function (t) {
              return t(e);
            });
            return {
              criteria: s,
              index: ++r,
              value: e
            };
          });
          return function (e, t) {
            var n = e.length;
            for (e.sort(t); n--;) {
              e[n] = e[n].value;
            }
            return e;
          }(o, function (e, t) {
            return function (e, t, n) {
              var r = -1;
              var o = e.criteria;
              var s = t.criteria;
              var a = o.length;
              var A = n.length;
              while (++r < a) {
                var c = To(o[r], s[r]);
                if (c) {
                  if (r >= A) {
                    return c;
                  } else {
                    return c * (n[r] == 'desc' ? -1 : 1);
                  }
                }
              }
              return e.index - t.index;
            }(e, t, n);
          });
        }
        function zr(e, t, n) {
          for (var r = -1, o = t.length, s = {}; ++r < o;) {
            var a = t[r];
            var A = Br(e, a);
            if (n(A, a)) {
              no(s, _o(a, e), A);
            }
          }
          return s;
        }
        function $r(e, t, n, r) {
          var o = r ? Ht : Yt;
          var s = -1;
          var a = t.length;
          var A = e;
          if (e === t) {
            t = xo(t);
          }
          if (n) {
            A = Ot(e, tn(n));
          }
          while (++s < a) {
            for (var c = 0, u = t[s], l = n ? n(u) : u; (c = o(A, l, c, r)) > -1;) {
              if (A !== e) {
                Xe.call(A, c, 1);
              }
              Xe.call(e, c, 1);
            }
          }
          return e;
        }
        function Wr(e, t) {
          for (var n = e ? t.length : 0, r = n - 1; n--;) {
            var o = t[n];
            if (n == r || o !== s) {
              var s = o;
              if (wi(o)) {
                Xe.call(e, o, 1);
              } else {
                fo(e, o);
              }
            }
          }
          return e;
        }
        function Vr(e, t) {
          return e + mt(bn() * (t - e + 1));
        }
        function Xr(e, t) {
          var n = '';
          if (!e || t < 1 || t > f) {
            return n;
          }
          do {
            if (t % 2) {
              n += e;
            }
            if (t = mt(t / 2)) {
              e += e;
            }
          } while (t);
          return n;
        }
        function Zr(e, t) {
          return Fi(Ti(e, t, aA), e + '');
        }
        function eo(e) {
          return er(Ga(e));
        }
        function to(e, t) {
          var n = Ga(e);
          return Ni(n, ur(t, 0, n.length));
        }
        function no(e, t, n, r) {
          if (!oa(e)) {
            return e;
          }
          for (var s = -1, a = (t = _o(t, e)).length, A = a - 1, c = e; c != null && ++s < a;) {
            var u = Ki(t[s]);
            var l = n;
            if (u === '__proto__' || u === 'constructor' || u === 'prototype') {
              return e;
            }
            if (s != A) {
              var g = c[u];
              if ((l = r ? r(g, u, c) : o) === o) {
                l = oa(g) ? g : wi(t[s + 1]) ? [] : {};
              }
            }
            or(c, u, l);
            c = c[u];
          }
          return e;
        }
        var ro = xn ? function (e, t) {
          xn.set(e, t);
          return e;
        } : aA;
        var oo = ot ? function (e, t) {
          return ot(e, 'toString', {
            configurable: true,
            enumerable: false,
            value: oA(t),
            writable: true
          });
        } : aA;
        function io(e) {
          return Ni(Ga(e));
        }
        function so(e, t, n) {
          var o = -1;
          var s = e.length;
          if (t < 0) {
            t = -t > s ? 0 : s + t;
          }
          if ((n = n > s ? s : n) < 0) {
            n += s;
          }
          s = t > n ? 0 : n - t >>> 0;
          t >>>= 0;
          var a = r(s);
          while (++o < s) {
            a[o] = e[o + t];
          }
          return a;
        }
        function ao(e, t) {
          var n;
          fr(e, function (e, r, o) {
            return !(n = t(e, r, o));
          });
          return !!n;
        }
        function Ao(e, t, n) {
          var r = 0;
          var o = e == null ? r : e.length;
          if (typeof t == 'number' && t == t && o <= 2147483647) {
            while (r < o) {
              var s = r + o >>> 1;
              var a = e[s];
              if (a !== null && !ga(a) && (n ? a <= t : a < t)) {
                r = s + 1;
              } else {
                o = s;
              }
            }
            return o;
          }
          return co(e, t, aA, n);
        }
        function co(e, t, n, r) {
          var s = 0;
          var a = e == null ? 0 : e.length;
          if (a === 0) {
            return 0;
          }
          var A = (t = n(t)) != t;
          var c = t === null;
          var u = ga(t);
          var l = t === o;
          while (s < a) {
            var g = mt((s + a) / 2);
            var d = n(e[g]);
            var h = d !== o;
            var f = d === null;
            var p = d == d;
            var m = ga(d);
            if (A) {
              var I = r || p;
            } else {
              I = l ? p && (r || h) : c ? p && h && (r || !f) : u ? p && h && !f && (r || !m) : !f && !m && (r ? d <= t : d < t);
            }
            if (I) {
              s = g + 1;
            } else {
              a = g;
            }
          }
          return wn(a, 4294967294);
        }
        function uo(e, t) {
          for (var n = -1, r = e.length, o = 0, s = []; ++n < r;) {
            var a = e[n];
            var A = t ? t(a) : a;
            if (!n || !Gs(A, c)) {
              var c = A;
              s[o++] = a === 0 ? 0 : a;
            }
          }
          return s;
        }
        function lo(e) {
          if (typeof e == 'number') {
            return e;
          } else {
            if (ga(e)) {
              return p;
            } else {
              return +e;
            }
          }
        }
        function go(e) {
          if (typeof e == 'string') {
            return e;
          }
          if (zs(e)) {
            return Ot(e, go) + '';
          }
          if (ga(e)) {
            if (jn) {
              return jn.call(e);
            } else {
              return '';
            }
          }
          var t = e + '';
          if (t == '0' && 1 / e == -Infinity) {
            return '-0';
          } else {
            return t;
          }
        }
        function ho(e, t, n) {
          var r = -1;
          var o = Ft;
          var s = e.length;
          var a = true;
          var A = [];
          var c = A;
          if (n) {
            a = false;
            o = Mt;
          } else {
            if (s >= 200) {
              var u = t ? null : Zo(e);
              if (u) {
                return hn(u);
              }
              a = false;
              o = rn;
              c = new Vn();
            } else {
              c = t ? [] : A;
            }
          }
          e: while (++r < s) {
            var l = e[r];
            var g = t ? t(l) : l;
            l = n || l !== 0 ? l : 0;
            if (a && g == g) {
              for (var d = c.length; d--;) {
                if (c[d] === g) {
                  continue e;
                }
              }
              if (t) {
                c.push(g);
              }
              A.push(l);
            } else {
              if (!o(c, g, n)) {
                if (c !== A) {
                  c.push(g);
                }
                A.push(l);
              }
            }
          }
          return A;
        }
        function fo(e, t) {
          return (e = Ri(e, t = _o(t, e))) == null || delete e[Ki(Zi(t))];
        }
        function po(e, t, n, r) {
          return no(e, t, n(Br(e, t)), r);
        }
        function Co(e, t, n, r) {
          for (var o = e.length, s = r ? o : -1; (r ? s-- : ++s < o) && t(e[s], s, e););
          if (n) {
            return so(e, r ? 0 : s, r ? s + 1 : o);
          } else {
            return so(e, r ? s + 1 : 0, r ? o : s);
          }
        }
        function mo(e, t) {
          var n = e;
          if (n instanceof Jn) {
            n = n.value();
          }
          return Lt(t, function (e, t) {
            return t.func.apply(t.thisArg, Nt([e], t.args));
          }, n);
        }
        function Io(e, t, n) {
          var o = e.length;
          if (o < 2) {
            if (o) {
              return ho(e[0]);
            } else {
              return [];
            }
          }
          for (var s = -1, a = r(o); ++s < o;) {
            var A = e[s];
            for (var c = -1; ++c < o;) {
              if (c != s) {
                a[s] = hr(a[s] || A, e[c], t, n);
              }
            }
          }
          return ho(Er(a, 1), t, n);
        }
        function Eo(e, t, n) {
          for (var r = -1, s = e.length, a = t.length, A = {}; ++r < s;) {
            var c = r < a ? t[r] : o;
            n(A, e[r], c);
          }
          return A;
        }
        function yo(e) {
          if (Vs(e)) {
            return e;
          } else {
            return [];
          }
        }
        function wo(e) {
          if (typeof e == 'function') {
            return e;
          } else {
            return aA;
          }
        }
        function _o(e, t) {
          if (zs(e)) {
            return e;
          } else {
            if (vi(e, t)) {
              return [e];
            } else {
              return Li(wa(e));
            }
          }
        }
        var vo = Zr;
        function bo(e, t, n) {
          var r = e.length;
          n = n === o ? r : n;
          if (!t && n >= r) {
            return e;
          } else {
            return so(e, t, n);
          }
        }
        var Bo = st || function (e) {
          return Ct.clearTimeout(e);
        };
        function Qo(e, t) {
          if (t) {
            return e.slice();
          }
          var n = e.length;
          var r = ze ? ze(n) : new e.constructor(n);
          e.copy(r);
          return r;
        }
        function Do(e) {
          var t = new e.constructor(e.byteLength);
          new Je(t).set(new Je(e));
          return t;
        }
        function So(e, t) {
          var n = t ? Do(e.buffer) : e.buffer;
          return new e.constructor(n, e.byteOffset, e.length);
        }
        function To(e, t) {
          if (e !== t) {
            var n = e !== o;
            var r = e === null;
            var s = e == e;
            var a = ga(e);
            var A = t !== o;
            var c = t === null;
            var u = t == t;
            var l = ga(t);
            if (!c && !l && !a && e > t || a && A && u && !c && !l || r && A && u || !n && u || !s) {
              return 1;
            }
            if (!r && !a && !l && e < t || l && n && s && !r && !a || c && n && s || !A && s || !u) {
              return -1;
            }
          }
          return 0;
        }
        function Ro(e, t, n, o) {
          var s = -1;
          var a = e.length;
          var A = n.length;
          for (var c = -1, u = t.length, l = yn(a - A, 0), g = r(u + l), d = !o; ++c < u;) {
            g[c] = t[c];
          }
          while (++s < A) {
            if (d || s < a) {
              g[n[s]] = e[s];
            }
          }
          while (l--) {
            g[c++] = e[s++];
          }
          return g;
        }
        function ko(e, t, n, o) {
          for (var s = -1, a = e.length, A = -1, c = n.length, u = -1, l = t.length, g = yn(a - c, 0), d = r(g + l), h = !o; ++s < g;) {
            d[s] = e[s];
          }
          var f = s;
          while (++u < l) {
            d[f + u] = t[u];
          }
          while (++A < c) {
            if (h || s < a) {
              d[f + n[A]] = e[s++];
            }
          }
          return d;
        }
        function xo(e, t) {
          var n = -1;
          var o = e.length;
          for (t ||= r(o); ++n < o;) {
            t[n] = e[n];
          }
          return t;
        }
        function Po(e, t, n, r) {
          var s = !n;
          if (!n) {
            n = {};
          }
          for (var a = -1, A = t.length; ++a < A;) {
            var c = t[a];
            var u = r ? r(n[c], e[c], c, n, e) : o;
            if (u === o) {
              u = e[c];
            }
            if (s) {
              Ar(n, c, u);
            } else {
              or(n, c, u);
            }
          }
          return n;
        }
        function Fo(e, t) {
          return function (n, r) {
            var o = zs(n) ? Tt : sr;
            var s = t ? t() : {};
            return o(n, e, gi(r, 2), s);
          };
        }
        function Mo(e) {
          return Zr(function (t, n) {
            var r = -1;
            var s = n.length;
            var a = s > 1 ? n[s - 1] : o;
            var A = s > 2 ? n[2] : o;
            a = e.length > 3 && typeof a == 'function' ? (s--, a) : o;
            if (A && _i(n[0], n[1], A)) {
              a = s < 3 ? o : a;
              s = 1;
            }
            t = Se(t);
            while (++r < s) {
              var c = n[r];
              if (c) {
                e(t, c, r, a);
              }
            }
            return t;
          });
        }
        function Oo(e, t) {
          return function (n, r) {
            if (n == null) {
              return n;
            }
            if (!Ws(n)) {
              return e(n, r);
            }
            for (var o = n.length, s = t ? o : -1, a = Se(n); (t ? s-- : ++s < o) && r(a[s], s, a) !== false;);
            return n;
          };
        }
        function No(e) {
          return function (t, n, r) {
            var o = -1;
            var s = Se(t);
            var a = r(t);
            for (var A = a.length; A--;) {
              var c = a[e ? A : ++o];
              if (n(s[c], c, s) === false) {
                break;
              }
            }
            return t;
          };
        }
        function Lo(e) {
          return function (t) {
            var n = un(t = wa(t)) ? Cn(t) : o;
            var r = n ? n[0] : t.charAt(0);
            var s = n ? bo(n, 1).join('') : t.slice(1);
            return r[e]() + s;
          };
        }
        function Ko(e) {
          return function (t) {
            return Lt(tA(Ja(t).replace(nt, '')), e, '');
          };
        }
        function Uo(e) {
          return function () {
            var t = arguments;
            switch (t.length) {
              case 0:
                return new e();
              case 1:
                return new e(t[0]);
              case 2:
                return new e(t[0], t[1]);
              case 3:
                return new e(t[0], t[1], t[2]);
              case 4:
                return new e(t[0], t[1], t[2], t[3]);
              case 5:
                return new e(t[0], t[1], t[2], t[3], t[4]);
              case 6:
                return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
              case 7:
                return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
            }
            var n = Gn(e.prototype);
            var r = e.apply(n, t);
            if (oa(r)) {
              return r;
            } else {
              return n;
            }
          };
        }
        function jo(e) {
          return function (t, n, r) {
            var s = Se(t);
            if (!Ws(t)) {
              var a = gi(n, 3);
              t = Fa(t);
              n = function (e) {
                return a(s[e], e, s);
              };
            }
            var A = e(t, n, r);
            if (A > -1) {
              return s[a ? t[A] : A];
            } else {
              return o;
            }
          };
        }
        function qo(e) {
          return si(function (t) {
            var n = t.length;
            var r = n;
            var a = Hn.prototype.thru;
            for (e && t.reverse(); r--;) {
              var A = t[r];
              if (typeof A != 'function') {
                throw new ke(s);
              }
              if (a && !c && ui(A) == 'wrapper') {
                var c = new Hn([], true);
              }
            }
            for (r = c ? r : n; ++r < n;) {
              var u = ui(A = t[r]);
              var l = u == 'wrapper' ? ci(A) : o;
              c = l && bi(l[0]) && l[1] == 424 && !l[4].length && l[9] == 1 ? c[ui(l[0])].apply(c, l[3]) : A.length == 1 && bi(A) ? c[u]() : c.thru(A);
            }
            return function () {
              var e = arguments;
              var r = e[0];
              if (c && e.length == 1 && zs(r)) {
                return c.plant(r).value();
              }
              for (var o = 0, s = n ? t[o].apply(this, e) : r; ++o < n;) {
                s = t[o].call(this, s);
              }
              return s;
            };
          });
        }
        function Go(e, t, n, s, a, A, c, u, l, d) {
          var h = t & g;
          var f = t & 1;
          var p = t & 2;
          var m = t & 24;
          var I = t & 512;
          var E = p ? o : Uo(e);
          return function g() {
            var y = arguments.length;
            var w = r(y);
            for (var _ = y; _--;) {
              w[_] = arguments[_];
            }
            if (m) {
              var v = li(g);
              var b = function (e, t) {
                for (var n = e.length, r = 0; n--;) {
                  if (e[n] === t) {
                    ++r;
                  }
                }
                return r;
              }(w, v);
            }
            if (s) {
              w = Ro(w, s, a, m);
            }
            if (A) {
              w = ko(w, A, c, m);
            }
            y -= b;
            if (m && y < d) {
              var B = dn(w, v);
              return Vo(e, t, Go, g.placeholder, n, w, B, u, l, d - y);
            }
            var Q = f ? n : this;
            var D = p ? Q[e] : e;
            y = w.length;
            if (u) {
              w = function (e, t) {
                var n = e.length;
                var r = wn(t.length, n);
                var s = xo(e);
                while (r--) {
                  var a = t[r];
                  e[r] = wi(a, n) ? s[a] : o;
                }
                return e;
              }(w, u);
            } else {
              if (I && y > 1) {
                w.reverse();
              }
            }
            if (h && l < y) {
              w.length = l;
            }
            if (this && this !== Ct && this instanceof g) {
              D = E || Uo(D);
            }
            return D.apply(Q, w);
          };
        }
        function Yo(e, t) {
          return function (n, r) {
            return function (e, t, n, r) {
              _r(e, function (e, o, s) {
                t(r, n(e), o, s);
              });
              return r;
            }(n, e, t(r), {});
          };
        }
        function Ho(e, t) {
          return function (n, r) {
            var s;
            if (n === o && r === o) {
              return t;
            }
            if (n !== o) {
              s = n;
            }
            if (r !== o) {
              if (s === o) {
                return r;
              }
              if (typeof n == 'string' || typeof r == 'string') {
                n = go(n);
                r = go(r);
              } else {
                n = lo(n);
                r = lo(r);
              }
              s = e(n, r);
            }
            return s;
          };
        }
        function Jo(e) {
          return si(function (t) {
            t = Ot(t, tn(gi()));
            return Zr(function (n) {
              var r = this;
              return e(t, function (e) {
                return St(e, r, n);
              });
            });
          });
        }
        function zo(e, t) {
          var n = (t = t === o ? ' ' : go(t)).length;
          if (n < 2) {
            if (n) {
              return Xr(t, e);
            } else {
              return t;
            }
          }
          var r = Xr(t, pt(e / pn(t)));
          if (un(t)) {
            return bo(Cn(r), 0, e).join('');
          } else {
            return r.slice(0, e);
          }
        }
        function $o(e) {
          return function (t, n, s) {
            if (s && typeof s != 'number' && _i(t, n, s)) {
              n = s = o;
            }
            t = Ca(t);
            if (n === o) {
              n = t;
              t = 0;
            } else {
              n = Ca(n);
            }
            return function (e, t, n, o) {
              var s = -1;
              for (var a = yn(pt((t - e) / (n || 1)), 0), A = r(a); a--;) {
                A[o ? a : ++s] = e;
                e += n;
              }
              return A;
            }(t, n, s = s === o ? t < n ? 1 : -1 : Ca(s), e);
          };
        }
        function Wo(e) {
          return function (t, n) {
            if (typeof t != 'string' || typeof n != 'string') {
              t = Ea(t);
              n = Ea(n);
            }
            return e(t, n);
          };
        }
        function Vo(e, t, n, r, s, a, A, c, g, d) {
          var h = t & 8;
          t |= h ? u : l;
          if (!((t &= ~(h ? l : u)) & 4)) {
            t &= -4;
          }
          var f = [e, t, s, h ? a : o, h ? A : o, h ? o : a, h ? o : A, c, g, d];
          var p = n.apply(o, f);
          if (bi(e)) {
            xi(p, f);
          }
          p.placeholder = r;
          return Mi(p, e, t);
        }
        function Xo(e) {
          var t = De[e];
          return function (e, n) {
            e = Ea(e);
            if ((n = n == null ? 0 : wn(ma(n), 292)) && wt(e)) {
              var r = (wa(e) + 'e').split('e');
              return +((r = (wa(t(r[0] + 'e' + (+r[1] + n))) + 'e').split('e'))[0] + 'e' + (+r[1] - n));
            }
            return t(e);
          };
        }
        var Zo = Tn && 1 / hn(new Tn([, -0]))[1] == h ? function (e) {
          return new Tn(e);
        } : gA;
        function ei(e) {
          return function (t) {
            var n = mi(t);
            if (n == Q) {
              return ln(t);
            } else {
              if (n == k) {
                return fn(t);
              } else {
                return function (e, t) {
                  return Ot(t, function (t) {
                    return [t, e[t]];
                  });
                }(t, e(t));
              }
            }
          };
        }
        function ti(e, t, n, a, h, f, p, m) {
          var I = t & 2;
          if (!I && typeof e != 'function') {
            throw new ke(s);
          }
          var E = a ? a.length : 0;
          if (!E) {
            t &= -97;
            a = h = o;
          }
          p = p === o ? p : yn(ma(p), 0);
          m = m === o ? m : ma(m);
          E -= h ? h.length : 0;
          if (t & l) {
            var y = a;
            var w = h;
            a = h = o;
          }
          var _ = I ? o : ci(e);
          var v = [e, t, n, a, h, y, w, f, p, m];
          if (_) {
            (function (e, t) {
              var n = e[1];
              var r = t[1];
              var o = n | r;
              var s = o < 131;
              var a = r == g && n == 8 || r == g && n == d && e[7].length <= t[8] || r == 384 && t[7].length <= t[8] && n == 8;
              if (!s && !a) {
                return e;
              }
              if (r & 1) {
                e[2] = t[2];
                o |= n & 1 ? 0 : 4;
              }
              var c = t[3];
              if (c) {
                var u = e[3];
                e[3] = u ? Ro(u, c, t[4]) : c;
                e[4] = u ? dn(e[3], A) : t[4];
              }
              if (c = t[5]) {
                u = e[5];
                e[5] = u ? ko(u, c, t[6]) : c;
                e[6] = u ? dn(e[5], A) : t[6];
              }
              if (c = t[7]) {
                e[7] = c;
              }
              if (r & g) {
                e[8] = e[8] == null ? t[8] : wn(e[8], t[8]);
              }
              if (e[9] == null) {
                e[9] = t[9];
              }
              e[0] = t[0];
              e[1] = o;
            })(v, _);
          }
          e = v[0];
          t = v[1];
          n = v[2];
          a = v[3];
          h = v[4];
          if (!(m = v[9] = v[9] === o ? I ? 0 : e.length : yn(v[9] - E, 0)) && t & 24) {
            t &= -25;
          }
          if (t && t != 1) {
            b = t == 8 || t == c ? function (e, t, n) {
              var s = Uo(e);
              return function a() {
                var A = arguments.length;
                var c = r(A);
                for (var u = A, l = li(a); u--;) {
                  c[u] = arguments[u];
                }
                var g = A < 3 && c[0] !== l && c[A - 1] !== l ? [] : dn(c, l);
                if ((A -= g.length) < n) {
                  return Vo(e, t, Go, a.placeholder, o, c, g, o, o, n - A);
                } else {
                  return St(this && this !== Ct && this instanceof a ? s : e, this, c);
                }
              };
            }(e, t, m) : t != u && t != 33 || h.length ? Go.apply(o, v) : function (e, t, n, o) {
              var s = t & 1;
              var a = Uo(e);
              return function t() {
                var A = -1;
                var c = arguments.length;
                for (var u = -1, l = o.length, g = r(l + c), d = this && this !== Ct && this instanceof t ? a : e; ++u < l;) {
                  g[u] = o[u];
                }
                while (c--) {
                  g[u++] = arguments[++A];
                }
                return St(d, s ? n : this, g);
              };
            }(e, t, n, a);
          } else {
            var b = function (e, t, n) {
              var r = t & 1;
              var o = Uo(e);
              return function t() {
                return (this && this !== Ct && this instanceof t ? o : e).apply(r ? n : this, arguments);
              };
            }(e, t, n);
          }
          return Mi((_ ? ro : xi)(b, v), e, t);
        }
        function ni(e, t, n, r) {
          if (e === o || Gs(e, Fe[n]) && !Ne.call(r, n)) {
            return t;
          } else {
            return e;
          }
        }
        function ri(e, t, n, r, s, a) {
          if (oa(e) && oa(t)) {
            a.set(t, e);
            Yr(e, t, o, ri, a);
            a.delete(t);
          }
          return e;
        }
        function oi(e) {
          if (Aa(e)) {
            return o;
          } else {
            return e;
          }
        }
        function ii(e, t, n, r, s, a) {
          var A = n & 1;
          var c = e.length;
          var u = t.length;
          if (c != u && (!A || !(u > c))) {
            return false;
          }
          var l = a.get(e);
          var g = a.get(t);
          if (l && g) {
            return l == t && g == e;
          }
          var d = -1;
          var h = true;
          var f = n & 2 ? new Vn() : o;
          a.set(e, t);
          a.set(t, e);
          while (++d < c) {
            var p = e[d];
            var m = t[d];
            if (r) {
              var I = A ? r(m, p, d, t, e, a) : r(p, m, d, e, t, a);
            }
            if (I !== o) {
              if (I) {
                continue;
              }
              h = false;
              break;
            }
            if (f) {
              if (!Ut(t, function (e, t) {
                if (!rn(f, t) && (p === e || s(p, e, n, r, a))) {
                  return f.push(t);
                }
              })) {
                h = false;
                break;
              }
            } else {
              if (p !== m && !s(p, m, n, r, a)) {
                h = false;
                break;
              }
            }
          }
          a.delete(e);
          a.delete(t);
          return h;
        }
        function si(e) {
          return Fi(Ti(e, o, zi), e + '');
        }
        function ai(e) {
          return Qr(e, Fa, pi);
        }
        function Ai(e) {
          return Qr(e, Ma, Ci);
        }
        var ci = xn ? function (e) {
          return xn.get(e);
        } : gA;
        function ui(e) {
          var t = e.name + '';
          var n = Pn[t];
          for (var r = Ne.call(Pn, t) ? n.length : 0; r--;) {
            var o = n[r];
            var s = o.func;
            if (s == null || s == e) {
              return o.name;
            }
          }
          return t;
        }
        function li(e) {
          return (Ne.call(qn, 'placeholder') ? qn : e).placeholder;
        }
        function gi() {
          var e = qn.iteratee || AA;
          e = e === AA ? Nr : e;
          if (arguments.length) {
            return e(arguments[0], arguments[1]);
          } else {
            return e;
          }
        }
        function di(e, t) {
          var n;
          var r;
          var o = e.__data__;
          if ((r = typeof (n = t)) == 'string' || r == 'number' || r == 'symbol' || r == 'boolean' ? n !== '__proto__' : n === null) {
            return o[typeof t == 'string' ? 'string' : 'hash'];
          } else {
            return o.map;
          }
        }
        function hi(e) {
          var t = Fa(e);
          for (var n = t.length; n--;) {
            var r = t[n];
            var o = e[r];
            t[n] = [r, o, Di(o)];
          }
          return t;
        }
        function fi(e, t) {
          var n = function (e, t) {
            if (e == null) {
              return o;
            } else {
              return e[t];
            }
          }(e, t);
          if (Or(n)) {
            return n;
          } else {
            return o;
          }
        }
        var pi = It ? function (e) {
          if (e == null) {
            return [];
          } else {
            e = Se(e);
            return Pt(It(e), function (t) {
              return Ve.call(e, t);
            });
          }
        } : IA;
        var Ci = It ? function (e) {
          var t = [];
          while (e) {
            Nt(t, pi(e));
            e = $e(e);
          }
          return t;
        } : IA;
        var mi = Dr;
        function Ii(e, t, n) {
          for (var r = -1, o = (t = _o(t, e)).length, s = false; ++r < o;) {
            var a = Ki(t[r]);
            if (!(s = e != null && n(e, a))) {
              break;
            }
            e = e[a];
          }
          if (s || ++r != o) {
            return s;
          } else {
            return !!(o = e == null ? 0 : e.length) && ra(o) && wi(a, o) && (zs(e) || Js(e));
          }
        }
        function Ei(e) {
          if (typeof e.constructor != 'function' || Qi(e)) {
            return {};
          } else {
            return Gn($e(e));
          }
        }
        function yi(e) {
          return zs(e) || Js(e) || !!Ze && !!e && !!e[Ze];
        }
        function wi(e, t) {
          var n = typeof e;
          return !!(t = t == null ? f : t) && (n == 'number' || n != 'symbol' && we.test(e)) && e > -1 && e % 1 == 0 && e < t;
        }
        function _i(e, t, n) {
          if (!oa(n)) {
            return false;
          }
          var r = typeof t;
          return !!(r == 'number' ? Ws(n) && wi(t, n.length) : r == 'string' && t in n) && Gs(n[t], e);
        }
        function vi(e, t) {
          if (zs(e)) {
            return false;
          }
          var n = typeof e;
          return n == 'number' || n == 'symbol' || n == 'boolean' || e == null || !!ga(e) || oe.test(e) || !re.test(e) || t != null && e in Se(t);
        }
        function bi(e) {
          var t = ui(e);
          var n = qn[t];
          if (typeof n != 'function' || !(t in Jn.prototype)) {
            return false;
          }
          if (e === n) {
            return true;
          }
          var r = ci(n);
          return !!r && e === r[0];
        }
        if (Qn && mi(new Qn(new ArrayBuffer(1))) != O || Dn && mi(new Dn()) != Q || Sn && mi(Sn.resolve()) != T || Tn && mi(new Tn()) != k || Rn && mi(new Rn()) != F) {
          mi = function (e) {
            var t = Dr(e);
            var n = t == S ? e.constructor : o;
            var r = n ? Ui(n) : '';
            if (r) {
              switch (r) {
                case Fn:
                  return O;
                case Mn:
                  return Q;
                case On:
                  return T;
                case Nn:
                  return k;
                case Ln:
                  return F;
              }
            }
            return t;
          };
        }
        var Bi = Me ? ta : EA;
        function Qi(e) {
          var t = e && e.constructor;
          return e === (typeof t == 'function' && t.prototype || Fe);
        }
        function Di(e) {
          return e == e && !oa(e);
        }
        function Si(e, t) {
          return function (n) {
            return n != null && n[e] === t && (t !== o || e in Se(n));
          };
        }
        function Ti(e, t, n) {
          t = yn(t === o ? e.length - 1 : t, 0);
          return function () {
            var o = arguments;
            for (var s = -1, a = yn(o.length - t, 0), A = r(a); ++s < a;) {
              A[s] = o[t + s];
            }
            s = -1;
            var c = r(t + 1);
            while (++s < t) {
              c[s] = o[s];
            }
            c[t] = n(A);
            return St(e, this, c);
          };
        }
        function Ri(e, t) {
          if (t.length < 2) {
            return e;
          } else {
            return Br(e, so(t, 0, -1));
          }
        }
        function ki(e, t) {
          if ((t !== 'constructor' || typeof e[t] != 'function') && t != '__proto__') {
            return e[t];
          }
        }
        var xi = Oi(ro);
        var Pi = ft || function (e, t) {
          return Ct.setTimeout(e, t);
        };
        var Fi = Oi(oo);
        function Mi(e, t, n) {
          var r = t + '';
          return Fi(e, function (e, t) {
            var n = t.length;
            if (!n) {
              return e;
            }
            var r = n - 1;
            t[r] = (n > 1 ? '& ' : '') + t[r];
            t = t.join(n > 2 ? ', ' : ' ');
            return e.replace(ue, `{
/* [wrapped with ${t}] */
`);
          }(r, function (e, t) {
            Rt(I, function (n) {
              var r = `_.${n[0]}`;
              if (t & n[1] && !Ft(e, r)) {
                e.push(r);
              }
            });
            return e.sort();
          }(function (e) {
            var t = e.match(le);
            if (t) {
              return t[1].split(ge);
            } else {
              return [];
            }
          }(r), n)));
        }
        function Oi(e) {
          var t = 0;
          var n = 0;
          return function () {
            var r = _n();
            var s = 16 - (r - n);
            n = r;
            if (s > 0) {
              if (++t >= 800) {
                return arguments[0];
              }
            } else {
              t = 0;
            }
            return e.apply(o, arguments);
          };
        }
        function Ni(e, t) {
          var n = -1;
          var r = e.length;
          var s = r - 1;
          for (t = t === o ? r : t; ++n < t;) {
            var a = Vr(n, s);
            var A = e[a];
            e[a] = e[n];
            e[n] = A;
          }
          e.length = t;
          return e;
        }
        var Li = function (e) {
          var t = Ns(e, function (e) {
            if (n.size === 500) {
              n.clear();
            }
            return e;
          });
          var n = t.cache;
          return t;
        }(function (e) {
          var t = [];
          if (e.charCodeAt(0) === 46) {
            t.push('');
          }
          e.replace(ie, function (e, n, r, o) {
            t.push(r ? o.replace(fe, '$1') : n || e);
          });
          return t;
        });
        function Ki(e) {
          if (typeof e == 'string' || ga(e)) {
            return e;
          }
          var t = e + '';
          if (t == '0' && 1 / e == -Infinity) {
            return '-0';
          } else {
            return t;
          }
        }
        function Ui(e) {
          if (e != null) {
            try {
              return Oe.call(e);
            } catch (e) {}
            try {
              return e + '';
            } catch (e) {}
          }
          return '';
        }
        function ji(e) {
          if (e instanceof Jn) {
            return e.clone();
          }
          var t = new Hn(e.__wrapped__, e.__chain__);
          t.__actions__ = xo(e.__actions__);
          t.__index__ = e.__index__;
          t.__values__ = e.__values__;
          return t;
        }
        var qi = Zr(function (e, t) {
          if (Vs(e)) {
            return hr(e, Er(t, 1, Vs, true));
          } else {
            return [];
          }
        });
        var Gi = Zr(function (e, t) {
          var n = Zi(t);
          if (Vs(n)) {
            n = o;
          }
          if (Vs(e)) {
            return hr(e, Er(t, 1, Vs, true), gi(n, 2));
          } else {
            return [];
          }
        });
        var Yi = Zr(function (e, t) {
          var n = Zi(t);
          if (Vs(n)) {
            n = o;
          }
          if (Vs(e)) {
            return hr(e, Er(t, 1, Vs, true), o, n);
          } else {
            return [];
          }
        });
        function Hi(e, t, n) {
          var r = e == null ? 0 : e.length;
          if (!r) {
            return -1;
          }
          var o = n == null ? 0 : ma(n);
          if (o < 0) {
            o = yn(r + o, 0);
          }
          return Gt(e, gi(t, 3), o);
        }
        function Ji(e, t, n) {
          var r = e == null ? 0 : e.length;
          if (!r) {
            return -1;
          }
          var s = r - 1;
          if (n !== o) {
            s = ma(n);
            s = n < 0 ? yn(r + s, 0) : wn(s, r - 1);
          }
          return Gt(e, gi(t, 3), s, true);
        }
        function zi(e) {
          if (e == null ? 0 : e.length) {
            return Er(e, 1);
          } else {
            return [];
          }
        }
        function $i(e) {
          if (e && e.length) {
            return e[0];
          } else {
            return o;
          }
        }
        var Wi = Zr(function (e) {
          var t = Ot(e, yo);
          if (t.length && t[0] === e[0]) {
            return kr(t);
          } else {
            return [];
          }
        });
        var Vi = Zr(function (e) {
          var t = Zi(e);
          var n = Ot(e, yo);
          if (t === Zi(n)) {
            t = o;
          } else {
            n.pop();
          }
          if (n.length && n[0] === e[0]) {
            return kr(n, gi(t, 2));
          } else {
            return [];
          }
        });
        var Xi = Zr(function (e) {
          var t = Zi(e);
          var n = Ot(e, yo);
          if (t = typeof t == 'function' ? t : o) {
            n.pop();
          }
          if (n.length && n[0] === e[0]) {
            return kr(n, o, t);
          } else {
            return [];
          }
        });
        function Zi(e) {
          var t = e == null ? 0 : e.length;
          if (t) {
            return e[t - 1];
          } else {
            return o;
          }
        }
        var es = Zr(ts);
        function ts(e, t) {
          if (e && e.length && t && t.length) {
            return $r(e, t);
          } else {
            return e;
          }
        }
        var ns = si(function (e, t) {
          var n = e == null ? 0 : e.length;
          var r = cr(e, t);
          Wr(e, Ot(t, function (e) {
            if (wi(e, n)) {
              return +e;
            } else {
              return e;
            }
          }).sort(To));
          return r;
        });
        function rs(e) {
          if (e == null) {
            return e;
          } else {
            return Bn.call(e);
          }
        }
        var os = Zr(function (e) {
          return ho(Er(e, 1, Vs, true));
        });
        var is = Zr(function (e) {
          var t = Zi(e);
          if (Vs(t)) {
            t = o;
          }
          return ho(Er(e, 1, Vs, true), gi(t, 2));
        });
        var ss = Zr(function (e) {
          var t = Zi(e);
          t = typeof t == 'function' ? t : o;
          return ho(Er(e, 1, Vs, true), o, t);
        });
        function as(e) {
          if (!e || !e.length) {
            return [];
          }
          var t = 0;
          e = Pt(e, function (e) {
            if (Vs(e)) {
              t = yn(e.length, t);
              return true;
            }
          });
          return Zt(t, function (t) {
            return Ot(e, $t(t));
          });
        }
        function As(e, t) {
          if (!e || !e.length) {
            return [];
          }
          var n = as(e);
          if (t == null) {
            return n;
          } else {
            return Ot(n, function (e) {
              return St(t, o, e);
            });
          }
        }
        var cs = Zr(function (e, t) {
          if (Vs(e)) {
            return hr(e, t);
          } else {
            return [];
          }
        });
        var us = Zr(function (e) {
          return Io(Pt(e, Vs));
        });
        var ls = Zr(function (e) {
          var t = Zi(e);
          if (Vs(t)) {
            t = o;
          }
          return Io(Pt(e, Vs), gi(t, 2));
        });
        var gs = Zr(function (e) {
          var t = Zi(e);
          t = typeof t == 'function' ? t : o;
          return Io(Pt(e, Vs), o, t);
        });
        var ds = Zr(as);
        var hs = Zr(function (e) {
          var t = e.length;
          var n = t > 1 ? e[t - 1] : o;
          n = typeof n == 'function' ? (e.pop(), n) : o;
          return As(e, n);
        });
        function ps(e) {
          var t = qn(e);
          t.__chain__ = true;
          return t;
        }
        function Cs(e, t) {
          return t(e);
        }
        var ms = si(function (e) {
          var t = e.length;
          var n = t ? e[0] : 0;
          var r = this.__wrapped__;
          function s(t) {
            return cr(t, e);
          }
          if (!(t > 1) && !this.__actions__.length && r instanceof Jn && wi(n)) {
            (r = r.slice(n, +n + (t ? 1 : 0))).__actions__.push({
              func: Cs,
              args: [s],
              thisArg: o
            });
            return new Hn(r, this.__chain__).thru(function (e) {
              if (t && !e.length) {
                e.push(o);
              }
              return e;
            });
          } else {
            return this.thru(s);
          }
        });
        var Is = Fo(function (e, t, n) {
          if (Ne.call(e, n)) {
            ++e[n];
          } else {
            Ar(e, n, 1);
          }
        });
        var Es = jo(Hi);
        var ys = jo(Ji);
        function ws(e, t) {
          return (zs(e) ? Rt : fr)(e, gi(t, 3));
        }
        function _s(e, t) {
          return (zs(e) ? kt : pr)(e, gi(t, 3));
        }
        var vs = Fo(function (e, t, n) {
          if (Ne.call(e, n)) {
            e[n].push(t);
          } else {
            Ar(e, n, [t]);
          }
        });
        var bs = Zr(function (e, t, n) {
          var o = -1;
          var s = typeof t == 'function';
          var a = Ws(e) ? r(e.length) : [];
          fr(e, function (e) {
            a[++o] = s ? St(t, e, n) : xr(e, t, n);
          });
          return a;
        });
        var Bs = Fo(function (e, t, n) {
          Ar(e, n, t);
        });
        function Qs(e, t) {
          return (zs(e) ? Ot : jr)(e, gi(t, 3));
        }
        var Ds = Fo(function (e, t, n) {
          e[n ? 0 : 1].push(t);
        }, function () {
          return [[], []];
        });
        var Ss = Zr(function (e, t) {
          if (e == null) {
            return [];
          }
          var n = t.length;
          if (n > 1 && _i(e, t[0], t[1])) {
            t = [];
          } else {
            if (n > 2 && _i(t[0], t[1], t[2])) {
              t = [t[0]];
            }
          }
          return Jr(e, Er(t, 1), []);
        });
        var Ts = gt || function () {
          return Ct.Date.now();
        };
        function Rs(e, t, n) {
          t = n ? o : t;
          t = e && t == null ? e.length : t;
          return ti(e, g, o, o, o, o, t);
        }
        function ks(e, t) {
          var n;
          if (typeof t != 'function') {
            throw new ke(s);
          }
          e = ma(e);
          return function () {
            if (--e > 0) {
              n = t.apply(this, arguments);
            }
            if (e <= 1) {
              t = o;
            }
            return n;
          };
        }
        var xs = Zr(function (e, t, n) {
          var r = 1;
          if (n.length) {
            var o = dn(n, li(xs));
            r |= u;
          }
          return ti(e, r, t, n, o);
        });
        var Ps = Zr(function (e, t, n) {
          var r = 3;
          if (n.length) {
            var o = dn(n, li(Ps));
            r |= u;
          }
          return ti(t, r, e, n, o);
        });
        function Fs(e, t, n) {
          var r;
          var a;
          var A;
          var c;
          var u;
          var l;
          var g = 0;
          var d = false;
          var h = false;
          var f = true;
          if (typeof e != 'function') {
            throw new ke(s);
          }
          function p(t) {
            var n = r;
            var s = a;
            r = a = o;
            g = t;
            return c = e.apply(s, n);
          }
          function m(e) {
            var n = e - l;
            return l === o || n >= t || n < 0 || h && e - g >= A;
          }
          function I() {
            var e = Ts();
            if (m(e)) {
              return E(e);
            }
            u = Pi(I, function (e) {
              var n = t - (e - l);
              if (h) {
                return wn(n, A - (e - g));
              } else {
                return n;
              }
            }(e));
          }
          function E(e) {
            u = o;
            if (f && r) {
              return p(e);
            } else {
              r = a = o;
              return c;
            }
          }
          function y() {
            var e = Ts();
            var n = m(e);
            r = arguments;
            a = this;
            l = e;
            if (n) {
              if (u === o) {
                return function (e) {
                  g = e;
                  u = Pi(I, t);
                  if (d) {
                    return p(e);
                  } else {
                    return c;
                  }
                }(l);
              }
              if (h) {
                Bo(u);
                u = Pi(I, t);
                return p(l);
              }
            }
            if (u === o) {
              u = Pi(I, t);
            }
            return c;
          }
          t = Ea(t) || 0;
          if (oa(n)) {
            d = !!n.leading;
            A = (h = 'maxWait' in n) ? yn(Ea(n.maxWait) || 0, t) : A;
            f = 'trailing' in n ? !!n.trailing : f;
          }
          y.cancel = function () {
            if (u !== o) {
              Bo(u);
            }
            g = 0;
            r = l = a = u = o;
          };
          y.flush = function () {
            if (u === o) {
              return c;
            } else {
              return E(Ts());
            }
          };
          return y;
        }
        var Ms = Zr(function (e, t) {
          return dr(e, 1, t);
        });
        var Os = Zr(function (e, t, n) {
          return dr(e, Ea(t) || 0, n);
        });
        function Ns(e, t) {
          if (typeof e != 'function' || t != null && typeof t != 'function') {
            throw new ke(s);
          }
          function n() {
            var r = arguments;
            var o = t ? t.apply(this, r) : r[0];
            var s = n.cache;
            if (s.has(o)) {
              return s.get(o);
            }
            var a = e.apply(this, r);
            n.cache = s.set(o, a) || s;
            return a;
          }
          n.cache = new (Ns.Cache || Wn)();
          return n;
        }
        function Ls(e) {
          if (typeof e != 'function') {
            throw new ke(s);
          }
          return function () {
            var t = arguments;
            switch (t.length) {
              case 0:
                return !e.call(this);
              case 1:
                return !e.call(this, t[0]);
              case 2:
                return !e.call(this, t[0], t[1]);
              case 3:
                return !e.call(this, t[0], t[1], t[2]);
            }
            return !e.apply(this, t);
          };
        }
        Ns.Cache = Wn;
        var Ks = vo(function (e, t) {
          var n = (t = t.length == 1 && zs(t[0]) ? Ot(t[0], tn(gi())) : Ot(Er(t, 1), tn(gi()))).length;
          return Zr(function (r) {
            for (var o = -1, s = wn(r.length, n); ++o < s;) {
              r[o] = t[o].call(this, r[o]);
            }
            return St(e, this, r);
          });
        });
        var Us = Zr(function (e, t) {
          var n = dn(t, li(Us));
          return ti(e, u, o, t, n);
        });
        var js = Zr(function (e, t) {
          var n = dn(t, li(js));
          return ti(e, l, o, t, n);
        });
        var qs = si(function (e, t) {
          return ti(e, d, o, o, o, t);
        });
        function Gs(e, t) {
          return e === t || e != e && t != t;
        }
        var Ys = Wo(Sr);
        var Hs = Wo(function (e, t) {
          return e >= t;
        });
        var Js = Pr(function () {
          return arguments;
        }()) ? Pr : function (e) {
          return ia(e) && Ne.call(e, 'callee') && !Ve.call(e, 'callee');
        };
        var zs = r.isArray;
        var $s = _t ? tn(_t) : function (e) {
          return ia(e) && Dr(e) == M;
        };
        function Ws(e) {
          return e != null && ra(e.length) && !ta(e);
        }
        function Vs(e) {
          return ia(e) && Ws(e);
        }
        var Xs = yt || EA;
        var Zs = vt ? tn(vt) : function (e) {
          return ia(e) && Dr(e) == _;
        };
        function ea(e) {
          if (!ia(e)) {
            return false;
          }
          var t = Dr(e);
          return t == v || t == '[object DOMException]' || typeof e.message == 'string' && typeof e.name == 'string' && !Aa(e);
        }
        function ta(e) {
          if (!oa(e)) {
            return false;
          }
          var t = Dr(e);
          return t == b || t == B || t == '[object AsyncFunction]' || t == '[object Proxy]';
        }
        function na(e) {
          return typeof e == 'number' && e == ma(e);
        }
        function ra(e) {
          return typeof e == 'number' && e > -1 && e % 1 == 0 && e <= f;
        }
        function oa(e) {
          var t = typeof e;
          return e != null && (t == 'object' || t == 'function');
        }
        function ia(e) {
          return e != null && typeof e == 'object';
        }
        var sa = bt ? tn(bt) : function (e) {
          return ia(e) && mi(e) == Q;
        };
        function aa(e) {
          return typeof e == 'number' || ia(e) && Dr(e) == D;
        }
        function Aa(e) {
          if (!ia(e) || Dr(e) != S) {
            return false;
          }
          var t = $e(e);
          if (t === null) {
            return true;
          }
          var n = Ne.call(t, 'constructor') && t.constructor;
          return typeof n == 'function' && n instanceof n && Oe.call(n) == je;
        }
        var ca = Bt ? tn(Bt) : function (e) {
          return ia(e) && Dr(e) == R;
        };
        var ua = Qt ? tn(Qt) : function (e) {
          return ia(e) && mi(e) == k;
        };
        function la(e) {
          return typeof e == 'string' || !zs(e) && ia(e) && Dr(e) == x;
        }
        function ga(e) {
          return typeof e == 'symbol' || ia(e) && Dr(e) == P;
        }
        var da = Dt ? tn(Dt) : function (e) {
          return ia(e) && ra(e.length) && !!ut[Dr(e)];
        };
        var ha = Wo(Ur);
        var fa = Wo(function (e, t) {
          return e <= t;
        });
        function pa(e) {
          if (!e) {
            return [];
          }
          if (Ws(e)) {
            if (la(e)) {
              return Cn(e);
            } else {
              return xo(e);
            }
          }
          if (et && e[et]) {
            return function (e) {
              for (var t, n = []; !(t = e.next()).done;) {
                n.push(t.value);
              }
              return n;
            }(e[et]());
          }
          var t = mi(e);
          return (t == Q ? ln : t == k ? hn : Ga)(e);
        }
        function Ca(e) {
          if (e) {
            if ((e = Ea(e)) === h || e === -Infinity) {
              return (e < 0 ? -1 : 1) * 1.7976931348623157e+308;
            } else {
              if (e == e) {
                return e;
              } else {
                return 0;
              }
            }
          } else {
            if (e === 0) {
              return e;
            } else {
              return 0;
            }
          }
        }
        function ma(e) {
          var t = Ca(e);
          var n = t % 1;
          if (t == t) {
            if (n) {
              return t - n;
            } else {
              return t;
            }
          } else {
            return 0;
          }
        }
        function Ia(e) {
          if (e) {
            return ur(ma(e), 0, m);
          } else {
            return 0;
          }
        }
        function Ea(e) {
          if (typeof e == 'number') {
            return e;
          }
          if (ga(e)) {
            return p;
          }
          if (oa(e)) {
            var t = typeof e.valueOf == 'function' ? e.valueOf() : e;
            e = oa(t) ? t + '' : t;
          }
          if (typeof e != 'string') {
            if (e === 0) {
              return e;
            } else {
              return +e;
            }
          }
          e = en(e);
          var n = Ie.test(e);
          if (n || ye.test(e)) {
            return ht(e.slice(2), n ? 2 : 8);
          } else {
            if (me.test(e)) {
              return p;
            } else {
              return +e;
            }
          }
        }
        function ya(e) {
          return Po(e, Ma(e));
        }
        function wa(e) {
          if (e == null) {
            return '';
          } else {
            return go(e);
          }
        }
        var _a = Mo(function (e, t) {
          if (Qi(t) || Ws(t)) {
            Po(t, Fa(t), e);
          } else {
            for (var n in t) {
              if (Ne.call(t, n)) {
                or(e, n, t[n]);
              }
            }
          }
        });
        var va = Mo(function (e, t) {
          Po(t, Ma(t), e);
        });
        var ba = Mo(function (e, t, n, r) {
          Po(t, Ma(t), e, r);
        });
        var Ba = Mo(function (e, t, n, r) {
          Po(t, Fa(t), e, r);
        });
        var Qa = si(cr);
        var Da = Zr(function (e, t) {
          e = Se(e);
          var n = -1;
          var r = t.length;
          var s = r > 2 ? t[2] : o;
          for (s && _i(t[0], t[1], s) && (r = 1); ++n < r;) {
            var a = t[n];
            var A = Ma(a);
            for (var c = -1, u = A.length; ++c < u;) {
              var l = A[c];
              var g = e[l];
              if (g === o || Gs(g, Fe[l]) && !Ne.call(e, l)) {
                e[l] = a[l];
              }
            }
          }
          return e;
        });
        var Sa = Zr(function (e) {
          e.push(o, ri);
          return St(Na, o, e);
        });
        function Ta(e, t, n) {
          var r = e == null ? o : Br(e, t);
          if (r === o) {
            return n;
          } else {
            return r;
          }
        }
        function Ra(e, t) {
          return e != null && Ii(e, t, Rr);
        }
        var ka = Yo(function (e, t, n) {
          if (t != null && typeof t.toString != 'function') {
            t = Ue.call(t);
          }
          e[t] = n;
        }, oA(aA));
        var xa = Yo(function (e, t, n) {
          if (t != null && typeof t.toString != 'function') {
            t = Ue.call(t);
          }
          if (Ne.call(e, t)) {
            e[t].push(n);
          } else {
            e[t] = [n];
          }
        }, gi);
        var Pa = Zr(xr);
        function Fa(e) {
          if (Ws(e)) {
            return Zn(e);
          } else {
            return Lr(e);
          }
        }
        function Ma(e) {
          if (Ws(e)) {
            return Zn(e, true);
          } else {
            return Kr(e);
          }
        }
        var Oa = Mo(function (e, t, n) {
          Yr(e, t, n);
        });
        var Na = Mo(function (e, t, n, r) {
          Yr(e, t, n, r);
        });
        var La = si(function (e, t) {
          var n = {};
          if (e == null) {
            return n;
          }
          var r = false;
          t = Ot(t, function (t) {
            t = _o(t, e);
            if (!r) {
              r = t.length > 1;
            }
            return t;
          });
          Po(e, Ai(e), n);
          if (r) {
            n = lr(n, 7, oi);
          }
          for (var o = t.length; o--;) {
            fo(n, t[o]);
          }
          return n;
        });
        var Ka = si(function (e, t) {
          if (e == null) {
            return {};
          } else {
            return function (e, t) {
              return zr(e, t, function (t, n) {
                return Ra(e, n);
              });
            }(e, t);
          }
        });
        function Ua(e, t) {
          if (e == null) {
            return {};
          }
          var n = Ot(Ai(e), function (e) {
            return [e];
          });
          t = gi(t);
          return zr(e, n, function (e, n) {
            return t(e, n[0]);
          });
        }
        var ja = ei(Fa);
        var qa = ei(Ma);
        function Ga(e) {
          if (e == null) {
            return [];
          } else {
            return nn(e, Fa(e));
          }
        }
        var Ya = Ko(function (e, t, n) {
          t = t.toLowerCase();
          return e + (n ? Ha(t) : t);
        });
        function Ha(e) {
          return eA(wa(e).toLowerCase());
        }
        function Ja(e) {
          return (e = wa(e)) && e.replace(_e, an).replace(rt, '');
        }
        var za = Ko(function (e, t, n) {
          return e + (n ? '-' : '') + t.toLowerCase();
        });
        var $a = Ko(function (e, t, n) {
          return e + (n ? ' ' : '') + t.toLowerCase();
        });
        var Wa = Lo('toLowerCase');
        var Va = Ko(function (e, t, n) {
          return e + (n ? '_' : '') + t.toLowerCase();
        });
        var Xa = Ko(function (e, t, n) {
          return e + (n ? ' ' : '') + eA(t);
        });
        var Za = Ko(function (e, t, n) {
          return e + (n ? ' ' : '') + t.toUpperCase();
        });
        var eA = Lo('toUpperCase');
        function tA(e, t, n) {
          e = wa(e);
          if ((t = n ? o : t) === o) {
            if (function (e) {
              return at.test(e);
            }(e)) {
              return function (e) {
                return e.match(it) || [];
              }(e);
            } else {
              return function (e) {
                return e.match(de) || [];
              }(e);
            }
          } else {
            return e.match(t) || [];
          }
        }
        var nA = Zr(function (e, t) {
          try {
            return St(e, o, t);
          } catch (e) {
            if (ea(e)) {
              return e;
            } else {
              return new Be(e);
            }
          }
        });
        var rA = si(function (e, t) {
          Rt(t, function (t) {
            t = Ki(t);
            Ar(e, t, xs(e[t], e));
          });
          return e;
        });
        function oA(e) {
          return function () {
            return e;
          };
        }
        var iA = qo();
        var sA = qo(true);
        function aA(e) {
          return e;
        }
        function AA(e) {
          return Nr(typeof e == 'function' ? e : lr(e, 1));
        }
        var cA = Zr(function (e, t) {
          return function (n) {
            return xr(n, e, t);
          };
        });
        var uA = Zr(function (e, t) {
          return function (n) {
            return xr(e, n, t);
          };
        });
        function lA(e, t, n) {
          var r = Fa(t);
          var o = br(t, r);
          if (n == null && (!oa(t) || !o.length && !!r.length)) {
            n = t;
            t = e;
            e = this;
            o = br(t, Fa(t));
          }
          var s = !oa(n) || !('chain' in n) || !!n.chain;
          var a = ta(e);
          Rt(o, function (n) {
            var r = t[n];
            e[n] = r;
            if (a) {
              e.prototype[n] = function () {
                var t = this.__chain__;
                if (s || t) {
                  var n = e(this.__wrapped__);
                  (n.__actions__ = xo(this.__actions__)).push({
                    func: r,
                    args: arguments,
                    thisArg: e
                  });
                  n.__chain__ = t;
                  return n;
                }
                return r.apply(e, Nt([this.value()], arguments));
              };
            }
          });
          return e;
        }
        function gA() {}
        var dA = Jo(Ot);
        var hA = Jo(xt);
        var fA = Jo(Ut);
        function pA(e) {
          if (vi(e)) {
            return $t(Ki(e));
          } else {
            return function (e) {
              return function (t) {
                return Br(t, e);
              };
            }(e);
          }
        }
        var CA = $o();
        var mA = $o(true);
        function IA() {
          return [];
        }
        function EA() {
          return false;
        }
        var yA = Ho(function (e, t) {
          return e + t;
        }, 0);
        var wA = Xo('ceil');
        var _A = Ho(function (e, t) {
          return e / t;
        }, 1);
        var vA = Xo('floor');
        var bA;
        var BA = Ho(function (e, t) {
          return e * t;
        }, 1);
        var QA = Xo('round');
        var DA = Ho(function (e, t) {
          return e - t;
        }, 0);
        qn.after = function (e, t) {
          if (typeof t != 'function') {
            throw new ke(s);
          }
          e = ma(e);
          return function () {
            if (--e < 1) {
              return t.apply(this, arguments);
            }
          };
        };
        qn.ary = Rs;
        qn.assign = _a;
        qn.assignIn = va;
        qn.assignInWith = ba;
        qn.assignWith = Ba;
        qn.at = Qa;
        qn.before = ks;
        qn.bind = xs;
        qn.bindAll = rA;
        qn.bindKey = Ps;
        qn.castArray = function () {
          if (!arguments.length) {
            return [];
          }
          var e = arguments[0];
          if (zs(e)) {
            return e;
          } else {
            return [e];
          }
        };
        qn.chain = ps;
        qn.chunk = function (e, t, n) {
          t = (n ? _i(e, t, n) : t === o) ? 1 : yn(ma(t), 0);
          var s = e == null ? 0 : e.length;
          if (!s || t < 1) {
            return [];
          }
          for (var a = 0, A = 0, c = r(pt(s / t)); a < s;) {
            c[A++] = so(e, a, a += t);
          }
          return c;
        };
        qn.compact = function (e) {
          for (var t = -1, n = e == null ? 0 : e.length, r = 0, o = []; ++t < n;) {
            var s = e[t];
            if (s) {
              o[r++] = s;
            }
          }
          return o;
        };
        qn.concat = function () {
          var e = arguments.length;
          if (!e) {
            return [];
          }
          var t = r(e - 1);
          var n = arguments[0];
          for (var o = e; o--;) {
            t[o - 1] = arguments[o];
          }
          return Nt(zs(n) ? xo(n) : [n], Er(t, 1));
        };
        qn.cond = function (e) {
          var t = e == null ? 0 : e.length;
          var n = gi();
          e = t ? Ot(e, function (e) {
            if (typeof e[1] != 'function') {
              throw new ke(s);
            }
            return [n(e[0]), e[1]];
          }) : [];
          return Zr(function (n) {
            for (var r = -1; ++r < t;) {
              var o = e[r];
              if (St(o[0], this, n)) {
                return St(o[1], this, n);
              }
            }
          });
        };
        qn.conforms = function (e) {
          return function (e) {
            var t = Fa(e);
            return function (n) {
              return gr(n, e, t);
            };
          }(lr(e, 1));
        };
        qn.constant = oA;
        qn.countBy = Is;
        qn.create = function (e, t) {
          var n = Gn(e);
          if (t == null) {
            return n;
          } else {
            return ar(n, t);
          }
        };
        qn.curry = function e(t, n, r) {
          var s = ti(t, 8, o, o, o, o, o, n = r ? o : n);
          s.placeholder = e.placeholder;
          return s;
        };
        qn.curryRight = function e(t, n, r) {
          var s = ti(t, c, o, o, o, o, o, n = r ? o : n);
          s.placeholder = e.placeholder;
          return s;
        };
        qn.debounce = Fs;
        qn.defaults = Da;
        qn.defaultsDeep = Sa;
        qn.defer = Ms;
        qn.delay = Os;
        qn.difference = qi;
        qn.differenceBy = Gi;
        qn.differenceWith = Yi;
        qn.drop = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (r) {
            return so(e, (t = n || t === o ? 1 : ma(t)) < 0 ? 0 : t, r);
          } else {
            return [];
          }
        };
        qn.dropRight = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (r) {
            return so(e, 0, (t = r - (t = n || t === o ? 1 : ma(t))) < 0 ? 0 : t);
          } else {
            return [];
          }
        };
        qn.dropRightWhile = function (e, t) {
          if (e && e.length) {
            return Co(e, gi(t, 3), true, true);
          } else {
            return [];
          }
        };
        qn.dropWhile = function (e, t) {
          if (e && e.length) {
            return Co(e, gi(t, 3), true);
          } else {
            return [];
          }
        };
        qn.fill = function (e, t, n, r) {
          var s = e == null ? 0 : e.length;
          if (s) {
            if (n && typeof n != 'number' && _i(e, t, n)) {
              n = 0;
              r = s;
            }
            return function (e, t, n, r) {
              var s = e.length;
              if ((n = ma(n)) < 0) {
                n = -n > s ? 0 : s + n;
              }
              if ((r = r === o || r > s ? s : ma(r)) < 0) {
                r += s;
              }
              r = n > r ? 0 : Ia(r);
              while (n < r) {
                e[n++] = t;
              }
              return e;
            }(e, t, n, r);
          } else {
            return [];
          }
        };
        qn.filter = function (e, t) {
          return (zs(e) ? Pt : Ir)(e, gi(t, 3));
        };
        qn.flatMap = function (e, t) {
          return Er(Qs(e, t), 1);
        };
        qn.flatMapDeep = function (e, t) {
          return Er(Qs(e, t), h);
        };
        qn.flatMapDepth = function (e, t, n) {
          n = n === o ? 1 : ma(n);
          return Er(Qs(e, t), n);
        };
        qn.flatten = zi;
        qn.flattenDeep = function (e) {
          if (e == null ? 0 : e.length) {
            return Er(e, h);
          } else {
            return [];
          }
        };
        qn.flattenDepth = function (e, t) {
          if (e == null ? 0 : e.length) {
            return Er(e, t = t === o ? 1 : ma(t));
          } else {
            return [];
          }
        };
        qn.flip = function (e) {
          return ti(e, 512);
        };
        qn.flow = iA;
        qn.flowRight = sA;
        qn.fromPairs = function (e) {
          for (var t = -1, n = e == null ? 0 : e.length, r = {}; ++t < n;) {
            var o = e[t];
            r[o[0]] = o[1];
          }
          return r;
        };
        qn.functions = function (e) {
          if (e == null) {
            return [];
          } else {
            return br(e, Fa(e));
          }
        };
        qn.functionsIn = function (e) {
          if (e == null) {
            return [];
          } else {
            return br(e, Ma(e));
          }
        };
        qn.groupBy = vs;
        qn.initial = function (e) {
          if (e == null ? 0 : e.length) {
            return so(e, 0, -1);
          } else {
            return [];
          }
        };
        qn.intersection = Wi;
        qn.intersectionBy = Vi;
        qn.intersectionWith = Xi;
        qn.invert = ka;
        qn.invertBy = xa;
        qn.invokeMap = bs;
        qn.iteratee = AA;
        qn.keyBy = Bs;
        qn.keys = Fa;
        qn.keysIn = Ma;
        qn.map = Qs;
        qn.mapKeys = function (e, t) {
          var n = {};
          t = gi(t, 3);
          _r(e, function (e, r, o) {
            Ar(n, t(e, r, o), e);
          });
          return n;
        };
        qn.mapValues = function (e, t) {
          var n = {};
          t = gi(t, 3);
          _r(e, function (e, r, o) {
            Ar(n, r, t(e, r, o));
          });
          return n;
        };
        qn.matches = function (e) {
          return qr(lr(e, 1));
        };
        qn.matchesProperty = function (e, t) {
          return Gr(e, lr(t, 1));
        };
        qn.memoize = Ns;
        qn.merge = Oa;
        qn.mergeWith = Na;
        qn.method = cA;
        qn.methodOf = uA;
        qn.mixin = lA;
        qn.negate = Ls;
        qn.nthArg = function (e) {
          e = ma(e);
          return Zr(function (t) {
            return Hr(t, e);
          });
        };
        qn.omit = La;
        qn.omitBy = function (e, t) {
          return Ua(e, Ls(gi(t)));
        };
        qn.once = function (e) {
          return ks(2, e);
        };
        qn.orderBy = function (e, t, n, r) {
          if (e == null) {
            return [];
          } else {
            if (!zs(t)) {
              t = t == null ? [] : [t];
            }
            if (!zs(n = r ? o : n)) {
              n = n == null ? [] : [n];
            }
            return Jr(e, t, n);
          }
        };
        qn.over = dA;
        qn.overArgs = Ks;
        qn.overEvery = hA;
        qn.overSome = fA;
        qn.partial = Us;
        qn.partialRight = js;
        qn.partition = Ds;
        qn.pick = Ka;
        qn.pickBy = Ua;
        qn.property = pA;
        qn.propertyOf = function (e) {
          return function (t) {
            if (e == null) {
              return o;
            } else {
              return Br(e, t);
            }
          };
        };
        qn.pull = es;
        qn.pullAll = ts;
        qn.pullAllBy = function (e, t, n) {
          if (e && e.length && t && t.length) {
            return $r(e, t, gi(n, 2));
          } else {
            return e;
          }
        };
        qn.pullAllWith = function (e, t, n) {
          if (e && e.length && t && t.length) {
            return $r(e, t, o, n);
          } else {
            return e;
          }
        };
        qn.pullAt = ns;
        qn.range = CA;
        qn.rangeRight = mA;
        qn.rearg = qs;
        qn.reject = function (e, t) {
          return (zs(e) ? Pt : Ir)(e, Ls(gi(t, 3)));
        };
        qn.remove = function (e, t) {
          var n = [];
          if (!e || !e.length) {
            return n;
          }
          var r = -1;
          var o = [];
          var s = e.length;
          for (t = gi(t, 3); ++r < s;) {
            var a = e[r];
            if (t(a, r, e)) {
              n.push(a);
              o.push(r);
            }
          }
          Wr(e, o);
          return n;
        };
        qn.rest = function (e, t) {
          if (typeof e != 'function') {
            throw new ke(s);
          }
          return Zr(e, t = t === o ? t : ma(t));
        };
        qn.reverse = rs;
        qn.sampleSize = function (e, t, n) {
          t = (n ? _i(e, t, n) : t === o) ? 1 : ma(t);
          return (zs(e) ? tr : to)(e, t);
        };
        qn.set = function (e, t, n) {
          if (e == null) {
            return e;
          } else {
            return no(e, t, n);
          }
        };
        qn.setWith = function (e, t, n, r) {
          r = typeof r == 'function' ? r : o;
          if (e == null) {
            return e;
          } else {
            return no(e, t, n, r);
          }
        };
        qn.shuffle = function (e) {
          return (zs(e) ? nr : io)(e);
        };
        qn.slice = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (r) {
            if (n && typeof n != 'number' && _i(e, t, n)) {
              t = 0;
              n = r;
            } else {
              t = t == null ? 0 : ma(t);
              n = n === o ? r : ma(n);
            }
            return so(e, t, n);
          } else {
            return [];
          }
        };
        qn.sortBy = Ss;
        qn.sortedUniq = function (e) {
          if (e && e.length) {
            return uo(e);
          } else {
            return [];
          }
        };
        qn.sortedUniqBy = function (e, t) {
          if (e && e.length) {
            return uo(e, gi(t, 2));
          } else {
            return [];
          }
        };
        qn.split = function (e, t, n) {
          if (n && typeof n != 'number' && _i(e, t, n)) {
            t = n = o;
          }
          if (n = n === o ? m : n >>> 0) {
            if ((e = wa(e)) && (typeof t == 'string' || t != null && !ca(t)) && !(t = go(t)) && un(e)) {
              return bo(Cn(e), 0, n);
            } else {
              return e.split(t, n);
            }
          } else {
            return [];
          }
        };
        qn.spread = function (e, t) {
          if (typeof e != 'function') {
            throw new ke(s);
          }
          t = t == null ? 0 : yn(ma(t), 0);
          return Zr(function (n) {
            var r = n[t];
            var o = bo(n, 0, t);
            if (r) {
              Nt(o, r);
            }
            return St(e, this, o);
          });
        };
        qn.tail = function (e) {
          var t = e == null ? 0 : e.length;
          if (t) {
            return so(e, 1, t);
          } else {
            return [];
          }
        };
        qn.take = function (e, t, n) {
          if (e && e.length) {
            return so(e, 0, (t = n || t === o ? 1 : ma(t)) < 0 ? 0 : t);
          } else {
            return [];
          }
        };
        qn.takeRight = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (r) {
            return so(e, (t = r - (t = n || t === o ? 1 : ma(t))) < 0 ? 0 : t, r);
          } else {
            return [];
          }
        };
        qn.takeRightWhile = function (e, t) {
          if (e && e.length) {
            return Co(e, gi(t, 3), false, true);
          } else {
            return [];
          }
        };
        qn.takeWhile = function (e, t) {
          if (e && e.length) {
            return Co(e, gi(t, 3));
          } else {
            return [];
          }
        };
        qn.tap = function (e, t) {
          t(e);
          return e;
        };
        qn.throttle = function (e, t, n) {
          var r = true;
          var o = true;
          if (typeof e != 'function') {
            throw new ke(s);
          }
          if (oa(n)) {
            r = 'leading' in n ? !!n.leading : r;
            o = 'trailing' in n ? !!n.trailing : o;
          }
          return Fs(e, t, {
            leading: r,
            maxWait: t,
            trailing: o
          });
        };
        qn.thru = Cs;
        qn.toArray = pa;
        qn.toPairs = ja;
        qn.toPairsIn = qa;
        qn.toPath = function (e) {
          if (zs(e)) {
            return Ot(e, Ki);
          } else {
            if (ga(e)) {
              return [e];
            } else {
              return xo(Li(wa(e)));
            }
          }
        };
        qn.toPlainObject = ya;
        qn.transform = function (e, t, n) {
          var r = zs(e);
          var o = r || Xs(e) || da(e);
          t = gi(t, 4);
          if (n == null) {
            var s = e && e.constructor;
            n = o ? r ? new s() : [] : oa(e) && ta(s) ? Gn($e(e)) : {};
          }
          (o ? Rt : _r)(e, function (e, r, o) {
            return t(n, e, r, o);
          });
          return n;
        };
        qn.unary = function (e) {
          return Rs(e, 1);
        };
        qn.union = os;
        qn.unionBy = is;
        qn.unionWith = ss;
        qn.uniq = function (e) {
          if (e && e.length) {
            return ho(e);
          } else {
            return [];
          }
        };
        qn.uniqBy = function (e, t) {
          if (e && e.length) {
            return ho(e, gi(t, 2));
          } else {
            return [];
          }
        };
        qn.uniqWith = function (e, t) {
          t = typeof t == 'function' ? t : o;
          if (e && e.length) {
            return ho(e, o, t);
          } else {
            return [];
          }
        };
        qn.unset = function (e, t) {
          return e == null || fo(e, t);
        };
        qn.unzip = as;
        qn.unzipWith = As;
        qn.update = function (e, t, n) {
          if (e == null) {
            return e;
          } else {
            return po(e, t, wo(n));
          }
        };
        qn.updateWith = function (e, t, n, r) {
          r = typeof r == 'function' ? r : o;
          if (e == null) {
            return e;
          } else {
            return po(e, t, wo(n), r);
          }
        };
        qn.values = Ga;
        qn.valuesIn = function (e) {
          if (e == null) {
            return [];
          } else {
            return nn(e, Ma(e));
          }
        };
        qn.without = cs;
        qn.words = tA;
        qn.wrap = function (e, t) {
          return Us(wo(t), e);
        };
        qn.xor = us;
        qn.xorBy = ls;
        qn.xorWith = gs;
        qn.zip = ds;
        qn.zipObject = function (e, t) {
          return Eo(e || [], t || [], or);
        };
        qn.zipObjectDeep = function (e, t) {
          return Eo(e || [], t || [], no);
        };
        qn.zipWith = hs;
        qn.entries = ja;
        qn.entriesIn = qa;
        qn.extend = va;
        qn.extendWith = ba;
        lA(qn, qn);
        qn.add = yA;
        qn.attempt = nA;
        qn.camelCase = Ya;
        qn.capitalize = Ha;
        qn.ceil = wA;
        qn.clamp = function (e, t, n) {
          if (n === o) {
            n = t;
            t = o;
          }
          if (n !== o) {
            n = (n = Ea(n)) == n ? n : 0;
          }
          if (t !== o) {
            t = (t = Ea(t)) == t ? t : 0;
          }
          return ur(Ea(e), t, n);
        };
        qn.clone = function (e) {
          return lr(e, 4);
        };
        qn.cloneDeep = function (e) {
          return lr(e, 5);
        };
        qn.cloneDeepWith = function (e, t) {
          return lr(e, 5, t = typeof t == 'function' ? t : o);
        };
        qn.cloneWith = function (e, t) {
          return lr(e, 4, t = typeof t == 'function' ? t : o);
        };
        qn.conformsTo = function (e, t) {
          return t == null || gr(e, t, Fa(t));
        };
        qn.deburr = Ja;
        qn.defaultTo = function (e, t) {
          if (e == null || e != e) {
            return t;
          } else {
            return e;
          }
        };
        qn.divide = _A;
        qn.endsWith = function (e, t, n) {
          e = wa(e);
          t = go(t);
          var r = e.length;
          var s = n = n === o ? r : ur(ma(n), 0, r);
          return (n -= t.length) >= 0 && e.slice(n, s) == t;
        };
        qn.eq = Gs;
        qn.escape = function (e) {
          if ((e = wa(e)) && Z.test(e)) {
            return e.replace(V, An);
          } else {
            return e;
          }
        };
        qn.escapeRegExp = function (e) {
          if ((e = wa(e)) && ae.test(e)) {
            return e.replace(se, '\\$&');
          } else {
            return e;
          }
        };
        qn.every = function (e, t, n) {
          var r = zs(e) ? xt : Cr;
          if (n && _i(e, t, n)) {
            t = o;
          }
          return r(e, gi(t, 3));
        };
        qn.find = Es;
        qn.findIndex = Hi;
        qn.findKey = function (e, t) {
          return qt(e, gi(t, 3), _r);
        };
        qn.findLast = ys;
        qn.findLastIndex = Ji;
        qn.findLastKey = function (e, t) {
          return qt(e, gi(t, 3), vr);
        };
        qn.floor = vA;
        qn.forEach = ws;
        qn.forEachRight = _s;
        qn.forIn = function (e, t) {
          if (e == null) {
            return e;
          } else {
            return yr(e, gi(t, 3), Ma);
          }
        };
        qn.forInRight = function (e, t) {
          if (e == null) {
            return e;
          } else {
            return wr(e, gi(t, 3), Ma);
          }
        };
        qn.forOwn = function (e, t) {
          return e && _r(e, gi(t, 3));
        };
        qn.forOwnRight = function (e, t) {
          return e && vr(e, gi(t, 3));
        };
        qn.get = Ta;
        qn.gt = Ys;
        qn.gte = Hs;
        qn.has = function (e, t) {
          return e != null && Ii(e, t, Tr);
        };
        qn.hasIn = Ra;
        qn.head = $i;
        qn.identity = aA;
        qn.includes = function (e, t, n, r) {
          e = Ws(e) ? e : Ga(e);
          n = n && !r ? ma(n) : 0;
          var o = e.length;
          if (n < 0) {
            n = yn(o + n, 0);
          }
          if (la(e)) {
            return n <= o && e.indexOf(t, n) > -1;
          } else {
            return !!o && Yt(e, t, n) > -1;
          }
        };
        qn.indexOf = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (!r) {
            return -1;
          }
          var o = n == null ? 0 : ma(n);
          if (o < 0) {
            o = yn(r + o, 0);
          }
          return Yt(e, t, o);
        };
        qn.inRange = function (e, t, n) {
          t = Ca(t);
          if (n === o) {
            n = t;
            t = 0;
          } else {
            n = Ca(n);
          }
          return function (e, t, n) {
            return e >= wn(t, n) && e < yn(t, n);
          }(e = Ea(e), t, n);
        };
        qn.invoke = Pa;
        qn.isArguments = Js;
        qn.isArray = zs;
        qn.isArrayBuffer = $s;
        qn.isArrayLike = Ws;
        qn.isArrayLikeObject = Vs;
        qn.isBoolean = function (e) {
          return e === true || e === false || ia(e) && Dr(e) == w;
        };
        qn.isBuffer = Xs;
        qn.isDate = Zs;
        qn.isElement = function (e) {
          return ia(e) && e.nodeType === 1 && !Aa(e);
        };
        qn.isEmpty = function (e) {
          if (e == null) {
            return true;
          }
          if (Ws(e) && (zs(e) || typeof e == 'string' || typeof e.splice == 'function' || Xs(e) || da(e) || Js(e))) {
            return !e.length;
          }
          var t = mi(e);
          if (t == Q || t == k) {
            return !e.size;
          }
          if (Qi(e)) {
            return !Lr(e).length;
          }
          for (var n in e) {
            if (Ne.call(e, n)) {
              return false;
            }
          }
          return true;
        };
        qn.isEqual = function (e, t) {
          return Fr(e, t);
        };
        qn.isEqualWith = function (e, t, n) {
          var r = (n = typeof n == 'function' ? n : o) ? n(e, t) : o;
          if (r === o) {
            return Fr(e, t, o, n);
          } else {
            return !!r;
          }
        };
        qn.isError = ea;
        qn.isFinite = function (e) {
          return typeof e == 'number' && wt(e);
        };
        qn.isFunction = ta;
        qn.isInteger = na;
        qn.isLength = ra;
        qn.isMap = sa;
        qn.isMatch = function (e, t) {
          return e === t || Mr(e, t, hi(t));
        };
        qn.isMatchWith = function (e, t, n) {
          n = typeof n == 'function' ? n : o;
          return Mr(e, t, hi(t), n);
        };
        qn.isNaN = function (e) {
          return aa(e) && e != +e;
        };
        qn.isNative = function (e) {
          if (Bi(e)) {
            throw new Be('Unsupported core-js use. Try https://npms.io/search?q=ponyfill.');
          }
          return Or(e);
        };
        qn.isNil = function (e) {
          return e == null;
        };
        qn.isNull = function (e) {
          return e === null;
        };
        qn.isNumber = aa;
        qn.isObject = oa;
        qn.isObjectLike = ia;
        qn.isPlainObject = Aa;
        qn.isRegExp = ca;
        qn.isSafeInteger = function (e) {
          return na(e) && e >= -9007199254740991 && e <= f;
        };
        qn.isSet = ua;
        qn.isString = la;
        qn.isSymbol = ga;
        qn.isTypedArray = da;
        qn.isUndefined = function (e) {
          return e === o;
        };
        qn.isWeakMap = function (e) {
          return ia(e) && mi(e) == F;
        };
        qn.isWeakSet = function (e) {
          return ia(e) && Dr(e) == '[object WeakSet]';
        };
        qn.join = function (e, t) {
          if (e == null) {
            return '';
          } else {
            return jt.call(e, t);
          }
        };
        qn.kebabCase = za;
        qn.last = Zi;
        qn.lastIndexOf = function (e, t, n) {
          var r = e == null ? 0 : e.length;
          if (!r) {
            return -1;
          }
          var s = r;
          if (n !== o) {
            s = (s = ma(n)) < 0 ? yn(r + s, 0) : wn(s, r - 1);
          }
          if (t == t) {
            return function (e, t, n) {
              for (var r = n + 1; r--;) {
                if (e[r] === t) {
                  return r;
                }
              }
              return r;
            }(e, t, s);
          } else {
            return Gt(e, Jt, s, true);
          }
        };
        qn.lowerCase = $a;
        qn.lowerFirst = Wa;
        qn.lt = ha;
        qn.lte = fa;
        qn.max = function (e) {
          if (e && e.length) {
            return mr(e, aA, Sr);
          } else {
            return o;
          }
        };
        qn.maxBy = function (e, t) {
          if (e && e.length) {
            return mr(e, gi(t, 2), Sr);
          } else {
            return o;
          }
        };
        qn.mean = function (e) {
          return zt(e, aA);
        };
        qn.meanBy = function (e, t) {
          return zt(e, gi(t, 2));
        };
        qn.min = function (e) {
          if (e && e.length) {
            return mr(e, aA, Ur);
          } else {
            return o;
          }
        };
        qn.minBy = function (e, t) {
          if (e && e.length) {
            return mr(e, gi(t, 2), Ur);
          } else {
            return o;
          }
        };
        qn.stubArray = IA;
        qn.stubFalse = EA;
        qn.stubObject = function () {
          return {};
        };
        qn.stubString = function () {
          return '';
        };
        qn.stubTrue = function () {
          return true;
        };
        qn.multiply = BA;
        qn.nth = function (e, t) {
          if (e && e.length) {
            return Hr(e, ma(t));
          } else {
            return o;
          }
        };
        qn.noConflict = function () {
          if (Ct._ === this) {
            Ct._ = qe;
          }
          return this;
        };
        qn.noop = gA;
        qn.now = Ts;
        qn.pad = function (e, t, n) {
          e = wa(e);
          var r = (t = ma(t)) ? pn(e) : 0;
          if (!t || r >= t) {
            return e;
          }
          var o = (t - r) / 2;
          return zo(mt(o), n) + e + zo(pt(o), n);
        };
        qn.padEnd = function (e, t, n) {
          e = wa(e);
          var r = (t = ma(t)) ? pn(e) : 0;
          if (t && r < t) {
            return e + zo(t - r, n);
          } else {
            return e;
          }
        };
        qn.padStart = function (e, t, n) {
          e = wa(e);
          var r = (t = ma(t)) ? pn(e) : 0;
          if (t && r < t) {
            return zo(t - r, n) + e;
          } else {
            return e;
          }
        };
        qn.parseInt = function (e, t, n) {
          if (n || t == null) {
            t = 0;
          } else {
            if (t) {
              t = +t;
            }
          }
          return vn(wa(e).replace(Ae, ''), t || 0);
        };
        qn.random = function (e, t, n) {
          if (n && typeof n != 'boolean' && _i(e, t, n)) {
            t = n = o;
          }
          if (n === o) {
            if (typeof t == 'boolean') {
              n = t;
              t = o;
            } else {
              if (typeof e == 'boolean') {
                n = e;
                e = o;
              }
            }
          }
          if (e === o && t === o) {
            e = 0;
            t = 1;
          } else {
            e = Ca(e);
            if (t === o) {
              t = e;
              e = 0;
            } else {
              t = Ca(t);
            }
          }
          if (e > t) {
            var r = e;
            e = t;
            t = r;
          }
          if (n || e % 1 || t % 1) {
            var s = bn();
            return wn(e + s * (t - e + dt(`1e-${(s + '').length - 1}`)), t);
          }
          return Vr(e, t);
        };
        qn.reduce = function (e, t, n) {
          var r = zs(e) ? Lt : Vt;
          var o = arguments.length < 3;
          return r(e, gi(t, 4), n, o, fr);
        };
        qn.reduceRight = function (e, t, n) {
          var r = zs(e) ? Kt : Vt;
          var o = arguments.length < 3;
          return r(e, gi(t, 4), n, o, pr);
        };
        qn.repeat = function (e, t, n) {
          t = (n ? _i(e, t, n) : t === o) ? 1 : ma(t);
          return Xr(wa(e), t);
        };
        qn.replace = function () {
          var e = arguments;
          var t = wa(e[0]);
          if (e.length < 3) {
            return t;
          } else {
            return t.replace(e[1], e[2]);
          }
        };
        qn.result = function (e, t, n) {
          var r = -1;
          var s = (t = _o(t, e)).length;
          for (s || (s = 1, e = o); ++r < s;) {
            var a = e == null ? o : e[Ki(t[r])];
            if (a === o) {
              r = s;
              a = n;
            }
            e = ta(a) ? a.call(e) : a;
          }
          return e;
        };
        qn.round = QA;
        qn.runInContext = e;
        qn.sample = function (e) {
          return (zs(e) ? er : eo)(e);
        };
        qn.size = function (e) {
          if (e == null) {
            return 0;
          }
          if (Ws(e)) {
            if (la(e)) {
              return pn(e);
            } else {
              return e.length;
            }
          }
          var t = mi(e);
          if (t == Q || t == k) {
            return e.size;
          } else {
            return Lr(e).length;
          }
        };
        qn.snakeCase = Va;
        qn.some = function (e, t, n) {
          var r = zs(e) ? Ut : ao;
          if (n && _i(e, t, n)) {
            t = o;
          }
          return r(e, gi(t, 3));
        };
        qn.sortedIndex = function (e, t) {
          return Ao(e, t);
        };
        qn.sortedIndexBy = function (e, t, n) {
          return co(e, t, gi(n, 2));
        };
        qn.sortedIndexOf = function (e, t) {
          var n = e == null ? 0 : e.length;
          if (n) {
            var r = Ao(e, t);
            if (r < n && Gs(e[r], t)) {
              return r;
            }
          }
          return -1;
        };
        qn.sortedLastIndex = function (e, t) {
          return Ao(e, t, true);
        };
        qn.sortedLastIndexBy = function (e, t, n) {
          return co(e, t, gi(n, 2), true);
        };
        qn.sortedLastIndexOf = function (e, t) {
          if (e == null ? 0 : e.length) {
            var n = Ao(e, t, true) - 1;
            if (Gs(e[n], t)) {
              return n;
            }
          }
          return -1;
        };
        qn.startCase = Xa;
        qn.startsWith = function (e, t, n) {
          e = wa(e);
          n = n == null ? 0 : ur(ma(n), 0, e.length);
          t = go(t);
          return e.slice(n, n + t.length) == t;
        };
        qn.subtract = DA;
        qn.sum = function (e) {
          if (e && e.length) {
            return Xt(e, aA);
          } else {
            return 0;
          }
        };
        qn.sumBy = function (e, t) {
          if (e && e.length) {
            return Xt(e, gi(t, 2));
          } else {
            return 0;
          }
        };
        qn.template = function (e, t, n) {
          var r = qn.templateSettings;
          if (n && _i(e, t, n)) {
            t = o;
          }
          e = wa(e);
          t = ba({}, t, r, ni);
          var s;
          var a;
          var A = ba({}, t.imports, r.imports, ni);
          var c = Fa(A);
          var u = nn(A, c);
          var l = 0;
          var g = t.interpolate || ve;
          var d = '__p += \'';
          var h = Te((t.escape || ve).source + '|' + g.source + '|' + (g === ne ? pe : ve).source + '|' + (t.evaluate || ve).source + '|$', 'g');
          var f = `//# sourceURL=${Ne.call(t, 'sourceURL') ? (t.sourceURL + '').replace(/\s/g, ' ') : `lodash.templateSources[${++ct}]`}
`;
          e.replace(h, function (t, n, r, o, A, c) {
            if (!r) {
              r = o;
            }
            d += e.slice(l, c).replace(be, cn);
            if (n) {
              s = true;
              d += `' +
__e(${n}) +
'`;
            }
            if (A) {
              a = true;
              d += `';
${A};
__p += '`;
            }
            if (r) {
              d += `' +
((__t = (${r})) == null ? '' : __t) +
'`;
            }
            l = c + t.length;
            return t;
          });
          d += '\';\n';
          var p = Ne.call(t, 'variable') && t.variable;
          if (p) {
            if (he.test(p)) {
              throw new Be('Invalid `variable` option passed into `_.template`');
            }
          } else {
            d = `with (obj) {
${d}
}
`;
          }
          d = (a ? d.replace(J, '') : d).replace(z, '$1').replace($, '$1;');
          d = `function(${p || 'obj'}) {
${p ? '' : 'obj || (obj = {});\n'}var __t, __p = ''${s ? ', __e = _.escape' : ''}${a ? ', __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, \'\') }\n' : ';\n'}${d}return __p
}`;
          var m = nA(function () {
            return Qe(c, f + 'return ' + d).apply(o, u);
          });
          m.source = d;
          if (ea(m)) {
            throw m;
          }
          return m;
        };
        qn.times = function (e, t) {
          if ((e = ma(e)) < 1 || e > f) {
            return [];
          }
          var n = m;
          var r = wn(e, m);
          t = gi(t);
          e -= m;
          var o = Zt(r, t);
          while (++n < e) {
            t(n);
          }
          return o;
        };
        qn.toFinite = Ca;
        qn.toInteger = ma;
        qn.toLength = Ia;
        qn.toLower = function (e) {
          return wa(e).toLowerCase();
        };
        qn.toNumber = Ea;
        qn.toSafeInteger = function (e) {
          if (e) {
            return ur(ma(e), -9007199254740991, f);
          } else {
            if (e === 0) {
              return e;
            } else {
              return 0;
            }
          }
        };
        qn.toString = wa;
        qn.toUpper = function (e) {
          return wa(e).toUpperCase();
        };
        qn.trim = function (e, t, n) {
          if ((e = wa(e)) && (n || t === o)) {
            return en(e);
          }
          if (!e || !(t = go(t))) {
            return e;
          }
          var r = Cn(e);
          var s = Cn(t);
          return bo(r, on(r, s), sn(r, s) + 1).join('');
        };
        qn.trimEnd = function (e, t, n) {
          if ((e = wa(e)) && (n || t === o)) {
            return e.slice(0, mn(e) + 1);
          }
          if (!e || !(t = go(t))) {
            return e;
          }
          var r = Cn(e);
          return bo(r, 0, sn(r, Cn(t)) + 1).join('');
        };
        qn.trimStart = function (e, t, n) {
          if ((e = wa(e)) && (n || t === o)) {
            return e.replace(Ae, '');
          }
          if (!e || !(t = go(t))) {
            return e;
          }
          var r = Cn(e);
          return bo(r, on(r, Cn(t))).join('');
        };
        qn.truncate = function (e, t) {
          var n = 30;
          var r = '...';
          if (oa(t)) {
            var s = 'separator' in t ? t.separator : s;
            n = 'length' in t ? ma(t.length) : n;
            r = 'omission' in t ? go(t.omission) : r;
          }
          var a = (e = wa(e)).length;
          if (un(e)) {
            var A = Cn(e);
            a = A.length;
          }
          if (n >= a) {
            return e;
          }
          var c = n - pn(r);
          if (c < 1) {
            return r;
          }
          var u = A ? bo(A, 0, c).join('') : e.slice(0, c);
          if (s === o) {
            return u + r;
          }
          if (A) {
            c += u.length - c;
          }
          if (ca(s)) {
            if (e.slice(c).search(s)) {
              var l;
              var g = u;
              if (!s.global) {
                s = Te(s.source, wa(Ce.exec(s)) + 'g');
              }
              s.lastIndex = 0;
              while (l = s.exec(g)) {
                var d = l.index;
              }
              u = u.slice(0, d === o ? c : d);
            }
          } else {
            if (e.indexOf(go(s), c) != c) {
              var h = u.lastIndexOf(s);
              if (h > -1) {
                u = u.slice(0, h);
              }
            }
          }
          return u + r;
        };
        qn.unescape = function (e) {
          if ((e = wa(e)) && X.test(e)) {
            return e.replace(W, In);
          } else {
            return e;
          }
        };
        qn.uniqueId = function (e) {
          var t = ++Le;
          return wa(e) + t;
        };
        qn.upperCase = Za;
        qn.upperFirst = eA;
        qn.each = ws;
        qn.eachRight = _s;
        qn.first = $i;
        lA(qn, (bA = {}, _r(qn, function (e, t) {
          if (!Ne.call(qn.prototype, t)) {
            bA[t] = e;
          }
        }), bA), {
          chain: false
        });
        qn.VERSION = '4.17.21';
        Rt(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (e) {
          qn[e].placeholder = qn;
        });
        Rt(['drop', 'take'], function (e, t) {
          Jn.prototype[e] = function (n) {
            n = n === o ? 1 : yn(ma(n), 0);
            var r = this.__filtered__ && !t ? new Jn(this) : this.clone();
            if (r.__filtered__) {
              r.__takeCount__ = wn(n, r.__takeCount__);
            } else {
              r.__views__.push({
                size: wn(n, m),
                type: e + (r.__dir__ < 0 ? 'Right' : '')
              });
            }
            return r;
          };
          Jn.prototype[e + 'Right'] = function (t) {
            return this.reverse()[e](t).reverse();
          };
        });
        Rt(['filter', 'map', 'takeWhile'], function (e, t) {
          var n = t + 1;
          var r = n == 1 || n == 3;
          Jn.prototype[e] = function (e) {
            var t = this.clone();
            t.__iteratees__.push({
              iteratee: gi(e, 3),
              type: n
            });
            t.__filtered__ = t.__filtered__ || r;
            return t;
          };
        });
        Rt(['head', 'last'], function (e, t) {
          var n = `take${t ? 'Right' : ''}`;
          Jn.prototype[e] = function () {
            return this[n](1).value()[0];
          };
        });
        Rt(['initial', 'tail'], function (e, t) {
          var n = `drop${t ? '' : 'Right'}`;
          Jn.prototype[e] = function () {
            if (this.__filtered__) {
              return new Jn(this);
            } else {
              return this[n](1);
            }
          };
        });
        Jn.prototype.compact = function () {
          return this.filter(aA);
        };
        Jn.prototype.find = function (e) {
          return this.filter(e).head();
        };
        Jn.prototype.findLast = function (e) {
          return this.reverse().find(e);
        };
        Jn.prototype.invokeMap = Zr(function (e, t) {
          if (typeof e == 'function') {
            return new Jn(this);
          } else {
            return this.map(function (n) {
              return xr(n, e, t);
            });
          }
        });
        Jn.prototype.reject = function (e) {
          return this.filter(Ls(gi(e)));
        };
        Jn.prototype.slice = function (e, t) {
          e = ma(e);
          var n = this;
          if (n.__filtered__ && (e > 0 || t < 0)) {
            return new Jn(n);
          } else {
            if (e < 0) {
              n = n.takeRight(-e);
            } else {
              if (e) {
                n = n.drop(e);
              }
            }
            if (t !== o) {
              n = (t = ma(t)) < 0 ? n.dropRight(-t) : n.take(t - e);
            }
            return n;
          }
        };
        Jn.prototype.takeRightWhile = function (e) {
          return this.reverse().takeWhile(e).reverse();
        };
        Jn.prototype.toArray = function () {
          return this.take(m);
        };
        _r(Jn.prototype, function (e, t) {
          var n = /^(?:filter|find|map|reject)|While$/.test(t);
          var r = /^(?:head|last)$/.test(t);
          var s = qn[r ? `take${t == 'last' ? 'Right' : ''}` : t];
          var a = r || /^find/.test(t);
          if (s) {
            qn.prototype[t] = function () {
              var t = this.__wrapped__;
              var A = r ? [1] : arguments;
              var c = t instanceof Jn;
              var u = A[0];
              var l = c || zs(t);
              function g(e) {
                var t = s.apply(qn, Nt([e], A));
                if (r && d) {
                  return t[0];
                } else {
                  return t;
                }
              }
              if (l && n && typeof u == 'function' && u.length != 1) {
                c = l = false;
              }
              var d = this.__chain__;
              var h = !!this.__actions__.length;
              var f = a && !d;
              var p = c && !h;
              if (!a && l) {
                t = p ? t : new Jn(this);
                var m = e.apply(t, A);
                m.__actions__.push({
                  func: Cs,
                  args: [g],
                  thisArg: o
                });
                return new Hn(m, d);
              }
              if (f && p) {
                return e.apply(this, A);
              } else {
                m = this.thru(g);
                if (f) {
                  if (r) {
                    return m.value()[0];
                  } else {
                    return m.value();
                  }
                } else {
                  return m;
                }
              }
            };
          }
        });
        Rt(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (e) {
          var t = xe[e];
          var n = /^(?:push|sort|unshift)$/.test(e) ? 'tap' : 'thru';
          var r = /^(?:pop|shift)$/.test(e);
          qn.prototype[e] = function () {
            var e = arguments;
            if (r && !this.__chain__) {
              var o = this.value();
              return t.apply(zs(o) ? o : [], e);
            }
            return this[n](function (n) {
              return t.apply(zs(n) ? n : [], e);
            });
          };
        });
        _r(Jn.prototype, function (e, t) {
          var n = qn[t];
          if (n) {
            var r = n.name + '';
            if (!Ne.call(Pn, r)) {
              Pn[r] = [];
            }
            Pn[r].push({
              name: t,
              func: n
            });
          }
        });
        Pn[Go(o, 2).name] = [{
          name: 'wrapper',
          func: o
        }];
        Jn.prototype.clone = function () {
          var e = new Jn(this.__wrapped__);
          e.__actions__ = xo(this.__actions__);
          e.__dir__ = this.__dir__;
          e.__filtered__ = this.__filtered__;
          e.__iteratees__ = xo(this.__iteratees__);
          e.__takeCount__ = this.__takeCount__;
          e.__views__ = xo(this.__views__);
          return e;
        };
        Jn.prototype.reverse = function () {
          if (this.__filtered__) {
            var e = new Jn(this);
            e.__dir__ = -1;
            e.__filtered__ = true;
          } else {
            (e = this.clone()).__dir__ *= -1;
          }
          return e;
        };
        Jn.prototype.value = function () {
          var e = this.__wrapped__.value();
          var t = this.__dir__;
          var n = zs(e);
          var r = t < 0;
          var o = n ? e.length : 0;
          var s = function (e, t, n) {
            var r = -1;
            var o = n.length;
            while (++r < o) {
              var s = n[r];
              var a = s.size;
              switch (s.type) {
                case 'drop':
                  e += a;
                  break;
                case 'dropRight':
                  t -= a;
                  break;
                case 'take':
                  t = wn(t, e + a);
                  break;
                case 'takeRight':
                  e = yn(e, t - a);
              }
            }
            return {
              start: e,
              end: t
            };
          }(0, o, this.__views__);
          var a = s.start;
          var A = s.end;
          var c = A - a;
          var u = r ? A : a - 1;
          var l = this.__iteratees__;
          var g = l.length;
          var d = 0;
          var h = wn(c, this.__takeCount__);
          if (!n || !r && o == c && h == c) {
            return mo(e, this.__actions__);
          }
          var f = [];
          e: while (c-- && d < h) {
            for (var p = -1, m = e[u += t]; ++p < g;) {
              var I = l[p];
              var E = I.iteratee;
              var y = I.type;
              var w = E(m);
              if (y == 2) {
                m = w;
              } else {
                if (!w) {
                  if (y == 1) {
                    continue e;
                  }
                  break e;
                }
              }
            }
            f[d++] = m;
          }
          return f;
        };
        qn.prototype.at = ms;
        qn.prototype.chain = function () {
          return ps(this);
        };
        qn.prototype.commit = function () {
          return new Hn(this.value(), this.__chain__);
        };
        qn.prototype.next = function () {
          if (this.__values__ === o) {
            this.__values__ = pa(this.value());
          }
          var e = this.__index__ >= this.__values__.length;
          return {
            done: e,
            value: e ? o : this.__values__[this.__index__++]
          };
        };
        qn.prototype.plant = function (e) {
          var t;
          for (var n = this; n instanceof Yn;) {
            var r = ji(n);
            r.__index__ = 0;
            r.__values__ = o;
            if (t) {
              s.__wrapped__ = r;
            } else {
              t = r;
            }
            var s = r;
            n = n.__wrapped__;
          }
          s.__wrapped__ = e;
          return t;
        };
        qn.prototype.reverse = function () {
          var e = this.__wrapped__;
          if (e instanceof Jn) {
            var t = e;
            if (this.__actions__.length) {
              t = new Jn(this);
            }
            (t = t.reverse()).__actions__.push({
              func: Cs,
              args: [rs],
              thisArg: o
            });
            return new Hn(t, this.__chain__);
          }
          return this.thru(rs);
        };
        qn.prototype.toJSON = qn.prototype.valueOf = qn.prototype.value = function () {
          return mo(this.__wrapped__, this.__actions__);
        };
        qn.prototype.first = qn.prototype.head;
        if (et) {
          qn.prototype[et] = function () {
            return this;
          };
        }
        return qn;
      }();
      Ct._ = En;
      if ((r = function () {
        return En;
      }.call(exports, require, exports, module)) !== o) {
        module.exports = r;
      }
    }).call(this);
  },
  93904: (module, exports, require) => {
    const r = Symbol('SemVer ANY');
    class o {
      static get ANY() {
        return r;
      }
      constructor(e, t) {
        t = s(t);
        if (e instanceof o) {
          if (e.loose === !!t.loose) {
            return e;
          }
          e = e.value;
        }
        e = e.trim().split(/\s+/).join(' ');
        u('comparator', e, t);
        this.options = t;
        this.loose = !!t.loose;
        this.parse(e);
        if (this.semver === r) {
          this.value = '';
        } else {
          this.value = this.operator + this.semver.version;
        }
        u('comp', this);
      }
      parse(e) {
        const t = this.options.loose ? a[A.COMPARATORLOOSE] : a[A.COMPARATOR];
        const n = e.match(t);
        if (!n) {
          throw new TypeError(`Invalid comparator: ${e}`);
        }
        this.operator = n[1] !== undefined ? n[1] : '';
        if (this.operator === '=') {
          this.operator = '';
        }
        if (n[2]) {
          this.semver = new l(n[2], this.options.loose);
        } else {
          this.semver = r;
        }
      }
      toString() {
        return this.value;
      }
      test(e) {
        u('Comparator.test', e, this.options.loose);
        if (this.semver === r || e === r) {
          return true;
        }
        if (typeof e == 'string') {
          try {
            e = new l(e, this.options);
          } catch (e) {
            return false;
          }
        }
        return c(e, this.operator, this.semver, this.options);
      }
      intersects(e, t) {
        if (!(e instanceof o)) {
          throw new TypeError('a Comparator is required');
        }
        if (this.operator === '') {
          return this.value === '' || new g(e.value, t).test(this.value);
        } else {
          if (e.operator === '') {
            return e.value === '' || new g(this.value, t).test(e.semver);
          } else {
            return (!(t = s(t)).includePrerelease || this.value !== '<0.0.0-0' && e.value !== '<0.0.0-0') && (!!t.includePrerelease || !this.value.startsWith('<0.0.0') && !e.value.startsWith('<0.0.0')) && (!!this.operator.startsWith('>') && !!e.operator.startsWith('>') || !!this.operator.startsWith('<') && !!e.operator.startsWith('<') || this.semver.version === e.semver.version && !!this.operator.includes('=') && !!e.operator.includes('=') || !!c(this.semver, '<', e.semver, t) && !!this.operator.startsWith('>') && !!e.operator.startsWith('<') || !!c(this.semver, '>', e.semver, t) && !!this.operator.startsWith('<') && !!e.operator.startsWith('>'));
          }
        }
      }
    }
    module.exports = o;
    const s = require(98587);
    const {
      safeRe: a,
      t: A
    } = require(99718);
    const c = require(72111);
    const u = require(57272);
    const l = require(53908);
    const g = require(78311);
  },
  78311: (module, exports, require) => {
    const r = /\s+/g;
    class o {
      constructor(e, t) {
        t = a(t);
        if (e instanceof o) {
          if (e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease) {
            return e;
          } else {
            return new o(e.raw, t);
          }
        }
        if (e instanceof A) {
          this.raw = e.value;
          this.set = [[e]];
          this.formatted = undefined;
          return this;
        }
        this.options = t;
        this.loose = !!t.loose;
        this.includePrerelease = !!t.includePrerelease;
        this.raw = e.trim().replace(r, ' ');
        this.set = this.raw.split('||').map(e => this.parseRange(e.trim())).filter(e => e.length);
        if (!this.set.length) {
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        if (this.set.length > 1) {
          const e = this.set[0];
          this.set = this.set.filter(e => !I(e[0]));
          if (this.set.length === 0) {
            this.set = [e];
          } else {
            if (this.set.length > 1) {
              for (const e of this.set) {
                if (e.length === 1 && E(e[0])) {
                  this.set = [e];
                  break;
                }
              }
            }
          }
        }
        this.formatted = undefined;
      }
      get range() {
        if (this.formatted === undefined) {
          this.formatted = '';
          for (let e = 0; e < this.set.length; e++) {
            if (e > 0) {
              this.formatted += '||';
            }
            const t = this.set[e];
            for (let e = 0; e < t.length; e++) {
              if (e > 0) {
                this.formatted += ' ';
              }
              this.formatted += t[e].toString().trim();
            }
          }
        }
        return this.formatted;
      }
      format() {
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(e) {
        const t = ((this.options.includePrerelease && p) | (this.options.loose && m)) + ':' + e;
        const n = s.get(t);
        if (n) {
          return n;
        }
        const r = this.options.loose;
        const o = r ? l[g.HYPHENRANGELOOSE] : l[g.HYPHENRANGE];
        e = e.replace(o, k(this.options.includePrerelease));
        c('hyphen replace', e);
        e = e.replace(l[g.COMPARATORTRIM], d);
        c('comparator trim', e);
        e = e.replace(l[g.TILDETRIM], h);
        c('tilde trim', e);
        e = e.replace(l[g.CARETTRIM], f);
        c('caret trim', e);
        let a = e.split(' ').map(e => w(e, this.options)).join(' ').split(/\s+/).map(e => R(e, this.options));
        if (r) {
          a = a.filter(e => {
            c('loose invalid filter', e, this.options);
            return !!e.match(l[g.COMPARATORLOOSE]);
          });
        }
        c('range list', a);
        const u = new Map();
        const E = a.map(e => new A(e, this.options));
        for (const e of E) {
          if (I(e)) {
            return [e];
          }
          u.set(e.value, e);
        }
        if (u.size > 1 && u.has('')) {
          u.delete('');
        }
        const y = [...u.values()];
        s.set(t, y);
        return y;
      }
      intersects(e, t) {
        if (!(e instanceof o)) {
          throw new TypeError('a Range is required');
        }
        return this.set.some(n => y(n, t) && e.set.some(e => y(e, t) && n.every(n => e.every(e => n.intersects(e, t)))));
      }
      test(e) {
        if (!e) {
          return false;
        }
        if (typeof e == 'string') {
          try {
            e = new u(e, this.options);
          } catch (e) {
            return false;
          }
        }
        for (let t = 0; t < this.set.length; t++) {
          if (x(this.set[t], e, this.options)) {
            return true;
          }
        }
        return false;
      }
    }
    module.exports = o;
    const s = new (require(68794))();
    const a = require(98587);
    const A = require(93904);
    const c = require(57272);
    const u = require(53908);
    const {
      safeRe: l,
      t: g,
      comparatorTrimReplace: d,
      tildeTrimReplace: h,
      caretTrimReplace: f
    } = require(99718);
    const {
      FLAG_INCLUDE_PRERELEASE: p,
      FLAG_LOOSE: m
    } = require(16874);
    const I = e => e.value === '<0.0.0-0';
    const E = e => e.value === '';
    const y = (e, t) => {
      let n = true;
      const r = e.slice();
      let o = r.pop();
      while (n && r.length) {
        n = r.every(e => o.intersects(e, t));
        o = r.pop();
      }
      return n;
    };
    const w = (e, t) => {
      c('comp', e, t);
      e = B(e, t);
      c('caret', e);
      e = v(e, t);
      c('tildes', e);
      e = D(e, t);
      c('xrange', e);
      e = T(e, t);
      c('stars', e);
      return e;
    };
    const _ = e => !e || e.toLowerCase() === 'x' || e === '*';
    const v = (e, t) => e.trim().split(/\s+/).map(e => b(e, t)).join(' ');
    const b = (e, t) => {
      const n = t.loose ? l[g.TILDELOOSE] : l[g.TILDE];
      return e.replace(n, (t, n, r, o, s) => {
        let a;
        c('tilde', e, t, n, r, o, s);
        if (_(n)) {
          a = '';
        } else {
          if (_(r)) {
            a = `>=${n}.0.0 <${+n + 1}.0.0-0`;
          } else {
            if (_(o)) {
              a = `>=${n}.${r}.0 <${n}.${+r + 1}.0-0`;
            } else {
              if (s) {
                c('replaceTilde pr', s);
                a = `>=${n}.${r}.${o}-${s} <${n}.${+r + 1}.0-0`;
              } else {
                a = `>=${n}.${r}.${o} <${n}.${+r + 1}.0-0`;
              }
            }
          }
        }
        c('tilde return', a);
        return a;
      });
    };
    const B = (e, t) => e.trim().split(/\s+/).map(e => Q(e, t)).join(' ');
    const Q = (e, t) => {
      c('caret', e, t);
      const n = t.loose ? l[g.CARETLOOSE] : l[g.CARET];
      const r = t.includePrerelease ? '-0' : '';
      return e.replace(n, (t, n, o, s, a) => {
        let A;
        c('caret', e, t, n, o, s, a);
        if (_(n)) {
          A = '';
        } else {
          if (_(o)) {
            A = `>=${n}.0.0${r} <${+n + 1}.0.0-0`;
          } else {
            if (_(s)) {
              A = n === '0' ? `>=${n}.${o}.0${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.0${r} <${+n + 1}.0.0-0`;
            } else {
              if (a) {
                c('replaceCaret pr', a);
                A = n === '0' ? o === '0' ? `>=${n}.${o}.${s}-${a} <${n}.${o}.${+s + 1}-0` : `>=${n}.${o}.${s}-${a} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${s}-${a} <${+n + 1}.0.0-0`;
              } else {
                c('no pr');
                A = n === '0' ? o === '0' ? `>=${n}.${o}.${s}${r} <${n}.${o}.${+s + 1}-0` : `>=${n}.${o}.${s}${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${s} <${+n + 1}.0.0-0`;
              }
            }
          }
        }
        c('caret return', A);
        return A;
      });
    };
    const D = (e, t) => {
      c('replaceXRanges', e, t);
      return e.split(/\s+/).map(e => S(e, t)).join(' ');
    };
    const S = (e, t) => {
      e = e.trim();
      const n = t.loose ? l[g.XRANGELOOSE] : l[g.XRANGE];
      return e.replace(n, (n, r, o, s, a, A) => {
        c('xRange', e, n, r, o, s, a, A);
        const u = _(o);
        const l = u || _(s);
        const g = l || _(a);
        const d = g;
        if (r === '=' && d) {
          r = '';
        }
        A = t.includePrerelease ? '-0' : '';
        if (u) {
          n = r === '>' || r === '<' ? '<0.0.0-0' : '*';
        } else {
          if (r && d) {
            if (l) {
              s = 0;
            }
            a = 0;
            if (r === '>') {
              r = '>=';
              if (l) {
                o = +o + 1;
                s = 0;
                a = 0;
              } else {
                s = +s + 1;
                a = 0;
              }
            } else {
              if (r === '<=') {
                r = '<';
                if (l) {
                  o = +o + 1;
                } else {
                  s = +s + 1;
                }
              }
            }
            if (r === '<') {
              A = '-0';
            }
            n = `${r + o}.${s}.${a}${A}`;
          } else {
            if (l) {
              n = `>=${o}.0.0${A} <${+o + 1}.0.0-0`;
            } else {
              if (g) {
                n = `>=${o}.${s}.0${A} <${o}.${+s + 1}.0-0`;
              }
            }
          }
        }
        c('xRange return', n);
        return n;
      });
    };
    const T = (e, t) => {
      c('replaceStars', e, t);
      return e.trim().replace(l[g.STAR], '');
    };
    const R = (e, t) => {
      c('replaceGTE0', e, t);
      return e.trim().replace(l[t.includePrerelease ? g.GTE0PRE : g.GTE0], '');
    };
    const k = e => (t, n, r, o, s, a, A, c, u, l, g, d) => `${n = _(r) ? '' : _(o) ? `>=${r}.0.0${e ? '-0' : ''}` : _(s) ? `>=${r}.${o}.0${e ? '-0' : ''}` : a ? `>=${n}` : `>=${n}${e ? '-0' : ''}`} ${c = _(u) ? '' : _(l) ? `<${+u + 1}.0.0-0` : _(g) ? `<${u}.${+l + 1}.0-0` : d ? `<=${u}.${l}.${g}-${d}` : e ? `<${u}.${l}.${+g + 1}-0` : `<=${c}`}`.trim();
    const x = (e, t, n) => {
      for (let n = 0; n < e.length; n++) {
        if (!e[n].test(t)) {
          return false;
        }
      }
      if (t.prerelease.length && !n.includePrerelease) {
        for (let n = 0; n < e.length; n++) {
          c(e[n].semver);
          if (e[n].semver !== A.ANY && e[n].semver.prerelease.length > 0) {
            const r = e[n].semver;
            if (r.major === t.major && r.minor === t.minor && r.patch === t.patch) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    };
  },
  53908: (module, exports, require) => {
    const r = require(57272);
    const {
      MAX_LENGTH: o,
      MAX_SAFE_INTEGER: s
    } = require(16874);
    const {
      safeRe: a,
      t: A
    } = require(99718);
    const c = require(98587);
    const {
      compareIdentifiers: u
    } = require(61123);
    class l {
      constructor(e, t) {
        t = c(t);
        if (e instanceof l) {
          if (e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease) {
            return e;
          }
          e = e.version;
        } else {
          if (typeof e != 'string') {
            throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);
          }
        }
        if (e.length > o) {
          throw new TypeError(`version is longer than ${o} characters`);
        }
        r('SemVer', e, t);
        this.options = t;
        this.loose = !!t.loose;
        this.includePrerelease = !!t.includePrerelease;
        const n = e.trim().match(t.loose ? a[A.LOOSE] : a[A.FULL]);
        if (!n) {
          throw new TypeError(`Invalid Version: ${e}`);
        }
        this.raw = e;
        this.major = +n[1];
        this.minor = +n[2];
        this.patch = +n[3];
        if (this.major > s || this.major < 0) {
          throw new TypeError('Invalid major version');
        }
        if (this.minor > s || this.minor < 0) {
          throw new TypeError('Invalid minor version');
        }
        if (this.patch > s || this.patch < 0) {
          throw new TypeError('Invalid patch version');
        }
        if (n[4]) {
          this.prerelease = n[4].split('.').map(e => {
            if (/^[0-9]+$/.test(e)) {
              const t = +e;
              if (t >= 0 && t < s) {
                return t;
              }
            }
            return e;
          });
        } else {
          this.prerelease = [];
        }
        this.build = n[5] ? n[5].split('.') : [];
        this.format();
      }
      format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
          this.version += `-${this.prerelease.join('.')}`;
        }
        return this.version;
      }
      toString() {
        return this.version;
      }
      compare(e) {
        r('SemVer.compare', this.version, this.options, e);
        if (!(e instanceof l)) {
          if (typeof e == 'string' && e === this.version) {
            return 0;
          }
          e = new l(e, this.options);
        }
        if (e.version === this.version) {
          return 0;
        } else {
          return this.compareMain(e) || this.comparePre(e);
        }
      }
      compareMain(e) {
        if (!(e instanceof l)) {
          e = new l(e, this.options);
        }
        return u(this.major, e.major) || u(this.minor, e.minor) || u(this.patch, e.patch);
      }
      comparePre(e) {
        if (!(e instanceof l)) {
          e = new l(e, this.options);
        }
        if (this.prerelease.length && !e.prerelease.length) {
          return -1;
        }
        if (!this.prerelease.length && e.prerelease.length) {
          return 1;
        }
        if (!this.prerelease.length && !e.prerelease.length) {
          return 0;
        }
        let t = 0;
        do {
          const n = this.prerelease[t];
          const o = e.prerelease[t];
          r('prerelease compare', t, n, o);
          if (n === undefined && o === undefined) {
            return 0;
          }
          if (o === undefined) {
            return 1;
          }
          if (n === undefined) {
            return -1;
          }
          if (n !== o) {
            return u(n, o);
          }
        } while (++t);
      }
      compareBuild(e) {
        if (!(e instanceof l)) {
          e = new l(e, this.options);
        }
        let t = 0;
        do {
          const n = this.build[t];
          const o = e.build[t];
          r('build compare', t, n, o);
          if (n === undefined && o === undefined) {
            return 0;
          }
          if (o === undefined) {
            return 1;
          }
          if (n === undefined) {
            return -1;
          }
          if (n !== o) {
            return u(n, o);
          }
        } while (++t);
      }
      inc(e, t, n) {
        switch (e) {
          case 'premajor':
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor = 0;
            this.major++;
            this.inc('pre', t, n);
            break;
          case 'preminor':
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor++;
            this.inc('pre', t, n);
            break;
          case 'prepatch':
            this.prerelease.length = 0;
            this.inc('patch', t, n);
            this.inc('pre', t, n);
            break;
          case 'prerelease':
            if (this.prerelease.length === 0) {
              this.inc('patch', t, n);
            }
            this.inc('pre', t, n);
            break;
          case 'major':
            if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
              this.major++;
            }
            this.minor = 0;
            this.patch = 0;
            this.prerelease = [];
            break;
          case 'minor':
            if (this.patch !== 0 || this.prerelease.length === 0) {
              this.minor++;
            }
            this.patch = 0;
            this.prerelease = [];
            break;
          case 'patch':
            if (this.prerelease.length === 0) {
              this.patch++;
            }
            this.prerelease = [];
            break;
          case 'pre':
            {
              const e = Number(n) ? 1 : 0;
              if (!t && n === false) {
                throw new Error('invalid increment argument: identifier is empty');
              }
              if (this.prerelease.length === 0) {
                this.prerelease = [e];
              } else {
                let r = this.prerelease.length;
                while (--r >= 0) {
                  if (typeof this.prerelease[r] == 'number') {
                    this.prerelease[r]++;
                    r = -2;
                  }
                }
                if (r === -1) {
                  if (t === this.prerelease.join('.') && n === false) {
                    throw new Error('invalid increment argument: identifier already exists');
                  }
                  this.prerelease.push(e);
                }
              }
              if (t) {
                let r = [t, e];
                if (n === false) {
                  r = [t];
                }
                if (u(this.prerelease[0], t) === 0) {
                  if (isNaN(this.prerelease[1])) {
                    this.prerelease = r;
                  }
                } else {
                  this.prerelease = r;
                }
              }
              break;
            }
          default:
            throw new Error(`invalid increment argument: ${e}`);
        }
        this.raw = this.format();
        if (this.build.length) {
          this.raw += `+${this.build.join('.')}`;
        }
        return this;
      }
    }
    module.exports = l;
  },
  57414: (module, exports, require) => {
    const r = require(30144);
    module.exports = (e, t) => {
      const n = r(e.trim().replace(/^[=v]+/, ''), t);
      if (n) {
        return n.version;
      } else {
        return null;
      }
    };
  },
  72111: (module, exports, require) => {
    const r = require(94641);
    const o = require(13999);
    const s = require(35580);
    const a = require(54089);
    const A = require(7059);
    const c = require(25200);
    module.exports = (e, t, n, u) => {
      switch (t) {
        case '===':
          if (typeof e == 'object') {
            e = e.version;
          }
          if (typeof n == 'object') {
            n = n.version;
          }
          return e === n;
        case '!==':
          if (typeof e == 'object') {
            e = e.version;
          }
          if (typeof n == 'object') {
            n = n.version;
          }
          return e !== n;
        case '':
        case '=':
        case '==':
          return r(e, n, u);
        case '!=':
          return o(e, n, u);
        case '>':
          return s(e, n, u);
        case '>=':
          return a(e, n, u);
        case '<':
          return A(e, n, u);
        case '<=':
          return c(e, n, u);
        default:
          throw new TypeError(`Invalid operator: ${t}`);
      }
    };
  },
  46170: (module, exports, require) => {
    const r = require(53908);
    const o = require(30144);
    const {
      safeRe: s,
      t: a
    } = require(99718);
    module.exports = (e, t) => {
      if (e instanceof r) {
        return e;
      }
      if (typeof e == 'number') {
        e = String(e);
      }
      if (typeof e != 'string') {
        return null;
      }
      let n = null;
      if ((t = t || {}).rtl) {
        const r = t.includePrerelease ? s[a.COERCERTLFULL] : s[a.COERCERTL];
        let o;
        while ((o = r.exec(e)) && (!n || n.index + n[0].length !== e.length)) {
          if (!n || o.index + o[0].length !== n.index + n[0].length) {
            n = o;
          }
          r.lastIndex = o.index + o[1].length + o[2].length;
        }
        r.lastIndex = -1;
      } else {
        n = e.match(t.includePrerelease ? s[a.COERCEFULL] : s[a.COERCE]);
      }
      if (n === null) {
        return null;
      }
      const A = n[2];
      const c = n[3] || '0';
      const u = n[4] || '0';
      const l = t.includePrerelease && n[5] ? `-${n[5]}` : '';
      const g = t.includePrerelease && n[6] ? `+${n[6]}` : '';
      return o(`${A}.${c}.${u}${l}${g}`, t);
    };
  },
  40909: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t, n) => {
      const o = new r(e, n);
      const s = new r(t, n);
      return o.compare(s) || o.compareBuild(s);
    };
  },
  11763: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t) => r(e, t, true);
  },
  50560: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t, n) => new r(e, n).compare(new r(t, n));
  },
  51832: (module, exports, require) => {
    const r = require(30144);
    module.exports = (e, t) => {
      const n = r(e, null, true);
      const o = r(t, null, true);
      const s = n.compare(o);
      if (s === 0) {
        return null;
      }
      const a = s > 0;
      const A = a ? n : o;
      const c = a ? o : n;
      const u = !!A.prerelease.length;
      if (!!c.prerelease.length && !u) {
        if (c.patch || c.minor) {
          if (A.patch) {
            return 'patch';
          } else {
            if (A.minor) {
              return 'minor';
            } else {
              return 'major';
            }
          }
        } else {
          return 'major';
        }
      }
      const l = u ? 'pre' : '';
      if (n.major !== o.major) {
        return l + 'major';
      } else {
        if (n.minor !== o.minor) {
          return l + 'minor';
        } else {
          if (n.patch !== o.patch) {
            return l + 'patch';
          } else {
            return 'prerelease';
          }
        }
      }
    };
  },
  94641: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) === 0;
  },
  35580: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) > 0;
  },
  54089: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) >= 0;
  },
  93007: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t, n, o, s) => {
      if (typeof n == 'string') {
        s = o;
        o = n;
        n = undefined;
      }
      try {
        return new r(e instanceof r ? e.version : e, n).inc(t, o, s).version;
      } catch (e) {
        return null;
      }
    };
  },
  7059: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) < 0;
  },
  25200: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) <= 0;
  },
  32938: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t) => new r(e, t).major;
  },
  46254: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t) => new r(e, t).minor;
  },
  13999: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(e, t, n) !== 0;
  },
  30144: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t, n = false) => {
      if (e instanceof r) {
        return e;
      }
      try {
        return new r(e, t);
      } catch (e) {
        if (!n) {
          return null;
        }
        throw e;
      }
    };
  },
  24493: (module, exports, require) => {
    const r = require(53908);
    module.exports = (e, t) => new r(e, t).patch;
  },
  31729: (module, exports, require) => {
    const r = require(30144);
    module.exports = (e, t) => {
      const n = r(e, t);
      if (n && n.prerelease.length) {
        return n.prerelease;
      } else {
        return null;
      }
    };
  },
  9970: (module, exports, require) => {
    const r = require(50560);
    module.exports = (e, t, n) => r(t, e, n);
  },
  74277: (module, exports, require) => {
    const r = require(40909);
    module.exports = (e, t) => e.sort((e, n) => r(n, e, t));
  },
  97638: (module, exports, require) => {
    const r = require(78311);
    module.exports = (e, t, n) => {
      try {
        t = new r(t, n);
      } catch (e) {
        return false;
      }
      return t.test(e);
    };
  },
  43927: (module, exports, require) => {
    const r = require(40909);
    module.exports = (e, t) => e.sort((e, n) => r(e, n, t));
  },
  56953: (module, exports, require) => {
    const r = require(30144);
    module.exports = (e, t) => {
      const n = r(e, t);
      if (n) {
        return n.version;
      } else {
        return null;
      }
    };
  },
  99589: (module, exports, require) => {
    const r = require(99718);
    const o = require(16874);
    const s = require(53908);
    const a = require(61123);
    const A = require(30144);
    const c = require(56953);
    const u = require(57414);
    const l = require(93007);
    const g = require(51832);
    const d = require(32938);
    const h = require(46254);
    const f = require(24493);
    const p = require(31729);
    const m = require(50560);
    const I = require(9970);
    const E = require(11763);
    const y = require(40909);
    const w = require(43927);
    const _ = require(74277);
    const v = require(35580);
    const b = require(7059);
    const B = require(94641);
    const Q = require(13999);
    const D = require(54089);
    const S = require(25200);
    const T = require(72111);
    const R = require(46170);
    const k = require(93904);
    const x = require(78311);
    const P = require(97638);
    const F = require(77631);
    const M = require(19628);
    const O = require(270);
    const N = require(41261);
    const L = require(13874);
    const K = require(97075);
    const U = require(75571);
    const j = require(5342);
    const q = require(76780);
    const G = require(72525);
    const Y = require(75032);
    module.exports = {
      parse: A,
      valid: c,
      clean: u,
      inc: l,
      diff: g,
      major: d,
      minor: h,
      patch: f,
      prerelease: p,
      compare: m,
      rcompare: I,
      compareLoose: E,
      compareBuild: y,
      sort: w,
      rsort: _,
      gt: v,
      lt: b,
      eq: B,
      neq: Q,
      gte: D,
      lte: S,
      cmp: T,
      coerce: R,
      Comparator: k,
      Range: x,
      satisfies: P,
      toComparators: F,
      maxSatisfying: M,
      minSatisfying: O,
      minVersion: N,
      validRange: L,
      outside: K,
      gtr: U,
      ltr: j,
      intersects: q,
      simplifyRange: G,
      subset: Y,
      SemVer: s,
      re: r.re,
      src: r.src,
      tokens: r.t,
      SEMVER_SPEC_VERSION: o.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: o.RELEASE_TYPES,
      compareIdentifiers: a.compareIdentifiers,
      rcompareIdentifiers: a.rcompareIdentifiers
    };
  },
  16874: module => {
    const t = Number.MAX_SAFE_INTEGER || 9007199254740991;
    module.exports = {
      MAX_LENGTH: 256,
      MAX_SAFE_COMPONENT_LENGTH: 16,
      MAX_SAFE_BUILD_LENGTH: 250,
      MAX_SAFE_INTEGER: t,
      RELEASE_TYPES: ['major', 'premajor', 'minor', 'preminor', 'patch', 'prepatch', 'prerelease'],
      SEMVER_SPEC_VERSION: '2.0.0',
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2
    };
  },
  57272: module => {
    const t = typeof process == 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...e) => console.error('SEMVER', ...e) : () => {};
    module.exports = t;
  },
  61123: module => {
    const t = /^[0-9]+$/;
    const n = (e, n) => {
      const r = t.test(e);
      const o = t.test(n);
      if (r && o) {
        e = +e;
        n = +n;
      }
      if (e === n) {
        return 0;
      } else {
        if (r && !o) {
          return -1;
        } else {
          if (o && !r) {
            return 1;
          } else {
            if (e < n) {
              return -1;
            } else {
              return 1;
            }
          }
        }
      }
    };
    module.exports = {
      compareIdentifiers: n,
      rcompareIdentifiers: (e, t) => n(t, e)
    };
  },
  68794: module => {
    module.exports = class {
      constructor() {
        this.max = 1000;
        this.map = new Map();
      }
      get(e) {
        const t = this.map.get(e);
        if (t === undefined) {
          return undefined;
        } else {
          this.map.delete(e);
          this.map.set(e, t);
          return t;
        }
      }
      delete(e) {
        return this.map.delete(e);
      }
      set(e, t) {
        if (!this.delete(e) && t !== undefined) {
          if (this.map.size >= this.max) {
            const e = this.map.keys().next().value;
            this.delete(e);
          }
          this.map.set(e, t);
        }
        return this;
      }
    };
  },
  98587: module => {
    const t = Object.freeze({
      loose: true
    });
    const n = Object.freeze({});
    module.exports = e => e ? typeof e != 'object' ? t : e : n;
  },
  99718: (module, exports, require) => {
    const {
      MAX_SAFE_COMPONENT_LENGTH: r,
      MAX_SAFE_BUILD_LENGTH: o,
      MAX_LENGTH: s
    } = require(16874);
    const a = require(57272);
    const A = (exports = module.exports = {}).re = [];
    const c = exports.safeRe = [];
    const u = exports.src = [];
    const l = exports.t = {};
    let g = 0;
    const d = '[a-zA-Z0-9-]';
    const h = [['\\s', 1], ['\\d', s], [d, o]];
    const f = (e, t, n) => {
      const r = (e => {
        for (const [t, n] of h) {
          e = e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);
        }
        return e;
      })(t);
      const o = g++;
      a(e, o, t);
      l[e] = o;
      u[o] = t;
      A[o] = new RegExp(t, n ? 'g' : undefined);
      c[o] = new RegExp(r, n ? 'g' : undefined);
    };
    f('NUMERICIDENTIFIER', '0|[1-9]\\d*');
    f('NUMERICIDENTIFIERLOOSE', '\\d+');
    f('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${d}*`);
    f('MAINVERSION', `(${u[l.NUMERICIDENTIFIER]})\\.(${u[l.NUMERICIDENTIFIER]})\\.(${u[l.NUMERICIDENTIFIER]})`);
    f('MAINVERSIONLOOSE', `(${u[l.NUMERICIDENTIFIERLOOSE]})\\.(${u[l.NUMERICIDENTIFIERLOOSE]})\\.(${u[l.NUMERICIDENTIFIERLOOSE]})`);
    f('PRERELEASEIDENTIFIER', `(?:${u[l.NUMERICIDENTIFIER]}|${u[l.NONNUMERICIDENTIFIER]})`);
    f('PRERELEASEIDENTIFIERLOOSE', `(?:${u[l.NUMERICIDENTIFIERLOOSE]}|${u[l.NONNUMERICIDENTIFIER]})`);
    f('PRERELEASE', `(?:-(${u[l.PRERELEASEIDENTIFIER]}(?:\\.${u[l.PRERELEASEIDENTIFIER]})*))`);
    f('PRERELEASELOOSE', `(?:-?(${u[l.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${u[l.PRERELEASEIDENTIFIERLOOSE]})*))`);
    f('BUILDIDENTIFIER', `${d}+`);
    f('BUILD', `(?:\\+(${u[l.BUILDIDENTIFIER]}(?:\\.${u[l.BUILDIDENTIFIER]})*))`);
    f('FULLPLAIN', `v?${u[l.MAINVERSION]}${u[l.PRERELEASE]}?${u[l.BUILD]}?`);
    f('FULL', `^${u[l.FULLPLAIN]}$`);
    f('LOOSEPLAIN', `[v=\\s]*${u[l.MAINVERSIONLOOSE]}${u[l.PRERELEASELOOSE]}?${u[l.BUILD]}?`);
    f('LOOSE', `^${u[l.LOOSEPLAIN]}$`);
    f('GTLT', '((?:<|>)?=?)');
    f('XRANGEIDENTIFIERLOOSE', `${u[l.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
    f('XRANGEIDENTIFIER', `${u[l.NUMERICIDENTIFIER]}|x|X|\\*`);
    f('XRANGEPLAIN', `[v=\\s]*(${u[l.XRANGEIDENTIFIER]})(?:\\.(${u[l.XRANGEIDENTIFIER]})(?:\\.(${u[l.XRANGEIDENTIFIER]})(?:${u[l.PRERELEASE]})?${u[l.BUILD]}?)?)?`);
    f('XRANGEPLAINLOOSE', `[v=\\s]*(${u[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${u[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${u[l.XRANGEIDENTIFIERLOOSE]})(?:${u[l.PRERELEASELOOSE]})?${u[l.BUILD]}?)?)?`);
    f('XRANGE', `^${u[l.GTLT]}\\s*${u[l.XRANGEPLAIN]}$`);
    f('XRANGELOOSE', `^${u[l.GTLT]}\\s*${u[l.XRANGEPLAINLOOSE]}$`);
    f('COERCEPLAIN', `(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?`);
    f('COERCE', `${u[l.COERCEPLAIN]}(?:$|[^\\d])`);
    f('COERCEFULL', `${u[l.COERCEPLAIN]}(?:${u[l.PRERELEASE]})?(?:${u[l.BUILD]})?(?:$|[^\\d])`);
    f('COERCERTL', u[l.COERCE], true);
    f('COERCERTLFULL', u[l.COERCEFULL], true);
    f('LONETILDE', '(?:~>?)');
    f('TILDETRIM', `(\\s*)${u[l.LONETILDE]}\\s+`, true);
    exports.tildeTrimReplace = '$1~';
    f('TILDE', `^${u[l.LONETILDE]}${u[l.XRANGEPLAIN]}$`);
    f('TILDELOOSE', `^${u[l.LONETILDE]}${u[l.XRANGEPLAINLOOSE]}$`);
    f('LONECARET', '(?:\\^)');
    f('CARETTRIM', `(\\s*)${u[l.LONECARET]}\\s+`, true);
    exports.caretTrimReplace = '$1^';
    f('CARET', `^${u[l.LONECARET]}${u[l.XRANGEPLAIN]}$`);
    f('CARETLOOSE', `^${u[l.LONECARET]}${u[l.XRANGEPLAINLOOSE]}$`);
    f('COMPARATORLOOSE', `^${u[l.GTLT]}\\s*(${u[l.LOOSEPLAIN]})$|^$`);
    f('COMPARATOR', `^${u[l.GTLT]}\\s*(${u[l.FULLPLAIN]})$|^$`);
    f('COMPARATORTRIM', `(\\s*)${u[l.GTLT]}\\s*(${u[l.LOOSEPLAIN]}|${u[l.XRANGEPLAIN]})`, true);
    exports.comparatorTrimReplace = '$1$2$3';
    f('HYPHENRANGE', `^\\s*(${u[l.XRANGEPLAIN]})\\s+-\\s+(${u[l.XRANGEPLAIN]})\\s*$`);
    f('HYPHENRANGELOOSE', `^\\s*(${u[l.XRANGEPLAINLOOSE]})\\s+-\\s+(${u[l.XRANGEPLAINLOOSE]})\\s*$`);
    f('STAR', '(<|>)?=?\\s*\\*');
    f('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$');
    f('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$');
  },
  75571: (module, exports, require) => {
    const r = require(97075);
    module.exports = (e, t, n) => r(e, t, '>', n);
  },
  76780: (module, exports, require) => {
    const r = require(78311);
    module.exports = (e, t, n) => {
      e = new r(e, n);
      t = new r(t, n);
      return e.intersects(t, n);
    };
  },
  5342: (module, exports, require) => {
    const r = require(97075);
    module.exports = (e, t, n) => r(e, t, '<', n);
  },
  19628: (module, exports, require) => {
    const r = require(53908);
    const o = require(78311);
    module.exports = (e, t, n) => {
      let s = null;
      let a = null;
      let A = null;
      try {
        A = new o(t, n);
      } catch (e) {
        return null;
      }
      e.forEach(e => {
        if (A.test(e)) {
          if (!s || a.compare(e) === -1) {
            s = e;
            a = new r(s, n);
          }
        }
      });
      return s;
    };
  },
  270: (module, exports, require) => {
    const r = require(53908);
    const o = require(78311);
    module.exports = (e, t, n) => {
      let s = null;
      let a = null;
      let A = null;
      try {
        A = new o(t, n);
      } catch (e) {
        return null;
      }
      e.forEach(e => {
        if (A.test(e)) {
          if (!s || a.compare(e) === 1) {
            s = e;
            a = new r(s, n);
          }
        }
      });
      return s;
    };
  },
  41261: (module, exports, require) => {
    const r = require(53908);
    const o = require(78311);
    const s = require(35580);
    module.exports = (e, t) => {
      e = new o(e, t);
      let n = new r('0.0.0');
      if (e.test(n)) {
        return n;
      }
      n = new r('0.0.0-0');
      if (e.test(n)) {
        return n;
      }
      n = null;
      for (let t = 0; t < e.set.length; ++t) {
        const o = e.set[t];
        let a = null;
        o.forEach(e => {
          const t = new r(e.semver.version);
          switch (e.operator) {
            case '>':
              if (t.prerelease.length === 0) {
                t.patch++;
              } else {
                t.prerelease.push(0);
              }
              t.raw = t.format();
            case '':
            case '>=':
              if (!a || !!s(t, a)) {
                a = t;
              }
              break;
            case '<':
            case '<=':
              break;
            default:
              throw new Error(`Unexpected operation: ${e.operator}`);
          }
        });
        if (!!a && (!n || !!s(n, a))) {
          n = a;
        }
      }
      if (n && e.test(n)) {
        return n;
      } else {
        return null;
      }
    };
  },
  97075: (module, exports, require) => {
    const r = require(53908);
    const o = require(93904);
    const {
      ANY: s
    } = o;
    const a = require(78311);
    const A = require(97638);
    const c = require(35580);
    const u = require(7059);
    const l = require(25200);
    const g = require(54089);
    module.exports = (e, t, n, d) => {
      let h;
      let f;
      let p;
      let m;
      let I;
      e = new r(e, d);
      t = new a(t, d);
      switch (n) {
        case '>':
          h = c;
          f = l;
          p = u;
          m = '>';
          I = '>=';
          break;
        case '<':
          h = u;
          f = g;
          p = c;
          m = '<';
          I = '<=';
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (A(e, t, d)) {
        return false;
      }
      for (let n = 0; n < t.set.length; ++n) {
        const r = t.set[n];
        let a = null;
        let A = null;
        r.forEach(e => {
          if (e.semver === s) {
            e = new o('>=0.0.0');
          }
          a = a || e;
          A = A || e;
          if (h(e.semver, a.semver, d)) {
            a = e;
          } else {
            if (p(e.semver, A.semver, d)) {
              A = e;
            }
          }
        });
        if (a.operator === m || a.operator === I) {
          return false;
        }
        if ((!A.operator || A.operator === m) && f(e, A.semver)) {
          return false;
        }
        if (A.operator === I && p(e, A.semver)) {
          return false;
        }
      }
      return true;
    };
  },
  72525: (module, exports, require) => {
    const r = require(97638);
    const o = require(50560);
    module.exports = (e, t, n) => {
      const s = [];
      let a = null;
      let A = null;
      const c = e.sort((e, t) => o(e, t, n));
      for (const e of c) {
        if (r(e, t, n)) {
          A = e;
          if (!a) {
            a = e;
          }
        } else {
          if (A) {
            s.push([a, A]);
          }
          A = null;
          a = null;
        }
      }
      if (a) {
        s.push([a, null]);
      }
      const u = [];
      for (const [e, t] of s) {
        if (e === t) {
          u.push(e);
        } else {
          if (t || e !== c[0]) {
            if (t) {
              if (e === c[0]) {
                u.push(`<=${t}`);
              } else {
                u.push(`${e} - ${t}`);
              }
            } else {
              u.push(`>=${e}`);
            }
          } else {
            u.push('*');
          }
        }
      }
      const l = u.join(' || ');
      const g = typeof t.raw == 'string' ? t.raw : String(t);
      if (l.length < g.length) {
        return l;
      } else {
        return t;
      }
    };
  },
  75032: (module, exports, require) => {
    const r = require(78311);
    const o = require(93904);
    const {
      ANY: s
    } = o;
    const a = require(97638);
    const A = require(50560);
    const c = [new o('>=0.0.0-0')];
    const u = [new o('>=0.0.0')];
    const l = (e, t, n) => {
      if (e === t) {
        return true;
      }
      if (e.length === 1 && e[0].semver === s) {
        if (t.length === 1 && t[0].semver === s) {
          return true;
        }
        e = n.includePrerelease ? c : u;
      }
      if (t.length === 1 && t[0].semver === s) {
        if (n.includePrerelease) {
          return true;
        }
        t = u;
      }
      const r = new Set();
      let o;
      let l;
      let h;
      let f;
      let p;
      let m;
      let I;
      for (const t of e) {
        if (t.operator === '>' || t.operator === '>=') {
          o = g(o, t, n);
        } else {
          if (t.operator === '<' || t.operator === '<=') {
            l = d(l, t, n);
          } else {
            r.add(t.semver);
          }
        }
      }
      if (r.size > 1) {
        return null;
      }
      if (o && l) {
        h = A(o.semver, l.semver, n);
        if (h > 0) {
          return null;
        }
        if (h === 0 && (o.operator !== '>=' || l.operator !== '<=')) {
          return null;
        }
      }
      for (const e of r) {
        if (o && !a(e, String(o), n)) {
          return null;
        }
        if (l && !a(e, String(l), n)) {
          return null;
        }
        for (const r of t) {
          if (!a(e, String(r), n)) {
            return false;
          }
        }
        return true;
      }
      let E = !!l && !n.includePrerelease && !!l.semver.prerelease.length && l.semver;
      let y = !!o && !n.includePrerelease && !!o.semver.prerelease.length && o.semver;
      if (E && E.prerelease.length === 1 && l.operator === '<' && E.prerelease[0] === 0) {
        E = false;
      }
      for (const e of t) {
        I = I || e.operator === '>' || e.operator === '>=';
        m = m || e.operator === '<' || e.operator === '<=';
        if (o) {
          if (y && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === y.major && e.semver.minor === y.minor && e.semver.patch === y.patch) {
            y = false;
          }
          if (e.operator === '>' || e.operator === '>=') {
            f = g(o, e, n);
            if (f === e && f !== o) {
              return false;
            }
          } else {
            if (o.operator === '>=' && !a(o.semver, String(e), n)) {
              return false;
            }
          }
        }
        if (l) {
          if (E && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === E.major && e.semver.minor === E.minor && e.semver.patch === E.patch) {
            E = false;
          }
          if (e.operator === '<' || e.operator === '<=') {
            p = d(l, e, n);
            if (p === e && p !== l) {
              return false;
            }
          } else {
            if (l.operator === '<=' && !a(l.semver, String(e), n)) {
              return false;
            }
          }
        }
        if (!e.operator && (l || o) && h !== 0) {
          return false;
        }
      }
      return (!o || !m || !!l || h === 0) && (!l || !I || !!o || h === 0) && !y && !E;
    };
    const g = (e, t, n) => {
      if (!e) {
        return t;
      }
      const r = A(e.semver, t.semver, n);
      if (r > 0) {
        return e;
      } else {
        if (r < 0 || t.operator === '>' && e.operator === '>=') {
          return t;
        } else {
          return e;
        }
      }
    };
    const d = (e, t, n) => {
      if (!e) {
        return t;
      }
      const r = A(e.semver, t.semver, n);
      if (r < 0) {
        return e;
      } else {
        if (r > 0 || t.operator === '<' && e.operator === '<=') {
          return t;
        } else {
          return e;
        }
      }
    };
    module.exports = (e, t, n = {}) => {
      if (e === t) {
        return true;
      }
      e = new r(e, n);
      t = new r(t, n);
      let o = false;
      e: for (const r of e.set) {
        for (const e of t.set) {
          const t = l(r, e, n);
          o = o || t !== null;
          if (t) {
            continue e;
          }
        }
        if (o) {
          return false;
        }
      }
      return true;
    };
  },
  77631: (module, exports, require) => {
    const r = require(78311);
    module.exports = (e, t) => new r(e, t).set.map(e => e.map(e => e.value).join(' ').trim().split(' '));
  },
  13874: (module, exports, require) => {
    const r = require(78311);
    module.exports = (e, t) => {
      try {
        return new r(e, t).range || '*';
      } catch (e) {
        return null;
      }
    };
  },
  32909: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ExperimentationService = undefined;
    var r = require(67291);
    Object.defineProperty(exports, 'ExperimentationService', {
      enumerable: true,
      get: function () {
        return r.ExperimentationService;
      }
    });
  },
  67291: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ExperimentationService = undefined;
    const r = require(32845);
    const o = require(51924);
    const s = require(45761);
    class a extends s.ExperimentationServiceAutoPolling {
      constructor(e) {
        super(e.telemetry, e.filterProviders || [], e.refetchInterval ?? 0, e.assignmentContextTelemetryPropertyName, e.telemetryEventName, e.storageKey, e.keyValueStorage);
        this.options = e;
        this.invokeInit();
      }
      init() {
        this.featureProviders = [];
        this.addFeatureProvider(new r.TasApiFeatureProvider(new o.HttpClient(this.options.endpoint), this.telemetry, this.filterProviders));
        super.init();
      }
    }
    exports.ExperimentationService = a;
    a.REFRESH_RATE_IN_MINUTES = 30;
  },
  45761: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ExperimentationServiceAutoPolling = undefined;
    const r = require(1714);
    const o = require(23257);
    class s extends r.ExperimentationServiceBase {
      constructor(e, t, n, r, s, a, A) {
        super(e, r, s, a, A);
        this.telemetry = e;
        this.filterProviders = t;
        this.refreshRateMs = n;
        this.assignmentContextTelemetryPropertyName = r;
        this.telemetryEventName = s;
        this.storageKey = a;
        this.storage = A;
        if (n < 1000 && n !== 0) {
          throw new Error('The minimum refresh rate for polling is 1000 ms (1 second). If you wish to deactivate this auto-polling use value of 0.');
        }
        if (n > 0) {
          this.pollingService = new o.PollingService(n);
          this.pollingService.OnPollTick(async () => {
            await super.getFeaturesAsync();
          });
        }
      }
      init() {
        if (this.pollingService) {
          this.pollingService.StartPolling(true);
        } else {
          super.getFeaturesAsync();
        }
      }
      async getFeaturesAsync(e = false) {
        if (this.pollingService) {
          this.pollingService.StopPolling();
          let t = await super.getFeaturesAsync(e);
          this.pollingService.StartPolling();
          return t;
        }
        return await super.getFeaturesAsync(e);
      }
    }
    exports.ExperimentationServiceAutoPolling = s;
  },
  1714: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ExperimentationServiceBase = undefined;
    const r = require(48823);
    exports.ExperimentationServiceBase = class {
      get features() {
        return this._features;
      }
      set features(e) {
        this._features = e;
        if (this.telemetry) {
          this.telemetry.setSharedProperty(this.assignmentContextTelemetryPropertyName, this.features.assignmentContext);
        }
      }
      constructor(e, t, n, o, s) {
        this.telemetry = e;
        this.assignmentContextTelemetryPropertyName = t;
        this.telemetryEventName = n;
        this.storageKey = o;
        this.storage = s;
        this.featuresConsumed = false;
        this.cachedTelemetryEvents = [];
        this._features = {
          features: [],
          assignmentContext: '',
          configs: []
        };
        if (!this.storageKey) {
          this.storageKey = 'ABExp.Features';
        }
        if (!this.storage) {
          s = new r.MemoryKeyValueStorage();
        }
        this.loadCachePromise = this.loadCachedFeatureData();
        this.initializePromise = this.loadCachePromise;
        this.initialFetch = new Promise((e, t) => {
          this.resolveInitialFetchPromise = e;
        });
      }
      async getFeaturesAsync(e = false) {
        if (this.fetchPromise != null) {
          try {
            await this.fetchPromise;
          } catch (e) {}
          return this.features;
        }
        if (!this.featureProviders || this.featureProviders.length === 0) {
          return Promise.resolve({
            features: [],
            assignmentContext: '',
            configs: []
          });
        }
        try {
          this.fetchPromise = Promise.all(this.featureProviders.map(async e => await e.getFeatures()));
          const t = await this.fetchPromise;
          this.updateFeatures(t, e);
        } catch (e) {}
        this.fetchPromise = undefined;
        if (this.resolveInitialFetchPromise) {
          this.resolveInitialFetchPromise();
          this.resolveInitialFetchPromise = undefined;
        }
        return this.features;
      }
      updateFeatures(e, t = false) {
        let n = {
          features: [],
          assignmentContext: '',
          configs: []
        };
        for (let t of e) {
          for (let e of t.features) {
            if (!n.features.includes(e)) {
              n.features.push(e);
            }
          }
          for (let e of t.configs) {
            const t = n.configs.find(t => t.Id === e.Id);
            if (t) {
              t.Parameters = Object.assign(Object.assign({}, t.Parameters), e.Parameters);
            } else {
              n.configs.push(e);
            }
          }
          n.assignmentContext += t.assignmentContext;
        }
        if (!!t || !this.featuresConsumed) {
          this.features = n;
        }
        if (this.storage) {
          this.storage.setValue(this.storageKey, n);
        }
      }
      async loadCachedFeatureData() {
        let e;
        if (this.storage) {
          e = await this.storage.getValue(this.storageKey);
          if (e !== undefined && e.configs === undefined) {
            e.configs = [];
          }
        }
        if (this.features.features.length === 0) {
          this.features = e || {
            features: [],
            assignmentContext: '',
            configs: []
          };
        }
      }
      isFlightEnabled(e) {
        this.featuresConsumed = true;
        this.PostEventToTelemetry(e);
        return this.features.features.includes(e);
      }
      async isCachedFlightEnabled(e) {
        await this.loadCachePromise;
        this.featuresConsumed = true;
        this.PostEventToTelemetry(e);
        return this.features.features.includes(e);
      }
      async isFlightEnabledAsync(e) {
        const t = await this.getFeaturesAsync(true);
        this.featuresConsumed = true;
        this.PostEventToTelemetry(e);
        return t.features.includes(e);
      }
      getTreatmentVariable(e, t) {
        this.featuresConsumed = true;
        this.PostEventToTelemetry(`${e}.${t}`);
        const n = this.features.configs.find(t => t.Id === e);
        if (n == null) {
          return undefined;
        } else {
          return n.Parameters[t];
        }
      }
      async getTreatmentVariableAsync(e, t, n) {
        if (n) {
          const n = this.featuresConsumed;
          const r = this.getTreatmentVariable(e, t);
          if (r !== undefined) {
            return r;
          }
          this.featuresConsumed = n;
        }
        await this.getFeaturesAsync(true);
        return this.getTreatmentVariable(e, t);
      }
      PostEventToTelemetry(e) {
        if (!this.cachedTelemetryEvents.includes(e)) {
          this.telemetry.postEvent(this.telemetryEventName, new Map([['ABExp.queriedFeature', e]]));
          this.cachedTelemetryEvents.push(e);
        }
      }
      invokeInit() {
        this.init();
      }
      addFeatureProvider(...e) {
        if (e != null && this.featureProviders != null) {
          for (let t of e) {
            this.featureProviders.push(t);
          }
        }
      }
    };
  },
  96790: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.BaseFeatureProvider = undefined;
    exports.BaseFeatureProvider = class {
      constructor(e) {
        this.telemetry = e;
        this.isFetching = false;
      }
      async getFeatures() {
        if (this.isFetching && this.fetchPromise) {
          return this.fetchPromise;
        }
        this.fetchPromise = this.fetch();
        let e = await this.fetchPromise;
        this.isFetching = false;
        this.fetchPromise = undefined;
        return e;
      }
    };
  },
  76492: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FilteredFeatureProvider = undefined;
    const r = require(96790);
    class o extends r.BaseFeatureProvider {
      constructor(e, t) {
        super(e);
        this.telemetry = e;
        this.filterProviders = t;
        this.cachedTelemetryEvents = [];
      }
      getFilters() {
        let e = new Map();
        for (let t of this.filterProviders) {
          let n = t.getFilters();
          for (let t of n.keys()) {
            let r = n.get(t);
            e.set(t, r);
          }
        }
        return e;
      }
      PostEventToTelemetry(e) {
        if (this.cachedTelemetryEvents.includes(e)) {
          return;
        }
        const t = JSON.stringify(e);
        this.telemetry.postEvent('report-headers', new Map([['ABExp.headers', t]]));
        this.cachedTelemetryEvents.push(e);
      }
    }
    exports.FilteredFeatureProvider = o;
  },
  32845: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TasApiFeatureProvider = exports.TASAPI_FETCHERROR_EVENTNAME = undefined;
    const r = require(76492);
    exports.TASAPI_FETCHERROR_EVENTNAME = 'call-tas-error';
    const o = 'ErrorType';
    class s extends r.FilteredFeatureProvider {
      constructor(e, t, n) {
        super(t, n);
        this.httpClient = e;
        this.telemetry = t;
        this.filterProviders = n;
      }
      async fetch() {
        let e;
        let n = this.getFilters();
        let r = {};
        for (let e of n.keys()) {
          const t = n.get(e);
          r[e] = t;
        }
        try {
          e = await this.httpClient.get({
            headers: r
          });
        } catch (e) {
          const n = e;
          const r = new Map();
          if (n.responseReceived && !n.responseOk) {
            r.set(o, 'ServerError');
          } else {
            if (n.responseReceived === false) {
              r.set(o, 'NoResponse');
            } else {
              r.set(o, 'GenericError');
            }
          }
          this.telemetry.postEvent(exports.TASAPI_FETCHERROR_EVENTNAME, r);
        }
        if (!e) {
          throw Error(exports.TASAPI_FETCHERROR_EVENTNAME);
        }
        if (n.keys.length > 0) {
          this.PostEventToTelemetry(r);
        }
        const s = e.data;
        let a = s.Configs;
        let A = [];
        for (let e of a) {
          if (e.Parameters) {
            for (let t of Object.keys(e.Parameters)) {
              const n = t + (e.Parameters[t] ? '' : 'cf');
              if (!A.includes(n)) {
                A.push(n);
              }
            }
          }
        }
        return {
          features: A,
          assignmentContext: s.AssignmentContext,
          configs: a
        };
      }
    }
    exports.TasApiFeatureProvider = s;
  },
  51924: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.HttpClient = exports.FetchError = undefined;
    class n extends Error {
      constructor(e, t, n) {
        super(e);
        this.responseReceived = t;
        this.responseOk = n;
      }
    }
    exports.FetchError = n;
    exports.HttpClient = class {
      constructor(e) {
        this.endpoint = e;
      }
      async get(e) {
        const t = await fetch(this.endpoint, {
          method: 'GET',
          headers: e == null ? undefined : e.headers
        });
        if (!t) {
          throw new n('No response received', false);
        }
        if (!t.ok) {
          throw new n('Response not ok', true, false);
        }
        const r = await t.json();
        if (!r) {
          throw new n('No data received', false);
        }
        return {
          data: r
        };
      }
    };
  },
  48823: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MemoryKeyValueStorage = undefined;
    exports.MemoryKeyValueStorage = class {
      constructor() {
        this.storage = new Map();
      }
      async getValue(e, t) {
        if (this.storage.has(e)) {
          return await Promise.resolve(this.storage.get(e));
        } else {
          return await Promise.resolve(t || undefined);
        }
      }
      setValue(e, t) {
        this.storage.set(e, t);
      }
    };
  },
  23257: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.PollingService = undefined;
    exports.PollingService = class {
      constructor(e) {
        this.fetchInterval = e;
      }
      StopPolling() {
        clearInterval(this.intervalHandle);
        this.intervalHandle = undefined;
      }
      OnPollTick(e) {
        this.onTick = e;
      }
      StartPolling(e = false) {
        if (this.intervalHandle) {
          this.StopPolling();
        }
        if (this.onTick != null) {
          if (e) {
            this.onTick().then(() => {}).catch(() => {});
          }
          this.intervalHandle = setInterval(async () => {
            await this.onTick();
          }, this.fetchInterval);
          if (this.intervalHandle.unref) {
            this.intervalHandle.unref();
          }
        }
      }
    };
  },
  53281: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = undefined;
    exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.TraceValue = exports.Trace = undefined;
    const o = require(96177);
    Object.defineProperty(exports, 'Message', {
      enumerable: true,
      get: function () {
        return o.Message;
      }
    });
    Object.defineProperty(exports, 'RequestType', {
      enumerable: true,
      get: function () {
        return o.RequestType;
      }
    });
    Object.defineProperty(exports, 'RequestType0', {
      enumerable: true,
      get: function () {
        return o.RequestType0;
      }
    });
    Object.defineProperty(exports, 'RequestType1', {
      enumerable: true,
      get: function () {
        return o.RequestType1;
      }
    });
    Object.defineProperty(exports, 'RequestType2', {
      enumerable: true,
      get: function () {
        return o.RequestType2;
      }
    });
    Object.defineProperty(exports, 'RequestType3', {
      enumerable: true,
      get: function () {
        return o.RequestType3;
      }
    });
    Object.defineProperty(exports, 'RequestType4', {
      enumerable: true,
      get: function () {
        return o.RequestType4;
      }
    });
    Object.defineProperty(exports, 'RequestType5', {
      enumerable: true,
      get: function () {
        return o.RequestType5;
      }
    });
    Object.defineProperty(exports, 'RequestType6', {
      enumerable: true,
      get: function () {
        return o.RequestType6;
      }
    });
    Object.defineProperty(exports, 'RequestType7', {
      enumerable: true,
      get: function () {
        return o.RequestType7;
      }
    });
    Object.defineProperty(exports, 'RequestType8', {
      enumerable: true,
      get: function () {
        return o.RequestType8;
      }
    });
    Object.defineProperty(exports, 'RequestType9', {
      enumerable: true,
      get: function () {
        return o.RequestType9;
      }
    });
    Object.defineProperty(exports, 'ResponseError', {
      enumerable: true,
      get: function () {
        return o.ResponseError;
      }
    });
    Object.defineProperty(exports, 'ErrorCodes', {
      enumerable: true,
      get: function () {
        return o.ErrorCodes;
      }
    });
    Object.defineProperty(exports, 'NotificationType', {
      enumerable: true,
      get: function () {
        return o.NotificationType;
      }
    });
    Object.defineProperty(exports, 'NotificationType0', {
      enumerable: true,
      get: function () {
        return o.NotificationType0;
      }
    });
    Object.defineProperty(exports, 'NotificationType1', {
      enumerable: true,
      get: function () {
        return o.NotificationType1;
      }
    });
    Object.defineProperty(exports, 'NotificationType2', {
      enumerable: true,
      get: function () {
        return o.NotificationType2;
      }
    });
    Object.defineProperty(exports, 'NotificationType3', {
      enumerable: true,
      get: function () {
        return o.NotificationType3;
      }
    });
    Object.defineProperty(exports, 'NotificationType4', {
      enumerable: true,
      get: function () {
        return o.NotificationType4;
      }
    });
    Object.defineProperty(exports, 'NotificationType5', {
      enumerable: true,
      get: function () {
        return o.NotificationType5;
      }
    });
    Object.defineProperty(exports, 'NotificationType6', {
      enumerable: true,
      get: function () {
        return o.NotificationType6;
      }
    });
    Object.defineProperty(exports, 'NotificationType7', {
      enumerable: true,
      get: function () {
        return o.NotificationType7;
      }
    });
    Object.defineProperty(exports, 'NotificationType8', {
      enumerable: true,
      get: function () {
        return o.NotificationType8;
      }
    });
    Object.defineProperty(exports, 'NotificationType9', {
      enumerable: true,
      get: function () {
        return o.NotificationType9;
      }
    });
    Object.defineProperty(exports, 'ParameterStructures', {
      enumerable: true,
      get: function () {
        return o.ParameterStructures;
      }
    });
    const s = require(93352);
    Object.defineProperty(exports, 'LinkedMap', {
      enumerable: true,
      get: function () {
        return s.LinkedMap;
      }
    });
    Object.defineProperty(exports, 'LRUCache', {
      enumerable: true,
      get: function () {
        return s.LRUCache;
      }
    });
    Object.defineProperty(exports, 'Touch', {
      enumerable: true,
      get: function () {
        return s.Touch;
      }
    });
    const a = require(34019);
    Object.defineProperty(exports, 'Disposable', {
      enumerable: true,
      get: function () {
        return a.Disposable;
      }
    });
    const A = require(62676);
    Object.defineProperty(exports, 'Event', {
      enumerable: true,
      get: function () {
        return A.Event;
      }
    });
    Object.defineProperty(exports, 'Emitter', {
      enumerable: true,
      get: function () {
        return A.Emitter;
      }
    });
    const c = require(59850);
    Object.defineProperty(exports, 'CancellationTokenSource', {
      enumerable: true,
      get: function () {
        return c.CancellationTokenSource;
      }
    });
    Object.defineProperty(exports, 'CancellationToken', {
      enumerable: true,
      get: function () {
        return c.CancellationToken;
      }
    });
    const u = require(74996);
    Object.defineProperty(exports, 'SharedArraySenderStrategy', {
      enumerable: true,
      get: function () {
        return u.SharedArraySenderStrategy;
      }
    });
    Object.defineProperty(exports, 'SharedArrayReceiverStrategy', {
      enumerable: true,
      get: function () {
        return u.SharedArrayReceiverStrategy;
      }
    });
    const l = require(59085);
    Object.defineProperty(exports, 'MessageReader', {
      enumerable: true,
      get: function () {
        return l.MessageReader;
      }
    });
    Object.defineProperty(exports, 'AbstractMessageReader', {
      enumerable: true,
      get: function () {
        return l.AbstractMessageReader;
      }
    });
    Object.defineProperty(exports, 'ReadableStreamMessageReader', {
      enumerable: true,
      get: function () {
        return l.ReadableStreamMessageReader;
      }
    });
    const g = require(23193);
    Object.defineProperty(exports, 'MessageWriter', {
      enumerable: true,
      get: function () {
        return g.MessageWriter;
      }
    });
    Object.defineProperty(exports, 'AbstractMessageWriter', {
      enumerable: true,
      get: function () {
        return g.AbstractMessageWriter;
      }
    });
    Object.defineProperty(exports, 'WriteableStreamMessageWriter', {
      enumerable: true,
      get: function () {
        return g.WriteableStreamMessageWriter;
      }
    });
    const d = require(89244);
    Object.defineProperty(exports, 'AbstractMessageBuffer', {
      enumerable: true,
      get: function () {
        return d.AbstractMessageBuffer;
      }
    });
    const h = require(90577);
    Object.defineProperty(exports, 'ConnectionStrategy', {
      enumerable: true,
      get: function () {
        return h.ConnectionStrategy;
      }
    });
    Object.defineProperty(exports, 'ConnectionOptions', {
      enumerable: true,
      get: function () {
        return h.ConnectionOptions;
      }
    });
    Object.defineProperty(exports, 'NullLogger', {
      enumerable: true,
      get: function () {
        return h.NullLogger;
      }
    });
    Object.defineProperty(exports, 'createMessageConnection', {
      enumerable: true,
      get: function () {
        return h.createMessageConnection;
      }
    });
    Object.defineProperty(exports, 'ProgressToken', {
      enumerable: true,
      get: function () {
        return h.ProgressToken;
      }
    });
    Object.defineProperty(exports, 'ProgressType', {
      enumerable: true,
      get: function () {
        return h.ProgressType;
      }
    });
    Object.defineProperty(exports, 'Trace', {
      enumerable: true,
      get: function () {
        return h.Trace;
      }
    });
    Object.defineProperty(exports, 'TraceValue', {
      enumerable: true,
      get: function () {
        return h.TraceValue;
      }
    });
    Object.defineProperty(exports, 'TraceFormat', {
      enumerable: true,
      get: function () {
        return h.TraceFormat;
      }
    });
    Object.defineProperty(exports, 'SetTraceNotification', {
      enumerable: true,
      get: function () {
        return h.SetTraceNotification;
      }
    });
    Object.defineProperty(exports, 'LogTraceNotification', {
      enumerable: true,
      get: function () {
        return h.LogTraceNotification;
      }
    });
    Object.defineProperty(exports, 'ConnectionErrors', {
      enumerable: true,
      get: function () {
        return h.ConnectionErrors;
      }
    });
    Object.defineProperty(exports, 'ConnectionError', {
      enumerable: true,
      get: function () {
        return h.ConnectionError;
      }
    });
    Object.defineProperty(exports, 'CancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'IdCancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.IdCancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'RequestCancellationReceiverStrategy', {
      enumerable: true,
      get: function () {
        return h.RequestCancellationReceiverStrategy;
      }
    });
    Object.defineProperty(exports, 'CancellationSenderStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationSenderStrategy;
      }
    });
    Object.defineProperty(exports, 'CancellationStrategy', {
      enumerable: true,
      get: function () {
        return h.CancellationStrategy;
      }
    });
    Object.defineProperty(exports, 'MessageStrategy', {
      enumerable: true,
      get: function () {
        return h.MessageStrategy;
      }
    });
    Object.defineProperty(exports, 'TraceValues', {
      enumerable: true,
      get: function () {
        return h.TraceValues;
      }
    });
    const f = __importDefault(require(69590));
    exports.RAL = f.default;
  },
  59850: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CancellationTokenSource = exports.CancellationToken = undefined;
    const A = __importDefault(require(69590));
    const c = __importStar(require(78585));
    const u = require(62676);
    var l;
    (function (e) {
      e.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: u.Event.None
      });
      e.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: u.Event.None
      });
      e.is = function (t) {
        const n = t;
        return n && (n === e.None || n === e.Cancelled || c.boolean(n.isCancellationRequested) && !!n.onCancellationRequested);
      };
    })(l || (exports.CancellationToken = l = {}));
    const g = Object.freeze(function (e, t) {
      const n = A.default().timer.setTimeout(e.bind(t), 0);
      return {
        dispose() {
          n.dispose();
        }
      };
    });
    class d {
      _isCancelled = false;
      _emitter;
      cancel() {
        if (!this._isCancelled) {
          this._isCancelled = true;
          if (this._emitter) {
            this._emitter.fire(undefined);
            this.dispose();
          }
        }
      }
      get isCancellationRequested() {
        return this._isCancelled;
      }
      get onCancellationRequested() {
        if (this._isCancelled) {
          return g;
        } else {
          if (!this._emitter) {
            this._emitter = new u.Emitter();
          }
          return this._emitter.event;
        }
      }
      dispose() {
        if (this._emitter) {
          this._emitter.dispose();
          this._emitter = undefined;
        }
      }
    }
    exports.CancellationTokenSource = class {
      _token;
      get token() {
        if (!this._token) {
          this._token = new d();
        }
        return this._token;
      }
      cancel() {
        if (this._token) {
          this._token.cancel();
        } else {
          this._token = l.Cancelled;
        }
      }
      dispose() {
        if (this._token) {
          if (this._token instanceof d) {
            this._token.dispose();
          }
        } else {
          this._token = l.None;
        }
      }
    };
  },
  90577: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.TraceValue = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = undefined;
    const A = __importDefault(require(69590));
    const c = __importStar(require(78585));
    const u = require(96177);
    const l = require(93352);
    const g = require(62676);
    const d = require(59850);
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    var v;
    var b;
    var B;
    var Q;
    var D;
    var S;
    var T;
    var R;
    var k;
    var x;
    (function (e) {
      e.type = new u.NotificationType('$/cancelRequest');
    })(h ||= {});
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string' || typeof e == 'number';
      };
    })(f || (exports.ProgressToken = f = {}));
    (function (e) {
      e.type = new u.NotificationType('$/progress');
    })(p ||= {});
    exports.ProgressType = class {
      __;
      _pr;
      constructor() {}
    };
    (function (e) {
      e.is = function (e) {
        return c.func(e);
      };
    })(m ||= {});
    exports.NullLogger = Object.freeze({
      error: () => {},
      warn: () => {},
      info: () => {},
      log: () => {}
    });
    (function (e) {
      e[e.Off = 0] = 'Off';
      e[e.Messages = 1] = 'Messages';
      e[e.Compact = 2] = 'Compact';
      e[e.Verbose = 3] = 'Verbose';
    })(I || (exports.Trace = I = {}));
    (function (e) {
      e.Off = 'off';
      e.Messages = 'messages';
      e.Compact = 'compact';
      e.Verbose = 'verbose';
    })(E || (exports.TraceValue = E = {}));
    exports.TraceValues = E;
    (function (e) {
      e.fromString = function (t) {
        if (!c.string(t)) {
          return e.Off;
        }
        switch (t = t.toLowerCase()) {
          case 'off':
          default:
            return e.Off;
          case 'messages':
            return e.Messages;
          case 'compact':
            return e.Compact;
          case 'verbose':
            return e.Verbose;
        }
      };
      e.toString = function (t) {
        switch (t) {
          case e.Off:
            return 'off';
          case e.Messages:
            return 'messages';
          case e.Compact:
            return 'compact';
          case e.Verbose:
            return 'verbose';
          default:
            return 'off';
        }
      };
    })(I || (exports.Trace = I = {}));
    (function (e) {
      e.Text = 'text';
      e.JSON = 'json';
    })(y || (exports.TraceFormat = y = {}));
    (function (e) {
      e.fromString = function (t) {
        if (c.string(t) && (t = t.toLowerCase()) === 'json') {
          return e.JSON;
        } else {
          return e.Text;
        }
      };
    })(y || (exports.TraceFormat = y = {}));
    (function (e) {
      e.type = new u.NotificationType('$/setTrace');
    })(w || (exports.SetTraceNotification = w = {}));
    (function (e) {
      e.type = new u.NotificationType('$/logTrace');
    })(_ || (exports.LogTraceNotification = _ = {}));
    (function (e) {
      e[e.Closed = 1] = 'Closed';
      e[e.Disposed = 2] = 'Disposed';
      e[e.AlreadyListening = 3] = 'AlreadyListening';
    })(v || (exports.ConnectionErrors = v = {}));
    class P extends Error {
      code;
      constructor(e, t) {
        super(t);
        this.code = e;
        Object.setPrototypeOf(this, P.prototype);
      }
    }
    exports.ConnectionError = P;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.cancelUndispatched);
      };
    })(b || (exports.ConnectionStrategy = b = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.kind === undefined || t.kind === 'id') && c.func(t.createCancellationTokenSource) && (t.dispose === undefined || c.func(t.dispose));
      };
    })(B || (exports.IdCancellationReceiverStrategy = B = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'request' && c.func(t.createCancellationTokenSource) && (t.dispose === undefined || c.func(t.dispose));
      };
    })(Q || (exports.RequestCancellationReceiverStrategy = Q = {}));
    (function (e) {
      e.Message = Object.freeze({
        createCancellationTokenSource: e => new d.CancellationTokenSource()
      });
      e.is = function (e) {
        return B.is(e) || Q.is(e);
      };
    })(D || (exports.CancellationReceiverStrategy = D = {}));
    (function (e) {
      e.Message = Object.freeze({
        sendCancellation: (e, t) => e.sendNotification(h.type, {
          id: t
        }),
        cleanup(e) {}
      });
      e.is = function (e) {
        const t = e;
        return t && c.func(t.sendCancellation) && c.func(t.cleanup);
      };
    })(S || (exports.CancellationSenderStrategy = S = {}));
    (function (e) {
      e.Message = Object.freeze({
        receiver: D.Message,
        sender: S.Message
      });
      e.is = function (e) {
        const t = e;
        return t && D.is(t.receiver) && S.is(t.sender);
      };
    })(T || (exports.CancellationStrategy = T = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.handleMessage);
      };
    })(R || (exports.MessageStrategy = R = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (T.is(t.cancellationStrategy) || b.is(t.connectionStrategy) || R.is(t.messageStrategy) || c.number(t.maxParallelism));
      };
    })(k || (exports.ConnectionOptions = k = {}));
    (function (e) {
      e[e.New = 1] = 'New';
      e[e.Listening = 2] = 'Listening';
      e[e.Closed = 3] = 'Closed';
      e[e.Disposed = 4] = 'Disposed';
    })(x ||= {});
    exports.createMessageConnection = function (e, n, r, o) {
      const s = r !== undefined ? r : exports.NullLogger;
      let a = 0;
      let E = 0;
      let b = 0;
      const Q = '2.0';
      const D = o?.maxParallelism ?? -1;
      let S;
      let k = 0;
      const F = new Map();
      let M;
      const O = new Map();
      const N = new Map();
      let L;
      let K;
      let U = new l.LinkedMap();
      let j = new Map();
      let q = new Set();
      let G = new Map();
      let Y = I.Off;
      let H = y.Text;
      let J = x.New;
      const z = new g.Emitter();
      const $ = new g.Emitter();
      const W = new g.Emitter();
      const V = new g.Emitter();
      const X = new g.Emitter();
      const Z = o && o.cancellationStrategy ? o.cancellationStrategy : T.Message;
      function ee(e) {}
      function te() {
        return J === x.Listening;
      }
      function ne() {
        return J === x.Closed;
      }
      function re() {
        return J === x.Disposed;
      }
      function oe() {
        if (J === x.New || J === x.Listening) {
          J = x.Closed;
          $.fire(undefined);
        }
      }
      function ie(e) {
        if (e === null) {
          throw new Error('Can\'t send requests with id null since the response can\'t be correlated.');
        }
        return `req-${e.toString()}`;
      }
      function se(e, t) {
        var n;
        if (u.Message.isRequest(t)) {
          e.set(ie(t.id), t);
        } else {
          if (u.Message.isResponse(t)) {
            if (D === -1) {
              e.set((n = t.id) === null ? `res-unknown-${(++b).toString()}` : `res-${n.toString()}`, t);
            } else {
              ue(t);
            }
          } else {
            e.set(`not-${(++E).toString()}`, t);
          }
        }
      }
      function ae() {
        if (!L && U.size !== 0 && (D === -1 || !(k >= D))) {
          L = A.default().timer.setImmediate(async () => {
            L = undefined;
            if (U.size === 0) {
              return;
            }
            if (D !== -1 && k >= D) {
              return;
            }
            const e = U.shift();
            let t;
            try {
              k++;
              const n = o?.messageStrategy;
              t = R.is(n) ? n.handleMessage(e, Ae) : Ae(e);
            } catch (e) {
              s.error(`Processing message queue failed: ${e.toString()}`);
            } finally {
              if (t instanceof Promise) {
                t.then(() => {
                  k--;
                  ae();
                }).catch(e => {
                  s.error(`Processing message queue failed: ${e.toString()}`);
                });
              } else {
                k--;
              }
              ae();
            }
          });
        }
      }
      async function Ae(e) {
        if (u.Message.isRequest(e)) {
          return async function (e) {
            if (re()) {
              return Promise.resolve();
            }
            function t(t, r, o) {
              const s = {
                jsonrpc: Q,
                id: e.id
              };
              if (t instanceof u.ResponseError) {
                s.error = t.toJson();
              } else {
                s.result = t === undefined ? null : t;
              }
              ge(s, r, o);
              return n.write(s);
            }
            function r(t, r, o) {
              const s = {
                jsonrpc: Q,
                id: e.id,
                error: t.toJson()
              };
              ge(s, r, o);
              return n.write(s);
            }
            (function (e) {
              if (Y === I.Off || !K) {
                return;
              }
              if (H === y.Text) {
                let t;
                if ((Y === I.Verbose || Y === I.Compact) && !!e.params) {
                  t = `Params: ${le(e.params)}\n\n`;
                }
                K.log(`Received request '${e.method} - (${e.id})'.`, t);
              } else {
                he('receive-request', e);
              }
            })(e);
            const o = F.get(e.method);
            let s;
            let a;
            if (o) {
              s = o.type;
              a = o.handler;
            }
            const A = Date.now();
            if (a || S) {
              const n = e.id ?? String(Date.now());
              const o = B.is(Z.receiver) ? Z.receiver.createCancellationTokenSource(n) : Z.receiver.createCancellationTokenSource(e);
              if (e.id !== null && q.has(e.id)) {
                o.cancel();
              }
              if (e.id !== null) {
                G.set(n, o);
              }
              try {
                let n;
                if (a) {
                  if (e.params === undefined) {
                    if (s !== undefined && s.numberOfParams !== 0) {
                      return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines ${s.numberOfParams} params but received none.`), e.method, A);
                    }
                    n = a(o.token);
                  } else {
                    if (Array.isArray(e.params)) {
                      if (s !== undefined && s.parameterStructures === u.ParameterStructures.byName) {
                        return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines parameters by name but received parameters by position`), e.method, A);
                      }
                      n = a(...e.params, o.token);
                    } else {
                      if (s !== undefined && s.parameterStructures === u.ParameterStructures.byPosition) {
                        return r(new u.ResponseError(u.ErrorCodes.InvalidParams, `Request ${e.method} defines parameters by position but received parameters by name`), e.method, A);
                      }
                      n = a(e.params, o.token);
                    }
                  }
                } else {
                  if (S) {
                    n = S(e.method, e.params, o.token);
                  }
                }
                const c = await n;
                await t(c, e.method, A);
              } catch (n) {
                if (n instanceof u.ResponseError) {
                  await t(n, e.method, A);
                } else {
                  if (n && c.string(n.message)) {
                    await r(new u.ResponseError(u.ErrorCodes.InternalError, `Request ${e.method} failed with message: ${n.message}`), e.method, A);
                  } else {
                    await r(new u.ResponseError(u.ErrorCodes.InternalError, `Request ${e.method} failed unexpectedly without providing any details.`), e.method, A);
                  }
                }
              } finally {
                G.delete(n);
              }
            } else {
              await r(new u.ResponseError(u.ErrorCodes.MethodNotFound, `Unhandled method ${e.method}`), e.method, A);
            }
          }(e);
        } else {
          if (u.Message.isNotification(e)) {
            return async function (e) {
              if (re()) {
                return;
              }
              let t;
              let n;
              if (e.method === h.type.method) {
                const t = e.params.id;
                q.delete(t);
                de(e);
                return;
              }
              {
                const r = O.get(e.method);
                if (r) {
                  n = r.handler;
                  t = r.type;
                }
              }
              if (n || M) {
                try {
                  de(e);
                  if (n) {
                    if (e.params === undefined) {
                      if (t !== undefined && t.numberOfParams !== 0 && t.parameterStructures !== u.ParameterStructures.byName) {
                        s.error(`Notification ${e.method} defines ${t.numberOfParams} params but received none.`);
                      }
                      await n();
                    } else {
                      if (Array.isArray(e.params)) {
                        const r = e.params;
                        if (e.method === p.type.method && r.length === 2 && f.is(r[0])) {
                          await n({
                            token: r[0],
                            value: r[1]
                          });
                        } else {
                          if (t !== undefined) {
                            if (t.parameterStructures === u.ParameterStructures.byName) {
                              s.error(`Notification ${e.method} defines parameters by name but received parameters by position`);
                            }
                            if (t.numberOfParams !== e.params.length) {
                              s.error(`Notification ${e.method} defines ${t.numberOfParams} params but received ${r.length} arguments`);
                            }
                          }
                          await n(...r);
                        }
                      } else {
                        if (t !== undefined && t.parameterStructures === u.ParameterStructures.byPosition) {
                          s.error(`Notification ${e.method} defines parameters by position but received parameters by name`);
                        }
                        await n(e.params);
                      }
                    }
                  } else {
                    if (M) {
                      await M(e.method, e.params);
                    }
                  }
                } catch (t) {
                  if (t.message) {
                    s.error(`Notification handler '${e.method}' failed with message: ${t.message}`);
                  } else {
                    s.error(`Notification handler '${e.method}' failed unexpectedly.`);
                  }
                }
              } else {
                W.fire(e);
              }
            }(e);
          } else {
            if (u.Message.isResponse(e)) {
              return ue(e);
            } else {
              return function (e) {
                if (!e) {
                  s.error('Received empty message.');
                  return;
                }
                s.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e, null, 4)}`);
                const t = e;
                if (c.string(t.id) || c.number(t.id)) {
                  const e = t.id;
                  const n = j.get(e);
                  if (n) {
                    n.reject(new Error('The received response has neither a result nor an error property.'));
                  }
                }
              }(e);
            }
          }
        }
      }
      e.onClose(oe);
      e.onError(function (e) {
        z.fire([e, undefined, undefined]);
      });
      n.onClose(oe);
      n.onError(function (e) {
        z.fire(e);
      });
      const ce = e => {
        try {
          if (u.Message.isNotification(e) && e.method === h.type.method) {
            const t = e.params.id;
            const r = ie(t);
            const a = U.get(r);
            if (u.Message.isRequest(a)) {
              const A = o?.connectionStrategy;
              const c = A && A.cancelUndispatched ? A.cancelUndispatched(a, ee) : undefined;
              if (c && (c.error !== undefined || c.result !== undefined)) {
                U.delete(r);
                G.delete(t);
                c.id = a.id;
                ge(c, e.method, Date.now());
                n.write(c).catch(() => s.error('Sending response for canceled message failed.'));
                return;
              }
            }
            const A = G.get(t);
            if (A !== undefined) {
              A.cancel();
              de(e);
              return;
            }
            q.add(t);
          }
          se(U, e);
        } finally {
          ae();
        }
      };
      function ue(e) {
        if (!re()) {
          if (e.id === null) {
            if (e.error) {
              s.error(`Received response message without id: Error is: \n${JSON.stringify(e.error, undefined, 4)}`);
            } else {
              s.error('Received response message without id. No further error information provided.');
            }
          } else {
            const t = e.id;
            const n = j.get(t);
            (function (e, t) {
              if (Y === I.Off || !K) {
                return;
              }
              if (H === y.Text) {
                let n;
                if (Y === I.Verbose || Y === I.Compact) {
                  if (e.error && e.error.data) {
                    n = `Error data: ${le(e.error.data)}\n\n`;
                  } else {
                    if (e.result) {
                      n = `Result: ${le(e.result)}\n\n`;
                    } else {
                      if (e.error === undefined) {
                        n = 'No result returned.\n\n';
                      }
                    }
                  }
                }
                if (t) {
                  const r = e.error ? ` Request failed: ${e.error.message} (${e.error.code}).` : '';
                  K.log(`Received response '${t.method} - (${e.id})' in ${Date.now() - t.timerStart}ms.${r}`, n);
                } else {
                  K.log(`Received response ${e.id} without active response promise.`, n);
                }
              } else {
                he('receive-response', e);
              }
            })(e, n);
            if (n !== undefined) {
              j.delete(t);
              try {
                if (e.error) {
                  const t = e.error;
                  n.reject(new u.ResponseError(t.code, t.message, t.data));
                } else {
                  if (e.result === undefined) {
                    throw new Error('Should never happen.');
                  }
                  n.resolve(e.result);
                }
              } catch (e) {
                if (e.message) {
                  s.error(`Response handler '${n.method}' failed with message: ${e.message}`);
                } else {
                  s.error(`Response handler '${n.method}' failed unexpectedly.`);
                }
              }
            }
          }
        }
      }
      function le(e) {
        if (e != null) {
          switch (Y) {
            case I.Verbose:
              return JSON.stringify(e, null, 4);
            case I.Compact:
              return JSON.stringify(e);
            default:
              return;
          }
        }
      }
      function ge(e, t, n) {
        if (Y !== I.Off && K) {
          if (H === y.Text) {
            let r;
            if (Y === I.Verbose || Y === I.Compact) {
              if (e.error && e.error.data) {
                r = `Error data: ${le(e.error.data)}\n\n`;
              } else {
                if (e.result) {
                  r = `Result: ${le(e.result)}\n\n`;
                } else {
                  if (e.error === undefined) {
                    r = 'No result returned.\n\n';
                  }
                }
              }
            }
            K.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now() - n}ms`, r);
          } else {
            he('send-response', e);
          }
        }
      }
      function de(e) {
        if (Y !== I.Off && K && e.method !== _.type.method) {
          if (H === y.Text) {
            let t;
            if (Y === I.Verbose || Y === I.Compact) {
              t = e.params ? `Params: ${le(e.params)}\n\n` : 'No parameters provided.\n\n';
            }
            K.log(`Received notification '${e.method}'.`, t);
          } else {
            he('receive-notification', e);
          }
        }
      }
      function he(e, t) {
        if (!K || Y === I.Off) {
          return;
        }
        const n = {
          isLSPMessage: true,
          type: e,
          message: t,
          timestamp: Date.now()
        };
        K.log(n);
      }
      function fe() {
        if (ne()) {
          throw new P(v.Closed, 'Connection is closed.');
        }
        if (re()) {
          throw new P(v.Disposed, 'Connection is disposed.');
        }
      }
      function pe(e) {
        if (e === undefined) {
          return null;
        } else {
          return e;
        }
      }
      function Ce(e) {
        if (e === null) {
          return undefined;
        } else {
          return e;
        }
      }
      function me(e) {
        return e != null && !Array.isArray(e) && typeof e == 'object';
      }
      function Ie(e, t) {
        switch (e) {
          case u.ParameterStructures.auto:
            if (me(t)) {
              return Ce(t);
            } else {
              return [pe(t)];
            }
          case u.ParameterStructures.byName:
            if (!me(t)) {
              throw new Error('Received parameters by name but param is not an object literal.');
            }
            return Ce(t);
          case u.ParameterStructures.byPosition:
            return [pe(t)];
          default:
            throw new Error(`Unknown parameter structure ${e.toString()}`);
        }
      }
      function Ee(e, t) {
        let n;
        const r = e.numberOfParams;
        switch (r) {
          case 0:
            n = undefined;
            break;
          case 1:
            n = Ie(e.parameterStructures, t[0]);
            break;
          default:
            n = [];
            for (let e = 0; e < t.length && e < r; e++) {
              n.push(pe(t[e]));
            }
            if (t.length < r) {
              for (let e = t.length; e < r; e++) {
                n.push(null);
              }
            }
        }
        return n;
      }
      const ye = {
        sendNotification: (e, ...t) => {
          let r;
          let o;
          fe();
          if (c.string(e)) {
            r = e;
            const n = t[0];
            let s = 0;
            let a = u.ParameterStructures.auto;
            if (u.ParameterStructures.is(n)) {
              s = 1;
              a = n;
            }
            const A = t.length;
            const c = A - s;
            switch (c) {
              case 0:
                o = undefined;
                break;
              case 1:
                o = Ie(a, t[s]);
                break;
              default:
                if (a === u.ParameterStructures.byName) {
                  throw new Error(`Received ${c} parameters for 'by Name' notification parameter structure.`);
                }
                o = t.slice(s, A).map(e => pe(e));
            }
          } else {
            const n = t;
            r = e.method;
            o = Ee(e, n);
          }
          const a = {
            jsonrpc: Q,
            method: r,
            params: o
          };
          (function (e) {
            if (Y !== I.Off && K) {
              if (H === y.Text) {
                let t;
                if (Y === I.Verbose || Y === I.Compact) {
                  t = e.params ? `Params: ${le(e.params)}\n\n` : 'No parameters provided.\n\n';
                }
                K.log(`Sending notification '${e.method}'.`, t);
              } else {
                he('send-notification', e);
              }
            }
          })(a);
          return n.write(a).catch(e => {
            s.error('Sending notification failed.');
            throw e;
          });
        },
        onNotification: (e, t) => {
          let n;
          fe();
          if (c.func(e)) {
            M = e;
          } else {
            if (t) {
              if (c.string(e)) {
                n = e;
                O.set(e, {
                  type: undefined,
                  handler: t
                });
              } else {
                n = e.method;
                O.set(e.method, {
                  type: e,
                  handler: t
                });
              }
            }
          }
          return {
            dispose: () => {
              if (n !== undefined) {
                O.delete(n);
              } else {
                M = undefined;
              }
            }
          };
        },
        onProgress: (e, t, n) => {
          if (N.has(t)) {
            throw new Error(`Progress handler for token ${t} already registered`);
          }
          N.set(t, n);
          return {
            dispose: () => {
              N.delete(t);
            }
          };
        },
        sendProgress: (e, t, n) => ye.sendNotification(p.type, {
          token: t,
          value: n
        }),
        onUnhandledProgress: V.event,
        sendRequest: (e, ...t) => {
          function r(e, t) {
            const n = Z.sender.sendCancellation(e, t);
            if (n === undefined) {
              s.log(`Received no promise from cancellation strategy when cancelling id ${t}`);
            } else {
              n.catch(() => {
                s.log(`Sending cancellation messages for id ${t} failed.`);
              });
            }
          }
          let o;
          let A;
          let l;
          fe();
          (function () {
            if (!te()) {
              throw new Error('Call listen() first.');
            }
          })();
          if (c.string(e)) {
            o = e;
            const n = t[0];
            const r = t[t.length - 1];
            let s = 0;
            let a = u.ParameterStructures.auto;
            if (u.ParameterStructures.is(n)) {
              s = 1;
              a = n;
            }
            let c = t.length;
            if (d.CancellationToken.is(r)) {
              c -= 1;
              l = r;
            }
            const g = c - s;
            switch (g) {
              case 0:
                A = undefined;
                break;
              case 1:
                A = Ie(a, t[s]);
                break;
              default:
                if (a === u.ParameterStructures.byName) {
                  throw new Error(`Received ${g} parameters for 'by Name' request parameter structure.`);
                }
                A = t.slice(s, c).map(e => pe(e));
            }
          } else {
            const n = t;
            o = e.method;
            A = Ee(e, n);
            const r = e.numberOfParams;
            l = d.CancellationToken.is(n[r]) ? n[r] : undefined;
          }
          const g = a++;
          let h;
          let f = false;
          if (l !== undefined) {
            if (l.isCancellationRequested) {
              f = true;
            } else {
              h = l.onCancellationRequested(() => {
                r(ye, g);
              });
            }
          }
          const p = {
            jsonrpc: Q,
            id: g,
            method: o,
            params: A
          };
          (function (e) {
            if (Y !== I.Off && K) {
              if (H === y.Text) {
                let t;
                if ((Y === I.Verbose || Y === I.Compact) && !!e.params) {
                  t = `Params: ${le(e.params)}\n\n`;
                }
                K.log(`Sending request '${e.method} - (${e.id})'.`, t);
              } else {
                he('send-request', e);
              }
            }
          })(p);
          if (typeof Z.sender.enableCancellation == 'function') {
            Z.sender.enableCancellation(p);
          }
          return new Promise(async (e, t) => {
            const a = {
              method: o,
              timerStart: Date.now(),
              resolve: t => {
                e(t);
                Z.sender.cleanup(g);
                h?.dispose();
              },
              reject: e => {
                t(e);
                Z.sender.cleanup(g);
                h?.dispose();
              }
            };
            try {
              j.set(g, a);
              await n.write(p);
              if (f) {
                r(ye, g);
              }
            } catch (e) {
              j.delete(g);
              a.reject(new u.ResponseError(u.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));
              s.error('Sending request failed.');
              throw e;
            }
          });
        },
        onRequest: (e, t) => {
          fe();
          let n = null;
          if (m.is(e)) {
            n = undefined;
            S = e;
          } else {
            if (c.string(e)) {
              n = null;
              if (t !== undefined) {
                n = e;
                F.set(e, {
                  handler: t,
                  type: undefined
                });
              }
            } else {
              if (t !== undefined) {
                n = e.method;
                F.set(e.method, {
                  type: e,
                  handler: t
                });
              }
            }
          }
          return {
            dispose: () => {
              if (n !== null) {
                if (n !== undefined) {
                  F.delete(n);
                } else {
                  S = undefined;
                }
              }
            }
          };
        },
        hasPendingResponse: () => j.size > 0,
        trace: async (e, t, n) => {
          let r = false;
          let o = y.Text;
          if (n !== undefined) {
            if (c.boolean(n)) {
              r = n;
            } else {
              r = n.sendNotification || false;
              o = n.traceFormat || y.Text;
            }
          }
          Y = e;
          H = o;
          K = Y === I.Off ? undefined : t;
          if (!!r && !ne() && !re()) {
            await ye.sendNotification(w.type, {
              value: I.toString(e)
            });
          }
        },
        onError: z.event,
        onClose: $.event,
        onUnhandledNotification: W.event,
        onDispose: X.event,
        end: () => {
          n.end();
        },
        dispose: () => {
          if (re()) {
            return;
          }
          J = x.Disposed;
          X.fire(undefined);
          const t = new u.ResponseError(u.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');
          for (const e of j.values()) {
            e.reject(t);
          }
          j = new Map();
          G = new Map();
          q = new Set();
          U = new l.LinkedMap();
          if (c.func(n.dispose)) {
            n.dispose();
          }
          if (c.func(e.dispose)) {
            e.dispose();
          }
        },
        listen: () => {
          fe();
          (function () {
            if (te()) {
              throw new P(v.AlreadyListening, 'Connection is already listening');
            }
          })();
          J = x.Listening;
          e.listen(ce);
        },
        inspect: () => {
          A.default().console.log('inspect');
        }
      };
      ye.onNotification(_.type, e => {
        if (Y === I.Off || !K) {
          return;
        }
        const t = Y === I.Verbose || Y === I.Compact;
        K.log(e.message, t ? e.verbose : undefined);
      });
      ye.onNotification(p.type, async e => {
        const t = N.get(e.token);
        if (t) {
          await t(e.value);
        } else {
          V.fire(e);
        }
      });
      return ye;
    };
  },
  34019: (module, exports) => {
    "use strict";

    var n;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Disposable = undefined;
    (function (e) {
      e.create = function (e) {
        return {
          dispose: e
        };
      };
    })(n || (exports.Disposable = n = {}));
  },
  62676: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Emitter = exports.Event = undefined;
    const o = __importDefault(require(69590));
    var s;
    (function (e) {
      const t = {
        dispose() {}
      };
      e.None = function () {
        return t;
      };
    })(s || (exports.Event = s = {}));
    class a {
      _callbacks;
      _contexts;
      add(e, t = null, n) {
        if (!this._callbacks) {
          this._callbacks = [];
          this._contexts = [];
        }
        this._callbacks.push(e);
        this._contexts.push(t);
        if (Array.isArray(n)) {
          n.push({
            dispose: () => this.remove(e, t)
          });
        }
      }
      remove(e, t = null) {
        if (!this._callbacks) {
          return;
        }
        let n = false;
        for (let r = 0, o = this._callbacks.length; r < o; r++) {
          if (this._callbacks[r] === e) {
            if (this._contexts[r] === t) {
              this._callbacks.splice(r, 1);
              this._contexts.splice(r, 1);
              return;
            }
            n = true;
          }
        }
        if (n) {
          throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
      }
      invoke(...e) {
        if (!this._callbacks) {
          return [];
        }
        const t = [];
        const n = this._callbacks.slice(0);
        const r = this._contexts.slice(0);
        for (let s = 0, a = n.length; s < a; s++) {
          try {
            t.push(n[s].apply(r[s], e));
          } catch (e) {
            o.default().console.error(e);
          }
        }
        return t;
      }
      isEmpty() {
        return !this._callbacks || this._callbacks.length === 0;
      }
      dispose() {
        this._callbacks = undefined;
        this._contexts = undefined;
      }
    }
    class A {
      _options;
      static _noop = function () {};
      _event;
      _callbacks;
      constructor(e) {
        this._options = e;
      }
      get event() {
        if (!this._event) {
          this._event = (e, t, n) => {
            if (!this._callbacks) {
              this._callbacks = new a();
            }
            if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {
              this._options.onFirstListenerAdd(this);
            }
            this._callbacks.add(e, t);
            const r = {
              dispose: () => {
                if (this._callbacks) {
                  this._callbacks.remove(e, t);
                  r.dispose = A._noop;
                  if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {
                    this._options.onLastListenerRemove(this);
                  }
                }
              }
            };
            if (Array.isArray(n)) {
              n.push(r);
            }
            return r;
          };
        }
        return this._event;
      }
      fire(e) {
        if (this._callbacks) {
          this._callbacks.invoke.call(this._callbacks, e);
        }
      }
      dispose() {
        if (this._callbacks) {
          this._callbacks.dispose();
          this._callbacks = undefined;
        }
      }
    }
    exports.Emitter = A;
  },
  78585: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = function (e) {
      return typeof e == 'function';
    };
    exports.array = r;
    exports.stringArray = function (e) {
      return r(e) && e.every(e => n(e));
    };
  },
  93352: (module, exports) => {
    "use strict";

    var n;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LRUCache = exports.LinkedMap = exports.Touch = undefined;
    (function (e) {
      e.None = 0;
      e.First = 1;
      e.AsOld = e.First;
      e.Last = 2;
      e.AsNew = e.Last;
    })(n || (exports.Touch = n = {}));
    class r {
      [Symbol.toStringTag] = 'LinkedMap';
      _map;
      _head;
      _tail;
      _size;
      _state;
      constructor() {
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state = 0;
      }
      clear() {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state++;
      }
      isEmpty() {
        return !this._head && !this._tail;
      }
      get size() {
        return this._size;
      }
      get first() {
        return this._head?.value;
      }
      get last() {
        return this._tail?.value;
      }
      before(e) {
        const t = this._map.get(e);
        if (t) {
          return t.previous?.value;
        } else {
          return undefined;
        }
      }
      after(e) {
        const t = this._map.get(e);
        if (t) {
          return t.next?.value;
        } else {
          return undefined;
        }
      }
      has(e) {
        return this._map.has(e);
      }
      get(e, t = n.None) {
        const r = this._map.get(e);
        if (r) {
          if (t !== n.None) {
            this.touch(r, t);
          }
          return r.value;
        }
      }
      set(e, t, r = n.None) {
        let o = this._map.get(e);
        if (o) {
          o.value = t;
          if (r !== n.None) {
            this.touch(o, r);
          }
        } else {
          o = {
            key: e,
            value: t,
            next: undefined,
            previous: undefined
          };
          switch (r) {
            case n.None:
              this.addItemLast(o);
              break;
            case n.First:
              this.addItemFirst(o);
              break;
            case n.Last:
            default:
              this.addItemLast(o);
          }
          this._map.set(e, o);
          this._size++;
        }
        return this;
      }
      delete(e) {
        return !!this.remove(e);
      }
      remove(e) {
        const t = this._map.get(e);
        if (t) {
          this._map.delete(e);
          this.removeItem(t);
          this._size--;
          return t.value;
        }
      }
      shift() {
        if (!this._head && !this._tail) {
          return;
        }
        if (!this._head || !this._tail) {
          throw new Error('Invalid list');
        }
        const e = this._head;
        this._map.delete(e.key);
        this.removeItem(e);
        this._size--;
        return e.value;
      }
      forEach(e, t) {
        const n = this._state;
        let r = this._head;
        while (r) {
          if (t) {
            e.bind(t)(r.value, r.key, this);
          } else {
            e(r.value, r.key, this);
          }
          if (this._state !== n) {
            throw new Error('LinkedMap got modified during iteration.');
          }
          r = r.next;
        }
      }
      keys() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: t.key,
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      values() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: t.value,
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      entries() {
        const e = this._state;
        let t = this._head;
        const n = {
          [Symbol.iterator]: () => n,
          next: () => {
            if (this._state !== e) {
              throw new Error('LinkedMap got modified during iteration.');
            }
            if (t) {
              const e = {
                value: [t.key, t.value],
                done: false
              };
              t = t.next;
              return e;
            }
            return {
              value: undefined,
              done: true
            };
          }
        };
        return n;
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      trimOld(e) {
        if (e >= this.size) {
          return;
        }
        if (e === 0) {
          this.clear();
          return;
        }
        let t = this._head;
        let n = this.size;
        while (t && n > e) {
          this._map.delete(t.key);
          t = t.next;
          n--;
        }
        this._head = t;
        this._size = n;
        if (t) {
          t.previous = undefined;
        }
        this._state++;
      }
      addItemFirst(e) {
        if (this._head || this._tail) {
          if (!this._head) {
            throw new Error('Invalid list');
          }
          e.next = this._head;
          this._head.previous = e;
        } else {
          this._tail = e;
        }
        this._head = e;
        this._state++;
      }
      addItemLast(e) {
        if (this._head || this._tail) {
          if (!this._tail) {
            throw new Error('Invalid list');
          }
          e.previous = this._tail;
          this._tail.next = e;
        } else {
          this._head = e;
        }
        this._tail = e;
        this._state++;
      }
      removeItem(e) {
        if (e === this._head && e === this._tail) {
          this._head = undefined;
          this._tail = undefined;
        } else {
          if (e === this._head) {
            if (!e.next) {
              throw new Error('Invalid list');
            }
            e.next.previous = undefined;
            this._head = e.next;
          } else {
            if (e === this._tail) {
              if (!e.previous) {
                throw new Error('Invalid list');
              }
              e.previous.next = undefined;
              this._tail = e.previous;
            } else {
              const t = e.next;
              const n = e.previous;
              if (!t || !n) {
                throw new Error('Invalid list');
              }
              t.previous = n;
              n.next = t;
            }
          }
        }
        e.next = undefined;
        e.previous = undefined;
        this._state++;
      }
      touch(e, t) {
        if (!this._head || !this._tail) {
          throw new Error('Invalid list');
        }
        if (t === n.First || t === n.Last) {
          if (t === n.First) {
            if (e === this._head) {
              return;
            }
            const t = e.next;
            const n = e.previous;
            if (e === this._tail) {
              n.next = undefined;
              this._tail = n;
            } else {
              t.previous = n;
              n.next = t;
            }
            e.previous = undefined;
            e.next = this._head;
            this._head.previous = e;
            this._head = e;
            this._state++;
          } else {
            if (t === n.Last) {
              if (e === this._tail) {
                return;
              }
              const t = e.next;
              const n = e.previous;
              if (e === this._head) {
                t.previous = undefined;
                this._head = t;
              } else {
                t.previous = n;
                n.next = t;
              }
              e.next = undefined;
              e.previous = this._tail;
              this._tail.next = e;
              this._tail = e;
              this._state++;
            }
          }
        }
      }
      toJSON() {
        const e = [];
        this.forEach((t, n) => {
          e.push([n, t]);
        });
        return e;
      }
      fromJSON(e) {
        this.clear();
        for (const [t, n] of e) {
          this.set(t, n);
        }
      }
    }
    exports.LinkedMap = r;
    exports.LRUCache = class extends r {
      _limit;
      _ratio;
      constructor(e, t = 1) {
        super();
        this._limit = e;
        this._ratio = Math.min(Math.max(0, t), 1);
      }
      get limit() {
        return this._limit;
      }
      set limit(e) {
        this._limit = e;
        this.checkTrim();
      }
      get ratio() {
        return this._ratio;
      }
      set ratio(e) {
        this._ratio = Math.min(Math.max(0, e), 1);
        this.checkTrim();
      }
      get(e, t = n.AsNew) {
        return super.get(e, t);
      }
      peek(e) {
        return super.get(e, n.None);
      }
      set(e, t) {
        super.set(e, t, n.Last);
        this.checkTrim();
        return this;
      }
      checkTrim() {
        if (this.size > this._limit) {
          this.trimOld(Math.round(this._limit * this._ratio));
        }
      }
    };
  },
  89244: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.AbstractMessageBuffer = undefined;
    exports.AbstractMessageBuffer = class {
      _encoding;
      _chunks;
      _totalLength;
      constructor(e = 'utf-8') {
        this._encoding = e;
        this._chunks = [];
        this._totalLength = 0;
      }
      get encoding() {
        return this._encoding;
      }
      append(e) {
        const t = typeof e == 'string' ? this.fromString(e, this._encoding) : e;
        this._chunks.push(t);
        this._totalLength += t.byteLength;
      }
      tryReadHeaders(e = false) {
        if (this._chunks.length === 0) {
          return;
        }
        let t = 0;
        let n = 0;
        let r = 0;
        let o = 0;
        e: while (n < this._chunks.length) {
          const e = this._chunks[n];
          for (r = 0; r < e.length;) {
            switch (e[r]) {
              case 13:
                switch (t) {
                  case 0:
                    t = 1;
                    break;
                  case 2:
                    t = 3;
                    break;
                  default:
                    t = 0;
                }
                break;
              case 10:
                switch (t) {
                  case 1:
                    t = 2;
                    break;
                  case 3:
                    t = 4;
                    r++;
                    break e;
                  default:
                    t = 0;
                }
                break;
              default:
                t = 0;
            }
            r++;
          }
          o += e.byteLength;
          n++;
        }
        if (t !== 4) {
          return;
        }
        const s = this._read(o + r);
        const a = new Map();
        const A = this.toString(s, 'ascii').split('\r\n');
        if (A.length < 2) {
          return a;
        }
        for (let t = 0; t < A.length - 2; t++) {
          const n = A[t];
          const r = n.indexOf(':');
          if (r === -1) {
            throw new Error(`Message header must separate key and value using ':'\n${n}`);
          }
          const o = n.substr(0, r);
          const s = n.substr(r + 1).trim();
          a.set(e ? o.toLowerCase() : o, s);
        }
        return a;
      }
      tryReadBody(e) {
        if (!(this._totalLength < e)) {
          return this._read(e);
        }
      }
      get numberOfBytes() {
        return this._totalLength;
      }
      _read(e) {
        if (e === 0) {
          return this.emptyBuffer();
        }
        if (e > this._totalLength) {
          throw new Error('Cannot read so many bytes!');
        }
        if (this._chunks[0].byteLength === e) {
          const t = this._chunks[0];
          this._chunks.shift();
          this._totalLength -= e;
          return this.asNative(t);
        }
        if (this._chunks[0].byteLength > e) {
          const t = this._chunks[0];
          const n = this.asNative(t, e);
          this._chunks[0] = t.slice(e);
          this._totalLength -= e;
          return n;
        }
        const t = this.allocNative(e);
        let n = 0;
        while (e > 0) {
          const r = this._chunks[0];
          if (r.byteLength > e) {
            const o = r.slice(0, e);
            t.set(o, n);
            n += e;
            this._chunks[0] = r.slice(e);
            this._totalLength -= e;
            e -= e;
          } else {
            t.set(r, n);
            n += r.byteLength;
            this._chunks.shift();
            this._totalLength -= r.byteLength;
            e -= r.byteLength;
          }
        }
        return t;
      }
    };
  },
  59085: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = undefined;
    const A = __importDefault(require(69590));
    const c = __importStar(require(78585));
    const u = require(62676);
    const l = require(94323);
    var g;
    var d;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.listen) && c.func(t.dispose) && c.func(t.onError) && c.func(t.onClose) && c.func(t.onPartialMessage);
      };
    })(g || (exports.MessageReader = g = {}));
    class h {
      errorEmitter;
      closeEmitter;
      partialMessageEmitter;
      constructor() {
        this.errorEmitter = new u.Emitter();
        this.closeEmitter = new u.Emitter();
        this.partialMessageEmitter = new u.Emitter();
      }
      dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
      }
      get onError() {
        return this.errorEmitter.event;
      }
      fireError(e) {
        this.errorEmitter.fire(this.asError(e));
      }
      get onClose() {
        return this.closeEmitter.event;
      }
      fireClose() {
        this.closeEmitter.fire(undefined);
      }
      get onPartialMessage() {
        return this.partialMessageEmitter.event;
      }
      firePartialMessage(e) {
        this.partialMessageEmitter.fire(e);
      }
      asError(e) {
        if (e instanceof Error) {
          return e;
        } else {
          return new Error(`Reader received error. Reason: ${c.string(e.message) ? e.message : 'unknown'}`);
        }
      }
    }
    exports.AbstractMessageReader = h;
    (function (e) {
      e.fromOptions = function (e) {
        let t;
        let n;
        const r = new Map();
        let o;
        const s = new Map();
        if (e === undefined || typeof e == 'string') {
          t = e ?? 'utf-8';
        } else {
          t = e.charset ?? 'utf-8';
          if (e.contentDecoder !== undefined) {
            n = e.contentDecoder;
            r.set(n.name, n);
          }
          if (e.contentDecoders !== undefined) {
            for (const t of e.contentDecoders) {
              r.set(t.name, t);
            }
          }
          if (e.contentTypeDecoder !== undefined) {
            o = e.contentTypeDecoder;
            s.set(o.name, o);
          }
          if (e.contentTypeDecoders !== undefined) {
            for (const t of e.contentTypeDecoders) {
              s.set(t.name, t);
            }
          }
        }
        if (o === undefined) {
          o = A.default().applicationJson.decoder;
          s.set(o.name, o);
        }
        return {
          charset: t,
          contentDecoder: n,
          contentDecoders: r,
          contentTypeDecoder: o,
          contentTypeDecoders: s
        };
      };
    })(d ||= {});
    exports.ReadableStreamMessageReader = class extends h {
      readable;
      options;
      callback;
      nextMessageLength;
      messageToken;
      buffer;
      partialMessageTimer;
      _partialMessageTimeout;
      readSemaphore;
      constructor(e, t) {
        super();
        this.readable = e;
        this.options = d.fromOptions(t);
        this.buffer = A.default().messageBuffer.create(this.options.charset);
        this._partialMessageTimeout = 10000;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.readSemaphore = new l.Semaphore(1);
      }
      set partialMessageTimeout(e) {
        this._partialMessageTimeout = e;
      }
      get partialMessageTimeout() {
        return this._partialMessageTimeout;
      }
      listen(e) {
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = e;
        const t = this.readable.onData(e => {
          this.onData(e);
        });
        this.readable.onError(e => this.fireError(e));
        this.readable.onClose(() => this.fireClose());
        return t;
      }
      onData(e) {
        try {
          for (this.buffer.append(e);;) {
            if (this.nextMessageLength === -1) {
              const e = this.buffer.tryReadHeaders(true);
              if (!e) {
                return;
              }
              const t = e.get('content-length');
              if (!t) {
                this.fireError(new Error(`Header must provide a Content-Length property.\n${JSON.stringify(Object.fromEntries(e))}`));
                return;
              }
              const n = parseInt(t);
              if (isNaN(n)) {
                this.fireError(new Error(`Content-Length value must be a number. Got ${t}`));
                return;
              }
              this.nextMessageLength = n;
            }
            const e = this.buffer.tryReadBody(this.nextMessageLength);
            if (e === undefined) {
              this.setPartialMessageTimer();
              return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            this.readSemaphore.lock(async () => {
              const t = this.options.contentDecoder !== undefined ? await this.options.contentDecoder.decode(e) : e;
              const n = await this.options.contentTypeDecoder.decode(t, this.options);
              this.callback(n);
            }).catch(e => {
              this.fireError(e);
            });
          }
        } catch (e) {
          this.fireError(e);
        }
      }
      clearPartialMessageTimer() {
        if (this.partialMessageTimer) {
          this.partialMessageTimer.dispose();
          this.partialMessageTimer = undefined;
        }
      }
      setPartialMessageTimer() {
        this.clearPartialMessageTimer();
        if (!(this._partialMessageTimeout <= 0)) {
          this.partialMessageTimer = A.default().timer.setTimeout((e, t) => {
            this.partialMessageTimer = undefined;
            if (e === this.messageToken) {
              this.firePartialMessage({
                messageToken: e,
                waitingTime: t
              });
              this.setPartialMessageTimer();
            }
          }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
        }
      }
    };
  },
  23193: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = undefined;
    const A = __importDefault(require(69590));
    const c = __importStar(require(78585));
    const u = require(94323);
    const l = require(62676);
    var g;
    var d;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && c.func(t.dispose) && c.func(t.onClose) && c.func(t.onError) && c.func(t.write);
      };
    })(g || (exports.MessageWriter = g = {}));
    class h {
      errorEmitter;
      closeEmitter;
      constructor() {
        this.errorEmitter = new l.Emitter();
        this.closeEmitter = new l.Emitter();
      }
      dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
      }
      get onError() {
        return this.errorEmitter.event;
      }
      fireError(e, t, n) {
        this.errorEmitter.fire([this.asError(e), t, n]);
      }
      get onClose() {
        return this.closeEmitter.event;
      }
      fireClose() {
        this.closeEmitter.fire(undefined);
      }
      asError(e) {
        if (e instanceof Error) {
          return e;
        } else {
          return new Error(`Writer received error. Reason: ${c.string(e.message) ? e.message : 'unknown'}`);
        }
      }
    }
    exports.AbstractMessageWriter = h;
    (function (e) {
      e.fromOptions = function (e) {
        if (e === undefined || typeof e == 'string') {
          return {
            charset: e ?? 'utf-8',
            contentTypeEncoder: A.default().applicationJson.encoder
          };
        } else {
          return {
            charset: e.charset ?? 'utf-8',
            contentEncoder: e.contentEncoder,
            contentTypeEncoder: e.contentTypeEncoder ?? A.default().applicationJson.encoder
          };
        }
      };
    })(d ||= {});
    exports.WriteableStreamMessageWriter = class extends h {
      writable;
      options;
      errorCount;
      writeSemaphore;
      constructor(e, t) {
        super();
        this.writable = e;
        this.options = d.fromOptions(t);
        this.errorCount = 0;
        this.writeSemaphore = new u.Semaphore(1);
        this.writable.onError(e => this.fireError(e));
        this.writable.onClose(() => this.fireClose());
      }
      async write(e) {
        return this.writeSemaphore.lock(async () => this.options.contentTypeEncoder.encode(e, this.options).then(e => this.options.contentEncoder !== undefined ? this.options.contentEncoder.encode(e) : e).then(t => {
          const n = [];
          n.push('Content-Length: ', t.byteLength.toString(), '\r\n');
          n.push('\r\n');
          return this.doWrite(e, n, t);
        }, e => {
          this.fireError(e);
          throw e;
        }));
      }
      async doWrite(e, t, n) {
        try {
          await this.writable.write(t.join(''), 'ascii');
          return this.writable.write(n);
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {
        this.writable.end();
      }
    };
  },
  96177: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = undefined;
    const a = __importStar(require(78585));
    var A;
    var c;
    (function (e) {
      e.ParseError = -32700;
      e.InvalidRequest = -32600;
      e.MethodNotFound = -32601;
      e.InvalidParams = -32602;
      e.InternalError = -32603;
      e.jsonrpcReservedErrorRangeStart = -32099;
      e.serverErrorStart = -32099;
      e.MessageWriteError = -32099;
      e.MessageReadError = -32098;
      e.PendingResponseRejected = -32097;
      e.ConnectionInactive = -32096;
      e.ServerNotInitialized = -32002;
      e.UnknownErrorCode = -32001;
      e.jsonrpcReservedErrorRangeEnd = -32000;
      e.serverErrorEnd = -32000;
    })(A || (exports.ErrorCodes = A = {}));
    class u extends Error {
      code;
      data;
      constructor(e, t, n) {
        super(t);
        this.code = a.number(e) ? e : A.UnknownErrorCode;
        this.data = n;
        Object.setPrototypeOf(this, u.prototype);
      }
      toJson() {
        const e = {
          code: this.code,
          message: this.message
        };
        if (this.data !== undefined) {
          e.data = this.data;
        }
        return e;
      }
    }
    exports.ResponseError = u;
    class l {
      kind;
      static auto = new l('auto');
      static byPosition = new l('byPosition');
      static byName = new l('byName');
      constructor(e) {
        this.kind = e;
      }
      static is(e) {
        return e === l.auto || e === l.byName || e === l.byPosition;
      }
      toString() {
        return this.kind;
      }
    }
    exports.ParameterStructures = l;
    class g {
      method;
      numberOfParams;
      constructor(e, t) {
        this.method = e;
        this.numberOfParams = t;
      }
      get parameterStructures() {
        return l.auto;
      }
    }
    exports.AbstractMessageSignature = g;
    exports.RequestType0 = class extends g {
      _;
      constructor(e) {
        super(e, 0);
      }
    };
    exports.RequestType = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.RequestType1 = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.RequestType2 = class extends g {
      _;
      constructor(e) {
        super(e, 2);
      }
    };
    exports.RequestType3 = class extends g {
      _;
      constructor(e) {
        super(e, 3);
      }
    };
    exports.RequestType4 = class extends g {
      _;
      constructor(e) {
        super(e, 4);
      }
    };
    exports.RequestType5 = class extends g {
      _;
      constructor(e) {
        super(e, 5);
      }
    };
    exports.RequestType6 = class extends g {
      _;
      constructor(e) {
        super(e, 6);
      }
    };
    exports.RequestType7 = class extends g {
      _;
      constructor(e) {
        super(e, 7);
      }
    };
    exports.RequestType8 = class extends g {
      _;
      constructor(e) {
        super(e, 8);
      }
    };
    exports.RequestType9 = class extends g {
      _;
      constructor(e) {
        super(e, 9);
      }
    };
    exports.NotificationType = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.NotificationType0 = class extends g {
      _;
      constructor(e) {
        super(e, 0);
      }
    };
    exports.NotificationType1 = class extends g {
      _parameterStructures;
      _;
      constructor(e, t = l.auto) {
        super(e, 1);
        this._parameterStructures = t;
      }
      get parameterStructures() {
        return this._parameterStructures;
      }
    };
    exports.NotificationType2 = class extends g {
      _;
      constructor(e) {
        super(e, 2);
      }
    };
    exports.NotificationType3 = class extends g {
      _;
      constructor(e) {
        super(e, 3);
      }
    };
    exports.NotificationType4 = class extends g {
      _;
      constructor(e) {
        super(e, 4);
      }
    };
    exports.NotificationType5 = class extends g {
      _;
      constructor(e) {
        super(e, 5);
      }
    };
    exports.NotificationType6 = class extends g {
      _;
      constructor(e) {
        super(e, 6);
      }
    };
    exports.NotificationType7 = class extends g {
      _;
      constructor(e) {
        super(e, 7);
      }
    };
    exports.NotificationType8 = class extends g {
      _;
      constructor(e) {
        super(e, 8);
      }
    };
    exports.NotificationType9 = class extends g {
      _;
      constructor(e) {
        super(e, 9);
      }
    };
    (function (e) {
      e.isRequest = function (e) {
        const t = e;
        return t && a.string(t.method) && (a.string(t.id) || a.number(t.id));
      };
      e.isNotification = function (e) {
        const t = e;
        return t && a.string(t.method) && e.id === undefined;
      };
      e.isResponse = function (e) {
        const t = e;
        return t && (t.result !== undefined || !!t.error) && (a.string(t.id) || a.number(t.id) || t.id === null);
      };
    })(c || (exports.Message = c = {}));
  },
  69590: (module, exports) => {
    "use strict";

    let n;
    function r() {
      if (n === undefined) {
        throw new Error('No runtime abstraction layer installed');
      }
      return n;
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    (function (e) {
      e.install = function (e) {
        if (e === undefined) {
          throw new Error('No runtime abstraction layer provided');
        }
        n = e;
      };
    })(r ||= {});
    exports.default = r;
  },
  94323: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Semaphore = undefined;
    const o = __importDefault(require(69590));
    exports.Semaphore = class {
      _capacity;
      _active;
      _waiting;
      constructor(e = 1) {
        if (e <= 0) {
          throw new Error('Capacity must be greater than 0');
        }
        this._capacity = e;
        this._active = 0;
        this._waiting = [];
      }
      lock(e) {
        return new Promise((t, n) => {
          this._waiting.push({
            thunk: e,
            resolve: t,
            reject: n
          });
          this.runNext();
        });
      }
      get active() {
        return this._active;
      }
      runNext() {
        if (this._waiting.length !== 0 && this._active !== this._capacity) {
          o.default().timer.setImmediate(() => this.doRunNext());
        }
      }
      doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
          return;
        }
        const e = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
          throw new Error('To many thunks active');
        }
        try {
          const t = e.thunk();
          if (t instanceof Promise) {
            t.then(t => {
              this._active--;
              e.resolve(t);
              this.runNext();
            }, t => {
              this._active--;
              e.reject(t);
              this.runNext();
            });
          } else {
            this._active--;
            e.resolve(t);
            this.runNext();
          }
        } catch (t) {
          this._active--;
          e.reject(t);
          this.runNext();
        }
      }
    };
  },
  74996: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = undefined;
    const r = require(59850);
    var o;
    (function (e) {
      e.Continue = 0;
      e.Cancelled = 1;
    })(o ||= {});
    exports.SharedArraySenderStrategy = class {
      buffers;
      constructor() {
        this.buffers = new Map();
      }
      enableCancellation(e) {
        if (e.id === null) {
          return;
        }
        const t = new SharedArrayBuffer(4);
        new Int32Array(t, 0, 1)[0] = o.Continue;
        this.buffers.set(e.id, t);
        e.$cancellationData = t;
      }
      async sendCancellation(e, t) {
        const n = this.buffers.get(t);
        if (n === undefined) {
          return;
        }
        const r = new Int32Array(n, 0, 1);
        Atomics.store(r, 0, o.Cancelled);
      }
      cleanup(e) {
        this.buffers.delete(e);
      }
      dispose() {
        this.buffers.clear();
      }
    };
    class s {
      data;
      constructor(e) {
        this.data = new Int32Array(e, 0, 1);
      }
      get isCancellationRequested() {
        return Atomics.load(this.data, 0) === o.Cancelled;
      }
      get onCancellationRequested() {
        throw new Error('Cancellation over SharedArrayBuffer doesn\'t support cancellation events');
      }
    }
    class a {
      token;
      constructor(e) {
        this.token = new s(e);
      }
      cancel() {}
      dispose() {}
    }
    exports.SharedArrayReceiverStrategy = class {
      kind = 'request';
      createCancellationTokenSource(e) {
        const t = e.$cancellationData;
        if (t === undefined) {
          return new r.CancellationTokenSource();
        } else {
          return new a(t);
        }
      }
    };
  },
  77123: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = undefined;
    const c = __importDefault(require(9571));
    c.default.install();
    const u = __importStar(require(16928));
    const l = __importStar(require(70857));
    const g = __importStar(require(79896));
    const d = require(76982);
    const h = require(69278);
    const f = require(53281);
    __exportStar(require(53281), exports);
    class p extends f.AbstractMessageReader {
      process;
      constructor(e) {
        super();
        this.process = e;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose());
      }
      listen(e) {
        this.process.on('message', e);
        return f.Disposable.create(() => this.process.off('message', e));
      }
    }
    exports.IPCMessageReader = p;
    class m extends f.AbstractMessageWriter {
      process;
      errorCount;
      constructor(e) {
        super();
        this.process = e;
        this.errorCount = 0;
        const t = this.process;
        t.on('error', e => this.fireError(e));
        t.on('close', () => this.fireClose);
      }
      write(e) {
        try {
          if (typeof this.process.send == 'function') {
            this.process.send(e, undefined, undefined, t => {
              if (t) {
                this.errorCount++;
                this.handleError(t, e);
              } else {
                this.errorCount = 0;
              }
            });
          }
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.IPCMessageWriter = m;
    class I extends f.AbstractMessageReader {
      onData;
      constructor(e) {
        super();
        this.onData = new f.Emitter();
        e.on('close', () => this.fireClose);
        e.on('error', e => this.fireError(e));
        e.on('message', e => {
          this.onData.fire(e);
        });
      }
      listen(e) {
        return this.onData.event(e);
      }
    }
    exports.PortMessageReader = I;
    class E extends f.AbstractMessageWriter {
      port;
      errorCount;
      constructor(e) {
        super();
        this.port = e;
        this.errorCount = 0;
        e.on('close', () => this.fireClose());
        e.on('error', e => this.fireError(e));
      }
      write(e) {
        try {
          this.port.postMessage(e);
          return Promise.resolve();
        } catch (t) {
          this.handleError(t, e);
          return Promise.reject(t);
        }
      }
      handleError(e, t) {
        this.errorCount++;
        this.fireError(e, t, this.errorCount);
      }
      end() {}
    }
    exports.PortMessageWriter = E;
    class y extends f.ReadableStreamMessageReader {
      constructor(e, t = 'utf-8') {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.SocketMessageReader = y;
    class w extends f.WriteableStreamMessageWriter {
      socket;
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
        this.socket = e;
      }
      dispose() {
        super.dispose();
        this.socket.destroy();
      }
    }
    exports.SocketMessageWriter = w;
    class _ extends f.ReadableStreamMessageReader {
      constructor(e, t) {
        super(c.default().stream.asReadableStream(e), t);
      }
    }
    exports.StreamMessageReader = _;
    class v extends f.WriteableStreamMessageWriter {
      constructor(e, t) {
        super(c.default().stream.asWritableStream(e), t);
      }
    }
    exports.StreamMessageWriter = v;
    const b = process.env.XDG_RUNTIME_DIR;
    const B = new Map([['linux', 107], ['darwin', 103]]);
    exports.generateRandomPipeName = function () {
      if (process.platform === 'win32') {
        return `\\\\.\\pipe\\lsp-${d.randomBytes(16).toString('hex')}-sock`;
      }
      let e = 32;
      const t = g.realpathSync(b ?? l.tmpdir());
      const n = B.get(process.platform);
      if (n !== undefined) {
        e = Math.min(n - t.length - 9, e);
      }
      if (e < 16) {
        throw new Error(`Unable to generate a random pipe name with ${e} characters.`);
      }
      const r = d.randomBytes(Math.floor(e / 2)).toString('hex');
      return u.join(t, `lsp-${r}.sock`);
    };
    exports.createClientPipeTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerPipeTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e);
      return [new y(n, t), new w(n, t)];
    };
    exports.createClientSocketTransport = function (e, t = 'utf-8') {
      let n;
      const r = new Promise((e, t) => {
        n = e;
      });
      return new Promise((o, s) => {
        const a = h.createServer(e => {
          a.close();
          n([new y(e, t), new w(e, t)]);
        });
        a.on('error', s);
        a.listen(e, '127.0.0.1', () => {
          a.removeListener('error', s);
          o({
            onConnected: () => r
          });
        });
      });
    };
    exports.createServerSocketTransport = function (e, t = 'utf-8') {
      const n = h.createConnection(e, '127.0.0.1');
      return [new y(n, t), new w(n, t)];
    };
    exports.createMessageConnection = function (e, t, n, r) {
      if (!n) {
        n = f.NullLogger;
      }
      const o = function (e) {
        const t = e;
        return t.read !== undefined && t.addListener !== undefined;
      }(e) ? new _(e) : e;
      const s = function (e) {
        const t = e;
        return t.write !== undefined && t.addListener !== undefined;
      }(t) ? new v(t) : t;
      if (f.ConnectionStrategy.is(r)) {
        r = {
          connectionStrategy: r
        };
      }
      return f.createMessageConnection(o, s, n, r);
    };
  },
  9571: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const r = require(39023);
    const o = require(53281);
    class s extends o.AbstractMessageBuffer {
      static emptyBuffer = Buffer.allocUnsafe(0);
      constructor(e = 'utf-8') {
        super(e);
      }
      emptyBuffer() {
        return s.emptyBuffer;
      }
      fromString(e, t) {
        return Buffer.from(e, t);
      }
      toString(e, t) {
        if (e instanceof Buffer) {
          return e.toString(t);
        } else {
          return new r.TextDecoder(t).decode(e);
        }
      }
      asNative(e, t) {
        if (t === undefined) {
          if (e instanceof Buffer) {
            return e;
          } else {
            return Buffer.from(e);
          }
        } else {
          if (e instanceof Buffer) {
            return e.slice(0, t);
          } else {
            return Buffer.from(e, 0, t);
          }
        }
      }
      allocNative(e) {
        return Buffer.allocUnsafe(e);
      }
    }
    class a {
      stream;
      constructor(e) {
        this.stream = e;
      }
      onClose(e) {
        this.stream.on('close', e);
        return o.Disposable.create(() => this.stream.off('close', e));
      }
      onError(e) {
        this.stream.on('error', e);
        return o.Disposable.create(() => this.stream.off('error', e));
      }
      onEnd(e) {
        this.stream.on('end', e);
        return o.Disposable.create(() => this.stream.off('end', e));
      }
      onData(e) {
        this.stream.on('data', e);
        return o.Disposable.create(() => this.stream.off('data', e));
      }
    }
    class A {
      stream;
      constructor(e) {
        this.stream = e;
      }
      onClose(e) {
        this.stream.on('close', e);
        return o.Disposable.create(() => this.stream.off('close', e));
      }
      onError(e) {
        this.stream.on('error', e);
        return o.Disposable.create(() => this.stream.off('error', e));
      }
      onEnd(e) {
        this.stream.on('end', e);
        return o.Disposable.create(() => this.stream.off('end', e));
      }
      write(e, t) {
        return new Promise((n, r) => {
          const o = e => {
            if (e == null) {
              n();
            } else {
              r(e);
            }
          };
          if (typeof e == 'string') {
            this.stream.write(e, t, o);
          } else {
            this.stream.write(e, o);
          }
        });
      }
      end() {
        this.stream.end();
      }
    }
    const c = Object.freeze({
      messageBuffer: Object.freeze({
        create: e => new s(e)
      }),
      applicationJson: Object.freeze({
        encoder: Object.freeze({
          name: 'application/json',
          encode: (e, t) => {
            try {
              return Promise.resolve(Buffer.from(JSON.stringify(e, undefined, 0), t.charset));
            } catch (e) {
              return Promise.reject(e);
            }
          }
        }),
        decoder: Object.freeze({
          name: 'application/json',
          decode: (e, t) => {
            try {
              if (e instanceof Buffer) {
                return Promise.resolve(JSON.parse(e.toString(t.charset)));
              } else {
                return Promise.resolve(JSON.parse(new r.TextDecoder(t.charset).decode(e)));
              }
            } catch (e) {
              return Promise.reject(e);
            }
          }
        })
      }),
      stream: Object.freeze({
        asReadableStream: e => new a(e),
        asWritableStream: e => new A(e)
      }),
      console,
      timer: Object.freeze({
        setTimeout(e, t, ...n) {
          const r = setTimeout(e, t, ...n);
          return {
            dispose: () => clearTimeout(r)
          };
        },
        setImmediate(e, ...t) {
          const n = setImmediate(e, ...t);
          return {
            dispose: () => clearImmediate(n)
          };
        },
        setInterval(e, t, ...n) {
          const r = setInterval(e, t, ...n);
          return {
            dispose: () => clearInterval(r)
          };
        }
      })
    });
    function u() {
      return c;
    }
    (function (e) {
      e.install = function () {
        o.RAL.install(c);
      };
    })(u ||= {});
    exports.default = u;
  },
  96353: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticPullMode = exports.vsdiag = undefined;
    __exportStar(require(98766), exports);
    __exportStar(require(14294), exports);
    var s = require(79214);
    Object.defineProperty(exports, 'vsdiag', {
      enumerable: true,
      get: function () {
        return s.vsdiag;
      }
    });
    Object.defineProperty(exports, 'DiagnosticPullMode', {
      enumerable: true,
      get: function () {
        return s.DiagnosticPullMode;
      }
    });
    __exportStar(require(29538), exports);
  },
  60490: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CallHierarchyFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a {
      client;
      middleware;
      constructor(e) {
        this.client = e;
        this.middleware = e.middleware;
      }
      prepareCallHierarchy(e, t, n) {
        const r = this.client;
        const s = this.middleware;
        const a = (e, t, n) => {
          const s = r.code2ProtocolConverter.asTextDocumentPositionParams(e, t);
          return r.sendRequest(o.CallHierarchyPrepareRequest.type, s, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asCallHierarchyItems(e, n), e => r.handleFailedRequest(o.CallHierarchyPrepareRequest.type, n, e, null));
        };
        if (s.prepareCallHierarchy) {
          return s.prepareCallHierarchy(e, t, n, a);
        } else {
          return a(e, t, n);
        }
      }
      provideCallHierarchyIncomingCalls(e, t) {
        const n = this.client;
        const r = this.middleware;
        const s = (e, t) => {
          const r = {
            item: n.code2ProtocolConverter.asCallHierarchyItem(e)
          };
          return n.sendRequest(o.CallHierarchyIncomingCallsRequest.type, r, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asCallHierarchyIncomingCalls(e, t), e => n.handleFailedRequest(o.CallHierarchyIncomingCallsRequest.type, t, e, null));
        };
        if (r.provideCallHierarchyIncomingCalls) {
          return r.provideCallHierarchyIncomingCalls(e, t, s);
        } else {
          return s(e, t);
        }
      }
      provideCallHierarchyOutgoingCalls(e, t) {
        const n = this.client;
        const r = this.middleware;
        const s = (e, t) => {
          const r = {
            item: n.code2ProtocolConverter.asCallHierarchyItem(e)
          };
          return n.sendRequest(o.CallHierarchyOutgoingCallsRequest.type, r, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asCallHierarchyOutgoingCalls(e, t), e => n.handleFailedRequest(o.CallHierarchyOutgoingCallsRequest.type, t, e, null));
        };
        if (r.provideCallHierarchyOutgoingCalls) {
          return r.provideCallHierarchyOutgoingCalls(e, t, s);
        } else {
          return s(e, t);
        }
      }
    }
    class A extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.CallHierarchyPrepareRequest.type);
      }
      fillClientCapabilities(e) {
        const t = e;
        s.ensure(s.ensure(t, 'textDocument'), 'callHierarchy').dynamicRegistration = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.callHierarchyProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = this._client;
        const n = new a(t);
        return [r.languages.registerCallHierarchyProvider(this._client.protocol2CodeConverter.asDocumentSelector(e.documentSelector), n), n];
      }
    }
    exports.CallHierarchyFeature = A;
  },
  29538: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProposedFeatures = exports.LanguageClient = exports.BaseLanguageClient = exports.ShutdownMode = exports.MessageTransports = exports.SuspendMode = exports.State = exports.CloseAction = exports.ErrorAction = exports.RevealOutputChannelOn = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(11798));
    const u = __importStar(require(7605));
    const l = __importStar(require(58319));
    const g = require(80483);
    const d = __importStar(require(69032));
    const h = require(69403);
    const f = require(14294);
    const p = require(79214);
    const m = require(61872);
    const I = require(95199);
    const E = require(31596);
    const y = require(96535);
    const w = require(41507);
    const _ = require(30600);
    const v = require(21400);
    const b = require(29014);
    const B = require(49228);
    const Q = require(58312);
    const D = require(90420);
    const S = require(45432);
    const T = require(70191);
    const R = require(93515);
    const k = require(18430);
    const x = require(88140);
    const P = require(17298);
    const F = require(50875);
    const M = require(7656);
    const O = require(69073);
    const N = require(73963);
    const L = require(7061);
    const K = require(16258);
    const U = require(60490);
    const j = require(67691);
    const q = require(74913);
    const G = require(74622);
    const Y = require(13131);
    const H = require(72767);
    const J = require(66804);
    const z = require(2485);
    const $ = require(23370);
    const W = require(7702);
    const V = require(59084);
    const X = require(89870);
    var Z;
    var ee;
    var te;
    var ne;
    var re;
    var oe;
    var ie;
    var se;
    var ae;
    var Ae;
    (function (e) {
      e[e.Debug = 0] = 'Debug';
      e[e.Info = 1] = 'Info';
      e[e.Warn = 2] = 'Warn';
      e[e.Error = 3] = 'Error';
      e[e.Never = 4] = 'Never';
    })(Z || (exports.RevealOutputChannelOn = Z = {}));
    (function (e) {
      e[e.Continue = 1] = 'Continue';
      e[e.Shutdown = 2] = 'Shutdown';
    })(ee || (exports.ErrorAction = ee = {}));
    (function (e) {
      e[e.DoNotRestart = 1] = 'DoNotRestart';
      e[e.Restart = 2] = 'Restart';
    })(te || (exports.CloseAction = te = {}));
    (function (e) {
      e[e.Stopped = 1] = 'Stopped';
      e[e.Starting = 3] = 'Starting';
      e[e.StartFailed = 4] = 'StartFailed';
      e[e.Running = 2] = 'Running';
    })(ne || (exports.State = ne = {}));
    (function (e) {
      e.off = 'off';
      e.on = 'on';
    })(re || (exports.SuspendMode = re = {}));
    (function (e) {
      e.sanitizeIsTrusted = function (e) {
        return e != null && (typeof e == 'boolean' || typeof e == 'object' && e !== null && !!l.stringArray(e.enabledCommands)) && e;
      };
    })(oe ||= {});
    class ce {
      client;
      maxRestartCount;
      restarts;
      constructor(e, t) {
        this.client = e;
        this.maxRestartCount = t;
        this.restarts = [];
      }
      error(e, t, n) {
        if (n && n <= 3) {
          return {
            action: ee.Continue
          };
        } else {
          return {
            action: ee.Shutdown
          };
        }
      }
      closed() {
        this.restarts.push(Date.now());
        if (this.restarts.length <= this.maxRestartCount) {
          return {
            action: te.Restart
          };
        }
        if (this.restarts[this.restarts.length - 1] - this.restarts[0] <= 180000) {
          return {
            action: te.DoNotRestart,
            message: `The ${this.client.name} server crashed ${this.maxRestartCount + 1} times in the last 3 minutes. The server will not be restarted. See the output for more information.`
          };
        } else {
          this.restarts.shift();
          return {
            action: te.Restart
          };
        }
      }
    }
    (function (e) {
      e.Initial = 'initial';
      e.Starting = 'starting';
      e.StartFailed = 'startFailed';
      e.Running = 'running';
      e.Stopping = 'stopping';
      e.Stopped = 'stopped';
    })(ie ||= {});
    (function (e) {
      e.is = function (e) {
        return e && A.MessageReader.is(e.reader) && A.MessageWriter.is(e.writer);
      };
    })(se || (exports.MessageTransports = se = {}));
    (function (e) {
      e.Restart = 'restart';
      e.Stop = 'stop';
    })(ae || (exports.ShutdownMode = ae = {}));
    class ue {
      open;
      _onOpen;
      _onClose;
      disposable;
      constructor() {
        this.open = new Set();
        this._onOpen = new a.EventEmitter();
        this._onClose = new a.EventEmitter();
        ue.fillTabResources(this.open);
        const e = e => {
          if (e.closed.length === 0 && e.opened.length === 0) {
            return;
          }
          const t = this.open;
          const n = new Set();
          ue.fillTabResources(n);
          const r = new Set();
          const o = new Set(n);
          for (const e of t.values()) {
            if (n.has(e)) {
              o.delete(e);
            } else {
              r.add(e);
            }
          }
          this.open = n;
          if (r.size > 0) {
            const e = new Set();
            for (const t of r) {
              e.add(a.Uri.parse(t));
            }
            this._onClose.fire(e);
          }
          if (o.size > 0) {
            const e = new Set();
            for (const t of o) {
              e.add(a.Uri.parse(t));
            }
            this._onOpen.fire(e);
          }
        };
        if (a.window.tabGroups.onDidChangeTabs !== undefined) {
          this.disposable = a.window.tabGroups.onDidChangeTabs(e);
        } else {
          this.disposable = {
            dispose: () => {}
          };
        }
      }
      get onClose() {
        return this._onClose.event;
      }
      get onOpen() {
        return this._onOpen.event;
      }
      dispose() {
        this.disposable.dispose();
      }
      isActive(e) {
        if (e instanceof a.Uri) {
          return a.window.activeTextEditor?.document.uri === e;
        } else {
          return a.window.activeTextEditor?.document === e;
        }
      }
      isVisible(e) {
        const t = e instanceof a.Uri ? e : e.uri;
        if (t.scheme === m.NotebookDocumentSyncFeature.CellScheme) {
          return a.workspace.notebookDocuments.some(e => {
            if (this.open.has(e.uri.toString())) {
              return e.getCells().find(e => e.document.uri.toString() === t.toString()) !== undefined;
            }
            return false;
          });
        } else {
          return this.open.has(t.toString());
        }
      }
      getTabResources() {
        const e = new Set();
        ue.fillTabResources(new Set(), e);
        return e;
      }
      static fillTabResources(e, t) {
        const n = e ?? new Set();
        for (const e of a.window.tabGroups.all) {
          for (const r of e.tabs) {
            const e = r.input;
            let o;
            if (e instanceof a.TabInputText) {
              o = e.uri;
            } else {
              if (e instanceof a.TabInputTextDiff) {
                o = e.modified;
              } else {
                if (e instanceof a.TabInputCustom || e instanceof a.TabInputNotebook) {
                  o = e.uri;
                }
              }
            }
            if (o !== undefined && !n.has(o.toString())) {
              n.add(o.toString());
              if (t !== undefined) {
                t.add(o);
              }
            }
          }
        }
      }
    }
    class le {
      _id;
      _name;
      _clientOptions;
      _state;
      _onStart;
      _onStop;
      _connection;
      _idleInterval;
      _ignoredRegistrations;
      _listeners;
      _disposed;
      _notificationHandlers;
      _notificationDisposables;
      _pendingNotificationHandlers;
      _requestHandlers;
      _requestDisposables;
      _pendingRequestHandlers;
      _progressHandlers;
      _pendingProgressHandlers;
      _progressDisposables;
      _initializeResult;
      _outputChannel;
      _disposeOutputChannel;
      _traceOutputChannel;
      _capabilities;
      _diagnostics;
      _syncedDocuments;
      _didChangeTextDocumentFeature;
      _inFlightOpenNotifications;
      _pendingChangeSemaphore;
      _pendingChangeDelayer;
      _didOpenTextDocumentFeature;
      _fileEvents;
      _fileEventDelayer;
      _telemetryEmitter;
      _stateChangeEmitter;
      _trace;
      _traceFormat = A.TraceFormat.Text;
      _tracer;
      _c2p;
      _p2c;
      _tabsModel;
      constructor(e, t, n) {
        this._id = e;
        this._name = t;
        const r = {
          isTrusted: false,
          supportHtml: false,
          supportThemeIcons: false
        };
        if ((n = n || {}).markdown !== undefined) {
          r.isTrusted = oe.sanitizeIsTrusted(n.markdown.isTrusted);
          r.supportHtml = n.markdown.supportHtml === true;
          r.supportThemeIcons = n.markdown.supportThemeIcons === true;
        }
        this._clientOptions = {
          documentSelector: n.documentSelector ?? [],
          synchronize: n.synchronize ?? {},
          diagnosticCollectionName: n.diagnosticCollectionName,
          outputChannelName: n.outputChannelName ?? this._name,
          revealOutputChannelOn: n.revealOutputChannelOn ?? Z.Error,
          stdioEncoding: n.stdioEncoding ?? 'utf8',
          initializationOptions: n.initializationOptions,
          initializationFailedHandler: n.initializationFailedHandler,
          progressOnInitialization: !!n.progressOnInitialization,
          errorHandler: n.errorHandler ?? this.createDefaultErrorHandler(n.connectionOptions?.maxRestartCount),
          middleware: n.middleware ?? {},
          uriConverters: n.uriConverters,
          workspaceFolder: n.workspaceFolder,
          connectionOptions: n.connectionOptions,
          markdown: r,
          diagnosticPullOptions: n.diagnosticPullOptions ?? {
            onChange: true,
            onSave: false
          },
          notebookDocumentOptions: n.notebookDocumentOptions ?? {},
          textSynchronization: this.createTextSynchronizationOptions(n.textSynchronization)
        };
        this._clientOptions.synchronize = this._clientOptions.synchronize || {};
        this._state = ie.Initial;
        this._ignoredRegistrations = new Set();
        this._listeners = [];
        this._notificationHandlers = new Map();
        this._pendingNotificationHandlers = new Map();
        this._notificationDisposables = new Map();
        this._requestHandlers = new Map();
        this._pendingRequestHandlers = new Map();
        this._requestDisposables = new Map();
        this._progressHandlers = new Map();
        this._pendingProgressHandlers = new Map();
        this._progressDisposables = new Map();
        this._connection = undefined;
        this._initializeResult = undefined;
        if (n.outputChannel) {
          this._outputChannel = n.outputChannel;
          this._disposeOutputChannel = false;
        } else {
          this._outputChannel = undefined;
          this._disposeOutputChannel = true;
        }
        this._traceOutputChannel = n.traceOutputChannel;
        this._diagnostics = undefined;
        this._inFlightOpenNotifications = new Set();
        this._pendingChangeSemaphore = new g.Semaphore(1);
        this._pendingChangeDelayer = new g.Delayer(250);
        this._fileEvents = [];
        this._fileEventDelayer = new g.Delayer(250);
        this._onStop = undefined;
        this._telemetryEmitter = new A.Emitter();
        this._stateChangeEmitter = new A.Emitter();
        this._trace = A.Trace.Off;
        this._tracer = {
          log: (e, t) => {
            if (l.string(e)) {
              this.logTrace(e, t);
            } else {
              this.logObjectTrace(e);
            }
          }
        };
        this._c2p = c.createConverter(n.uriConverters ? n.uriConverters.code2Protocol : undefined);
        this._p2c = u.createConverter(n.uriConverters ? n.uriConverters.protocol2Code : undefined, this._clientOptions.markdown.isTrusted, this._clientOptions.markdown.supportHtml, this._clientOptions.markdown.supportThemeIcons);
        this._syncedDocuments = new Map();
        this.registerBuiltinFeatures();
      }
      createTextSynchronizationOptions(e) {
        if (e && typeof e.delayOpenNotifications == 'boolean') {
          return {
            delayOpenNotifications: e.delayOpenNotifications
          };
        } else {
          return {
            delayOpenNotifications: false
          };
        }
      }
      get name() {
        return this._name;
      }
      get middleware() {
        return this._clientOptions.middleware ?? Object.create(null);
      }
      get clientOptions() {
        return this._clientOptions;
      }
      get protocol2CodeConverter() {
        return this._p2c;
      }
      get code2ProtocolConverter() {
        return this._c2p;
      }
      get tabsModel() {
        if (this._tabsModel === undefined) {
          this._tabsModel = new ue();
        }
        return this._tabsModel;
      }
      get onTelemetry() {
        return this._telemetryEmitter.event;
      }
      get onDidChangeState() {
        return this._stateChangeEmitter.event;
      }
      get outputChannel() {
        if (!this._outputChannel) {
          this._outputChannel = a.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);
        }
        return this._outputChannel;
      }
      get traceOutputChannel() {
        if (this._traceOutputChannel) {
          return this._traceOutputChannel;
        } else {
          return this.outputChannel;
        }
      }
      get diagnostics() {
        return this._diagnostics;
      }
      get state() {
        return this.getPublicState();
      }
      get $state() {
        return this._state;
      }
      set $state(e) {
        const t = this.getPublicState();
        this._state = e;
        const n = this.getPublicState();
        if (n !== t) {
          this._stateChangeEmitter.fire({
            oldState: t,
            newState: n
          });
        }
      }
      getPublicState() {
        switch (this.$state) {
          case ie.Starting:
            return ne.Starting;
          case ie.Running:
            return ne.Running;
          case ie.StartFailed:
            return ne.StartFailed;
          default:
            return ne.Stopped;
        }
      }
      get initializeResult() {
        return this._initializeResult;
      }
      async sendRequest(e, ...t) {
        if (this.$state === ie.StartFailed || this.$state === ie.Stopping || this.$state === ie.Stopped) {
          return Promise.reject(new A.ResponseError(A.ErrorCodes.ConnectionInactive, 'Client is not running'));
        }
        const n = await this.$start();
        let r;
        let o;
        await this._didOpenTextDocumentFeature.sendPendingOpenNotifications();
        if (this._didChangeTextDocumentFeature.syncKind === A.TextDocumentSyncKind.Full) {
          await this.sendPendingFullTextDocumentChanges(n);
        }
        if (t.length === 1) {
          if (A.CancellationToken.is(t[0])) {
            o = t[0];
          } else {
            r = t[0];
          }
        } else {
          if (t.length === 2) {
            r = t[0];
            o = t[1];
          }
        }
        if (o !== undefined && o.isCancellationRequested) {
          return Promise.reject(new A.ResponseError(A.LSPErrorCodes.RequestCancelled, 'Request got cancelled'));
        }
        const s = this._clientOptions.middleware?.sendRequest;
        if (s !== undefined) {
          return s(e, r, o, (e, t, r) => {
            const o = [];
            if (t !== undefined) {
              o.push(t);
            }
            if (r !== undefined) {
              o.push(r);
            }
            return n.sendRequest(e, ...o);
          });
        } else {
          return n.sendRequest(e, ...t);
        }
      }
      onRequest(e, t) {
        const n = typeof e == 'string' ? e : e.method;
        this._requestHandlers.set(n, t);
        const r = this.activeConnection();
        let o;
        if (r !== undefined) {
          this._requestDisposables.set(n, r.onRequest(e, t));
          o = {
            dispose: () => {
              const e = this._requestDisposables.get(n);
              if (e !== undefined) {
                e.dispose();
                this._requestDisposables.delete(n);
              }
            }
          };
        } else {
          this._pendingRequestHandlers.set(n, t);
          o = {
            dispose: () => {
              this._pendingRequestHandlers.delete(n);
              const e = this._requestDisposables.get(n);
              if (e !== undefined) {
                e.dispose();
                this._requestDisposables.delete(n);
              }
            }
          };
        }
        return {
          dispose: () => {
            this._requestHandlers.delete(n);
            o.dispose();
          }
        };
      }
      async sendNotification(e, t) {
        if (this.$state === ie.StartFailed || this.$state === ie.Stopping || this.$state === ie.Stopped) {
          return Promise.reject(new A.ResponseError(A.ErrorCodes.ConnectionInactive, 'Client is not running'));
        }
        const n = this._didChangeTextDocumentFeature.syncKind === A.TextDocumentSyncKind.Full;
        let r;
        let o;
        if (n && typeof e != 'string' && e.method === A.DidOpenTextDocumentNotification.method) {
          r = t?.textDocument.uri;
          this._inFlightOpenNotifications.add(r);
        }
        if (typeof e != 'string' && e.method === A.DidCloseTextDocumentNotification.method) {
          o = t.textDocument.uri;
        }
        const s = await this.$start();
        await this._didOpenTextDocumentFeature.sendPendingOpenNotifications(o);
        if (n) {
          await this.sendPendingFullTextDocumentChanges(s);
        }
        if (r !== undefined) {
          this._inFlightOpenNotifications.delete(r);
        }
        const a = this._clientOptions.middleware?.sendNotification;
        if (a) {
          return a(e, s.sendNotification.bind(s), t);
        } else {
          return s.sendNotification(e, t);
        }
      }
      onNotification(e, t) {
        const n = typeof e == 'string' ? e : e.method;
        this._notificationHandlers.set(n, t);
        const r = this.activeConnection();
        let o;
        if (r !== undefined) {
          this._notificationDisposables.set(n, r.onNotification(e, t));
          o = {
            dispose: () => {
              const e = this._notificationDisposables.get(n);
              if (e !== undefined) {
                e.dispose();
                this._notificationDisposables.delete(n);
              }
            }
          };
        } else {
          this._pendingNotificationHandlers.set(n, t);
          o = {
            dispose: () => {
              this._pendingNotificationHandlers.delete(n);
              const e = this._notificationDisposables.get(n);
              if (e !== undefined) {
                e.dispose();
                this._notificationDisposables.delete(n);
              }
            }
          };
        }
        return {
          dispose: () => {
            this._notificationHandlers.delete(n);
            o.dispose();
          }
        };
      }
      async sendProgress(e, t, n) {
        if (this.$state === ie.StartFailed || this.$state === ie.Stopping || this.$state === ie.Stopped) {
          return Promise.reject(new A.ResponseError(A.ErrorCodes.ConnectionInactive, 'Client is not running'));
        }
        try {
          return (await this.$start()).sendProgress(e, t, n);
        } catch (e) {
          this.error(`Sending progress for token ${t} failed.`, e);
          throw e;
        }
      }
      onProgress(e, t, n) {
        this._progressHandlers.set(t, {
          type: e,
          handler: n
        });
        const r = this.activeConnection();
        let o;
        const s = this._clientOptions.middleware?.handleWorkDoneProgress;
        const a = A.WorkDoneProgress.is(e) && s !== undefined ? e => {
          s(t, e, () => n(e));
        } : n;
        if (r !== undefined) {
          this._progressDisposables.set(t, r.onProgress(e, t, a));
          o = {
            dispose: () => {
              const e = this._progressDisposables.get(t);
              if (e !== undefined) {
                e.dispose();
                this._progressDisposables.delete(t);
              }
            }
          };
        } else {
          this._pendingProgressHandlers.set(t, {
            type: e,
            handler: n
          });
          o = {
            dispose: () => {
              this._pendingProgressHandlers.delete(t);
              const e = this._progressDisposables.get(t);
              if (e !== undefined) {
                e.dispose();
                this._progressDisposables.delete(t);
              }
            }
          };
        }
        return {
          dispose: () => {
            this._progressHandlers.delete(t);
            o.dispose();
          }
        };
      }
      createDefaultErrorHandler(e) {
        if (e !== undefined && e < 0) {
          throw new Error(`Invalid maxRestartCount: ${e}`);
        }
        return new ce(this, e ?? 4);
      }
      async setTrace(e) {
        this._trace = e;
        const t = this.activeConnection();
        if (t !== undefined) {
          await t.trace(this._trace, this._tracer, {
            sendNotification: false,
            traceFormat: this._traceFormat
          });
        }
      }
      data2String(e) {
        if (e instanceof A.ResponseError) {
          const t = e;
          return `  Message: ${t.message}\n  Code: ${t.code} ${t.data ? `
${t.data.toString()}` : ''}`;
        }
        if (e instanceof Error) {
          if (l.string(e.stack)) {
            return e.stack;
          } else {
            return e.message;
          }
        } else {
          if (l.string(e)) {
            return e;
          } else {
            return e.toString();
          }
        }
      }
      debug(e, t, n = true) {
        this.logOutputMessage(A.MessageType.Debug, Z.Debug, 'Debug', e, t, n);
      }
      info(e, t, n = true) {
        this.logOutputMessage(A.MessageType.Info, Z.Info, 'Info', e, t, n);
      }
      warn(e, t, n = true) {
        this.logOutputMessage(A.MessageType.Warning, Z.Warn, 'Warn', e, t, n);
      }
      error(e, t, n = true) {
        this.logOutputMessage(A.MessageType.Error, Z.Error, 'Error', e, t, n);
      }
      logOutputMessage(e, t, n, r, o, s) {
        this.outputChannel.appendLine(`[${n.padEnd(5)} - ${new Date().toLocaleTimeString()}] ${r}`);
        if (o != null) {
          this.outputChannel.appendLine(this.data2String(o));
        }
        if (s === 'force' || s && this._clientOptions.revealOutputChannelOn <= t) {
          this.showNotificationMessage(e, r);
        }
      }
      showNotificationMessage(e, t) {
        t = t ?? 'A request has failed. See the output for more information.';
        (e === A.MessageType.Error ? a.window.showErrorMessage : e === A.MessageType.Warning ? a.window.showWarningMessage : a.window.showInformationMessage)(t, 'Go to output').then(e => {
          if (e !== undefined) {
            this.outputChannel.show(true);
          }
        });
      }
      logTrace(e, t) {
        this.traceOutputChannel.appendLine(`[Trace - ${new Date().toLocaleTimeString()}] ${e}`);
        if (t) {
          this.traceOutputChannel.appendLine(this.data2String(t));
        }
      }
      logObjectTrace(e) {
        if (e.isLSPMessage && e.type) {
          this.traceOutputChannel.append(`[LSP   - ${new Date().toLocaleTimeString()}] `);
        } else {
          this.traceOutputChannel.append(`[Trace - ${new Date().toLocaleTimeString()}] `);
        }
        if (e) {
          this.traceOutputChannel.appendLine(`${JSON.stringify(e)}`);
        }
      }
      needsStart() {
        return this.$state === ie.Initial || this.$state === ie.Stopping || this.$state === ie.Stopped;
      }
      needsStop() {
        return this.$state === ie.Starting || this.$state === ie.Running;
      }
      activeConnection() {
        if (this.$state === ie.Running && this._connection !== undefined) {
          return this._connection;
        } else {
          return undefined;
        }
      }
      isRunning() {
        return this.$state === ie.Running;
      }
      async start() {
        if (this._disposed === 'disposing' || this._disposed === 'disposed') {
          throw new Error('Client got disposed and can\'t be restarted.');
        }
        if (this.$state === ie.Stopping) {
          throw new Error('Client is currently stopping. Can only restart a full stopped client');
        }
        if (this._onStart !== undefined) {
          return this._onStart;
        }
        const [e, t, n] = this.createOnStartPromise();
        this._onStart = e;
        if (this._diagnostics === undefined) {
          this._diagnostics = a.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName ?? this._id);
        }
        for (const [e, t] of this._notificationHandlers) {
          if (!this._pendingNotificationHandlers.has(e)) {
            this._pendingNotificationHandlers.set(e, t);
          }
        }
        for (const [e, t] of this._requestHandlers) {
          if (!this._pendingRequestHandlers.has(e)) {
            this._pendingRequestHandlers.set(e, t);
          }
        }
        for (const [e, t] of this._progressHandlers) {
          if (!this._pendingProgressHandlers.has(e)) {
            this._pendingProgressHandlers.set(e, t);
          }
        }
        this.$state = ie.Starting;
        try {
          const e = await this.createConnection();
          e.onNotification(A.LogMessageNotification.type, e => {
            switch (e.type) {
              case A.MessageType.Error:
                this.error(e.message, undefined, false);
                break;
              case A.MessageType.Warning:
                this.warn(e.message, undefined, false);
                break;
              case A.MessageType.Info:
                this.info(e.message, undefined, false);
                break;
              case A.MessageType.Debug:
                this.debug(e.message, undefined, false);
                break;
              default:
                this.outputChannel.appendLine(e.message);
            }
          });
          e.onNotification(A.ShowMessageNotification.type, e => {
            switch (e.type) {
              case A.MessageType.Error:
                a.window.showErrorMessage(e.message);
                break;
              case A.MessageType.Warning:
                a.window.showWarningMessage(e.message);
                break;
              case A.MessageType.Info:
              default:
                a.window.showInformationMessage(e.message);
            }
          });
          e.onRequest(A.ShowMessageRequest.type, e => {
            let t;
            switch (e.type) {
              case A.MessageType.Error:
                t = a.window.showErrorMessage;
                break;
              case A.MessageType.Warning:
                t = a.window.showWarningMessage;
                break;
              case A.MessageType.Info:
              default:
                t = a.window.showInformationMessage;
            }
            const n = e.actions || [];
            return t(e.message, ...n);
          });
          e.onNotification(A.TelemetryEventNotification.type, e => {
            this._telemetryEmitter.fire(e);
          });
          e.onRequest(A.ShowDocumentRequest.type, async (e, t) => {
            const n = async e => {
              const t = this.protocol2CodeConverter.asUri(e.uri);
              try {
                if (e.external === true) {
                  return {
                    success: await a.env.openExternal(t)
                  };
                }
                {
                  const n = {};
                  if (e.selection !== undefined) {
                    n.selection = this.protocol2CodeConverter.asRange(e.selection);
                  }
                  if (e.takeFocus === undefined || e.takeFocus === false) {
                    n.preserveFocus = true;
                  } else {
                    if (e.takeFocus === true) {
                      n.preserveFocus = false;
                    }
                  }
                  await a.window.showTextDocument(t, n);
                  return {
                    success: true
                  };
                }
              } catch (e) {
                return {
                  success: false
                };
              }
            };
            const r = this._clientOptions.middleware.window?.showDocument;
            if (r !== undefined) {
              return r(e, t, n);
            } else {
              return n(e);
            }
          });
          e.listen();
          await this.initialize(e);
          t();
        } catch (e) {
          this.$state = ie.StartFailed;
          this.error(`${this._name} client: couldn't create connection to server.`, e, 'force');
          n(e);
        }
        return this._onStart;
      }
      createOnStartPromise() {
        let e;
        let t;
        return [new Promise((n, r) => {
          e = n;
          t = r;
        }), e, t];
      }
      async initialize(e) {
        this.refreshTrace(e, false);
        const t = this._clientOptions.initializationOptions;
        const [n, r] = this._clientOptions.workspaceFolder !== undefined ? [this._clientOptions.workspaceFolder.uri.fsPath, [{
          uri: this._c2p.asUri(this._clientOptions.workspaceFolder.uri),
          name: this._clientOptions.workspaceFolder.name
        }]] : [this._clientGetRootPath(), null];
        const o = {
          processId: null,
          clientInfo: {
            name: a.env.appName,
            version: a.version
          },
          locale: this.getLocale(),
          rootPath: n || null,
          rootUri: n ? this._c2p.asUri(a.Uri.file(n)) : null,
          capabilities: this.computeClientCapabilities(),
          initializationOptions: l.func(t) ? t() : t,
          trace: A.Trace.toString(this._trace),
          workspaceFolders: r
        };
        this.fillInitializeParams(o);
        if (!this._clientOptions.progressOnInitialization) {
          return this.doInitialize(e, o);
        }
        {
          const t = d.generateUuid();
          const n = new h.ProgressPart(e, t);
          o.workDoneToken = t;
          try {
            const t = await this.doInitialize(e, o);
            n.done();
            return t;
          } catch (e) {
            n.cancel();
            throw e;
          }
        }
      }
      async doInitialize(e, t) {
        try {
          const n = await e.initialize(t);
          if (n.capabilities.positionEncoding !== undefined && n.capabilities.positionEncoding !== A.PositionEncodingKind.UTF16) {
            throw new Error(`Unsupported position encoding (${n.capabilities.positionEncoding}) received from server ${this.name}`);
          }
          let r;
          this._initializeResult = n;
          this.$state = ie.Running;
          if (l.number(n.capabilities.textDocumentSync)) {
            r = n.capabilities.textDocumentSync === A.TextDocumentSyncKind.None ? {
              openClose: false,
              change: A.TextDocumentSyncKind.None,
              save: undefined
            } : {
              openClose: true,
              change: n.capabilities.textDocumentSync,
              save: {
                includeText: false
              }
            };
          } else {
            if (n.capabilities.textDocumentSync !== undefined && n.capabilities.textDocumentSync !== null) {
              r = n.capabilities.textDocumentSync;
            }
          }
          this._capabilities = Object.assign({}, n.capabilities, {
            resolvedTextDocumentSync: r
          });
          e.onNotification(A.PublishDiagnosticsNotification.type, e => this.handleDiagnostics(e));
          e.onRequest(A.RegistrationRequest.type, e => this.handleRegistrationRequest(e));
          e.onRequest('client/registerFeature', e => this.handleRegistrationRequest(e));
          e.onRequest(A.UnregistrationRequest.type, e => this.handleUnregistrationRequest(e));
          e.onRequest('client/unregisterFeature', e => this.handleUnregistrationRequest(e));
          e.onRequest(A.ApplyWorkspaceEditRequest.type, e => this.handleApplyWorkspaceEdit(e));
          for (const [t, n] of this._pendingNotificationHandlers) {
            this._notificationDisposables.set(t, e.onNotification(t, n));
          }
          this._pendingNotificationHandlers.clear();
          for (const [t, n] of this._pendingRequestHandlers) {
            this._requestDisposables.set(t, e.onRequest(t, n));
          }
          this._pendingRequestHandlers.clear();
          for (const [t, n] of this._pendingProgressHandlers) {
            this._progressDisposables.set(t, e.onProgress(n.type, t, n.handler));
          }
          this._pendingProgressHandlers.clear();
          await e.sendNotification(A.InitializedNotification.type, {});
          this.hookFileEvents(e);
          this.hookConfigurationChanged(e);
          this.initializeFeatures(e);
          return n;
        } catch (t) {
          if (this._clientOptions.initializationFailedHandler) {
            if (this._clientOptions.initializationFailedHandler(t)) {
              this.initialize(e);
            } else {
              this.stop();
            }
          } else {
            if (t instanceof A.ResponseError && t.data && t.data.retry) {
              a.window.showErrorMessage(t.message, {
                title: 'Retry',
                id: 'retry'
              }).then(t => {
                if (t && t.id === 'retry') {
                  this.initialize(e);
                } else {
                  this.stop();
                }
              });
            } else {
              if (t && t.message) {
                a.window.showErrorMessage(t.message);
              }
              this.error('Server initialization failed.', t);
              this.stop();
            }
          }
          throw t;
        }
      }
      _clientGetRootPath() {
        const e = a.workspace.workspaceFolders;
        if (!e || e.length === 0) {
          return;
        }
        const t = e[0];
        if (t.uri.scheme === 'file') {
          return t.uri.fsPath;
        } else {
          return undefined;
        }
      }
      stop(e = 2000) {
        return this.shutdown(ae.Stop, e);
      }
      dispose(e = 2000) {
        try {
          this._disposed = 'disposing';
          return this.stop(e);
        } finally {
          this._disposed = 'disposed';
        }
      }
      async shutdown(e, t = 2000) {
        if (this.$state === ie.Stopped || this.$state === ie.Initial) {
          return;
        }
        if (this.$state === ie.Stopping) {
          if (this._onStop !== undefined) {
            return this._onStop;
          }
          throw new Error('Client is stopping but no stop promise available.');
        }
        const n = this.activeConnection();
        if (n === undefined || this.$state !== ie.Running) {
          throw new Error(`Client is not running and can't be stopped. It's current state is: ${this.$state}`);
        }
        this._initializeResult = undefined;
        this.$state = ie.Stopping;
        this.cleanUp(e);
        const r = new Promise(e => {
          A.RAL().timer.setTimeout(e, t);
        });
        const o = (async e => {
          await e.shutdown();
          await e.exit();
          return e;
        })(n);
        return this._onStop = Promise.race([r, o]).then(e => {
          if (e === undefined) {
            this.error('Stopping server timed out', undefined, false);
            throw new Error('Stopping the server timed out');
          }
          e.end();
          e.dispose();
        }, e => {
          this.error('Stopping server failed', e, false);
          throw e;
        }).finally(() => {
          this.$state = ie.Stopped;
          if (e === ae.Stop) {
            this.cleanUpChannel();
          }
          this._onStart = undefined;
          this._onStop = undefined;
          this._connection = undefined;
          this._ignoredRegistrations.clear();
        });
      }
      cleanUp(e) {
        this._fileEvents = [];
        this._fileEventDelayer.cancel();
        const t = this._listeners.splice(0, this._listeners.length);
        for (const e of t) {
          e.dispose();
        }
        if (this._syncedDocuments) {
          this._syncedDocuments.clear();
        }
        for (const e of Array.from(this._features.entries()).map(e => e[1]).reverse()) {
          e.clear();
        }
        if ((e === ae.Stop || e === ae.Restart) && this._diagnostics !== undefined) {
          this._diagnostics.dispose();
          this._diagnostics = undefined;
        }
        if (this._idleInterval !== undefined) {
          this._idleInterval.dispose();
          this._idleInterval = undefined;
        }
      }
      cleanUpChannel() {
        if (this._outputChannel !== undefined && this._disposeOutputChannel) {
          this._outputChannel.dispose();
          this._outputChannel = undefined;
        }
      }
      notifyFileEvent(e) {
        const t = this;
        async function n(e) {
          t._fileEvents.push(e);
          return t._fileEventDelayer.trigger(async () => {
            const e = t._fileEvents;
            t._fileEvents = [];
            try {
              await t.sendNotification(A.DidChangeWatchedFilesNotification.type, {
                changes: e
              });
            } catch (n) {
              t._fileEvents.push(...e);
              throw n;
            }
          });
        }
        const r = this.clientOptions.middleware?.workspace;
        (r?.didChangeWatchedFile ? r.didChangeWatchedFile(e, n) : n(e)).catch(e => {
          t.error('Notifying file events failed.', e);
        });
      }
      async sendPendingFullTextDocumentChanges(e) {
        return this._pendingChangeSemaphore.lock(async () => {
          try {
            const t = this._didChangeTextDocumentFeature.getPendingDocumentChanges(this._inFlightOpenNotifications);
            if (t.length === 0) {
              return;
            }
            for (const n of t) {
              const t = this.code2ProtocolConverter.asChangeTextDocumentParams(n);
              await e.sendNotification(A.DidChangeTextDocumentNotification.type, t);
              this._didChangeTextDocumentFeature.notificationSent(n, A.DidChangeTextDocumentNotification.type, t);
            }
          } catch (e) {
            this.error('Sending pending changes failed', e, false);
            throw e;
          }
        });
      }
      triggerPendingChangeDelivery() {
        this._pendingChangeDelayer.trigger(async () => {
          const e = this.activeConnection();
          if (e !== undefined) {
            await this.sendPendingFullTextDocumentChanges(e);
          } else {
            this.triggerPendingChangeDelivery();
          }
        }).catch(e => this.error('Delivering pending changes failed', e, false));
      }
      _diagnosticQueue = new Map();
      _diagnosticQueueState = {
        state: 'idle'
      };
      handleDiagnostics(e) {
        if (!this._diagnostics) {
          return;
        }
        const t = e.uri;
        if (this._diagnosticQueueState.state === 'busy' && this._diagnosticQueueState.document === t) {
          this._diagnosticQueueState.tokenSource.cancel();
        }
        this._diagnosticQueue.set(e.uri, e.diagnostics);
        this.triggerDiagnosticQueue();
      }
      triggerDiagnosticQueue() {
        A.RAL().timer.setImmediate(() => {
          this.workDiagnosticQueue();
        });
      }
      workDiagnosticQueue() {
        if (this._diagnosticQueueState.state === 'busy') {
          return;
        }
        const e = this._diagnosticQueue.entries().next();
        if (e.done === true) {
          return;
        }
        const [t, n] = e.value;
        this._diagnosticQueue.delete(t);
        const r = new a.CancellationTokenSource();
        this._diagnosticQueueState = {
          state: 'busy',
          document: t,
          tokenSource: r
        };
        this._p2c.asDiagnostics(n, r.token).then(e => {
          if (!r.token.isCancellationRequested) {
            const n = this._p2c.asUri(t);
            const r = this.clientOptions.middleware;
            if (r.handleDiagnostics) {
              r.handleDiagnostics(n, e, (e, t) => this.setDiagnostics(e, t));
            } else {
              this.setDiagnostics(n, e);
            }
          }
        }).catch(e => {
          this.error('Processing diagnostic queue failed.', e);
        }).finally(() => {
          this._diagnosticQueueState = {
            state: 'idle'
          };
          this.triggerDiagnosticQueue();
        });
      }
      setDiagnostics(e, t) {
        if (this._diagnostics) {
          this._diagnostics.set(e, t);
        }
      }
      getLocale() {
        return a.env.language;
      }
      async $start() {
        if (this.$state === ie.StartFailed) {
          throw new Error('Previous start failed. Can\'t restart server.');
        }
        await this.start();
        const e = this.activeConnection();
        if (e === undefined) {
          throw new Error('Starting server failed');
        }
        return e;
      }
      async createConnection() {
        const e = await this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8');
        this._connection = function (e, t, n, r, o) {
          const s = new ge();
          const a = A.createProtocolConnection(e, t, s, o);
          a.onError(e => {
            n(e[0], e[1], e[2]);
          });
          a.onClose(r);
          return {
            listen: () => a.listen(),
            sendRequest: a.sendRequest,
            onRequest: a.onRequest,
            hasPendingResponse: a.hasPendingResponse,
            sendNotification: a.sendNotification,
            onNotification: a.onNotification,
            onProgress: a.onProgress,
            sendProgress: a.sendProgress,
            trace: (e, t, n) => {
              const r = {
                sendNotification: false,
                traceFormat: A.TraceFormat.Text
              };
              if (n === undefined) {
                return a.trace(e, t, r);
              } else {
                l.boolean(n);
                return a.trace(e, t, n);
              }
            },
            initialize: e => a.sendRequest(A.InitializeRequest.type, e),
            shutdown: () => a.sendRequest(A.ShutdownRequest.type, undefined),
            exit: () => a.sendNotification(A.ExitNotification.type),
            end: () => a.end(),
            dispose: () => a.dispose()
          };
        }(e.reader, e.writer, (e, t, n) => {
          this.handleConnectionError(e, t, n).catch(e => this.error('Handling connection error failed', e));
        }, () => {
          this.handleConnectionClosed().catch(e => this.error('Handling connection close failed', e));
        }, this._clientOptions.connectionOptions);
        return this._connection;
      }
      async handleConnectionClosed() {
        if (this.$state === ie.Stopped) {
          return;
        }
        try {
          if (this._connection !== undefined) {
            this._connection.dispose();
          }
        } catch (e) {}
        let e = {
          action: te.DoNotRestart
        };
        if (this.$state !== ie.Stopping) {
          try {
            e = await this._clientOptions.errorHandler.closed();
          } catch (e) {}
        }
        this._connection = undefined;
        if (e.action === te.DoNotRestart) {
          this.error(e.message ?? 'Connection to server got closed. Server will not be restarted.', undefined, e.handled !== true && 'force');
          this.cleanUp(ae.Stop);
          if (this.$state === ie.Starting) {
            this.$state = ie.StartFailed;
          } else {
            this.$state = ie.Stopped;
          }
          this._onStop = Promise.resolve();
          this._onStart = undefined;
        } else {
          if (e.action === te.Restart) {
            this.info(e.message ?? 'Connection to server got closed. Server will restart.', !e.handled);
            this.cleanUp(ae.Restart);
            this.$state = ie.Initial;
            this._onStop = Promise.resolve();
            this._onStart = undefined;
            this.start().catch(e => this.error('Restarting server failed', e, 'force'));
          }
        }
      }
      async handleConnectionError(e, t, n) {
        const r = await this._clientOptions.errorHandler.error(e, t, n);
        if (r.action === ee.Shutdown) {
          this.error(r.message ?? `Client ${this._name}: connection to server is erroring.\n${e.message}\nShutting down server.`, undefined, r.handled !== true && 'force');
          this.stop().catch(e => {
            this.error('Stopping server failed', e, false);
          });
        } else {
          this.error(r.message ?? `Client ${this._name}: connection to server is erroring.\n${e.message}`, undefined, r.handled !== true && 'force');
        }
      }
      hookConfigurationChanged(e) {
        this._listeners.push(a.workspace.onDidChangeConfiguration(() => {
          this.refreshTrace(e, true);
        }));
      }
      refreshTrace(e, t = false) {
        const n = a.workspace.getConfiguration(this._id);
        let r = A.Trace.Off;
        let o = A.TraceFormat.Text;
        if (n) {
          const e = n.get('trace.server', 'off');
          if (typeof e == 'string') {
            r = A.Trace.fromString(e);
          } else {
            r = A.Trace.fromString(n.get('trace.server.verbosity', 'off'));
            o = A.TraceFormat.fromString(n.get('trace.server.format', 'text'));
          }
        }
        this._trace = r;
        this._traceFormat = o;
        e.trace(this._trace, this._tracer, {
          sendNotification: t,
          traceFormat: this._traceFormat
        }).catch(e => {
          this.error('Updating trace failed with error', e, false);
        });
      }
      hookFileEvents(e) {
        const t = this._clientOptions.synchronize.fileEvents;
        if (!t) {
          return;
        }
        let n;
        n = l.array(t) ? t : [t];
        if (n) {
          this._dynamicFeatures.get(A.DidChangeWatchedFilesNotification.type.method).registerRaw(d.generateUuid(), n);
        }
      }
      _features = [];
      _dynamicFeatures = new Map();
      registerFeatures(e) {
        for (const t of e) {
          this.registerFeature(t);
        }
      }
      registerFeature(e) {
        this._features.push(e);
        if (f.DynamicFeature.is(e)) {
          const t = e.registrationType;
          this._dynamicFeatures.set(t.method, e);
        }
      }
      getFeature(e) {
        return this._dynamicFeatures.get(e);
      }
      hasDedicatedTextSynchronizationFeature(e) {
        const t = this.getFeature(A.NotebookDocumentSyncRegistrationType.method);
        return t !== undefined && t instanceof m.NotebookDocumentSyncFeature && t.handles(e);
      }
      registerBuiltinFeatures() {
        const e = new Map();
        this.registerFeature(new I.ConfigurationFeature(this));
        this._didOpenTextDocumentFeature = new E.DidOpenTextDocumentFeature(this, this._syncedDocuments);
        this.registerFeature(this._didOpenTextDocumentFeature);
        this._didChangeTextDocumentFeature = new E.DidChangeTextDocumentFeature(this, e);
        this._didChangeTextDocumentFeature.onPendingChangeAdded(() => {
          this.triggerPendingChangeDelivery();
        });
        this.registerFeature(this._didChangeTextDocumentFeature);
        this.registerFeature(new E.WillSaveFeature(this));
        this.registerFeature(new E.WillSaveWaitUntilFeature(this));
        this.registerFeature(new E.DidSaveTextDocumentFeature(this));
        this.registerFeature(new E.DidCloseTextDocumentFeature(this, this._syncedDocuments, e));
        this.registerFeature(new V.FileSystemWatcherFeature(this, e => this.notifyFileEvent(e)));
        this.registerFeature(new y.CompletionItemFeature(this));
        this.registerFeature(new w.HoverFeature(this));
        this.registerFeature(new v.SignatureHelpFeature(this));
        this.registerFeature(new _.DefinitionFeature(this));
        this.registerFeature(new D.ReferencesFeature(this));
        this.registerFeature(new b.DocumentHighlightFeature(this));
        this.registerFeature(new B.DocumentSymbolFeature(this));
        this.registerFeature(new Q.WorkspaceSymbolFeature(this));
        this.registerFeature(new k.CodeActionFeature(this));
        this.registerFeature(new x.CodeLensFeature(this));
        this.registerFeature(new P.DocumentFormattingFeature(this));
        this.registerFeature(new P.DocumentRangeFormattingFeature(this));
        this.registerFeature(new P.DocumentOnTypeFormattingFeature(this));
        this.registerFeature(new F.RenameFeature(this));
        this.registerFeature(new M.DocumentLinkFeature(this));
        this.registerFeature(new O.ExecuteCommandFeature(this));
        this.registerFeature(new I.SyncConfigurationFeature(this));
        this.registerFeature(new S.TypeDefinitionFeature(this));
        this.registerFeature(new T.ImplementationFeature(this));
        this.registerFeature(new R.ColorProviderFeature(this));
        if (this.clientOptions.workspaceFolder === undefined) {
          this.registerFeature(new J.WorkspaceFoldersFeature(this));
        }
        this.registerFeature(new N.FoldingRangeFeature(this));
        this.registerFeature(new L.DeclarationFeature(this));
        this.registerFeature(new K.SelectionRangeFeature(this));
        this.registerFeature(new X.ProgressFeature(this));
        this.registerFeature(new U.CallHierarchyFeature(this));
        this.registerFeature(new j.SemanticTokensFeature(this));
        this.registerFeature(new q.LinkedEditingFeature(this));
        this.registerFeature(new z.DidCreateFilesFeature(this));
        this.registerFeature(new z.DidRenameFilesFeature(this));
        this.registerFeature(new z.DidDeleteFilesFeature(this));
        this.registerFeature(new z.WillCreateFilesFeature(this));
        this.registerFeature(new z.WillRenameFilesFeature(this));
        this.registerFeature(new z.WillDeleteFilesFeature(this));
        this.registerFeature(new G.TypeHierarchyFeature(this));
        this.registerFeature(new Y.InlineValueFeature(this));
        this.registerFeature(new H.InlayHintsFeature(this));
        this.registerFeature(new p.DiagnosticFeature(this));
        this.registerFeature(new m.NotebookDocumentSyncFeature(this));
      }
      registerProposedFeatures() {
        this.registerFeatures(Ae.createAll(this));
      }
      fillInitializeParams(e) {
        for (const t of this._features) {
          if (l.func(t.fillInitializeParams)) {
            t.fillInitializeParams(e);
          }
        }
      }
      computeClientCapabilities() {
        const e = {};
        f.ensure(e, 'workspace').applyEdit = true;
        const t = f.ensure(f.ensure(e, 'workspace'), 'workspaceEdit');
        t.documentChanges = true;
        t.resourceOperations = [A.ResourceOperationKind.Create, A.ResourceOperationKind.Rename, A.ResourceOperationKind.Delete];
        t.failureHandling = A.FailureHandlingKind.TextOnlyTransactional;
        t.normalizesLineEndings = true;
        t.changeAnnotationSupport = {
          groupsOnLabel: true
        };
        t.metadataSupport = true;
        t.snippetEditSupport = true;
        const n = f.ensure(f.ensure(e, 'textDocument'), 'publishDiagnostics');
        n.relatedInformation = true;
        n.versionSupport = false;
        n.tagSupport = {
          valueSet: [A.DiagnosticTag.Unnecessary, A.DiagnosticTag.Deprecated]
        };
        n.codeDescriptionSupport = true;
        n.dataSupport = true;
        const r = f.ensure(e, 'window');
        f.ensure(r, 'showMessage').messageActionItem = {
          additionalPropertiesSupport: true
        };
        f.ensure(r, 'showDocument').support = true;
        const o = f.ensure(e, 'general');
        o.staleRequestSupport = {
          cancel: true,
          retryOnContentModified: Array.from(le.RequestsToCancelOnContentModified)
        };
        o.regularExpressions = {
          engine: 'ECMAScript',
          version: 'ES2020'
        };
        o.markdown = {
          parser: 'marked',
          version: '1.1.0'
        };
        o.positionEncodings = ['utf-16'];
        if (this._clientOptions.markdown.supportHtml) {
          o.markdown.allowedTags = ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'];
        }
        for (const t of this._features) {
          t.fillClientCapabilities(e);
        }
        return e;
      }
      initializeFeatures(e) {
        const t = this._clientOptions.documentSelector;
        for (const e of this._features) {
          if (l.func(e.preInitialize)) {
            e.preInitialize(this._capabilities, t);
          }
        }
        for (const e of this._features) {
          e.initialize(this._capabilities, t);
        }
      }
      async handleRegistrationRequest(e) {
        const t = this.clientOptions.middleware?.handleRegisterCapability;
        if (t) {
          return t(e, e => this.doRegisterCapability(e));
        } else {
          return this.doRegisterCapability(e);
        }
      }
      async doRegisterCapability(e) {
        if (this.isRunning()) {
          for (const t of e.registrations) {
            const e = this._dynamicFeatures.get(t.method);
            if (e === undefined) {
              return Promise.reject(new Error(`No feature implementation for ${t.method} found. Registration failed.`));
            }
            const n = t.registerOptions ?? {};
            n.documentSelector = n.documentSelector ?? this._clientOptions.documentSelector;
            const r = {
              id: t.id,
              registerOptions: n
            };
            try {
              e.register(r);
            } catch (e) {
              return Promise.reject(e);
            }
          }
        } else {
          for (const t of e.registrations) {
            this._ignoredRegistrations.add(t.id);
          }
        }
      }
      async handleUnregistrationRequest(e) {
        const t = this.clientOptions.middleware?.handleUnregisterCapability;
        if (t) {
          return t(e, e => this.doUnregisterCapability(e));
        } else {
          return this.doUnregisterCapability(e);
        }
      }
      async doUnregisterCapability(e) {
        for (const t of e.unregisterations) {
          if (this._ignoredRegistrations.has(t.id)) {
            continue;
          }
          const e = this._dynamicFeatures.get(t.method);
          if (!e) {
            return Promise.reject(new Error(`No feature implementation for ${t.method} found. Unregistration failed.`));
          }
          e.unregister(t.id);
        }
      }
      async handleApplyWorkspaceEdit(e) {
        const t = this.clientOptions.middleware?.workspace?.handleApplyEdit;
        if (t) {
          const n = await t(e, e => this.doHandleApplyWorkspaceEdit(e));
          if (n instanceof A.ResponseError) {
            return Promise.reject(n);
          } else {
            return n;
          }
        }
        return this.doHandleApplyWorkspaceEdit(e);
      }
      workspaceEditLock = new g.Semaphore(1);
      async doHandleApplyWorkspaceEdit(e) {
        const t = e.edit;
        const n = await this.workspaceEditLock.lock(() => this._p2c.asWorkspaceEdit(t));
        const r = new Map();
        a.workspace.textDocuments.forEach(e => r.set(e.uri.toString(), e));
        let o = false;
        if (t.documentChanges) {
          for (const e of t.documentChanges) {
            if (A.TextDocumentEdit.is(e) && e.textDocument.version && e.textDocument.version >= 0) {
              const t = this._p2c.asUri(e.textDocument.uri).toString();
              const n = r.get(t);
              if (n && n.version !== e.textDocument.version) {
                o = true;
                break;
              }
            }
          }
        }
        if (o) {
          return Promise.resolve({
            applied: false
          });
        } else {
          return l.asPromise(a.workspace.applyEdit(n, {
            isRefactoring: e.metadata?.isRefactoring
          }).then(e => ({
            applied: e
          })));
        }
      }
      static RequestsToCancelOnContentModified = new Set([A.SemanticTokensRequest.method, A.SemanticTokensRangeRequest.method, A.SemanticTokensDeltaRequest.method]);
      static CancellableResolveCalls = new Set([A.CompletionResolveRequest.method, A.CodeLensResolveRequest.method, A.CodeActionResolveRequest.method, A.InlayHintResolveRequest.method, A.DocumentLinkResolveRequest.method, A.WorkspaceSymbolResolveRequest.method]);
      handleFailedRequest(e, t, n, r, o = true, s = false) {
        if (n instanceof A.ResponseError) {
          if (n.code === A.ErrorCodes.PendingResponseRejected || n.code === A.ErrorCodes.ConnectionInactive) {
            return r;
          }
          if (n.code === A.LSPErrorCodes.RequestCancelled || n.code === A.LSPErrorCodes.ServerCancelled) {
            if (t !== undefined && t.isCancellationRequested && !s) {
              return r;
            }
            throw n.data !== undefined ? new f.LSPCancellationError(n.data) : new a.CancellationError();
          }
          if (n.code === A.LSPErrorCodes.ContentModified) {
            if (le.RequestsToCancelOnContentModified.has(e.method) || le.CancellableResolveCalls.has(e.method)) {
              throw new a.CancellationError();
            }
            return r;
          }
        }
        this.error(`Request ${e.method} failed.`, n, o);
        throw n;
      }
    }
    exports.BaseLanguageClient = le;
    exports.LanguageClient = class extends le {
      serverOptions;
      constructor(e, t, n, r) {
        super(e, t, r);
        this.serverOptions = n;
      }
      async createMessageTransports(e) {
        return this.serverOptions();
      }
    };
    class ge {
      error(e) {
        A.RAL().console.error(e);
      }
      warn(e) {
        A.RAL().console.warn(e);
      }
      info(e) {
        A.RAL().console.info(e);
      }
      log(e) {
        A.RAL().console.log(e);
      }
    }
    (function (e) {
      e.createAll = function (e) {
        return [new $.InlineCompletionItemFeature(e), new W.TextDocumentContentFeature(e)];
      };
    })(Ae || (exports.ProposedFeatures = Ae = {}));
  },
  18430: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CodeActionFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(69032));
    const u = require(14294);
    class l extends u.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.CodeActionRequest.type);
      }
      fillClientCapabilities(e) {
        const t = u.ensure(u.ensure(e, 'textDocument'), 'codeAction');
        t.dynamicRegistration = true;
        t.isPreferredSupport = true;
        t.disabledSupport = true;
        t.dataSupport = true;
        t.resolveSupport = {
          properties: ['edit', 'command']
        };
        t.codeActionLiteralSupport = {
          codeActionKind: {
            valueSet: [A.CodeActionKind.Empty, A.CodeActionKind.QuickFix, A.CodeActionKind.Refactor, A.CodeActionKind.RefactorExtract, A.CodeActionKind.RefactorInline, A.CodeActionKind.RefactorMove, A.CodeActionKind.RefactorRewrite, A.CodeActionKind.Source, A.CodeActionKind.SourceOrganizeImports, A.CodeActionKind.Notebook]
          }
        };
        t.honorsChangeAnnotations = true;
        t.documentationSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.codeActionProvider);
        if (n) {
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideCodeActions: (e, t, n, r) => {
            const o = this._client;
            const s = async (e, t, n, r) => {
              const s = {
                textDocument: o.code2ProtocolConverter.asTextDocumentIdentifier(e),
                range: o.code2ProtocolConverter.asRange(t),
                context: o.code2ProtocolConverter.asCodeActionContextSync(n)
              };
              return o.sendRequest(A.CodeActionRequest.type, s, r).then(e => r.isCancellationRequested || e == null ? null : o.protocol2CodeConverter.asCodeActionResult(e, r), e => o.handleFailedRequest(A.CodeActionRequest.type, r, e, null));
            };
            const a = o.middleware;
            if (a.provideCodeActions) {
              return a.provideCodeActions(e, t, n, r, s);
            } else {
              return s(e, t, n, r);
            }
          },
          resolveCodeAction: e.resolveProvider ? (e, t) => {
            const n = this._client;
            const r = this._client.middleware;
            const o = async (e, t) => n.sendRequest(A.CodeActionResolveRequest.type, n.code2ProtocolConverter.asCodeActionSync(e), t).then(r => t.isCancellationRequested ? e : n.protocol2CodeConverter.asCodeAction(r, t), r => n.handleFailedRequest(A.CodeActionResolveRequest.type, t, r, e));
            if (r.resolveCodeAction) {
              return r.resolveCodeAction(e, t, o);
            } else {
              return o(e, t);
            }
          } : undefined
        };
        return [a.languages.registerCodeActionsProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n, this.getMetadata(e)), n];
      }
      getMetadata(e) {
        if (e.codeActionKinds !== undefined || e.documentation !== undefined) {
          return {
            providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(e.codeActionKinds),
            documentation: this._client.protocol2CodeConverter.asCodeActionDocumentations(e.documentation)
          };
        }
      }
    }
    exports.CodeActionFeature = l;
  },
  11798: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConverter = undefined;
    const A = __importStar(require(91398));
    const c = __importStar(require(98766));
    const u = __importStar(require(58319));
    const l = __importStar(require(80483));
    const g = __importDefault(require(17652));
    const d = __importDefault(require(65588));
    const h = __importDefault(require(97424));
    const f = __importDefault(require(9206));
    const p = require(37894);
    const m = __importDefault(require(38717));
    const I = __importDefault(require(67321));
    const E = __importDefault(require(56144));
    const y = __importDefault(require(7511));
    var w;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && !!t.inserting && !!t.replacing;
      };
    })(w ||= {});
    exports.createConverter = function (e) {
      const t = e || (e => e.toString());
      function n(e) {
        return t(e);
      }
      function r(e) {
        return {
          uri: t(e.uri)
        };
      }
      function o(e) {
        return {
          uri: t(e.uri),
          languageId: e.languageId,
          version: e.version,
          text: e.getText()
        };
      }
      function s(e) {
        switch (e) {
          case A.TextDocumentSaveReason.Manual:
            return c.TextDocumentSaveReason.Manual;
          case A.TextDocumentSaveReason.AfterDelay:
            return c.TextDocumentSaveReason.AfterDelay;
          case A.TextDocumentSaveReason.FocusOut:
            return c.TextDocumentSaveReason.FocusOut;
        }
        return c.TextDocumentSaveReason.Manual;
      }
      function a(e) {
        switch (e) {
          case A.CompletionTriggerKind.TriggerCharacter:
            return c.CompletionTriggerKind.TriggerCharacter;
          case A.CompletionTriggerKind.TriggerForIncompleteCompletions:
            return c.CompletionTriggerKind.TriggerForIncompleteCompletions;
          default:
            return c.CompletionTriggerKind.Invoked;
        }
      }
      function _(e) {
        switch (e) {
          case A.SignatureHelpTriggerKind.Invoke:
            return c.SignatureHelpTriggerKind.Invoked;
          case A.SignatureHelpTriggerKind.TriggerCharacter:
            return c.SignatureHelpTriggerKind.TriggerCharacter;
          case A.SignatureHelpTriggerKind.ContentChange:
            return c.SignatureHelpTriggerKind.ContentChange;
        }
      }
      function v(e) {
        return {
          label: e.label
        };
      }
      function b(e) {
        return {
          label: e.label,
          parameters: (t = e.parameters, t.map(v))
        };
        var t;
      }
      function B(e) {
        return {
          line: e.line,
          character: e.character
        };
      }
      function Q(e) {
        if (e == null) {
          return e;
        } else {
          return {
            line: e.line > c.uinteger.MAX_VALUE ? c.uinteger.MAX_VALUE : e.line,
            character: e.character > c.uinteger.MAX_VALUE ? c.uinteger.MAX_VALUE : e.character
          };
        }
      }
      function D(e) {
        if (e == null) {
          return e;
        } else {
          return {
            start: Q(e.start),
            end: Q(e.end)
          };
        }
      }
      function S(e) {
        if (e == null) {
          return e;
        } else {
          return c.Location.create(n(e.uri), D(e.range));
        }
      }
      function T(e) {
        switch (e) {
          case A.DiagnosticSeverity.Error:
            return c.DiagnosticSeverity.Error;
          case A.DiagnosticSeverity.Warning:
            return c.DiagnosticSeverity.Warning;
          case A.DiagnosticSeverity.Information:
            return c.DiagnosticSeverity.Information;
          case A.DiagnosticSeverity.Hint:
            return c.DiagnosticSeverity.Hint;
        }
      }
      function R(e) {
        switch (e) {
          case A.DiagnosticTag.Unnecessary:
            return c.DiagnosticTag.Unnecessary;
          case A.DiagnosticTag.Deprecated:
            return c.DiagnosticTag.Deprecated;
          default:
            return;
        }
      }
      function k(e) {
        return {
          message: e.message,
          location: S(e.location)
        };
      }
      function x(e) {
        const t = c.Diagnostic.create(D(e.range), e.message);
        const r = e instanceof p.ProtocolDiagnostic ? e : undefined;
        if (r !== undefined && r.data !== undefined) {
          t.data = r.data;
        }
        const o = function (e) {
          if (e != null) {
            if (u.number(e) || u.string(e)) {
              return e;
            } else {
              return {
                value: e.value,
                target: n(e.target)
              };
            }
          }
        }(e.code);
        if (p.DiagnosticCode.is(o)) {
          if (r !== undefined && r.hasDiagnosticCode) {
            t.code = o;
          } else {
            t.code = o.value;
            t.codeDescription = {
              href: o.target
            };
          }
        } else {
          t.code = o;
        }
        if (u.number(e.severity)) {
          t.severity = T(e.severity);
        }
        if (Array.isArray(e.tags)) {
          t.tags = function (e) {
            if (!e) {
              return;
            }
            const t = [];
            for (const n of e) {
              const e = R(n);
              if (e !== undefined) {
                t.push(e);
              }
            }
            if (t.length > 0) {
              return t;
            } else {
              return undefined;
            }
          }(e.tags);
        }
        if (e.relatedInformation) {
          t.relatedInformation = e.relatedInformation.map(k);
        }
        if (e.source) {
          t.source = e.source;
        }
        return t;
      }
      function P(e, t) {
        if (e == null) {
          return e;
        } else {
          return l.map(e, x, t);
        }
      }
      function F(e) {
        if (e == null) {
          return e;
        } else {
          return e.map(x);
        }
      }
      function M(e) {
        if (e === A.CompletionItemTag.Deprecated) {
          return c.CompletionItemTag.Deprecated;
        }
      }
      function O(e) {
        return {
          range: D(e.range),
          newText: e.newText
        };
      }
      function N(e) {
        if (e == null) {
          return e;
        } else {
          return e.map(O);
        }
      }
      function L(e) {
        if (e <= A.SymbolKind.TypeParameter) {
          return e + 1;
        } else {
          return c.SymbolKind.Property;
        }
      }
      function K(e) {
        return e;
      }
      function U(e) {
        return e.map(K);
      }
      function j(e) {
        switch (e) {
          case A.CodeActionTriggerKind.Invoke:
            return c.CodeActionTriggerKind.Invoked;
          case A.CodeActionTriggerKind.Automatic:
            return c.CodeActionTriggerKind.Automatic;
          default:
            return;
        }
      }
      function q(e) {
        if (e != null) {
          return e.value;
        }
      }
      function G(e) {
        return {
          triggerKind: Y(e.triggerKind),
          selectedCompletionInfo: H(e.selectedCompletionInfo)
        };
      }
      function Y(e) {
        switch (e) {
          case A.InlineCompletionTriggerKind.Invoke:
            return c.InlineCompletionTriggerKind.Invoked;
          case A.InlineCompletionTriggerKind.Automatic:
            return c.InlineCompletionTriggerKind.Automatic;
        }
      }
      function H(e) {
        if (e != null) {
          return {
            range: D(e.range),
            text: e.text
          };
        }
      }
      function J(e) {
        const t = c.Command.create(e.title, e.command);
        if (e.tooltip) {
          t.tooltip = e.tooltip;
        }
        if (e.arguments) {
          t.arguments = e.arguments;
        }
        return t;
      }
      function z(e) {
        const t = c.InlayHintLabelPart.create(e.value);
        if (e.location !== undefined) {
          t.location = S(e.location);
        }
        if (e.command !== undefined) {
          t.command = J(e.command);
        }
        if (e.tooltip !== undefined) {
          t.tooltip = $(e.tooltip);
        }
        return t;
      }
      function $(e) {
        if (typeof e == 'string') {
          return e;
        }
        return {
          kind: c.MarkupKind.Markdown,
          value: e.value
        };
      }
      return {
        asUri: n,
        asTextDocumentIdentifier: r,
        asTextDocumentItem: o,
        asVersionedTextDocumentIdentifier: function (e) {
          return {
            uri: t(e.uri),
            version: e.version
          };
        },
        asOpenTextDocumentParams: function (e) {
          return {
            textDocument: o(e)
          };
        },
        asChangeTextDocumentParams: function (e, n, r) {
          if (function (e) {
            const t = e;
            return !!t.uri && !!t.version;
          }(e)) {
            return {
              textDocument: {
                uri: t(e.uri),
                version: e.version
              },
              contentChanges: [{
                text: e.getText()
              }]
            };
          }
          if (function (e) {
            const t = e;
            return !!t.document && !!t.contentChanges;
          }(e)) {
            const o = r;
            return {
              textDocument: {
                uri: t(n),
                version: o
              },
              contentChanges: e.contentChanges.map(e => {
                const t = e.range;
                return {
                  range: {
                    start: {
                      line: t.start.line,
                      character: t.start.character
                    },
                    end: {
                      line: t.end.line,
                      character: t.end.character
                    }
                  },
                  rangeLength: e.rangeLength,
                  text: e.text
                };
              })
            };
          }
          throw Error('Unsupported text document change parameter');
        },
        asCloseTextDocumentParams: function (e) {
          return {
            textDocument: r(e)
          };
        },
        asSaveTextDocumentParams: function (e, t = false) {
          const n = {
            textDocument: r(e)
          };
          if (t) {
            n.text = e.getText();
          }
          return n;
        },
        asWillSaveTextDocumentParams: function (e) {
          return {
            textDocument: r(e.document),
            reason: s(e.reason)
          };
        },
        asDidCreateFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              uri: t(e)
            }))
          };
        },
        asDidRenameFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              oldUri: t(e.oldUri),
              newUri: t(e.newUri)
            }))
          };
        },
        asDidDeleteFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              uri: t(e)
            }))
          };
        },
        asWillCreateFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              uri: t(e)
            }))
          };
        },
        asWillRenameFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              oldUri: t(e.oldUri),
              newUri: t(e.newUri)
            }))
          };
        },
        asWillDeleteFilesParams: function (e) {
          return {
            files: e.files.map(e => ({
              uri: t(e)
            }))
          };
        },
        asTextDocumentPositionParams: function (e, t) {
          return {
            textDocument: r(e),
            position: B(t)
          };
        },
        asCompletionParams: function (e, t, n) {
          return {
            textDocument: r(e),
            position: B(t),
            context: {
              triggerKind: a(n.triggerKind),
              triggerCharacter: n.triggerCharacter
            }
          };
        },
        asSignatureHelpParams: function (e, t, n) {
          return {
            textDocument: r(e),
            position: B(t),
            context: {
              isRetrigger: n.isRetrigger,
              triggerCharacter: n.triggerCharacter,
              triggerKind: _(n.triggerKind),
              activeSignatureHelp: (o = n.activeSignatureHelp, o === undefined ? o : {
                signatures: (s = o.signatures, s.map(b)),
                activeSignature: o.activeSignature,
                activeParameter: o.activeParameter
              })
            }
          };
          var o;
          var s;
        },
        asWorkerPosition: B,
        asRange: D,
        asRanges: function (e) {
          return e.map(D);
        },
        asPosition: Q,
        asPositions: function (e, t) {
          return l.map(e, Q, t);
        },
        asPositionsSync: function (e) {
          return e.map(Q);
        },
        asLocation: S,
        asDiagnosticSeverity: T,
        asDiagnosticTag: R,
        asDiagnostic: x,
        asDiagnostics: P,
        asDiagnosticsSync: F,
        asCompletionItem: function (e, t = false) {
          let n;
          let r;
          if (u.string(e.label)) {
            n = e.label;
          } else {
            n = e.label.label;
            if (!!t && (e.label.detail !== undefined || e.label.description !== undefined)) {
              r = {
                detail: e.label.detail,
                description: e.label.description
              };
            }
          }
          const o = {
            label: n
          };
          if (r !== undefined) {
            o.labelDetails = r;
          }
          const s = e instanceof g.default ? e : undefined;
          var a;
          var l;
          if (e.detail) {
            o.detail = e.detail;
          }
          if (e.documentation) {
            if (s && s.documentationFormat !== '$string') {
              o.documentation = function (e, t) {
                switch (e) {
                  case '$string':
                    return t;
                  case c.MarkupKind.PlainText:
                    return {
                      kind: e,
                      value: t
                    };
                  case c.MarkupKind.Markdown:
                    return {
                      kind: e,
                      value: t.value
                    };
                  default:
                    return `Unsupported Markup content received. Kind is: ${e}`;
                }
              }(s.documentationFormat, e.documentation);
            } else {
              o.documentation = e.documentation;
            }
          }
          if (e.filterText) {
            o.filterText = e.filterText;
          }
          (function (e, t) {
            let n;
            let r;
            let o = c.InsertTextFormat.PlainText;
            if (t.textEdit) {
              n = t.textEdit.newText;
              r = t.textEdit.range;
            } else {
              if (t.insertText instanceof A.SnippetString) {
                o = c.InsertTextFormat.Snippet;
                n = t.insertText.value;
              } else {
                n = t.insertText;
              }
            }
            if (t.range) {
              r = t.range;
            }
            e.insertTextFormat = o;
            if (t.fromEdit && n !== undefined && r !== undefined) {
              e.textEdit = function (e, t) {
                if (w.is(t)) {
                  return c.InsertReplaceEdit.create(e, D(t.inserting), D(t.replacing));
                } else {
                  return {
                    newText: e,
                    range: D(t)
                  };
                }
              }(n, r);
            } else {
              e.insertText = n;
            }
          })(o, e);
          if (u.number(e.kind)) {
            a = e.kind;
            o.kind = (l = s && s.originalItemKind) !== undefined ? l : a + 1;
          }
          if (e.sortText) {
            o.sortText = e.sortText;
          }
          if (e.additionalTextEdits) {
            o.additionalTextEdits = N(e.additionalTextEdits);
          }
          if (e.commitCharacters) {
            o.commitCharacters = e.commitCharacters.slice();
          }
          if (e.command) {
            o.command = J(e.command);
          }
          if (e.preselect === true || e.preselect === false) {
            o.preselect = e.preselect;
          }
          const d = function (e) {
            if (e === undefined) {
              return e;
            }
            const t = [];
            for (const n of e) {
              const e = M(n);
              if (e !== undefined) {
                t.push(e);
              }
            }
            return t;
          }(e.tags);
          if (s) {
            if (s.data !== undefined) {
              o.data = s.data;
            }
            if (s.deprecated === true || s.deprecated === false) {
              if (s.deprecated === true && d !== undefined && d.length > 0) {
                const e = d.indexOf(A.CompletionItemTag.Deprecated);
                if (e !== -1) {
                  d.splice(e, 1);
                }
              }
              o.deprecated = s.deprecated;
            }
            if (s.insertTextMode !== undefined) {
              o.insertTextMode = s.insertTextMode;
            }
          }
          if (d !== undefined && d.length > 0) {
            o.tags = d;
          }
          if (o.insertTextMode === undefined && e.keepWhitespace === true) {
            o.insertTextMode = c.InsertTextMode.adjustIndentation;
          }
          return o;
        },
        asTextEdit: O,
        asSymbolKind: L,
        asSymbolTag: K,
        asSymbolTags: U,
        asReferenceParams: function (e, t, n) {
          return {
            textDocument: r(e),
            position: B(t),
            context: {
              includeDeclaration: n.includeDeclaration
            }
          };
        },
        asCodeAction: async function (e, t) {
          const n = c.CodeAction.create(e.title);
          if (e instanceof f.default && e.data !== undefined) {
            n.data = e.data;
          }
          if (e.kind !== undefined) {
            n.kind = q(e.kind);
          }
          if (e.diagnostics !== undefined) {
            n.diagnostics = await P(e.diagnostics, t);
          }
          if (e.edit !== undefined) {
            throw new Error('VS Code code actions can only be converted to a protocol code action without an edit.');
          }
          if (e.command !== undefined) {
            n.command = J(e.command);
          }
          if (e.isPreferred !== undefined) {
            n.isPreferred = e.isPreferred;
          }
          if (e.disabled !== undefined) {
            n.disabled = {
              reason: e.disabled.reason
            };
          }
          return n;
        },
        asCodeActionSync: function (e) {
          const t = c.CodeAction.create(e.title);
          if (e instanceof f.default && e.data !== undefined) {
            t.data = e.data;
          }
          if (e.kind !== undefined) {
            t.kind = q(e.kind);
          }
          if (e.diagnostics !== undefined) {
            t.diagnostics = F(e.diagnostics);
          }
          if (e.edit !== undefined) {
            throw new Error('VS Code code actions can only be converted to a protocol code action without an edit.');
          }
          if (e.command !== undefined) {
            t.command = J(e.command);
          }
          if (e.isPreferred !== undefined) {
            t.isPreferred = e.isPreferred;
          }
          if (e.disabled !== undefined) {
            t.disabled = {
              reason: e.disabled.reason
            };
          }
          return t;
        },
        asCodeActionContext: async function (e, t) {
          if (e == null) {
            return e;
          }
          let n;
          if (e.only && u.string(e.only.value)) {
            n = [e.only.value];
          }
          return c.CodeActionContext.create(await P(e.diagnostics, t), n, j(e.triggerKind));
        },
        asCodeActionContextSync: function (e) {
          if (e == null) {
            return e;
          }
          let t;
          if (e.only && u.string(e.only.value)) {
            t = [e.only.value];
          }
          return c.CodeActionContext.create(F(e.diagnostics), t, j(e.triggerKind));
        },
        asInlineValueContext: function (e) {
          return c.InlineValueContext.create(e.frameId, D(e.stoppedLocation));
        },
        asCommand: J,
        asCodeLens: function (e) {
          const t = c.CodeLens.create(D(e.range));
          if (e.command) {
            t.command = J(e.command);
          }
          if (e instanceof d.default && e.data) {
            t.data = e.data;
          }
          return t;
        },
        asFormattingOptions: function (e, t) {
          const n = {
            tabSize: e.tabSize,
            insertSpaces: e.insertSpaces
          };
          if (t.trimTrailingWhitespace) {
            n.trimTrailingWhitespace = true;
          }
          if (t.trimFinalNewlines) {
            n.trimFinalNewlines = true;
          }
          if (t.insertFinalNewline) {
            n.insertFinalNewline = true;
          }
          return n;
        },
        asDocumentSymbolParams: function (e) {
          return {
            textDocument: r(e)
          };
        },
        asCodeLensParams: function (e) {
          return {
            textDocument: r(e)
          };
        },
        asDocumentLink: function (e) {
          const t = c.DocumentLink.create(D(e.range));
          if (e.target) {
            t.target = n(e.target);
          }
          if (e.tooltip !== undefined) {
            t.tooltip = e.tooltip;
          }
          const r = e instanceof h.default ? e : undefined;
          if (r && r.data) {
            t.data = r.data;
          }
          return t;
        },
        asDocumentLinkParams: function (e) {
          return {
            textDocument: r(e)
          };
        },
        asCallHierarchyItem: function (e) {
          const t = {
            name: e.name,
            kind: L(e.kind),
            uri: n(e.uri),
            range: D(e.range),
            selectionRange: D(e.selectionRange)
          };
          if (e.detail !== undefined && e.detail.length > 0) {
            t.detail = e.detail;
          }
          if (e.tags !== undefined) {
            t.tags = U(e.tags);
          }
          if (e instanceof m.default && e.data !== undefined) {
            t.data = e.data;
          }
          return t;
        },
        asTypeHierarchyItem: function (e) {
          const t = {
            name: e.name,
            kind: L(e.kind),
            uri: n(e.uri),
            range: D(e.range),
            selectionRange: D(e.selectionRange)
          };
          if (e.detail !== undefined && e.detail.length > 0) {
            t.detail = e.detail;
          }
          if (e.tags !== undefined) {
            t.tags = U(e.tags);
          }
          if (e instanceof I.default && e.data !== undefined) {
            t.data = e.data;
          }
          return t;
        },
        asInlayHint: function (e) {
          const t = typeof e.label == 'string' ? e.label : e.label.map(z);
          const n = c.InlayHint.create(Q(e.position), t);
          if (e.kind !== undefined) {
            n.kind = e.kind;
          }
          if (e.textEdits !== undefined) {
            n.textEdits = N(e.textEdits);
          }
          if (e.tooltip !== undefined) {
            n.tooltip = $(e.tooltip);
          }
          if (e.paddingLeft !== undefined) {
            n.paddingLeft = e.paddingLeft;
          }
          if (e.paddingRight !== undefined) {
            n.paddingRight = e.paddingRight;
          }
          if (e instanceof y.default && e.data !== undefined) {
            n.data = e.data;
          }
          return n;
        },
        asWorkspaceSymbol: function (e) {
          const n = e instanceof E.default ? {
            name: e.name,
            kind: L(e.kind),
            location: e.hasRange ? S(e.location) : {
              uri: t(e.location.uri)
            },
            data: e.data
          } : {
            name: e.name,
            kind: L(e.kind),
            location: S(e.location)
          };
          if (e.tags !== undefined) {
            n.tags = U(e.tags);
          }
          if (e.containerName !== '') {
            n.containerName = e.containerName;
          }
          return n;
        },
        asInlineCompletionParams: function (e, t, n) {
          return {
            textDocument: r(e),
            position: Q(t),
            context: G(n)
          };
        },
        asInlineCompletionContext: G
      };
    };
  },
  88140: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CodeLensFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(69032));
    const u = require(14294);
    class l extends u.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.CodeLensRequest.type);
      }
      fillClientCapabilities(e) {
        const t = u.ensure(u.ensure(e, 'textDocument'), 'codeLens');
        t.dynamicRegistration = true;
        t.resolveSupport = {
          properties: ['command']
        };
        u.ensure(u.ensure(e, 'workspace'), 'codeLens').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(A.CodeLensRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeCodeLensEmitter.fire();
          }
        });
        const n = this.getRegistrationOptions(t, e.codeLensProvider);
        if (n) {
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = new a.EventEmitter();
        const r = {
          onDidChangeCodeLenses: n.event,
          provideCodeLenses: (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.CodeLensRequest.type, n.code2ProtocolConverter.asCodeLensParams(e), t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asCodeLenses(e, t), e => n.handleFailedRequest(A.CodeLensRequest.type, t, e, null));
            const o = n.middleware;
            if (o.provideCodeLenses) {
              return o.provideCodeLenses(e, t, r);
            } else {
              return r(e, t);
            }
          },
          resolveCodeLens: e.resolveProvider ? (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.CodeLensResolveRequest.type, n.code2ProtocolConverter.asCodeLens(e), t).then(r => t.isCancellationRequested ? e : n.protocol2CodeConverter.asCodeLens(r), r => n.handleFailedRequest(A.CodeLensResolveRequest.type, t, r, e));
            const o = n.middleware;
            if (o.resolveCodeLens) {
              return o.resolveCodeLens(e, t, r);
            } else {
              return r(e, t);
            }
          } : undefined
        };
        return [a.languages.registerCodeLensProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), r), {
          provider: r,
          onDidChangeCodeLensEmitter: n
        }];
      }
    }
    exports.CodeLensFeature = l;
  },
  93515: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ColorProviderFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.DocumentColorRequest.type);
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'textDocument'), 'colorProvider').dynamicRegistration = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.colorProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideColorPresentations: (e, t, n) => {
            const r = this._client;
            const s = (e, t, n) => {
              const s = {
                color: e,
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(t.document),
                range: r.code2ProtocolConverter.asRange(t.range)
              };
              return r.sendRequest(o.ColorPresentationRequest.type, s, n).then(e => n.isCancellationRequested ? null : this._client.protocol2CodeConverter.asColorPresentations(e, n), e => r.handleFailedRequest(o.ColorPresentationRequest.type, n, e, null));
            };
            const a = r.middleware;
            if (a.provideColorPresentations) {
              return a.provideColorPresentations(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          },
          provideDocumentColors: (e, t) => {
            const n = this._client;
            const r = (e, t) => {
              const r = {
                textDocument: n.code2ProtocolConverter.asTextDocumentIdentifier(e)
              };
              return n.sendRequest(o.DocumentColorRequest.type, r, t).then(e => t.isCancellationRequested ? null : this._client.protocol2CodeConverter.asColorInformations(e, t), e => n.handleFailedRequest(o.DocumentColorRequest.type, t, e, null));
            };
            const s = n.middleware;
            if (s.provideDocumentColors) {
              return s.provideDocumentColors(e, t, r);
            } else {
              return r(e, t);
            }
          }
        };
        return [r.languages.registerColorProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.ColorProviderFeature = a;
  },
  96535: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CompletionItemFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    const l = [A.CompletionItemKind.Text, A.CompletionItemKind.Method, A.CompletionItemKind.Function, A.CompletionItemKind.Constructor, A.CompletionItemKind.Field, A.CompletionItemKind.Variable, A.CompletionItemKind.Class, A.CompletionItemKind.Interface, A.CompletionItemKind.Module, A.CompletionItemKind.Property, A.CompletionItemKind.Unit, A.CompletionItemKind.Value, A.CompletionItemKind.Enum, A.CompletionItemKind.Keyword, A.CompletionItemKind.Snippet, A.CompletionItemKind.Color, A.CompletionItemKind.File, A.CompletionItemKind.Reference, A.CompletionItemKind.Folder, A.CompletionItemKind.EnumMember, A.CompletionItemKind.Constant, A.CompletionItemKind.Struct, A.CompletionItemKind.Event, A.CompletionItemKind.Operator, A.CompletionItemKind.TypeParameter];
    class g extends c.TextDocumentLanguageFeature {
      labelDetailsSupport;
      constructor(e) {
        super(e, A.CompletionRequest.type);
        this.labelDetailsSupport = new Map();
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'completion');
        t.dynamicRegistration = true;
        t.contextSupport = true;
        t.completionItem = {
          snippetSupport: true,
          commitCharactersSupport: true,
          documentationFormat: [A.MarkupKind.Markdown, A.MarkupKind.PlainText],
          deprecatedSupport: true,
          preselectSupport: true,
          tagSupport: {
            valueSet: [A.CompletionItemTag.Deprecated]
          },
          insertReplaceSupport: true,
          resolveSupport: {
            properties: ['documentation', 'detail', 'additionalTextEdits']
          },
          insertTextModeSupport: {
            valueSet: [A.InsertTextMode.asIs, A.InsertTextMode.adjustIndentation]
          },
          labelDetailsSupport: true
        };
        t.insertTextMode = A.InsertTextMode.adjustIndentation;
        t.completionItemKind = {
          valueSet: l
        };
        t.completionList = {
          itemDefaults: ['commitCharacters', 'editRange', 'insertTextFormat', 'insertTextMode', 'data']
        };
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.completionProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e, t) {
        this.labelDetailsSupport.set(t, !!e.completionItem?.labelDetailsSupport);
        const n = e.triggerCharacters ?? [];
        const r = e.allCommitCharacters;
        const o = e.documentSelector;
        const s = {
          provideCompletionItems: (e, t, n, o) => {
            const s = this._client;
            const a = this._client.middleware;
            const c = (e, t, n, o) => s.sendRequest(A.CompletionRequest.type, s.code2ProtocolConverter.asCompletionParams(e, t, n), o).then(e => o.isCancellationRequested ? null : s.protocol2CodeConverter.asCompletionResult(e, r, o), e => s.handleFailedRequest(A.CompletionRequest.type, o, e, null));
            if (a.provideCompletionItem) {
              return a.provideCompletionItem(e, t, o, n, c);
            } else {
              return c(e, t, o, n);
            }
          },
          resolveCompletionItem: e.resolveProvider ? (e, n) => {
            const r = this._client;
            const o = this._client.middleware;
            const s = (e, n) => r.sendRequest(A.CompletionResolveRequest.type, r.code2ProtocolConverter.asCompletionItem(e, !!this.labelDetailsSupport.get(t)), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asCompletionItem(e), t => r.handleFailedRequest(A.CompletionResolveRequest.type, n, t, e));
            if (o.resolveCompletionItem) {
              return o.resolveCompletionItem(e, n, s);
            } else {
              return s(e, n);
            }
          } : undefined
        };
        return [a.languages.registerCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(o), s, ...n), s];
      }
    }
    exports.CompletionItemFeature = g;
  },
  95199: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SyncConfigurationFeature = exports.toJSONObject = exports.ConfigurationFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(58319));
    const u = __importStar(require(69032));
    const l = require(14294);
    function g(e) {
      if (e) {
        if (Array.isArray(e)) {
          return e.map(g);
        }
        if (typeof e == 'object') {
          const t = Object.create(null);
          for (const n in e) {
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              t[n] = g(e[n]);
            }
          }
          return t;
        }
      }
      return e;
    }
    exports.ConfigurationFeature = class {
      _client;
      constructor(e) {
        this._client = e;
      }
      getState() {
        return {
          kind: 'static'
        };
      }
      fillClientCapabilities(e) {
        e.workspace = e.workspace || {};
        e.workspace.configuration = true;
      }
      initialize() {
        const e = this._client;
        e.onRequest(A.ConfigurationRequest.type, (t, n) => {
          const r = e => {
            const t = [];
            for (const n of e.items) {
              const e = n.scopeUri !== undefined && n.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(n.scopeUri) : undefined;
              t.push(this.getConfiguration(e, n.section !== null ? n.section : undefined));
            }
            return t;
          };
          const o = e.middleware.workspace;
          if (o && o.configuration) {
            return o.configuration(t, n, r);
          } else {
            return r(t);
          }
        });
      }
      getConfiguration(e, t) {
        let n = null;
        if (t) {
          const r = t.lastIndexOf('.');
          if (r === -1) {
            n = g(a.workspace.getConfiguration(undefined, e).get(t));
          } else {
            const o = a.workspace.getConfiguration(t.substr(0, r), e);
            if (o) {
              n = g(o.get(t.substr(r + 1)));
            }
          }
        } else {
          const t = a.workspace.getConfiguration(undefined, e);
          n = {};
          for (const e of Object.keys(t)) {
            if (t.has(e)) {
              n[e] = g(t.get(e));
            }
          }
        }
        if (n === undefined) {
          n = null;
        }
        return n;
      }
      clear() {}
    };
    exports.toJSONObject = g;
    exports.SyncConfigurationFeature = class {
      _client;
      isCleared;
      _listeners;
      constructor(e) {
        this._client = e;
        this.isCleared = false;
        this._listeners = new Map();
      }
      getState() {
        return {
          kind: 'workspace',
          id: this.registrationType.method,
          registrations: this._listeners.size > 0
        };
      }
      get registrationType() {
        return A.DidChangeConfigurationNotification.type;
      }
      fillClientCapabilities(e) {
        l.ensure(l.ensure(e, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;
      }
      initialize() {
        this.isCleared = false;
        const e = this._client.clientOptions.synchronize?.configurationSection;
        if (e !== undefined) {
          this.register({
            id: u.generateUuid(),
            registerOptions: {
              section: e
            }
          });
        }
      }
      register(e) {
        const t = a.workspace.onDidChangeConfiguration(t => {
          this.onDidChangeConfiguration(e.registerOptions.section, t);
        });
        this._listeners.set(e.id, t);
        if (e.registerOptions.section !== undefined) {
          this.onDidChangeConfiguration(e.registerOptions.section, undefined);
        }
      }
      unregister(e) {
        const t = this._listeners.get(e);
        if (t) {
          this._listeners.delete(e);
          t.dispose();
        }
      }
      clear() {
        for (const e of this._listeners.values()) {
          e.dispose();
        }
        this._listeners.clear();
        this.isCleared = true;
      }
      onDidChangeConfiguration(e, t) {
        if (this.isCleared) {
          return;
        }
        let n;
        n = c.string(e) ? [e] : e;
        if (n !== undefined && t !== undefined) {
          if (!n.some(e => t.affectsConfiguration(e))) {
            return;
          }
        }
        const r = async e => e === undefined ? this._client.sendNotification(A.DidChangeConfigurationNotification.type, {
          settings: null
        }) : this._client.sendNotification(A.DidChangeConfigurationNotification.type, {
          settings: this.extractSettingsInformation(e)
        });
        const o = this._client.middleware.workspace?.didChangeConfiguration;
        (o ? o(n, r) : r(n)).catch(e => {
          this._client.error(`Sending notification ${A.DidChangeConfigurationNotification.type.method} failed`, e);
        });
      }
      extractSettingsInformation(e) {
        function t(e, t) {
          let n = e;
          for (let e = 0; e < t.length - 1; e++) {
            let r = n[t[e]];
            if (!r) {
              r = Object.create(null);
              n[t[e]] = r;
            }
            n = r;
          }
          return n;
        }
        const n = this._client.clientOptions.workspaceFolder ? this._client.clientOptions.workspaceFolder.uri : undefined;
        const r = Object.create(null);
        for (let o = 0; o < e.length; o++) {
          const s = e[o];
          const A = s.indexOf('.');
          let c = null;
          c = A >= 0 ? a.workspace.getConfiguration(s.substr(0, A), n).get(s.substr(A + 1)) : a.workspace.getConfiguration(undefined, n).get(s);
          if (c) {
            const n = e[o].split('.');
            t(r, n)[n[n.length - 1]] = g(c);
          }
        }
        return r;
      }
    };
  },
  7061: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DeclarationFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.DeclarationRequest.type);
      }
      fillClientCapabilities(e) {
        const t = s.ensure(s.ensure(e, 'textDocument'), 'declaration');
        t.dynamicRegistration = true;
        t.linkSupport = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.declarationProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDeclaration: (e, t, n) => {
            const r = this._client;
            const s = (e, t, n) => r.sendRequest(o.DeclarationRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asDeclarationResult(e, n), e => r.handleFailedRequest(o.DeclarationRequest.type, n, e, null));
            const a = r.middleware;
            if (a.provideDeclaration) {
              return a.provideDeclaration(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return r.languages.registerDeclarationProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.DeclarationFeature = a;
  },
  30600: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DefinitionFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DefinitionRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'definition');
        t.dynamicRegistration = true;
        t.linkSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.definitionProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDefinition: (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => r.sendRequest(A.DefinitionRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asDefinitionResult(e, n), e => r.handleFailedRequest(A.DefinitionRequest.type, n, e, null));
            const s = r.middleware;
            if (s.provideDefinition) {
              return s.provideDefinition(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return a.languages.registerDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.DefinitionFeature = l;
  },
  79214: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticFeature = exports.DiagnosticPullMode = exports.vsdiag = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(69032);
    const a = require(63191);
    const A = require(14294);
    function c(e, t) {
      if (e[t] === undefined) {
        e[t] = {};
      }
      return e[t];
    }
    var u;
    var l;
    var g;
    var d;
    var h;
    (function (e) {
      let t;
      (function (e) {
        e.full = 'full';
        e.unChanged = 'unChanged';
      })(t = e.DocumentDiagnosticReportKind ||= {});
    })(u || (exports.vsdiag = u = {}));
    (function (e) {
      e.onType = 'onType';
      e.onSave = 'onSave';
      e.onFocus = 'onFocus';
    })(l || (exports.DiagnosticPullMode = l = {}));
    (function (e) {
      e.active = 'open';
      e.reschedule = 'reschedule';
      e.outDated = 'drop';
    })(g ||= {});
    (function (e) {
      e[e.document = 1] = 'document';
      e[e.workspace = 2] = 'workspace';
    })(d ||= {});
    (function (e) {
      e.asKey = function (e) {
        if (e instanceof r.Uri) {
          return e.toString();
        } else {
          return e.uri.toString();
        }
      };
    })(h ||= {});
    class f {
      documentPullStates;
      workspacePullStates;
      constructor() {
        this.documentPullStates = new Map();
        this.workspacePullStates = new Map();
      }
      track(e, t, n) {
        const o = e === d.document ? this.documentPullStates : this.workspacePullStates;
        const [s, a, A] = t instanceof r.Uri ? [t.toString(), t, n] : [t.uri.toString(), t.uri, t.version];
        let c = o.get(s);
        if (c === undefined) {
          c = {
            document: a,
            pulledVersion: A,
            resultId: undefined
          };
          o.set(s, c);
        }
        return c;
      }
      update(e, t, n, o) {
        const s = e === d.document ? this.documentPullStates : this.workspacePullStates;
        const [a, A, c, u] = t instanceof r.Uri ? [t.toString(), t, n, o] : [t.uri.toString(), t.uri, t.version, n];
        let l = s.get(a);
        if (l === undefined) {
          l = {
            document: A,
            pulledVersion: c,
            resultId: u
          };
          s.set(a, l);
        } else {
          l.pulledVersion = c;
          l.resultId = u;
        }
      }
      unTrack(e, t) {
        const n = h.asKey(t);
        (e === d.document ? this.documentPullStates : this.workspacePullStates).delete(n);
      }
      tracks(e, t) {
        const n = h.asKey(t);
        return (e === d.document ? this.documentPullStates : this.workspacePullStates).has(n);
      }
      getResultId(e, t) {
        const n = h.asKey(t);
        const r = e === d.document ? this.documentPullStates : this.workspacePullStates;
        return r.get(n)?.resultId;
      }
      getAllResultIds() {
        const e = [];
        for (let [t, n] of this.workspacePullStates) {
          if (this.documentPullStates.has(t)) {
            n = this.documentPullStates.get(t);
          }
          if (n.resultId !== undefined) {
            e.push({
              uri: t,
              value: n.resultId
            });
          }
        }
        return e;
      }
    }
    class p {
      isDisposed;
      client;
      tabs;
      options;
      onDidChangeDiagnosticsEmitter;
      provider;
      diagnostics;
      openRequests;
      documentStates;
      workspaceErrorCounter;
      workspaceCancellation;
      workspaceTimeout;
      constructor(e, t, n) {
        this.client = e;
        this.tabs = t;
        this.options = n;
        this.isDisposed = false;
        this.onDidChangeDiagnosticsEmitter = new r.EventEmitter();
        this.provider = this.createProvider();
        this.diagnostics = r.languages.createDiagnosticCollection(n.identifier);
        this.openRequests = new Map();
        this.documentStates = new f();
        this.workspaceErrorCounter = 0;
      }
      knows(e, t) {
        const n = t instanceof r.Uri ? t : t.uri;
        return this.documentStates.tracks(e, t) || this.openRequests.has(n.toString());
      }
      forget(e, t) {
        this.documentStates.unTrack(e, t);
      }
      pull(e, t) {
        if (this.isDisposed) {
          return;
        }
        const n = e instanceof r.Uri ? e : e.uri;
        this.pullAsync(e).then(() => {
          if (t) {
            t();
          }
        }, e => {
          this.client.error(`Document pull failed for text document ${n.toString()}`, e, false);
        });
      }
      async pullAsync(e, t) {
        if (this.isDisposed) {
          return;
        }
        const n = e instanceof r.Uri;
        const s = n ? e : e.uri;
        const a = s.toString();
        t = n ? t : e.version;
        const c = this.openRequests.get(a);
        const l = n ? this.documentStates.track(d.document, e, t) : this.documentStates.track(d.document, e);
        if (c === undefined) {
          const n = new r.CancellationTokenSource();
          let c;
          let h;
          this.openRequests.set(a, {
            state: g.active,
            document: e,
            version: t,
            tokenSource: n
          });
          try {
            c = (await this.provider.provideDiagnostics(e, l.resultId, n.token)) ?? {
              kind: u.DocumentDiagnosticReportKind.full,
              items: []
            };
          } catch (t) {
            if (t instanceof A.LSPCancellationError && o.DiagnosticServerCancellationData.is(t.data) && t.data.retriggerRequest === false) {
              h = {
                state: g.outDated,
                document: e
              };
            }
            if (h !== undefined || !(t instanceof r.CancellationError)) {
              throw t;
            }
            h = {
              state: g.reschedule,
              document: e
            };
          }
          h = h ?? this.openRequests.get(a);
          if (h === undefined) {
            this.client.error(`Lost request state in diagnostic pull model. Clearing diagnostics for ${a}`);
            this.diagnostics.delete(s);
            return;
          }
          this.openRequests.delete(a);
          if (!this.tabs.isVisible(e)) {
            this.documentStates.unTrack(d.document, e);
            return;
          }
          if (h.state === g.outDated) {
            return;
          }
          if (c !== undefined) {
            if (c.kind === u.DocumentDiagnosticReportKind.full) {
              this.diagnostics.set(s, c.items);
            }
            l.pulledVersion = t;
            l.resultId = c.resultId;
          }
          if (h.state === g.reschedule) {
            this.pull(e);
          }
        } else {
          if (c.state === g.active) {
            c.tokenSource.cancel();
            this.openRequests.set(a, {
              state: g.reschedule,
              document: c.document
            });
          } else {
            if (c.state === g.outDated) {
              this.openRequests.set(a, {
                state: g.reschedule,
                document: c.document
              });
            }
          }
        }
      }
      forgetDocument(e) {
        const t = e instanceof r.Uri ? e : e.uri;
        const n = t.toString();
        const o = this.openRequests.get(n);
        if (this.options.workspaceDiagnostics) {
          if (o !== undefined) {
            this.openRequests.set(n, {
              state: g.reschedule,
              document: e
            });
          } else {
            this.pull(e, () => {
              this.forget(d.document, e);
            });
          }
        } else {
          if (o !== undefined) {
            if (o.state === g.active) {
              o.tokenSource.cancel();
            }
            this.openRequests.set(n, {
              state: g.outDated,
              document: e
            });
          }
          this.diagnostics.delete(t);
          this.forget(d.document, e);
        }
      }
      pullWorkspace() {
        if (!this.isDisposed) {
          this.pullWorkspaceAsync().then(() => {
            this.workspaceTimeout = o.RAL().timer.setTimeout(() => {
              this.pullWorkspace();
            }, 2000);
          }, e => {
            if (!(e instanceof A.LSPCancellationError) && !o.DiagnosticServerCancellationData.is(e.data)) {
              this.client.error('Workspace diagnostic pull failed.', e, false);
              this.workspaceErrorCounter++;
            }
            if (this.workspaceErrorCounter <= 5) {
              this.workspaceTimeout = o.RAL().timer.setTimeout(() => {
                this.pullWorkspace();
              }, 2000);
            }
          });
        }
      }
      async pullWorkspaceAsync() {
        if (!this.provider.provideWorkspaceDiagnostics || this.isDisposed) {
          return;
        }
        if (this.workspaceCancellation !== undefined) {
          this.workspaceCancellation.cancel();
          this.workspaceCancellation = undefined;
        }
        this.workspaceCancellation = new r.CancellationTokenSource();
        const e = this.documentStates.getAllResultIds().map(e => ({
          uri: this.client.protocol2CodeConverter.asUri(e.uri),
          value: e.value
        }));
        await this.provider.provideWorkspaceDiagnostics(e, this.workspaceCancellation.token, e => {
          if (e && !this.isDisposed) {
            for (const t of e.items) {
              if (t.kind === u.DocumentDiagnosticReportKind.full) {
                if (!this.documentStates.tracks(d.document, t.uri)) {
                  this.diagnostics.set(t.uri, t.items);
                }
              }
              this.documentStates.update(d.workspace, t.uri, t.version ?? undefined, t.resultId);
            }
          }
        });
      }
      createProvider() {
        const e = {
          onDidChangeDiagnostics: this.onDidChangeDiagnosticsEmitter.event,
          provideDiagnostics: (e, t, n) => {
            const s = (e, t, n) => {
              const s = {
                identifier: this.options.identifier,
                textDocument: {
                  uri: this.client.code2ProtocolConverter.asUri(e instanceof r.Uri ? e : e.uri)
                },
                previousResultId: t
              };
              if (this.isDisposed !== true && this.client.isRunning()) {
                return this.client.sendRequest(o.DocumentDiagnosticRequest.type, s, n).then(async e => e == null || this.isDisposed || n.isCancellationRequested ? {
                  kind: u.DocumentDiagnosticReportKind.full,
                  items: []
                } : e.kind === o.DocumentDiagnosticReportKind.Full ? {
                  kind: u.DocumentDiagnosticReportKind.full,
                  resultId: e.resultId,
                  items: await this.client.protocol2CodeConverter.asDiagnostics(e.items, n)
                } : {
                  kind: u.DocumentDiagnosticReportKind.unChanged,
                  resultId: e.resultId
                }, e => this.client.handleFailedRequest(o.DocumentDiagnosticRequest.type, n, e, {
                  kind: u.DocumentDiagnosticReportKind.full,
                  items: []
                }, true, true));
              } else {
                return {
                  kind: u.DocumentDiagnosticReportKind.full,
                  items: []
                };
              }
            };
            const a = this.client.middleware;
            if (a.provideDiagnostics) {
              return a.provideDiagnostics(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        if (this.options.workspaceDiagnostics) {
          e.provideWorkspaceDiagnostics = (e, t, n) => {
            const r = async e => e.kind === o.DocumentDiagnosticReportKind.Full ? {
              kind: u.DocumentDiagnosticReportKind.full,
              uri: this.client.protocol2CodeConverter.asUri(e.uri),
              resultId: e.resultId,
              version: e.version,
              items: await this.client.protocol2CodeConverter.asDiagnostics(e.items, t)
            } : {
              kind: u.DocumentDiagnosticReportKind.unChanged,
              uri: this.client.protocol2CodeConverter.asUri(e.uri),
              resultId: e.resultId,
              version: e.version
            };
            const a = e => {
              const t = [];
              for (const n of e) {
                t.push({
                  uri: this.client.code2ProtocolConverter.asUri(n.uri),
                  value: n.value
                });
              }
              return t;
            };
            const A = (e, t) => {
              const A = s.generateUuid();
              const c = this.client.onProgress(o.WorkspaceDiagnosticRequest.partialResult, A, async e => {
                if (e == null) {
                  n(null);
                  return;
                }
                const t = {
                  items: []
                };
                for (const n of e.items) {
                  try {
                    t.items.push(await r(n));
                  } catch (e) {
                    this.client.error('Converting workspace diagnostics failed.', e);
                  }
                }
                n(t);
              });
              const u = {
                identifier: this.options.identifier,
                previousResultIds: a(e),
                partialResultToken: A
              };
              if (this.isDisposed !== true && this.client.isRunning()) {
                return this.client.sendRequest(o.WorkspaceDiagnosticRequest.type, u, t).then(async e => {
                  if (t.isCancellationRequested) {
                    return {
                      items: []
                    };
                  }
                  const o = {
                    items: []
                  };
                  for (const t of e.items) {
                    o.items.push(await r(t));
                  }
                  c.dispose();
                  n(o);
                  return {
                    items: []
                  };
                }, e => {
                  c.dispose();
                  return this.client.handleFailedRequest(o.DocumentDiagnosticRequest.type, t, e, {
                    items: []
                  });
                });
              } else {
                return {
                  items: []
                };
              }
            };
            const c = this.client.middleware;
            if (c.provideWorkspaceDiagnostics) {
              return c.provideWorkspaceDiagnostics(e, t, n, A);
            } else {
              return A(e, t);
            }
          };
        }
        return e;
      }
      dispose() {
        this.isDisposed = true;
        this.workspaceCancellation?.cancel();
        this.workspaceTimeout?.dispose();
        for (const [e, t] of this.openRequests) {
          if (t.state === g.active) {
            t.tokenSource.cancel();
          }
          this.openRequests.set(e, {
            state: g.outDated,
            document: t.document
          });
        }
        this.diagnostics.dispose();
      }
    }
    class m {
      client;
      diagnosticRequestor;
      lastDocumentToPull;
      documents;
      timeoutHandle;
      isDisposed;
      constructor(e, t) {
        this.client = e;
        this.diagnosticRequestor = t;
        this.documents = new o.LinkedMap();
        this.isDisposed = false;
      }
      add(e) {
        if (this.isDisposed === true) {
          return;
        }
        const t = h.asKey(e);
        if (!this.documents.has(t)) {
          this.documents.set(t, e, o.Touch.Last);
          this.lastDocumentToPull = e;
        }
      }
      remove(e) {
        const t = h.asKey(e);
        this.documents.delete(t);
        if (this.documents.size !== 0) {
          if (t === this.lastDocumentToPullKey()) {
            const e = this.documents.before(t);
            if (e === undefined) {
              this.stop();
            } else {
              this.lastDocumentToPull = e;
            }
          }
        } else {
          this.stop();
        }
      }
      trigger() {
        this.lastDocumentToPull = this.documents.last;
        this.runLoop();
      }
      runLoop() {
        if (this.isDisposed !== true) {
          if (this.documents.size !== 0) {
            if (this.lastDocumentToPull !== undefined && this.timeoutHandle === undefined) {
              this.timeoutHandle = o.RAL().timer.setTimeout(() => {
                const e = this.documents.first;
                if (e === undefined) {
                  return;
                }
                const t = h.asKey(e);
                this.diagnosticRequestor.pullAsync(e).catch(e => {
                  this.client.error(`Document pull failed for text document ${t}`, e, false);
                }).finally(() => {
                  this.timeoutHandle = undefined;
                  this.documents.set(t, e, o.Touch.Last);
                  if (t !== this.lastDocumentToPullKey()) {
                    this.runLoop();
                  }
                });
              }, 500);
            }
          } else {
            this.stop();
          }
        }
      }
      dispose() {
        this.isDisposed = true;
        this.stop();
        this.documents.clear();
        this.lastDocumentToPull = undefined;
      }
      stop() {
        this.timeoutHandle?.dispose();
        this.timeoutHandle = undefined;
        this.lastDocumentToPull = undefined;
      }
      lastDocumentToPullKey() {
        if (this.lastDocumentToPull !== undefined) {
          return h.asKey(this.lastDocumentToPull);
        } else {
          return undefined;
        }
      }
    }
    class I {
      disposable;
      diagnosticRequestor;
      activeTextDocument;
      backgroundScheduler;
      constructor(e, t, n) {
        const s = Object.assign({
          onChange: false,
          onSave: false,
          onFocus: false
        }, e.clientOptions.diagnosticPullOptions);
        const A = e.protocol2CodeConverter.asDocumentSelector(n.documentSelector);
        const c = [];
        const u = (e, t) => typeof e != 'string' && (e.language === undefined || e.language === '*') && (e.scheme === undefined || e.scheme === '*' || e.scheme === t.scheme) && (e.pattern === undefined || !!a.matchGlobPattern(e.pattern, t));
        const g = e => e instanceof r.Uri ? (e => {
          const t = n.documentSelector;
          if (s.match !== undefined) {
            return s.match(t, e);
          }
          for (const n of t) {
            if (o.TextDocumentFilter.is(n) && u(n, e)) {
              return true;
            }
          }
          return false;
        })(e) : r.languages.match(A, e) > 0 && t.isVisible(e);
        const h = e => r.languages.match(A, e.document) > 0 && t.isVisible(e.notebook.uri);
        const f = e => e instanceof r.Uri ? this.activeTextDocument?.uri.toString() === e.toString() : this.activeTextDocument === e;
        this.diagnosticRequestor = new p(e, t, n);
        this.backgroundScheduler = new m(e, this.diagnosticRequestor);
        const I = e => {
          if (g(e) && n.interFileDependencies && !f(e) && s.onChange !== false) {
            this.backgroundScheduler.add(e);
          }
        };
        const E = (e, t) => (s.filter === undefined || !s.filter(e, t)) && this.diagnosticRequestor.knows(d.document, e);
        this.activeTextDocument = r.window.activeTextEditor?.document;
        c.push(r.window.onDidChangeActiveTextEditor(e => {
          const t = this.activeTextDocument;
          this.activeTextDocument = e?.document;
          if (t !== undefined) {
            I(t);
          }
          if (this.activeTextDocument !== undefined) {
            this.backgroundScheduler.remove(this.activeTextDocument);
            if (s.onFocus === true && g(this.activeTextDocument) && E(this.activeTextDocument, l.onFocus)) {
              this.diagnosticRequestor.pull(this.activeTextDocument);
            }
          }
        }));
        const y = e.getFeature(o.DidOpenTextDocumentNotification.method);
        c.push(y.onNotificationSent(e => {
          const t = e.textDocument;
          if (!this.diagnosticRequestor.knows(d.document, t)) {
            if (g(t)) {
              this.diagnosticRequestor.pull(t, () => {
                I(t);
              });
            }
          }
        }));
        const w = e.getFeature(o.NotebookDocumentSyncRegistrationType.method);
        c.push(w.onOpenNotificationSent(e => {
          for (const t of e.getCells()) {
            if (h(t)) {
              this.diagnosticRequestor.pull(t.document, () => {
                I(t.document);
              });
            }
          }
        }));
        c.push(t.onOpen(e => {
          for (const t of e) {
            if (this.diagnosticRequestor.knows(d.document, t)) {
              continue;
            }
            const e = t.toString();
            let n;
            for (const t of r.workspace.textDocuments) {
              if (e === t.uri.toString()) {
                n = t;
                break;
              }
            }
            if (n !== undefined && g(n)) {
              this.diagnosticRequestor.pull(n, () => {
                I(n);
              });
            }
          }
        }));
        const _ = new Set();
        for (const e of r.workspace.textDocuments) {
          if (g(e)) {
            this.diagnosticRequestor.pull(e, () => {
              I(e);
            });
            _.add(e.uri.toString());
          }
        }
        for (const e of r.workspace.notebookDocuments) {
          for (const t of e.getCells()) {
            if (h(t)) {
              this.diagnosticRequestor.pull(t.document, () => {
                I(t.document);
              });
              _.add(t.document.uri.toString());
            }
          }
        }
        if (s.onTabs === true) {
          for (const e of t.getTabResources()) {
            if (!_.has(e.toString()) && g(e)) {
              this.diagnosticRequestor.pull(e, () => {
                I(e);
              });
            }
          }
        }
        if (s.onChange === true) {
          const t = e.getFeature(o.DidChangeTextDocumentNotification.method);
          c.push(t.onNotificationSent(async e => {
            const t = e.textDocument;
            if (E(t, l.onType)) {
              this.diagnosticRequestor.pull(t, () => {
                this.backgroundScheduler.trigger();
              });
            }
          }));
          c.push(w.onChangeNotificationSent(async e => {
            const t = (e.cells?.textContent || []).map(t => e.notebook.getCells().find(e => e.document.uri.toString() === t.document.uri.toString()));
            for (const e of t) {
              if (e && h(e)) {
                this.diagnosticRequestor.pull(e.document, () => {
                  this.backgroundScheduler.trigger();
                });
              }
            }
            const n = e.cells?.structure?.didClose || [];
            for (const e of n) {
              this.diagnosticRequestor.forgetDocument(e.document);
            }
            const r = e.cells?.structure?.didOpen || [];
            for (const e of r) {
              if (h(e)) {
                this.diagnosticRequestor.pull(e.document, () => {
                  this.backgroundScheduler.trigger();
                });
              }
            }
          }));
        }
        if (s.onSave === true) {
          const t = e.getFeature(o.DidSaveTextDocumentNotification.method);
          c.push(t.onNotificationSent(e => {
            const t = e.textDocument;
            if (E(t, l.onSave)) {
              this.diagnosticRequestor.pull(e.textDocument);
            }
          }));
          c.push(w.onSaveNotificationSent(e => {
            for (const t of e.getCells()) {
              if (h(t)) {
                this.diagnosticRequestor.pull(t.document);
              }
            }
          }));
        }
        const v = e.getFeature(o.DidCloseTextDocumentNotification.method);
        c.push(v.onNotificationSent(e => {
          this.cleanUpDocument(e.textDocument);
        }));
        c.push(w.onCloseNotificationSent(e => {
          for (const t of e.getCells()) {
            this.cleanUpDocument(t.document);
          }
        }));
        t.onClose(e => {
          for (const t of e) {
            this.cleanUpDocument(t);
          }
        });
        this.diagnosticRequestor.onDidChangeDiagnosticsEmitter.event(() => {
          for (const e of r.workspace.textDocuments) {
            if (g(e)) {
              this.diagnosticRequestor.pull(e);
            }
          }
        });
        if (n.workspaceDiagnostics === true && n.identifier !== 'da348dc5-c30a-4515-9d98-31ff3be38d14') {
          this.diagnosticRequestor.pullWorkspace();
        }
        this.disposable = r.Disposable.from(...c, this.backgroundScheduler, this.diagnosticRequestor);
      }
      get onDidChangeDiagnosticsEmitter() {
        return this.diagnosticRequestor.onDidChangeDiagnosticsEmitter;
      }
      get diagnostics() {
        return this.diagnosticRequestor.provider;
      }
      forget(e) {
        this.cleanUpDocument(e);
      }
      cleanUpDocument(e) {
        this.backgroundScheduler.remove(e);
        if (this.diagnosticRequestor.knows(d.document, e)) {
          this.diagnosticRequestor.forgetDocument(e);
        }
      }
    }
    class E extends A.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.DocumentDiagnosticRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c(c(e, 'textDocument'), 'diagnostic');
        t.relatedInformation = true;
        t.tagSupport = {
          valueSet: [o.DiagnosticTag.Unnecessary, o.DiagnosticTag.Deprecated]
        };
        t.codeDescriptionSupport = true;
        t.dataSupport = true;
        t.dynamicRegistration = true;
        t.relatedDocumentSupport = false;
        c(c(e, 'workspace'), 'diagnostics').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(o.DiagnosticRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeDiagnosticsEmitter.fire();
          }
        });
        const [n, r] = this.getRegistration(t, e.diagnosticProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      clear() {
        super.clear();
      }
      refresh() {
        for (const e of this.getAllProviders()) {
          e.onDidChangeDiagnosticsEmitter.fire();
        }
      }
      registerLanguageProvider(e) {
        const t = new I(this._client, this._client.tabsModel, e);
        return [t.disposable, t];
      }
    }
    exports.DiagnosticFeature = E;
  },
  29014: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DocumentHighlightFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentHighlightRequest.type);
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'documentHighlight').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentHighlightProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDocumentHighlights: (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => r.sendRequest(A.DocumentHighlightRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asDocumentHighlights(e, n), e => r.handleFailedRequest(A.DocumentHighlightRequest.type, n, e, null));
            const s = r.middleware;
            if (s.provideDocumentHighlights) {
              return s.provideDocumentHighlights(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          }
        };
        return [a.languages.registerDocumentHighlightProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.DocumentHighlightFeature = l;
  },
  7656: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DocumentLinkFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentLinkRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'documentLink');
        t.dynamicRegistration = true;
        t.tooltipSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentLinkProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDocumentLinks: (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.DocumentLinkRequest.type, n.code2ProtocolConverter.asDocumentLinkParams(e), t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asDocumentLinks(e, t), e => n.handleFailedRequest(A.DocumentLinkRequest.type, t, e, null));
            const o = n.middleware;
            if (o.provideDocumentLinks) {
              return o.provideDocumentLinks(e, t, r);
            } else {
              return r(e, t);
            }
          },
          resolveDocumentLink: e.resolveProvider ? (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.DocumentLinkResolveRequest.type, n.code2ProtocolConverter.asDocumentLink(e), t).then(r => t.isCancellationRequested ? e : n.protocol2CodeConverter.asDocumentLink(r), r => n.handleFailedRequest(A.DocumentLinkResolveRequest.type, t, r, e));
            const o = n.middleware;
            if (o.resolveDocumentLink) {
              return o.resolveDocumentLink(e, t, r);
            } else {
              return r(e, t);
            }
          } : undefined
        };
        return [a.languages.registerDocumentLinkProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.DocumentLinkFeature = l;
  },
  49228: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DocumentSymbolFeature = exports.SupportedSymbolTags = exports.SupportedSymbolKinds = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    exports.SupportedSymbolKinds = [A.SymbolKind.File, A.SymbolKind.Module, A.SymbolKind.Namespace, A.SymbolKind.Package, A.SymbolKind.Class, A.SymbolKind.Method, A.SymbolKind.Property, A.SymbolKind.Field, A.SymbolKind.Constructor, A.SymbolKind.Enum, A.SymbolKind.Interface, A.SymbolKind.Function, A.SymbolKind.Variable, A.SymbolKind.Constant, A.SymbolKind.String, A.SymbolKind.Number, A.SymbolKind.Boolean, A.SymbolKind.Array, A.SymbolKind.Object, A.SymbolKind.Key, A.SymbolKind.Null, A.SymbolKind.EnumMember, A.SymbolKind.Struct, A.SymbolKind.Event, A.SymbolKind.Operator, A.SymbolKind.TypeParameter];
    exports.SupportedSymbolTags = [A.SymbolTag.Deprecated];
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentSymbolRequest.type);
      }
      fillClientCapabilities(e) {
        const n = c.ensure(c.ensure(e, 'textDocument'), 'documentSymbol');
        n.dynamicRegistration = true;
        n.symbolKind = {
          valueSet: exports.SupportedSymbolKinds
        };
        n.hierarchicalDocumentSymbolSupport = true;
        n.tagSupport = {
          valueSet: exports.SupportedSymbolTags
        };
        n.labelSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentSymbolProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDocumentSymbols: (e, t) => {
            const n = this._client;
            const r = async (e, t) => {
              try {
                const r = await n.sendRequest(A.DocumentSymbolRequest.type, n.code2ProtocolConverter.asDocumentSymbolParams(e), t);
                if (t.isCancellationRequested || r == null) {
                  return null;
                }
                if (r.length === 0) {
                  return [];
                }
                {
                  const e = r[0];
                  if (A.DocumentSymbol.is(e)) {
                    return await n.protocol2CodeConverter.asDocumentSymbols(r, t);
                  } else {
                    return await n.protocol2CodeConverter.asSymbolInformations(r, t);
                  }
                }
              } catch (e) {
                return n.handleFailedRequest(A.DocumentSymbolRequest.type, t, e, null);
              }
            };
            const o = n.middleware;
            if (o.provideDocumentSymbols) {
              return o.provideDocumentSymbols(e, t, r);
            } else {
              return r(e, t);
            }
          }
        };
        const r = e.label !== undefined ? {
          label: e.label
        } : undefined;
        return [a.languages.registerDocumentSymbolProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n, r), n];
      }
    }
    exports.DocumentSymbolFeature = l;
  },
  69073: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ExecuteCommandFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(69032));
    const u = require(14294);
    exports.ExecuteCommandFeature = class {
      _client;
      _commands;
      constructor(e) {
        this._client = e;
        this._commands = new Map();
      }
      getState() {
        return {
          kind: 'workspace',
          id: this.registrationType.method,
          registrations: this._commands.size > 0
        };
      }
      get registrationType() {
        return A.ExecuteCommandRequest.type;
      }
      fillClientCapabilities(e) {
        u.ensure(u.ensure(e, 'workspace'), 'executeCommand').dynamicRegistration = true;
      }
      initialize(e) {
        if (e.executeCommandProvider) {
          this.register({
            id: c.generateUuid(),
            registerOptions: Object.assign({}, e.executeCommandProvider)
          });
        }
      }
      register(e) {
        const t = this._client;
        const n = t.middleware;
        const r = (e, n) => {
          const r = {
            command: e,
            arguments: n
          };
          return t.sendRequest(A.ExecuteCommandRequest.type, r).then(undefined, e => t.handleFailedRequest(A.ExecuteCommandRequest.type, undefined, e, undefined));
        };
        if (e.registerOptions.commands) {
          const t = [];
          for (const o of e.registerOptions.commands) {
            t.push(a.commands.registerCommand(o, (...e) => n.executeCommand ? n.executeCommand(o, e, r) : r(o, e)));
          }
          this._commands.set(e.id, t);
        }
      }
      unregister(e) {
        const t = this._commands.get(e);
        if (t) {
          this._commands.delete(e);
          t.forEach(e => e.dispose());
        }
      }
      clear() {
        this._commands.forEach(e => {
          e.forEach(e => e.dispose());
        });
        this._commands.clear();
      }
    };
  },
  14294: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkspaceFeature = exports.TextDocumentLanguageFeature = exports.TextDocumentEventFeature = exports.DynamicDocumentFeature = exports.DynamicFeature = exports.StaticFeature = exports.ensure = exports.LSPCancellationError = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(58319));
    const u = __importStar(require(69032));
    class l extends a.CancellationError {
      data;
      constructor(e) {
        super();
        this.data = e;
      }
    }
    var g;
    var d;
    exports.LSPCancellationError = l;
    exports.ensure = function (e, t) {
      if (e[t] === undefined) {
        e[t] = {};
      }
      return e[t];
    };
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && c.func(t.fillClientCapabilities) && c.func(t.initialize) && c.func(t.getState) && c.func(t.clear) && (t.fillInitializeParams === undefined || c.func(t.fillInitializeParams));
      };
    })(g || (exports.StaticFeature = g = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && c.func(t.fillClientCapabilities) && c.func(t.initialize) && c.func(t.getState) && c.func(t.clear) && (t.fillInitializeParams === undefined || c.func(t.fillInitializeParams)) && c.func(t.register) && c.func(t.unregister) && t.registrationType !== undefined;
      };
    })(d || (exports.DynamicFeature = d = {}));
    class h {
      _client;
      constructor(e) {
        this._client = e;
      }
      getState() {
        const e = this.getDocumentSelectors();
        let t = 0;
        for (const n of e) {
          t++;
          for (const e of a.workspace.textDocuments) {
            if (a.languages.match(n, e) > 0) {
              return {
                kind: 'document',
                id: this.registrationType.method,
                registrations: true,
                matches: true
              };
            }
          }
        }
        const n = t > 0;
        return {
          kind: 'document',
          id: this.registrationType.method,
          registrations: n,
          matches: false
        };
      }
    }
    exports.DynamicDocumentFeature = h;
    exports.TextDocumentEventFeature = class extends h {
      _event;
      _type;
      _middleware;
      _createParams;
      _textDocument;
      _selectorFilter;
      _listener;
      _selectors;
      _onNotificationSent;
      static textDocumentFilter(e, t) {
        for (const n of e) {
          if (a.languages.match(n, t) > 0) {
            return true;
          }
        }
        return false;
      }
      constructor(e, t, n, r, o, s, A) {
        super(e);
        this._event = t;
        this._type = n;
        this._middleware = r;
        this._createParams = o;
        this._textDocument = s;
        this._selectorFilter = A;
        this._selectors = new Map();
        this._onNotificationSent = new a.EventEmitter();
      }
      getStateInfo() {
        return [this._selectors.values(), false];
      }
      getDocumentSelectors() {
        return this._selectors.values();
      }
      register(e) {
        if (e.registerOptions.documentSelector) {
          if (!this._listener) {
            this._listener = this._event(e => {
              this.callback(e).catch(e => {
                this._client.error(`Sending document notification ${this._type.method} failed.`, e);
              });
            });
          }
          this._selectors.set(e.id, this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector));
        }
      }
      async callback(e) {
        const t = async e => {
          const t = this._createParams(e);
          await this._client.sendNotification(this._type, t);
          this.notificationSent(this.getTextDocument(e), this._type, t);
        };
        if (this.matches(e)) {
          const n = this._middleware();
          if (n) {
            return n(e, e => t(e));
          } else {
            return t(e);
          }
        }
      }
      matches(e) {
        return !this._client.hasDedicatedTextSynchronizationFeature(this._textDocument(e)) && (!this._selectorFilter || this._selectorFilter(this._selectors.values(), e));
      }
      get onNotificationSent() {
        return this._onNotificationSent.event;
      }
      notificationSent(e, t, n) {
        this._onNotificationSent.fire({
          textDocument: e,
          type: t,
          params: n
        });
      }
      unregister(e) {
        this._selectors.delete(e);
        if (this._selectors.size === 0 && this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      clear() {
        this._selectors.clear();
        this._onNotificationSent.dispose();
        this._onNotificationSent = new a.EventEmitter();
        if (this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      getProvider(e) {
        for (const t of this._selectors.values()) {
          if (a.languages.match(t, e) > 0) {
            return {
              send: e => this.callback(e)
            };
          }
        }
      }
    };
    exports.TextDocumentLanguageFeature = class extends h {
      _registrationType;
      _registrations;
      constructor(e, t) {
        super(e);
        this._registrationType = t;
        this._registrations = new Map();
      }
      *getDocumentSelectors() {
        for (const e of this._registrations.values()) {
          const t = e.data.registerOptions.documentSelector;
          if (t !== null) {
            yield this._client.protocol2CodeConverter.asDocumentSelector(t);
          }
        }
      }
      get registrationType() {
        return this._registrationType;
      }
      register(e) {
        if (!e.registerOptions.documentSelector) {
          return;
        }
        const t = this.registerLanguageProvider(e.registerOptions, e.id);
        this._registrations.set(e.id, {
          disposable: t[0],
          data: e,
          provider: t[1]
        });
      }
      unregister(e) {
        const t = this._registrations.get(e);
        if (t !== undefined) {
          this._registrations.delete(e);
          t.disposable.dispose();
        }
      }
      clear() {
        this._registrations.forEach(e => {
          e.disposable.dispose();
        });
        this._registrations.clear();
      }
      getRegistration(e, t) {
        if (!t) {
          return [undefined, undefined];
        }
        if (A.TextDocumentRegistrationOptions.is(t)) {
          const n = A.StaticRegistrationOptions.hasId(t) ? t.id : u.generateUuid();
          const r = t.documentSelector ?? e;
          if (r) {
            return [n, Object.assign({}, t, {
              documentSelector: r
            })];
          }
        } else {
          if (c.boolean(t) && t === true || A.WorkDoneProgressOptions.is(t)) {
            if (!e) {
              return [undefined, undefined];
            }
            const n = c.boolean(t) && t === true ? {
              documentSelector: e
            } : Object.assign({}, t, {
              documentSelector: e
            });
            return [u.generateUuid(), n];
          }
        }
        return [undefined, undefined];
      }
      getRegistrationOptions(e, t) {
        if (e && t) {
          if (c.boolean(t) && t === true) {
            return {
              documentSelector: e
            };
          } else {
            return Object.assign({}, t, {
              documentSelector: e
            });
          }
        }
      }
      getProvider(e) {
        for (const t of this._registrations.values()) {
          const n = t.data.registerOptions.documentSelector;
          if (n !== null && a.languages.match(this._client.protocol2CodeConverter.asDocumentSelector(n), e) > 0) {
            return t.provider;
          }
        }
      }
      getAllProviders() {
        const e = [];
        for (const t of this._registrations.values()) {
          e.push(t.provider);
        }
        return e;
      }
    };
    exports.WorkspaceFeature = class {
      _client;
      _registrationType;
      _registrations;
      constructor(e, t) {
        this._client = e;
        this._registrationType = t;
        this._registrations = new Map();
      }
      getState() {
        const e = this._registrations.size > 0;
        return {
          kind: 'workspace',
          id: this._registrationType.method,
          registrations: e
        };
      }
      get registrationType() {
        return this._registrationType;
      }
      register(e) {
        const t = this.registerLanguageProvider(e.registerOptions);
        this._registrations.set(e.id, {
          disposable: t[0],
          provider: t[1]
        });
      }
      unregister(e) {
        const t = this._registrations.get(e);
        if (t !== undefined) {
          this._registrations.delete(e);
          t.disposable.dispose();
        }
      }
      clear() {
        this._registrations.forEach(e => {
          e.disposable.dispose();
        });
        this._registrations.clear();
      }
      getProviders() {
        const e = [];
        for (const t of this._registrations.values()) {
          e.push(t.provider);
        }
        return e;
      }
    };
  },
  2485: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WillDeleteFilesFeature = exports.WillRenameFilesFeature = exports.WillCreateFilesFeature = exports.DidDeleteFilesFeature = exports.DidRenameFilesFeature = exports.DidCreateFilesFeature = undefined;
    const a = __importStar(require(91398));
    const A = __importStar(require(76958));
    const c = __importStar(require(98766));
    const u = __importStar(require(69032));
    function l(e, t) {
      if (e[t] === undefined) {
        e[t] = {};
      }
      return e[t];
    }
    function g(e, t, n) {
      e[t] = n;
    }
    class d {
      _client;
      _event;
      _registrationType;
      _clientCapability;
      _serverCapability;
      _listener;
      _filters;
      constructor(e, t, n, r, o) {
        this._client = e;
        this._event = t;
        this._registrationType = n;
        this._clientCapability = r;
        this._serverCapability = o;
        this._filters = new Map();
      }
      getState() {
        return {
          kind: 'workspace',
          id: this._registrationType.method,
          registrations: this._filters.size > 0
        };
      }
      filterSize() {
        return this._filters.size;
      }
      get registrationType() {
        return this._registrationType;
      }
      fillClientCapabilities(e) {
        const t = l(l(e, 'workspace'), 'fileOperations');
        g(t, 'dynamicRegistration', true);
        g(t, this._clientCapability, true);
      }
      initialize(e) {
        const t = e.workspace?.fileOperations;
        const n = t !== undefined ? (r = t, o = this._serverCapability, r[o]) : undefined;
        var r;
        var o;
        if (n?.filters !== undefined) {
          try {
            this.register({
              id: u.generateUuid(),
              registerOptions: {
                filters: n.filters
              }
            });
          } catch (e) {
            this._client.warn(`Ignoring invalid glob pattern for ${this._serverCapability} registration: ${e}`);
          }
        }
      }
      register(e) {
        if (!this._listener) {
          this._listener = this._event(this.send, this);
        }
        const t = e.registerOptions.filters.map(e => {
          const t = new A.Minimatch(e.pattern.glob, d.asMinimatchOptions(e.pattern.options));
          if (!t.makeRe()) {
            throw new Error(`Invalid pattern ${e.pattern.glob}!`);
          }
          return {
            scheme: e.scheme,
            matcher: t,
            kind: e.pattern.matches
          };
        });
        this._filters.set(e.id, t);
      }
      unregister(e) {
        this._filters.delete(e);
        if (this._filters.size === 0 && this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      clear() {
        this._filters.clear();
        if (this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      getFileType(e) {
        return d.getFileType(e);
      }
      async filter(e, t) {
        const n = await Promise.all(e.files.map(async e => {
          const n = t(e);
          const r = n.fsPath.replace(/\\/g, '/');
          for (const e of this._filters.values()) {
            for (const t of e) {
              if (t.scheme === undefined || t.scheme === n.scheme) {
                if (t.matcher.match(r)) {
                  if (t.kind === undefined) {
                    return true;
                  }
                  const e = await this.getFileType(n);
                  if (e === undefined) {
                    this._client.error(`Failed to determine file type for ${n.toString()}.`);
                    return true;
                  }
                  if (e === a.FileType.File && t.kind === c.FileOperationPatternKind.file || e === a.FileType.Directory && t.kind === c.FileOperationPatternKind.folder) {
                    return true;
                  }
                } else {
                  if (t.kind === c.FileOperationPatternKind.folder) {
                    if ((await d.getFileType(n)) === a.FileType.Directory && t.matcher.match(`${r}/`)) {
                      return true;
                    }
                  }
                }
              }
            }
          }
          return false;
        }));
        const r = e.files.filter((e, t) => n[t]);
        return {
          ...e,
          files: r
        };
      }
      static async getFileType(e) {
        try {
          return (await a.workspace.fs.stat(e)).type;
        } catch (e) {
          return;
        }
      }
      static asMinimatchOptions(e) {
        const t = {
          dot: true
        };
        if (e?.ignoreCase === true) {
          t.nocase = true;
        }
        return t;
      }
    }
    class h extends d {
      _notificationType;
      _accessUri;
      _createParams;
      constructor(e, t, n, r, o, s, a) {
        super(e, t, n, r, o);
        this._notificationType = n;
        this._accessUri = s;
        this._createParams = a;
      }
      async send(e) {
        const t = await this.filter(e, this._accessUri);
        if (t.files.length) {
          const e = async e => this._client.sendNotification(this._notificationType, this._createParams(e));
          return this.doSend(t, e);
        }
      }
    }
    class f extends h {
      _willListener;
      _fsPathFileTypes = new Map();
      async getFileType(e) {
        const t = e.fsPath;
        if (this._fsPathFileTypes.has(t)) {
          return this._fsPathFileTypes.get(t);
        }
        const n = await d.getFileType(e);
        if (n) {
          this._fsPathFileTypes.set(t, n);
        }
        return n;
      }
      async cacheFileTypes(e, t) {
        await this.filter(e, t);
      }
      clearFileTypeCache() {
        this._fsPathFileTypes.clear();
      }
      unregister(e) {
        super.unregister(e);
        if (this.filterSize() === 0 && this._willListener) {
          this._willListener.dispose();
          this._willListener = undefined;
        }
      }
      clear() {
        super.clear();
        if (this._willListener) {
          this._willListener.dispose();
          this._willListener = undefined;
        }
      }
    }
    exports.DidCreateFilesFeature = class extends h {
      constructor(e) {
        super(e, a.workspace.onDidCreateFiles, c.DidCreateFilesNotification.type, 'didCreate', 'didCreate', e => e, e.code2ProtocolConverter.asDidCreateFilesParams);
      }
      doSend(e, t) {
        const n = this._client.middleware.workspace;
        if (n?.didCreateFiles) {
          return n.didCreateFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
    exports.DidRenameFilesFeature = class extends f {
      constructor(e) {
        super(e, a.workspace.onDidRenameFiles, c.DidRenameFilesNotification.type, 'didRename', 'didRename', e => e.oldUri, e.code2ProtocolConverter.asDidRenameFilesParams);
      }
      register(e) {
        if (!this._willListener) {
          this._willListener = a.workspace.onWillRenameFiles(this.willRename, this);
        }
        super.register(e);
      }
      willRename(e) {
        e.waitUntil(this.cacheFileTypes(e, e => e.oldUri));
      }
      doSend(e, t) {
        this.clearFileTypeCache();
        const n = this._client.middleware.workspace;
        if (n?.didRenameFiles) {
          return n.didRenameFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
    exports.DidDeleteFilesFeature = class extends f {
      constructor(e) {
        super(e, a.workspace.onDidDeleteFiles, c.DidDeleteFilesNotification.type, 'didDelete', 'didDelete', e => e, e.code2ProtocolConverter.asDidDeleteFilesParams);
      }
      register(e) {
        if (!this._willListener) {
          this._willListener = a.workspace.onWillDeleteFiles(this.willDelete, this);
        }
        super.register(e);
      }
      willDelete(e) {
        e.waitUntil(this.cacheFileTypes(e, e => e));
      }
      doSend(e, t) {
        this.clearFileTypeCache();
        const n = this._client.middleware.workspace;
        if (n?.didDeleteFiles) {
          return n.didDeleteFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
    class p extends d {
      _requestType;
      _accessUri;
      _createParams;
      constructor(e, t, n, r, o, s, a) {
        super(e, t, n, r, o);
        this._requestType = n;
        this._accessUri = s;
        this._createParams = a;
      }
      async send(e) {
        const t = this.waitUntil(e);
        e.waitUntil(t);
      }
      async waitUntil(e) {
        const t = await this.filter(e, this._accessUri);
        if (t.files.length) {
          const e = e => this._client.sendRequest(this._requestType, this._createParams(e), e.token).then(this._client.protocol2CodeConverter.asWorkspaceEdit);
          return this.doSend(t, e);
        }
      }
    }
    exports.WillCreateFilesFeature = class extends p {
      constructor(e) {
        super(e, a.workspace.onWillCreateFiles, c.WillCreateFilesRequest.type, 'willCreate', 'willCreate', e => e, e.code2ProtocolConverter.asWillCreateFilesParams);
      }
      doSend(e, t) {
        const n = this._client.middleware.workspace;
        if (n?.willCreateFiles) {
          return n.willCreateFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
    exports.WillRenameFilesFeature = class extends p {
      constructor(e) {
        super(e, a.workspace.onWillRenameFiles, c.WillRenameFilesRequest.type, 'willRename', 'willRename', e => e.oldUri, e.code2ProtocolConverter.asWillRenameFilesParams);
      }
      doSend(e, t) {
        const n = this._client.middleware.workspace;
        if (n?.willRenameFiles) {
          return n.willRenameFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
    exports.WillDeleteFilesFeature = class extends p {
      constructor(e) {
        super(e, a.workspace.onWillDeleteFiles, c.WillDeleteFilesRequest.type, 'willDelete', 'willDelete', e => e, e.code2ProtocolConverter.asWillDeleteFilesParams);
      }
      doSend(e, t) {
        const n = this._client.middleware.workspace;
        if (n?.willDeleteFiles) {
          return n.willDeleteFiles(e, t);
        } else {
          return t(e);
        }
      }
    };
  },
  59084: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FileSystemWatcherFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    exports.FileSystemWatcherFeature = class {
      _client;
      _notifyFileEvent;
      _watchers;
      constructor(e, t) {
        this._client = e;
        this._notifyFileEvent = t;
        this._watchers = new Map();
      }
      getState() {
        return {
          kind: 'workspace',
          id: this.registrationType.method,
          registrations: this._watchers.size > 0
        };
      }
      get registrationType() {
        return o.DidChangeWatchedFilesNotification.type;
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;
        s.ensure(s.ensure(e, 'workspace'), 'didChangeWatchedFiles').relativePatternSupport = true;
      }
      initialize(e, t) {}
      register(e) {
        if (!Array.isArray(e.registerOptions.watchers)) {
          return;
        }
        const t = [];
        for (const n of e.registerOptions.watchers) {
          const e = this._client.protocol2CodeConverter.asGlobPattern(n.globPattern);
          if (e === undefined) {
            continue;
          }
          let s = true;
          let a = true;
          let A = true;
          if (n.kind !== undefined && n.kind !== null) {
            s = !!(n.kind & o.WatchKind.Create);
            a = !!(n.kind & o.WatchKind.Change);
            A = !!(n.kind & o.WatchKind.Delete);
          }
          const c = r.workspace.createFileSystemWatcher(e, !s, !a, !A);
          this.hookListeners(c, s, a, A, t);
          t.push(c);
        }
        this._watchers.set(e.id, t);
      }
      registerRaw(e, t) {
        const n = [];
        for (const e of t) {
          this.hookListeners(e, true, true, true, n);
        }
        this._watchers.set(e, n);
      }
      hookListeners(e, t, n, r, s) {
        if (t) {
          e.onDidCreate(e => this._notifyFileEvent({
            uri: this._client.code2ProtocolConverter.asUri(e),
            type: o.FileChangeType.Created
          }), null, s);
        }
        if (n) {
          e.onDidChange(e => this._notifyFileEvent({
            uri: this._client.code2ProtocolConverter.asUri(e),
            type: o.FileChangeType.Changed
          }), null, s);
        }
        if (r) {
          e.onDidDelete(e => this._notifyFileEvent({
            uri: this._client.code2ProtocolConverter.asUri(e),
            type: o.FileChangeType.Deleted
          }), null, s);
        }
      }
      unregister(e) {
        const t = this._watchers.get(e);
        if (t) {
          this._watchers.delete(e);
          for (const e of t) {
            e.dispose();
          }
        }
      }
      clear() {
        this._watchers.forEach(e => {
          for (const t of e) {
            t.dispose();
          }
        });
        this._watchers.clear();
      }
    };
  },
  73963: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FoldingRangeFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.FoldingRangeRequest.type);
      }
      fillClientCapabilities(e) {
        const t = s.ensure(s.ensure(e, 'textDocument'), 'foldingRange');
        t.dynamicRegistration = true;
        t.rangeLimit = 5000;
        t.lineFoldingOnly = true;
        t.foldingRangeKind = {
          valueSet: [o.FoldingRangeKind.Comment, o.FoldingRangeKind.Imports, o.FoldingRangeKind.Region]
        };
        t.foldingRange = {
          collapsedText: false
        };
        s.ensure(s.ensure(e, 'workspace'), 'foldingRange').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(o.FoldingRangeRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeFoldingRange.fire();
          }
        });
        const [n, r] = this.getRegistration(t, e.foldingRangeProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = new r.EventEmitter();
        const s = {
          onDidChangeFoldingRanges: n.event,
          provideFoldingRanges: (e, t, n) => {
            const r = this._client;
            const s = (e, t, n) => {
              const s = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e)
              };
              return r.sendRequest(o.FoldingRangeRequest.type, s, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asFoldingRanges(e, n), e => r.handleFailedRequest(o.FoldingRangeRequest.type, n, e, null));
            };
            const a = r.middleware;
            if (a.provideFoldingRanges) {
              return a.provideFoldingRanges(e, t, n, s);
            } else {
              return s(e, 0, n);
            }
          }
        };
        return [r.languages.registerFoldingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), s), {
          provider: s,
          onDidChangeFoldingRange: n
        }];
      }
    }
    exports.FoldingRangeFeature = a;
  },
  17298: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DocumentOnTypeFormattingFeature = exports.DocumentRangeFormattingFeature = exports.DocumentFormattingFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(69032));
    const u = require(14294);
    var l;
    (function (e) {
      e.fromConfiguration = function (e) {
        const t = a.workspace.getConfiguration('files', e);
        return {
          trimTrailingWhitespace: t.get('trimTrailingWhitespace'),
          trimFinalNewlines: t.get('trimFinalNewlines'),
          insertFinalNewline: t.get('insertFinalNewline')
        };
      };
    })(l ||= {});
    class g extends u.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentFormattingRequest.type);
      }
      fillClientCapabilities(e) {
        u.ensure(u.ensure(e, 'textDocument'), 'formatting').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentFormattingProvider);
        if (n) {
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDocumentFormattingEdits: (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => {
              const o = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                options: r.code2ProtocolConverter.asFormattingOptions(t, l.fromConfiguration(e))
              };
              return r.sendRequest(A.DocumentFormattingRequest.type, o, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asTextEdits(e, n), e => r.handleFailedRequest(A.DocumentFormattingRequest.type, n, e, null));
            };
            const s = r.middleware;
            if (s.provideDocumentFormattingEdits) {
              return s.provideDocumentFormattingEdits(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          }
        };
        return [a.languages.registerDocumentFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.DocumentFormattingFeature = g;
    class d extends u.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentRangeFormattingRequest.type);
      }
      fillClientCapabilities(e) {
        const t = u.ensure(u.ensure(e, 'textDocument'), 'rangeFormatting');
        t.dynamicRegistration = true;
        t.rangesSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentRangeFormattingProvider);
        if (n) {
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideDocumentRangeFormattingEdits: (e, t, n, r) => {
            const o = this._client;
            const s = (e, t, n, r) => {
              const s = {
                textDocument: o.code2ProtocolConverter.asTextDocumentIdentifier(e),
                range: o.code2ProtocolConverter.asRange(t),
                options: o.code2ProtocolConverter.asFormattingOptions(n, l.fromConfiguration(e))
              };
              return o.sendRequest(A.DocumentRangeFormattingRequest.type, s, r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asTextEdits(e, r), e => o.handleFailedRequest(A.DocumentRangeFormattingRequest.type, r, e, null));
            };
            const a = o.middleware;
            if (a.provideDocumentRangeFormattingEdits) {
              return a.provideDocumentRangeFormattingEdits(e, t, n, r, s);
            } else {
              return s(e, t, n, r);
            }
          }
        };
        if (e.rangesSupport) {
          n.provideDocumentRangesFormattingEdits = (e, t, n, r) => {
            const o = this._client;
            const s = (e, t, n, r) => {
              const s = {
                textDocument: o.code2ProtocolConverter.asTextDocumentIdentifier(e),
                ranges: o.code2ProtocolConverter.asRanges(t),
                options: o.code2ProtocolConverter.asFormattingOptions(n, l.fromConfiguration(e))
              };
              return o.sendRequest(A.DocumentRangesFormattingRequest.type, s, r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asTextEdits(e, r), e => o.handleFailedRequest(A.DocumentRangesFormattingRequest.type, r, e, null));
            };
            const a = o.middleware;
            if (a.provideDocumentRangesFormattingEdits) {
              return a.provideDocumentRangesFormattingEdits(e, t, n, r, s);
            } else {
              return s(e, t, n, r);
            }
          };
        }
        return [a.languages.registerDocumentRangeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.DocumentRangeFormattingFeature = d;
    class h extends u.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.DocumentOnTypeFormattingRequest.type);
      }
      fillClientCapabilities(e) {
        u.ensure(u.ensure(e, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.documentOnTypeFormattingProvider);
        if (n) {
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideOnTypeFormattingEdits: (e, t, n, r, o) => {
            const s = this._client;
            const a = (e, t, n, r, o) => {
              const a = {
                textDocument: s.code2ProtocolConverter.asTextDocumentIdentifier(e),
                position: s.code2ProtocolConverter.asPosition(t),
                ch: n,
                options: s.code2ProtocolConverter.asFormattingOptions(r, l.fromConfiguration(e))
              };
              return s.sendRequest(A.DocumentOnTypeFormattingRequest.type, a, o).then(e => o.isCancellationRequested ? null : s.protocol2CodeConverter.asTextEdits(e, o), e => s.handleFailedRequest(A.DocumentOnTypeFormattingRequest.type, o, e, null));
            };
            const c = s.middleware;
            if (c.provideOnTypeFormattingEdits) {
              return c.provideOnTypeFormattingEdits(e, t, n, r, o, a);
            } else {
              return a(e, t, n, r, o);
            }
          }
        };
        const r = e.moreTriggerCharacter || [];
        return [a.languages.registerOnTypeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n, e.firstTriggerCharacter, ...r), n];
      }
    }
    exports.DocumentOnTypeFormattingFeature = h;
  },
  41507: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.HoverFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.HoverRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'hover');
        t.dynamicRegistration = true;
        t.contentFormat = [A.MarkupKind.Markdown, A.MarkupKind.PlainText];
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.hoverProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideHover: (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => r.sendRequest(A.HoverRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asHover(e), e => r.handleFailedRequest(A.HoverRequest.type, n, e, null));
            const s = r.middleware;
            if (s.provideHover) {
              return s.provideHover(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return a.languages.registerHoverProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.HoverFeature = l;
  },
  70191: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ImplementationFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.ImplementationRequest.type);
      }
      fillClientCapabilities(e) {
        const t = s.ensure(s.ensure(e, 'textDocument'), 'implementation');
        t.dynamicRegistration = true;
        t.linkSupport = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.implementationProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideImplementation: (e, t, n) => {
            const r = this._client;
            const s = (e, t, n) => r.sendRequest(o.ImplementationRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asDefinitionResult(e, n), e => r.handleFailedRequest(o.ImplementationRequest.type, n, e, null));
            const a = r.middleware;
            if (a.provideImplementation) {
              return a.provideImplementation(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return r.languages.registerImplementationProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.ImplementationFeature = a;
  },
  72767: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlayHintsFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.InlayHintRequest.type);
      }
      fillClientCapabilities(e) {
        const t = s.ensure(s.ensure(e, 'textDocument'), 'inlayHint');
        t.dynamicRegistration = true;
        t.resolveSupport = {
          properties: ['tooltip', 'textEdits', 'label.tooltip', 'label.location', 'label.command']
        };
        s.ensure(s.ensure(e, 'workspace'), 'inlayHint').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(o.InlayHintRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeInlayHints.fire();
          }
        });
        const [n, r] = this.getRegistration(t, e.inlayHintProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = new r.EventEmitter();
        const s = {
          onDidChangeInlayHints: n.event,
          provideInlayHints: (e, t, n) => {
            const r = this._client;
            const s = async (e, t, n) => {
              const s = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                range: r.code2ProtocolConverter.asRange(t)
              };
              try {
                const e = await r.sendRequest(o.InlayHintRequest.type, s, n);
                if (n.isCancellationRequested) {
                  return null;
                } else {
                  return r.protocol2CodeConverter.asInlayHints(e, n);
                }
              } catch (e) {
                return r.handleFailedRequest(o.InlayHintRequest.type, n, e, null);
              }
            };
            const a = r.middleware;
            if (a.provideInlayHints) {
              return a.provideInlayHints(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        s.resolveInlayHint = e.resolveProvider === true ? (e, t) => {
          const n = this._client;
          const r = async (e, t) => {
            try {
              const r = await n.sendRequest(o.InlayHintResolveRequest.type, n.code2ProtocolConverter.asInlayHint(e), t);
              if (t.isCancellationRequested) {
                return null;
              }
              const s = n.protocol2CodeConverter.asInlayHint(r, t);
              if (t.isCancellationRequested) {
                return null;
              } else {
                return s;
              }
            } catch (e) {
              return n.handleFailedRequest(o.InlayHintResolveRequest.type, t, e, null);
            }
          };
          const s = n.middleware;
          if (s.resolveInlayHint) {
            return s.resolveInlayHint(e, t, r);
          } else {
            return r(e, t);
          }
        } : undefined;
        return [this.registerProvider(t, s), {
          provider: s,
          onDidChangeInlayHints: n
        }];
      }
      registerProvider(e, t) {
        return r.languages.registerInlayHintsProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.InlayHintsFeature = a;
  },
  23370: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineCompletionItemFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.InlineCompletionRequest.type);
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'inlineCompletion').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.inlineCompletionProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideInlineCompletionItems: (e, t, n, r) => {
            const o = this._client;
            const s = this._client.middleware;
            const a = (e, t, n, r) => o.sendRequest(A.InlineCompletionRequest.type, o.code2ProtocolConverter.asInlineCompletionParams(e, t, n), r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asInlineCompletionResult(e, r), e => o.handleFailedRequest(A.InlineCompletionRequest.type, r, e, null));
            if (s.provideInlineCompletionItems) {
              return s.provideInlineCompletionItems(e, t, n, r, a);
            } else {
              return a(e, t, n, r);
            }
          }
        };
        return [a.languages.registerInlineCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(t), n), n];
      }
    }
    exports.InlineCompletionItemFeature = l;
  },
  13131: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineValueFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.InlineValueRequest.type);
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'textDocument'), 'inlineValue').dynamicRegistration = true;
        s.ensure(s.ensure(e, 'workspace'), 'inlineValue').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(o.InlineValueRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeInlineValues.fire();
          }
        });
        const [n, r] = this.getRegistration(t, e.inlineValueProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = new r.EventEmitter();
        const s = {
          onDidChangeInlineValues: n.event,
          provideInlineValues: (e, t, n, r) => {
            const s = this._client;
            const a = (e, t, n, r) => {
              const a = {
                textDocument: s.code2ProtocolConverter.asTextDocumentIdentifier(e),
                range: s.code2ProtocolConverter.asRange(t),
                context: s.code2ProtocolConverter.asInlineValueContext(n)
              };
              return s.sendRequest(o.InlineValueRequest.type, a, r).then(e => r.isCancellationRequested ? null : s.protocol2CodeConverter.asInlineValues(e, r), e => s.handleFailedRequest(o.InlineValueRequest.type, r, e, null));
            };
            const A = s.middleware;
            if (A.provideInlineValues) {
              return A.provideInlineValues(e, t, n, r, a);
            } else {
              return a(e, t, n, r);
            }
          }
        };
        return [this.registerProvider(t, s), {
          provider: s,
          onDidChangeInlineValues: n
        }];
      }
      registerProvider(e, t) {
        return r.languages.registerInlineValuesProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.InlineValueFeature = a;
  },
  74913: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LinkedEditingFeature = undefined;
    const a = __importStar(require(91398));
    const A = __importStar(require(98766));
    const c = require(14294);
    class u extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.LinkedEditingRangeRequest.type);
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'linkedEditingRange').dynamicRegistration = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.linkedEditingRangeProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideLinkedEditingRanges: (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => r.sendRequest(A.LinkedEditingRangeRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asLinkedEditingRanges(e, n), e => r.handleFailedRequest(A.LinkedEditingRangeRequest.type, n, e, null));
            const s = r.middleware;
            if (s.provideLinkedEditingRange) {
              return s.provideLinkedEditingRange(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return a.languages.registerLinkedEditingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.LinkedEditingFeature = u;
  },
  61872: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NotebookDocumentSyncFeature = undefined;
    const a = __importStar(require(91398));
    const A = __importStar(require(98766));
    const c = __importStar(require(69032));
    const u = __importStar(require(58319));
    const l = require(63191);
    function g(e, t) {
      if (e[t] === undefined) {
        e[t] = {};
      }
      return e[t];
    }
    var d;
    var h;
    var f;
    var p;
    var m;
    (function (e) {
      let t;
      (function (t) {
        function n(e, t) {
          return e.map(e => o(e, t));
        }
        function r(e) {
          return s(new Set(), e);
        }
        function o(e, t) {
          const n = A.NotebookCell.create(function (e) {
            switch (e) {
              case a.NotebookCellKind.Markup:
                return A.NotebookCellKind.Markup;
              case a.NotebookCellKind.Code:
                return A.NotebookCellKind.Code;
            }
          }(e.kind), t.asUri(e.document.uri));
          if (Object.keys(e.metadata).length > 0) {
            n.metadata = r(e.metadata);
          }
          if (e.executionSummary !== undefined && u.number(e.executionSummary.executionOrder) && u.boolean(e.executionSummary.success)) {
            n.executionSummary = {
              executionOrder: e.executionSummary.executionOrder,
              success: e.executionSummary.success
            };
          }
          return n;
        }
        function s(e, t) {
          if (e.has(t)) {
            throw new Error('Can\'t deep copy cyclic structures.');
          }
          if (Array.isArray(t)) {
            const n = [];
            for (const r of t) {
              if (r !== null && typeof r == 'object' || Array.isArray(r)) {
                n.push(s(e, r));
              } else {
                if (r instanceof RegExp) {
                  throw new Error('Can\'t transfer regular expressions to the server');
                }
                n.push(r);
              }
            }
            return n;
          }
          {
            const n = Object.keys(t);
            const r = Object.create(null);
            for (const o of n) {
              const n = t[o];
              if (n !== null && typeof n == 'object' || Array.isArray(n)) {
                r[o] = s(e, n);
              } else {
                if (n instanceof RegExp) {
                  throw new Error('Can\'t transfer regular expressions to the server');
                }
                r[o] = n;
              }
            }
            return r;
          }
        }
        t.asVersionedNotebookDocumentIdentifier = function (e, t) {
          return {
            version: e.version,
            uri: t.asUri(e.uri)
          };
        };
        t.asNotebookDocument = function (e, t, o) {
          const s = A.NotebookDocument.create(o.asUri(e.uri), e.notebookType, e.version, n(t, o));
          if (Object.keys(e.metadata).length > 0) {
            s.metadata = r(e.metadata);
          }
          return s;
        };
        t.asNotebookCells = n;
        t.asMetadata = r;
        t.asNotebookCell = o;
        t.asTextContentChange = function (e, t) {
          const n = t.asChangeTextDocumentParams(e, e.document.uri, e.document.version);
          return {
            document: n.textDocument,
            changes: n.contentChanges
          };
        };
        t.asNotebookDocumentChangeEvent = function (t, n) {
          const r = Object.create(null);
          if (t.metadata) {
            r.metadata = e.c2p.asMetadata(t.metadata);
          }
          if (t.cells !== undefined) {
            const o = Object.create(null);
            const s = t.cells;
            if (s.structure) {
              o.structure = {
                array: {
                  start: s.structure.array.start,
                  deleteCount: s.structure.array.deleteCount,
                  cells: s.structure.array.cells !== undefined ? s.structure.array.cells.map(t => e.c2p.asNotebookCell(t, n)) : undefined
                },
                didOpen: s.structure.didOpen !== undefined ? s.structure.didOpen.map(e => n.asOpenTextDocumentParams(e.document).textDocument) : undefined,
                didClose: s.structure.didClose !== undefined ? s.structure.didClose.map(e => n.asCloseTextDocumentParams(e.document).textDocument) : undefined
              };
            }
            if (s.data !== undefined) {
              o.data = s.data.map(t => e.c2p.asNotebookCell(t, n));
            }
            if (s.textContent !== undefined) {
              o.textContent = s.textContent.map(t => e.c2p.asTextContentChange(t, n));
            }
            if (Object.keys(o).length > 0) {
              r.cells = o;
            }
          }
          return r;
        };
      })(t = e.c2p ||= {});
    })(d ||= {});
    (function (e) {
      function t(e, t, r = true) {
        return e.kind === t.kind && e.document.uri.toString() === t.document.uri.toString() && e.document.languageId === t.document.languageId && !!function (e, t) {
          if (e === t) {
            return true;
          }
          if (e === undefined || t === undefined) {
            return false;
          }
          return e.executionOrder === t.executionOrder && e.success === t.success && function (e, t) {
            if (e === t) {
              return true;
            }
            if (e === undefined || t === undefined) {
              return false;
            }
            return e.startTime === t.startTime && e.endTime === t.endTime;
          }(e.timing, t.timing);
        }(e.executionSummary, t.executionSummary) && (!r || r && n(e.metadata, t.metadata));
      }
      function n(e, t) {
        if (e === t) {
          return true;
        }
        if (e == null || t == null) {
          return false;
        }
        if (typeof e != typeof t) {
          return false;
        }
        if (typeof e != 'object') {
          return false;
        }
        const o = Array.isArray(e);
        const s = Array.isArray(t);
        if (o !== s) {
          return false;
        }
        if (o && s) {
          if (e.length !== t.length) {
            return false;
          }
          for (let r = 0; r < e.length; r++) {
            if (!n(e[r], t[r])) {
              return false;
            }
          }
        }
        if (r(e) && r(t)) {
          const r = Object.keys(e);
          const o = Object.keys(t);
          if (r.length !== o.length) {
            return false;
          }
          r.sort();
          o.sort();
          if (!n(r, o)) {
            return false;
          }
          for (let o = 0; o < r.length; o++) {
            const s = r[o];
            if (!n(e[s], t[s])) {
              return false;
            }
          }
          return true;
        }
        return false;
      }
      function r(e) {
        return e !== null && typeof e == 'object';
      }
      e.computeDiff = function (e, n, r) {
        const o = e.length;
        const s = n.length;
        let a = 0;
        while (a < s && a < o && t(e[a], n[a], r)) {
          a++;
        }
        if (a < s && a < o) {
          let A = o - 1;
          let c = s - 1;
          while (A >= 0 && c >= 0 && t(e[A], n[c], r)) {
            A--;
            c--;
          }
          const u = A + 1 - a;
          const l = a === c + 1 ? undefined : n.slice(a, c + 1);
          if (l !== undefined) {
            return {
              start: a,
              deleteCount: u,
              cells: l
            };
          } else {
            return {
              start: a,
              deleteCount: u
            };
          }
        }
        if (a < s) {
          return {
            start: a,
            deleteCount: 0,
            cells: n.slice(a)
          };
        } else {
          if (a < o) {
            return {
              start: a,
              deleteCount: o - a
            };
          } else {
            return undefined;
          }
        }
      };
      e.isObjectLiteral = r;
    })(h ||= {});
    (function (e) {
      e.matchNotebook = function (e, t) {
        if (typeof e == 'string') {
          return e === '*' || t.notebookType === e;
        }
        if (e.notebookType !== undefined && e.notebookType !== '*' && t.notebookType !== e.notebookType) {
          return false;
        }
        const n = t.uri;
        return (e.scheme === undefined || e.scheme === '*' || n.scheme === e.scheme) && (e.pattern === undefined || !!l.matchGlobPattern(e.pattern, n));
      };
    })(f ||= {});
    (function (e) {
      function t(e, t, n, r) {
        if (t === undefined && n === undefined) {
          return {
            notebook: e,
            language: r
          };
        } else {
          return {
            notebook: {
              notebookType: e,
              scheme: t,
              pattern: n
            },
            language: r
          };
        }
      }
      e.asDocumentSelector = function (e) {
        const n = e.notebookSelector;
        const r = [];
        for (const e of n) {
          const n = (typeof e.notebook == 'string' ? e.notebook : e.notebook?.notebookType) ?? '*';
          const o = typeof e.notebook == 'string' ? undefined : e.notebook?.scheme;
          const s = typeof e.notebook == 'string' ? undefined : e.notebook?.pattern;
          if (e.cells !== undefined) {
            for (const a of e.cells) {
              r.push(t(n, o, s, a.language));
            }
          } else {
            r.push(t(n, o, s, undefined));
          }
        }
        return r;
      };
    })(p ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          cells: e,
          uris: new Set(e.map(e => e.document.uri.toString()))
        };
      };
    })(m ||= {});
    class I {
      client;
      options;
      notebookSyncInfo;
      notebookDidOpen;
      disposables;
      selector;
      onChangeNotificationSent;
      onOpenNotificationSent;
      onCloseNotificationSent;
      onSaveNotificationSent;
      constructor(e, t, n, r, o, s) {
        this.client = e;
        this.options = t;
        this.notebookSyncInfo = new Map();
        this.notebookDidOpen = new Set();
        this.disposables = [];
        this.selector = e.protocol2CodeConverter.asDocumentSelector(p.asDocumentSelector(t));
        this.onChangeNotificationSent = n;
        this.onOpenNotificationSent = r;
        this.onCloseNotificationSent = o;
        this.onSaveNotificationSent = s;
        a.workspace.onDidOpenNotebookDocument(e => {
          this.notebookDidOpen.add(e.uri.toString());
          this.didOpen(e);
        }, undefined, this.disposables);
        for (const e of a.workspace.notebookDocuments) {
          this.notebookDidOpen.add(e.uri.toString());
          this.didOpen(e);
        }
        a.workspace.onDidChangeNotebookDocument(e => this.didChangeNotebookDocument(e), undefined, this.disposables);
        if (this.options.save === true) {
          a.workspace.onDidSaveNotebookDocument(e => this.didSave(e), undefined, this.disposables);
        }
        a.workspace.onDidCloseNotebookDocument(e => {
          this.didClose(e);
          this.notebookDidOpen.delete(e.uri.toString());
        }, undefined, this.disposables);
      }
      getState() {
        for (const e of a.workspace.notebookDocuments) {
          if (this.getMatchingCellsConsideringSyncInfo(e) !== undefined) {
            return {
              kind: 'document',
              id: '$internal',
              registrations: true,
              matches: true
            };
          }
        }
        return {
          kind: 'document',
          id: '$internal',
          registrations: true,
          matches: false
        };
      }
      get mode() {
        return 'notebook';
      }
      handles(e) {
        if (a.languages.match(this.selector, e) > 0) {
          return true;
        }
        const t = e.uri.toString();
        for (const e of this.notebookSyncInfo.values()) {
          if (e.uris.has(t)) {
            return true;
          }
        }
        return false;
      }
      didOpenNotebookCellTextDocument(e, t) {
        if (a.languages.match(this.selector, t.document) === 0) {
          return;
        }
        if (!this.notebookDidOpen.has(e.uri.toString())) {
          return;
        }
        const n = this.getSyncInfo(e);
        const r = this.cellMatches(e, t);
        if (n !== undefined) {
          const o = n.uris.has(t.document.uri.toString());
          if (r && o || !r && !o) {
            return;
          }
          if (r) {
            const r = this.mergeCells(e, n, [t]);
            if (r !== undefined) {
              const t = this.asNotebookDocumentChangeEvent(e, undefined, n, r);
              if (t !== undefined) {
                this.doSendChange(t, r).catch(() => {});
              }
            }
          }
        } else {
          if (r) {
            this.doSendOpen(e, [t]).catch(() => {});
          }
        }
      }
      didChangeNotebookCellTextDocument(e, t, n) {
        if (a.languages.match(this.selector, n.document) === 0) {
          return;
        }
        const r = this.getSyncInfo(e);
        if (r !== undefined && r.uris.has(t.document.uri.toString())) {
          this.doSendChange({
            notebook: e,
            cells: {
              textContent: [n]
            }
          }, r.cells).catch(() => {});
        }
      }
      didCloseNotebookCellTextDocument(e, t) {
        const n = this.getSyncInfo(e);
        if (n === undefined) {
          return;
        }
        const r = t.document.uri;
        const o = n.cells.findIndex(e => e.document.uri.toString() === r.toString());
        if (o !== -1) {
          if (o === 0 && n.cells.length === 1) {
            this.doSendClose(e, n.cells).catch(() => {});
          } else {
            const t = n.cells.slice();
            const r = t.splice(o, 1);
            this.doSendChange({
              notebook: e,
              cells: {
                structure: {
                  array: {
                    start: o,
                    deleteCount: 1
                  },
                  didClose: r
                }
              }
            }, t).catch(() => {});
          }
        }
      }
      dispose() {
        for (const e of this.disposables) {
          e.dispose();
        }
      }
      didOpen(e, t, n = this.getSyncInfo(e)) {
        if (n !== undefined) {
          if (t === undefined) {
            t = n.cells.slice();
          }
          if (t !== undefined) {
            const r = this.asNotebookDocumentChangeEvent(e, undefined, n, t);
            if (r !== undefined) {
              this.doSendChange(r, t).catch(() => {});
            }
          } else {
            this.doSendClose(e, []).catch(() => {});
          }
        } else {
          if ((t = this.getMatchingCells(e)) === undefined) {
            return;
          }
          this.doSendOpen(e, t).catch(() => {});
        }
      }
      didChangeNotebookDocument(e) {
        const t = e.notebook;
        const n = this.getSyncInfo(t);
        if (n === undefined) {
          if (e.contentChanges.length === 0) {
            return;
          }
          const r = this.getMatchingCells(t);
          if (r === undefined) {
            return;
          }
          this.didOpen(t, r, n);
        } else {
          const r = this.getMatchingCellsFromEvent(t, n, e);
          if (r === undefined) {
            this.didClose(t, n);
            return;
          }
          const o = this.asNotebookDocumentChangeEvent(e.notebook, e, n, r);
          if (o !== undefined) {
            this.doSendChange(o, r).catch(() => {});
          }
        }
      }
      didSave(e) {
        if (this.getSyncInfo(e) !== undefined) {
          this.doSendSave(e).catch(() => {});
        }
      }
      didClose(e, t = this.getSyncInfo(e)) {
        if (t === undefined) {
          return;
        }
        const n = e.getCells().filter(e => t.uris.has(e.document.uri.toString()));
        this.doSendClose(e, n).catch(() => {});
      }
      async sendDidOpenNotebookDocument(e) {
        if (this.getSyncInfo(e) !== undefined) {
          throw new Error(`Notebook document ${e.uri.toString()} is already open`);
        }
        const t = this.getMatchingCells(e);
        if (t !== undefined) {
          return this.doSendOpen(e, t);
        }
      }
      async doSendOpen(e, t) {
        const n = async (e, t) => {
          const n = t.map(e => this.client.code2ProtocolConverter.asTextDocumentItem(e.document));
          try {
            await this.client.sendNotification(A.DidOpenNotebookDocumentNotification.type, {
              notebookDocument: d.c2p.asNotebookDocument(e, t, this.client.code2ProtocolConverter),
              cellTextDocuments: n
            });
            this.onOpenNotificationSent.fire(e);
          } catch (e) {
            this.client.error('Sending DidOpenNotebookDocumentNotification failed', e);
            throw e;
          }
        };
        const r = this.client.middleware?.notebooks;
        this.notebookSyncInfo.set(e.uri.toString(), m.create(t));
        if (r?.didOpen !== undefined) {
          return r.didOpen(e, t, n);
        } else {
          return n(e, t);
        }
      }
      async sendDidChangeNotebookDocument(e) {
        const t = this.getMatchingCellsFromSyncInfo(e.notebook);
        if (t === undefined) {
          throw new Error(`Received changed event for un-synced notebook ${e.notebook.uri.toString()}`);
        }
        return this.doSendChange(e, t);
      }
      async doSendChange(e, t) {
        const n = async e => {
          try {
            await this.client.sendNotification(A.DidChangeNotebookDocumentNotification.type, {
              notebookDocument: d.c2p.asVersionedNotebookDocumentIdentifier(e.notebook, this.client.code2ProtocolConverter),
              change: d.c2p.asNotebookDocumentChangeEvent(e, this.client.code2ProtocolConverter)
            });
            this.onChangeNotificationSent.fire(e);
          } catch (e) {
            this.client.error('Sending DidChangeNotebookDocumentNotification failed', e);
            throw e;
          }
        };
        const r = this.client.middleware?.notebooks;
        if (e.cells?.structure !== undefined) {
          this.notebookSyncInfo.set(e.notebook.uri.toString(), m.create(t));
        }
        if (r?.didChange !== undefined) {
          return r?.didChange(e, n);
        } else {
          return n(e);
        }
      }
      async sendDidSaveNotebookDocument(e) {
        return this.doSendSave(e);
      }
      async doSendSave(e) {
        const t = async e => {
          try {
            await this.client.sendNotification(A.DidSaveNotebookDocumentNotification.type, {
              notebookDocument: {
                uri: this.client.code2ProtocolConverter.asUri(e.uri)
              }
            });
            this.onSaveNotificationSent.fire(e);
          } catch (e) {
            this.client.error('Sending DidSaveNotebookDocumentNotification failed', e);
            throw e;
          }
        };
        const n = this.client.middleware?.notebooks;
        if (n?.didSave !== undefined) {
          return n.didSave(e, t);
        } else {
          return t(e);
        }
      }
      async sendDidCloseNotebookDocument(e) {
        const t = this.getMatchingCellsFromSyncInfo(e);
        if (t === undefined) {
          throw new Error(`Received close event for un-synced notebook ${e.uri.toString()}`);
        }
        return this.doSendClose(e, t);
      }
      async doSendClose(e, t) {
        const n = async (e, t) => {
          try {
            await this.client.sendNotification(A.DidCloseNotebookDocumentNotification.type, {
              notebookDocument: {
                uri: this.client.code2ProtocolConverter.asUri(e.uri)
              },
              cellTextDocuments: t.map(e => this.client.code2ProtocolConverter.asTextDocumentIdentifier(e.document))
            });
            this.onCloseNotificationSent.fire(e);
          } catch (e) {
            this.client.error('Sending DidCloseNotebookDocumentNotification failed', e);
            throw e;
          }
        };
        const r = this.client.middleware?.notebooks;
        this.notebookSyncInfo.delete(e.uri.toString());
        if (r?.didClose !== undefined) {
          return r.didClose(e, t, n);
        } else {
          return n(e, t);
        }
      }
      getSynchronizedCells(e) {
        const t = this.getSyncInfo(e);
        return t?.cells;
      }
      asNotebookDocumentChangeEvent(e, t, n, r) {
        if (t !== undefined && t.notebook !== e) {
          throw new Error('Notebook must be identical');
        }
        const o = {
          notebook: e
        };
        let s;
        if (t?.metadata !== undefined) {
          o.metadata = d.c2p.asMetadata(t.metadata);
        }
        if (t?.cellChanges !== undefined && t.cellChanges.length > 0) {
          const e = [];
          s = new Set(r.map(e => e.document.uri.toString()));
          for (const n of t.cellChanges) {
            if (!!s.has(n.cell.document.uri.toString()) && (n.executionSummary !== undefined || n.metadata !== undefined)) {
              e.push(n.cell);
            }
          }
          if (e.length > 0) {
            o.cells = o.cells ?? {};
            o.cells.data = e;
          }
        }
        if ((t?.contentChanges !== undefined && t.contentChanges.length > 0 || t === undefined) && n !== undefined && r !== undefined) {
          const e = n.cells;
          const t = r;
          const s = h.computeDiff(e, t, false);
          let a;
          let A;
          if (s !== undefined) {
            a = s.cells === undefined ? new Map() : new Map(s.cells.map(e => [e.document.uri.toString(), e]));
            A = s.deleteCount === 0 ? new Map() : new Map(e.slice(s.start, s.start + s.deleteCount).map(e => [e.document.uri.toString(), e]));
            for (const e of Array.from(A.keys())) {
              if (a.has(e)) {
                A.delete(e);
                a.delete(e);
              }
            }
            o.cells = o.cells ?? {};
            const t = [];
            const n = [];
            if (a.size > 0 || A.size > 0) {
              for (const e of a.values()) {
                t.push(e);
              }
              for (const e of A.values()) {
                n.push(e);
              }
            }
            o.cells.structure = {
              array: s,
              didOpen: t,
              didClose: n
            };
          }
        }
        if (Object.keys(o).length > 1) {
          return o;
        } else {
          return undefined;
        }
      }
      getMatchingCells(e, t = e.getCells()) {
        if (this.options.notebookSelector !== undefined) {
          for (const n of this.options.notebookSelector) {
            if (n.notebook === undefined || f.matchNotebook(n.notebook, e)) {
              const r = this.filterCells(e, t, n.cells);
              if (r.length === 0) {
                return undefined;
              } else {
                return r;
              }
            }
          }
        }
      }
      getMatchingCellsFromEvent(e, t, n) {
        if (this.options.notebookSelector === undefined) {
          return;
        }
        let r;
        let o;
        for (const t of this.options.notebookSelector) {
          if (t.notebook === undefined || f.matchNotebook(t.notebook, e)) {
            r = t;
            break;
          }
        }
        if (r === undefined) {
          return;
        }
        if ((n.cellChanges === undefined || n.cellChanges.length === 0) && (n.contentChanges === undefined || n.contentChanges.length === 0)) {
          return t.cells;
        }
        if (n.cellChanges !== undefined && n.cellChanges.length > 0) {
          const s = n.cellChanges.map(e => e.cell);
          const a = this.filterCells(e, s, r.cells);
          if (a.length !== s.length) {
            o = new Set(t.uris);
            for (const e of s) {
              o.delete(e.document.uri.toString());
            }
            for (const e of a) {
              o.add(e.document.uri.toString());
            }
          }
        }
        if (n.contentChanges !== undefined && n.contentChanges.length > 0) {
          if (o === undefined) {
            o = new Set(t.uris);
          }
          for (const t of n.contentChanges) {
            for (const e of t.removedCells) {
              o.delete(e.document.uri.toString());
            }
            const n = this.filterCells(e, new Array(...t.addedCells), r.cells);
            for (const e of n) {
              o.add(e.document.uri.toString());
            }
          }
        }
        if (o === undefined) {
          return t.cells;
        }
        const s = [];
        const a = e.getCells();
        for (const e of a) {
          if (o.has(e.document.uri.toString())) {
            s.push(e);
          }
        }
        return s;
      }
      getMatchingCellsFromSyncInfo(e) {
        const t = this.getSyncInfo(e);
        if (t !== undefined) {
          return t.cells;
        } else {
          return undefined;
        }
      }
      getMatchingCellsConsideringSyncInfo(e) {
        const t = this.getSyncInfo(e);
        if (t !== undefined) {
          return t.cells;
        } else {
          return this.getMatchingCells(e);
        }
      }
      mergeCells(e, t, n) {
        const r = [];
        const o = new Set(t.uris);
        for (const e of n) {
          o.add(e.document.uri.toString());
        }
        for (const t of e.getCells()) {
          if (o.has(t.document.uri.toString())) {
            r.push(t);
          }
        }
        return r;
      }
      cellMatches(e, t) {
        const n = this.getMatchingCells(e, [t]);
        return n !== undefined && n[0] === t;
      }
      filterCells(e, t, n) {
        const r = n !== undefined ? t.filter(e => {
          const t = e.document.languageId;
          return n.some(e => e.language === '*' || t === e.language);
        }) : t;
        if (typeof this.client.clientOptions.notebookDocumentOptions?.filterCells == 'function') {
          return this.client.clientOptions.notebookDocumentOptions.filterCells(e, r);
        } else {
          return r;
        }
      }
      getSyncInfo(e) {
        return this.notebookSyncInfo.get(e.uri.toString());
      }
    }
    class E {
      static CellScheme = 'vscode-notebook-cell';
      client;
      registrations;
      dedicatedChannel;
      _onChangeNotificationSent;
      _onOpenNotificationSent;
      _onCloseNotificationSent;
      _onSaveNotificationSent;
      constructor(e) {
        this.client = e;
        this.registrations = new Map();
        this.registrationType = A.NotebookDocumentSyncRegistrationType.type;
        this._onChangeNotificationSent = new a.EventEmitter();
        this._onOpenNotificationSent = new a.EventEmitter();
        this._onCloseNotificationSent = new a.EventEmitter();
        this._onSaveNotificationSent = new a.EventEmitter();
        a.workspace.onDidOpenTextDocument(e => {
          if (e.uri.scheme !== E.CellScheme) {
            return;
          }
          const [t, n] = this.findNotebookDocumentAndCell(e);
          if (t !== undefined && n !== undefined) {
            for (const e of this.registrations.values()) {
              if (e instanceof I) {
                e.didOpenNotebookCellTextDocument(t, n);
              }
            }
          }
        });
        a.workspace.onDidChangeTextDocument(e => {
          if (e.contentChanges.length === 0) {
            return;
          }
          const t = e.document;
          if (t.uri.scheme !== E.CellScheme) {
            return;
          }
          const [n, r] = this.findNotebookDocumentAndCell(t);
          if (n !== undefined && r !== undefined) {
            for (const t of this.registrations.values()) {
              if (t instanceof I) {
                t.didChangeNotebookCellTextDocument(n, r, e);
              }
            }
          }
        });
        a.workspace.onDidCloseTextDocument(e => {
          if (e.uri.scheme !== E.CellScheme) {
            return;
          }
          const [t, n] = this.findNotebookDocumentAndCell(e);
          if (t !== undefined && n !== undefined) {
            for (const e of this.registrations.values()) {
              if (e instanceof I) {
                e.didCloseNotebookCellTextDocument(t, n);
              }
            }
          }
        });
      }
      getState() {
        if (this.registrations.size === 0) {
          return {
            kind: 'document',
            id: this.registrationType.method,
            registrations: false,
            matches: false
          };
        }
        for (const e of this.registrations.values()) {
          const t = e.getState();
          if (t.kind === 'document' && t.registrations === true && t.matches === true) {
            return {
              kind: 'document',
              id: this.registrationType.method,
              registrations: true,
              matches: true
            };
          }
        }
        return {
          kind: 'document',
          id: this.registrationType.method,
          registrations: true,
          matches: false
        };
      }
      registrationType;
      get onOpenNotificationSent() {
        return this._onOpenNotificationSent.event;
      }
      get onChangeNotificationSent() {
        return this._onChangeNotificationSent.event;
      }
      get onCloseNotificationSent() {
        return this._onCloseNotificationSent.event;
      }
      get onSaveNotificationSent() {
        return this._onSaveNotificationSent.event;
      }
      fillClientCapabilities(e) {
        const t = g(g(e, 'notebookDocument'), 'synchronization');
        t.dynamicRegistration = true;
        t.executionSummarySupport = true;
      }
      preInitialize(e) {
        const t = e.notebookDocumentSync;
        if (t !== undefined) {
          this.dedicatedChannel = this.client.protocol2CodeConverter.asDocumentSelector(p.asDocumentSelector(t));
        }
      }
      initialize(e) {
        const t = e.notebookDocumentSync;
        if (t === undefined) {
          return;
        }
        const n = t.id ?? c.generateUuid();
        this.register({
          id: n,
          registerOptions: t
        });
      }
      register(e) {
        const t = new I(this.client, e.registerOptions, this._onChangeNotificationSent, this._onOpenNotificationSent, this._onCloseNotificationSent, this._onSaveNotificationSent);
        this.registrations.set(e.id, t);
      }
      unregister(e) {
        const t = this.registrations.get(e);
        if (t !== undefined) {
          this.registrations.delete(e);
          t.dispose();
        }
      }
      clear() {
        for (const e of this.registrations.values()) {
          e.dispose();
        }
        this.registrations.clear();
        this._onChangeNotificationSent.dispose();
        this._onChangeNotificationSent = new a.EventEmitter();
        this._onOpenNotificationSent.dispose();
        this._onOpenNotificationSent = new a.EventEmitter();
        this._onCloseNotificationSent.dispose();
        this._onCloseNotificationSent = new a.EventEmitter();
        this._onSaveNotificationSent.dispose();
        this._onSaveNotificationSent = new a.EventEmitter();
      }
      handles(e) {
        if (e.uri.scheme !== E.CellScheme) {
          return false;
        }
        if (this.dedicatedChannel !== undefined && a.languages.match(this.dedicatedChannel, e) > 0) {
          return true;
        }
        for (const t of this.registrations.values()) {
          if (t.handles(e)) {
            return true;
          }
        }
        return false;
      }
      getProvider(e) {
        for (const t of this.registrations.values()) {
          if (t.handles(e.document)) {
            return t;
          }
        }
      }
      findNotebookDocumentAndCell(e) {
        const t = e.uri.toString();
        for (const e of a.workspace.notebookDocuments) {
          for (const n of e.getCells()) {
            if (n.document.uri.toString() === t) {
              return [e, n];
            }
          }
        }
        return [undefined, undefined];
      }
    }
    exports.NotebookDocumentSyncFeature = E;
  },
  89870: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProgressFeature = undefined;
    const r = require(98766);
    const o = require(69403);
    exports.ProgressFeature = class {
      _client;
      activeParts;
      constructor(e) {
        this._client = e;
        this.activeParts = new Set();
      }
      getState() {
        return {
          kind: 'window',
          id: r.WorkDoneProgressCreateRequest.method,
          registrations: this.activeParts.size > 0
        };
      }
      fillClientCapabilities(e) {
        var t;
        var n;
        (t = e, n = 'window', t[n] === undefined && (t[n] = Object.create(null)), t[n]).workDoneProgress = true;
      }
      initialize() {
        const e = this._client;
        const t = e => {
          this.activeParts.delete(e);
        };
        e.onRequest(r.WorkDoneProgressCreateRequest.type, e => {
          this.activeParts.add(new o.ProgressPart(this._client, e.token, t));
        });
      }
      clear() {
        for (const e of this.activeParts) {
          e.done();
        }
        this.activeParts.clear();
      }
    };
  },
  69403: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProgressPart = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(58319));
    exports.ProgressPart = class {
      _client;
      _token;
      _infinite;
      _reported;
      _lspProgressDisposable;
      _progress;
      _cancellationToken;
      _tokenDisposable;
      _resolve;
      _reject;
      constructor(e, t, n) {
        this._client = e;
        this._token = t;
        this._reported = 0;
        this._infinite = false;
        this._lspProgressDisposable = this._client.onProgress(A.WorkDoneProgress.type, this._token, e => {
          switch (e.kind) {
            case 'begin':
              this.begin(e);
              break;
            case 'report':
              this.report(e);
              break;
            case 'end':
              this.done();
              if (n) {
                n(this);
              }
          }
        });
      }
      begin(e) {
        this._infinite = e.percentage === undefined;
        if (this._lspProgressDisposable !== undefined) {
          a.window.withProgress({
            location: a.ProgressLocation.Window,
            cancellable: e.cancellable,
            title: e.title
          }, async (t, n) => {
            if (this._lspProgressDisposable !== undefined) {
              this._progress = t;
              this._cancellationToken = n;
              this._tokenDisposable = this._cancellationToken.onCancellationRequested(() => {
                this._client.sendNotification(A.WorkDoneProgressCancelNotification.type, {
                  token: this._token
                });
              });
              this.report(e);
              return new Promise((e, t) => {
                this._resolve = e;
                this._reject = t;
              });
            }
          });
        }
      }
      report(e) {
        if (this._infinite && c.string(e.message)) {
          if (this._progress !== undefined) {
            this._progress.report({
              message: e.message
            });
          }
        } else {
          if (c.number(e.percentage)) {
            const t = Math.max(0, Math.min(e.percentage, 100));
            const n = Math.max(0, t - this._reported);
            this._reported += n;
            if (this._progress !== undefined) {
              this._progress.report({
                message: e.message,
                increment: n
              });
            }
          }
        }
      }
      cancel() {
        this.cleanup();
        if (this._reject !== undefined) {
          this._reject();
          this._resolve = undefined;
          this._reject = undefined;
        }
      }
      done() {
        this.cleanup();
        if (this._resolve !== undefined) {
          this._resolve();
          this._resolve = undefined;
          this._reject = undefined;
        }
      }
      cleanup() {
        if (this._lspProgressDisposable !== undefined) {
          this._lspProgressDisposable.dispose();
          this._lspProgressDisposable = undefined;
        }
        if (this._tokenDisposable !== undefined) {
          this._tokenDisposable.dispose();
          this._tokenDisposable = undefined;
        }
        this._progress = undefined;
        this._cancellationToken = undefined;
      }
    };
  },
  38717: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.CallHierarchyItem {
      data;
      constructor(e, t, n, r, o, s, a) {
        super(e, t, n, r, o, s);
        if (a !== undefined) {
          this.data = a;
        }
      }
    }
    exports.default = A;
  },
  9206: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.CodeAction {
      data;
      constructor(e, t) {
        super(e);
        this.data = t;
      }
    }
    exports.default = A;
  },
  65588: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.CodeLens {
      data;
      constructor(e) {
        super(e);
      }
    }
    exports.default = A;
  },
  17652: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.CompletionItem {
      data;
      fromEdit;
      documentationFormat;
      originalItemKind;
      deprecated;
      insertTextMode;
      constructor(e) {
        super(e);
      }
    }
    exports.default = A;
  },
  7605: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConverter = undefined;
    const A = __importStar(require(91398));
    const c = __importStar(require(98766));
    const u = __importStar(require(58319));
    const l = __importStar(require(80483));
    const g = __importDefault(require(17652));
    const d = __importDefault(require(65588));
    const h = __importDefault(require(97424));
    const f = __importDefault(require(9206));
    const p = require(37894);
    const m = __importDefault(require(38717));
    const I = __importDefault(require(67321));
    const E = __importDefault(require(56144));
    const y = __importDefault(require(7511));
    const w = require(98766);
    var _;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && u.string(t.language) && u.string(t.value);
      };
    })(_ ||= {});
    exports.createConverter = function (e, t, n, r) {
      const o = e || (e => A.Uri.parse(e));
      function s(e) {
        return o(e);
      }
      function a(e) {
        const t = new p.ProtocolDiagnostic(B(e.range), e.message, D(e.severity), e.data);
        if (e.code !== undefined) {
          if (typeof e.code == 'string' || typeof e.code == 'number') {
            if (c.CodeDescription.is(e.codeDescription)) {
              t.code = {
                value: e.code,
                target: s(e.codeDescription.href)
              };
            } else {
              t.code = e.code;
            }
          } else {
            if (p.DiagnosticCode.is(e.code)) {
              t.hasDiagnosticCode = true;
              const n = e.code;
              t.code = {
                value: n.value,
                target: s(n.target)
              };
            }
          }
        }
        if (e.source) {
          t.source = e.source;
        }
        if (e.relatedInformation) {
          t.relatedInformation = function (e) {
            const t = new Array(e.length);
            for (let n = 0; n < e.length; n++) {
              const r = e[n];
              t[n] = new A.DiagnosticRelatedInformation(K(r.location), r.message);
            }
            return t;
          }(e.relatedInformation);
        }
        if (Array.isArray(e.tags)) {
          t.tags = function (e) {
            if (!e) {
              return;
            }
            const t = [];
            for (const n of e) {
              const e = v(n);
              if (e !== undefined) {
                t.push(e);
              }
            }
            if (t.length > 0) {
              return t;
            } else {
              return undefined;
            }
          }(e.tags);
        }
        return t;
      }
      function v(e) {
        switch (e) {
          case c.DiagnosticTag.Unnecessary:
            return A.DiagnosticTag.Unnecessary;
          case c.DiagnosticTag.Deprecated:
            return A.DiagnosticTag.Deprecated;
          default:
            return;
        }
      }
      function b(e) {
        if (e) {
          return new A.Position(e.line, e.character);
        } else {
          return undefined;
        }
      }
      function B(e) {
        if (e) {
          return new A.Range(e.start.line, e.start.character, e.end.line, e.end.character);
        } else {
          return undefined;
        }
      }
      async function Q(e, t) {
        return l.map(e, e => new A.Range(e.start.line, e.start.character, e.end.line, e.end.character), t);
      }
      function D(e) {
        if (e == null) {
          return A.DiagnosticSeverity.Error;
        }
        switch (e) {
          case c.DiagnosticSeverity.Error:
            return A.DiagnosticSeverity.Error;
          case c.DiagnosticSeverity.Warning:
            return A.DiagnosticSeverity.Warning;
          case c.DiagnosticSeverity.Information:
            return A.DiagnosticSeverity.Information;
          case c.DiagnosticSeverity.Hint:
            return A.DiagnosticSeverity.Hint;
        }
        return A.DiagnosticSeverity.Error;
      }
      function S(e) {
        if (u.string(e)) {
          return e;
        }
        switch (e.kind) {
          case c.MarkupKind.Markdown:
            return T(e.value);
          case c.MarkupKind.PlainText:
            return e.value;
          default:
            return `Unsupported Markup content received. Kind is: ${e.kind}`;
        }
      }
      function T(e) {
        let o;
        if (e === undefined || typeof e == 'string') {
          o = new A.MarkdownString(e);
        } else {
          switch (e.kind) {
            case c.MarkupKind.Markdown:
              o = new A.MarkdownString(e.value);
              break;
            case c.MarkupKind.PlainText:
              o = new A.MarkdownString();
              o.appendText(e.value);
              break;
            default:
              o = new A.MarkdownString();
              o.appendText(`Unsupported Markup content received. Kind is: ${e.kind}`);
          }
        }
        o.isTrusted = t;
        o.supportHtml = n;
        o.supportThemeIcons = r;
        return o;
      }
      function R(e) {
        if (e === c.CompletionItemTag.Deprecated) {
          return A.CompletionItemTag.Deprecated;
        }
      }
      function k(e, t, n, r, o, s) {
        const a = function (e) {
          if (e == null) {
            return [];
          }
          const t = [];
          for (const n of e) {
            const e = R(n);
            if (e !== undefined) {
              t.push(e);
            }
          }
          return t;
        }(e.tags);
        const l = function (e) {
          if (c.CompletionItemLabelDetails.is(e.labelDetails)) {
            return {
              label: e.label,
              detail: e.labelDetails.detail,
              description: e.labelDetails.description
            };
          } else {
            return e.label;
          }
        }(e);
        const d = new g.default(l);
        if (e.detail) {
          d.detail = e.detail;
        }
        if (e.documentation) {
          d.documentation = S(e.documentation);
          d.documentationFormat = u.string(e.documentation) ? '$string' : e.documentation.kind;
        }
        if (e.filterText) {
          d.filterText = e.filterText;
        }
        const h = function (e, t, n) {
          const r = e.insertTextFormat ?? n;
          if (e.textEdit !== undefined || t !== undefined) {
            const [n, s] = e.textEdit !== undefined ? (o = e.textEdit, c.InsertReplaceEdit.is(o) ? [{
              inserting: B(o.insert),
              replacing: B(o.replace)
            }, o.newText] : [B(o.range), o.newText]) : [t, e.textEditText ?? e.label];
            if (r === c.InsertTextFormat.Snippet) {
              return {
                text: new A.SnippetString(s),
                range: n,
                fromEdit: true
              };
            } else {
              return {
                text: s,
                range: n,
                fromEdit: true
              };
            }
          }
          if (e.insertText) {
            if (r === c.InsertTextFormat.Snippet) {
              return {
                text: new A.SnippetString(e.insertText),
                fromEdit: false
              };
            } else {
              return {
                text: e.insertText,
                fromEdit: false
              };
            }
          } else {
            return undefined;
          }
          var o;
        }(e, n, o);
        if (h) {
          d.insertText = h.text;
          d.range = h.range;
          d.fromEdit = h.fromEdit;
        }
        if (u.number(e.kind)) {
          f = e.kind;
          const [t, n] = c.CompletionItemKind.Text <= f && f <= c.CompletionItemKind.TypeParameter ? [f - 1, undefined] : [A.CompletionItemKind.Text, f];
          d.kind = t;
          if (n) {
            d.originalItemKind = n;
          }
        }
        var f;
        if (e.sortText) {
          d.sortText = e.sortText;
        }
        if (e.additionalTextEdits) {
          d.additionalTextEdits = F(e.additionalTextEdits);
        }
        const p = e.commitCharacters !== undefined ? u.stringArray(e.commitCharacters) ? e.commitCharacters : undefined : t;
        if (p) {
          d.commitCharacters = p.slice();
        }
        if (e.command) {
          d.command = V(e.command);
        }
        if (e.deprecated === true || e.deprecated === false) {
          d.deprecated = e.deprecated;
          if (e.deprecated === true) {
            a.push(A.CompletionItemTag.Deprecated);
          }
        }
        if (e.preselect === true || e.preselect === false) {
          d.preselect = e.preselect;
        }
        const m = e.data ?? s;
        if (m !== undefined) {
          d.data = m;
        }
        if (a.length > 0) {
          d.tags = a;
        }
        const I = e.insertTextMode ?? r;
        if (I !== undefined) {
          d.insertTextMode = I;
          if (I === c.InsertTextMode.asIs) {
            d.keepWhitespace = true;
          }
        }
        return d;
      }
      function x(e) {
        if (e) {
          return new A.TextEdit(B(e.range), e.newText);
        }
      }
      async function P(e, t) {
        if (e) {
          return l.map(e, x, t);
        }
      }
      function F(e) {
        if (!e) {
          return;
        }
        const t = new Array(e.length);
        for (let n = 0; n < e.length; n++) {
          t[n] = x(e[n]);
        }
        return t;
      }
      async function M(e, t) {
        return l.mapAsync(e, O, t);
      }
      async function O(e, t) {
        const n = new A.SignatureInformation(e.label);
        if (e.documentation !== undefined) {
          n.documentation = S(e.documentation);
        }
        if (e.parameters !== undefined) {
          n.parameters = await N(e.parameters, t);
        }
        if (e.activeParameter !== undefined) {
          n.activeParameter = e.activeParameter ?? -1;
        }
        return n;
      }
      function N(e, t) {
        return l.map(e, L, t);
      }
      function L(e) {
        const t = new A.ParameterInformation(e.label);
        if (e.documentation) {
          t.documentation = S(e.documentation);
        }
        return t;
      }
      function K(e) {
        if (e) {
          return new A.Location(o(e.uri), B(e.range));
        } else {
          return undefined;
        }
      }
      function U(e) {
        if (!e) {
          return;
        }
        const t = {
          targetUri: o(e.targetUri),
          targetRange: B(e.targetRange),
          originSelectionRange: B(e.originSelectionRange),
          targetSelectionRange: B(e.targetSelectionRange)
        };
        if (!t.targetSelectionRange) {
          throw new Error('targetSelectionRange must not be undefined or null');
        }
        return t;
      }
      async function j(e, t) {
        if (e) {
          if (u.array(e)) {
            if (e.length === 0) {
              return [];
            }
            if (c.LocationLink.is(e[0])) {
              const n = e;
              return l.map(n, U, t);
            }
            {
              const n = e;
              return l.map(n, K, t);
            }
          }
          if (c.LocationLink.is(e)) {
            return [U(e)];
          } else {
            return K(e);
          }
        }
      }
      function q(e) {
        const t = new A.DocumentHighlight(B(e.range));
        if (u.number(e.kind)) {
          t.kind = G(e.kind);
        }
        return t;
      }
      function G(e) {
        switch (e) {
          case c.DocumentHighlightKind.Text:
            return A.DocumentHighlightKind.Text;
          case c.DocumentHighlightKind.Read:
            return A.DocumentHighlightKind.Read;
          case c.DocumentHighlightKind.Write:
            return A.DocumentHighlightKind.Write;
        }
        return A.DocumentHighlightKind.Text;
      }
      function Y(e) {
        if (e <= c.SymbolKind.TypeParameter) {
          return e - 1;
        } else {
          return A.SymbolKind.Property;
        }
      }
      function H(e) {
        if (e === c.SymbolTag.Deprecated) {
          return A.SymbolTag.Deprecated;
        }
      }
      function J(e) {
        if (e == null) {
          return;
        }
        const t = [];
        for (const n of e) {
          const e = H(n);
          if (e !== undefined) {
            t.push(e);
          }
        }
        if (t.length === 0) {
          return undefined;
        } else {
          return t;
        }
      }
      function z(e) {
        const t = e.data;
        const n = e.location;
        const r = n.range === undefined || t !== undefined ? new E.default(e.name, Y(e.kind), e.containerName ?? '', n.range === undefined ? o(n.uri) : new A.Location(o(e.location.uri), B(n.range)), t) : new A.SymbolInformation(e.name, Y(e.kind), e.containerName ?? '', new A.Location(o(e.location.uri), B(n.range)));
        W(r, e);
        return r;
      }
      function $(e) {
        const t = new A.DocumentSymbol(e.name, e.detail || '', Y(e.kind), B(e.range), B(e.selectionRange));
        W(t, e);
        if (e.children !== undefined && e.children.length > 0) {
          const n = [];
          for (const t of e.children) {
            n.push($(t));
          }
          t.children = n;
        }
        return t;
      }
      function W(e, t) {
        e.tags = J(t.tags);
        if (t.deprecated) {
          if (e.tags) {
            if (!e.tags.includes(A.SymbolTag.Deprecated)) {
              e.tags = e.tags.concat(A.SymbolTag.Deprecated);
            }
          } else {
            e.tags = [A.SymbolTag.Deprecated];
          }
        }
      }
      function V(e) {
        const t = {
          title: e.title,
          command: e.command
        };
        if (e.tooltip) {
          t.tooltip = e.tooltip;
        }
        if (e.arguments) {
          t.arguments = e.arguments;
        }
        return t;
      }
      const X = new Map();
      function Z(e) {
        if (e == null) {
          return;
        }
        let t = X.get(e);
        if (t) {
          return t;
        }
        const n = e.split('.');
        t = A.CodeActionKind.Empty;
        for (const e of n) {
          t = t.append(e);
        }
        return t;
      }
      async function ee(e, t) {
        if (e == null) {
          return;
        }
        const n = new f.default(e.title, e.data);
        if (e.kind !== undefined) {
          n.kind = Z(e.kind);
        }
        if (e.diagnostics !== undefined) {
          n.diagnostics = function (e) {
            const t = new Array(e.length);
            for (let n = 0; n < e.length; n++) {
              t[n] = a(e[n]);
            }
            return t;
          }(e.diagnostics);
        }
        if (e.edit !== undefined) {
          n.edit = await ne(e.edit, t);
        }
        if (e.command !== undefined) {
          n.command = V(e.command);
        }
        if (e.isPreferred !== undefined) {
          n.isPreferred = e.isPreferred;
        }
        if (e.disabled !== undefined) {
          n.disabled = {
            reason: e.disabled.reason
          };
        }
        return n;
      }
      function te(e) {
        if (!e) {
          return;
        }
        const t = new d.default(B(e.range));
        if (e.command) {
          t.command = V(e.command);
        }
        if (e.data !== undefined && e.data !== null) {
          t.data = e.data;
        }
        return t;
      }
      async function ne(e, t) {
        if (!e) {
          return;
        }
        const n = new Map();
        if (e.changeAnnotations !== undefined) {
          const r = e.changeAnnotations;
          await l.forEach(Object.keys(r), e => {
            const t = function (e) {
              if (e === undefined) {
                return;
              }
              return {
                label: e.label,
                needsConfirmation: !!e.needsConfirmation,
                description: e.description
              };
            }(r[e]);
            n.set(e, t);
          }, t);
        }
        const r = e => e === undefined ? undefined : n.get(e);
        const s = new A.WorkspaceEdit();
        if (e.documentChanges) {
          const n = e.documentChanges;
          await l.forEach(n, e => {
            if (c.CreateFile.is(e)) {
              s.createFile(o(e.uri), e.options, r(e.annotationId));
            } else {
              if (c.RenameFile.is(e)) {
                s.renameFile(o(e.oldUri), o(e.newUri), e.options, r(e.annotationId));
              } else {
                if (c.DeleteFile.is(e)) {
                  s.deleteFile(o(e.uri), e.options, r(e.annotationId));
                } else {
                  if (!c.TextDocumentEdit.is(e)) {
                    throw new Error(`Unknown workspace edit change received:\n${JSON.stringify(e, undefined, 4)}`);
                  }
                  {
                    const t = o(e.textDocument.uri);
                    const n = [];
                    for (const t of e.edits) {
                      if (c.AnnotatedTextEdit.is(t)) {
                        n.push([new A.TextEdit(B(t.range), t.newText), r(t.annotationId)]);
                      } else {
                        if (c.SnippetTextEdit.is(t)) {
                          n.push([new A.SnippetTextEdit(B(t.range), new A.SnippetString(t.snippet.value)), r(t.annotationId)]);
                        } else {
                          n.push([new A.TextEdit(B(t.range), t.newText), undefined]);
                        }
                      }
                    }
                    s.set(t, n);
                  }
                }
              }
            }
          }, t);
        } else {
          if (e.changes) {
            const n = e.changes;
            await l.forEach(Object.keys(n), e => {
              s.set(o(e), F(n[e]));
            }, t);
          }
        }
        return s;
      }
      function re(e) {
        const t = B(e.range);
        const n = e.target ? s(e.target) : undefined;
        const r = new h.default(t, n);
        if (e.tooltip !== undefined) {
          r.tooltip = e.tooltip;
        }
        if (e.data !== undefined && e.data !== null) {
          r.data = e.data;
        }
        return r;
      }
      function oe(e) {
        return new A.Color(e.red, e.green, e.blue, e.alpha);
      }
      function ie(e) {
        return new A.ColorInformation(B(e.range), oe(e.color));
      }
      function se(e) {
        const t = new A.ColorPresentation(e.label);
        t.additionalTextEdits = F(e.additionalTextEdits);
        if (e.textEdit) {
          t.textEdit = x(e.textEdit);
        }
        return t;
      }
      function ae(e) {
        if (e) {
          switch (e) {
            case c.FoldingRangeKind.Comment:
              return A.FoldingRangeKind.Comment;
            case c.FoldingRangeKind.Imports:
              return A.FoldingRangeKind.Imports;
            case c.FoldingRangeKind.Region:
              return A.FoldingRangeKind.Region;
          }
        }
      }
      function Ae(e) {
        return new A.FoldingRange(e.startLine, e.endLine, ae(e.kind));
      }
      function ce(e) {
        return new A.SelectionRange(B(e.range), e.parent ? ce(e.parent) : undefined);
      }
      function ue(e) {
        if (c.InlineValueText.is(e)) {
          return new A.InlineValueText(B(e.range), e.text);
        } else {
          if (c.InlineValueVariableLookup.is(e)) {
            return new A.InlineValueVariableLookup(B(e.range), e.variableName, e.caseSensitiveLookup);
          } else {
            return new A.InlineValueEvaluatableExpression(B(e.range), e.expression);
          }
        }
      }
      async function le(e, t) {
        const n = typeof e.label == 'string' ? e.label : await l.map(e.label, ge, t);
        const r = new y.default(b(e.position), n);
        if (e.kind !== undefined) {
          r.kind = e.kind;
        }
        if (e.textEdits !== undefined) {
          r.textEdits = await P(e.textEdits, t);
        }
        if (e.tooltip !== undefined) {
          r.tooltip = de(e.tooltip);
        }
        if (e.paddingLeft !== undefined) {
          r.paddingLeft = e.paddingLeft;
        }
        if (e.paddingRight !== undefined) {
          r.paddingRight = e.paddingRight;
        }
        if (e.data !== undefined) {
          r.data = e.data;
        }
        return r;
      }
      function ge(e) {
        const t = new A.InlayHintLabelPart(e.value);
        if (e.location !== undefined) {
          t.location = K(e.location);
        }
        if (e.tooltip !== undefined) {
          t.tooltip = de(e.tooltip);
        }
        if (e.command !== undefined) {
          t.command = V(e.command);
        }
        return t;
      }
      function de(e) {
        if (typeof e == 'string') {
          return e;
        } else {
          return T(e);
        }
      }
      function he(e) {
        if (e === null) {
          return;
        }
        const t = new m.default(Y(e.kind), e.name, e.detail || '', s(e.uri), B(e.range), B(e.selectionRange), e.data);
        if (e.tags !== undefined) {
          t.tags = J(e.tags);
        }
        return t;
      }
      async function fe(e, t) {
        return new A.CallHierarchyIncomingCall(he(e.from), await Q(e.fromRanges, t));
      }
      async function pe(e, t) {
        return new A.CallHierarchyOutgoingCall(he(e.to), await Q(e.fromRanges, t));
      }
      function Ce(e) {
        return new A.SemanticTokensEdit(e.start, e.deleteCount, e.data !== undefined ? new Uint32Array(e.data) : undefined);
      }
      function me(e) {
        if (e === null) {
          return;
        }
        const t = new I.default(Y(e.kind), e.name, e.detail || '', s(e.uri), B(e.range), B(e.selectionRange), e.data);
        if (e.tags !== undefined) {
          t.tags = J(e.tags);
        }
        return t;
      }
      function Ie(e) {
        if (u.string(e)) {
          return e;
        }
        if (c.RelativePattern.is(e)) {
          if (c.URI.is(e.baseUri)) {
            return new A.RelativePattern(s(e.baseUri), e.pattern);
          }
          if (c.WorkspaceFolder.is(e.baseUri)) {
            const t = A.workspace.getWorkspaceFolder(s(e.baseUri.uri));
            if (t !== undefined) {
              return new A.RelativePattern(t, e.pattern);
            } else {
              return undefined;
            }
          }
        }
      }
      function Ee(e) {
        let t;
        let n;
        t = typeof e.insertText == 'string' ? e.insertText : new A.SnippetString(e.insertText.value);
        if (e.command) {
          n = V(e.command);
        }
        const r = new A.InlineCompletionItem(t, B(e.range), n);
        if (e.filterText) {
          r.filterText = e.filterText;
        }
        return r;
      }
      X.set(c.CodeActionKind.Empty, A.CodeActionKind.Empty);
      X.set(c.CodeActionKind.QuickFix, A.CodeActionKind.QuickFix);
      X.set(c.CodeActionKind.Refactor, A.CodeActionKind.Refactor);
      X.set(c.CodeActionKind.RefactorExtract, A.CodeActionKind.RefactorExtract);
      X.set(c.CodeActionKind.RefactorInline, A.CodeActionKind.RefactorInline);
      X.set(c.CodeActionKind.RefactorRewrite, A.CodeActionKind.RefactorRewrite);
      X.set(c.CodeActionKind.Source, A.CodeActionKind.Source);
      X.set(c.CodeActionKind.SourceOrganizeImports, A.CodeActionKind.SourceOrganizeImports);
      return {
        asUri: s,
        asDocumentSelector: function (e) {
          const t = [];
          for (const n of e) {
            if (typeof n == 'string') {
              t.push(n);
            } else {
              if (w.NotebookCellTextDocumentFilter.is(n)) {
                if (typeof n.notebook == 'string') {
                  t.push({
                    notebookType: n.notebook,
                    language: n.language
                  });
                } else {
                  const e = n.notebook.notebookType ?? '*';
                  t.push({
                    notebookType: e,
                    scheme: n.notebook.scheme,
                    pattern: Ie(n.notebook.pattern),
                    language: n.language
                  });
                }
              } else {
                if (w.TextDocumentFilter.is(n)) {
                  t.push({
                    language: n.language,
                    scheme: n.scheme,
                    pattern: Ie(n.pattern)
                  });
                }
              }
            }
          }
          return t;
        },
        asDiagnostics: async function (e, t) {
          return l.map(e, a, t);
        },
        asDiagnostic: a,
        asRange: B,
        asRanges: Q,
        asPosition: b,
        asDiagnosticSeverity: D,
        asDiagnosticTag: v,
        asHover: function (e) {
          if (e) {
            return new A.Hover(function (e) {
              if (u.string(e)) {
                return T(e);
              }
              if (_.is(e)) {
                return T().appendCodeblock(e.value, e.language);
              }
              if (Array.isArray(e)) {
                const t = [];
                for (const n of e) {
                  const e = T();
                  if (_.is(n)) {
                    e.appendCodeblock(n.value, n.language);
                  } else {
                    e.appendMarkdown(n);
                  }
                  t.push(e);
                }
                return t;
              }
              return T(e);
            }(e.contents), B(e.range));
          }
        },
        asCompletionResult: async function (e, t, n) {
          if (!e) {
            return;
          }
          if (Array.isArray(e)) {
            return l.map(e, e => k(e, t), n);
          }
          const r = e;
          const {
            defaultRange: o,
            commitCharacters: s
          } = function (e, t) {
            const n = e.itemDefaults?.editRange;
            const r = e.itemDefaults?.commitCharacters ?? t;
            if (c.Range.is(n)) {
              return {
                defaultRange: B(n),
                commitCharacters: r
              };
            } else {
              if (n !== undefined) {
                return {
                  defaultRange: {
                    inserting: B(n.insert),
                    replacing: B(n.replace)
                  },
                  commitCharacters: r
                };
              } else {
                return {
                  defaultRange: undefined,
                  commitCharacters: r
                };
              }
            }
          }(r, t);
          const a = await l.map(r.items, e => k(e, s, o, r.itemDefaults?.insertTextMode, r.itemDefaults?.insertTextFormat, r.itemDefaults?.data), n);
          return new A.CompletionList(a, r.isIncomplete);
        },
        asCompletionItem: k,
        asTextEdit: x,
        asTextEdits: P,
        asSignatureHelp: async function (e, t) {
          if (!e) {
            return;
          }
          const n = new A.SignatureHelp();
          if (u.number(e.activeSignature)) {
            n.activeSignature = e.activeSignature;
          } else {
            n.activeSignature = 0;
          }
          if (u.number(e.activeParameter)) {
            n.activeParameter = e.activeParameter;
          } else {
            if (e.activeParameter === null) {
              n.activeParameter = -1;
            } else {
              n.activeParameter = 0;
            }
          }
          if (e.signatures) {
            n.signatures = await M(e.signatures, t);
          }
          return n;
        },
        asSignatureInformations: M,
        asSignatureInformation: O,
        asParameterInformations: N,
        asParameterInformation: L,
        asDeclarationResult: async function (e, t) {
          if (e) {
            return j(e, t);
          }
        },
        asDefinitionResult: async function (e, t) {
          if (e) {
            return j(e, t);
          }
        },
        asLocation: K,
        asReferences: async function (e, t) {
          if (e) {
            return l.map(e, K, t);
          }
        },
        asDocumentHighlights: async function (e, t) {
          if (e) {
            return l.map(e, q, t);
          }
        },
        asDocumentHighlight: q,
        asDocumentHighlightKind: G,
        asSymbolKind: Y,
        asSymbolTag: H,
        asSymbolTags: J,
        asSymbolInformations: async function (e, t) {
          if (e) {
            return l.map(e, z, t);
          }
        },
        asSymbolInformation: z,
        asDocumentSymbols: async function (e, t) {
          if (e != null) {
            return l.map(e, $, t);
          }
        },
        asDocumentSymbol: $,
        asCommand: V,
        asCommands: async function (e, t) {
          if (e) {
            return l.map(e, V, t);
          }
        },
        asCodeAction: ee,
        asCodeActionKind: Z,
        asCodeActionKinds: function (e) {
          if (e != null) {
            return e.map(e => Z(e));
          }
        },
        asCodeActionDocumentations: function (e) {
          if (e != null) {
            return e.map(e => ({
              kind: Z(e.kind),
              command: V(e.command)
            }));
          }
        },
        asCodeActionResult: function (e, t) {
          return l.mapAsync(e, async e => c.Command.is(e) ? V(e) : ee(e, t), t);
        },
        asCodeLens: te,
        asCodeLenses: async function (e, t) {
          if (e) {
            return l.map(e, te, t);
          }
        },
        asWorkspaceEdit: ne,
        asDocumentLink: re,
        asDocumentLinks: async function (e, t) {
          if (e) {
            return l.map(e, re, t);
          }
        },
        asFoldingRangeKind: ae,
        asFoldingRange: Ae,
        asFoldingRanges: async function (e, t) {
          if (e) {
            return l.map(e, Ae, t);
          }
        },
        asColor: oe,
        asColorInformation: ie,
        asColorInformations: async function (e, t) {
          if (e) {
            return l.map(e, ie, t);
          }
        },
        asColorPresentation: se,
        asColorPresentations: async function (e, t) {
          if (e) {
            return l.map(e, se, t);
          }
        },
        asSelectionRange: ce,
        asSelectionRanges: async function (e, t) {
          if (Array.isArray(e)) {
            return l.map(e, ce, t);
          } else {
            return [];
          }
        },
        asInlineValue: ue,
        asInlineValues: async function (e, t) {
          if (Array.isArray(e)) {
            return l.map(e, ue, t);
          } else {
            return [];
          }
        },
        asInlayHint: le,
        asInlayHints: async function (e, t) {
          if (Array.isArray(e)) {
            return l.mapAsync(e, le, t);
          }
        },
        asSemanticTokensLegend: function (e) {
          return e;
        },
        asSemanticTokens: async function (e, t) {
          if (e != null) {
            return new A.SemanticTokens(new Uint32Array(e.data), e.resultId);
          }
        },
        asSemanticTokensEdit: Ce,
        asSemanticTokensEdits: async function (e, t) {
          if (e != null) {
            return new A.SemanticTokensEdits(e.edits.map(Ce), e.resultId);
          }
        },
        asCallHierarchyItem: he,
        asCallHierarchyItems: async function (e, t) {
          if (e !== null) {
            return l.map(e, he, t);
          }
        },
        asCallHierarchyIncomingCall: fe,
        asCallHierarchyIncomingCalls: async function (e, t) {
          if (e !== null) {
            return l.mapAsync(e, fe, t);
          }
        },
        asCallHierarchyOutgoingCall: pe,
        asCallHierarchyOutgoingCalls: async function (e, t) {
          if (e !== null) {
            return l.mapAsync(e, pe, t);
          }
        },
        asLinkedEditingRanges: async function (e, t) {
          if (e != null) {
            return new A.LinkedEditingRanges(await Q(e.ranges, t), function (e) {
              if (e == null) {
                return;
              }
              return new RegExp(e);
            }(e.wordPattern));
          }
        },
        asTypeHierarchyItem: me,
        asTypeHierarchyItems: async function (e, t) {
          if (e !== null) {
            return l.map(e, me, t);
          }
        },
        asGlobPattern: Ie,
        asInlineCompletionResult: async function (e, t) {
          if (!e) {
            return;
          }
          if (Array.isArray(e)) {
            return l.map(e, e => Ee(e), t);
          }
          const n = e;
          const r = await l.map(n.items, e => Ee(e), t);
          return new A.InlineCompletionList(r);
        },
        asInlineCompletionItem: Ee
      };
    };
  },
  37894: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProtocolDiagnostic = exports.DiagnosticCode = undefined;
    const a = __importStar(require(91398));
    const A = __importStar(require(58319));
    var c;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t != null && (A.number(t.value) || A.string(t.value)) && A.string(t.target);
      };
    })(c || (exports.DiagnosticCode = c = {}));
    class u extends a.Diagnostic {
      data;
      hasDiagnosticCode;
      constructor(e, t, n, r) {
        super(e, t, n);
        this.data = r;
        this.hasDiagnosticCode = false;
      }
    }
    exports.ProtocolDiagnostic = u;
  },
  97424: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.DocumentLink {
      data;
      constructor(e, t) {
        super(e, t);
      }
    }
    exports.default = A;
  },
  7511: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.InlayHint {
      data;
      constructor(e, t, n) {
        super(e, t, n);
      }
    }
    exports.default = A;
  },
  67321: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.TypeHierarchyItem {
      data;
      constructor(e, t, n, r, o, s, a) {
        super(e, t, n, r, o, s);
        if (a !== undefined) {
          this.data = a;
        }
      }
    }
    exports.default = A;
  },
  56144: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    const a = __importStar(require(91398));
    class A extends a.SymbolInformation {
      data;
      hasRange;
      constructor(e, t, n, r, o) {
        const s = !(r instanceof a.Uri);
        super(e, t, n, s ? r : new a.Location(r, new a.Range(0, 0, 0, 0)));
        this.hasRange = s;
        if (o !== undefined) {
          this.data = o;
        }
      }
    }
    exports.default = A;
  },
  90420: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ReferencesFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.ReferencesRequest.type);
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'references').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.referencesProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideReferences: (e, t, n, r) => {
            const o = this._client;
            const s = (e, t, n, r) => o.sendRequest(A.ReferencesRequest.type, o.code2ProtocolConverter.asReferenceParams(e, t, n), r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asReferences(e, r), e => o.handleFailedRequest(A.ReferencesRequest.type, r, e, null));
            const a = o.middleware;
            if (a.provideReferences) {
              return a.provideReferences(e, t, n, r, s);
            } else {
              return s(e, t, n, r);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return a.languages.registerReferenceProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.ReferencesFeature = l;
  },
  50875: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.RenameFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = __importStar(require(69032));
    const u = __importStar(require(58319));
    const l = require(14294);
    class g extends l.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.RenameRequest.type);
      }
      fillClientCapabilities(e) {
        const t = l.ensure(l.ensure(e, 'textDocument'), 'rename');
        t.dynamicRegistration = true;
        t.prepareSupport = true;
        t.prepareSupportDefaultBehavior = A.PrepareSupportDefaultBehavior.Identifier;
        t.honorsChangeAnnotations = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.renameProvider);
        if (n) {
          if (u.boolean(e.renameProvider)) {
            n.prepareProvider = false;
          }
          this.register({
            id: c.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideRenameEdits: (e, t, n, r) => {
            const o = this._client;
            const s = (e, t, n, r) => {
              const s = {
                textDocument: o.code2ProtocolConverter.asTextDocumentIdentifier(e),
                position: o.code2ProtocolConverter.asPosition(t),
                newName: n
              };
              return o.sendRequest(A.RenameRequest.type, s, r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asWorkspaceEdit(e, r), e => o.handleFailedRequest(A.RenameRequest.type, r, e, null, false));
            };
            const a = o.middleware;
            if (a.provideRenameEdits) {
              return a.provideRenameEdits(e, t, n, r, s);
            } else {
              return s(e, t, n, r);
            }
          },
          prepareRename: e.prepareProvider ? (e, t, n) => {
            const r = this._client;
            const o = (e, t, n) => {
              const o = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                position: r.code2ProtocolConverter.asPosition(t)
              };
              return r.sendRequest(A.PrepareRenameRequest.type, o, n).then(e => n.isCancellationRequested ? null : A.Range.is(e) ? r.protocol2CodeConverter.asRange(e) : this.isDefaultBehavior(e) ? e.defaultBehavior === true ? null : Promise.reject(new Error('The element can\'t be renamed.')) : e && A.Range.is(e.range) ? {
                range: r.protocol2CodeConverter.asRange(e.range),
                placeholder: e.placeholder
              } : Promise.reject(new Error('The element can\'t be renamed.')), e => {
                throw typeof e.message == 'string' ? new Error(e.message) : new Error('The element can\'t be renamed.');
              });
            };
            const s = r.middleware;
            if (s.prepareRename) {
              return s.prepareRename(e, t, n, o);
            } else {
              return o(e, t, n);
            }
          } : undefined
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return a.languages.registerRenameProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
      isDefaultBehavior(e) {
        const t = e;
        return t && u.boolean(t.defaultBehavior);
      }
    }
    exports.RenameFeature = g;
  },
  16258: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SelectionRangeFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.SelectionRangeRequest.type);
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'textDocument'), 'selectionRange').dynamicRegistration = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.selectionRangeProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideSelectionRanges: (e, t, n) => {
            const r = this._client;
            const s = async (e, t, n) => {
              const s = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                positions: r.code2ProtocolConverter.asPositionsSync(t, n)
              };
              return r.sendRequest(o.SelectionRangeRequest.type, s, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asSelectionRanges(e, n), e => r.handleFailedRequest(o.SelectionRangeRequest.type, n, e, null));
            };
            const a = r.middleware;
            if (a.provideSelectionRanges) {
              return a.provideSelectionRanges(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return r.languages.registerSelectionRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.SelectionRangeFeature = a;
  },
  67691: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SemanticTokensFeature = undefined;
    const a = __importStar(require(91398));
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(58319));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.SemanticTokensRegistrationType.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'semanticTokens');
        t.dynamicRegistration = true;
        t.tokenTypes = [A.SemanticTokenTypes.namespace, A.SemanticTokenTypes.type, A.SemanticTokenTypes.class, A.SemanticTokenTypes.enum, A.SemanticTokenTypes.interface, A.SemanticTokenTypes.struct, A.SemanticTokenTypes.typeParameter, A.SemanticTokenTypes.parameter, A.SemanticTokenTypes.variable, A.SemanticTokenTypes.property, A.SemanticTokenTypes.enumMember, A.SemanticTokenTypes.event, A.SemanticTokenTypes.function, A.SemanticTokenTypes.method, A.SemanticTokenTypes.macro, A.SemanticTokenTypes.keyword, A.SemanticTokenTypes.modifier, A.SemanticTokenTypes.comment, A.SemanticTokenTypes.string, A.SemanticTokenTypes.number, A.SemanticTokenTypes.regexp, A.SemanticTokenTypes.operator, A.SemanticTokenTypes.decorator, A.SemanticTokenTypes.label];
        t.tokenModifiers = [A.SemanticTokenModifiers.declaration, A.SemanticTokenModifiers.definition, A.SemanticTokenModifiers.readonly, A.SemanticTokenModifiers.static, A.SemanticTokenModifiers.deprecated, A.SemanticTokenModifiers.abstract, A.SemanticTokenModifiers.async, A.SemanticTokenModifiers.modification, A.SemanticTokenModifiers.documentation, A.SemanticTokenModifiers.defaultLibrary];
        t.formats = [A.TokenFormat.Relative];
        t.requests = {
          range: true,
          full: {
            delta: true
          }
        };
        t.multilineTokenSupport = false;
        t.overlappingTokenSupport = false;
        t.serverCancelSupport = true;
        t.augmentsSyntaxTokens = true;
        c.ensure(c.ensure(e, 'workspace'), 'semanticTokens').refreshSupport = true;
      }
      initialize(e, t) {
        this._client.onRequest(A.SemanticTokensRefreshRequest.type, async () => {
          for (const e of this.getAllProviders()) {
            e.onDidChangeSemanticTokensEmitter.fire();
          }
        });
        const [n, r] = this.getRegistration(t, e.semanticTokensProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = u.boolean(e.full) ? e.full : e.full !== undefined;
        const r = e.full !== undefined && typeof e.full != 'boolean' && e.full.delta === true;
        const o = new a.EventEmitter();
        const s = n ? {
          onDidChangeSemanticTokens: o.event,
          provideDocumentSemanticTokens: (e, t) => {
            const n = this._client;
            const r = n.middleware;
            const o = (e, t) => {
              const r = {
                textDocument: n.code2ProtocolConverter.asTextDocumentIdentifier(e)
              };
              return n.sendRequest(A.SemanticTokensRequest.type, r, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asSemanticTokens(e, t), e => n.handleFailedRequest(A.SemanticTokensRequest.type, t, e, null));
            };
            if (r.provideDocumentSemanticTokens) {
              return r.provideDocumentSemanticTokens(e, t, o);
            } else {
              return o(e, t);
            }
          },
          provideDocumentSemanticTokensEdits: r ? (e, t, n) => {
            const r = this._client;
            const o = r.middleware;
            const s = (e, t, n) => {
              const o = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                previousResultId: t
              };
              return r.sendRequest(A.SemanticTokensDeltaRequest.type, o, n).then(async e => n.isCancellationRequested ? null : A.SemanticTokens.is(e) ? await r.protocol2CodeConverter.asSemanticTokens(e, n) : await r.protocol2CodeConverter.asSemanticTokensEdits(e, n), e => r.handleFailedRequest(A.SemanticTokensDeltaRequest.type, n, e, null));
            };
            if (o.provideDocumentSemanticTokensEdits) {
              return o.provideDocumentSemanticTokensEdits(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          } : undefined
        } : undefined;
        const c = e.range === true ? {
          provideDocumentRangeSemanticTokens: (e, t, n) => {
            const r = this._client;
            const o = r.middleware;
            const s = (e, t, n) => {
              const o = {
                textDocument: r.code2ProtocolConverter.asTextDocumentIdentifier(e),
                range: r.code2ProtocolConverter.asRange(t)
              };
              return r.sendRequest(A.SemanticTokensRangeRequest.type, o, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asSemanticTokens(e, n), e => r.handleFailedRequest(A.SemanticTokensRangeRequest.type, n, e, null));
            };
            if (o.provideDocumentRangeSemanticTokens) {
              return o.provideDocumentRangeSemanticTokens(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        } : undefined;
        const l = [];
        const g = this._client;
        const d = g.protocol2CodeConverter.asSemanticTokensLegend(e.legend);
        const h = g.protocol2CodeConverter.asDocumentSelector(t);
        if (s !== undefined) {
          l.push(a.languages.registerDocumentSemanticTokensProvider(h, s, d));
        }
        if (c !== undefined) {
          l.push(a.languages.registerDocumentRangeSemanticTokensProvider(h, c, d));
        }
        return [new a.Disposable(() => l.forEach(e => e.dispose())), {
          range: c,
          full: s,
          onDidChangeSemanticTokensEmitter: o
        }];
      }
    }
    exports.SemanticTokensFeature = l;
  },
  21400: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SignatureHelpFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, A.SignatureHelpRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'textDocument'), 'signatureHelp');
        t.dynamicRegistration = true;
        t.signatureInformation = {
          documentationFormat: [A.MarkupKind.Markdown, A.MarkupKind.PlainText]
        };
        t.signatureInformation.parameterInformation = {
          labelOffsetSupport: true
        };
        t.signatureInformation.activeParameterSupport = true;
        t.signatureInformation.noActiveParameterSupport = true;
        t.contextSupport = true;
      }
      initialize(e, t) {
        const n = this.getRegistrationOptions(t, e.signatureHelpProvider);
        if (n) {
          this.register({
            id: u.generateUuid(),
            registerOptions: n
          });
        }
      }
      registerLanguageProvider(e) {
        const t = {
          provideSignatureHelp: (e, t, n, r) => {
            const o = this._client;
            const s = (e, t, n, r) => o.sendRequest(A.SignatureHelpRequest.type, o.code2ProtocolConverter.asSignatureHelpParams(e, t, n), r).then(e => r.isCancellationRequested ? null : o.protocol2CodeConverter.asSignatureHelp(e, r), e => o.handleFailedRequest(A.SignatureHelpRequest.type, r, e, null));
            const a = o.middleware;
            if (a.provideSignatureHelp) {
              return a.provideSignatureHelp(e, t, r, n, s);
            } else {
              return s(e, t, r, n);
            }
          }
        };
        return [this.registerProvider(e, t), t];
      }
      registerProvider(e, t) {
        const n = this._client.protocol2CodeConverter.asDocumentSelector(e.documentSelector);
        if (e.retriggerCharacters === undefined) {
          const r = e.triggerCharacters || [];
          return a.languages.registerSignatureHelpProvider(n, t, ...r);
        }
        {
          const r = {
            triggerCharacters: e.triggerCharacters || [],
            retriggerCharacters: e.retriggerCharacters || []
          };
          return a.languages.registerSignatureHelpProvider(n, t, r);
        }
      }
    }
    exports.SignatureHelpFeature = l;
  },
  7702: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocumentContentFeature = undefined;
    const a = __importStar(require(91398));
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    exports.TextDocumentContentFeature = class {
      _client;
      _registrations = new Map();
      constructor(e) {
        this._client = e;
      }
      getState() {
        const e = this._registrations.size > 0;
        return {
          kind: 'workspace',
          id: A.TextDocumentContentRequest.method,
          registrations: e
        };
      }
      get registrationType() {
        return A.TextDocumentContentRequest.type;
      }
      getProviders() {
        const e = [];
        for (const t of this._registrations.values()) {
          e.push(...t.providers);
        }
        return e;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'workspace'), 'textDocumentContent').dynamicRegistration = true;
      }
      initialize(e) {
        const t = this._client;
        t.onRequest(A.TextDocumentContentRefreshRequest.type, async e => {
          const n = t.protocol2CodeConverter.asUri(e.uri);
          for (const e of this._registrations.values()) {
            for (const t of e.providers) {
              if (t.scheme !== n.scheme) {
                t.onDidChangeEmitter.fire(n);
              }
            }
          }
        });
        if (!e?.workspace?.textDocumentContent) {
          return;
        }
        const n = e.workspace.textDocumentContent;
        const r = A.StaticRegistrationOptions.hasId(n) ? n.id : u.generateUuid();
        this.register({
          id: r,
          registerOptions: n
        });
      }
      register(e) {
        const t = [];
        const n = [];
        for (const r of e.registerOptions.schemes) {
          const [e, o] = this.registerTextDocumentContentProvider(r);
          t.push(o);
          n.push(e);
        }
        this._registrations.set(e.id, {
          disposable: a.Disposable.from(...n),
          providers: t
        });
      }
      registerTextDocumentContentProvider(e) {
        const t = new a.EventEmitter();
        const n = {
          onDidChange: t.event,
          provideTextDocumentContent: (e, t) => {
            const n = this._client;
            const r = (e, t) => {
              const r = {
                uri: n.code2ProtocolConverter.asUri(e)
              };
              return n.sendRequest(A.TextDocumentContentRequest.type, r, t).then(e => t.isCancellationRequested ? null : e.text, e => n.handleFailedRequest(A.TextDocumentContentRequest.type, t, e, null));
            };
            const o = n.middleware;
            if (o.provideTextDocumentContent) {
              return o.provideTextDocumentContent(e, t, r);
            } else {
              return r(e, t);
            }
          }
        };
        return [a.workspace.registerTextDocumentContentProvider(e, n), {
          scheme: e,
          onDidChangeEmitter: t,
          provider: n
        }];
      }
      unregister(e) {
        const t = this._registrations.get(e);
        if (t !== undefined) {
          this._registrations.delete(e);
          t.disposable.dispose();
        }
      }
      clear() {
        this._registrations.forEach(e => {
          e.disposable.dispose();
        });
        this._registrations.clear();
      }
    };
  },
  31596: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DidSaveTextDocumentFeature = exports.WillSaveWaitUntilFeature = exports.WillSaveFeature = exports.DidChangeTextDocumentFeature = exports.DidCloseTextDocumentFeature = exports.DidOpenTextDocumentFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = __importStar(require(69032));
    class l extends c.TextDocumentEventFeature {
      _syncedDocuments;
      _pendingOpenNotifications;
      _delayOpen;
      _pendingOpenListeners;
      constructor(e, t) {
        super(e, a.workspace.onDidOpenTextDocument, A.DidOpenTextDocumentNotification.type, () => e.middleware.didOpen, t => e.code2ProtocolConverter.asOpenTextDocumentParams(t), e => e, c.TextDocumentEventFeature.textDocumentFilter);
        this._syncedDocuments = t;
        this._pendingOpenNotifications = new Map();
        this._delayOpen = e.clientOptions.textSynchronization?.delayOpenNotifications ?? false;
      }
      async callback(e) {
        if (!this._delayOpen) {
          return super.callback(e);
        }
        if (!this.matches(e)) {
          return;
        }
        if (this._client.tabsModel.isVisible(e)) {
          return super.callback(e);
        }
        this._pendingOpenNotifications.set(e.uri.toString(), e);
      }
      get openDocuments() {
        return this._syncedDocuments.values();
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.openClose) {
          this.register({
            id: u.generateUuid(),
            registerOptions: {
              documentSelector: t
            }
          });
        }
      }
      get registrationType() {
        return A.DidOpenTextDocumentNotification.type;
      }
      register(e) {
        super.register(e);
        if (!e.registerOptions.documentSelector) {
          return;
        }
        const t = this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector);
        a.workspace.textDocuments.forEach(e => {
          const n = e.uri.toString();
          if (!this._syncedDocuments.has(n) && a.languages.match(t, e) > 0 && !this._client.hasDedicatedTextSynchronizationFeature(e)) {
            if (this._client.tabsModel.isVisible(e)) {
              const t = this._client.middleware;
              const r = e => this._client.sendNotification(this._type, this._createParams(e));
              (t.didOpen ? t.didOpen(e, r) : r(e)).catch(e => {
                this._client.error(`Sending document notification ${this._type.method} failed`, e);
              });
              this._syncedDocuments.set(n, e);
            } else {
              this._pendingOpenNotifications.set(n, e);
            }
          }
        });
        if (this._delayOpen && this._pendingOpenListeners === undefined) {
          this._pendingOpenListeners = [];
          const e = this._client.tabsModel;
          this._pendingOpenListeners.push(e.onClose(e => {
            for (const t of e) {
              this._pendingOpenNotifications.delete(t.toString());
            }
          }));
          this._pendingOpenListeners.push(e.onOpen(e => {
            for (const t of e) {
              const e = this._pendingOpenNotifications.get(t.toString());
              if (e !== undefined) {
                super.callback(e).catch(e => {
                  this._client.error(`Sending document notification ${this._type.method} failed`, e);
                });
                this._pendingOpenNotifications.delete(t.toString());
              }
            }
          }));
          this._pendingOpenListeners.push(a.workspace.onDidCloseTextDocument(e => {
            this._pendingOpenNotifications.delete(e.uri.toString());
          }));
        }
      }
      async sendPendingOpenNotifications(e) {
        const t = Array.from(this._pendingOpenNotifications.values());
        this._pendingOpenNotifications.clear();
        for (const n of t) {
          if (e === undefined || n.uri.toString() !== e) {
            await super.callback(n);
          }
        }
      }
      getTextDocument(e) {
        return e;
      }
      notificationSent(e, t, n) {
        this._syncedDocuments.set(e.uri.toString(), e);
        super.notificationSent(e, t, n);
      }
      clear() {
        this._pendingOpenNotifications.clear();
        if (this._pendingOpenListeners !== undefined) {
          for (const e of this._pendingOpenListeners) {
            e.dispose();
          }
          this._pendingOpenListeners = undefined;
        }
        super.clear();
      }
    }
    exports.DidOpenTextDocumentFeature = l;
    class g extends c.TextDocumentEventFeature {
      _syncedDocuments;
      _pendingTextDocumentChanges;
      constructor(e, t, n) {
        super(e, a.workspace.onDidCloseTextDocument, A.DidCloseTextDocumentNotification.type, () => e.middleware.didClose, t => e.code2ProtocolConverter.asCloseTextDocumentParams(t), e => e, c.TextDocumentEventFeature.textDocumentFilter);
        this._syncedDocuments = t;
        this._pendingTextDocumentChanges = n;
      }
      get registrationType() {
        return A.DidCloseTextDocumentNotification.type;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.openClose) {
          this.register({
            id: u.generateUuid(),
            registerOptions: {
              documentSelector: t
            }
          });
        }
      }
      async callback(e) {
        await super.callback(e);
        this._pendingTextDocumentChanges.delete(e.uri.toString());
      }
      getTextDocument(e) {
        return e;
      }
      notificationSent(e, t, n) {
        this._syncedDocuments.delete(e.uri.toString());
        super.notificationSent(e, t, n);
      }
      unregister(e) {
        const t = this._selectors.get(e);
        if (t === undefined) {
          return;
        }
        super.unregister(e);
        const n = this._selectors.values();
        this._syncedDocuments.forEach(e => {
          if (a.languages.match(t, e) > 0 && !this._selectorFilter(n, e) && !this._client.hasDedicatedTextSynchronizationFeature(e)) {
            const t = this._client.middleware;
            const n = e => this._client.sendNotification(this._type, this._createParams(e));
            this._syncedDocuments.delete(e.uri.toString());
            (t.didClose ? t.didClose(e, n) : n(e)).catch(e => {
              this._client.error(`Sending document notification ${this._type.method} failed`, e);
            });
          }
        });
      }
    }
    exports.DidCloseTextDocumentFeature = g;
    class d extends c.DynamicDocumentFeature {
      _listener;
      _changeData;
      _onNotificationSent;
      _onPendingChangeAdded;
      _pendingTextDocumentChanges;
      _syncKind;
      constructor(e, t) {
        super(e);
        this._changeData = new Map();
        this._onNotificationSent = new a.EventEmitter();
        this._onPendingChangeAdded = new a.EventEmitter();
        this._pendingTextDocumentChanges = t;
        this._syncKind = A.TextDocumentSyncKind.None;
      }
      get onNotificationSent() {
        return this._onNotificationSent.event;
      }
      get onPendingChangeAdded() {
        return this._onPendingChangeAdded.event;
      }
      get syncKind() {
        return this._syncKind;
      }
      get registrationType() {
        return A.DidChangeTextDocumentNotification.type;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').dynamicRegistration = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.change !== undefined && n.change !== A.TextDocumentSyncKind.None) {
          this.register({
            id: u.generateUuid(),
            registerOptions: Object.assign({}, {
              documentSelector: t
            }, {
              syncKind: n.change
            })
          });
        }
      }
      register(e) {
        if (e.registerOptions.documentSelector) {
          if (!this._listener) {
            this._listener = a.workspace.onDidChangeTextDocument(this.callback, this);
          }
          this._changeData.set(e.id, {
            syncKind: e.registerOptions.syncKind,
            documentSelector: this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector)
          });
          this.updateSyncKind(e.registerOptions.syncKind);
        }
      }
      *getDocumentSelectors() {
        for (const e of this._changeData.values()) {
          yield e.documentSelector;
        }
      }
      async callback(e) {
        if (e.contentChanges.length === 0) {
          return;
        }
        const t = e.document.uri;
        const n = e.document.version;
        const r = [];
        for (const o of this._changeData.values()) {
          if (a.languages.match(o.documentSelector, e.document) > 0 && !this._client.hasDedicatedTextSynchronizationFeature(e.document)) {
            const s = this._client.middleware;
            if (o.syncKind === A.TextDocumentSyncKind.Incremental) {
              const o = async e => {
                const r = this._client.code2ProtocolConverter.asChangeTextDocumentParams(e, t, n);
                await this._client.sendNotification(A.DidChangeTextDocumentNotification.type, r);
                this.notificationSent(e.document, A.DidChangeTextDocumentNotification.type, r);
              };
              r.push(s.didChange ? s.didChange(e, e => o(e)) : o(e));
            } else {
              if (o.syncKind === A.TextDocumentSyncKind.Full) {
                const t = async e => {
                  const t = e.document.uri.toString();
                  this._pendingTextDocumentChanges.set(t, e.document);
                  this._onPendingChangeAdded.fire();
                };
                r.push(s.didChange ? s.didChange(e, e => t(e)) : t(e));
              }
            }
          }
        }
        return Promise.all(r).then(undefined, e => {
          this._client.error(`Sending document notification ${A.DidChangeTextDocumentNotification.type.method} failed`, e);
          throw e;
        });
      }
      notificationSent(e, t, n) {
        this._onNotificationSent.fire({
          textDocument: e,
          type: t,
          params: n
        });
      }
      unregister(e) {
        this._changeData.delete(e);
        if (this._changeData.size === 0) {
          if (this._listener) {
            this._listener.dispose();
            this._listener = undefined;
          }
          this._syncKind = A.TextDocumentSyncKind.None;
        } else {
          this._syncKind = A.TextDocumentSyncKind.None;
          for (const e of this._changeData.values()) {
            this.updateSyncKind(e.syncKind);
            if (this._syncKind === A.TextDocumentSyncKind.Full) {
              break;
            }
          }
        }
      }
      clear() {
        this._pendingTextDocumentChanges.clear();
        this._changeData.clear();
        this._syncKind = A.TextDocumentSyncKind.None;
        if (this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      getPendingDocumentChanges(e) {
        if (this._pendingTextDocumentChanges.size === 0) {
          return [];
        }
        let t;
        if (e.size === 0) {
          t = Array.from(this._pendingTextDocumentChanges.values());
          this._pendingTextDocumentChanges.clear();
        } else {
          t = [];
          for (const n of this._pendingTextDocumentChanges) {
            if (!e.has(n[0])) {
              t.push(n[1]);
              this._pendingTextDocumentChanges.delete(n[0]);
            }
          }
        }
        return t;
      }
      getProvider(e) {
        for (const t of this._changeData.values()) {
          if (a.languages.match(t.documentSelector, e) > 0) {
            return {
              send: e => this.callback(e)
            };
          }
        }
      }
      updateSyncKind(e) {
        if (this._syncKind !== A.TextDocumentSyncKind.Full) {
          switch (e) {
            case A.TextDocumentSyncKind.Full:
              this._syncKind = e;
              break;
            case A.TextDocumentSyncKind.Incremental:
              if (this._syncKind === A.TextDocumentSyncKind.None) {
                this._syncKind = A.TextDocumentSyncKind.Incremental;
              }
          }
        }
      }
    }
    exports.DidChangeTextDocumentFeature = d;
    class h extends c.TextDocumentEventFeature {
      constructor(e) {
        super(e, a.workspace.onWillSaveTextDocument, A.WillSaveTextDocumentNotification.type, () => e.middleware.willSave, t => e.code2ProtocolConverter.asWillSaveTextDocumentParams(t), e => e.document, (e, t) => c.TextDocumentEventFeature.textDocumentFilter(e, t.document));
      }
      get registrationType() {
        return A.WillSaveTextDocumentNotification.type;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').willSave = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.willSave) {
          this.register({
            id: u.generateUuid(),
            registerOptions: {
              documentSelector: t
            }
          });
        }
      }
      getTextDocument(e) {
        return e.document;
      }
    }
    exports.WillSaveFeature = h;
    class f extends c.DynamicDocumentFeature {
      _listener;
      _selectors;
      constructor(e) {
        super(e);
        this._selectors = new Map();
      }
      getDocumentSelectors() {
        return this._selectors.values();
      }
      get registrationType() {
        return A.WillSaveTextDocumentWaitUntilRequest.type;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').willSaveWaitUntil = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.willSaveWaitUntil) {
          this.register({
            id: u.generateUuid(),
            registerOptions: {
              documentSelector: t
            }
          });
        }
      }
      register(e) {
        if (e.registerOptions.documentSelector) {
          if (!this._listener) {
            this._listener = a.workspace.onWillSaveTextDocument(this.callback, this);
          }
          this._selectors.set(e.id, this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector));
        }
      }
      callback(e) {
        if (c.TextDocumentEventFeature.textDocumentFilter(this._selectors.values(), e.document) && !this._client.hasDedicatedTextSynchronizationFeature(e.document)) {
          const t = this._client.middleware;
          const n = e => this._client.sendRequest(A.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(e)).then(async e => {
            const t = await this._client.protocol2CodeConverter.asTextEdits(e);
            if (t === undefined) {
              return [];
            } else {
              return t;
            }
          });
          e.waitUntil(t.willSaveWaitUntil ? t.willSaveWaitUntil(e, n) : n(e));
        }
      }
      unregister(e) {
        this._selectors.delete(e);
        if (this._selectors.size === 0 && this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
      clear() {
        this._selectors.clear();
        if (this._listener) {
          this._listener.dispose();
          this._listener = undefined;
        }
      }
    }
    exports.WillSaveWaitUntilFeature = f;
    class p extends c.TextDocumentEventFeature {
      _includeText;
      constructor(e) {
        super(e, a.workspace.onDidSaveTextDocument, A.DidSaveTextDocumentNotification.type, () => e.middleware.didSave, t => e.code2ProtocolConverter.asSaveTextDocumentParams(t, this._includeText), e => e, c.TextDocumentEventFeature.textDocumentFilter);
        this._includeText = false;
      }
      get registrationType() {
        return A.DidSaveTextDocumentNotification.type;
      }
      fillClientCapabilities(e) {
        c.ensure(c.ensure(e, 'textDocument'), 'synchronization').didSave = true;
      }
      initialize(e, t) {
        const n = e.resolvedTextDocumentSync;
        if (t && n && n.save) {
          const e = typeof n.save == 'boolean' ? {
            includeText: false
          } : {
            includeText: !!n.save.includeText
          };
          this.register({
            id: u.generateUuid(),
            registerOptions: Object.assign({}, {
              documentSelector: t
            }, e)
          });
        }
      }
      register(e) {
        this._includeText = !!e.registerOptions.includeText;
        super.register(e);
      }
      getTextDocument(e) {
        return e;
      }
    }
    exports.DidSaveTextDocumentFeature = p;
  },
  45432: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeDefinitionFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.TypeDefinitionRequest.type);
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'textDocument'), 'typeDefinition').dynamicRegistration = true;
        const t = s.ensure(s.ensure(e, 'textDocument'), 'typeDefinition');
        t.dynamicRegistration = true;
        t.linkSupport = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.typeDefinitionProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = e.documentSelector;
        const n = {
          provideTypeDefinition: (e, t, n) => {
            const r = this._client;
            const s = (e, t, n) => r.sendRequest(o.TypeDefinitionRequest.type, r.code2ProtocolConverter.asTextDocumentPositionParams(e, t), n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asDefinitionResult(e, n), e => r.handleFailedRequest(o.TypeDefinitionRequest.type, n, e, null));
            const a = r.middleware;
            if (a.provideTypeDefinition) {
              return a.provideTypeDefinition(e, t, n, s);
            } else {
              return s(e, t, n);
            }
          }
        };
        return [this.registerProvider(t, n), n];
      }
      registerProvider(e, t) {
        return r.languages.registerTypeDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(e), t);
      }
    }
    exports.TypeDefinitionFeature = a;
  },
  74622: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeHierarchyFeature = undefined;
    const r = require(91398);
    const o = require(98766);
    const s = require(14294);
    class a {
      client;
      middleware;
      constructor(e) {
        this.client = e;
        this.middleware = e.middleware;
      }
      prepareTypeHierarchy(e, t, n) {
        const r = this.client;
        const s = this.middleware;
        const a = (e, t, n) => {
          const s = r.code2ProtocolConverter.asTextDocumentPositionParams(e, t);
          return r.sendRequest(o.TypeHierarchyPrepareRequest.type, s, n).then(e => n.isCancellationRequested ? null : r.protocol2CodeConverter.asTypeHierarchyItems(e, n), e => r.handleFailedRequest(o.TypeHierarchyPrepareRequest.type, n, e, null));
        };
        if (s.prepareTypeHierarchy) {
          return s.prepareTypeHierarchy(e, t, n, a);
        } else {
          return a(e, t, n);
        }
      }
      provideTypeHierarchySupertypes(e, t) {
        const n = this.client;
        const r = this.middleware;
        const s = (e, t) => {
          const r = {
            item: n.code2ProtocolConverter.asTypeHierarchyItem(e)
          };
          return n.sendRequest(o.TypeHierarchySupertypesRequest.type, r, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asTypeHierarchyItems(e, t), e => n.handleFailedRequest(o.TypeHierarchySupertypesRequest.type, t, e, null));
        };
        if (r.provideTypeHierarchySupertypes) {
          return r.provideTypeHierarchySupertypes(e, t, s);
        } else {
          return s(e, t);
        }
      }
      provideTypeHierarchySubtypes(e, t) {
        const n = this.client;
        const r = this.middleware;
        const s = (e, t) => {
          const r = {
            item: n.code2ProtocolConverter.asTypeHierarchyItem(e)
          };
          return n.sendRequest(o.TypeHierarchySubtypesRequest.type, r, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asTypeHierarchyItems(e, t), e => n.handleFailedRequest(o.TypeHierarchySubtypesRequest.type, t, e, null));
        };
        if (r.provideTypeHierarchySubtypes) {
          return r.provideTypeHierarchySubtypes(e, t, s);
        } else {
          return s(e, t);
        }
      }
    }
    class A extends s.TextDocumentLanguageFeature {
      constructor(e) {
        super(e, o.TypeHierarchyPrepareRequest.type);
      }
      fillClientCapabilities(e) {
        s.ensure(s.ensure(e, 'textDocument'), 'typeHierarchy').dynamicRegistration = true;
      }
      initialize(e, t) {
        const [n, r] = this.getRegistration(t, e.typeHierarchyProvider);
        if (n && r) {
          this.register({
            id: n,
            registerOptions: r
          });
        }
      }
      registerLanguageProvider(e) {
        const t = this._client;
        const n = new a(t);
        return [r.languages.registerTypeHierarchyProvider(t.protocol2CodeConverter.asDocumentSelector(e.documentSelector), n), n];
      }
    }
    exports.TypeHierarchyFeature = A;
  },
  80483: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.forEach = exports.mapAsync = exports.map = exports.clearTestMode = exports.setTestMode = exports.Semaphore = exports.Delayer = undefined;
    const r = require(98766);
    exports.Delayer = class {
      defaultDelay;
      timeout;
      completionPromise;
      onSuccess;
      task;
      constructor(e) {
        this.defaultDelay = e;
        this.timeout = undefined;
        this.completionPromise = undefined;
        this.onSuccess = undefined;
        this.task = undefined;
      }
      trigger(e, t = this.defaultDelay) {
        this.task = e;
        if (t >= 0) {
          this.cancelTimeout();
        }
        if (!this.completionPromise) {
          this.completionPromise = new Promise(e => {
            this.onSuccess = e;
          }).then(() => {
            this.completionPromise = undefined;
            this.onSuccess = undefined;
            const e = this.task();
            this.task = undefined;
            return e;
          });
        }
        if (t >= 0 || this.timeout === undefined) {
          this.timeout = r.RAL().timer.setTimeout(() => {
            this.timeout = undefined;
            this.onSuccess(undefined);
          }, t >= 0 ? t : this.defaultDelay);
        }
        return this.completionPromise;
      }
      forceDelivery() {
        if (!this.completionPromise) {
          return;
        }
        this.cancelTimeout();
        const e = this.task();
        this.completionPromise = undefined;
        this.onSuccess = undefined;
        this.task = undefined;
        return e;
      }
      isTriggered() {
        return this.timeout !== undefined;
      }
      cancel() {
        this.cancelTimeout();
        this.completionPromise = undefined;
      }
      cancelTimeout() {
        if (this.timeout !== undefined) {
          this.timeout.dispose();
          this.timeout = undefined;
        }
      }
    };
    exports.Semaphore = class {
      _capacity;
      _active;
      _waiting;
      constructor(e = 1) {
        if (e <= 0) {
          throw new Error('Capacity must be greater than 0');
        }
        this._capacity = e;
        this._active = 0;
        this._waiting = [];
      }
      lock(e) {
        return new Promise((t, n) => {
          this._waiting.push({
            thunk: e,
            resolve: t,
            reject: n
          });
          this.runNext();
        });
      }
      get active() {
        return this._active;
      }
      runNext() {
        if (this._waiting.length !== 0 && this._active !== this._capacity) {
          r.RAL().timer.setImmediate(() => this.doRunNext());
        }
      }
      doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
          return;
        }
        const e = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
          throw new Error('To many thunks active');
        }
        try {
          const t = e.thunk();
          if (t instanceof Promise) {
            t.then(t => {
              this._active--;
              e.resolve(t);
              this.runNext();
            }, t => {
              this._active--;
              e.reject(t);
              this.runNext();
            });
          } else {
            this._active--;
            e.resolve(t);
            this.runNext();
          }
        } catch (t) {
          this._active--;
          e.reject(t);
          this.runNext();
        }
      }
    };
    let o = false;
    exports.setTestMode = function () {
      o = true;
    };
    exports.clearTestMode = function () {
      o = false;
    };
    class s {
      yieldAfter;
      startTime;
      counter;
      total;
      counterInterval;
      constructor(e = 15) {
        this.yieldAfter = o === true ? Math.max(e, 2) : Math.max(e, 15);
        this.startTime = Date.now();
        this.counter = 0;
        this.total = 0;
        this.counterInterval = 1;
      }
      start() {
        this.counter = 0;
        this.total = 0;
        this.counterInterval = 1;
        this.startTime = Date.now();
      }
      shouldYield() {
        if (++this.counter >= this.counterInterval) {
          const e = Date.now() - this.startTime;
          const t = Math.max(0, this.yieldAfter - e);
          this.total += this.counter;
          this.counter = 0;
          if (e >= this.yieldAfter || t <= 1) {
            this.counterInterval = 1;
            this.total = 0;
            return true;
          }
          switch (e) {
            case 0:
            case 1:
              this.counterInterval = this.total * 2;
          }
        }
        return false;
      }
    }
    exports.map = async function (e, t, n, o) {
      if (e.length === 0) {
        return [];
      }
      const a = new Array(e.length);
      const A = new s(o?.yieldAfter);
      function c(n) {
        A.start();
        for (let r = n; r < e.length; r++) {
          a[r] = t(e[r]);
          if (A.shouldYield()) {
            if (o?.yieldCallback) {
              o.yieldCallback();
            }
            return r + 1;
          }
        }
        return -1;
      }
      let u = c(0);
      while (u !== -1 && (n === undefined || !n.isCancellationRequested)) {
        u = await new Promise(e => {
          r.RAL().timer.setImmediate(() => {
            e(c(u));
          });
        });
      }
      return a;
    };
    exports.mapAsync = async function (e, t, n, o) {
      if (e.length === 0) {
        return [];
      }
      const a = new Array(e.length);
      const A = new s(o?.yieldAfter);
      async function c(r) {
        A.start();
        for (let s = r; s < e.length; s++) {
          a[s] = await t(e[s], n);
          if (A.shouldYield()) {
            if (o?.yieldCallback) {
              o.yieldCallback();
            }
            return s + 1;
          }
        }
        return -1;
      }
      let u = await c(0);
      while (u !== -1 && (n === undefined || !n.isCancellationRequested)) {
        u = await new Promise(e => {
          r.RAL().timer.setImmediate(() => {
            e(c(u));
          });
        });
      }
      return a;
    };
    exports.forEach = async function (e, t, n, o) {
      if (e.length === 0) {
        return;
      }
      const a = new s(o?.yieldAfter);
      function A(n) {
        a.start();
        for (let r = n; r < e.length; r++) {
          t(e[r]);
          if (a.shouldYield()) {
            if (o?.yieldCallback) {
              o.yieldCallback();
            }
            return r + 1;
          }
        }
        return -1;
      }
      let c = A(0);
      while (c !== -1 && (n === undefined || !n.isCancellationRequested)) {
        c = await new Promise(e => {
          r.RAL().timer.setImmediate(() => {
            e(A(c));
          });
        });
      }
    };
  },
  63191: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.matchGlobPattern = undefined;
    const a = __importStar(require(76958));
    const A = require(91398);
    exports.matchGlobPattern = function (e, t) {
      let n;
      if (typeof e == 'string') {
        n = e.replace(/\\/g, '/');
      } else {
        try {
          const t = A.Uri.parse(typeof e.baseUri == 'string' ? e.baseUri : e.baseUri.uri);
          n = t.with({
            path: t.path + '/' + e.pattern
          }).fsPath.replace(/\\/g, '/');
        } catch (e) {
          return false;
        }
      }
      const r = new a.Minimatch(n, {
        noext: true
      });
      return !!r.makeRe() && r.match(t.fsPath);
    };
  },
  58319: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return typeof e == 'function';
    }
    function o(e) {
      return Array.isArray(e);
    }
    function s(e) {
      return e && r(e.then);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.asPromise = exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = r;
    exports.array = o;
    exports.stringArray = function (e) {
      return o(e) && e.every(e => n(e));
    };
    exports.typedArray = function (e, t) {
      return Array.isArray(e) && e.every(t);
    };
    exports.thenable = s;
    exports.asPromise = function (e) {
      if (e instanceof Promise) {
        return e;
      } else {
        if (s(e)) {
          return new Promise((t, n) => {
            e.then(e => t(e), e => n(e));
          });
        } else {
          return Promise.resolve(e);
        }
      }
    };
  },
  69032: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = undefined;
    class n {
      _value;
      constructor(e) {
        this._value = e;
      }
      asHex() {
        return this._value;
      }
      equals(e) {
        return this.asHex() === e.asHex();
      }
    }
    class r extends n {
      static _chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
      static _timeHighBits = ['8', '9', 'a', 'b'];
      static _oneOf(e) {
        return e[Math.floor(e.length * Math.random())];
      }
      static _randomHex() {
        return r._oneOf(r._chars);
      }
      constructor() {
        super([r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', '4', r._randomHex(), r._randomHex(), r._randomHex(), '-', r._oneOf(r._timeHighBits), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex()].join(''));
      }
    }
    function o() {
      return new r();
    }
    exports.empty = new n('00000000-0000-0000-0000-000000000000');
    exports.v4 = o;
    const s = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
    function a(e) {
      return s.test(e);
    }
    exports.isUUID = a;
    exports.parse = function (e) {
      if (!a(e)) {
        throw new Error('invalid uuid');
      }
      return new n(e);
    };
    exports.generateUuid = function () {
      return o().asHex();
    };
  },
  66804: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkspaceFoldersFeature = exports.arrayDiff = undefined;
    const a = __importStar(require(69032));
    const A = require(91398);
    const c = require(98766);
    function u(e, t) {
      if (e != null) {
        return e[t];
      }
    }
    function l(e, t) {
      return e.filter(e => t.indexOf(e) < 0);
    }
    exports.arrayDiff = l;
    exports.WorkspaceFoldersFeature = class {
      _client;
      _listeners;
      _initialFolders;
      constructor(e) {
        this._client = e;
        this._listeners = new Map();
      }
      getState() {
        return {
          kind: 'workspace',
          id: this.registrationType.method,
          registrations: this._listeners.size > 0
        };
      }
      get registrationType() {
        return c.DidChangeWorkspaceFoldersNotification.type;
      }
      fillInitializeParams(e) {
        const t = A.workspace.workspaceFolders;
        this.initializeWithFolders(t);
        e.workspaceFolders = t === undefined ? null : t.map(e => this.asProtocol(e));
      }
      initializeWithFolders(e) {
        this._initialFolders = e;
      }
      fillClientCapabilities(e) {
        e.workspace = e.workspace || {};
        e.workspace.workspaceFolders = true;
      }
      initialize(e) {
        const t = this._client;
        t.onRequest(c.WorkspaceFoldersRequest.type, e => {
          const n = () => {
            const e = A.workspace.workspaceFolders;
            if (e === undefined) {
              return null;
            }
            return e.map(e => this.asProtocol(e));
          };
          const r = t.middleware.workspace;
          if (r && r.workspaceFolders) {
            return r.workspaceFolders(e, n);
          } else {
            return n();
          }
        });
        const n = u(u(u(e, 'workspace'), 'workspaceFolders'), 'changeNotifications');
        let r;
        if (typeof n == 'string') {
          r = n;
        } else {
          if (n === true) {
            r = a.generateUuid();
          }
        }
        if (r) {
          this.register({
            id: r,
            registerOptions: undefined
          });
        }
      }
      sendInitialEvent(e) {
        let t;
        if (this._initialFolders && e) {
          const n = l(this._initialFolders, e);
          const r = l(e, this._initialFolders);
          if (r.length > 0 || n.length > 0) {
            t = this.doSendEvent(r, n);
          }
        } else {
          if (this._initialFolders) {
            t = this.doSendEvent([], this._initialFolders);
          } else {
            if (e) {
              t = this.doSendEvent(e, []);
            }
          }
        }
        if (t !== undefined) {
          t.catch(e => {
            this._client.error(`Sending notification ${c.DidChangeWorkspaceFoldersNotification.type.method} failed`, e);
          });
        }
      }
      doSendEvent(e, t) {
        const n = {
          event: {
            added: e.map(e => this.asProtocol(e)),
            removed: t.map(e => this.asProtocol(e))
          }
        };
        return this._client.sendNotification(c.DidChangeWorkspaceFoldersNotification.type, n);
      }
      register(e) {
        const t = e.id;
        const n = this._client;
        const r = A.workspace.onDidChangeWorkspaceFolders(e => {
          const t = e => this.doSendEvent(e.added, e.removed);
          const r = n.middleware.workspace;
          (r && r.didChangeWorkspaceFolders ? r.didChangeWorkspaceFolders(e, t) : t(e)).catch(e => {
            this._client.error(`Sending notification ${c.DidChangeWorkspaceFoldersNotification.type.method} failed`, e);
          });
        });
        this._listeners.set(t, r);
        this.sendInitialEvent(A.workspace.workspaceFolders);
      }
      unregister(e) {
        const t = this._listeners.get(e);
        if (t !== undefined) {
          this._listeners.delete(e);
          t.dispose();
        }
      }
      clear() {
        for (const e of this._listeners.values()) {
          e.dispose();
        }
        this._listeners.clear();
      }
      asProtocol(e) {
        if (e === undefined) {
          return null;
        } else {
          return {
            uri: this._client.code2ProtocolConverter.asUri(e.uri),
            name: e.name
          };
        }
      }
    };
  },
  58312: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkspaceSymbolFeature = undefined;
    const a = require(91398);
    const A = require(98766);
    const c = require(14294);
    const u = require(49228);
    const l = __importStar(require(69032));
    class g extends c.WorkspaceFeature {
      constructor(e) {
        super(e, A.WorkspaceSymbolRequest.type);
      }
      fillClientCapabilities(e) {
        const t = c.ensure(c.ensure(e, 'workspace'), 'symbol');
        t.dynamicRegistration = true;
        t.symbolKind = {
          valueSet: u.SupportedSymbolKinds
        };
        t.tagSupport = {
          valueSet: u.SupportedSymbolTags
        };
        t.resolveSupport = {
          properties: ['location.range']
        };
      }
      initialize(e) {
        if (e.workspaceSymbolProvider) {
          this.register({
            id: l.generateUuid(),
            registerOptions: e.workspaceSymbolProvider === true ? {
              workDoneProgress: false
            } : e.workspaceSymbolProvider
          });
        }
      }
      registerLanguageProvider(e) {
        const t = {
          provideWorkspaceSymbols: (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.WorkspaceSymbolRequest.type, {
              query: e
            }, t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asSymbolInformations(e, t), e => n.handleFailedRequest(A.WorkspaceSymbolRequest.type, t, e, null));
            const o = n.middleware;
            if (o.provideWorkspaceSymbols) {
              return o.provideWorkspaceSymbols(e, t, r);
            } else {
              return r(e, t);
            }
          },
          resolveWorkspaceSymbol: e.resolveProvider === true ? (e, t) => {
            const n = this._client;
            const r = (e, t) => n.sendRequest(A.WorkspaceSymbolResolveRequest.type, n.code2ProtocolConverter.asWorkspaceSymbol(e), t).then(e => t.isCancellationRequested ? null : n.protocol2CodeConverter.asSymbolInformation(e), e => n.handleFailedRequest(A.WorkspaceSymbolResolveRequest.type, t, e, null));
            const o = n.middleware;
            if (o.resolveWorkspaceSymbol) {
              return o.resolveWorkspaceSymbol(e, t, r);
            } else {
              return r(e, t);
            }
          } : undefined
        };
        return [a.languages.registerWorkspaceSymbolProvider(t), t];
      }
    }
    exports.WorkspaceSymbolFeature = g;
  },
  99: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SettingMonitor = exports.LanguageClient = exports.TransportKind = undefined;
    const A = __importStar(require(35317));
    const c = __importStar(require(79896));
    const u = __importStar(require(16928));
    const l = require(91398);
    const g = __importStar(require(58319));
    const d = require(29538);
    const h = require(76745);
    const f = require(67354);
    const p = require(30144);
    const m = require(97638);
    __exportStar(require(67354), exports);
    __exportStar(require(96353), exports);
    const I = '^1.91.0';
    var E;
    var y;
    var w;
    var _;
    var v;
    var b;
    (function (e) {
      e[e.stdio = 0] = 'stdio';
      e[e.ipc = 1] = 'ipc';
      e[e.pipe = 2] = 'pipe';
      e[e.socket = 3] = 'socket';
    })(E || (exports.TransportKind = E = {}));
    (function (e) {
      e.isSocket = function (e) {
        const t = e;
        return t && t.kind === E.socket && g.number(t.port);
      };
    })(y ||= {});
    (function (e) {
      e.is = function (e) {
        return g.string(e.command);
      };
    })(w ||= {});
    (function (e) {
      e.is = function (e) {
        return g.string(e.module);
      };
    })(_ ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && t.writer !== undefined && t.reader !== undefined;
      };
    })(v ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && t.process !== undefined && typeof t.detached == 'boolean';
      };
    })(b ||= {});
    class B extends d.BaseLanguageClient {
      _serverOptions;
      _forceDebug;
      _serverProcess;
      _isDetached;
      _isInDebugMode;
      constructor(e, t, n, r, o) {
        let s;
        let a;
        let A;
        let c;
        let u;
        if (g.string(t)) {
          s = e;
          a = t;
          A = n;
          c = r;
          u = !!o;
        } else {
          s = e.toLowerCase();
          a = e;
          A = t;
          c = n;
          u = r;
        }
        if (u === undefined) {
          u = false;
        }
        super(s, a, c);
        this._serverOptions = A;
        this._forceDebug = u;
        this._isInDebugMode = u;
        try {
          this.checkVersion();
        } catch (e) {
          if (g.string(e.message)) {
            this.outputChannel.appendLine(e.message);
          }
          throw e;
        }
      }
      checkVersion() {
        const e = p(l.version);
        if (!e) {
          throw new Error(`No valid VS Code version detected. Version string is: ${l.version}`);
        }
        if (e.prerelease && e.prerelease.length > 0) {
          e.prerelease = [];
        }
        if (!m(e, I)) {
          throw new Error(`The language client requires VS Code version ${I} but received version ${l.version}`);
        }
      }
      get isInDebugMode() {
        return this._isInDebugMode;
      }
      async restart() {
        await this.stop();
        if (this.isInDebugMode) {
          await new Promise(e => setTimeout(e, 1000));
          await this.start();
        } else {
          await this.start();
        }
      }
      shutdown(e, t = 2000) {
        return super.shutdown(e, t).finally(() => {
          if (this._serverProcess) {
            const e = this._serverProcess;
            this._serverProcess = undefined;
            if (this._isDetached === undefined || !this._isDetached) {
              this.checkProcessDied(e);
            }
            this._isDetached = undefined;
          }
        });
      }
      checkProcessDied(e) {
        if (e && e.pid !== undefined) {
          setTimeout(() => {
            try {
              if (e.pid !== undefined) {
                process.kill(e.pid, 0);
                h.terminate(e);
              }
            } catch (e) {}
          }, 2000);
        }
      }
      handleConnectionClosed() {
        this._serverProcess = undefined;
        return super.handleConnectionClosed();
      }
      fillInitializeParams(e) {
        super.fillInitializeParams(e);
        if (e.processId === null) {
          e.processId = process.pid;
        }
      }
      createMessageTransports(e) {
        function t(e, t) {
          if (!e && !t) {
            return;
          }
          const n = Object.create(null);
          Object.keys(process.env).forEach(e => n[e] = process.env[e]);
          if (t) {
            n.ELECTRON_RUN_AS_NODE = '1';
            n.ELECTRON_NO_ASAR = '1';
          }
          if (e) {
            Object.keys(e).forEach(t => n[t] = e[t]);
          }
          return n;
        }
        const n = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];
        const r = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];
        function o(e) {
          if (e.stdin === null || e.stdout === null || e.stderr === null) {
            throw new Error('Process created without stdio streams');
          }
        }
        const s = this._serverOptions;
        if (g.func(s)) {
          return s().then(t => {
            if (d.MessageTransports.is(t)) {
              this._isDetached = !!t.detached;
              return t;
            }
            if (v.is(t)) {
              this._isDetached = !!t.detached;
              return {
                reader: new f.StreamMessageReader(t.reader),
                writer: new f.StreamMessageWriter(t.writer)
              };
            }
            {
              let n;
              if (b.is(t)) {
                n = t.process;
                this._isDetached = t.detached;
              } else {
                n = t;
                this._isDetached = false;
              }
              n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
              return {
                reader: new f.StreamMessageReader(n.stdout),
                writer: new f.StreamMessageWriter(n.stdin)
              };
            }
          });
        }
        let a;
        const c = s;
        if (c.run || c.debug) {
          if (this._forceDebug || function () {
            const e = process.execArgv;
            return !!e && e.some(e => n.some(t => e.startsWith(t)) || r.some(t => e === t));
          }()) {
            a = c.debug;
            this._isInDebugMode = true;
          } else {
            a = c.run;
            this._isInDebugMode = false;
          }
        } else {
          a = s;
        }
        return this._getServerWorkingDir(a.options).then(n => {
          if (_.is(a) && a.module) {
            const r = a;
            const s = r.transport || E.stdio;
            if (!r.runtime) {
              let a;
              return new Promise((c, u) => {
                const l = (r.args && r.args.slice()) ?? [];
                if (s === E.ipc) {
                  l.push('--node-ipc');
                } else {
                  if (s === E.stdio) {
                    l.push('--stdio');
                  } else {
                    if (s === E.pipe) {
                      a = f.generateRandomPipeName();
                      l.push(`--pipe=${a}`);
                    } else {
                      if (y.isSocket(s)) {
                        l.push(`--socket=${s.port}`);
                      }
                    }
                  }
                }
                l.push(`--clientProcessId=${process.pid.toString()}`);
                const d = r.options ?? Object.create(null);
                d.env = t(d.env, true);
                d.execArgv = d.execArgv || [];
                d.cwd = n;
                d.silent = true;
                if (s === E.ipc || s === E.stdio) {
                  const t = A.fork(r.module, l || [], d);
                  o(t);
                  this._serverProcess = t;
                  t.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                  if (s === E.ipc) {
                    t.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    c({
                      reader: new f.IPCMessageReader(this._serverProcess),
                      writer: new f.IPCMessageWriter(this._serverProcess)
                    });
                  } else {
                    c({
                      reader: new f.StreamMessageReader(t.stdout),
                      writer: new f.StreamMessageWriter(t.stdin)
                    });
                  }
                } else {
                  if (s === E.pipe) {
                    f.createClientPipeTransport(a).then(t => {
                      const n = A.fork(r.module, l || [], d);
                      o(n);
                      this._serverProcess = n;
                      n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                      n.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                      t.onConnected().then(e => {
                        c({
                          reader: e[0],
                          writer: e[1]
                        });
                      }, u);
                    }, u);
                  } else {
                    if (y.isSocket(s)) {
                      f.createClientSocketTransport(s.port).then(t => {
                        const n = A.fork(r.module, l || [], d);
                        o(n);
                        this._serverProcess = n;
                        n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                        n.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                        t.onConnected().then(e => {
                          c({
                            reader: e[0],
                            writer: e[1]
                          });
                        }, u);
                      }, u);
                    }
                  }
                }
              });
            }
            {
              const o = [];
              const a = r.options ?? Object.create(null);
              if (a.execArgv) {
                a.execArgv.forEach(e => o.push(e));
              }
              o.push(r.module);
              if (r.args) {
                r.args.forEach(e => o.push(e));
              }
              const c = Object.create(null);
              c.cwd = n;
              c.env = t(a.env, false);
              const u = this._getRuntimePath(r.runtime, n);
              let l;
              if (s === E.ipc) {
                c.stdio = [null, null, null, 'ipc'];
                o.push('--node-ipc');
              } else {
                if (s === E.stdio) {
                  o.push('--stdio');
                } else {
                  if (s === E.pipe) {
                    l = f.generateRandomPipeName();
                    o.push(`--pipe=${l}`);
                  } else {
                    if (y.isSocket(s)) {
                      o.push(`--socket=${s.port}`);
                    }
                  }
                }
              }
              o.push(`--clientProcessId=${process.pid.toString()}`);
              if (s === E.ipc || s === E.stdio) {
                const t = A.spawn(u, o, c);
                if (t && t.pid) {
                  this._serverProcess = t;
                  t.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                  return s === E.ipc ? (t.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e))), Promise.resolve({
                    reader: new f.IPCMessageReader(t),
                    writer: new f.IPCMessageWriter(t)
                  })) : Promise.resolve({
                    reader: new f.StreamMessageReader(t.stdout),
                    writer: new f.StreamMessageWriter(t.stdin)
                  });
                } else {
                  return Q(t, `Launching server using runtime ${u} failed.`);
                }
              }
              if (s === E.pipe) {
                return f.createClientPipeTransport(l).then(t => {
                  const n = A.spawn(u, o, c);
                  if (n && n.pid) {
                    this._serverProcess = n;
                    n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    n.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    return t.onConnected().then(e => ({
                      reader: e[0],
                      writer: e[1]
                    }));
                  } else {
                    return Q(n, `Launching server using runtime ${u} failed.`);
                  }
                });
              }
              if (y.isSocket(s)) {
                return f.createClientSocketTransport(s.port).then(t => {
                  const n = A.spawn(u, o, c);
                  if (n && n.pid) {
                    this._serverProcess = n;
                    n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    n.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    return t.onConnected().then(e => ({
                      reader: e[0],
                      writer: e[1]
                    }));
                  } else {
                    return Q(n, `Launching server using runtime ${u} failed.`);
                  }
                });
              }
            }
          } else {
            if (w.is(a) && a.command) {
              const t = a;
              const r = a.args !== undefined ? a.args.slice(0) : [];
              let o;
              const s = a.transport;
              if (s === E.stdio) {
                r.push('--stdio');
              } else {
                if (s === E.pipe) {
                  o = f.generateRandomPipeName();
                  r.push(`--pipe=${o}`);
                } else {
                  if (y.isSocket(s)) {
                    r.push(`--socket=${s.port}`);
                  } else {
                    if (s === E.ipc) {
                      throw new Error('Transport kind ipc is not support for command executable');
                    }
                  }
                }
              }
              const c = Object.assign({}, t.options);
              c.cwd = c.cwd || n;
              if (s === undefined || s === E.stdio) {
                const n = A.spawn(t.command, r, c);
                if (n && n.pid) {
                  n.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                  this._serverProcess = n;
                  this._isDetached = !!c.detached;
                  return Promise.resolve({
                    reader: new f.StreamMessageReader(n.stdout),
                    writer: new f.StreamMessageWriter(n.stdin)
                  });
                } else {
                  return Q(n, `Launching server using command ${t.command} failed.`);
                }
              }
              if (s === E.pipe) {
                return f.createClientPipeTransport(o).then(n => {
                  const o = A.spawn(t.command, r, c);
                  if (o && o.pid) {
                    this._serverProcess = o;
                    this._isDetached = !!c.detached;
                    o.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    o.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    return n.onConnected().then(e => ({
                      reader: e[0],
                      writer: e[1]
                    }));
                  } else {
                    return Q(o, `Launching server using command ${t.command} failed.`);
                  }
                });
              }
              if (y.isSocket(s)) {
                return f.createClientSocketTransport(s.port).then(n => {
                  const o = A.spawn(t.command, r, c);
                  if (o && o.pid) {
                    this._serverProcess = o;
                    this._isDetached = !!c.detached;
                    o.stderr.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    o.stdout.on('data', t => this.outputChannel.append(g.string(t) ? t : t.toString(e)));
                    return n.onConnected().then(e => ({
                      reader: e[0],
                      writer: e[1]
                    }));
                  } else {
                    return Q(o, `Launching server using command ${t.command} failed.`);
                  }
                });
              }
            }
          }
          return Promise.reject(new Error(`Unsupported server configuration ${JSON.stringify(s, null, 4)}`));
        }).finally(() => {
          if (this._serverProcess !== undefined) {
            this._serverProcess.on('exit', (e, t) => {
              if (e === 0) {
                this.info('Server process exited successfully', undefined, false);
              } else {
                if (e !== null) {
                  this.error(`Server process exited with code ${e}.`, undefined, false);
                }
              }
              if (t !== null) {
                this.error(`Server process exited with signal ${t}.`, undefined, false);
              }
            });
          }
        });
      }
      _getRuntimePath(e, t) {
        if (u.isAbsolute(e)) {
          return e;
        }
        const n = this._mainGetRootPath();
        if (n !== undefined) {
          const t = u.join(n, e);
          if (c.existsSync(t)) {
            return t;
          }
        }
        if (t !== undefined) {
          const n = u.join(t, e);
          if (c.existsSync(n)) {
            return n;
          }
        }
        return e;
      }
      _mainGetRootPath() {
        const e = l.workspace.workspaceFolders;
        if (!e || e.length === 0) {
          return;
        }
        const t = e[0];
        if (t.uri.scheme === 'file') {
          return t.uri.fsPath;
        } else {
          return undefined;
        }
      }
      _getServerWorkingDir(e) {
        let t = e && e.cwd;
        if (!t) {
          t = this.clientOptions.workspaceFolder ? this.clientOptions.workspaceFolder.uri.fsPath : this._mainGetRootPath();
        }
        if (t) {
          return new Promise(e => {
            c.lstat(t, (n, r) => {
              e(!n && r.isDirectory() ? t : undefined);
            });
          });
        } else {
          return Promise.resolve(undefined);
        }
      }
    }
    exports.LanguageClient = B;
    function Q(e, t) {
      if (e === null) {
        return Promise.reject(t);
      } else {
        return new Promise((n, r) => {
          e.on('error', e => {
            r(`${t} ${e}`);
          });
          setImmediate(() => r(t));
        });
      }
    }
    exports.SettingMonitor = class {
      _client;
      _setting;
      _listeners;
      constructor(e, t) {
        this._client = e;
        this._setting = t;
        this._listeners = [];
      }
      start() {
        l.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);
        this.onDidChangeConfiguration();
        return new l.Disposable(() => {
          if (this._client.needsStop()) {
            this._client.stop();
          }
        });
      }
      onDidChangeConfiguration() {
        const e = this._setting.indexOf('.');
        const t = e >= 0 ? this._setting.substr(0, e) : this._setting;
        const n = e >= 0 ? this._setting.substr(e + 1) : undefined;
        const r = n ? l.workspace.getConfiguration(t).get(n, false) : l.workspace.getConfiguration(t);
        if (r && this._client.needsStart()) {
          this._client.start().catch(e => this._client.error('Start failed after configuration change', e, 'force'));
        } else {
          if (!r && this._client.needsStop()) {
            this._client.stop().catch(e => this._client.error('Stop failed after configuration change', e, 'force'));
          }
        }
      }
    };
  },
  76745: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.terminate = undefined;
    const a = __importStar(require(35317));
    const A = require(16928);
    const c = process.platform === 'win32';
    const u = process.platform === 'darwin';
    const l = process.platform === 'linux';
    exports.terminate = function (e, t) {
      if (c) {
        try {
          const n = {
            stdio: ['pipe', 'pipe', 'ignore']
          };
          if (t) {
            n.cwd = t;
          }
          a.execFileSync('taskkill', ['/T', '/F', '/PID', e.pid.toString()], n);
          return true;
        } catch (e) {
          return false;
        }
      } else {
        if (!l && !u) {
          e.kill('SIGKILL');
          return true;
        }
        try {
          const t = A.join(__dirname, 'terminateProcess.sh');
          return !a.spawnSync(t, [e.pid.toString()]).error;
        } catch (e) {
          return false;
        }
      }
    };
  },
  23818: (module, exports, require) => {
    var r = require(8505);
    module.exports = function (e) {
      if (!e) {
        return [];
      }
      if (e.substr(0, 2) === '{}') {
        e = `\\{\\}${e.substr(2)}`;
      }
      return m(function (e) {
        return e.split('\\\\').join(o).split('\\{').join(s).split('\\}').join(a).split('\\,').join(A).split('\\.').join(c);
      }(e), true).map(l);
    };
    var o = `\0SLASH${Math.random()}\0`;
    var s = `\0OPEN${Math.random()}\0`;
    var a = `\0CLOSE${Math.random()}\0`;
    var A = `\0COMMA${Math.random()}\0`;
    var c = `\0PERIOD${Math.random()}\0`;
    function u(e) {
      if (parseInt(e, 10) == e) {
        return parseInt(e, 10);
      } else {
        return e.charCodeAt(0);
      }
    }
    function l(e) {
      return e.split(o).join('\\').split(s).join('{').split(a).join('}').split(A).join(',').split(c).join('.');
    }
    function g(e) {
      if (!e) {
        return [''];
      }
      var t = [];
      var n = r('{', '}', e);
      if (!n) {
        return e.split(',');
      }
      var o = n.pre;
      var s = n.body;
      var a = n.post;
      var A = o.split(',');
      A[A.length - 1] += `{${s}}`;
      var c = g(a);
      if (a.length) {
        A[A.length - 1] += c.shift();
        A.push.apply(A, c);
      }
      t.push.apply(t, A);
      return t;
    }
    function d(e) {
      return `{${e}}`;
    }
    function h(e) {
      return /^-?0\d/.test(e);
    }
    function f(e, t) {
      return e <= t;
    }
    function p(e, t) {
      return e >= t;
    }
    function m(e, t) {
      var n = [];
      var o = r('{', '}', e);
      if (!o) {
        return [e];
      }
      var s = o.pre;
      var A = o.post.length ? m(o.post, false) : [''];
      if (/\$$/.test(o.pre)) {
        for (var c = 0; c < A.length; c++) {
          var l = s + '{' + o.body + '}' + A[c];
          n.push(l);
        }
      } else {
        var I;
        var E;
        var y = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(o.body);
        var w = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(o.body);
        var _ = y || w;
        var v = o.body.indexOf(',') >= 0;
        if (!_ && !v) {
          if (o.post.match(/,.*\}/)) {
            return m(e = o.pre + '{' + o.body + a + o.post);
          } else {
            return [e];
          }
        }
        if (_) {
          I = o.body.split(/\.\./);
        } else {
          if ((I = g(o.body)).length === 1 && (I = m(I[0], false).map(d)).length === 1) {
            return A.map(function (e) {
              return o.pre + I[0] + e;
            });
          }
        }
        if (_) {
          var b = u(I[0]);
          var B = u(I[1]);
          var Q = Math.max(I[0].length, I[1].length);
          var D = I.length == 3 ? Math.abs(u(I[2])) : 1;
          var S = f;
          if (B < b) {
            D *= -1;
            S = p;
          }
          var T = I.some(h);
          E = [];
          for (var R = b; S(R, B); R += D) {
            var k;
            if (w) {
              if ((k = String.fromCharCode(R)) === '\\') {
                k = '';
              }
            } else {
              k = String(R);
              if (T) {
                var x = Q - k.length;
                if (x > 0) {
                  var P = new Array(x + 1).join('0');
                  k = R < 0 ? `-${P}${k.slice(1)}` : P + k;
                }
              }
            }
            E.push(k);
          }
        } else {
          E = [];
          for (var F = 0; F < I.length; F++) {
            E.push.apply(E, m(I[F], false));
          }
        }
        for (F = 0; F < E.length; F++) {
          for (c = 0; c < A.length; c++) {
            l = s + E[F] + A[c];
            if (!t || _ || l) {
              n.push(l);
            }
          }
        }
      }
      return n;
    }
  },
  98766: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LSPErrorCodes = exports.createProtocolConnection = undefined;
    __exportStar(require(53281), exports);
    __exportStar(require(46203), exports);
    __exportStar(require(90372), exports);
    __exportStar(require(91560), exports);
    var s;
    var a = require(41580);
    Object.defineProperty(exports, 'createProtocolConnection', {
      enumerable: true,
      get: function () {
        return a.createProtocolConnection;
      }
    });
    (function (e) {
      e.lspReservedErrorRangeStart = -32899;
      e.RequestFailed = -32803;
      e.ServerCancelled = -32802;
      e.ContentModified = -32801;
      e.RequestCancelled = -32800;
      e.lspReservedErrorRangeEnd = -32800;
    })(s || (exports.LSPErrorCodes = s = {}));
  },
  41580: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createProtocolConnection = undefined;
    const r = require(53281);
    exports.createProtocolConnection = function (e, t, n, o) {
      if (r.ConnectionStrategy.is(o)) {
        o = {
          connectionStrategy: o
        };
      }
      return r.createMessageConnection(e, t, n, o);
    };
  },
  90372: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = undefined;
    const r = require(53281);
    var o;
    (function (e) {
      e.clientToServer = 'clientToServer';
      e.serverToClient = 'serverToClient';
      e.both = 'both';
    })(o || (exports.MessageDirection = o = {}));
    exports.RegistrationType = class {
      ____;
      method;
      constructor(e) {
        this.method = e;
      }
    };
    class s extends r.RequestType0 {
      __;
      ___;
      ____;
      _pr;
      constructor(e) {
        super(e);
      }
    }
    exports.ProtocolRequestType0 = s;
    class a extends r.RequestType {
      __;
      ___;
      ____;
      _pr;
      constructor(e) {
        super(e, r.ParameterStructures.byName);
      }
    }
    exports.ProtocolRequestType = a;
    class A extends r.NotificationType0 {
      ___;
      ____;
      constructor(e) {
        super(e);
      }
    }
    exports.ProtocolNotificationType0 = A;
    class c extends r.NotificationType {
      ___;
      ____;
      constructor(e) {
        super(e, r.ParameterStructures.byName);
      }
    }
    exports.ProtocolNotificationType = c;
  },
  48765: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/prepareCallHierarchy';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.CallHierarchyPrepareRequest = o = {}));
    (function (e) {
      e.method = 'callHierarchy/incomingCalls';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.CallHierarchyIncomingCallsRequest = s = {}));
    (function (e) {
      e.method = 'callHierarchy/outgoingCalls';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.CallHierarchyOutgoingCallsRequest = a = {}));
  },
  77672: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ColorPresentationRequest = exports.DocumentColorRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/documentColor';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.DocumentColorRequest = o = {}));
    (function (e) {
      e.method = 'textDocument/colorPresentation';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.ColorPresentationRequest = s = {}));
  },
  41660: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ConfigurationRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'workspace/configuration';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ConfigurationRequest = o = {}));
  },
  46914: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DeclarationRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/declaration';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.DeclarationRequest = o = {}));
  },
  26011: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = undefined;
    const a = require(53281);
    const A = __importStar(require(38598));
    const c = require(90372);
    var u;
    var l;
    var g;
    var d;
    var h;
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && A.boolean(t.retriggerRequest);
      };
    })(u || (exports.DiagnosticServerCancellationData = u = {}));
    (function (e) {
      e.Full = 'full';
      e.Unchanged = 'unchanged';
    })(l || (exports.DocumentDiagnosticReportKind = l = {}));
    (function (e) {
      e.method = 'textDocument/diagnostic';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolRequestType(e.method);
      e.partialResult = new a.ProgressType();
    })(g || (exports.DocumentDiagnosticRequest = g = {}));
    (function (e) {
      e.method = 'workspace/diagnostic';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolRequestType(e.method);
      e.partialResult = new a.ProgressType();
    })(d || (exports.WorkspaceDiagnosticRequest = d = {}));
    (function (e) {
      e.method = 'workspace/diagnostic/refresh';
      e.messageDirection = c.MessageDirection.serverToClient;
      e.type = new c.ProtocolRequestType0(e.method);
    })(h || (exports.DiagnosticRefreshRequest = h = {}));
  },
  69840: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    (function (e) {
      e.file = 'file';
      e.folder = 'folder';
    })(o || (exports.FileOperationPatternKind = o = {}));
    (function (e) {
      e.method = 'workspace/willCreateFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.WillCreateFilesRequest = s = {}));
    (function (e) {
      e.method = 'workspace/didCreateFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(a || (exports.DidCreateFilesNotification = a = {}));
    (function (e) {
      e.method = 'workspace/willRenameFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(A || (exports.WillRenameFilesRequest = A = {}));
    (function (e) {
      e.method = 'workspace/didRenameFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(c || (exports.DidRenameFilesNotification = c = {}));
    (function (e) {
      e.method = 'workspace/didDeleteFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(u || (exports.DidDeleteFilesNotification = u = {}));
    (function (e) {
      e.method = 'workspace/willDeleteFiles';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(l || (exports.WillDeleteFilesRequest = l = {}));
  },
  2874: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/foldingRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.FoldingRangeRequest = o = {}));
    (function (e) {
      e.method = 'workspace/foldingRange/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(s || (exports.FoldingRangeRefreshRequest = s = {}));
  },
  39574: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ImplementationRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/implementation';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ImplementationRequest = o = {}));
  },
  77752: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/inlayHint';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlayHintRequest = o = {}));
    (function (e) {
      e.method = 'inlayHint/resolve';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.InlayHintResolveRequest = s = {}));
    (function (e) {
      e.method = 'workspace/inlayHint/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(a || (exports.InlayHintRefreshRequest = a = {}));
  },
  13307: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineCompletionRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/inlineCompletion';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlineCompletionRequest = o = {}));
  },
  63124: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineValueRefreshRequest = exports.InlineValueRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    (function (e) {
      e.method = 'textDocument/inlineValue';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.InlineValueRequest = o = {}));
    (function (e) {
      e.method = 'workspace/inlineValue/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(s || (exports.InlineValueRefreshRequest = s = {}));
  },
  91560: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.GlobPattern = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.RegularExpressionEngineKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = undefined;
    exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangesFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = undefined;
    exports.TextDocumentContentRefreshRequest = exports.TextDocumentContentRequest = exports.InlineCompletionRequest = exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = exports.MonikerRequest = exports.MonikerKind = undefined;
    const a = require(90372);
    const A = require(46203);
    const c = __importStar(require(38598));
    const u = require(39574);
    Object.defineProperty(exports, 'ImplementationRequest', {
      enumerable: true,
      get: function () {
        return u.ImplementationRequest;
      }
    });
    const l = require(68461);
    Object.defineProperty(exports, 'TypeDefinitionRequest', {
      enumerable: true,
      get: function () {
        return l.TypeDefinitionRequest;
      }
    });
    const g = require(99935);
    Object.defineProperty(exports, 'WorkspaceFoldersRequest', {
      enumerable: true,
      get: function () {
        return g.WorkspaceFoldersRequest;
      }
    });
    Object.defineProperty(exports, 'DidChangeWorkspaceFoldersNotification', {
      enumerable: true,
      get: function () {
        return g.DidChangeWorkspaceFoldersNotification;
      }
    });
    const d = require(41660);
    Object.defineProperty(exports, 'ConfigurationRequest', {
      enumerable: true,
      get: function () {
        return d.ConfigurationRequest;
      }
    });
    const h = require(77672);
    Object.defineProperty(exports, 'DocumentColorRequest', {
      enumerable: true,
      get: function () {
        return h.DocumentColorRequest;
      }
    });
    Object.defineProperty(exports, 'ColorPresentationRequest', {
      enumerable: true,
      get: function () {
        return h.ColorPresentationRequest;
      }
    });
    const f = require(2874);
    Object.defineProperty(exports, 'FoldingRangeRequest', {
      enumerable: true,
      get: function () {
        return f.FoldingRangeRequest;
      }
    });
    Object.defineProperty(exports, 'FoldingRangeRefreshRequest', {
      enumerable: true,
      get: function () {
        return f.FoldingRangeRefreshRequest;
      }
    });
    const p = require(46914);
    Object.defineProperty(exports, 'DeclarationRequest', {
      enumerable: true,
      get: function () {
        return p.DeclarationRequest;
      }
    });
    const m = require(33487);
    Object.defineProperty(exports, 'SelectionRangeRequest', {
      enumerable: true,
      get: function () {
        return m.SelectionRangeRequest;
      }
    });
    const I = require(32687);
    Object.defineProperty(exports, 'WorkDoneProgress', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgress;
      }
    });
    Object.defineProperty(exports, 'WorkDoneProgressCreateRequest', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgressCreateRequest;
      }
    });
    Object.defineProperty(exports, 'WorkDoneProgressCancelNotification', {
      enumerable: true,
      get: function () {
        return I.WorkDoneProgressCancelNotification;
      }
    });
    const E = require(48765);
    Object.defineProperty(exports, 'CallHierarchyIncomingCallsRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyIncomingCallsRequest;
      }
    });
    Object.defineProperty(exports, 'CallHierarchyOutgoingCallsRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyOutgoingCallsRequest;
      }
    });
    Object.defineProperty(exports, 'CallHierarchyPrepareRequest', {
      enumerable: true,
      get: function () {
        return E.CallHierarchyPrepareRequest;
      }
    });
    const y = require(72478);
    Object.defineProperty(exports, 'TokenFormat', {
      enumerable: true,
      get: function () {
        return y.TokenFormat;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensDeltaRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensDeltaRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRangeRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRangeRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRefreshRequest', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRefreshRequest;
      }
    });
    Object.defineProperty(exports, 'SemanticTokensRegistrationType', {
      enumerable: true,
      get: function () {
        return y.SemanticTokensRegistrationType;
      }
    });
    const w = require(80908);
    Object.defineProperty(exports, 'ShowDocumentRequest', {
      enumerable: true,
      get: function () {
        return w.ShowDocumentRequest;
      }
    });
    const _ = require(35316);
    Object.defineProperty(exports, 'LinkedEditingRangeRequest', {
      enumerable: true,
      get: function () {
        return _.LinkedEditingRangeRequest;
      }
    });
    const v = require(69840);
    Object.defineProperty(exports, 'FileOperationPatternKind', {
      enumerable: true,
      get: function () {
        return v.FileOperationPatternKind;
      }
    });
    Object.defineProperty(exports, 'DidCreateFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidCreateFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillCreateFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillCreateFilesRequest;
      }
    });
    Object.defineProperty(exports, 'DidRenameFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidRenameFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillRenameFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillRenameFilesRequest;
      }
    });
    Object.defineProperty(exports, 'DidDeleteFilesNotification', {
      enumerable: true,
      get: function () {
        return v.DidDeleteFilesNotification;
      }
    });
    Object.defineProperty(exports, 'WillDeleteFilesRequest', {
      enumerable: true,
      get: function () {
        return v.WillDeleteFilesRequest;
      }
    });
    const b = require(9047);
    Object.defineProperty(exports, 'UniquenessLevel', {
      enumerable: true,
      get: function () {
        return b.UniquenessLevel;
      }
    });
    Object.defineProperty(exports, 'MonikerKind', {
      enumerable: true,
      get: function () {
        return b.MonikerKind;
      }
    });
    Object.defineProperty(exports, 'MonikerRequest', {
      enumerable: true,
      get: function () {
        return b.MonikerRequest;
      }
    });
    const B = require(50645);
    Object.defineProperty(exports, 'TypeHierarchyPrepareRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchyPrepareRequest;
      }
    });
    Object.defineProperty(exports, 'TypeHierarchySubtypesRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchySubtypesRequest;
      }
    });
    Object.defineProperty(exports, 'TypeHierarchySupertypesRequest', {
      enumerable: true,
      get: function () {
        return B.TypeHierarchySupertypesRequest;
      }
    });
    const Q = require(63124);
    Object.defineProperty(exports, 'InlineValueRequest', {
      enumerable: true,
      get: function () {
        return Q.InlineValueRequest;
      }
    });
    Object.defineProperty(exports, 'InlineValueRefreshRequest', {
      enumerable: true,
      get: function () {
        return Q.InlineValueRefreshRequest;
      }
    });
    const D = require(77752);
    Object.defineProperty(exports, 'InlayHintRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintRequest;
      }
    });
    Object.defineProperty(exports, 'InlayHintResolveRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintResolveRequest;
      }
    });
    Object.defineProperty(exports, 'InlayHintRefreshRequest', {
      enumerable: true,
      get: function () {
        return D.InlayHintRefreshRequest;
      }
    });
    const S = require(26011);
    Object.defineProperty(exports, 'DiagnosticServerCancellationData', {
      enumerable: true,
      get: function () {
        return S.DiagnosticServerCancellationData;
      }
    });
    Object.defineProperty(exports, 'DocumentDiagnosticReportKind', {
      enumerable: true,
      get: function () {
        return S.DocumentDiagnosticReportKind;
      }
    });
    Object.defineProperty(exports, 'DocumentDiagnosticRequest', {
      enumerable: true,
      get: function () {
        return S.DocumentDiagnosticRequest;
      }
    });
    Object.defineProperty(exports, 'WorkspaceDiagnosticRequest', {
      enumerable: true,
      get: function () {
        return S.WorkspaceDiagnosticRequest;
      }
    });
    Object.defineProperty(exports, 'DiagnosticRefreshRequest', {
      enumerable: true,
      get: function () {
        return S.DiagnosticRefreshRequest;
      }
    });
    const T = require(53557);
    Object.defineProperty(exports, 'NotebookCellKind', {
      enumerable: true,
      get: function () {
        return T.NotebookCellKind;
      }
    });
    Object.defineProperty(exports, 'ExecutionSummary', {
      enumerable: true,
      get: function () {
        return T.ExecutionSummary;
      }
    });
    Object.defineProperty(exports, 'NotebookCell', {
      enumerable: true,
      get: function () {
        return T.NotebookCell;
      }
    });
    Object.defineProperty(exports, 'NotebookDocument', {
      enumerable: true,
      get: function () {
        return T.NotebookDocument;
      }
    });
    Object.defineProperty(exports, 'NotebookDocumentSyncRegistrationType', {
      enumerable: true,
      get: function () {
        return T.NotebookDocumentSyncRegistrationType;
      }
    });
    Object.defineProperty(exports, 'DidOpenNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidOpenNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'NotebookCellArrayChange', {
      enumerable: true,
      get: function () {
        return T.NotebookCellArrayChange;
      }
    });
    Object.defineProperty(exports, 'DidChangeNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidChangeNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'DidSaveNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidSaveNotebookDocumentNotification;
      }
    });
    Object.defineProperty(exports, 'DidCloseNotebookDocumentNotification', {
      enumerable: true,
      get: function () {
        return T.DidCloseNotebookDocumentNotification;
      }
    });
    const R = require(13307);
    Object.defineProperty(exports, 'InlineCompletionRequest', {
      enumerable: true,
      get: function () {
        return R.InlineCompletionRequest;
      }
    });
    const k = require(14289);
    var x;
    var P;
    var F;
    var M;
    var O;
    var N;
    var L;
    var K;
    var U;
    var j;
    var q;
    var G;
    var Y;
    var H;
    var J;
    var z;
    var $;
    var W;
    var V;
    var X;
    var Z;
    var ee;
    var te;
    var ne;
    var re;
    var oe;
    var ie;
    var se;
    var ae;
    var Ae;
    var ce;
    var ue;
    var le;
    var ge;
    var de;
    var he;
    var fe;
    var pe;
    var Ce;
    var me;
    var Ie;
    var Ee;
    var ye;
    var we;
    var _e;
    var ve;
    var be;
    var Be;
    var Qe;
    var De;
    var Se;
    var Te;
    var Re;
    var ke;
    var xe;
    var Pe;
    var Fe;
    var Me;
    var Oe;
    var Ne;
    var Le;
    var Ke;
    var Ue;
    var je;
    var qe;
    var Ge;
    var Ye;
    Object.defineProperty(exports, 'TextDocumentContentRequest', {
      enumerable: true,
      get: function () {
        return k.TextDocumentContentRequest;
      }
    });
    Object.defineProperty(exports, 'TextDocumentContentRefreshRequest', {
      enumerable: true,
      get: function () {
        return k.TextDocumentContentRefreshRequest;
      }
    });
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.string(t) || c.string(t.language) || c.string(t.scheme) || fe.is(t.pattern);
      };
    })(x || (exports.TextDocumentFilter = x = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (c.string(t.notebookType) || c.string(t.scheme) || c.string(t.pattern));
      };
    })(P || (exports.NotebookDocumentFilter = P = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (c.string(t.notebook) || P.is(t.notebook)) && (t.language === undefined || c.string(t.language));
      };
    })(F || (exports.NotebookCellTextDocumentFilter = F = {}));
    (function (e) {
      e.is = function (e) {
        if (!Array.isArray(e)) {
          return false;
        }
        for (const t of e) {
          if (!c.string(t) && !x.is(t) && !F.is(t)) {
            return false;
          }
        }
        return true;
      };
    })(M || (exports.DocumentSelector = M = {}));
    (function (e) {
      e.method = 'client/registerCapability';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(O || (exports.RegistrationRequest = O = {}));
    (function (e) {
      e.method = 'client/unregisterCapability';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(N || (exports.UnregistrationRequest = N = {}));
    (function (e) {
      e.Create = 'create';
      e.Rename = 'rename';
      e.Delete = 'delete';
    })(L || (exports.ResourceOperationKind = L = {}));
    (function (e) {
      e.Abort = 'abort';
      e.Transactional = 'transactional';
      e.TextOnlyTransactional = 'textOnlyTransactional';
      e.Undo = 'undo';
    })(K || (exports.FailureHandlingKind = K = {}));
    (function (e) {
      e.ES2020 = 'ES2020';
    })(U || (exports.RegularExpressionEngineKind = U = {}));
    (function (e) {
      e.UTF8 = 'utf-8';
      e.UTF16 = 'utf-16';
      e.UTF32 = 'utf-32';
    })(j || (exports.PositionEncodingKind = j = {}));
    (function (e) {
      e.hasId = function (e) {
        const t = e;
        return t && c.string(t.id) && t.id.length > 0;
      };
    })(q || (exports.StaticRegistrationOptions = q = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.documentSelector === null || M.is(t.documentSelector));
      };
    })(G || (exports.TextDocumentRegistrationOptions = G = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (t.workDoneProgress === undefined || c.boolean(t.workDoneProgress));
      };
      e.hasWorkDoneProgress = function (e) {
        const t = e;
        return t && c.boolean(t.workDoneProgress);
      };
    })(Y || (exports.WorkDoneProgressOptions = Y = {}));
    (function (e) {
      e.method = 'initialize';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(H || (exports.InitializeRequest = H = {}));
    (function (e) {
      e.unknownProtocolVersion = 1;
    })(J || (exports.InitializeErrorCodes = J = {}));
    (function (e) {
      e.method = 'initialized';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(z || (exports.InitializedNotification = z = {}));
    (function (e) {
      e.method = 'shutdown';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType0(e.method);
    })($ || (exports.ShutdownRequest = $ = {}));
    (function (e) {
      e.method = 'exit';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType0(e.method);
    })(W || (exports.ExitNotification = W = {}));
    (function (e) {
      e.method = 'workspace/didChangeConfiguration';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(V || (exports.DidChangeConfigurationNotification = V = {}));
    (function (e) {
      e.Error = 1;
      e.Warning = 2;
      e.Info = 3;
      e.Log = 4;
      e.Debug = 5;
    })(X || (exports.MessageType = X = {}));
    (function (e) {
      e.method = 'window/showMessage';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Z || (exports.ShowMessageNotification = Z = {}));
    (function (e) {
      e.method = 'window/showMessageRequest';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType(e.method);
    })(ee || (exports.ShowMessageRequest = ee = {}));
    (function (e) {
      e.method = 'window/logMessage';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(te || (exports.LogMessageNotification = te = {}));
    (function (e) {
      e.method = 'telemetry/event';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ne || (exports.TelemetryEventNotification = ne = {}));
    (function (e) {
      e.None = 0;
      e.Full = 1;
      e.Incremental = 2;
    })(re || (exports.TextDocumentSyncKind = re = {}));
    (function (e) {
      e.method = 'textDocument/didOpen';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(oe || (exports.DidOpenTextDocumentNotification = oe = {}));
    (function (e) {
      e.isIncremental = function (e) {
        const t = e;
        return t != null && typeof t.text == 'string' && t.range !== undefined && (t.rangeLength === undefined || typeof t.rangeLength == 'number');
      };
      e.isFull = function (e) {
        const t = e;
        return t != null && typeof t.text == 'string' && t.range === undefined && t.rangeLength === undefined;
      };
    })(ie || (exports.TextDocumentContentChangeEvent = ie = {}));
    (function (e) {
      e.method = 'textDocument/didChange';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(se || (exports.DidChangeTextDocumentNotification = se = {}));
    (function (e) {
      e.method = 'textDocument/didClose';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ae || (exports.DidCloseTextDocumentNotification = ae = {}));
    (function (e) {
      e.method = 'textDocument/didSave';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Ae || (exports.DidSaveTextDocumentNotification = Ae = {}));
    (function (e) {
      e.Manual = 1;
      e.AfterDelay = 2;
      e.FocusOut = 3;
    })(ce || (exports.TextDocumentSaveReason = ce = {}));
    (function (e) {
      e.method = 'textDocument/willSave';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ue || (exports.WillSaveTextDocumentNotification = ue = {}));
    (function (e) {
      e.method = 'textDocument/willSaveWaitUntil';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(le || (exports.WillSaveTextDocumentWaitUntilRequest = le = {}));
    (function (e) {
      e.method = 'workspace/didChangeWatchedFiles';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolNotificationType(e.method);
    })(ge || (exports.DidChangeWatchedFilesNotification = ge = {}));
    (function (e) {
      e.Created = 1;
      e.Changed = 2;
      e.Deleted = 3;
    })(de || (exports.FileChangeType = de = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.objectLiteral(t) && (A.URI.is(t.baseUri) || A.WorkspaceFolder.is(t.baseUri)) && c.string(t.pattern);
      };
    })(he || (exports.RelativePattern = he = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return c.string(t) || he.is(t);
      };
    })(fe || (exports.GlobPattern = fe = {}));
    (function (e) {
      e.Create = 1;
      e.Change = 2;
      e.Delete = 4;
    })(pe || (exports.WatchKind = pe = {}));
    (function (e) {
      e.method = 'textDocument/publishDiagnostics';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolNotificationType(e.method);
    })(Ce || (exports.PublishDiagnosticsNotification = Ce = {}));
    (function (e) {
      e.Invoked = 1;
      e.TriggerCharacter = 2;
      e.TriggerForIncompleteCompletions = 3;
    })(me || (exports.CompletionTriggerKind = me = {}));
    (function (e) {
      e.method = 'textDocument/completion';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ie || (exports.CompletionRequest = Ie = {}));
    (function (e) {
      e.method = 'completionItem/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ee || (exports.CompletionResolveRequest = Ee = {}));
    (function (e) {
      e.method = 'textDocument/hover';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ye || (exports.HoverRequest = ye = {}));
    (function (e) {
      e.Invoked = 1;
      e.TriggerCharacter = 2;
      e.ContentChange = 3;
    })(we || (exports.SignatureHelpTriggerKind = we = {}));
    (function (e) {
      e.method = 'textDocument/signatureHelp';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(_e || (exports.SignatureHelpRequest = _e = {}));
    (function (e) {
      e.method = 'textDocument/definition';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ve || (exports.DefinitionRequest = ve = {}));
    (function (e) {
      e.method = 'textDocument/references';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(be || (exports.ReferencesRequest = be = {}));
    (function (e) {
      e.method = 'textDocument/documentHighlight';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Be || (exports.DocumentHighlightRequest = Be = {}));
    (function (e) {
      e.method = 'textDocument/documentSymbol';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Qe || (exports.DocumentSymbolRequest = Qe = {}));
    (function (e) {
      e.method = 'textDocument/codeAction';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(De || (exports.CodeActionRequest = De = {}));
    (function (e) {
      e.method = 'codeAction/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Se || (exports.CodeActionResolveRequest = Se = {}));
    (function (e) {
      e.method = 'workspace/symbol';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Te || (exports.WorkspaceSymbolRequest = Te = {}));
    (function (e) {
      e.method = 'workspaceSymbol/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Re || (exports.WorkspaceSymbolResolveRequest = Re = {}));
    (function (e) {
      e.method = 'textDocument/codeLens';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(ke || (exports.CodeLensRequest = ke = {}));
    (function (e) {
      e.method = 'codeLens/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(xe || (exports.CodeLensResolveRequest = xe = {}));
    (function (e) {
      e.method = 'workspace/codeLens/refresh';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType0(e.method);
    })(Pe || (exports.CodeLensRefreshRequest = Pe = {}));
    (function (e) {
      e.method = 'textDocument/documentLink';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Fe || (exports.DocumentLinkRequest = Fe = {}));
    (function (e) {
      e.method = 'documentLink/resolve';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Me || (exports.DocumentLinkResolveRequest = Me = {}));
    (function (e) {
      e.method = 'textDocument/formatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Oe || (exports.DocumentFormattingRequest = Oe = {}));
    (function (e) {
      e.method = 'textDocument/rangeFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ne || (exports.DocumentRangeFormattingRequest = Ne = {}));
    (function (e) {
      e.method = 'textDocument/rangesFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Le || (exports.DocumentRangesFormattingRequest = Le = {}));
    (function (e) {
      e.method = 'textDocument/onTypeFormatting';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ke || (exports.DocumentOnTypeFormattingRequest = Ke = {}));
    (function (e) {
      e.Identifier = 1;
    })(Ue || (exports.PrepareSupportDefaultBehavior = Ue = {}));
    (function (e) {
      e.method = 'textDocument/rename';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(je || (exports.RenameRequest = je = {}));
    (function (e) {
      e.method = 'textDocument/prepareRename';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(qe || (exports.PrepareRenameRequest = qe = {}));
    (function (e) {
      e.method = 'workspace/executeCommand';
      e.messageDirection = a.MessageDirection.clientToServer;
      e.type = new a.ProtocolRequestType(e.method);
    })(Ge || (exports.ExecuteCommandRequest = Ge = {}));
    (function (e) {
      e.method = 'workspace/applyEdit';
      e.messageDirection = a.MessageDirection.serverToClient;
      e.type = new a.ProtocolRequestType('workspace/applyEdit');
    })(Ye || (exports.ApplyWorkspaceEditRequest = Ye = {}));
  },
  35316: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LinkedEditingRangeRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/linkedEditingRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.LinkedEditingRangeRequest = o = {}));
  },
  9047: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    (function (e) {
      e.document = 'document';
      e.project = 'project';
      e.group = 'group';
      e.scheme = 'scheme';
      e.global = 'global';
    })(o || (exports.UniquenessLevel = o = {}));
    (function (e) {
      e.$import = 'import';
      e.$export = 'export';
      e.local = 'local';
    })(s || (exports.MonikerKind = s = {}));
    (function (e) {
      e.method = 'textDocument/moniker';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.MonikerRequest = a = {}));
  },
  53557: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = undefined;
    const a = require(46203);
    const A = __importStar(require(38598));
    const c = require(90372);
    var u;
    var l;
    var g;
    var d;
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    (function (e) {
      e.Markup = 1;
      e.Code = 2;
      e.is = function (e) {
        return e === 1 || e === 2;
      };
    })(u || (exports.NotebookCellKind = u = {}));
    (function (e) {
      e.create = function (e, t) {
        const n = {
          executionOrder: e
        };
        if (t === true || t === false) {
          n.success = t;
        }
        return n;
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && a.uinteger.is(t.executionOrder) && (t.success === undefined || A.boolean(t.success));
      };
      e.equals = function (e, t) {
        return e === t || e != null && t != null && e.executionOrder === t.executionOrder && e.success === t.success;
      };
    })(l || (exports.ExecutionSummary = l = {}));
    (function (e) {
      function t(e, n) {
        if (e === n) {
          return true;
        }
        if (e == null || n == null) {
          return false;
        }
        if (typeof e != typeof n) {
          return false;
        }
        if (typeof e != 'object') {
          return false;
        }
        const r = Array.isArray(e);
        const o = Array.isArray(n);
        if (r !== o) {
          return false;
        }
        if (r && o) {
          if (e.length !== n.length) {
            return false;
          }
          for (let r = 0; r < e.length; r++) {
            if (!t(e[r], n[r])) {
              return false;
            }
          }
        }
        if (A.objectLiteral(e) && A.objectLiteral(n)) {
          const r = Object.keys(e);
          const o = Object.keys(n);
          if (r.length !== o.length) {
            return false;
          }
          r.sort();
          o.sort();
          if (!t(r, o)) {
            return false;
          }
          for (let o = 0; o < r.length; o++) {
            const s = r[o];
            if (!t(e[s], n[s])) {
              return false;
            }
          }
        }
        return true;
      }
      e.create = function (e, t) {
        return {
          kind: e,
          document: t
        };
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && u.is(t.kind) && a.DocumentUri.is(t.document) && (t.metadata === undefined || A.objectLiteral(t.metadata));
      };
      e.diff = function (e, n) {
        const r = new Set();
        if (e.document !== n.document) {
          r.add('document');
        }
        if (e.kind !== n.kind) {
          r.add('kind');
        }
        if (e.executionSummary !== n.executionSummary) {
          r.add('executionSummary');
        }
        if ((e.metadata !== undefined || n.metadata !== undefined) && !t(e.metadata, n.metadata)) {
          r.add('metadata');
        }
        if ((e.executionSummary !== undefined || n.executionSummary !== undefined) && !l.equals(e.executionSummary, n.executionSummary)) {
          r.add('executionSummary');
        }
        return r;
      };
    })(g || (exports.NotebookCell = g = {}));
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          uri: e,
          notebookType: t,
          version: n,
          cells: r
        };
      };
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && A.string(t.uri) && a.integer.is(t.version) && A.typedArray(t.cells, g.is);
      };
    })(d || (exports.NotebookDocument = d = {}));
    (function (e) {
      e.method = 'notebookDocument/sync';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.RegistrationType(e.method);
    })(h || (exports.NotebookDocumentSyncRegistrationType = h = {}));
    (function (e) {
      e.method = 'notebookDocument/didOpen';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(f || (exports.DidOpenNotebookDocumentNotification = f = {}));
    (function (e) {
      e.is = function (e) {
        const t = e;
        return A.objectLiteral(t) && a.uinteger.is(t.start) && a.uinteger.is(t.deleteCount) && (t.cells === undefined || A.typedArray(t.cells, g.is));
      };
      e.create = function (e, t, n) {
        const r = {
          start: e,
          deleteCount: t
        };
        if (n !== undefined) {
          r.cells = n;
        }
        return r;
      };
    })(p || (exports.NotebookCellArrayChange = p = {}));
    (function (e) {
      e.method = 'notebookDocument/didChange';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(m || (exports.DidChangeNotebookDocumentNotification = m = {}));
    (function (e) {
      e.method = 'notebookDocument/didSave';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(I || (exports.DidSaveNotebookDocumentNotification = I = {}));
    (function (e) {
      e.method = 'notebookDocument/didClose';
      e.messageDirection = c.MessageDirection.clientToServer;
      e.type = new c.ProtocolNotificationType(e.method);
      e.registrationMethod = h.method;
    })(E || (exports.DidCloseNotebookDocumentNotification = E = {}));
  },
  32687: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = undefined;
    const r = require(53281);
    const o = require(90372);
    var s;
    var a;
    var A;
    (function (e) {
      e.type = new r.ProgressType();
      e.is = function (t) {
        return t === e.type;
      };
    })(s || (exports.WorkDoneProgress = s = {}));
    (function (e) {
      e.method = 'window/workDoneProgress/create';
      e.messageDirection = o.MessageDirection.serverToClient;
      e.type = new o.ProtocolRequestType(e.method);
    })(a || (exports.WorkDoneProgressCreateRequest = a = {}));
    (function (e) {
      e.method = 'window/workDoneProgress/cancel';
      e.messageDirection = o.MessageDirection.clientToServer;
      e.type = new o.ProtocolNotificationType(e.method);
    })(A || (exports.WorkDoneProgressCancelNotification = A = {}));
  },
  33487: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SelectionRangeRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/selectionRange';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.SelectionRangeRequest = o = {}));
  },
  72478: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    (function (e) {
      e.Relative = 'relative';
    })(o || (exports.TokenFormat = o = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens';
      e.type = new r.RegistrationType(e.method);
    })(s || (exports.SemanticTokensRegistrationType = s = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/full';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(a || (exports.SemanticTokensRequest = a = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/full/delta';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(A || (exports.SemanticTokensDeltaRequest = A = {}));
    (function (e) {
      e.method = 'textDocument/semanticTokens/range';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
      e.registrationMethod = s.method;
    })(c || (exports.SemanticTokensRangeRequest = c = {}));
    (function (e) {
      e.method = 'workspace/semanticTokens/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(u || (exports.SemanticTokensRefreshRequest = u = {}));
  },
  80908: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ShowDocumentRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'window/showDocument';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.ShowDocumentRequest = o = {}));
  },
  14289: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocumentContentRefreshRequest = exports.TextDocumentContentRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    (function (e) {
      e.method = 'workspace/textDocumentContent';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TextDocumentContentRequest = o = {}));
    (function (e) {
      e.method = 'workspace/textDocumentContent/refresh';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.TextDocumentContentRefreshRequest = s = {}));
  },
  68461: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeDefinitionRequest = undefined;
    const r = require(90372);
    var o;
    (function (e) {
      e.method = 'textDocument/typeDefinition';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TypeDefinitionRequest = o = {}));
  },
  50645: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    var a;
    (function (e) {
      e.method = 'textDocument/prepareTypeHierarchy';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(o || (exports.TypeHierarchyPrepareRequest = o = {}));
    (function (e) {
      e.method = 'typeHierarchy/supertypes';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(s || (exports.TypeHierarchySupertypesRequest = s = {}));
    (function (e) {
      e.method = 'typeHierarchy/subtypes';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolRequestType(e.method);
    })(a || (exports.TypeHierarchySubtypesRequest = a = {}));
  },
  99935: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = undefined;
    const r = require(90372);
    var o;
    var s;
    (function (e) {
      e.method = 'workspace/workspaceFolders';
      e.messageDirection = r.MessageDirection.serverToClient;
      e.type = new r.ProtocolRequestType0(e.method);
    })(o || (exports.WorkspaceFoldersRequest = o = {}));
    (function (e) {
      e.method = 'workspace/didChangeWorkspaceFolders';
      e.messageDirection = r.MessageDirection.clientToServer;
      e.type = new r.ProtocolNotificationType(e.method);
    })(s || (exports.DidChangeWorkspaceFoldersNotification = s = {}));
  },
  38598: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = function (e) {
      return typeof e == 'function';
    };
    exports.array = r;
    exports.stringArray = function (e) {
      return r(e) && e.every(e => n(e));
    };
    exports.typedArray = function (e, t) {
      return Array.isArray(e) && e.every(t);
    };
    exports.objectLiteral = function (e) {
      return e !== null && typeof e == 'object';
    };
  },
  67354: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createProtocolConnection = undefined;
    const s = require(77123);
    __exportStar(require(77123), exports);
    __exportStar(require(98766), exports);
    exports.createProtocolConnection = function (e, t, n, r) {
      return s.createMessageConnection(e, t, n, r);
    };
  },
  92861: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ProposedFeatures = exports.NotebookDocuments = exports.TextDocuments = exports.SemanticTokensBuilder = undefined;
    const A = require(22655);
    Object.defineProperty(exports, 'SemanticTokensBuilder', {
      enumerable: true,
      get: function () {
        return A.SemanticTokensBuilder;
      }
    });
    const c = __importStar(require(81276));
    const u = __importStar(require(59202));
    __exportStar(require(98766), exports);
    const l = require(21662);
    Object.defineProperty(exports, 'TextDocuments', {
      enumerable: true,
      get: function () {
        return l.TextDocuments;
      }
    });
    const g = require(50020);
    var d;
    Object.defineProperty(exports, 'NotebookDocuments', {
      enumerable: true,
      get: function () {
        return g.NotebookDocuments;
      }
    });
    __exportStar(require(67874), exports);
    (function (e) {
      e.all = {
        __brand: 'features',
        workspace: u.TextDocumentContentFeature,
        languages: c.InlineCompletionFeature
      };
    })(d || (exports.ProposedFeatures = d = {}));
  },
  3918: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.CallHierarchyFeature = undefined;
    const r = require(98766);
    exports.CallHierarchyFeature = e => class extends e {
      get callHierarchy() {
        return {
          onPrepare: e => this.connection.onRequest(r.CallHierarchyPrepareRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined)),
          onIncomingCalls: e => {
            const t = r.CallHierarchyIncomingCallsRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onOutgoingCalls: e => {
            const t = r.CallHierarchyOutgoingCallsRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  58491: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ConfigurationFeature = undefined;
    const a = require(98766);
    const A = __importStar(require(68867));
    exports.ConfigurationFeature = e => class extends e {
      getConfiguration(e) {
        if (e) {
          if (A.string(e)) {
            return this._getConfiguration({
              section: e
            });
          } else {
            return this._getConfiguration(e);
          }
        } else {
          return this._getConfiguration({});
        }
      }
      _getConfiguration(e) {
        const t = {
          items: Array.isArray(e) ? e : [e]
        };
        return this.connection.sendRequest(a.ConfigurationRequest.type, t).then(t => Array.isArray(t) ? Array.isArray(e) ? t : t[0] : Array.isArray(e) ? [] : null);
      }
    };
  },
  12874: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.DiagnosticFeature = undefined;
    const r = require(98766);
    exports.DiagnosticFeature = e => class extends e {
      get diagnostics() {
        return {
          refresh: () => this.connection.sendRequest(r.DiagnosticRefreshRequest.type),
          on: e => this.connection.onRequest(r.DocumentDiagnosticRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), this.attachPartialResultProgress(r.DocumentDiagnosticRequest.partialResult, t))),
          onWorkspace: e => this.connection.onRequest(r.WorkspaceDiagnosticRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), this.attachPartialResultProgress(r.WorkspaceDiagnosticRequest.partialResult, t)))
        };
      }
    };
  },
  12697: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FileOperationsFeature = undefined;
    const r = require(98766);
    exports.FileOperationsFeature = e => class extends e {
      onDidCreateFiles(e) {
        return this.connection.onNotification(r.DidCreateFilesNotification.type, t => e(t));
      }
      onDidRenameFiles(e) {
        return this.connection.onNotification(r.DidRenameFilesNotification.type, t => e(t));
      }
      onDidDeleteFiles(e) {
        return this.connection.onNotification(r.DidDeleteFilesNotification.type, t => e(t));
      }
      onWillCreateFiles(e) {
        return this.connection.onRequest(r.WillCreateFilesRequest.type, (t, n) => e(t, n));
      }
      onWillRenameFiles(e) {
        return this.connection.onRequest(r.WillRenameFilesRequest.type, (t, n) => e(t, n));
      }
      onWillDeleteFiles(e) {
        return this.connection.onRequest(r.WillDeleteFilesRequest.type, (t, n) => e(t, n));
      }
    };
  },
  46007: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.FoldingRangeFeature = undefined;
    const r = require(98766);
    exports.FoldingRangeFeature = e => class extends e {
      get foldingRange() {
        return {
          refresh: () => this.connection.sendRequest(r.FoldingRangeRefreshRequest.type),
          on: e => {
            const t = r.FoldingRangeRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  44635: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlayHintFeature = undefined;
    const r = require(98766);
    exports.InlayHintFeature = e => class extends e {
      get inlayHint() {
        return {
          refresh: () => this.connection.sendRequest(r.InlayHintRefreshRequest.type),
          on: e => this.connection.onRequest(r.InlayHintRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t))),
          resolve: e => this.connection.onRequest(r.InlayHintResolveRequest.type, (t, n) => e(t, n))
        };
      }
    };
  },
  81276: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineCompletionFeature = undefined;
    const r = require(98766);
    exports.InlineCompletionFeature = e => class extends e {
      get inlineCompletion() {
        return {
          on: e => this.connection.onRequest(r.InlineCompletionRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t)))
        };
      }
    };
  },
  31815: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InlineValueFeature = undefined;
    const r = require(98766);
    exports.InlineValueFeature = e => class extends e {
      get inlineValue() {
        return {
          refresh: () => this.connection.sendRequest(r.InlineValueRefreshRequest.type),
          on: e => this.connection.onRequest(r.InlineValueRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t)))
        };
      }
    };
  },
  8517: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.LinkedEditingRangeFeature = undefined;
    const r = require(98766);
    exports.LinkedEditingRangeFeature = e => class extends e {
      onLinkedEditingRange(e) {
        return this.connection.onRequest(r.LinkedEditingRangeRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined));
      }
    };
  },
  52936: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MonikerFeature = undefined;
    const r = require(98766);
    exports.MonikerFeature = e => class extends e {
      get moniker() {
        return {
          on: e => {
            const t = r.MonikerRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  50020: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.NotebookDocuments = exports.NotebookSyncFeature = undefined;
    const r = require(98766);
    const o = require(21662);
    exports.NotebookSyncFeature = e => class extends e {
      get synchronization() {
        return {
          onDidOpenNotebookDocument: e => this.connection.onNotification(r.DidOpenNotebookDocumentNotification.type, t => e(t)),
          onDidChangeNotebookDocument: e => this.connection.onNotification(r.DidChangeNotebookDocumentNotification.type, t => e(t)),
          onDidSaveNotebookDocument: e => this.connection.onNotification(r.DidSaveNotebookDocumentNotification.type, t => e(t)),
          onDidCloseNotebookDocument: e => this.connection.onNotification(r.DidCloseNotebookDocumentNotification.type, t => e(t))
        };
      }
    };
    class s {
      static NULL_DISPOSE = Object.freeze({
        dispose: () => {}
      });
      openHandler;
      changeHandler;
      closeHandler;
      onDidOpenTextDocument(e) {
        this.openHandler = e;
        return r.Disposable.create(() => {
          this.openHandler = undefined;
        });
      }
      openTextDocument(e) {
        return this.openHandler && this.openHandler(e);
      }
      onDidChangeTextDocument(e) {
        this.changeHandler = e;
        return r.Disposable.create(() => {
          this.changeHandler = e;
        });
      }
      changeTextDocument(e) {
        return this.changeHandler && this.changeHandler(e);
      }
      onDidCloseTextDocument(e) {
        this.closeHandler = e;
        return r.Disposable.create(() => {
          this.closeHandler = undefined;
        });
      }
      closeTextDocument(e) {
        return this.closeHandler && this.closeHandler(e);
      }
      onWillSaveTextDocument() {
        return s.NULL_DISPOSE;
      }
      onWillSaveTextDocumentWaitUntil() {
        return s.NULL_DISPOSE;
      }
      onDidSaveTextDocument() {
        return s.NULL_DISPOSE;
      }
    }
    exports.NotebookDocuments = class {
      notebookDocuments;
      notebookCellMap;
      _onDidOpen;
      _onDidSave;
      _onDidChange;
      _onDidClose;
      _cellTextDocuments;
      constructor(e) {
        if (e instanceof o.TextDocuments) {
          this._cellTextDocuments = e;
        } else {
          this._cellTextDocuments = new o.TextDocuments(e);
        }
        this.notebookDocuments = new Map();
        this.notebookCellMap = new Map();
        this._onDidOpen = new r.Emitter();
        this._onDidChange = new r.Emitter();
        this._onDidSave = new r.Emitter();
        this._onDidClose = new r.Emitter();
      }
      get cellTextDocuments() {
        return this._cellTextDocuments;
      }
      getCellTextDocument(e) {
        return this._cellTextDocuments.get(e.document);
      }
      getNotebookDocument(e) {
        return this.notebookDocuments.get(e);
      }
      getNotebookCell(e) {
        const t = this.notebookCellMap.get(e);
        return t && t[0];
      }
      findNotebookDocumentForCell(e) {
        const t = typeof e == 'string' ? e : e.document;
        const n = this.notebookCellMap.get(t);
        return n && n[1];
      }
      get onDidOpen() {
        return this._onDidOpen.event;
      }
      get onDidSave() {
        return this._onDidSave.event;
      }
      get onDidChange() {
        return this._onDidChange.event;
      }
      get onDidClose() {
        return this._onDidClose.event;
      }
      listen(e) {
        const t = new s();
        const n = [];
        n.push(this.cellTextDocuments.listen(t));
        n.push(e.notebooks.synchronization.onDidOpenNotebookDocument(async e => {
          this.notebookDocuments.set(e.notebookDocument.uri, e.notebookDocument);
          for (const n of e.cellTextDocuments) {
            await t.openTextDocument({
              textDocument: n
            });
          }
          this.updateCellMap(e.notebookDocument);
          this._onDidOpen.fire(e.notebookDocument);
        }));
        n.push(e.notebooks.synchronization.onDidChangeNotebookDocument(async e => {
          const n = this.notebookDocuments.get(e.notebookDocument.uri);
          if (n === undefined) {
            return;
          }
          n.version = e.notebookDocument.version;
          const r = n.metadata;
          let o = false;
          const s = e.change;
          if (s.metadata !== undefined) {
            o = true;
            n.metadata = s.metadata;
          }
          const a = [];
          const A = [];
          const c = [];
          const u = [];
          if (s.cells !== undefined) {
            const e = s.cells;
            if (e.structure !== undefined) {
              const r = e.structure.array;
              n.cells.splice(r.start, r.deleteCount, ...(r.cells !== undefined ? r.cells : []));
              if (e.structure.didOpen !== undefined) {
                for (const n of e.structure.didOpen) {
                  await t.openTextDocument({
                    textDocument: n
                  });
                  a.push(n.uri);
                }
              }
              if (e.structure.didClose) {
                for (const n of e.structure.didClose) {
                  await t.closeTextDocument({
                    textDocument: n
                  });
                  A.push(n.uri);
                }
              }
            }
            if (e.data !== undefined) {
              const t = new Map(e.data.map(e => [e.document, e]));
              for (let e = 0; e <= n.cells.length; e++) {
                const r = t.get(n.cells[e].document);
                if (r !== undefined) {
                  const o = n.cells.splice(e, 1, r);
                  c.push({
                    old: o[0],
                    new: r
                  });
                  t.delete(r.document);
                  if (t.size === 0) {
                    break;
                  }
                }
              }
            }
            if (e.textContent !== undefined) {
              for (const n of e.textContent) {
                await t.changeTextDocument({
                  textDocument: n.document,
                  contentChanges: n.changes
                });
                u.push(n.document.uri);
              }
            }
          }
          this.updateCellMap(n);
          const l = {
            notebookDocument: n
          };
          if (o) {
            l.metadata = {
              old: r,
              new: n.metadata
            };
          }
          const g = [];
          for (const e of a) {
            g.push(this.getNotebookCell(e));
          }
          const d = [];
          for (const e of A) {
            d.push(this.getNotebookCell(e));
          }
          const h = [];
          for (const e of u) {
            h.push(this.getNotebookCell(e));
          }
          if (g.length > 0 || d.length > 0 || c.length > 0 || h.length > 0) {
            l.cells = {
              added: g,
              removed: d,
              changed: {
                data: c,
                textContent: h
              }
            };
          }
          if (l.metadata !== undefined || l.cells !== undefined) {
            this._onDidChange.fire(l);
          }
        }));
        n.push(e.notebooks.synchronization.onDidSaveNotebookDocument(e => {
          const t = this.notebookDocuments.get(e.notebookDocument.uri);
          if (t !== undefined) {
            this._onDidSave.fire(t);
          }
        }));
        n.push(e.notebooks.synchronization.onDidCloseNotebookDocument(async e => {
          const n = this.notebookDocuments.get(e.notebookDocument.uri);
          if (n !== undefined) {
            this._onDidClose.fire(n);
            for (const n of e.cellTextDocuments) {
              await t.closeTextDocument({
                textDocument: n
              });
            }
            this.notebookDocuments.delete(e.notebookDocument.uri);
            for (const e of n.cells) {
              this.notebookCellMap.delete(e.document);
            }
          }
        }));
        return r.Disposable.create(() => {
          n.forEach(e => e.dispose());
        });
      }
      updateCellMap(e) {
        for (const t of e.cells) {
          this.notebookCellMap.set(t.document, [t, e]);
        }
      }
    };
  },
  92938: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = undefined;
    const r = require(98766);
    const o = require(16116);
    class s {
      _connection;
      _token;
      static Instances = new Map();
      constructor(e, t) {
        this._connection = e;
        this._token = t;
        s.Instances.set(this._token, this);
      }
      begin(e, t, n, o) {
        const s = {
          kind: 'begin',
          title: e,
          message: n,
          cancellable: o
        };
        if (typeof t == 'number') {
          s.percentage = Math.round(t);
        }
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, s);
      }
      report(e, t) {
        const n = {
          kind: 'report'
        };
        if (typeof e == 'number') {
          n.percentage = Math.round(e);
          if (t !== undefined) {
            n.message = t;
          }
        } else {
          n.message = e;
        }
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, n);
      }
      done() {
        s.Instances.delete(this._token);
        this._connection.sendProgress(r.WorkDoneProgress.type, this._token, {
          kind: 'end'
        });
      }
    }
    class a extends s {
      _source;
      constructor(e, t) {
        super(e, t);
        this._source = new r.CancellationTokenSource();
      }
      get token() {
        return this._source.token;
      }
      done() {
        this._source.dispose();
        super.done();
      }
      cancel() {
        this._source.cancel();
      }
    }
    class A {
      constructor() {}
      begin() {}
      report() {}
      done() {}
    }
    class c extends A {
      _source;
      constructor() {
        super();
        this._source = new r.CancellationTokenSource();
      }
      get token() {
        return this._source.token;
      }
      done() {
        this._source.dispose();
      }
      cancel() {
        this._source.cancel();
      }
    }
    exports.attachWorkDone = function (e, t) {
      if (t === undefined || t.workDoneToken === undefined) {
        return new A();
      }
      const n = t.workDoneToken;
      delete t.workDoneToken;
      return new s(e, n);
    };
    var u;
    exports.ProgressFeature = e => class extends e {
      _progressSupported;
      constructor() {
        super();
        this._progressSupported = false;
      }
      initialize(e) {
        super.initialize(e);
        if (e?.window?.workDoneProgress === true) {
          this._progressSupported = true;
          this.connection.onNotification(r.WorkDoneProgressCancelNotification.type, e => {
            const t = s.Instances.get(e.token);
            if (t instanceof a || t instanceof c) {
              t.cancel();
            }
          });
        }
      }
      attachWorkDoneProgress(e) {
        if (e === undefined) {
          return new A();
        } else {
          return new s(this.connection, e);
        }
      }
      createWorkDoneProgress() {
        if (this._progressSupported) {
          const e = o.generateUuid();
          return this.connection.sendRequest(r.WorkDoneProgressCreateRequest.type, {
            token: e
          }).then(() => new a(this.connection, e));
        }
        return Promise.resolve(new c());
      }
    };
    (function (e) {
      e.type = new r.ProgressType();
    })(u ||= {});
    class l {
      _connection;
      _token;
      constructor(e, t) {
        this._connection = e;
        this._token = t;
      }
      report(e) {
        this._connection.sendProgress(u.type, this._token, e);
      }
    }
    exports.attachPartialResult = function (e, t) {
      if (t === undefined || t.partialResultToken === undefined) {
        return;
      }
      const n = t.partialResultToken;
      delete t.partialResultToken;
      return new l(e, n);
    };
  },
  22655: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.SemanticTokensBuilder = exports.SemanticTokensDiff = exports.SemanticTokensFeature = undefined;
    const r = require(98766);
    exports.SemanticTokensFeature = e => class extends e {
      get semanticTokens() {
        return {
          refresh: () => this.connection.sendRequest(r.SemanticTokensRefreshRequest.type),
          on: e => {
            const t = r.SemanticTokensRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onDelta: e => {
            const t = r.SemanticTokensDeltaRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onRange: e => {
            const t = r.SemanticTokensRangeRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
    class o {
      originalSequence;
      modifiedSequence;
      constructor(e, t) {
        this.originalSequence = e;
        this.modifiedSequence = t;
      }
      computeDiff() {
        const e = this.originalSequence.length;
        const t = this.modifiedSequence.length;
        let n = 0;
        while (n < t && n < e && this.originalSequence[n] === this.modifiedSequence[n]) {
          n++;
        }
        if (n < t && n < e) {
          let r = e - 1;
          let o = t - 1;
          while (r >= n && o >= n && this.originalSequence[r] === this.modifiedSequence[o]) {
            r--;
            o--;
          }
          if (r < n || o < n) {
            r++;
            o++;
          }
          const s = r - n + 1;
          const a = this.modifiedSequence.slice(n, o + 1);
          if (a.length === 1 && a[0] === this.originalSequence[r]) {
            return [{
              start: n,
              deleteCount: s - 1
            }];
          } else {
            return [{
              start: n,
              deleteCount: s,
              data: a
            }];
          }
        }
        if (n < t) {
          return [{
            start: n,
            deleteCount: 0,
            data: this.modifiedSequence.slice(n)
          }];
        } else {
          if (n < e) {
            return [{
              start: n,
              deleteCount: e - n
            }];
          } else {
            return [];
          }
        }
      }
    }
    exports.SemanticTokensDiff = o;
    class s {
      _id;
      _prevLine;
      _prevChar;
      _dataIsSortedAndDeltaEncoded;
      _data;
      _dataNonDelta;
      _dataLen;
      _prevData;
      constructor() {
        this._prevData = undefined;
        this.initialize();
      }
      initialize() {
        this._id = Date.now();
        this._prevLine = 0;
        this._prevChar = 0;
        this._data = [];
        this._dataNonDelta = [];
        this._dataLen = 0;
        this._dataIsSortedAndDeltaEncoded = true;
      }
      push(e, t, n, r, o) {
        if (this._dataIsSortedAndDeltaEncoded && (e < this._prevLine || e === this._prevLine && t < this._prevChar)) {
          this._dataIsSortedAndDeltaEncoded = false;
          this._dataNonDelta = s._deltaDecode(this._data);
        }
        let a = e;
        let A = t;
        if (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {
          a -= this._prevLine;
          if (a === 0) {
            A -= this._prevChar;
          }
        }
        const c = this._dataIsSortedAndDeltaEncoded ? this._data : this._dataNonDelta;
        c[this._dataLen++] = a;
        c[this._dataLen++] = A;
        c[this._dataLen++] = n;
        c[this._dataLen++] = r;
        c[this._dataLen++] = o;
        this._prevLine = e;
        this._prevChar = t;
      }
      get id() {
        return this._id.toString();
      }
      static _deltaDecode(e) {
        const t = e.length / 5 | 0;
        let n = 0;
        let r = 0;
        const o = [];
        for (let s = 0; s < t; s++) {
          const t = s * 5;
          let a = e[t];
          let A = e[t + 1];
          if (a === 0) {
            a = n;
            A += r;
          } else {
            a += n;
          }
          const c = e[t + 2];
          const u = e[t + 3];
          const l = e[t + 4];
          o[t + 0] = a;
          o[t + 1] = A;
          o[t + 2] = c;
          o[t + 3] = u;
          o[t + 4] = l;
          n = a;
          r = A;
        }
        return o;
      }
      static _sortAndDeltaEncode(e) {
        const t = [];
        const n = e.length / 5 | 0;
        for (let e = 0; e < n; e++) {
          t[e] = e;
        }
        t.sort((t, n) => {
          const r = e[t * 5];
          const o = e[n * 5];
          if (r === o) {
            return e[t * 5 + 1] - e[n * 5 + 1];
          }
          return r - o;
        });
        const r = [];
        let o = 0;
        let s = 0;
        for (let a = 0; a < n; a++) {
          const n = t[a] * 5;
          const A = e[n + 0];
          const c = e[n + 1];
          const u = e[n + 2];
          const l = e[n + 3];
          const g = e[n + 4];
          const d = A - o;
          const h = d === 0 ? c - s : c;
          const f = a * 5;
          r[f + 0] = d;
          r[f + 1] = h;
          r[f + 2] = u;
          r[f + 3] = l;
          r[f + 4] = g;
          o = A;
          s = c;
        }
        return r;
      }
      getFinalDataDelta() {
        if (this._dataIsSortedAndDeltaEncoded) {
          return this._data;
        } else {
          return s._sortAndDeltaEncode(this._dataNonDelta);
        }
      }
      previousResult(e) {
        if (this.id === e) {
          this._prevData = this.getFinalDataDelta();
        }
        this.initialize();
      }
      build() {
        this._prevData = undefined;
        return {
          resultId: this.id,
          data: this.getFinalDataDelta()
        };
      }
      canBuildEdits() {
        return this._prevData !== undefined;
      }
      buildEdits() {
        if (this._prevData !== undefined) {
          return {
            resultId: this.id,
            edits: new o(this._prevData, this.getFinalDataDelta()).computeDiff()
          };
        } else {
          return this.build();
        }
      }
    }
    exports.SemanticTokensBuilder = s;
  },
  67874: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.createConnection = exports.combineFeatures = exports.combineNotebooksFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._NotebooksImpl = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = undefined;
    const a = require(98766);
    const A = __importStar(require(68867));
    const c = __importStar(require(16116));
    const u = require(92938);
    const l = require(58491);
    const g = require(32112);
    const d = require(3918);
    const h = require(22655);
    const f = require(58817);
    const p = require(12697);
    const m = require(8517);
    const I = require(65026);
    const E = require(31815);
    const y = require(46007);
    const w = require(44635);
    const _ = require(12874);
    const v = require(50020);
    const b = require(52936);
    function B(e) {
      if (e !== null) {
        return e;
      }
    }
    exports.ErrorMessageTracker = class {
      _messages;
      constructor() {
        this._messages = Object.create(null);
      }
      add(e) {
        let t = this._messages[e];
        if (!t) {
          t = 0;
        }
        t++;
        this._messages[e] = t;
      }
      sendErrors(e) {
        Object.keys(this._messages).forEach(t => {
          e.window.showErrorMessage(t);
        });
      }
    };
    class Q {
      _rawConnection;
      _connection;
      constructor() {}
      rawAttach(e) {
        this._rawConnection = e;
      }
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      fillServerCapabilities(e) {}
      initialize(e) {}
      error(e) {
        this.send(a.MessageType.Error, e);
      }
      warn(e) {
        this.send(a.MessageType.Warning, e);
      }
      info(e) {
        this.send(a.MessageType.Info, e);
      }
      log(e) {
        this.send(a.MessageType.Log, e);
      }
      debug(e) {
        this.send(a.MessageType.Debug, e);
      }
      send(e, t) {
        if (this._rawConnection) {
          this._rawConnection.sendNotification(a.LogMessageNotification.type, {
            type: e,
            message: t
          }).catch(() => {
            a.RAL().console.error('Sending log message failed');
          });
        }
      }
    }
    const D = f.ShowDocumentFeature(u.ProgressFeature(class {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      showErrorMessage(e, ...t) {
        const n = {
          type: a.MessageType.Error,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
      showWarningMessage(e, ...t) {
        const n = {
          type: a.MessageType.Warning,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
      showInformationMessage(e, ...t) {
        const n = {
          type: a.MessageType.Info,
          message: e,
          actions: t
        };
        return this.connection.sendRequest(a.ShowMessageRequest.type, n).then(B);
      }
    }));
    var S;
    var T;
    (function (e) {
      e.create = function () {
        return new R();
      };
    })(S || (exports.BulkRegistration = S = {}));
    class R {
      _registrations = [];
      _registered = new Set();
      add(e, t) {
        const n = A.string(e) ? e : e.method;
        if (this._registered.has(n)) {
          throw new Error(`${n} is already added to this registration`);
        }
        const r = c.generateUuid();
        this._registrations.push({
          id: r,
          method: n,
          registerOptions: t || {}
        });
        this._registered.add(n);
      }
      asRegistrationParams() {
        return {
          registrations: this._registrations
        };
      }
    }
    (function (e) {
      e.create = function () {
        return new k(undefined, []);
      };
    })(T || (exports.BulkUnregistration = T = {}));
    class k {
      _connection;
      _unregistrations = new Map();
      constructor(e, t) {
        this._connection = e;
        t.forEach(e => {
          this._unregistrations.set(e.method, e);
        });
      }
      get isAttached() {
        return !!this._connection;
      }
      attach(e) {
        this._connection = e;
      }
      add(e) {
        this._unregistrations.set(e.method, e);
      }
      dispose() {
        const e = [];
        for (const t of this._unregistrations.values()) {
          e.push(t);
        }
        const t = {
          unregisterations: e
        };
        this._connection.sendRequest(a.UnregistrationRequest.type, t).catch(() => {
          this._connection.console.info('Bulk unregistration failed.');
        });
      }
      disposeSingle(e) {
        const t = A.string(e) ? e : e.method;
        const n = this._unregistrations.get(t);
        if (!n) {
          return false;
        }
        const r = {
          unregisterations: [n]
        };
        this._connection.sendRequest(a.UnregistrationRequest.type, r).then(() => {
          this._unregistrations.delete(t);
        }, e => {
          this._connection.console.info(`Un-registering request handler for ${n.id} failed.`);
        });
        return true;
      }
    }
    class x {
      _connection;
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      register(e, t, n) {
        if (e instanceof R) {
          return this.registerMany(e);
        } else {
          if (e instanceof k) {
            return this.registerSingle1(e, t, n);
          } else {
            return this.registerSingle2(e, t);
          }
        }
      }
      registerSingle1(e, t, n) {
        const r = A.string(t) ? t : t.method;
        const o = c.generateUuid();
        const s = {
          registrations: [{
            id: o,
            method: r,
            registerOptions: n || {}
          }]
        };
        if (!e.isAttached) {
          e.attach(this.connection);
        }
        return this.connection.sendRequest(a.RegistrationRequest.type, s).then(t => {
          e.add({
            id: o,
            method: r
          });
          return e;
        }, e => {
          this.connection.console.info(`Registering request handler for ${r} failed.`);
          return Promise.reject(e);
        });
      }
      registerSingle2(e, t) {
        const n = A.string(e) ? e : e.method;
        const r = c.generateUuid();
        const o = {
          registrations: [{
            id: r,
            method: n,
            registerOptions: t || {}
          }]
        };
        return this.connection.sendRequest(a.RegistrationRequest.type, o).then(e => a.Disposable.create(() => {
          this.unregisterSingle(r, n).catch(() => {
            this.connection.console.info(`Un-registering capability with id ${r} failed.`);
          });
        }), e => {
          this.connection.console.info(`Registering request handler for ${n} failed.`);
          return Promise.reject(e);
        });
      }
      unregisterSingle(e, t) {
        const n = {
          unregisterations: [{
            id: e,
            method: t
          }]
        };
        return this.connection.sendRequest(a.UnregistrationRequest.type, n).catch(() => {
          this.connection.console.info(`Un-registering request handler for ${e} failed.`);
        });
      }
      registerMany(e) {
        const t = e.asRegistrationParams();
        return this.connection.sendRequest(a.RegistrationRequest.type, t).then(() => new k(this._connection, t.registrations.map(e => ({
          id: e.id,
          method: e.method
        }))), e => {
          this.connection.console.info('Bulk registration failed.');
          return Promise.reject(e);
        });
      }
    }
    const P = p.FileOperationsFeature(g.WorkspaceFoldersFeature(l.ConfigurationFeature(class {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      applyEdit(e) {
        const t = (n = e) && n.edit ? e : {
          edit: e
        };
        var n;
        return this.connection.sendRequest(a.ApplyWorkspaceEditRequest.type, t);
      }
    })));
    class F {
      _trace;
      _connection;
      constructor() {
        this._trace = a.Trace.Off;
      }
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      set trace(e) {
        this._trace = e;
      }
      log(e, t) {
        if (this._trace !== a.Trace.Off) {
          this.connection.sendNotification(a.LogTraceNotification.type, {
            message: e,
            verbose: this._trace === a.Trace.Verbose ? t : undefined
          }).catch(() => {});
        }
      }
    }
    class M {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      logEvent(e) {
        this.connection.sendNotification(a.TelemetryEventNotification.type, e).catch(() => {
          this.connection.console.log('Sending TelemetryEventNotification failed');
        });
      }
    }
    class O {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      attachWorkDoneProgress(e) {
        return u.attachWorkDone(this.connection, e);
      }
      attachPartialResultProgress(e, t) {
        return u.attachPartialResult(this.connection, t);
      }
    }
    exports._LanguagesImpl = O;
    const N = y.FoldingRangeFeature(b.MonikerFeature(_.DiagnosticFeature(w.InlayHintFeature(E.InlineValueFeature(I.TypeHierarchyFeature(m.LinkedEditingRangeFeature(h.SemanticTokensFeature(d.CallHierarchyFeature(O)))))))));
    class L {
      _connection;
      constructor() {}
      attach(e) {
        this._connection = e;
      }
      get connection() {
        if (!this._connection) {
          throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
      }
      initialize(e) {}
      fillServerCapabilities(e) {}
      attachWorkDoneProgress(e) {
        return u.attachWorkDone(this.connection, e);
      }
      attachPartialResultProgress(e, t) {
        return u.attachPartialResult(this.connection, t);
      }
    }
    exports._NotebooksImpl = L;
    const K = v.NotebookSyncFeature(L);
    function U(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function j(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function q(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function G(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function Y(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function H(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function J(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    function z(e, t) {
      return function (n) {
        return t(e(n));
      };
    }
    exports.combineConsoleFeatures = U;
    exports.combineTelemetryFeatures = j;
    exports.combineTracerFeatures = q;
    exports.combineClientFeatures = G;
    exports.combineWindowFeatures = Y;
    exports.combineWorkspaceFeatures = H;
    exports.combineLanguagesFeatures = J;
    exports.combineNotebooksFeatures = z;
    exports.combineFeatures = function (e, t) {
      function n(e, t, n) {
        if (e && t) {
          return n(e, t);
        } else {
          return e || t;
        }
      }
      return {
        __brand: 'features',
        console: n(e.console, t.console, U),
        tracer: n(e.tracer, t.tracer, q),
        telemetry: n(e.telemetry, t.telemetry, j),
        client: n(e.client, t.client, G),
        window: n(e.window, t.window, Y),
        workspace: n(e.workspace, t.workspace, H),
        languages: n(e.languages, t.languages, J),
        notebooks: n(e.notebooks, t.notebooks, z)
      };
    };
    exports.createConnection = function (e, t, n) {
      const r = n && n.console ? new (n.console(Q))() : new Q();
      const o = e(r);
      r.rawAttach(o);
      const s = n && n.tracer ? new (n.tracer(F))() : new F();
      const c = n && n.telemetry ? new (n.telemetry(M))() : new M();
      const l = n && n.client ? new (n.client(x))() : new x();
      const g = n && n.window ? new (n.window(D))() : new D();
      const d = n && n.workspace ? new (n.workspace(P))() : new P();
      const h = n && n.languages ? new (n.languages(N))() : new N();
      const f = n && n.notebooks ? new (n.notebooks(K))() : new K();
      const p = [r, s, c, l, g, d, h, f];
      let m;
      let I;
      let E;
      const y = {
        listen: () => o.listen(),
        sendRequest: (e, ...t) => o.sendRequest(A.string(e) ? e : e.method, ...t),
        onRequest: (e, t) => o.onRequest(e, t),
        sendNotification: (e, t) => {
          const n = A.string(e) ? e : e.method;
          return o.sendNotification(n, t);
        },
        onNotification: (e, t) => o.onNotification(e, t),
        onProgress: o.onProgress,
        sendProgress: o.sendProgress,
        onInitialize: e => {
          I = e;
          return {
            dispose: () => {
              I = undefined;
            }
          };
        },
        onInitialized: e => o.onNotification(a.InitializedNotification.type, e),
        onShutdown: e => {
          m = e;
          return {
            dispose: () => {
              m = undefined;
            }
          };
        },
        onExit: e => {
          E = e;
          return {
            dispose: () => {
              E = undefined;
            }
          };
        },
        get console() {
          return r;
        },
        get telemetry() {
          return c;
        },
        get tracer() {
          return s;
        },
        get client() {
          return l;
        },
        get window() {
          return g;
        },
        get workspace() {
          return d;
        },
        get languages() {
          return h;
        },
        get notebooks() {
          return f;
        },
        onDidChangeConfiguration: e => o.onNotification(a.DidChangeConfigurationNotification.type, e),
        onDidChangeWatchedFiles: e => o.onNotification(a.DidChangeWatchedFilesNotification.type, e),
        __textDocumentSync: undefined,
        onDidOpenTextDocument: e => o.onNotification(a.DidOpenTextDocumentNotification.type, e),
        onDidChangeTextDocument: e => o.onNotification(a.DidChangeTextDocumentNotification.type, e),
        onDidCloseTextDocument: e => o.onNotification(a.DidCloseTextDocumentNotification.type, e),
        onWillSaveTextDocument: e => o.onNotification(a.WillSaveTextDocumentNotification.type, e),
        onWillSaveTextDocumentWaitUntil: e => o.onRequest(a.WillSaveTextDocumentWaitUntilRequest.type, e),
        onDidSaveTextDocument: e => o.onNotification(a.DidSaveTextDocumentNotification.type, e),
        sendDiagnostics: e => o.sendNotification(a.PublishDiagnosticsNotification.type, e),
        onHover: e => o.onRequest(a.HoverRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onCompletion: e => o.onRequest(a.CompletionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCompletionResolve: e => o.onRequest(a.CompletionResolveRequest.type, e),
        onSignatureHelp: e => o.onRequest(a.SignatureHelpRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDeclaration: e => o.onRequest(a.DeclarationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDefinition: e => o.onRequest(a.DefinitionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onTypeDefinition: e => o.onRequest(a.TypeDefinitionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onImplementation: e => o.onRequest(a.ImplementationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onReferences: e => o.onRequest(a.ReferencesRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentHighlight: e => o.onRequest(a.DocumentHighlightRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentSymbol: e => o.onRequest(a.DocumentSymbolRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onWorkspaceSymbol: e => o.onRequest(a.WorkspaceSymbolRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onWorkspaceSymbolResolve: e => o.onRequest(a.WorkspaceSymbolResolveRequest.type, e),
        onCodeAction: e => o.onRequest(a.CodeActionRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCodeActionResolve: e => o.onRequest(a.CodeActionResolveRequest.type, (t, n) => e(t, n)),
        onCodeLens: e => o.onRequest(a.CodeLensRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onCodeLensResolve: e => o.onRequest(a.CodeLensResolveRequest.type, (t, n) => e(t, n)),
        onDocumentFormatting: e => o.onRequest(a.DocumentFormattingRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDocumentRangeFormatting: e => o.onRequest(a.DocumentRangeFormattingRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onDocumentOnTypeFormatting: e => o.onRequest(a.DocumentOnTypeFormattingRequest.type, (t, n) => e(t, n)),
        onRenameRequest: e => o.onRequest(a.RenameRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        onPrepareRename: e => o.onRequest(a.PrepareRenameRequest.type, (t, n) => e(t, n)),
        onDocumentLinks: e => o.onRequest(a.DocumentLinkRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onDocumentLinkResolve: e => o.onRequest(a.DocumentLinkResolveRequest.type, (t, n) => e(t, n)),
        onDocumentColor: e => o.onRequest(a.DocumentColorRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onColorPresentation: e => o.onRequest(a.ColorPresentationRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onFoldingRanges: e => o.onRequest(a.FoldingRangeRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onSelectionRanges: e => o.onRequest(a.SelectionRangeRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), u.attachPartialResult(o, t))),
        onExecuteCommand: e => o.onRequest(a.ExecuteCommandRequest.type, (t, n) => e(t, n, u.attachWorkDone(o, t), undefined)),
        dispose: () => o.dispose()
      };
      for (const e of p) {
        e.attach(y);
      }
      o.onRequest(a.InitializeRequest.type, e => {
        t.initialize(e);
        if (A.string(e.trace)) {
          s.trace = a.Trace.fromString(e.trace);
        }
        for (const t of p) {
          t.initialize(e.capabilities);
        }
        if (I) {
          const t = I(e, new a.CancellationTokenSource().token, u.attachWorkDone(o, e), undefined);
          return (n = t, n instanceof Promise ? n : A.thenable(n) ? new Promise((e, t) => {
            n.then(t => e(t), e => t(e));
          }) : Promise.resolve(n)).then(e => {
            if (e instanceof a.ResponseError) {
              return e;
            }
            let t = e;
            if (!t) {
              t = {
                capabilities: {}
              };
            }
            let n = t.capabilities;
            if (!n) {
              n = {};
              t.capabilities = n;
            }
            if (n.textDocumentSync === undefined || n.textDocumentSync === null) {
              n.textDocumentSync = A.number(y.__textDocumentSync) ? y.__textDocumentSync : a.TextDocumentSyncKind.None;
            } else {
              if (!A.number(n.textDocumentSync) && !A.number(n.textDocumentSync.change)) {
                n.textDocumentSync.change = A.number(y.__textDocumentSync) ? y.__textDocumentSync : a.TextDocumentSyncKind.None;
              }
            }
            for (const e of p) {
              e.fillServerCapabilities(n);
            }
            return t;
          });
        }
        {
          const e = {
            capabilities: {
              textDocumentSync: a.TextDocumentSyncKind.None
            }
          };
          for (const t of p) {
            t.fillServerCapabilities(e.capabilities);
          }
          return e;
        }
        var n;
      });
      o.onRequest(a.ShutdownRequest.type, () => {
        t.shutdownReceived = true;
        if (m) {
          return m(new a.CancellationTokenSource().token);
        } else {
          return undefined;
        }
      });
      o.onNotification(a.ExitNotification.type, () => {
        try {
          if (E) {
            return E();
          }
        } finally {
          if (t.shutdownReceived) {
            t.exit(0);
          } else {
            t.exit(1);
          }
        }
      });
      o.onNotification(a.SetTraceNotification.type, e => {
        s.trace = a.Trace.fromString(e.value);
      });
      return y;
    };
  },
  58817: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.ShowDocumentFeature = undefined;
    const r = require(98766);
    exports.ShowDocumentFeature = e => class extends e {
      showDocument(e) {
        return this.connection.sendRequest(r.ShowDocumentRequest.type, e);
      }
    };
  },
  59202: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocumentContentFeature = undefined;
    const r = require(98766);
    exports.TextDocumentContentFeature = e => class extends e {
      get textDocumentContent() {
        return {
          refresh: e => this.connection.sendRequest(r.TextDocumentContentRefreshRequest.type, {
            uri: e
          }),
          on: e => this.connection.onRequest(r.TextDocumentContentRequest.type, (t, n) => e(t, n))
        };
      }
    };
  },
  21662: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TextDocuments = undefined;
    const r = require(98766);
    exports.TextDocuments = class {
      _configuration;
      _syncedDocuments;
      _onDidChangeContent;
      _onDidOpen;
      _onDidClose;
      _onDidSave;
      _onWillSave;
      _willSaveWaitUntil;
      constructor(e) {
        this._configuration = e;
        this._syncedDocuments = new Map();
        this._onDidChangeContent = new r.Emitter();
        this._onDidOpen = new r.Emitter();
        this._onDidClose = new r.Emitter();
        this._onDidSave = new r.Emitter();
        this._onWillSave = new r.Emitter();
      }
      get onDidOpen() {
        return this._onDidOpen.event;
      }
      get onDidChangeContent() {
        return this._onDidChangeContent.event;
      }
      get onWillSave() {
        return this._onWillSave.event;
      }
      onWillSaveWaitUntil(e) {
        this._willSaveWaitUntil = e;
      }
      get onDidSave() {
        return this._onDidSave.event;
      }
      get onDidClose() {
        return this._onDidClose.event;
      }
      get(e) {
        return this._syncedDocuments.get(e);
      }
      all() {
        return Array.from(this._syncedDocuments.values());
      }
      keys() {
        return Array.from(this._syncedDocuments.keys());
      }
      listen(e) {
        e.__textDocumentSync = r.TextDocumentSyncKind.Incremental;
        const t = [];
        t.push(e.onDidOpenTextDocument(e => {
          const t = e.textDocument;
          const n = this._configuration.create(t.uri, t.languageId, t.version, t.text);
          this._syncedDocuments.set(t.uri, n);
          const r = Object.freeze({
            document: n
          });
          this._onDidOpen.fire(r);
          this._onDidChangeContent.fire(r);
        }));
        t.push(e.onDidChangeTextDocument(e => {
          const t = e.textDocument;
          const n = e.contentChanges;
          if (n.length === 0) {
            return;
          }
          const {
            version: r
          } = t;
          if (r == null) {
            throw new Error(`Received document change event for ${t.uri} without valid version identifier`);
          }
          let o = this._syncedDocuments.get(t.uri);
          if (o !== undefined) {
            o = this._configuration.update(o, n, r);
            this._syncedDocuments.set(t.uri, o);
            this._onDidChangeContent.fire(Object.freeze({
              document: o
            }));
          }
        }));
        t.push(e.onDidCloseTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._syncedDocuments.delete(e.textDocument.uri);
            this._onDidClose.fire(Object.freeze({
              document: t
            }));
          }
        }));
        t.push(e.onWillSaveTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._onWillSave.fire(Object.freeze({
              document: t,
              reason: e.reason
            }));
          }
        }));
        t.push(e.onWillSaveTextDocumentWaitUntil((e, t) => {
          const n = this._syncedDocuments.get(e.textDocument.uri);
          if (n !== undefined && this._willSaveWaitUntil) {
            return this._willSaveWaitUntil(Object.freeze({
              document: n,
              reason: e.reason
            }), t);
          } else {
            return [];
          }
        }));
        t.push(e.onDidSaveTextDocument(e => {
          const t = this._syncedDocuments.get(e.textDocument.uri);
          if (t !== undefined) {
            this._onDidSave.fire(Object.freeze({
              document: t
            }));
          }
        }));
        return r.Disposable.create(() => {
          t.forEach(e => e.dispose());
        });
      }
    };
  },
  65026: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TypeHierarchyFeature = undefined;
    const r = require(98766);
    exports.TypeHierarchyFeature = e => class extends e {
      get typeHierarchy() {
        return {
          onPrepare: e => this.connection.onRequest(r.TypeHierarchyPrepareRequest.type, (t, n) => e(t, n, this.attachWorkDoneProgress(t), undefined)),
          onSupertypes: e => {
            const t = r.TypeHierarchySupertypesRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          },
          onSubtypes: e => {
            const t = r.TypeHierarchySubtypesRequest.type;
            return this.connection.onRequest(t, (n, r) => e(n, r, this.attachWorkDoneProgress(n), this.attachPartialResultProgress(t, n)));
          }
        };
      }
    };
  },
  68867: (module, exports) => {
    "use strict";

    function n(e) {
      return typeof e == 'string' || e instanceof String;
    }
    function r(e) {
      return typeof e == 'function';
    }
    function o(e) {
      return Array.isArray(e);
    }
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = undefined;
    exports.boolean = function (e) {
      return e === true || e === false;
    };
    exports.string = n;
    exports.number = function (e) {
      return typeof e == 'number' || e instanceof Number;
    };
    exports.error = function (e) {
      return e instanceof Error;
    };
    exports.func = r;
    exports.array = o;
    exports.stringArray = function (e) {
      return o(e) && e.every(e => n(e));
    };
    exports.typedArray = function (e, t) {
      return Array.isArray(e) && e.every(t);
    };
    exports.thenable = function (e) {
      return e && r(e.then);
    };
  },
  16116: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = undefined;
    class n {
      _value;
      constructor(e) {
        this._value = e;
      }
      asHex() {
        return this._value;
      }
      equals(e) {
        return this.asHex() === e.asHex();
      }
    }
    class r extends n {
      static _chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
      static _timeHighBits = ['8', '9', 'a', 'b'];
      static _oneOf(e) {
        return e[Math.floor(e.length * Math.random())];
      }
      static _randomHex() {
        return r._oneOf(r._chars);
      }
      constructor() {
        super([r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), '-', '4', r._randomHex(), r._randomHex(), r._randomHex(), '-', r._oneOf(r._timeHighBits), r._randomHex(), r._randomHex(), r._randomHex(), '-', r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex(), r._randomHex()].join(''));
      }
    }
    function o() {
      return new r();
    }
    exports.empty = new n('00000000-0000-0000-0000-000000000000');
    exports.v4 = o;
    const s = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
    function a(e) {
      return s.test(e);
    }
    exports.isUUID = a;
    exports.parse = function (e) {
      if (!a(e)) {
        throw new Error('invalid uuid');
      }
      return new n(e);
    };
    exports.generateUuid = function () {
      return o().asHex();
    };
  },
  32112: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.WorkspaceFoldersFeature = undefined;
    const r = require(98766);
    exports.WorkspaceFoldersFeature = e => class extends e {
      _onDidChangeWorkspaceFolders;
      _unregistration;
      _notificationIsAutoRegistered;
      constructor() {
        super();
        this._notificationIsAutoRegistered = false;
      }
      initialize(e) {
        super.initialize(e);
        const t = e.workspace;
        if (t && t.workspaceFolders) {
          this._onDidChangeWorkspaceFolders = new r.Emitter();
          this.connection.onNotification(r.DidChangeWorkspaceFoldersNotification.type, e => {
            this._onDidChangeWorkspaceFolders.fire(e.event);
          });
        }
      }
      fillServerCapabilities(e) {
        super.fillServerCapabilities(e);
        const t = e.workspace?.workspaceFolders?.changeNotifications;
        this._notificationIsAutoRegistered = t === true || typeof t == 'string';
      }
      getWorkspaceFolders() {
        return this.connection.sendRequest(r.WorkspaceFoldersRequest.type);
      }
      get onDidChangeWorkspaceFolders() {
        if (!this._onDidChangeWorkspaceFolders) {
          throw new Error('Client doesn\'t support sending workspace folder change events.');
        }
        if (!this._notificationIsAutoRegistered && !this._unregistration) {
          this._unregistration = this.connection.client.register(r.DidChangeWorkspaceFoldersNotification.type);
        }
        return this._onDidChangeWorkspaceFolders.event;
      }
    };
  },
  41566: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TargetPopulation = exports.getExperimentationServiceAsync = exports.getExperimentationService = undefined;
    var r = require(12493);
    Object.defineProperty(exports, 'getExperimentationService', {
      enumerable: true,
      get: function () {
        return r.getExperimentationService;
      }
    });
    Object.defineProperty(exports, 'getExperimentationServiceAsync', {
      enumerable: true,
      get: function () {
        return r.getExperimentationServiceAsync;
      }
    });
    var o = require(8967);
    Object.defineProperty(exports, 'TargetPopulation', {
      enumerable: true,
      get: function () {
        return o.TargetPopulation;
      }
    });
  },
  98142: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.MementoKeyValueStorage = undefined;
    exports.MementoKeyValueStorage = class {
      constructor(e) {
        this.mementoGlobalStorage = e;
      }
      async getValue(e, t) {
        return (await this.mementoGlobalStorage.get(e)) || t;
      }
      setValue(e, t) {
        this.mementoGlobalStorage.update(e, t);
      }
    };
  },
  59052: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.default = class {
      constructor() {
        this.initializePromise = Promise.resolve();
        this.initialFetch = Promise.resolve();
      }
      isFlightEnabled(e) {
        return false;
      }
      isCachedFlightEnabled(e) {
        return Promise.resolve(false);
      }
      isFlightEnabledAsync(e) {
        return Promise.resolve(false);
      }
      getTreatmentVariable(e, t) {}
      getTreatmentVariableAsync(e, t) {
        return Promise.resolve(undefined);
      }
    };
  },
  8967: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.TargetPopulation = exports.Filters = exports.VSCodeFilterProvider = undefined;
    const r = require(91398);
    class o {
      constructor(e, t, n) {
        this.extensionName = e;
        this.extensionVersion = t;
        this.targetPopulation = n;
      }
      static trimVersionSuffix(e) {
        return e.split(/\-[a-zA-Z0-9]+$/)[0];
      }
      getFilterValue(e) {
        switch (e) {
          case s.ApplicationVersion:
            return o.trimVersionSuffix(r.version);
          case s.Build:
            return r.env.appName;
          case s.ClientId:
            return r.env.machineId;
          case s.ExtensionName:
            return this.extensionName;
          case s.ExtensionVersion:
            return o.trimVersionSuffix(this.extensionVersion);
          case s.Language:
            return r.env.language;
          case s.TargetPopulation:
            return this.targetPopulation;
          default:
            return '';
        }
      }
      getFilters() {
        let e = new Map();
        let t = Object.values(s);
        for (let n of t) {
          e.set(n, this.getFilterValue(n));
        }
        return e;
      }
    }
    var s;
    var a;
    exports.VSCodeFilterProvider = o;
    (function (e) {
      e.Market = 'X-MSEdge-Market';
      e.CorpNet = 'X-FD-Corpnet';
      e.ApplicationVersion = 'X-VSCode-AppVersion';
      e.Build = 'X-VSCode-Build';
      e.ClientId = 'X-MSEdge-ClientId';
      e.ExtensionName = 'X-VSCode-ExtensionName';
      e.ExtensionVersion = 'X-VSCode-ExtensionVersion';
      e.Language = 'X-VSCode-Language';
      e.TargetPopulation = 'X-VSCode-TargetPopulation';
    })(s || (exports.Filters = s = {}));
    (function (e) {
      e.Team = 'team';
      e.Internal = 'internal';
      e.Insiders = 'insider';
      e.Public = 'public';
    })(a || (exports.TargetPopulation = a = {}));
  },
  12493: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.getExperimentationServiceAsync = exports.getExperimentationService = undefined;
    const r = require(8967);
    const o = require(32909);
    const s = require(91398);
    const a = require(98142);
    const A = require(59052);
    function c(e, t, n, c, u, ...l) {
      if (!u) {
        throw new Error('Memento storage was not provided.');
      }
      const g = s.workspace.getConfiguration('telemetry');
      if (!(s.env.isTelemetryEnabled === undefined ? g.get('enableTelemetry', true) : s.env.isTelemetryEnabled)) {
        return new A.default();
      }
      const d = [new r.VSCodeFilterProvider(e, t, n), ...l];
      const h = new a.MementoKeyValueStorage(u);
      return new o.ExperimentationService({
        filterProviders: d,
        telemetry: c,
        storageKey: 'VSCode.ABExp.FeatureData',
        keyValueStorage: h,
        featuresTelemetryPropertyName: '',
        assignmentContextTelemetryPropertyName: 'abexp.assignmentcontext',
        telemetryEventName: 'query-expfeature',
        endpoint: 'https://default.exp-tas.com/vscode/ab',
        refetchInterval: 1800000
      });
    }
    exports.getExperimentationService = c;
    exports.getExperimentationServiceAsync = async function (e, t, n, r, o, ...s) {
      const a = c(e, t, n, r, o, ...s);
      await a.initializePromise;
      return a;
    };
  },
  77242: (module, exports, require) => {
    const {
      isexe: r,
      sync: o
    } = require(16262);
    const {
      join: s,
      delimiter: a,
      sep: A,
      posix: c
    } = require(16928);
    const u = process.platform === 'win32';
    const l = new RegExp(`[${c.sep}${A === c.sep ? '' : A}]`.replace(/(\\)/g, '\\$1'));
    const g = new RegExp(`^\\.${l.source}`);
    const d = e => Object.assign(new Error(`not found: ${e}`), {
      code: 'ENOENT'
    });
    const h = (e, {
      path: t = process.env.PATH,
      pathExt: n = process.env.PATHEXT,
      delimiter: r = a
    }) => {
      const o = e.match(l) ? [''] : [...(u ? [process.cwd()] : []), ...(t || '').split(r)];
      if (u) {
        const t = n || ['.EXE', '.CMD', '.BAT', '.COM'].join(r);
        const s = t.split(r).flatMap(e => [e, e.toLowerCase()]);
        if (e.includes('.') && s[0] !== '') {
          s.unshift('');
        }
        return {
          pathEnv: o,
          pathExt: s,
          pathExtExe: t
        };
      }
      return {
        pathEnv: o,
        pathExt: ['']
      };
    };
    const f = (e, t) => {
      const n = /^".*"$/.test(e) ? e.slice(1, -1) : e;
      return (!n && g.test(t) ? t.slice(0, 2) : '') + s(n, t);
    };
    const p = async (e, t = {}) => {
      const {
        pathEnv: n,
        pathExt: o,
        pathExtExe: s
      } = h(e, t);
      const a = [];
      for (const A of n) {
        const n = f(A, e);
        for (const e of o) {
          const o = n + e;
          if (await r(o, {
            pathExt: s,
            ignoreErrors: true
          })) {
            if (!t.all) {
              return o;
            }
            a.push(o);
          }
        }
      }
      if (t.all && a.length) {
        return a;
      }
      if (t.nothrow) {
        return null;
      }
      throw d(e);
    };
    module.exports = p;
    p.sync = (e, t = {}) => {
      const {
        pathEnv: n,
        pathExt: r,
        pathExtExe: s
      } = h(e, t);
      const a = [];
      for (const A of n) {
        const n = f(A, e);
        for (const e of r) {
          const r = n + e;
          if (o(r, {
            pathExt: s,
            ignoreErrors: true
          })) {
            if (!t.all) {
              return r;
            }
            a.push(r);
          }
        }
      }
      if (t.all && a.length) {
        return a;
      }
      if (t.nothrow) {
        return null;
      }
      throw d(e);
    };
  },
  52018: (module, exports) => {
    var n;
    var r = function (e) {
      "use strict";

      Object.defineProperty(e, '__esModule', {
        value: true
      });
      e.default = undefined;
      var t = null;
      try {
        t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
      } catch (e) {}
      function n(e, t, n) {
        this.low = e | 0;
        this.high = t | 0;
        this.unsigned = !!n;
      }
      function r(e) {
        return (e && e.__isLong__) === true;
      }
      function o(e) {
        var t = Math.clz32(e & -e);
        if (e) {
          return 31 - t;
        } else {
          return t;
        }
      }
      n.prototype.__isLong__;
      Object.defineProperty(n.prototype, '__isLong__', {
        value: true
      });
      n.isLong = r;
      var s = {};
      var a = {};
      function A(e, t) {
        var n;
        var r;
        var o;
        if (t) {
          if ((o = (e >>>= 0) >= 0 && e < 256) && (r = a[e])) {
            return r;
          } else {
            n = u(e, 0, true);
            if (o) {
              a[e] = n;
            }
            return n;
          }
        } else {
          if ((o = (e |= 0) >= -128 && e < 128) && (r = s[e])) {
            return r;
          } else {
            n = u(e, e < 0 ? -1 : 0, false);
            if (o) {
              s[e] = n;
            }
            return n;
          }
        }
      }
      function c(e, t) {
        if (isNaN(e)) {
          if (t) {
            return E;
          } else {
            return I;
          }
        }
        if (t) {
          if (e < 0) {
            return E;
          }
          if (e >= f) {
            return b;
          }
        } else {
          if (e <= -p) {
            return B;
          }
          if (e + 1 >= p) {
            return v;
          }
        }
        if (e < 0) {
          return c(-e, t).neg();
        } else {
          return u(e % h | 0, e / h | 0, t);
        }
      }
      function u(e, t, r) {
        return new n(e, t, r);
      }
      n.fromInt = A;
      n.fromNumber = c;
      n.fromBits = u;
      var l = Math.pow;
      function g(e, t, n) {
        if (e.length === 0) {
          throw Error('empty string');
        }
        if (typeof t == 'number') {
          n = t;
          t = false;
        } else {
          t = !!t;
        }
        if (e === 'NaN' || e === 'Infinity' || e === '+Infinity' || e === '-Infinity') {
          if (t) {
            return E;
          } else {
            return I;
          }
        }
        if ((n = n || 10) < 2 || n > 36) {
          throw RangeError('radix');
        }
        var r;
        if ((r = e.indexOf('-')) > 0) {
          throw Error('interior hyphen');
        }
        if (r === 0) {
          return g(e.substring(1), t, n).neg();
        }
        var o = c(l(n, 8));
        var s = I;
        for (var a = 0; a < e.length; a += 8) {
          var A = Math.min(8, e.length - a);
          var u = parseInt(e.substring(a, a + A), n);
          if (A < 8) {
            var d = c(l(n, A));
            s = s.mul(d).add(c(u));
          } else {
            s = (s = s.mul(o)).add(c(u));
          }
        }
        s.unsigned = t;
        return s;
      }
      function d(e, t) {
        if (typeof e == 'number') {
          return c(e, t);
        } else {
          if (typeof e == 'string') {
            return g(e, t);
          } else {
            return u(e.low, e.high, typeof t == 'boolean' ? t : e.unsigned);
          }
        }
      }
      n.fromString = g;
      n.fromValue = d;
      var h = 4294967296;
      var f = h * h;
      var p = f / 2;
      var m = A(16777216);
      var I = A(0);
      n.ZERO = I;
      var E = A(0, true);
      n.UZERO = E;
      var y = A(1);
      n.ONE = y;
      var w = A(1, true);
      n.UONE = w;
      var _ = A(-1);
      n.NEG_ONE = _;
      var v = u(-1, 2147483647, false);
      n.MAX_VALUE = v;
      var b = u(-1, -1, true);
      n.MAX_UNSIGNED_VALUE = b;
      var B = u(0, -2147483648, false);
      n.MIN_VALUE = B;
      var Q = n.prototype;
      Q.toInt = function () {
        if (this.unsigned) {
          return this.low >>> 0;
        } else {
          return this.low;
        }
      };
      Q.toNumber = function () {
        if (this.unsigned) {
          return (this.high >>> 0) * h + (this.low >>> 0);
        } else {
          return this.high * h + (this.low >>> 0);
        }
      };
      Q.toString = function (e) {
        if ((e = e || 10) < 2 || e > 36) {
          throw RangeError('radix');
        }
        if (this.isZero()) {
          return '0';
        }
        if (this.isNegative()) {
          if (this.eq(B)) {
            var t = c(e);
            var n = this.div(t);
            var r = n.mul(t).sub(this);
            return n.toString(e) + r.toInt().toString(e);
          }
          return `-${this.neg().toString(e)}`;
        }
        var o = c(l(e, 6), this.unsigned);
        var s = this;
        var a = '';
        while (true) {
          var A = s.div(o);
          var u = (s.sub(A.mul(o)).toInt() >>> 0).toString(e);
          if ((s = A).isZero()) {
            return u + a;
          }
          while (u.length < 6) {
            u = `0${u}`;
          }
          a = `${u}${a}`;
        }
      };
      Q.getHighBits = function () {
        return this.high;
      };
      Q.getHighBitsUnsigned = function () {
        return this.high >>> 0;
      };
      Q.getLowBits = function () {
        return this.low;
      };
      Q.getLowBitsUnsigned = function () {
        return this.low >>> 0;
      };
      Q.getNumBitsAbs = function () {
        if (this.isNegative()) {
          if (this.eq(B)) {
            return 64;
          } else {
            return this.neg().getNumBitsAbs();
          }
        }
        for (var e = this.high != 0 ? this.high : this.low, t = 31; t > 0 && !(e & 1 << t); t--);
        if (this.high != 0) {
          return t + 33;
        } else {
          return t + 1;
        }
      };
      Q.isZero = function () {
        return this.high === 0 && this.low === 0;
      };
      Q.eqz = Q.isZero;
      Q.isNegative = function () {
        return !this.unsigned && this.high < 0;
      };
      Q.isPositive = function () {
        return this.unsigned || this.high >= 0;
      };
      Q.isOdd = function () {
        return !(~this.low & 1);
      };
      Q.isEven = function () {
        return !(this.low & 1);
      };
      Q.equals = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        return (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;
      };
      Q.eq = Q.equals;
      Q.notEquals = function (e) {
        return !this.eq(e);
      };
      Q.neq = Q.notEquals;
      Q.ne = Q.notEquals;
      Q.lessThan = function (e) {
        return this.comp(e) < 0;
      };
      Q.lt = Q.lessThan;
      Q.lessThanOrEqual = function (e) {
        return this.comp(e) <= 0;
      };
      Q.lte = Q.lessThanOrEqual;
      Q.le = Q.lessThanOrEqual;
      Q.greaterThan = function (e) {
        return this.comp(e) > 0;
      };
      Q.gt = Q.greaterThan;
      Q.greaterThanOrEqual = function (e) {
        return this.comp(e) >= 0;
      };
      Q.gte = Q.greaterThanOrEqual;
      Q.ge = Q.greaterThanOrEqual;
      Q.compare = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        if (this.eq(e)) {
          return 0;
        }
        var t = this.isNegative();
        var n = e.isNegative();
        if (t && !n) {
          return -1;
        } else {
          if (!t && n) {
            return 1;
          } else {
            if (this.unsigned) {
              if (e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0) {
                return -1;
              } else {
                return 1;
              }
            } else {
              if (this.sub(e).isNegative()) {
                return -1;
              } else {
                return 1;
              }
            }
          }
        }
      };
      Q.comp = Q.compare;
      Q.negate = function () {
        if (!this.unsigned && this.eq(B)) {
          return B;
        } else {
          return this.not().add(y);
        }
      };
      Q.neg = Q.negate;
      Q.add = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        var t = this.high >>> 16;
        var n = this.high & 65535;
        var o = this.low >>> 16;
        var s = this.low & 65535;
        var a = e.high >>> 16;
        var A = e.high & 65535;
        var c = e.low >>> 16;
        var l = 0;
        var g = 0;
        var h = 0;
        var f = 0;
        h += (f += s + (e.low & 65535)) >>> 16;
        g += (h += o + c) >>> 16;
        l += (g += n + A) >>> 16;
        l += t + a;
        return u((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (g &= 65535), this.unsigned);
      };
      Q.subtract = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        return this.add(e.neg());
      };
      Q.sub = Q.subtract;
      Q.multiply = function (e) {
        if (this.isZero()) {
          return this;
        }
        if (!r(e)) {
          e = d(e);
        }
        if (t) {
          return u(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
        }
        if (e.isZero()) {
          if (this.unsigned) {
            return E;
          } else {
            return I;
          }
        }
        if (this.eq(B)) {
          if (e.isOdd()) {
            return B;
          } else {
            return I;
          }
        }
        if (e.eq(B)) {
          if (this.isOdd()) {
            return B;
          } else {
            return I;
          }
        }
        if (this.isNegative()) {
          if (e.isNegative()) {
            return this.neg().mul(e.neg());
          } else {
            return this.neg().mul(e).neg();
          }
        }
        if (e.isNegative()) {
          return this.mul(e.neg()).neg();
        }
        if (this.lt(m) && e.lt(m)) {
          return c(this.toNumber() * e.toNumber(), this.unsigned);
        }
        var n = this.high >>> 16;
        var o = this.high & 65535;
        var s = this.low >>> 16;
        var a = this.low & 65535;
        var A = e.high >>> 16;
        var l = e.high & 65535;
        var g = e.low >>> 16;
        var h = e.low & 65535;
        var f = 0;
        var p = 0;
        var y = 0;
        var w = 0;
        y += (w += a * h) >>> 16;
        p += (y += s * h) >>> 16;
        y &= 65535;
        p += (y += a * g) >>> 16;
        f += (p += o * h) >>> 16;
        p &= 65535;
        f += (p += s * g) >>> 16;
        p &= 65535;
        f += (p += a * l) >>> 16;
        f += n * h + o * g + s * l + a * A;
        return u((y &= 65535) << 16 | (w &= 65535), (f &= 65535) << 16 | (p &= 65535), this.unsigned);
      };
      Q.mul = Q.multiply;
      Q.divide = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        if (e.isZero()) {
          throw Error('division by zero');
        }
        var n;
        var o;
        var s;
        if (t) {
          if (this.unsigned || this.high !== -2147483648 || e.low !== -1 || e.high !== -1) {
            return u((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
          } else {
            return this;
          }
        }
        if (this.isZero()) {
          if (this.unsigned) {
            return E;
          } else {
            return I;
          }
        }
        if (this.unsigned) {
          if (!e.unsigned) {
            e = e.toUnsigned();
          }
          if (e.gt(this)) {
            return E;
          }
          if (e.gt(this.shru(1))) {
            return w;
          }
          s = E;
        } else {
          if (this.eq(B)) {
            if (e.eq(y) || e.eq(_)) {
              return B;
            } else {
              if (e.eq(B)) {
                return y;
              } else {
                if ((n = this.shr(1).div(e).shl(1)).eq(I)) {
                  if (e.isNegative()) {
                    return y;
                  } else {
                    return _;
                  }
                } else {
                  o = this.sub(e.mul(n));
                  return s = n.add(o.div(e));
                }
              }
            }
          }
          if (e.eq(B)) {
            if (this.unsigned) {
              return E;
            } else {
              return I;
            }
          }
          if (this.isNegative()) {
            if (e.isNegative()) {
              return this.neg().div(e.neg());
            } else {
              return this.neg().div(e).neg();
            }
          }
          if (e.isNegative()) {
            return this.div(e.neg()).neg();
          }
          s = I;
        }
        for (o = this; o.gte(e);) {
          n = Math.max(1, Math.floor(o.toNumber() / e.toNumber()));
          var a = Math.ceil(Math.log(n) / Math.LN2);
          var A = a <= 48 ? 1 : l(2, a - 48);
          var g = c(n);
          for (var h = g.mul(e); h.isNegative() || h.gt(o);) {
            h = (g = c(n -= A, this.unsigned)).mul(e);
          }
          if (g.isZero()) {
            g = y;
          }
          s = s.add(g);
          o = o.sub(h);
        }
        return s;
      };
      Q.div = Q.divide;
      Q.modulo = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        if (t) {
          return u((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);
        } else {
          return this.sub(this.div(e).mul(e));
        }
      };
      Q.mod = Q.modulo;
      Q.rem = Q.modulo;
      Q.not = function () {
        return u(~this.low, ~this.high, this.unsigned);
      };
      Q.countLeadingZeros = function () {
        if (this.high) {
          return Math.clz32(this.high);
        } else {
          return Math.clz32(this.low) + 32;
        }
      };
      Q.clz = Q.countLeadingZeros;
      Q.countTrailingZeros = function () {
        if (this.low) {
          return o(this.low);
        } else {
          return o(this.high) + 32;
        }
      };
      Q.ctz = Q.countTrailingZeros;
      Q.and = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        return u(this.low & e.low, this.high & e.high, this.unsigned);
      };
      Q.or = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        return u(this.low | e.low, this.high | e.high, this.unsigned);
      };
      Q.xor = function (e) {
        if (!r(e)) {
          e = d(e);
        }
        return u(this.low ^ e.low, this.high ^ e.high, this.unsigned);
      };
      Q.shiftLeft = function (e) {
        if (r(e)) {
          e = e.toInt();
        }
        if ((e &= 63) == 0) {
          return this;
        } else {
          if (e < 32) {
            return u(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned);
          } else {
            return u(0, this.low << e - 32, this.unsigned);
          }
        }
      };
      Q.shl = Q.shiftLeft;
      Q.shiftRight = function (e) {
        if (r(e)) {
          e = e.toInt();
        }
        if ((e &= 63) == 0) {
          return this;
        } else {
          if (e < 32) {
            return u(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned);
          } else {
            return u(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);
          }
        }
      };
      Q.shr = Q.shiftRight;
      Q.shiftRightUnsigned = function (e) {
        if (r(e)) {
          e = e.toInt();
        }
        if ((e &= 63) == 0) {
          return this;
        } else {
          if (e < 32) {
            return u(this.low >>> e | this.high << 32 - e, this.high >>> e, this.unsigned);
          } else {
            return u(e === 32 ? this.high : this.high >>> e - 32, 0, this.unsigned);
          }
        }
      };
      Q.shru = Q.shiftRightUnsigned;
      Q.shr_u = Q.shiftRightUnsigned;
      Q.rotateLeft = function (e) {
        var t;
        if (r(e)) {
          e = e.toInt();
        }
        if ((e &= 63) == 0) {
          return this;
        } else {
          if (e === 32) {
            return u(this.high, this.low, this.unsigned);
          } else {
            if (e < 32) {
              t = 32 - e;
              return u(this.low << e | this.high >>> t, this.high << e | this.low >>> t, this.unsigned);
            } else {
              t = 32 - (e -= 32);
              return u(this.high << e | this.low >>> t, this.low << e | this.high >>> t, this.unsigned);
            }
          }
        }
      };
      Q.rotl = Q.rotateLeft;
      Q.rotateRight = function (e) {
        var t;
        if (r(e)) {
          e = e.toInt();
        }
        if ((e &= 63) == 0) {
          return this;
        } else {
          if (e === 32) {
            return u(this.high, this.low, this.unsigned);
          } else {
            if (e < 32) {
              t = 32 - e;
              return u(this.high << t | this.low >>> e, this.low << t | this.high >>> e, this.unsigned);
            } else {
              t = 32 - (e -= 32);
              return u(this.low << t | this.high >>> e, this.high << t | this.low >>> e, this.unsigned);
            }
          }
        }
      };
      Q.rotr = Q.rotateRight;
      Q.toSigned = function () {
        if (this.unsigned) {
          return u(this.low, this.high, false);
        } else {
          return this;
        }
      };
      Q.toUnsigned = function () {
        if (this.unsigned) {
          return this;
        } else {
          return u(this.low, this.high, true);
        }
      };
      Q.toBytes = function (e) {
        if (e) {
          return this.toBytesLE();
        } else {
          return this.toBytesBE();
        }
      };
      Q.toBytesLE = function () {
        var e = this.high;
        var t = this.low;
        return [t & 255, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, e & 255, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];
      };
      Q.toBytesBE = function () {
        var e = this.high;
        var t = this.low;
        return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, e & 255, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, t & 255];
      };
      n.fromBytes = function (e, t, r) {
        if (r) {
          return n.fromBytesLE(e, t);
        } else {
          return n.fromBytesBE(e, t);
        }
      };
      n.fromBytesLE = function (e, t) {
        return new n(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);
      };
      n.fromBytesBE = function (e, t) {
        return new n(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);
      };
      var D = n;
      e.default = D;
      if ('default' in e) {
        return e.default;
      } else {
        return e;
      }
    }({});
    if ((n = function () {
      return r;
    }.apply(exports, [])) !== undefined) {
      module.exports = n;
    }
  },
  29167: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.resolveBackend = exports.registerBackend = undefined;
    const n = {};
    const r = [];
    exports.registerBackend = (e, t, o) => {
      if (!t || typeof t.init != 'function' || typeof t.createSessionHandler != 'function') {
        throw new TypeError('not a valid backend');
      }
      {
        const s = n[e];
        if (s === undefined) {
          n[e] = {
            backend: t,
            priority: o
          };
        } else {
          if (s.priority > o) {
            return;
          }
          if (s.priority === o && s.backend !== t) {
            throw new Error(`cannot register backend "${e}" using priority ${o}`);
          }
        }
        if (o >= 0) {
          const t = r.indexOf(e);
          if (t !== -1) {
            r.splice(t, 1);
          }
          for (let t = 0; t < r.length; t++) {
            if (n[r[t]].priority <= o) {
              r.splice(t, 0, e);
              return;
            }
          }
          r.push(e);
        }
      }
    };
    exports.resolveBackend = async e => {
      const t = e.length === 0 ? r : e;
      const o = [];
      for (const e of t) {
        const t = n[e];
        if (t) {
          if (t.initialized) {
            return t.backend;
          }
          if (t.aborted) {
            continue;
          }
          const n = !!t.initPromise;
          try {
            if (!n) {
              t.initPromise = t.backend.init();
            }
            await t.initPromise;
            t.initialized = true;
            return t.backend;
          } catch (r) {
            if (!n) {
              o.push({
                name: e,
                err: r
              });
            }
            t.aborted = true;
          } finally {
            delete t.initPromise;
          }
        }
      }
      throw new Error(`no available backend found. ERR: ${o.map(e => `[${e.name}] ${e.err}`).join(', ')}`);
    };
  },
  55456: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.registerBackend = undefined;
    var r = require(29167);
    Object.defineProperty(exports, 'registerBackend', {
      enumerable: true,
      get: function () {
        return r.registerBackend;
      }
    });
  },
  77042: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.env = undefined;
    const r = require(85528);
    let o = 'warning';
    exports.env = {
      wasm: {},
      webgl: {},
      webgpu: {},
      versions: {
        common: r.version
      },
      set logLevel(e) {
        if (e !== undefined) {
          if (typeof e != 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(e) === -1) {
            throw new Error(`Unsupported logging level: ${e}`);
          }
          o = e;
        }
      },
      get logLevel() {
        return o;
      }
    };
    Object.defineProperty(exports.env, 'logLevel', {
      enumerable: true
    });
  },
  92063: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.env = undefined;
    const r = require(77042);
    exports.env = r.env;
  },
  71076: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    __exportStar(require(55456), exports);
    __exportStar(require(92063), exports);
    __exportStar(require(46442), exports);
    __exportStar(require(78671), exports);
    __exportStar(require(96141), exports);
  },
  1637: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InferenceSession = undefined;
    const r = require(29167);
    const o = require(78671);
    class s {
      constructor(e) {
        this.handler = e;
      }
      async run(e, t, n) {
        const r = {};
        let s = {};
        if (typeof e != 'object' || e === null || e instanceof o.Tensor || Array.isArray(e)) {
          throw new TypeError('\'feeds\' must be an object that use input names as keys and OnnxValue as corresponding values.');
        }
        let a = true;
        if (typeof t == 'object') {
          if (t === null) {
            throw new TypeError('Unexpected argument[1]: cannot be null.');
          }
          if (t instanceof o.Tensor) {
            throw new TypeError('\'fetches\' cannot be a Tensor');
          }
          if (Array.isArray(t)) {
            if (t.length === 0) {
              throw new TypeError('\'fetches\' cannot be an empty array.');
            }
            a = false;
            for (const e of t) {
              if (typeof e != 'string') {
                throw new TypeError('\'fetches\' must be a string array or an object.');
              }
              if (this.outputNames.indexOf(e) === -1) {
                throw new RangeError(`'fetches' contains invalid output name: ${e}.`);
              }
              r[e] = null;
            }
            if (typeof n == 'object' && n !== null) {
              s = n;
            } else {
              if (n !== undefined) {
                throw new TypeError('\'options\' must be an object.');
              }
            }
          } else {
            let e = false;
            const A = Object.getOwnPropertyNames(t);
            for (const n of this.outputNames) {
              if (A.indexOf(n) !== -1) {
                const s = t[n];
                if (s === null || s instanceof o.Tensor) {
                  e = true;
                  a = false;
                  r[n] = s;
                }
              }
            }
            if (e) {
              if (typeof n == 'object' && n !== null) {
                s = n;
              } else {
                if (n !== undefined) {
                  throw new TypeError('\'options\' must be an object.');
                }
              }
            } else {
              s = t;
            }
          }
        } else {
          if (t !== undefined) {
            throw new TypeError('Unexpected argument[1]: must be \'fetches\' or \'options\'.');
          }
        }
        for (const t of this.inputNames) {
          if (e[t] === undefined) {
            throw new Error(`input '${t}' is missing in 'feeds'.`);
          }
        }
        if (a) {
          for (const e of this.outputNames) {
            r[e] = null;
          }
        }
        const A = await this.handler.run(e, r, s);
        const c = {};
        for (const e in A) {
          if (Object.hasOwnProperty.call(A, e)) {
            c[e] = new o.Tensor(A[e].type, A[e].data, A[e].dims);
          }
        }
        return c;
      }
      async release() {
        return this.handler.dispose();
      }
      static async create(e, t, n, o) {
        let a;
        let A = {};
        if (typeof e == 'string') {
          a = e;
          if (typeof t == 'object' && t !== null) {
            A = t;
          } else {
            if (t !== undefined) {
              throw new TypeError('\'options\' must be an object.');
            }
          }
        } else {
          if (e instanceof Uint8Array) {
            a = e;
            if (typeof t == 'object' && t !== null) {
              A = t;
            } else {
              if (t !== undefined) {
                throw new TypeError('\'options\' must be an object.');
              }
            }
          } else {
            if (!(e instanceof ArrayBuffer) && (typeof SharedArrayBuffer == 'undefined' || !(e instanceof SharedArrayBuffer))) {
              throw new TypeError('Unexpected argument[0]: must be \'path\' or \'buffer\'.');
            }
            {
              const r = e;
              let s = 0;
              let c = e.byteLength;
              if (typeof t == 'object' && t !== null) {
                A = t;
              } else {
                if (typeof t == 'number') {
                  s = t;
                  if (!Number.isSafeInteger(s)) {
                    throw new RangeError('\'byteOffset\' must be an integer.');
                  }
                  if (s < 0 || s >= r.byteLength) {
                    throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);
                  }
                  c = e.byteLength - s;
                  if (typeof n == 'number') {
                    c = n;
                    if (!Number.isSafeInteger(c)) {
                      throw new RangeError('\'byteLength\' must be an integer.');
                    }
                    if (c <= 0 || s + c > r.byteLength) {
                      throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength - s}].`);
                    }
                    if (typeof o == 'object' && o !== null) {
                      A = o;
                    } else {
                      if (o !== undefined) {
                        throw new TypeError('\'options\' must be an object.');
                      }
                    }
                  } else {
                    if (n !== undefined) {
                      throw new TypeError('\'byteLength\' must be a number.');
                    }
                  }
                } else {
                  if (t !== undefined) {
                    throw new TypeError('\'options\' must be an object.');
                  }
                }
              }
              a = new Uint8Array(r, s, c);
            }
          }
        }
        const c = (A.executionProviders || []).map(e => typeof e == 'string' ? e : e.name);
        const u = await r.resolveBackend(c);
        const l = await u.createSessionHandler(a, A);
        return new s(l);
      }
      startProfiling() {
        this.handler.startProfiling();
      }
      endProfiling() {
        this.handler.endProfiling();
      }
      get inputNames() {
        return this.handler.inputNames;
      }
      get outputNames() {
        return this.handler.outputNames;
      }
    }
    exports.InferenceSession = s;
  },
  46442: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.InferenceSession = undefined;
    const r = require(1637);
    exports.InferenceSession = r.InferenceSession;
  },
  96141: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  },
  70371: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.tensorToImageData = exports.tensorToDataURL = undefined;
    exports.tensorToDataURL = (e, t) => {
      const n = document.createElement('canvas');
      n.width = e.dims[3];
      n.height = e.dims[2];
      const r = n.getContext('2d');
      if (r != null) {
        let o;
        let s;
        if (t?.tensorLayout !== undefined && t.tensorLayout === 'NHWC') {
          o = e.dims[2];
          s = e.dims[3];
        } else {
          o = e.dims[3];
          s = e.dims[2];
        }
        const a = t?.format !== undefined ? t.format : 'RGB';
        const A = t?.norm;
        let c;
        let u;
        if (A === undefined || A.mean === undefined) {
          c = [255, 255, 255, 255];
        } else {
          if (typeof A.mean == 'number') {
            c = [A.mean, A.mean, A.mean, A.mean];
          } else {
            c = [A.mean[0], A.mean[1], A.mean[2], 0];
            if (A.mean[3] !== undefined) {
              c[3] = A.mean[3];
            }
          }
        }
        if (A === undefined || A.bias === undefined) {
          u = [0, 0, 0, 0];
        } else {
          if (typeof A.bias == 'number') {
            u = [A.bias, A.bias, A.bias, A.bias];
          } else {
            u = [A.bias[0], A.bias[1], A.bias[2], 0];
            if (A.bias[3] !== undefined) {
              u[3] = A.bias[3];
            }
          }
        }
        const l = s * o;
        let g = 0;
        let d = l;
        let h = l * 2;
        let f = -1;
        if (a === 'RGBA') {
          g = 0;
          d = l;
          h = l * 2;
          f = l * 3;
        } else {
          if (a === 'RGB') {
            g = 0;
            d = l;
            h = l * 2;
          } else {
            if (a === 'RBG') {
              g = 0;
              h = l;
              d = l * 2;
            }
          }
        }
        for (let t = 0; t < s; t++) {
          for (let n = 0; n < o; n++) {
            const o = (e.data[g++] - u[0]) * c[0];
            const s = (e.data[d++] - u[1]) * c[1];
            const a = (e.data[h++] - u[2]) * c[2];
            const A = f === -1 ? 255 : (e.data[f++] - u[3]) * c[3];
            r.fillStyle = `rgba(${o},${s},${a},${A})`;
            r.fillRect(n, t, 1, 1);
          }
        }
        return n.toDataURL();
      }
      throw new Error('Can not access image data');
    };
    exports.tensorToImageData = (e, t) => {
      const n = document.createElement('canvas').getContext('2d');
      let r;
      if (n == null) {
        throw new Error('Can not access image data');
      }
      {
        let o;
        let s;
        let a;
        if (t?.tensorLayout !== undefined && t.tensorLayout === 'NHWC') {
          o = e.dims[2];
          s = e.dims[1];
          a = e.dims[3];
        } else {
          o = e.dims[3];
          s = e.dims[2];
          a = e.dims[1];
        }
        const A = t !== undefined && t.format !== undefined ? t.format : 'RGB';
        const c = t?.norm;
        let u;
        let l;
        if (c === undefined || c.mean === undefined) {
          u = [255, 255, 255, 255];
        } else {
          if (typeof c.mean == 'number') {
            u = [c.mean, c.mean, c.mean, c.mean];
          } else {
            u = [c.mean[0], c.mean[1], c.mean[2], 255];
            if (c.mean[3] !== undefined) {
              u[3] = c.mean[3];
            }
          }
        }
        if (c === undefined || c.bias === undefined) {
          l = [0, 0, 0, 0];
        } else {
          if (typeof c.bias == 'number') {
            l = [c.bias, c.bias, c.bias, c.bias];
          } else {
            l = [c.bias[0], c.bias[1], c.bias[2], 0];
            if (c.bias[3] !== undefined) {
              l[3] = c.bias[3];
            }
          }
        }
        const g = s * o;
        if (t !== undefined && (t.format !== undefined && a === 4 && t.format !== 'RGBA' || a === 3 && t.format !== 'RGB' && t.format !== 'BGR')) {
          throw new Error('Tensor format doesn\'t match input tensor dims');
        }
        const d = 4;
        let h = 0;
        let f = 1;
        let p = 2;
        let m = 3;
        let I = 0;
        let E = g;
        let y = g * 2;
        let w = -1;
        if (A === 'RGBA') {
          I = 0;
          E = g;
          y = g * 2;
          w = g * 3;
        } else {
          if (A === 'RGB') {
            I = 0;
            E = g;
            y = g * 2;
          } else {
            if (A === 'RBG') {
              I = 0;
              y = g;
              E = g * 2;
            }
          }
        }
        r = n.createImageData(o, s);
        for (let t = 0; t < s * o; h += d, f += d, p += d, m += d, t++) {
          r.data[h] = (e.data[I++] - l[0]) * u[0];
          r.data[f] = (e.data[E++] - l[1]) * u[1];
          r.data[p] = (e.data[y++] - l[2]) * u[2];
          r.data[m] = w === -1 ? 255 : (e.data[w++] - l[3]) * u[3];
        }
      }
      return r;
    };
  },
  95287: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.tensorFromImage = exports.bufferToTensor = undefined;
    const r = require(78671);
    exports.bufferToTensor = (e, t) => {
      if (e === undefined) {
        throw new Error('Image buffer must be defined');
      }
      if (t.height === undefined || t.width === undefined) {
        throw new Error('Image height and width must be defined');
      }
      if (t.tensorLayout === 'NHWC') {
        throw new Error('NHWC Tensor layout is not supported yet');
      }
      const {
        height: n,
        width: o
      } = t;
      const s = t.norm ?? {
        mean: 255,
        bias: 0
      };
      let a;
      let A;
      a = typeof s.mean == 'number' ? [s.mean, s.mean, s.mean, s.mean] : [s.mean[0], s.mean[1], s.mean[2], s.mean[3] ?? 255];
      A = typeof s.bias == 'number' ? [s.bias, s.bias, s.bias, s.bias] : [s.bias[0], s.bias[1], s.bias[2], s.bias[3] ?? 0];
      const c = t.format !== undefined ? t.format : 'RGBA';
      const u = t.tensorFormat !== undefined && t.tensorFormat !== undefined ? t.tensorFormat : 'RGB';
      const l = n * o;
      const g = u === 'RGBA' ? new Float32Array(l * 4) : new Float32Array(l * 3);
      let d = 4;
      let h = 0;
      let f = 1;
      let p = 2;
      let m = 3;
      let I = 0;
      let E = l;
      let y = l * 2;
      let w = -1;
      if (c === 'RGB') {
        d = 3;
        h = 0;
        f = 1;
        p = 2;
        m = -1;
      }
      if (u === 'RGBA') {
        w = l * 3;
      } else {
        if (u === 'RBG') {
          I = 0;
          y = l;
          E = l * 2;
        } else {
          if (u === 'BGR') {
            y = 0;
            E = l;
            I = l * 2;
          }
        }
      }
      for (let t = 0; t < l; t++, h += d, p += d, f += d, m += d) {
        g[I++] = (e[h] + A[0]) / a[0];
        g[E++] = (e[f] + A[1]) / a[1];
        g[y++] = (e[p] + A[2]) / a[2];
        if (w !== -1 && m !== -1) {
          g[w++] = (e[m] + A[3]) / a[3];
        }
      }
      if (u === 'RGBA') {
        return new r.Tensor('float32', g, [1, 4, n, o]);
      } else {
        return new r.Tensor('float32', g, [1, 3, n, o]);
      }
    };
    exports.tensorFromImage = async (e, n) => {
      const r = typeof HTMLImageElement != 'undefined' && e instanceof HTMLImageElement;
      const o = typeof ImageData != 'undefined' && e instanceof ImageData;
      const s = typeof ImageBitmap != 'undefined' && e instanceof ImageBitmap;
      const a = typeof e == 'string';
      let A;
      let c = n ?? {};
      if (r) {
        const t = document.createElement('canvas');
        t.width = e.width;
        t.height = e.height;
        const r = t.getContext('2d');
        if (r == null) {
          throw new Error('Can not access image data');
        }
        {
          let t = e.height;
          let o = e.width;
          if (n !== undefined && n.resizedHeight !== undefined && n.resizedWidth !== undefined) {
            t = n.resizedHeight;
            o = n.resizedWidth;
          }
          if (n !== undefined) {
            c = n;
            if (n.tensorFormat !== undefined) {
              throw new Error('Image input config format must be RGBA for HTMLImageElement');
            }
            c.tensorFormat = 'RGBA';
            c.height = t;
            c.width = o;
          } else {
            c.tensorFormat = 'RGBA';
            c.height = t;
            c.width = o;
          }
          r.drawImage(e, 0, 0);
          A = r.getImageData(0, 0, o, t).data;
        }
      } else {
        if (!o) {
          if (s) {
            if (n === undefined) {
              throw new Error('Please provide image config with format for Imagebitmap');
            }
            const r = document.createElement('canvas');
            r.width = e.width;
            r.height = e.height;
            const o = r.getContext('2d');
            if (o != null) {
              const n = e.height;
              const r = e.width;
              o.drawImage(e, 0, 0, r, n);
              A = o.getImageData(0, 0, r, n).data;
              c.height = n;
              c.width = r;
              return exports.bufferToTensor(A, c);
            }
            throw new Error('Can not access image data');
          }
          if (a) {
            return new Promise((n, r) => {
              const o = document.createElement('canvas');
              const s = o.getContext('2d');
              if (!e || !s) {
                return r();
              }
              const a = new Image();
              a.crossOrigin = 'Anonymous';
              a.src = e;
              a.onload = () => {
                o.width = a.width;
                o.height = a.height;
                s.drawImage(a, 0, 0, o.width, o.height);
                const e = s.getImageData(0, 0, o.width, o.height);
                c.height = o.height;
                c.width = o.width;
                n(exports.bufferToTensor(e.data, c));
              };
            });
          }
          throw new Error('Input data provided is not supported - aborted tensor creation');
        }
        {
          let t;
          let r;
          if (n !== undefined && n.resizedWidth !== undefined && n.resizedHeight !== undefined) {
            t = n.resizedHeight;
            r = n.resizedWidth;
          } else {
            t = e.height;
            r = e.width;
          }
          if (n !== undefined) {
            c = n;
          }
          c.format = 'RGBA';
          c.height = t;
          c.width = r;
          if (n !== undefined) {
            const n = document.createElement('canvas');
            n.width = r;
            n.height = t;
            const o = n.getContext('2d');
            if (o == null) {
              throw new Error('Can not access image data');
            }
            o.putImageData(e, 0, 0);
            A = o.getImageData(0, 0, r, t).data;
          } else {
            A = e.data;
          }
        }
      }
      if (A !== undefined) {
        return exports.bufferToTensor(A, c);
      }
      throw new Error('Input data provided is not supported - aborted tensor creation');
    };
  },
  57090: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Tensor = undefined;
    const r = require(70371);
    const o = require(95287);
    const s = require(16322);
    const a = new Map([['float32', Float32Array], ['uint8', Uint8Array], ['int8', Int8Array], ['uint16', Uint16Array], ['float16', Uint16Array], ['int16', Int16Array], ['int32', Int32Array], ['bool', Uint8Array], ['float64', Float64Array], ['uint32', Uint32Array]]);
    const A = new Map([[Float32Array, 'float32'], [Uint8Array, 'uint8'], [Int8Array, 'int8'], [Uint16Array, 'uint16'], [Int16Array, 'int16'], [Int32Array, 'int32'], [Float64Array, 'float64'], [Uint32Array, 'uint32']]);
    let c = false;
    exports.Tensor = class {
      constructor(e, t, n) {
        let r;
        let o;
        let u;
        (() => {
          if (!c) {
            c = true;
            const e = typeof BigInt64Array != 'undefined' && typeof BigInt64Array.from == 'function';
            const t = typeof BigUint64Array != 'undefined' && typeof BigUint64Array.from == 'function';
            if (e) {
              a.set('int64', BigInt64Array);
              A.set(BigInt64Array, 'int64');
            }
            if (t) {
              a.set('uint64', BigUint64Array);
              A.set(BigUint64Array, 'uint64');
            }
          }
        })();
        if (typeof e == 'string') {
          r = e;
          u = n;
          if (e === 'string') {
            if (!Array.isArray(t)) {
              throw new TypeError('A string tensor\'s data must be a string array.');
            }
            o = t;
          } else {
            const n = a.get(e);
            if (n === undefined) {
              throw new TypeError(`Unsupported tensor type: ${e}.`);
            }
            if (Array.isArray(t)) {
              if (e === 'float16') {
                throw new TypeError('Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');
              }
              o = e === 'uint64' || e === 'int64' ? n.from(t, BigInt) : n.from(t);
            } else {
              if (!(t instanceof n)) {
                throw new TypeError(`A ${r} tensor's data must be type of ${n}`);
              }
              o = t;
            }
          }
        } else {
          u = t;
          if (Array.isArray(e)) {
            if (e.length === 0) {
              throw new TypeError('Tensor type cannot be inferred from an empty array.');
            }
            const t = typeof e[0];
            if (t === 'string') {
              r = 'string';
              o = e;
            } else {
              if (t !== 'boolean') {
                throw new TypeError(`Invalid element type of data array: ${t}.`);
              }
              r = 'bool';
              o = Uint8Array.from(e);
            }
          } else {
            const t = A.get(e.constructor);
            if (t === undefined) {
              throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);
            }
            r = t;
            o = e;
          }
        }
        if (u === undefined) {
          u = [o.length];
        } else {
          if (!Array.isArray(u)) {
            throw new TypeError('A tensor\'s dims must be a number array');
          }
        }
        const l = s.calculateSize(u);
        if (l !== o.length) {
          throw new Error(`Tensor's size(${l}) does not match data length(${o.length}).`);
        }
        this.dims = u;
        this.type = r;
        this.data = o;
        this.size = l;
      }
      static async fromImage(e, t) {
        return o.tensorFromImage(e, t);
      }
      toDataURL(e) {
        return r.tensorToDataURL(this, e);
      }
      toImageData(e) {
        return r.tensorToImageData(this, e);
      }
      reshape(e) {
        return s.tensorReshape(this, e);
      }
    };
  },
  16322: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.tensorReshape = exports.calculateSize = undefined;
    const r = require(78671);
    exports.calculateSize = e => {
      let t = 1;
      for (let n = 0; n < e.length; n++) {
        const r = e[n];
        if (typeof r != 'number' || !Number.isSafeInteger(r)) {
          throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);
        }
        if (r < 0) {
          throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);
        }
        t *= r;
      }
      return t;
    };
    exports.tensorReshape = (e, t) => new r.Tensor(e.type, e.data, t);
  },
  78671: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.Tensor = undefined;
    const r = require(57090);
    exports.Tensor = r.Tensor;
  },
  85528: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.version = undefined;
    exports.version = '1.16.3';
  },
  16262: function (module, exports, require) {
    "use strict";

    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    });
    var __importStar = this && this.__importStar || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.sync = exports.isexe = exports.posix = exports.win32 = undefined;
    const A = __importStar(require(71481));
    exports.posix = A;
    const c = __importStar(require(53381));
    exports.win32 = c;
    __exportStar(require(10136), exports);
    const u = (process.env._ISEXE_TEST_PLATFORM_ || process.platform) === 'win32' ? c : A;
    exports.isexe = u.isexe;
    exports.sync = u.sync;
  },
  10136: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  },
  71481: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.sync = exports.isexe = undefined;
    const r = require(79896);
    const o = require(91943);
    exports.isexe = async (e, t = {}) => {
      const {
        ignoreErrors: n = false
      } = t;
      try {
        return s(await o.stat(e), t);
      } catch (e) {
        const t = e;
        if (n || t.code === 'EACCES') {
          return false;
        }
        throw t;
      }
    };
    exports.sync = (e, t = {}) => {
      const {
        ignoreErrors: n = false
      } = t;
      try {
        return s(r.statSync(e), t);
      } catch (e) {
        const t = e;
        if (n || t.code === 'EACCES') {
          return false;
        }
        throw t;
      }
    };
    const s = (e, t) => e.isFile() && a(e, t);
    const a = (e, t) => {
      const n = t.uid ?? process.getuid?.();
      const r = t.groups ?? process.getgroups?.() ?? [];
      const o = t.gid ?? process.getgid?.() ?? r[0];
      if (n === undefined || o === undefined) {
        throw new Error('cannot get uid or gid');
      }
      const s = new Set([o, ...r]);
      const a = e.mode;
      const A = e.uid;
      const c = e.gid;
      const u = parseInt('100', 8);
      const l = parseInt('010', 8);
      const g = u | l;
      return !!(a & parseInt('001', 8)) || !!(a & l) && !!s.has(c) || !!(a & u) && A === n || !!(a & g) && n === 0;
    };
  },
  53381: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.sync = exports.isexe = undefined;
    const r = require(79896);
    const o = require(91943);
    exports.isexe = async (e, t = {}) => {
      const {
        ignoreErrors: n = false
      } = t;
      try {
        return s(await o.stat(e), e, t);
      } catch (e) {
        const t = e;
        if (n || t.code === 'EACCES') {
          return false;
        }
        throw t;
      }
    };
    exports.sync = (e, t = {}) => {
      const {
        ignoreErrors: n = false
      } = t;
      try {
        return s(r.statSync(e), e, t);
      } catch (e) {
        const t = e;
        if (n || t.code === 'EACCES') {
          return false;
        }
        throw t;
      }
    };
    const s = (e, t, n) => e.isFile() && ((e, t) => {
      const {
        pathExt: n = process.env.PATHEXT || ''
      } = t;
      const r = n.split(';');
      if (r.indexOf('') !== -1) {
        return true;
      }
      for (let t = 0; t < r.length; t++) {
        const n = r[t].toLowerCase();
        const o = e.substring(e.length - n.length).toLowerCase();
        if (n && o === n) {
          return true;
        }
      }
      return false;
    })(t, n);
  },
  98718: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.assertValidPattern = undefined;
    exports.assertValidPattern = e => {
      if (typeof e != 'string') {
        throw new TypeError('invalid pattern');
      }
      if (e.length > 65536) {
        throw new TypeError('pattern is too long');
      }
    };
  },
  26854: (module, exports, require) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.AST = undefined;
    const r = require(47511);
    const o = require(36128);
    const s = new Set(['!', '?', '+', '*', '@']);
    const a = e => s.has(e);
    const A = '(?!\\.)';
    const c = new Set(['[', '.']);
    const u = new Set(['..', '.']);
    const l = new Set('().*{}+?[]^$\\!');
    const g = '[^/]';
    const d = g + '*?';
    const h = g + '+?';
    class f {
      type;
      #e;
      #t;
      #n = false;
      #r = [];
      #o;
      #i;
      #s;
      #a = false;
      #A;
      #c;
      #u = false;
      constructor(e, t, n = {}) {
        this.type = e;
        if (e) {
          this.#t = true;
        }
        this.#o = t;
        this.#e = this.#o ? this.#o.#e : this;
        this.#A = this.#e === this ? n : this.#e.#A;
        this.#s = this.#e === this ? [] : this.#e.#s;
        if (e === '!' && !this.#e.#a) {
          this.#s.push(this);
        }
        this.#i = this.#o ? this.#o.#r.length : 0;
      }
      get hasMagic() {
        if (this.#t !== undefined) {
          return this.#t;
        }
        for (const e of this.#r) {
          if (typeof e != 'string' && (e.type || e.hasMagic)) {
            return this.#t = true;
          }
        }
        return this.#t;
      }
      toString() {
        if (this.#c !== undefined) {
          return this.#c;
        } else {
          if (this.type) {
            return this.#c = this.type + '(' + this.#r.map(e => String(e)).join('|') + ')';
          } else {
            return this.#c = this.#r.map(e => String(e)).join('');
          }
        }
      }
      #l() {
        if (this !== this.#e) {
          throw new Error('should only call on root');
        }
        if (this.#a) {
          return this;
        }
        let e;
        this.toString();
        this.#a = true;
        while (e = this.#s.pop()) {
          if (e.type !== '!') {
            continue;
          }
          let t = e;
          let n = t.#o;
          while (n) {
            for (let r = t.#i + 1; !n.type && r < n.#r.length; r++) {
              for (const t of e.#r) {
                if (typeof t == 'string') {
                  throw new Error('string part in extglob AST??');
                }
                t.copyIn(n.#r[r]);
              }
            }
            t = n;
            n = t.#o;
          }
        }
        return this;
      }
      push(...e) {
        for (const t of e) {
          if (t !== '') {
            if (typeof t != 'string' && (!(t instanceof f) || t.#o !== this)) {
              throw new Error(`invalid part: ${t}`);
            }
            this.#r.push(t);
          }
        }
      }
      toJSON() {
        const e = this.type === null ? this.#r.slice().map(e => typeof e == 'string' ? e : e.toJSON()) : [this.type, ...this.#r.map(e => e.toJSON())];
        if (this.isStart() && !this.type) {
          e.unshift([]);
        }
        if (this.isEnd() && (this === this.#e || this.#e.#a && this.#o?.type === '!')) {
          e.push({});
        }
        return e;
      }
      isStart() {
        if (this.#e === this) {
          return true;
        }
        if (!this.#o?.isStart()) {
          return false;
        }
        if (this.#i === 0) {
          return true;
        }
        const e = this.#o;
        for (let t = 0; t < this.#i; t++) {
          const n = e.#r[t];
          if (!(n instanceof f) || n.type !== '!') {
            return false;
          }
        }
        return true;
      }
      isEnd() {
        if (this.#e === this) {
          return true;
        }
        if (this.#o?.type === '!') {
          return true;
        }
        if (!this.#o?.isEnd()) {
          return false;
        }
        if (!this.type) {
          return this.#o?.isEnd();
        }
        const e = this.#o ? this.#o.#r.length : 0;
        return this.#i === e - 1;
      }
      copyIn(e) {
        if (typeof e == 'string') {
          this.push(e);
        } else {
          this.push(e.clone(this));
        }
      }
      clone(e) {
        const t = new f(this.type, e);
        for (const e of this.#r) {
          t.copyIn(e);
        }
        return t;
      }
      static #g(e, t, n, r) {
        let o = false;
        let s = false;
        let A = -1;
        let c = false;
        if (t.type === null) {
          let u = n;
          let l = '';
          while (u < e.length) {
            const n = e.charAt(u++);
            if (o || n === '\\') {
              o = !o;
              l += n;
            } else {
              if (s) {
                if (u === A + 1) {
                  if (n === '^' || n === '!') {
                    c = true;
                  }
                } else {
                  if (n === ']' && (u !== A + 2 || !c)) {
                    s = false;
                  }
                }
                l += n;
              } else {
                if (n !== '[') {
                  if (r.noext || !a(n) || e.charAt(u) !== '(') {
                    l += n;
                  } else {
                    t.push(l);
                    l = '';
                    const o = new f(n, t);
                    u = f.#g(e, o, u, r);
                    t.push(o);
                  }
                } else {
                  s = true;
                  A = u;
                  c = false;
                  l += n;
                }
              }
            }
          }
          t.push(l);
          return u;
        }
        let u = n + 1;
        let l = new f(null, t);
        const g = [];
        let d = '';
        while (u < e.length) {
          const n = e.charAt(u++);
          if (o || n === '\\') {
            o = !o;
            d += n;
          } else {
            if (s) {
              if (u === A + 1) {
                if (n === '^' || n === '!') {
                  c = true;
                }
              } else {
                if (n === ']' && (u !== A + 2 || !c)) {
                  s = false;
                }
              }
              d += n;
            } else {
              if (n !== '[') {
                if (a(n) && e.charAt(u) === '(') {
                  l.push(d);
                  d = '';
                  const t = new f(n, l);
                  l.push(t);
                  u = f.#g(e, t, u, r);
                } else {
                  if (n !== '|') {
                    if (n === ')') {
                      if (d === '' && t.#r.length === 0) {
                        t.#u = true;
                      }
                      l.push(d);
                      d = '';
                      t.push(...g, l);
                      return u;
                    }
                    d += n;
                  } else {
                    l.push(d);
                    d = '';
                    g.push(l);
                    l = new f(null, t);
                  }
                }
              } else {
                s = true;
                A = u;
                c = false;
                d += n;
              }
            }
          }
        }
        t.type = null;
        t.#t = undefined;
        t.#r = [e.substring(n - 1)];
        return u;
      }
      static fromGlob(e, t = {}) {
        const n = new f(null, undefined, t);
        f.#g(e, n, 0, t);
        return n;
      }
      toMMPattern() {
        if (this !== this.#e) {
          return this.#e.toMMPattern();
        }
        const e = this.toString();
        const [t, n, r, o] = this.toRegExpSource();
        if (!r && !this.#t && (!this.#A.nocase || !!this.#A.nocaseMagicOnly || e.toUpperCase() === e.toLowerCase())) {
          return n;
        }
        const s = (this.#A.nocase ? 'i' : '') + (o ? 'u' : '');
        return Object.assign(new RegExp(`^${t}$`, s), {
          _src: t,
          _glob: e
        });
      }
      get options() {
        return this.#A;
      }
      toRegExpSource(e) {
        const t = e ?? !!this.#A.dot;
        if (this.#e === this) {
          this.#l();
        }
        if (!this.type) {
          const n = this.isStart() && this.isEnd();
          const r = this.#r.map(t => {
            const [r, o, s, a] = typeof t == 'string' ? f.#d(t, this.#t, n) : t.toRegExpSource(e);
            this.#t = this.#t || s;
            this.#n = this.#n || a;
            return r;
          }).join('');
          let s = '';
          if (this.isStart() && typeof this.#r[0] == 'string') {
            if (this.#r.length !== 1 || !u.has(this.#r[0])) {
              const n = c;
              const o = t && n.has(r.charAt(0)) || r.startsWith('\\.') && n.has(r.charAt(2)) || r.startsWith('\\.\\.') && n.has(r.charAt(4));
              const a = !t && !e && n.has(r.charAt(0));
              s = o ? '(?!(?:^|/)\\.\\.?(?:$|/))' : a ? A : '';
            }
          }
          let a = '';
          if (this.isEnd() && this.#e.#a && this.#o?.type === '!') {
            a = '(?:$|\\/)';
          }
          return [s + r + a, o.unescape(r), this.#t = !!this.#t, this.#n];
        }
        const n = this.type === '*' || this.type === '+';
        const r = this.type === '!' ? '(?:(?!(?:' : '(?:';
        let s = this.#h(t);
        if (this.isStart() && this.isEnd() && !s && this.type !== '!') {
          const e = this.toString();
          this.#r = [e];
          this.type = null;
          this.#t = undefined;
          return [e, o.unescape(this.toString()), false, false];
        }
        let a = !n || e || t ? '' : this.#h(true);
        if (a === s) {
          a = '';
        }
        if (a) {
          s = `(?:${s})(?:${a})*?`;
        }
        let l = '';
        if (this.type === '!' && this.#u) {
          l = (this.isStart() && !t ? A : '') + h;
        } else {
          l = r + s + (this.type === '!' ? `))${!this.isStart() || t || e ? '' : A}${d})` : this.type === '@' ? ')' : this.type === '?' ? ')?' : this.type === '+' && a ? ')' : this.type === '*' && a ? ')?' : `)${this.type}`);
        }
        return [l, o.unescape(s), this.#t = !!this.#t, this.#n];
      }
      #h(e) {
        return this.#r.map(t => {
          if (typeof t == 'string') {
            throw new Error('string type in extglob ast??');
          }
          const [n, r, o, s] = t.toRegExpSource(e);
          this.#n = this.#n || s;
          return n;
        }).filter(e => !this.isStart() || !this.isEnd() || !!e).join('|');
      }
      static #d(e, t, n = false) {
        let s = false;
        let a = '';
        let A = false;
        for (let o = 0; o < e.length; o++) {
          const c = e.charAt(o);
          if (s) {
            s = false;
            a += (l.has(c) ? '\\' : '') + c;
          } else {
            if (c !== '\\') {
              if (c === '[') {
                const [n, s, c, u] = r.parseClass(e, o);
                if (c) {
                  a += n;
                  A = A || s;
                  o += c - 1;
                  t = t || u;
                  continue;
                }
              }
              if (c !== '*') {
                if (c !== '?') {
                  a += c.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
                } else {
                  a += g;
                  t = true;
                }
              } else {
                a += n && e === '*' ? h : d;
                t = true;
              }
            } else {
              if (o === e.length - 1) {
                a += '\\\\';
              } else {
                s = true;
              }
            }
          }
        }
        return [a, o.unescape(e), !!t, A];
      }
    }
    exports.AST = f;
  },
  47511: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.parseClass = undefined;
    const n = {
      '[:alnum:]': ['\\p{L}\\p{Nl}\\p{Nd}', true],
      '[:alpha:]': ['\\p{L}\\p{Nl}', true],
      '[:ascii:]': ['\\x00-\\x7f', false],
      '[:blank:]': ['\\p{Zs}\\t', true],
      '[:cntrl:]': ['\\p{Cc}', true],
      '[:digit:]': ['\\p{Nd}', true],
      '[:graph:]': ['\\p{Z}\\p{C}', true, true],
      '[:lower:]': ['\\p{Ll}', true],
      '[:print:]': ['\\p{C}', true],
      '[:punct:]': ['\\p{P}', true],
      '[:space:]': ['\\p{Z}\\t\\r\\n\\v\\f', true],
      '[:upper:]': ['\\p{Lu}', true],
      '[:word:]': ['\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}', true],
      '[:xdigit:]': ['A-Fa-f0-9', false]
    };
    const r = e => e.replace(/[[\]\\-]/g, '\\$&');
    const o = e => e.join('');
    exports.parseClass = (e, t) => {
      const s = t;
      if (e.charAt(s) !== '[') {
        throw new Error('not in a brace expression');
      }
      const a = [];
      const A = [];
      let c = s + 1;
      let u = false;
      let l = false;
      let g = false;
      let d = false;
      let h = s;
      let f = '';
      e: while (c < e.length) {
        const t = e.charAt(c);
        if (t !== '!' && t !== '^' || c !== s + 1) {
          if (t === ']' && u && !g) {
            h = c + 1;
            break;
          }
          u = true;
          if (t !== '\\' || g) {
            if (t === '[' && !g) {
              for (const [t, [r, o, u]] of Object.entries(n)) {
                if (e.startsWith(t, c)) {
                  if (f) {
                    return ['$.', false, e.length - s, true];
                  }
                  c += t.length;
                  if (u) {
                    A.push(r);
                  } else {
                    a.push(r);
                  }
                  l = l || o;
                  continue e;
                }
              }
            }
            g = false;
            if (f) {
              if (t > f) {
                a.push(r(f) + '-' + r(t));
              } else {
                if (t === f) {
                  a.push(r(t));
                }
              }
              f = '';
              c++;
            } else {
              if (e.startsWith('-]', c + 1)) {
                a.push(r(t + '-'));
                c += 2;
              } else {
                if (e.startsWith('-', c + 1)) {
                  f = t;
                  c += 2;
                } else {
                  a.push(r(t));
                  c++;
                }
              }
            }
          } else {
            g = true;
            c++;
          }
        } else {
          d = true;
          c++;
        }
      }
      if (h < c) {
        return ['', false, 0, false];
      }
      if (!a.length && !A.length) {
        return ['$.', false, e.length - s, true];
      }
      if (A.length === 0 && a.length === 1 && /^\\?.$/.test(a[0]) && !d) {
        const e = a[0].length === 2 ? a[0].slice(-1) : a[0];
        return [(p = e, p.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')), false, h - s, false];
      }
      var p;
      const m = `[${d ? '^' : ''}${o(a)}]`;
      const I = `[${d ? '' : '^'}${o(A)}]`;
      return [a.length && A.length ? `(${m}|${I})` : a.length ? m : I, l, h - s, true];
    };
  },
  84791: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.escape = undefined;
    exports.escape = (e, {
      windowsPathsNoEscape: t = false
    } = {}) => t ? e.replace(/[?*()[\]]/g, '[$&]') : e.replace(/[?*()[\]\\]/g, '\\$&');
  },
  76958: function (module, exports, require) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.unescape = exports.escape = exports.AST = exports.Minimatch = exports.match = exports.makeRe = exports.braceExpand = exports.defaults = exports.filter = exports.GLOBSTAR = exports.sep = exports.minimatch = undefined;
    const o = __importDefault(require(23818));
    const s = require(98718);
    const a = require(26854);
    const A = require(84791);
    const c = require(36128);
    exports.minimatch = (e, t, n = {}) => {
      s.assertValidPattern(t);
      return (!!n.nocomment || t.charAt(0) !== '#') && new M(t, n).match(e);
    };
    const u = /^\*+([^+@!?\*\[\(]*)$/;
    const l = e => t => !t.startsWith('.') && t.endsWith(e);
    const g = e => t => t.endsWith(e);
    const d = e => {
      e = e.toLowerCase();
      return t => !t.startsWith('.') && t.toLowerCase().endsWith(e);
    };
    const h = e => {
      e = e.toLowerCase();
      return t => t.toLowerCase().endsWith(e);
    };
    const f = /^\*+\.\*+$/;
    const p = e => !e.startsWith('.') && e.includes('.');
    const m = e => e !== '.' && e !== '..' && e.includes('.');
    const I = /^\.\*+$/;
    const E = e => e !== '.' && e !== '..' && e.startsWith('.');
    const y = /^\*+$/;
    const w = e => e.length !== 0 && !e.startsWith('.');
    const _ = e => e.length !== 0 && e !== '.' && e !== '..';
    const v = /^\?+([^+@!?\*\[\(]*)?$/;
    const b = ([e, t = '']) => {
      const n = S([e]);
      if (t) {
        t = t.toLowerCase();
        return e => n(e) && e.toLowerCase().endsWith(t);
      } else {
        return n;
      }
    };
    const B = ([e, t = '']) => {
      const n = T([e]);
      if (t) {
        t = t.toLowerCase();
        return e => n(e) && e.toLowerCase().endsWith(t);
      } else {
        return n;
      }
    };
    const Q = ([e, t = '']) => {
      const n = T([e]);
      if (t) {
        return e => n(e) && e.endsWith(t);
      } else {
        return n;
      }
    };
    const D = ([e, t = '']) => {
      const n = S([e]);
      if (t) {
        return e => n(e) && e.endsWith(t);
      } else {
        return n;
      }
    };
    const S = ([e]) => {
      const t = e.length;
      return e => e.length === t && !e.startsWith('.');
    };
    const T = ([e]) => {
      const t = e.length;
      return e => e.length === t && e !== '.' && e !== '..';
    };
    const R = typeof process == 'object' && process ? typeof process.env == 'object' && process.env && process.env.__MINIMATCH_TESTING_PLATFORM__ || process.platform : 'posix';
    const k = {
      sep: '\\'
    };
    const x = {
      sep: '/'
    };
    exports.sep = R === 'win32' ? k.sep : x.sep;
    exports.minimatch.sep = exports.sep;
    exports.GLOBSTAR = Symbol('globstar **');
    exports.minimatch.GLOBSTAR = exports.GLOBSTAR;
    exports.filter = (e, n = {}) => r => exports.minimatch(r, e, n);
    exports.minimatch.filter = exports.filter;
    const P = (e, t = {}) => Object.assign({}, e, t);
    exports.defaults = e => {
      if (!e || typeof e != 'object' || !Object.keys(e).length) {
        return exports.minimatch;
      }
      const n = exports.minimatch;
      return Object.assign((t, r, o = {}) => n(t, r, P(e, o)), {
        Minimatch: class extends n.Minimatch {
          constructor(t, n = {}) {
            super(t, P(e, n));
          }
          static defaults(t) {
            return n.defaults(P(e, t)).Minimatch;
          }
        },
        AST: class extends n.AST {
          constructor(t, n, r = {}) {
            super(t, n, P(e, r));
          }
          static fromGlob(t, r = {}) {
            return n.AST.fromGlob(t, P(e, r));
          }
        },
        unescape: (t, r = {}) => n.unescape(t, P(e, r)),
        escape: (t, r = {}) => n.escape(t, P(e, r)),
        filter: (t, r = {}) => n.filter(t, P(e, r)),
        defaults: t => n.defaults(P(e, t)),
        makeRe: (t, r = {}) => n.makeRe(t, P(e, r)),
        braceExpand: (t, r = {}) => n.braceExpand(t, P(e, r)),
        match: (t, r, o = {}) => n.match(t, r, P(e, o)),
        sep: n.sep,
        GLOBSTAR: exports.GLOBSTAR
      });
    };
    exports.minimatch.defaults = exports.defaults;
    exports.braceExpand = (e, t = {}) => {
      s.assertValidPattern(e);
      if (t.nobrace || !/\{(?:(?!\{).)*\}/.test(e)) {
        return [e];
      } else {
        return o.default(e);
      }
    };
    exports.minimatch.braceExpand = exports.braceExpand;
    exports.makeRe = (e, t = {}) => new M(e, t).makeRe();
    exports.minimatch.makeRe = exports.makeRe;
    exports.match = (e, t, n = {}) => {
      const r = new M(t, n);
      e = e.filter(e => r.match(e));
      if (r.options.nonull && !e.length) {
        e.push(t);
      }
      return e;
    };
    exports.minimatch.match = exports.match;
    const F = /[?*]|[+@!]\(.*?\)|\[|\]/;
    class M {
      options;
      set;
      pattern;
      windowsPathsNoEscape;
      nonegate;
      negate;
      comment;
      empty;
      preserveMultipleSlashes;
      partial;
      globSet;
      globParts;
      nocase;
      isWindows;
      platform;
      windowsNoMagicRoot;
      regexp;
      constructor(e, t = {}) {
        s.assertValidPattern(e);
        t = t || {};
        this.options = t;
        this.pattern = e;
        this.platform = t.platform || R;
        this.isWindows = this.platform === 'win32';
        this.windowsPathsNoEscape = !!t.windowsPathsNoEscape || t.allowWindowsEscape === false;
        if (this.windowsPathsNoEscape) {
          this.pattern = this.pattern.replace(/\\/g, '/');
        }
        this.preserveMultipleSlashes = !!t.preserveMultipleSlashes;
        this.regexp = null;
        this.negate = false;
        this.nonegate = !!t.nonegate;
        this.comment = false;
        this.empty = false;
        this.partial = !!t.partial;
        this.nocase = !!this.options.nocase;
        this.windowsNoMagicRoot = t.windowsNoMagicRoot !== undefined ? t.windowsNoMagicRoot : !!this.isWindows && !!this.nocase;
        this.globSet = [];
        this.globParts = [];
        this.set = [];
        this.make();
      }
      hasMagic() {
        if (this.options.magicalBraces && this.set.length > 1) {
          return true;
        }
        for (const e of this.set) {
          for (const t of e) {
            if (typeof t != 'string') {
              return true;
            }
          }
        }
        return false;
      }
      debug(...e) {}
      make() {
        const e = this.pattern;
        const t = this.options;
        if (!t.nocomment && e.charAt(0) === '#') {
          this.comment = true;
          return;
        }
        if (!e) {
          this.empty = true;
          return;
        }
        this.parseNegate();
        this.globSet = [...new Set(this.braceExpand())];
        if (t.debug) {
          this.debug = (...e) => console.error(...e);
        }
        this.debug(this.pattern, this.globSet);
        const n = this.globSet.map(e => this.slashSplit(e));
        this.globParts = this.preprocess(n);
        this.debug(this.pattern, this.globParts);
        let r = this.globParts.map((e, t, n) => {
          if (this.isWindows && this.windowsNoMagicRoot) {
            const t = e[0] === '' && e[1] === '' && (e[2] === '?' || !F.test(e[2])) && !F.test(e[3]);
            const n = /^[a-z]:/i.test(e[0]);
            if (t) {
              return [...e.slice(0, 4), ...e.slice(4).map(e => this.parse(e))];
            }
            if (n) {
              return [e[0], ...e.slice(1).map(e => this.parse(e))];
            }
          }
          return e.map(e => this.parse(e));
        });
        this.debug(this.pattern, r);
        this.set = r.filter(e => e.indexOf(false) === -1);
        if (this.isWindows) {
          for (let e = 0; e < this.set.length; e++) {
            const t = this.set[e];
            if (t[0] === '' && t[1] === '' && this.globParts[e][2] === '?' && typeof t[3] == 'string' && /^[a-z]:$/i.test(t[3])) {
              t[2] = '?';
            }
          }
        }
        this.debug(this.pattern, this.set);
      }
      preprocess(e) {
        if (this.options.noglobstar) {
          for (let t = 0; t < e.length; t++) {
            for (let n = 0; n < e[t].length; n++) {
              if (e[t][n] === '**') {
                e[t][n] = '*';
              }
            }
          }
        }
        const {
          optimizationLevel: t = 1
        } = this.options;
        if (t >= 2) {
          e = this.firstPhasePreProcess(e);
          e = this.secondPhasePreProcess(e);
        } else {
          e = t >= 1 ? this.levelOneOptimize(e) : this.adjascentGlobstarOptimize(e);
        }
        return e;
      }
      adjascentGlobstarOptimize(e) {
        return e.map(e => {
          let t = -1;
          while ((t = e.indexOf('**', t + 1)) !== -1) {
            let n = t;
            while (e[n + 1] === '**') {
              n++;
            }
            if (n !== t) {
              e.splice(t, n - t);
            }
          }
          return e;
        });
      }
      levelOneOptimize(e) {
        return e.map(e => (e = e.reduce((e, t) => {
          const n = e[e.length - 1];
          if (t === '**' && n === '**') {
            return e;
          } else {
            if (t === '..' && n && n !== '..' && n !== '.' && n !== '**') {
              e.pop();
              return e;
            } else {
              e.push(t);
              return e;
            }
          }
        }, [])).length === 0 ? [''] : e);
      }
      levelTwoFileOptimize(e) {
        if (!Array.isArray(e)) {
          e = this.slashSplit(e);
        }
        let t = false;
        do {
          t = false;
          if (!this.preserveMultipleSlashes) {
            for (let n = 1; n < e.length - 1; n++) {
              const r = e[n];
              if (n !== 1 || r !== '' || e[0] !== '') {
                if (r === '.' || r === '') {
                  t = true;
                  e.splice(n, 1);
                  n--;
                }
              }
            }
            if (e[0] === '.' && e.length === 2 && (e[1] === '.' || e[1] === '')) {
              t = true;
              e.pop();
            }
          }
          let n = 0;
          while ((n = e.indexOf('..', n + 1)) !== -1) {
            const r = e[n - 1];
            if (r && r !== '.' && r !== '..' && r !== '**') {
              t = true;
              e.splice(n - 1, 2);
              n -= 2;
            }
          }
        } while (t);
        if (e.length === 0) {
          return [''];
        } else {
          return e;
        }
      }
      firstPhasePreProcess(e) {
        let t = false;
        do {
          t = false;
          for (let n of e) {
            let r = -1;
            while ((r = n.indexOf('**', r + 1)) !== -1) {
              let o = r;
              while (n[o + 1] === '**') {
                o++;
              }
              if (o > r) {
                n.splice(r + 1, o - r);
              }
              let s = n[r + 1];
              const a = n[r + 2];
              const A = n[r + 3];
              if (s !== '..') {
                continue;
              }
              if (!a || a === '.' || a === '..' || !A || A === '.' || A === '..') {
                continue;
              }
              t = true;
              n.splice(r, 1);
              const c = n.slice(0);
              c[r] = '**';
              e.push(c);
              r--;
            }
            if (!this.preserveMultipleSlashes) {
              for (let e = 1; e < n.length - 1; e++) {
                const r = n[e];
                if (e !== 1 || r !== '' || n[0] !== '') {
                  if (r === '.' || r === '') {
                    t = true;
                    n.splice(e, 1);
                    e--;
                  }
                }
              }
              if (n[0] === '.' && n.length === 2 && (n[1] === '.' || n[1] === '')) {
                t = true;
                n.pop();
              }
            }
            let o = 0;
            while ((o = n.indexOf('..', o + 1)) !== -1) {
              const e = n[o - 1];
              if (e && e !== '.' && e !== '..' && e !== '**') {
                t = true;
                const e = o === 1 && n[o + 1] === '**' ? ['.'] : [];
                n.splice(o - 1, 2, ...e);
                if (n.length === 0) {
                  n.push('');
                }
                o -= 2;
              }
            }
          }
        } while (t);
        return e;
      }
      secondPhasePreProcess(e) {
        for (let t = 0; t < e.length - 1; t++) {
          for (let n = t + 1; n < e.length; n++) {
            const r = this.partsMatch(e[t], e[n], !this.preserveMultipleSlashes);
            if (r) {
              e[t] = [];
              e[n] = r;
              break;
            }
          }
        }
        return e.filter(e => e.length);
      }
      partsMatch(e, t, n = false) {
        let r = 0;
        let o = 0;
        let s = [];
        let a = '';
        while (r < e.length && o < t.length) {
          if (e[r] === t[o]) {
            s.push(a === 'b' ? t[o] : e[r]);
            r++;
            o++;
          } else {
            if (n && e[r] === '**' && t[o] === e[r + 1]) {
              s.push(e[r]);
              r++;
            } else {
              if (n && t[o] === '**' && e[r] === t[o + 1]) {
                s.push(t[o]);
                o++;
              } else {
                if (e[r] !== '*' || !t[o] || !this.options.dot && t[o].startsWith('.') || t[o] === '**') {
                  if (t[o] !== '*' || !e[r] || !this.options.dot && e[r].startsWith('.') || e[r] === '**') {
                    return false;
                  }
                  if (a === 'a') {
                    return false;
                  }
                  a = 'b';
                  s.push(t[o]);
                  r++;
                  o++;
                } else {
                  if (a === 'b') {
                    return false;
                  }
                  a = 'a';
                  s.push(e[r]);
                  r++;
                  o++;
                }
              }
            }
          }
        }
        return e.length === t.length && s;
      }
      parseNegate() {
        if (this.nonegate) {
          return;
        }
        const e = this.pattern;
        let t = false;
        let n = 0;
        for (let r = 0; r < e.length && e.charAt(r) === '!'; r++) {
          t = !t;
          n++;
        }
        if (n) {
          this.pattern = e.slice(n);
        }
        this.negate = t;
      }
      matchOne(e, n, r = false) {
        const o = this.options;
        if (this.isWindows) {
          const t = typeof e[0] == 'string' && /^[a-z]:$/i.test(e[0]);
          const r = !t && e[0] === '' && e[1] === '' && e[2] === '?' && /^[a-z]:$/i.test(e[3]);
          const o = typeof n[0] == 'string' && /^[a-z]:$/i.test(n[0]);
          const s = r ? 3 : t ? 0 : undefined;
          const a = !o && n[0] === '' && n[1] === '' && n[2] === '?' && typeof n[3] == 'string' && /^[a-z]:$/i.test(n[3]) ? 3 : o ? 0 : undefined;
          if (typeof s == 'number' && typeof a == 'number') {
            const [t, r] = [e[s], n[a]];
            if (t.toLowerCase() === r.toLowerCase()) {
              n[a] = t;
              if (a > s) {
                n = n.slice(a);
              } else {
                if (s > a) {
                  e = e.slice(s);
                }
              }
            }
          }
        }
        const {
          optimizationLevel: s = 1
        } = this.options;
        if (s >= 2) {
          e = this.levelTwoFileOptimize(e);
        }
        this.debug('matchOne', this, {
          file: e,
          pattern: n
        });
        this.debug('matchOne', e.length, n.length);
        for (var a = 0, A = 0, c = e.length, u = n.length; a < c && A < u; a++, A++) {
          this.debug('matchOne loop');
          var l = n[A];
          var g = e[a];
          this.debug(n, l, g);
          if (l === false) {
            return false;
          }
          if (l === exports.GLOBSTAR) {
            this.debug('GLOBSTAR', [n, l, g]);
            var d = a;
            var h = A + 1;
            if (h === u) {
              for (this.debug('** at the end'); a < c; a++) {
                if (e[a] === '.' || e[a] === '..' || !o.dot && e[a].charAt(0) === '.') {
                  return false;
                }
              }
              return true;
            }
            while (d < c) {
              var f = e[d];
              this.debug('\nglobstar while', e, d, n, h, f);
              if (this.matchOne(e.slice(d), n.slice(h), r)) {
                this.debug('globstar found match!', d, c, f);
                return true;
              }
              if (f === '.' || f === '..' || !o.dot && f.charAt(0) === '.') {
                this.debug('dot detected!', e, d, n, h);
                break;
              }
              this.debug('globstar swallow a segment, and continue');
              d++;
            }
            return !!r && !(this.debug('\n>>> no match, partial?', e, d, n, h), d !== c);
          }
          let s;
          if (typeof l == 'string') {
            s = g === l;
            this.debug('string match', l, g, s);
          } else {
            s = l.test(g);
            this.debug('pattern match', l, g, s);
          }
          if (!s) {
            return false;
          }
        }
        if (a === c && A === u) {
          return true;
        }
        if (a === c) {
          return r;
        }
        if (A === u) {
          return a === c - 1 && e[a] === '';
        }
        throw new Error('wtf?');
      }
      braceExpand() {
        return exports.braceExpand(this.pattern, this.options);
      }
      parse(e) {
        s.assertValidPattern(e);
        const n = this.options;
        if (e === '**') {
          return exports.GLOBSTAR;
        }
        if (e === '') {
          return '';
        }
        let r;
        let o = null;
        if (r = e.match(y)) {
          o = n.dot ? _ : w;
        } else {
          if (r = e.match(u)) {
            o = (n.nocase ? n.dot ? h : d : n.dot ? g : l)(r[1]);
          } else {
            if (r = e.match(v)) {
              o = (n.nocase ? n.dot ? B : b : n.dot ? Q : D)(r);
            } else {
              if (r = e.match(f)) {
                o = n.dot ? m : p;
              } else {
                if (r = e.match(I)) {
                  o = E;
                }
              }
            }
          }
        }
        const A = a.AST.fromGlob(e, this.options).toMMPattern();
        if (o && typeof A == 'object') {
          Reflect.defineProperty(A, 'test', {
            value: o
          });
        }
        return A;
      }
      makeRe() {
        if (this.regexp || this.regexp === false) {
          return this.regexp;
        }
        const e = this.set;
        if (!e.length) {
          this.regexp = false;
          return this.regexp;
        }
        const n = this.options;
        const r = n.noglobstar ? '[^/]*?' : n.dot ? '(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?' : '(?:(?!(?:\\/|^)\\.).)*?';
        const o = new Set(n.nocase ? ['i'] : []);
        let s = e.map(e => {
          const n = e.map(e => {
            if (e instanceof RegExp) {
              for (const t of e.flags.split('')) {
                o.add(t);
              }
            }
            if (typeof e == 'string') {
              return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
            } else {
              if (e === exports.GLOBSTAR) {
                return exports.GLOBSTAR;
              } else {
                return e._src;
              }
            }
          });
          n.forEach((e, o) => {
            const s = n[o + 1];
            const a = n[o - 1];
            if (e === exports.GLOBSTAR && a !== exports.GLOBSTAR) {
              if (a === undefined) {
                if (s !== undefined && s !== exports.GLOBSTAR) {
                  n[o + 1] = `(?:\\/|${r}\\/)?${s}`;
                } else {
                  n[o] = r;
                }
              } else {
                if (s === undefined) {
                  n[o - 1] = a + '(?:\\/|' + r + ')?';
                } else {
                  if (s !== exports.GLOBSTAR) {
                    n[o - 1] = a + '(?:\\/|\\/' + r + '\\/)' + s;
                    n[o + 1] = exports.GLOBSTAR;
                  }
                }
              }
            }
          });
          return n.filter(e => e !== exports.GLOBSTAR).join('/');
        }).join('|');
        const [a, A] = e.length > 1 ? ['(?:', ')'] : ['', ''];
        s = `^${a}${s}${A}\$`;
        if (this.negate) {
          s = `^(?!${s}).+\$`;
        }
        try {
          this.regexp = new RegExp(s, [...o].join(''));
        } catch (e) {
          this.regexp = false;
        }
        return this.regexp;
      }
      slashSplit(e) {
        if (this.preserveMultipleSlashes) {
          return e.split('/');
        } else {
          if (this.isWindows && /^\/\/[^\/]+/.test(e)) {
            return ['', ...e.split(/\/+/)];
          } else {
            return e.split(/\/+/);
          }
        }
      }
      match(e, t = this.partial) {
        this.debug('match', e, this.pattern);
        if (this.comment) {
          return false;
        }
        if (this.empty) {
          return e === '';
        }
        if (e === '/' && t) {
          return true;
        }
        const n = this.options;
        if (this.isWindows) {
          e = e.split('\\').join('/');
        }
        const r = this.slashSplit(e);
        this.debug(this.pattern, 'split', r);
        const o = this.set;
        this.debug(this.pattern, 'set', o);
        let s = r[r.length - 1];
        if (!s) {
          for (let e = r.length - 2; !s && e >= 0; e--) {
            s = r[e];
          }
        }
        for (let e = 0; e < o.length; e++) {
          const a = o[e];
          let A = r;
          if (n.matchBase && a.length === 1) {
            A = [s];
          }
          if (this.matchOne(A, a, t)) {
            return !!n.flipNegate || !this.negate;
          }
        }
        return !n.flipNegate && this.negate;
      }
      static defaults(e) {
        return exports.minimatch.defaults(e).Minimatch;
      }
    }
    exports.Minimatch = M;
    var O = require(26854);
    Object.defineProperty(exports, 'AST', {
      enumerable: true,
      get: function () {
        return O.AST;
      }
    });
    var N = require(84791);
    Object.defineProperty(exports, 'escape', {
      enumerable: true,
      get: function () {
        return N.escape;
      }
    });
    var L = require(36128);
    Object.defineProperty(exports, 'unescape', {
      enumerable: true,
      get: function () {
        return L.unescape;
      }
    });
    exports.minimatch.AST = a.AST;
    exports.minimatch.Minimatch = M;
    exports.minimatch.escape = A.escape;
    exports.minimatch.unescape = c.unescape;
  },
  36128: (module, exports) => {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    exports.unescape = undefined;
    exports.unescape = (e, {
      windowsPathsNoEscape: t = false
    } = {}) => t ? e.replace(/\[([^\/\\])\]/g, '$1') : e.replace(/((?!\\).|^)\[([^\/\\])\]/g, '$1$2').replace(/\\([^\/])/g, '$1');
  },
  69214: (module, exports, require) => {
    "use strict";

    require.r(exports);
    require.d(exports, {
      TomlDate: () => l,
      TomlError: () => r,
      default: () => x,
      parse: () => v,
      stringify: () => k
    });
    class r extends Error {
      line;
      column;
      codeblock;
      constructor(e, t) {
        const [n, r] = function (e, t) {
          let n = e.slice(0, t).split(/\r\n|\n|\r/g);
          return [n.length, n.pop().length + 1];
        }(t.toml, t.ptr);
        const o = function (e, t, n) {
          let r = e.split(/\r\n|\n|\r/g);
          let o = '';
          let s = 1 + (Math.log10(t + 1) | 0);
          for (let e = t - 1; e <= t + 1; e++) {
            let a = r[e - 1];
            if (a) {
              o += e.toString().padEnd(s, ' ');
              o += ':  ';
              o += a;
              o += '\n';
              if (e === t) {
                o += ' '.repeat(s + n + 2);
                o += '^\n';
              }
            }
          }
          return o;
        }(t.toml, n, r);
        super(`Invalid TOML document: ${e}\n\n${o}`, t);
        this.line = n;
        this.column = r;
        this.codeblock = o;
      }
    }
    function o(e, t = 0, n = e.length) {
      let r = e.indexOf('\n', t);
      if (e[r - 1] === '\r') {
        r--;
      }
      if (r <= n) {
        return r;
      } else {
        return -1;
      }
    }
    function s(e, t) {
      for (let n = t; n < e.length; n++) {
        let o = e[n];
        if (o === '\n') {
          return n;
        }
        if (o === '\r' && e[n + 1] === '\n') {
          return n + 1;
        }
        if (o < ' ' && o !== '\t' || o === '') {
          throw new r('control characters are not allowed in comments', {
            toml: e,
            ptr: t
          });
        }
      }
      return e.length;
    }
    function a(e, t, n, r) {
      let o;
      while ((o = e[t]) === ' ' || o === '\t' || !n && (o === '\n' || o === '\r' && e[t + 1] === '\n')) {
        t++;
      }
      if (r || o !== '#') {
        return t;
      } else {
        return a(e, s(e, t), n);
      }
    }
    function A(e, t, n, s, a = false) {
      if (!s) {
        if ((t = o(e, t)) < 0) {
          return e.length;
        } else {
          return t;
        }
      }
      for (let r = t; r < e.length; r++) {
        let t = e[r];
        if (t === '#') {
          r = o(e, r);
        } else {
          if (t === n) {
            return r + 1;
          }
          if (t === s) {
            return r;
          }
          if (a && (t === '\n' || t === '\r' && e[r + 1] === '\n')) {
            return r;
          }
        }
      }
      throw new r('cannot find end of structure', {
        toml: e,
        ptr: t
      });
    }
    function c(e, t) {
      let n = e[t];
      let r = n === e[t + 1] && e[t + 1] === e[t + 2] ? e.slice(t, t + 3) : n;
      t += r.length - 1;
      do {
        t = e.indexOf(r, ++t);
      } while (t > -1 && n !== '\'' && e[t - 1] === '\\' && e[t - 2] !== '\\');
      if (t > -1) {
        t += r.length;
        if (r.length > 1) {
          if (e[t] === n) {
            t++;
          }
          if (e[t] === n) {
            t++;
          }
        }
      }
      return t;
    }
    let u = /^(\d{4}-\d{2}-\d{2})?[T ]?(?:(\d{2}):\d{2}:\d{2}(?:\.\d+)?)?(Z|[-+]\d{2}:\d{2})?$/i;
    class l extends Date {
      #f = false;
      #p = false;
      #C = null;
      constructor(e) {
        let t = true;
        let n = true;
        let r = 'Z';
        if (typeof e == 'string') {
          let o = e.match(u);
          if (o) {
            if (!o[1]) {
              t = false;
              e = `0000-01-01T${e}`;
            }
            n = !!o[2];
            if (o[2] && +o[2] > 23) {
              e = '';
            } else {
              r = o[3] || null;
              e = e.toUpperCase();
              if (!r && n) {
                e += 'Z';
              }
            }
          } else {
            e = '';
          }
        }
        super(e);
        if (!isNaN(this.getTime())) {
          this.#f = t;
          this.#p = n;
          this.#C = r;
        }
      }
      isDateTime() {
        return this.#f && this.#p;
      }
      isLocal() {
        return !this.#f || !this.#p || !this.#C;
      }
      isDate() {
        return this.#f && !this.#p;
      }
      isTime() {
        return this.#p && !this.#f;
      }
      isValid() {
        return this.#f || this.#p;
      }
      toISOString() {
        let e = super.toISOString();
        if (this.isDate()) {
          return e.slice(0, 10);
        }
        if (this.isTime()) {
          return e.slice(11, 23);
        }
        if (this.#C === null) {
          return e.slice(0, -1);
        }
        if (this.#C === 'Z') {
          return e;
        }
        let t = +this.#C.slice(1, 3) * 60 + +this.#C.slice(4, 6);
        t = this.#C[0] === '-' ? t : -t;
        return new Date(this.getTime() - t * 60000).toISOString().slice(0, -1) + this.#C;
      }
      static wrapAsOffsetDateTime(e, t = 'Z') {
        let n = new l(e);
        n.#C = t;
        return n;
      }
      static wrapAsLocalDateTime(e) {
        let t = new l(e);
        t.#C = null;
        return t;
      }
      static wrapAsLocalDate(e) {
        let t = new l(e);
        t.#p = false;
        t.#C = null;
        return t;
      }
      static wrapAsLocalTime(e) {
        let t = new l(e);
        t.#f = false;
        t.#C = null;
        return t;
      }
    }
    let g = /^((0x[0-9a-fA-F](_?[0-9a-fA-F])*)|(([+-]|0[ob])?\d(_?\d)*))$/;
    let d = /^[+-]?\d(_?\d)*(\.\d(_?\d)*)?([eE][+-]?\d(_?\d)*)?$/;
    let h = /^[+-]?0[0-9_]/;
    let f = /^[0-9a-f]{4,8}$/i;
    let p = {
      b: '\b',
      t: '\t',
      n: '\n',
      f: '\f',
      r: '\r',
      '"': '"',
      '\\': '\\'
    };
    function m(e, t = 0, n = e.length) {
      let o = e[t] === '\'';
      let s = e[t++] === e[t] && e[t] === e[t + 1];
      if (s) {
        n -= 2;
        if (e[t += 2] === '\r') {
          t++;
        }
        if (e[t] === '\n') {
          t++;
        }
      }
      let A;
      let c = 0;
      let u = '';
      let l = t;
      while (t < n - 1) {
        let n = e[t++];
        if (n === '\n' || n === '\r' && e[t] === '\n') {
          if (!s) {
            throw new r('newlines are not allowed in strings', {
              toml: e,
              ptr: t - 1
            });
          }
        } else {
          if (n < ' ' && n !== '\t' || n === '') {
            throw new r('control characters are not allowed in strings', {
              toml: e,
              ptr: t - 1
            });
          }
        }
        if (A) {
          A = false;
          if (n === 'u' || n === 'U') {
            let o = e.slice(t, t += n === 'u' ? 4 : 8);
            if (!f.test(o)) {
              throw new r('invalid unicode escape', {
                toml: e,
                ptr: c
              });
            }
            try {
              u += String.fromCodePoint(parseInt(o, 16));
            } catch {
              throw new r('invalid unicode escape', {
                toml: e,
                ptr: c
              });
            }
          } else {
            if (!s || n !== '\n' && n !== ' ' && n !== '\t' && n !== '\r') {
              if (!(n in p)) {
                throw new r('unrecognized escape sequence', {
                  toml: e,
                  ptr: c
                });
              }
              u += p[n];
            } else {
              if (e[t = a(e, t - 1, true)] !== '\n' && e[t] !== '\r') {
                throw new r('invalid escape: only line-ending whitespace may be escaped', {
                  toml: e,
                  ptr: c
                });
              }
              t = a(e, t);
            }
          }
          l = t;
        } else {
          if (!o && n === '\\') {
            c = t - 1;
            A = true;
            u += e.slice(l, c);
          }
        }
      }
      return u + e.slice(l, n - 1);
    }
    function I(e, t, n) {
      if (e === 'true') {
        return true;
      }
      if (e === 'false') {
        return false;
      }
      if (e === '-inf') {
        return -Infinity;
      }
      if (e === 'inf' || e === '+inf') {
        return Infinity;
      }
      if (e === 'nan' || e === '+nan' || e === '-nan') {
        return NaN;
      }
      if (e === '-0') {
        return 0;
      }
      let o;
      if ((o = g.test(e)) || d.test(e)) {
        if (h.test(e)) {
          throw new r('leading zeroes are not allowed', {
            toml: t,
            ptr: n
          });
        }
        let s = +e.replace(/_/g, '');
        if (isNaN(s)) {
          throw new r('invalid number', {
            toml: t,
            ptr: n
          });
        }
        if (o && !Number.isSafeInteger(s)) {
          throw new r('integer value cannot be represented losslessly', {
            toml: t,
            ptr: n
          });
        }
        return s;
      }
      let s = new l(e);
      if (!s.isValid()) {
        throw new r('invalid value', {
          toml: t,
          ptr: n
        });
      }
      return s;
    }
    function E(e, t, n) {
      let u;
      let l = e[t];
      if (l === '[' || l === '{') {
        let [a, c] = l === '[' ? function (e, t) {
          let n;
          let o = [];
          t++;
          while ((n = e[t++]) !== ']' && n) {
            if (n === ',') {
              throw new r('expected value, found comma', {
                toml: e,
                ptr: t - 1
              });
            }
            if (n === '#') {
              t = s(e, t);
            } else {
              if (n !== ' ' && n !== '\t' && n !== '\n' && n !== '\r') {
                let n = E(e, t - 1, ']');
                o.push(n[0]);
                t = n[1];
              }
            }
          }
          if (!n) {
            throw new r('unfinished array encountered', {
              toml: e,
              ptr: t
            });
          }
          return [o, t];
        }(e, t) : function (e, t) {
          let n;
          let o = {};
          let s = new Set();
          let a = 0;
          t++;
          while ((n = e[t++]) !== '}' && n) {
            if (n === '\n') {
              throw new r('newlines are not allowed in inline tables', {
                toml: e,
                ptr: t - 1
              });
            }
            if (n === '#') {
              throw new r('inline tables cannot contain comments', {
                toml: e,
                ptr: t - 1
              });
            }
            if (n === ',') {
              throw new r('expected key-value, found comma', {
                toml: e,
                ptr: t - 1
              });
            }
            if (n !== ' ' && n !== '\t') {
              let n;
              let A = o;
              let c = false;
              let [u, l] = w(e, t - 1);
              for (let o = 0; o < u.length; o++) {
                if (o) {
                  A = c ? A[n] : A[n] = {};
                }
                n = u[o];
                if ((c = Object.hasOwn(A, n)) && (typeof A[n] != 'object' || s.has(A[n]))) {
                  throw new r('trying to redefine an already defined value', {
                    toml: e,
                    ptr: t
                  });
                }
                if (!c && n === '__proto__') {
                  Object.defineProperty(A, n, {
                    enumerable: true,
                    configurable: true,
                    writable: true
                  });
                }
              }
              if (c) {
                throw new r('trying to redefine an already defined value', {
                  toml: e,
                  ptr: t
                });
              }
              let [g, d] = E(e, l, '}');
              s.add(g);
              A[n] = g;
              a = e[(t = d) - 1] === ',' ? t - 1 : 0;
            }
          }
          if (a) {
            throw new r('trailing commas are not allowed in inline tables', {
              toml: e,
              ptr: a
            });
          }
          if (!n) {
            throw new r('unfinished table encountered', {
              toml: e,
              ptr: t
            });
          }
          return [o, t];
        }(e, t);
        let u = A(e, c, ',', n);
        if (n === '}') {
          let t = o(e, c, u);
          if (t > -1) {
            throw new r('newlines are not allowed in inline tables', {
              toml: e,
              ptr: t
            });
          }
        }
        return [a, u];
      }
      if (l === '"' || l === '\'') {
        u = c(e, t);
        let o = m(e, t, u);
        if (n) {
          u = a(e, u, n !== ']');
          if (e[u] && e[u] !== ',' && e[u] !== n && e[u] !== '\n' && e[u] !== '\r') {
            throw new r('unexpected character encountered', {
              toml: e,
              ptr: u
            });
          }
          u += +(e[u] === ',');
        }
        return [o, u];
      }
      u = A(e, t, ',', n);
      let g = function (e, t, n, o) {
        let a = e.slice(t, n);
        let A = a.indexOf('#');
        if (A > -1) {
          s(e, A);
          a = a.slice(0, A);
        }
        let c = a.trimEnd();
        if (!o) {
          let n = a.indexOf('\n', c.length);
          if (n > -1) {
            throw new r('newlines are not allowed in inline tables', {
              toml: e,
              ptr: t + n
            });
          }
        }
        return [c, A];
      }(e, t, u - +(e[u - 1] === ','), n === ']');
      if (!g[0]) {
        throw new r('incomplete key-value declaration: no value specified', {
          toml: e,
          ptr: t
        });
      }
      if (n && g[1] > -1) {
        u = a(e, t + g[1]);
        u += +(e[u] === ',');
      }
      return [I(g[0], e, t), u];
    }
    let y = /^[a-zA-Z0-9-_]+[ \t]*$/;
    function w(e, t, n = '=') {
      let s = t - 1;
      let A = [];
      let u = e.indexOf(n, t);
      if (u < 0) {
        throw new r('incomplete key-value: cannot find end of key', {
          toml: e,
          ptr: t
        });
      }
      do {
        let a = e[t = ++s];
        if (a !== ' ' && a !== '\t') {
          if (a === '"' || a === '\'') {
            if (a === e[t + 1] && a === e[t + 2]) {
              throw new r('multiline strings are not allowed in keys', {
                toml: e,
                ptr: t
              });
            }
            let l = c(e, t);
            if (l < 0) {
              throw new r('unfinished string encountered', {
                toml: e,
                ptr: t
              });
            }
            s = e.indexOf('.', l);
            let g = e.slice(l, s < 0 || s > u ? u : s);
            let d = o(g);
            if (d > -1) {
              throw new r('newlines are not allowed in keys', {
                toml: e,
                ptr: t + s + d
              });
            }
            if (g.trimStart()) {
              throw new r('found extra tokens after the string part', {
                toml: e,
                ptr: l
              });
            }
            if (u < l && (u = e.indexOf(n, l), u < 0)) {
              throw new r('incomplete key-value: cannot find end of key', {
                toml: e,
                ptr: t
              });
            }
            A.push(m(e, t, l));
          } else {
            s = e.indexOf('.', t);
            let n = e.slice(t, s < 0 || s > u ? u : s);
            if (!y.test(n)) {
              throw new r('only letter, numbers, dashes and underscores are allowed in keys', {
                toml: e,
                ptr: t
              });
            }
            A.push(n.trimEnd());
          }
        }
      } while (s + 1 && s < u);
      return [A, a(e, u + 1, true, true)];
    }
    function _(e, t, n, r) {
      let o;
      let s;
      let a = t;
      let A = n;
      let c = false;
      for (let t = 0; t < e.length; t++) {
        if (t) {
          a = c ? a[o] : a[o] = {};
          A = (s = A[o]).c;
          if (r === 0 && (s.t === 1 || s.t === 2)) {
            return null;
          }
          if (s.t === 2) {
            let e = a.length - 1;
            a = a[e];
            A = A[e].c;
          }
        }
        o = e[t];
        if ((c = Object.hasOwn(a, o)) && A[o]?.t === 0 && A[o]?.d) {
          return null;
        }
        if (!c) {
          if (o === '__proto__') {
            Object.defineProperty(a, o, {
              enumerable: true,
              configurable: true,
              writable: true
            });
            Object.defineProperty(A, o, {
              enumerable: true,
              configurable: true,
              writable: true
            });
          }
          A[o] = {
            t: t < e.length - 1 && r === 2 ? 3 : r,
            d: false,
            i: 0,
            c: {}
          };
        }
      }
      s = A[o];
      if (s.t !== r && (r !== 1 || s.t !== 3)) {
        return null;
      }
      if (r === 2) {
        if (!s.d) {
          s.d = true;
          a[o] = [];
        }
        a[o].push(a = {});
        s.c[s.i++] = s = {
          t: 1,
          d: false,
          i: 0,
          c: {}
        };
      }
      if (s.d) {
        return null;
      }
      s.d = true;
      if (r === 1) {
        a = c ? a[o] : a[o] = {};
      } else {
        if (r === 0 && c) {
          return null;
        }
      }
      return [o, a, s.c];
    }
    function v(e) {
      let t = {};
      let n = {};
      let o = t;
      let s = n;
      for (let A = a(e, 0); A < e.length;) {
        if (e[A] === '[') {
          let a = e[++A] === '[';
          let c = w(e, A += +a, ']');
          if (a) {
            if (e[c[1] - 1] !== ']') {
              throw new r('expected end of table declaration', {
                toml: e,
                ptr: c[1] - 1
              });
            }
            c[1]++;
          }
          let u = _(c[0], t, n, a ? 2 : 1);
          if (!u) {
            throw new r('trying to redefine an already defined table or value', {
              toml: e,
              ptr: A
            });
          }
          s = u[2];
          o = u[1];
          A = c[1];
        } else {
          let t = w(e, A);
          let n = _(t[0], o, s, 0);
          if (!n) {
            throw new r('trying to redefine an already defined table or value', {
              toml: e,
              ptr: A
            });
          }
          let a = E(e, t[1]);
          n[1][n[0]] = a[0];
          A = a[1];
        }
        A = a(e, A, true);
        if (e[A] && e[A] !== '\n' && e[A] !== '\r') {
          throw new r('each key-value declaration must be followed by an end-of-line', {
            toml: e,
            ptr: A
          });
        }
        A = a(e, A);
      }
      return t;
    }
    const b = /^[a-z0-9-_]+$/i;
    function B(e) {
      let t = typeof e;
      if (t === 'object') {
        if (Array.isArray(e)) {
          return 'array';
        }
        if (e instanceof Date) {
          return 'date';
        }
      }
      return t;
    }
    function Q(e) {
      for (let t = 0; t < e.length; t++) {
        if (B(e[t]) !== 'object') {
          return false;
        }
      }
      return e.length != 0;
    }
    function D(e) {
      return JSON.stringify(e).replace(/\x7f/g, '\\u007f');
    }
    function S(e, t = B(e)) {
      if (t === 'number') {
        if (isNaN(e)) {
          return 'nan';
        } else {
          if (e === Infinity) {
            return 'inf';
          } else {
            if (e === -Infinity) {
              return '-inf';
            } else {
              return e.toString();
            }
          }
        }
      }
      if (t === 'bigint' || t === 'boolean') {
        return e.toString();
      }
      if (t === 'string') {
        return D(e);
      }
      if (t === 'date') {
        if (isNaN(e.getTime())) {
          throw new TypeError('cannot serialize invalid date');
        }
        return e.toISOString();
      }
      if (t === 'object') {
        return function (e) {
          let t = Object.keys(e);
          if (t.length === 0) {
            return '{}';
          }
          let n = '{ ';
          for (let r = 0; r < t.length; r++) {
            let o = t[r];
            if (r) {
              n += ', ';
            }
            n += b.test(o) ? o : D(o);
            n += ' = ';
            n += S(e[o]);
          }
          return n + ' }';
        }(e);
      } else {
        if (t === 'array') {
          return function (e) {
            if (e.length === 0) {
              return '[]';
            }
            let t = '[ ';
            for (let n = 0; n < e.length; n++) {
              if (n) {
                t += ', ';
              }
              if (e[n] === null || e[n] === undefined) {
                throw new TypeError('arrays cannot contain null or undefined values');
              }
              t += S(e[n]);
            }
            return t + ' ]';
          }(e);
        } else {
          return undefined;
        }
      }
    }
    function T(e, t) {
      let n = '';
      for (let r = 0; r < e.length; r++) {
        n += `[[${t}]]\n`;
        n += R(e[r], t);
        n += '\n\n';
      }
      return n;
    }
    function R(e, t = '') {
      let n = '';
      let r = '';
      let o = Object.keys(e);
      for (let s = 0; s < o.length; s++) {
        let a = o[s];
        if (e[a] !== null && e[a] !== undefined) {
          let o = B(e[a]);
          if (o === 'symbol' || o === 'function') {
            throw new TypeError(`cannot serialize values of type '${o}'`);
          }
          let s = b.test(a) ? a : D(a);
          if (o === 'array' && Q(e[a])) {
            r += T(e[a], t ? `${t}.${s}` : s);
          } else {
            if (o === 'object') {
              let n = t ? `${t}.${s}` : s;
              r += `[${n}]\n`;
              r += R(e[a], n);
              r += '\n\n';
            } else {
              n += s;
              n += ' = ';
              n += S(e[a], o);
              n += '\n';
            }
          }
        }
      }
      return `${n}\n${r}`.trim();
    }
    function k(e) {
      if (B(e) !== 'object') {
        throw new TypeError('stringify can only be called with an object');
      }
      return R(e);
    }
    const x = {
      parse: v,
      stringify: k,
      TomlDate: l,
      TomlError: r
    };
  },
  38659: (module, exports, require) => {
    "use strict";

    var r;
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    var g;
    var d;
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    var v;
    var b;
    var B;
    var Q;
    var D;
    var S;
    var T;
    var R;
    var k;
    var x;
    var P;
    var F;
    var M;
    var O;
    var N;
    var L;
    var K;
    var U;
    var j;
    var q;
    var G;
    var Y;
    var H;
    var J;
    var z;
    var $;
    var W;
    var V;
    var X;
    var Z;
    var ee;
    var te;
    var ne;
    var re;
    var oe;
    var ie;
    var se;
    var ae;
    var Ae;
    var ce;
    var ue;
    var le;
    var ge;
    var de;
    var he;
    var fe;
    var pe;
    var Ce;
    var me;
    var Ie;
    var Ee;
    var ye;
    var we;
    var _e;
    var ve;
    var be;
    var Be;
    var Qe;
    var De;
    var Se;
    var Te;
    require.r(exports);
    require.d(exports, {
      AnnotatedTextEdit: () => Q,
      ChangeAnnotation: () => b,
      ChangeAnnotationIdentifier: () => B,
      CodeAction: () => ce,
      CodeActionContext: () => Ae,
      CodeActionKind: () => se,
      CodeActionTriggerKind: () => ae,
      CodeDescription: () => y,
      CodeLens: () => ue,
      Color: () => g,
      ColorInformation: () => d,
      ColorPresentation: () => h,
      Command: () => _,
      CompletionItem: () => J,
      CompletionItemKind: () => U,
      CompletionItemLabelDetails: () => H,
      CompletionItemTag: () => q,
      CompletionList: () => z,
      CreateFile: () => S,
      DeleteFile: () => R,
      Diagnostic: () => w,
      DiagnosticRelatedInformation: () => m,
      DiagnosticSeverity: () => I,
      DiagnosticTag: () => E,
      DocumentHighlight: () => ee,
      DocumentHighlightKind: () => Z,
      DocumentLink: () => ge,
      DocumentSymbol: () => ie,
      DocumentUri: () => r,
      EOL: () => Pe,
      FoldingRange: () => p,
      FoldingRangeKind: () => f,
      FormattingOptions: () => le,
      Hover: () => W,
      InlayHint: () => _e,
      InlayHintKind: () => ye,
      InlayHintLabelPart: () => we,
      InlineCompletionContext: () => Se,
      InlineCompletionItem: () => be,
      InlineCompletionList: () => Be,
      InlineCompletionTriggerKind: () => Qe,
      InlineValueContext: () => Ee,
      InlineValueEvaluatableExpression: () => Ie,
      InlineValueText: () => Ce,
      InlineValueVariableLookup: () => me,
      InsertReplaceEdit: () => G,
      InsertTextFormat: () => j,
      InsertTextMode: () => Y,
      LanguageKind: () => O,
      Location: () => u,
      LocationLink: () => l,
      MarkedString: () => $,
      MarkupContent: () => K,
      MarkupKind: () => L,
      OptionalVersionedTextDocumentIdentifier: () => M,
      ParameterInformation: () => V,
      Position: () => A,
      Range: () => c,
      RenameFile: () => T,
      SelectedCompletionInfo: () => De,
      SelectionRange: () => de,
      SemanticTokenModifiers: () => fe,
      SemanticTokenTypes: () => he,
      SemanticTokens: () => pe,
      SignatureInformation: () => X,
      SnippetTextEdit: () => x,
      StringValue: () => ve,
      SymbolInformation: () => re,
      SymbolKind: () => te,
      SymbolTag: () => ne,
      TextDocument: () => Fe,
      TextDocumentEdit: () => D,
      TextDocumentIdentifier: () => P,
      TextDocumentItem: () => N,
      TextEdit: () => v,
      URI: () => o,
      VersionedTextDocumentIdentifier: () => F,
      WorkspaceChange: () => xe,
      WorkspaceEdit: () => k,
      WorkspaceFolder: () => Te,
      WorkspaceSymbol: () => oe,
      integer: () => s,
      uinteger: () => a
    });
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string';
      };
    })(r ||= {});
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string';
      };
    })(o ||= {});
    (function (e) {
      e.MIN_VALUE = -2147483648;
      e.MAX_VALUE = 2147483647;
      e.is = function (t) {
        return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
      };
    })(s ||= {});
    (function (e) {
      e.MIN_VALUE = 0;
      e.MAX_VALUE = 2147483647;
      e.is = function (t) {
        return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
      };
    })(a ||= {});
    (function (e) {
      e.create = function (e, t) {
        if (e === Number.MAX_VALUE) {
          e = a.MAX_VALUE;
        }
        if (t === Number.MAX_VALUE) {
          t = a.MAX_VALUE;
        }
        return {
          line: e,
          character: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.uinteger(t.line) && Me.uinteger(t.character);
      };
    })(A ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        if (Me.uinteger(e) && Me.uinteger(t) && Me.uinteger(n) && Me.uinteger(r)) {
          return {
            start: A.create(e, t),
            end: A.create(n, r)
          };
        }
        if (A.is(e) && A.is(t)) {
          return {
            start: e,
            end: t
          };
        }
        throw new Error(`Range#create called with invalid arguments[${e}, ${t}, ${n}, ${r}]`);
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && A.is(t.start) && A.is(t.end);
      };
    })(c ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          range: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && (Me.string(t.uri) || Me.undefined(t.uri));
      };
    })(u ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          targetUri: e,
          targetRange: t,
          targetSelectionRange: n,
          originSelectionRange: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.targetRange) && Me.string(t.targetUri) && c.is(t.targetSelectionRange) && (c.is(t.originSelectionRange) || Me.undefined(t.originSelectionRange));
      };
    })(l ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          red: e,
          green: t,
          blue: n,
          alpha: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.numberRange(t.red, 0, 1) && Me.numberRange(t.green, 0, 1) && Me.numberRange(t.blue, 0, 1) && Me.numberRange(t.alpha, 0, 1);
      };
    })(g ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          color: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && g.is(t.color);
      };
    })(d ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          label: e,
          textEdit: t,
          additionalTextEdits: n
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.label) && (Me.undefined(t.textEdit) || v.is(t)) && (Me.undefined(t.additionalTextEdits) || Me.typedArray(t.additionalTextEdits, v.is));
      };
    })(h ||= {});
    (function (e) {
      e.Comment = 'comment';
      e.Imports = 'imports';
      e.Region = 'region';
    })(f ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          startLine: e,
          endLine: t
        };
        if (Me.defined(n)) {
          a.startCharacter = n;
        }
        if (Me.defined(r)) {
          a.endCharacter = r;
        }
        if (Me.defined(o)) {
          a.kind = o;
        }
        if (Me.defined(s)) {
          a.collapsedText = s;
        }
        return a;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.uinteger(t.startLine) && Me.uinteger(t.startLine) && (Me.undefined(t.startCharacter) || Me.uinteger(t.startCharacter)) && (Me.undefined(t.endCharacter) || Me.uinteger(t.endCharacter)) && (Me.undefined(t.kind) || Me.string(t.kind));
      };
    })(p ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          location: e,
          message: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && u.is(t.location) && Me.string(t.message);
      };
    })(m ||= {});
    (function (e) {
      e.Error = 1;
      e.Warning = 2;
      e.Information = 3;
      e.Hint = 4;
    })(I ||= {});
    (function (e) {
      e.Unnecessary = 1;
      e.Deprecated = 2;
    })(E ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.href);
      };
    })(y ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          range: e,
          message: t
        };
        if (Me.defined(n)) {
          a.severity = n;
        }
        if (Me.defined(r)) {
          a.code = r;
        }
        if (Me.defined(o)) {
          a.source = o;
        }
        if (Me.defined(s)) {
          a.relatedInformation = s;
        }
        return a;
      };
      e.is = function (e) {
        var t;
        const n = e;
        return Me.defined(n) && c.is(n.range) && Me.string(n.message) && (Me.number(n.severity) || Me.undefined(n.severity)) && (Me.integer(n.code) || Me.string(n.code) || Me.undefined(n.code)) && (Me.undefined(n.codeDescription) || Me.string((t = n.codeDescription) === null || t === undefined ? undefined : t.href)) && (Me.string(n.source) || Me.undefined(n.source)) && (Me.undefined(n.relatedInformation) || Me.typedArray(n.relatedInformation, m.is));
      };
    })(w ||= {});
    (function (e) {
      e.create = function (e, t, ...n) {
        const r = {
          title: e,
          command: t
        };
        if (Me.defined(n) && n.length > 0) {
          r.arguments = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.title) && (t.tooltip === undefined || Me.string(t.tooltip)) && Me.string(t.command);
      };
    })(_ ||= {});
    (function (e) {
      e.replace = function (e, t) {
        return {
          range: e,
          newText: t
        };
      };
      e.insert = function (e, t) {
        return {
          range: {
            start: e,
            end: e
          },
          newText: t
        };
      };
      e.del = function (e) {
        return {
          range: e,
          newText: ''
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.newText) && c.is(t.range);
      };
    })(v ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          label: e
        };
        if (t !== undefined) {
          r.needsConfirmation = t;
        }
        if (n !== undefined) {
          r.description = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.label) && (Me.boolean(t.needsConfirmation) || t.needsConfirmation === undefined) && (Me.string(t.description) || t.description === undefined);
      };
    })(b ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.string(t);
      };
    })(B ||= {});
    (function (e) {
      e.replace = function (e, t, n) {
        return {
          range: e,
          newText: t,
          annotationId: n
        };
      };
      e.insert = function (e, t, n) {
        return {
          range: {
            start: e,
            end: e
          },
          newText: t,
          annotationId: n
        };
      };
      e.del = function (e, t) {
        return {
          range: e,
          newText: '',
          annotationId: t
        };
      };
      e.is = function (e) {
        const t = e;
        return v.is(t) && (b.is(t.annotationId) || B.is(t.annotationId));
      };
    })(Q ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          textDocument: e,
          edits: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && M.is(t.textDocument) && Array.isArray(t.edits);
      };
    })(D ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          kind: 'create',
          uri: e
        };
        if (t !== undefined && (t.overwrite !== undefined || t.ignoreIfExists !== undefined)) {
          r.options = t;
        }
        if (n !== undefined) {
          r.annotationId = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'create' && Me.string(t.uri) && (t.options === undefined || (t.options.overwrite === undefined || Me.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Me.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(S ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        const o = {
          kind: 'rename',
          oldUri: e,
          newUri: t
        };
        if (n !== undefined && (n.overwrite !== undefined || n.ignoreIfExists !== undefined)) {
          o.options = n;
        }
        if (r !== undefined) {
          o.annotationId = r;
        }
        return o;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'rename' && Me.string(t.oldUri) && Me.string(t.newUri) && (t.options === undefined || (t.options.overwrite === undefined || Me.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Me.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(T ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          kind: 'delete',
          uri: e
        };
        if (t !== undefined && (t.recursive !== undefined || t.ignoreIfNotExists !== undefined)) {
          r.options = t;
        }
        if (n !== undefined) {
          r.annotationId = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'delete' && Me.string(t.uri) && (t.options === undefined || (t.options.recursive === undefined || Me.boolean(t.options.recursive)) && (t.options.ignoreIfNotExists === undefined || Me.boolean(t.options.ignoreIfNotExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(R ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.changes !== undefined || t.documentChanges !== undefined) && (t.documentChanges === undefined || t.documentChanges.every(e => Me.string(e.kind) ? S.is(e) || T.is(e) || R.is(e) : D.is(e)));
      };
    })(k ||= {});
    class Re {
      constructor(e, t) {
        this.edits = e;
        this.changeAnnotations = t;
      }
      insert(e, t, n) {
        let r;
        let o;
        if (n === undefined) {
          r = v.insert(e, t);
        } else {
          if (B.is(n)) {
            o = n;
            r = Q.insert(e, t, n);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            o = this.changeAnnotations.manage(n);
            r = Q.insert(e, t, o);
          }
        }
        this.edits.push(r);
        if (o !== undefined) {
          return o;
        }
      }
      replace(e, t, n) {
        let r;
        let o;
        if (n === undefined) {
          r = v.replace(e, t);
        } else {
          if (B.is(n)) {
            o = n;
            r = Q.replace(e, t, n);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            o = this.changeAnnotations.manage(n);
            r = Q.replace(e, t, o);
          }
        }
        this.edits.push(r);
        if (o !== undefined) {
          return o;
        }
      }
      delete(e, t) {
        let n;
        let r;
        if (t === undefined) {
          n = v.del(e);
        } else {
          if (B.is(t)) {
            r = t;
            n = Q.del(e, t);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            r = this.changeAnnotations.manage(t);
            n = Q.del(e, r);
          }
        }
        this.edits.push(n);
        if (r !== undefined) {
          return r;
        }
      }
      add(e) {
        this.edits.push(e);
      }
      all() {
        return this.edits;
      }
      clear() {
        this.edits.splice(0, this.edits.length);
      }
      assertChangeAnnotations(e) {
        if (e === undefined) {
          throw new Error('Text edit change is not configured to manage change annotations.');
        }
      }
    }
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && ve.isSnippet(t.snippet) && (t.annotationId === undefined || b.is(t.annotationId) || B.is(t.annotationId));
      };
    })(x ||= {});
    class ke {
      constructor(e) {
        this._annotations = e === undefined ? Object.create(null) : e;
        this._counter = 0;
        this._size = 0;
      }
      all() {
        return this._annotations;
      }
      get size() {
        return this._size;
      }
      manage(e, t) {
        let n;
        if (B.is(e)) {
          n = e;
        } else {
          n = this.nextId();
          t = e;
        }
        if (this._annotations[n] !== undefined) {
          throw new Error(`Id ${n} is already in use.`);
        }
        if (t === undefined) {
          throw new Error(`No annotation provided for id ${n}`);
        }
        this._annotations[n] = t;
        this._size++;
        return n;
      }
      nextId() {
        this._counter++;
        return this._counter.toString();
      }
    }
    class xe {
      constructor(e) {
        this._textEditChanges = Object.create(null);
        if (e !== undefined) {
          this._workspaceEdit = e;
          if (e.documentChanges) {
            this._changeAnnotations = new ke(e.changeAnnotations);
            e.changeAnnotations = this._changeAnnotations.all();
            e.documentChanges.forEach(e => {
              if (D.is(e)) {
                const t = new Re(e.edits, this._changeAnnotations);
                this._textEditChanges[e.textDocument.uri] = t;
              }
            });
          } else {
            if (e.changes) {
              Object.keys(e.changes).forEach(t => {
                const n = new Re(e.changes[t]);
                this._textEditChanges[t] = n;
              });
            }
          }
        } else {
          this._workspaceEdit = {};
        }
      }
      get edit() {
        this.initDocumentChanges();
        if (this._changeAnnotations !== undefined) {
          if (this._changeAnnotations.size === 0) {
            this._workspaceEdit.changeAnnotations = undefined;
          } else {
            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
          }
        }
        return this._workspaceEdit;
      }
      getTextEditChange(e) {
        if (M.is(e)) {
          this.initDocumentChanges();
          if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
          }
          const t = {
            uri: e.uri,
            version: e.version
          };
          let n = this._textEditChanges[t.uri];
          if (!n) {
            const e = [];
            const r = {
              textDocument: t,
              edits: e
            };
            this._workspaceEdit.documentChanges.push(r);
            n = new Re(e, this._changeAnnotations);
            this._textEditChanges[t.uri] = n;
          }
          return n;
        }
        {
          this.initChanges();
          if (this._workspaceEdit.changes === undefined) {
            throw new Error('Workspace edit is not configured for normal text edit changes.');
          }
          let t = this._textEditChanges[e];
          if (!t) {
            const n = [];
            this._workspaceEdit.changes[e] = n;
            t = new Re(n);
            this._textEditChanges[e] = t;
          }
          return t;
        }
      }
      initDocumentChanges() {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
          this._changeAnnotations = new ke();
          this._workspaceEdit.documentChanges = [];
          this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
        }
      }
      initChanges() {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
          this._workspaceEdit.changes = Object.create(null);
        }
      }
      createFile(e, t, n) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let r;
        let o;
        let s;
        if (b.is(t) || B.is(t)) {
          r = t;
        } else {
          n = t;
        }
        if (r === undefined) {
          o = S.create(e, n);
        } else {
          s = B.is(r) ? r : this._changeAnnotations.manage(r);
          o = S.create(e, n, s);
        }
        this._workspaceEdit.documentChanges.push(o);
        if (s !== undefined) {
          return s;
        }
      }
      renameFile(e, t, n, r) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let o;
        let s;
        let a;
        if (b.is(n) || B.is(n)) {
          o = n;
        } else {
          r = n;
        }
        if (o === undefined) {
          s = T.create(e, t, r);
        } else {
          a = B.is(o) ? o : this._changeAnnotations.manage(o);
          s = T.create(e, t, r, a);
        }
        this._workspaceEdit.documentChanges.push(s);
        if (a !== undefined) {
          return a;
        }
      }
      deleteFile(e, t, n) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let r;
        let o;
        let s;
        if (b.is(t) || B.is(t)) {
          r = t;
        } else {
          n = t;
        }
        if (r === undefined) {
          o = R.create(e, n);
        } else {
          s = B.is(r) ? r : this._changeAnnotations.manage(r);
          o = R.create(e, n, s);
        }
        this._workspaceEdit.documentChanges.push(o);
        if (s !== undefined) {
          return s;
        }
      }
    }
    (function (e) {
      e.create = function (e) {
        return {
          uri: e
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri);
      };
    })(P ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          version: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && Me.integer(t.version);
      };
    })(F ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          version: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && (t.version === null || Me.integer(t.version));
      };
    })(M ||= {});
    (function (e) {
      e.ABAP = 'abap';
      e.WindowsBat = 'bat';
      e.BibTeX = 'bibtex';
      e.Clojure = 'clojure';
      e.Coffeescript = 'coffeescript';
      e.C = 'c';
      e.CPP = 'cpp';
      e.CSharp = 'csharp';
      e.CSS = 'css';
      e.D = 'd';
      e.Delphi = 'pascal';
      e.Diff = 'diff';
      e.Dart = 'dart';
      e.Dockerfile = 'dockerfile';
      e.Elixir = 'elixir';
      e.Erlang = 'erlang';
      e.FSharp = 'fsharp';
      e.GitCommit = 'git-commit';
      e.GitRebase = 'rebase';
      e.Go = 'go';
      e.Groovy = 'groovy';
      e.Handlebars = 'handlebars';
      e.Haskell = 'haskell';
      e.HTML = 'html';
      e.Ini = 'ini';
      e.Java = 'java';
      e.JavaScript = 'javascript';
      e.JavaScriptReact = 'javascriptreact';
      e.JSON = 'json';
      e.LaTeX = 'latex';
      e.Less = 'less';
      e.Lua = 'lua';
      e.Makefile = 'makefile';
      e.Markdown = 'markdown';
      e.ObjectiveC = 'objective-c';
      e.ObjectiveCPP = 'objective-cpp';
      e.Pascal = 'pascal';
      e.Perl = 'perl';
      e.Perl6 = 'perl6';
      e.PHP = 'php';
      e.Powershell = 'powershell';
      e.Pug = 'jade';
      e.Python = 'python';
      e.R = 'r';
      e.Razor = 'razor';
      e.Ruby = 'ruby';
      e.Rust = 'rust';
      e.SCSS = 'scss';
      e.SASS = 'sass';
      e.Scala = 'scala';
      e.ShaderLab = 'shaderlab';
      e.ShellScript = 'shellscript';
      e.SQL = 'sql';
      e.Swift = 'swift';
      e.TypeScript = 'typescript';
      e.TypeScriptReact = 'typescriptreact';
      e.TeX = 'tex';
      e.VisualBasic = 'vb';
      e.XML = 'xml';
      e.XSL = 'xsl';
      e.YAML = 'yaml';
    })(O ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          uri: e,
          languageId: t,
          version: n,
          text: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && Me.string(t.languageId) && Me.integer(t.version) && Me.string(t.text);
      };
    })(N ||= {});
    (function (e) {
      e.PlainText = 'plaintext';
      e.Markdown = 'markdown';
      e.is = function (t) {
        const n = t;
        return n === e.PlainText || n === e.Markdown;
      };
    })(L ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(e) && L.is(t.kind) && Me.string(t.value);
      };
    })(K ||= {});
    (function (e) {
      e.Text = 1;
      e.Method = 2;
      e.Function = 3;
      e.Constructor = 4;
      e.Field = 5;
      e.Variable = 6;
      e.Class = 7;
      e.Interface = 8;
      e.Module = 9;
      e.Property = 10;
      e.Unit = 11;
      e.Value = 12;
      e.Enum = 13;
      e.Keyword = 14;
      e.Snippet = 15;
      e.Color = 16;
      e.File = 17;
      e.Reference = 18;
      e.Folder = 19;
      e.EnumMember = 20;
      e.Constant = 21;
      e.Struct = 22;
      e.Event = 23;
      e.Operator = 24;
      e.TypeParameter = 25;
    })(U ||= {});
    (function (e) {
      e.PlainText = 1;
      e.Snippet = 2;
    })(j ||= {});
    (function (e) {
      e.Deprecated = 1;
    })(q ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          newText: e,
          insert: t,
          replace: n
        };
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.newText) && c.is(t.insert) && c.is(t.replace);
      };
    })(G ||= {});
    (function (e) {
      e.asIs = 1;
      e.adjustIndentation = 2;
    })(Y ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (Me.string(t.detail) || t.detail === undefined) && (Me.string(t.description) || t.description === undefined);
      };
    })(H ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          label: e
        };
      };
    })(J ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          items: e || [],
          isIncomplete: !!t
        };
      };
    })(z ||= {});
    (function (e) {
      e.fromPlainText = function (e) {
        return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
      };
      e.is = function (e) {
        const t = e;
        return Me.string(t) || Me.objectLiteral(t) && Me.string(t.language) && Me.string(t.value);
      };
    })($ ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return !!t && Me.objectLiteral(t) && (K.is(t.contents) || $.is(t.contents) || Me.typedArray(t.contents, $.is)) && (e.range === undefined || c.is(e.range));
      };
    })(W ||= {});
    (function (e) {
      e.create = function (e, t) {
        if (t) {
          return {
            label: e,
            documentation: t
          };
        } else {
          return {
            label: e
          };
        }
      };
    })(V ||= {});
    (function (e) {
      e.create = function (e, t, ...n) {
        const r = {
          label: e
        };
        if (Me.defined(t)) {
          r.documentation = t;
        }
        if (Me.defined(n)) {
          r.parameters = n;
        } else {
          r.parameters = [];
        }
        return r;
      };
    })(X ||= {});
    (function (e) {
      e.Text = 1;
      e.Read = 2;
      e.Write = 3;
    })(Z ||= {});
    (function (e) {
      e.create = function (e, t) {
        const n = {
          range: e
        };
        if (Me.number(t)) {
          n.kind = t;
        }
        return n;
      };
    })(ee ||= {});
    (function (e) {
      e.File = 1;
      e.Module = 2;
      e.Namespace = 3;
      e.Package = 4;
      e.Class = 5;
      e.Method = 6;
      e.Property = 7;
      e.Field = 8;
      e.Constructor = 9;
      e.Enum = 10;
      e.Interface = 11;
      e.Function = 12;
      e.Variable = 13;
      e.Constant = 14;
      e.String = 15;
      e.Number = 16;
      e.Boolean = 17;
      e.Array = 18;
      e.Object = 19;
      e.Key = 20;
      e.Null = 21;
      e.EnumMember = 22;
      e.Struct = 23;
      e.Event = 24;
      e.Operator = 25;
      e.TypeParameter = 26;
    })(te ||= {});
    (function (e) {
      e.Deprecated = 1;
    })(ne ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o) {
        const s = {
          name: e,
          kind: t,
          location: {
            uri: r,
            range: n
          }
        };
        if (o) {
          s.containerName = o;
        }
        return s;
      };
    })(re ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        if (r !== undefined) {
          return {
            name: e,
            kind: t,
            location: {
              uri: n,
              range: r
            }
          };
        } else {
          return {
            name: e,
            kind: t,
            location: {
              uri: n
            }
          };
        }
      };
    })(oe ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          name: e,
          detail: t,
          kind: n,
          range: r,
          selectionRange: o
        };
        if (s !== undefined) {
          a.children = s;
        }
        return a;
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.name) && Me.number(t.kind) && c.is(t.range) && c.is(t.selectionRange) && (t.detail === undefined || Me.string(t.detail)) && (t.deprecated === undefined || Me.boolean(t.deprecated)) && (t.children === undefined || Array.isArray(t.children)) && (t.tags === undefined || Array.isArray(t.tags));
      };
    })(ie ||= {});
    (function (e) {
      e.Empty = '';
      e.QuickFix = 'quickfix';
      e.Refactor = 'refactor';
      e.RefactorExtract = 'refactor.extract';
      e.RefactorInline = 'refactor.inline';
      e.RefactorMove = 'refactor.move';
      e.RefactorRewrite = 'refactor.rewrite';
      e.Source = 'source';
      e.SourceOrganizeImports = 'source.organizeImports';
      e.SourceFixAll = 'source.fixAll';
      e.Notebook = 'notebook';
    })(se ||= {});
    (function (e) {
      e.Invoked = 1;
      e.Automatic = 2;
    })(ae ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          diagnostics: e
        };
        if (t != null) {
          r.only = t;
        }
        if (n != null) {
          r.triggerKind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.typedArray(t.diagnostics, w.is) && (t.only === undefined || Me.typedArray(t.only, Me.string)) && (t.triggerKind === undefined || t.triggerKind === ae.Invoked || t.triggerKind === ae.Automatic);
      };
    })(Ae ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          title: e
        };
        let o = true;
        if (typeof t == 'string') {
          o = false;
          r.kind = t;
        } else {
          if (_.is(t)) {
            r.command = t;
          } else {
            r.edit = t;
          }
        }
        if (o && n !== undefined) {
          r.kind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.title) && (t.diagnostics === undefined || Me.typedArray(t.diagnostics, w.is)) && (t.kind === undefined || Me.string(t.kind)) && (t.edit !== undefined || t.command !== undefined) && (t.command === undefined || _.is(t.command)) && (t.isPreferred === undefined || Me.boolean(t.isPreferred)) && (t.edit === undefined || k.is(t.edit));
      };
    })(ce ||= {});
    (function (e) {
      e.create = function (e, t) {
        const n = {
          range: e
        };
        if (Me.defined(t)) {
          n.data = t;
        }
        return n;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(t.range) && (Me.undefined(t.command) || _.is(t.command));
      };
    })(ue ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          tabSize: e,
          insertSpaces: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.uinteger(t.tabSize) && Me.boolean(t.insertSpaces);
      };
    })(le ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          range: e,
          target: t,
          data: n
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(t.range) && (Me.undefined(t.target) || Me.string(t.target));
      };
    })(ge ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          parent: t
        };
      };
      e.is = function (t) {
        const n = t;
        return Me.objectLiteral(n) && c.is(n.range) && (n.parent === undefined || e.is(n.parent));
      };
    })(de ||= {});
    (function (e) {
      e.namespace = 'namespace';
      e.type = 'type';
      e.class = 'class';
      e.enum = 'enum';
      e.interface = 'interface';
      e.struct = 'struct';
      e.typeParameter = 'typeParameter';
      e.parameter = 'parameter';
      e.variable = 'variable';
      e.property = 'property';
      e.enumMember = 'enumMember';
      e.event = 'event';
      e.function = 'function';
      e.method = 'method';
      e.macro = 'macro';
      e.keyword = 'keyword';
      e.modifier = 'modifier';
      e.comment = 'comment';
      e.string = 'string';
      e.number = 'number';
      e.regexp = 'regexp';
      e.operator = 'operator';
      e.decorator = 'decorator';
      e.label = 'label';
    })(he ||= {});
    (function (e) {
      e.declaration = 'declaration';
      e.definition = 'definition';
      e.readonly = 'readonly';
      e.static = 'static';
      e.deprecated = 'deprecated';
      e.abstract = 'abstract';
      e.async = 'async';
      e.modification = 'modification';
      e.documentation = 'documentation';
      e.defaultLibrary = 'defaultLibrary';
    })(fe ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && (t.resultId === undefined || typeof t.resultId == 'string') && Array.isArray(t.data) && (t.data.length === 0 || typeof t.data[0] == 'number');
      };
    })(pe ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          text: t
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && Me.string(t.text);
      };
    })(Ce ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          range: e,
          variableName: t,
          caseSensitiveLookup: n
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && Me.boolean(t.caseSensitiveLookup) && (Me.string(t.variableName) || t.variableName === undefined);
      };
    })(me ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          expression: t
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && (Me.string(t.expression) || t.expression === undefined);
      };
    })(Ie ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          frameId: e,
          stoppedLocation: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(e.stoppedLocation);
      };
    })(Ee ||= {});
    (function (e) {
      e.Type = 1;
      e.Parameter = 2;
      e.is = function (e) {
        return e === 1 || e === 2;
      };
    })(ye ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          value: e
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && (t.tooltip === undefined || Me.string(t.tooltip) || K.is(t.tooltip)) && (t.location === undefined || u.is(t.location)) && (t.command === undefined || _.is(t.command));
      };
    })(we ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          position: e,
          label: t
        };
        if (n !== undefined) {
          r.kind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && A.is(t.position) && (Me.string(t.label) || Me.typedArray(t.label, we.is)) && (t.kind === undefined || ye.is(t.kind)) && t.textEdits === undefined || Me.typedArray(t.textEdits, v.is) && (t.tooltip === undefined || Me.string(t.tooltip) || K.is(t.tooltip)) && (t.paddingLeft === undefined || Me.boolean(t.paddingLeft)) && (t.paddingRight === undefined || Me.boolean(t.paddingRight));
      };
    })(_e ||= {});
    (function (e) {
      e.createSnippet = function (e) {
        return {
          kind: 'snippet',
          value: e
        };
      };
      e.isSnippet = function (e) {
        const t = e;
        return Me.objectLiteral(t) && t.kind === 'snippet' && Me.string(t.value);
      };
    })(ve ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          insertText: e,
          filterText: t,
          range: n,
          command: r
        };
      };
    })(be ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          items: e
        };
      };
    })(Be ||= {});
    (function (e) {
      e.Invoked = 1;
      e.Automatic = 2;
    })(Qe ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          text: t
        };
      };
    })(De ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          triggerKind: e,
          selectedCompletionInfo: t
        };
      };
    })(Se ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && o.is(t.uri) && Me.string(t.name);
      };
    })(Te ||= {});
    const Pe = ['\n', '\r\n', '\r'];
    var Fe;
    var Me;
    (function (e) {
      function t(e, n) {
        if (e.length <= 1) {
          return e;
        }
        const r = e.length / 2 | 0;
        const o = e.slice(0, r);
        const s = e.slice(r);
        t(o, n);
        t(s, n);
        let a = 0;
        let A = 0;
        let c = 0;
        while (a < o.length && A < s.length) {
          const t = n(o[a], s[A]);
          e[c++] = t <= 0 ? o[a++] : s[A++];
        }
        while (a < o.length) {
          e[c++] = o[a++];
        }
        while (A < s.length) {
          e[c++] = s[A++];
        }
        return e;
      }
      e.create = function (e, t, n, r) {
        return new Oe(e, t, n, r);
      };
      e.is = function (e) {
        const t = e;
        return !!Me.defined(t) && !!Me.string(t.uri) && (!!Me.undefined(t.languageId) || !!Me.string(t.languageId)) && !!Me.uinteger(t.lineCount) && !!Me.func(t.getText) && !!Me.func(t.positionAt) && !!Me.func(t.offsetAt);
      };
      e.applyEdits = function (e, n) {
        let r = e.getText();
        const o = t(n, (e, t) => {
          const n = e.range.start.line - t.range.start.line;
          if (n === 0) {
            return e.range.start.character - t.range.start.character;
          } else {
            return n;
          }
        });
        let s = r.length;
        for (let t = o.length - 1; t >= 0; t--) {
          const n = o[t];
          const a = e.offsetAt(n.range.start);
          const A = e.offsetAt(n.range.end);
          if (!(A <= s)) {
            throw new Error('Overlapping edit');
          }
          r = r.substring(0, a) + n.newText + r.substring(A, r.length);
          s = a;
        }
        return r;
      };
    })(Fe ||= {});
    class Oe {
      constructor(e, t, n, r) {
        this._uri = e;
        this._languageId = t;
        this._version = n;
        this._content = r;
        this._lineOffsets = undefined;
      }
      get uri() {
        return this._uri;
      }
      get languageId() {
        return this._languageId;
      }
      get version() {
        return this._version;
      }
      getText(e) {
        if (e) {
          const t = this.offsetAt(e.start);
          const n = this.offsetAt(e.end);
          return this._content.substring(t, n);
        }
        return this._content;
      }
      update(e, t) {
        this._content = e.text;
        this._version = t;
        this._lineOffsets = undefined;
      }
      getLineOffsets() {
        if (this._lineOffsets === undefined) {
          const e = [];
          const t = this._content;
          let n = true;
          for (let r = 0; r < t.length; r++) {
            if (n) {
              e.push(r);
              n = false;
            }
            const o = t.charAt(r);
            n = o === '\r' || o === '\n';
            if (o === '\r' && r + 1 < t.length && t.charAt(r + 1) === '\n') {
              r++;
            }
          }
          if (n && t.length > 0) {
            e.push(t.length);
          }
          this._lineOffsets = e;
        }
        return this._lineOffsets;
      }
      positionAt(e) {
        e = Math.max(Math.min(e, this._content.length), 0);
        const t = this.getLineOffsets();
        let n = 0;
        let r = t.length;
        if (r === 0) {
          return A.create(0, e);
        }
        while (n < r) {
          const o = Math.floor((n + r) / 2);
          if (t[o] > e) {
            r = o;
          } else {
            n = o + 1;
          }
        }
        const o = n - 1;
        return A.create(o, e - t[o]);
      }
      offsetAt(e) {
        const t = this.getLineOffsets();
        if (e.line >= t.length) {
          return this._content.length;
        }
        if (e.line < 0) {
          return 0;
        }
        const n = t[e.line];
        const r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
        return Math.max(Math.min(n + e.character, r), n);
      }
      get lineCount() {
        return this.getLineOffsets().length;
      }
    }
    (function (e) {
      const t = Object.prototype.toString;
      e.defined = function (e) {
        return e !== undefined;
      };
      e.undefined = function (e) {
        return e === undefined;
      };
      e.boolean = function (e) {
        return e === true || e === false;
      };
      e.string = function (e) {
        return t.call(e) === '[object String]';
      };
      e.number = function (e) {
        return t.call(e) === '[object Number]';
      };
      e.numberRange = function (e, n, r) {
        return t.call(e) === '[object Number]' && n <= e && e <= r;
      };
      e.integer = function (e) {
        return t.call(e) === '[object Number]' && e >= -2147483648 && e <= 2147483647;
      };
      e.uinteger = function (e) {
        return t.call(e) === '[object Number]' && e >= 0 && e <= 2147483647;
      };
      e.func = function (e) {
        return t.call(e) === '[object Function]';
      };
      e.objectLiteral = function (e) {
        return e !== null && typeof e == 'object';
      };
      e.typedArray = function (e, t) {
        return Array.isArray(e) && e.every(t);
      };
    })(Me ||= {});
  },
  46203: (module, exports, require) => {
    "use strict";

    var r;
    var o;
    var s;
    var a;
    var A;
    var c;
    var u;
    var l;
    var g;
    var d;
    var h;
    var f;
    var p;
    var m;
    var I;
    var E;
    var y;
    var w;
    var _;
    var v;
    var b;
    var B;
    var Q;
    var D;
    var S;
    var T;
    var R;
    var k;
    var x;
    var P;
    var F;
    var M;
    var O;
    var N;
    var L;
    var K;
    var U;
    var j;
    var q;
    var G;
    var Y;
    var H;
    var J;
    var z;
    var $;
    var W;
    var V;
    var X;
    var Z;
    var ee;
    var te;
    var ne;
    var re;
    var oe;
    var ie;
    var se;
    var ae;
    var Ae;
    var ce;
    var ue;
    var le;
    var ge;
    var de;
    var he;
    var fe;
    var pe;
    var Ce;
    var me;
    var Ie;
    var Ee;
    var ye;
    var we;
    var _e;
    var ve;
    var be;
    var Be;
    var Qe;
    var De;
    var Se;
    var Te;
    require.r(exports);
    require.d(exports, {
      AnnotatedTextEdit: () => Q,
      ChangeAnnotation: () => b,
      ChangeAnnotationIdentifier: () => B,
      CodeAction: () => ce,
      CodeActionContext: () => Ae,
      CodeActionKind: () => se,
      CodeActionTriggerKind: () => ae,
      CodeDescription: () => y,
      CodeLens: () => ue,
      Color: () => g,
      ColorInformation: () => d,
      ColorPresentation: () => h,
      Command: () => _,
      CompletionItem: () => J,
      CompletionItemKind: () => U,
      CompletionItemLabelDetails: () => H,
      CompletionItemTag: () => q,
      CompletionList: () => z,
      CreateFile: () => S,
      DeleteFile: () => R,
      Diagnostic: () => w,
      DiagnosticRelatedInformation: () => m,
      DiagnosticSeverity: () => I,
      DiagnosticTag: () => E,
      DocumentHighlight: () => ee,
      DocumentHighlightKind: () => Z,
      DocumentLink: () => ge,
      DocumentSymbol: () => ie,
      DocumentUri: () => r,
      EOL: () => Pe,
      FoldingRange: () => p,
      FoldingRangeKind: () => f,
      FormattingOptions: () => le,
      Hover: () => W,
      InlayHint: () => _e,
      InlayHintKind: () => ye,
      InlayHintLabelPart: () => we,
      InlineCompletionContext: () => Se,
      InlineCompletionItem: () => be,
      InlineCompletionList: () => Be,
      InlineCompletionTriggerKind: () => Qe,
      InlineValueContext: () => Ee,
      InlineValueEvaluatableExpression: () => Ie,
      InlineValueText: () => Ce,
      InlineValueVariableLookup: () => me,
      InsertReplaceEdit: () => G,
      InsertTextFormat: () => j,
      InsertTextMode: () => Y,
      LanguageKind: () => O,
      Location: () => u,
      LocationLink: () => l,
      MarkedString: () => $,
      MarkupContent: () => K,
      MarkupKind: () => L,
      OptionalVersionedTextDocumentIdentifier: () => M,
      ParameterInformation: () => V,
      Position: () => A,
      Range: () => c,
      RenameFile: () => T,
      SelectedCompletionInfo: () => De,
      SelectionRange: () => de,
      SemanticTokenModifiers: () => fe,
      SemanticTokenTypes: () => he,
      SemanticTokens: () => pe,
      SignatureInformation: () => X,
      SnippetTextEdit: () => x,
      StringValue: () => ve,
      SymbolInformation: () => re,
      SymbolKind: () => te,
      SymbolTag: () => ne,
      TextDocument: () => Fe,
      TextDocumentEdit: () => D,
      TextDocumentIdentifier: () => P,
      TextDocumentItem: () => N,
      TextEdit: () => v,
      URI: () => o,
      VersionedTextDocumentIdentifier: () => F,
      WorkspaceChange: () => xe,
      WorkspaceEdit: () => k,
      WorkspaceFolder: () => Te,
      WorkspaceSymbol: () => oe,
      integer: () => s,
      uinteger: () => a
    });
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string';
      };
    })(r ||= {});
    (function (e) {
      e.is = function (e) {
        return typeof e == 'string';
      };
    })(o ||= {});
    (function (e) {
      e.MIN_VALUE = -2147483648;
      e.MAX_VALUE = 2147483647;
      e.is = function (t) {
        return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
      };
    })(s ||= {});
    (function (e) {
      e.MIN_VALUE = 0;
      e.MAX_VALUE = 2147483647;
      e.is = function (t) {
        return typeof t == 'number' && e.MIN_VALUE <= t && t <= e.MAX_VALUE;
      };
    })(a ||= {});
    (function (e) {
      e.create = function (e, t) {
        if (e === Number.MAX_VALUE) {
          e = a.MAX_VALUE;
        }
        if (t === Number.MAX_VALUE) {
          t = a.MAX_VALUE;
        }
        return {
          line: e,
          character: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.uinteger(t.line) && Me.uinteger(t.character);
      };
    })(A ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        if (Me.uinteger(e) && Me.uinteger(t) && Me.uinteger(n) && Me.uinteger(r)) {
          return {
            start: A.create(e, t),
            end: A.create(n, r)
          };
        }
        if (A.is(e) && A.is(t)) {
          return {
            start: e,
            end: t
          };
        }
        throw new Error(`Range#create called with invalid arguments[${e}, ${t}, ${n}, ${r}]`);
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && A.is(t.start) && A.is(t.end);
      };
    })(c ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          range: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && (Me.string(t.uri) || Me.undefined(t.uri));
      };
    })(u ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          targetUri: e,
          targetRange: t,
          targetSelectionRange: n,
          originSelectionRange: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.targetRange) && Me.string(t.targetUri) && c.is(t.targetSelectionRange) && (c.is(t.originSelectionRange) || Me.undefined(t.originSelectionRange));
      };
    })(l ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          red: e,
          green: t,
          blue: n,
          alpha: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.numberRange(t.red, 0, 1) && Me.numberRange(t.green, 0, 1) && Me.numberRange(t.blue, 0, 1) && Me.numberRange(t.alpha, 0, 1);
      };
    })(g ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          color: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && g.is(t.color);
      };
    })(d ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          label: e,
          textEdit: t,
          additionalTextEdits: n
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.label) && (Me.undefined(t.textEdit) || v.is(t)) && (Me.undefined(t.additionalTextEdits) || Me.typedArray(t.additionalTextEdits, v.is));
      };
    })(h ||= {});
    (function (e) {
      e.Comment = 'comment';
      e.Imports = 'imports';
      e.Region = 'region';
    })(f ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          startLine: e,
          endLine: t
        };
        if (Me.defined(n)) {
          a.startCharacter = n;
        }
        if (Me.defined(r)) {
          a.endCharacter = r;
        }
        if (Me.defined(o)) {
          a.kind = o;
        }
        if (Me.defined(s)) {
          a.collapsedText = s;
        }
        return a;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.uinteger(t.startLine) && Me.uinteger(t.startLine) && (Me.undefined(t.startCharacter) || Me.uinteger(t.startCharacter)) && (Me.undefined(t.endCharacter) || Me.uinteger(t.endCharacter)) && (Me.undefined(t.kind) || Me.string(t.kind));
      };
    })(p ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          location: e,
          message: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && u.is(t.location) && Me.string(t.message);
      };
    })(m ||= {});
    (function (e) {
      e.Error = 1;
      e.Warning = 2;
      e.Information = 3;
      e.Hint = 4;
    })(I ||= {});
    (function (e) {
      e.Unnecessary = 1;
      e.Deprecated = 2;
    })(E ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.href);
      };
    })(y ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          range: e,
          message: t
        };
        if (Me.defined(n)) {
          a.severity = n;
        }
        if (Me.defined(r)) {
          a.code = r;
        }
        if (Me.defined(o)) {
          a.source = o;
        }
        if (Me.defined(s)) {
          a.relatedInformation = s;
        }
        return a;
      };
      e.is = function (e) {
        var t;
        const n = e;
        return Me.defined(n) && c.is(n.range) && Me.string(n.message) && (Me.number(n.severity) || Me.undefined(n.severity)) && (Me.integer(n.code) || Me.string(n.code) || Me.undefined(n.code)) && (Me.undefined(n.codeDescription) || Me.string((t = n.codeDescription) === null || t === undefined ? undefined : t.href)) && (Me.string(n.source) || Me.undefined(n.source)) && (Me.undefined(n.relatedInformation) || Me.typedArray(n.relatedInformation, m.is));
      };
    })(w ||= {});
    (function (e) {
      e.create = function (e, t, ...n) {
        const r = {
          title: e,
          command: t
        };
        if (Me.defined(n) && n.length > 0) {
          r.arguments = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.title) && (t.tooltip === undefined || Me.string(t.tooltip)) && Me.string(t.command);
      };
    })(_ ||= {});
    (function (e) {
      e.replace = function (e, t) {
        return {
          range: e,
          newText: t
        };
      };
      e.insert = function (e, t) {
        return {
          range: {
            start: e,
            end: e
          },
          newText: t
        };
      };
      e.del = function (e) {
        return {
          range: e,
          newText: ''
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.newText) && c.is(t.range);
      };
    })(v ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          label: e
        };
        if (t !== undefined) {
          r.needsConfirmation = t;
        }
        if (n !== undefined) {
          r.description = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && Me.string(t.label) && (Me.boolean(t.needsConfirmation) || t.needsConfirmation === undefined) && (Me.string(t.description) || t.description === undefined);
      };
    })(b ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.string(t);
      };
    })(B ||= {});
    (function (e) {
      e.replace = function (e, t, n) {
        return {
          range: e,
          newText: t,
          annotationId: n
        };
      };
      e.insert = function (e, t, n) {
        return {
          range: {
            start: e,
            end: e
          },
          newText: t,
          annotationId: n
        };
      };
      e.del = function (e, t) {
        return {
          range: e,
          newText: '',
          annotationId: t
        };
      };
      e.is = function (e) {
        const t = e;
        return v.is(t) && (b.is(t.annotationId) || B.is(t.annotationId));
      };
    })(Q ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          textDocument: e,
          edits: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && M.is(t.textDocument) && Array.isArray(t.edits);
      };
    })(D ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          kind: 'create',
          uri: e
        };
        if (t !== undefined && (t.overwrite !== undefined || t.ignoreIfExists !== undefined)) {
          r.options = t;
        }
        if (n !== undefined) {
          r.annotationId = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'create' && Me.string(t.uri) && (t.options === undefined || (t.options.overwrite === undefined || Me.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Me.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(S ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        const o = {
          kind: 'rename',
          oldUri: e,
          newUri: t
        };
        if (n !== undefined && (n.overwrite !== undefined || n.ignoreIfExists !== undefined)) {
          o.options = n;
        }
        if (r !== undefined) {
          o.annotationId = r;
        }
        return o;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'rename' && Me.string(t.oldUri) && Me.string(t.newUri) && (t.options === undefined || (t.options.overwrite === undefined || Me.boolean(t.options.overwrite)) && (t.options.ignoreIfExists === undefined || Me.boolean(t.options.ignoreIfExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(T ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          kind: 'delete',
          uri: e
        };
        if (t !== undefined && (t.recursive !== undefined || t.ignoreIfNotExists !== undefined)) {
          r.options = t;
        }
        if (n !== undefined) {
          r.annotationId = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && t.kind === 'delete' && Me.string(t.uri) && (t.options === undefined || (t.options.recursive === undefined || Me.boolean(t.options.recursive)) && (t.options.ignoreIfNotExists === undefined || Me.boolean(t.options.ignoreIfNotExists))) && (t.annotationId === undefined || B.is(t.annotationId));
      };
    })(R ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (t.changes !== undefined || t.documentChanges !== undefined) && (t.documentChanges === undefined || t.documentChanges.every(e => Me.string(e.kind) ? S.is(e) || T.is(e) || R.is(e) : D.is(e)));
      };
    })(k ||= {});
    class Re {
      constructor(e, t) {
        this.edits = e;
        this.changeAnnotations = t;
      }
      insert(e, t, n) {
        let r;
        let o;
        if (n === undefined) {
          r = v.insert(e, t);
        } else {
          if (B.is(n)) {
            o = n;
            r = Q.insert(e, t, n);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            o = this.changeAnnotations.manage(n);
            r = Q.insert(e, t, o);
          }
        }
        this.edits.push(r);
        if (o !== undefined) {
          return o;
        }
      }
      replace(e, t, n) {
        let r;
        let o;
        if (n === undefined) {
          r = v.replace(e, t);
        } else {
          if (B.is(n)) {
            o = n;
            r = Q.replace(e, t, n);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            o = this.changeAnnotations.manage(n);
            r = Q.replace(e, t, o);
          }
        }
        this.edits.push(r);
        if (o !== undefined) {
          return o;
        }
      }
      delete(e, t) {
        let n;
        let r;
        if (t === undefined) {
          n = v.del(e);
        } else {
          if (B.is(t)) {
            r = t;
            n = Q.del(e, t);
          } else {
            this.assertChangeAnnotations(this.changeAnnotations);
            r = this.changeAnnotations.manage(t);
            n = Q.del(e, r);
          }
        }
        this.edits.push(n);
        if (r !== undefined) {
          return r;
        }
      }
      add(e) {
        this.edits.push(e);
      }
      all() {
        return this.edits;
      }
      clear() {
        this.edits.splice(0, this.edits.length);
      }
      assertChangeAnnotations(e) {
        if (e === undefined) {
          throw new Error('Text edit change is not configured to manage change annotations.');
        }
      }
    }
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && c.is(t.range) && ve.isSnippet(t.snippet) && (t.annotationId === undefined || b.is(t.annotationId) || B.is(t.annotationId));
      };
    })(x ||= {});
    class ke {
      constructor(e) {
        this._annotations = e === undefined ? Object.create(null) : e;
        this._counter = 0;
        this._size = 0;
      }
      all() {
        return this._annotations;
      }
      get size() {
        return this._size;
      }
      manage(e, t) {
        let n;
        if (B.is(e)) {
          n = e;
        } else {
          n = this.nextId();
          t = e;
        }
        if (this._annotations[n] !== undefined) {
          throw new Error(`Id ${n} is already in use.`);
        }
        if (t === undefined) {
          throw new Error(`No annotation provided for id ${n}`);
        }
        this._annotations[n] = t;
        this._size++;
        return n;
      }
      nextId() {
        this._counter++;
        return this._counter.toString();
      }
    }
    class xe {
      constructor(e) {
        this._textEditChanges = Object.create(null);
        if (e !== undefined) {
          this._workspaceEdit = e;
          if (e.documentChanges) {
            this._changeAnnotations = new ke(e.changeAnnotations);
            e.changeAnnotations = this._changeAnnotations.all();
            e.documentChanges.forEach(e => {
              if (D.is(e)) {
                const t = new Re(e.edits, this._changeAnnotations);
                this._textEditChanges[e.textDocument.uri] = t;
              }
            });
          } else {
            if (e.changes) {
              Object.keys(e.changes).forEach(t => {
                const n = new Re(e.changes[t]);
                this._textEditChanges[t] = n;
              });
            }
          }
        } else {
          this._workspaceEdit = {};
        }
      }
      get edit() {
        this.initDocumentChanges();
        if (this._changeAnnotations !== undefined) {
          if (this._changeAnnotations.size === 0) {
            this._workspaceEdit.changeAnnotations = undefined;
          } else {
            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
          }
        }
        return this._workspaceEdit;
      }
      getTextEditChange(e) {
        if (M.is(e)) {
          this.initDocumentChanges();
          if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
          }
          const t = {
            uri: e.uri,
            version: e.version
          };
          let n = this._textEditChanges[t.uri];
          if (!n) {
            const e = [];
            const r = {
              textDocument: t,
              edits: e
            };
            this._workspaceEdit.documentChanges.push(r);
            n = new Re(e, this._changeAnnotations);
            this._textEditChanges[t.uri] = n;
          }
          return n;
        }
        {
          this.initChanges();
          if (this._workspaceEdit.changes === undefined) {
            throw new Error('Workspace edit is not configured for normal text edit changes.');
          }
          let t = this._textEditChanges[e];
          if (!t) {
            const n = [];
            this._workspaceEdit.changes[e] = n;
            t = new Re(n);
            this._textEditChanges[e] = t;
          }
          return t;
        }
      }
      initDocumentChanges() {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
          this._changeAnnotations = new ke();
          this._workspaceEdit.documentChanges = [];
          this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
        }
      }
      initChanges() {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
          this._workspaceEdit.changes = Object.create(null);
        }
      }
      createFile(e, t, n) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let r;
        let o;
        let s;
        if (b.is(t) || B.is(t)) {
          r = t;
        } else {
          n = t;
        }
        if (r === undefined) {
          o = S.create(e, n);
        } else {
          s = B.is(r) ? r : this._changeAnnotations.manage(r);
          o = S.create(e, n, s);
        }
        this._workspaceEdit.documentChanges.push(o);
        if (s !== undefined) {
          return s;
        }
      }
      renameFile(e, t, n, r) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let o;
        let s;
        let a;
        if (b.is(n) || B.is(n)) {
          o = n;
        } else {
          r = n;
        }
        if (o === undefined) {
          s = T.create(e, t, r);
        } else {
          a = B.is(o) ? o : this._changeAnnotations.manage(o);
          s = T.create(e, t, r, a);
        }
        this._workspaceEdit.documentChanges.push(s);
        if (a !== undefined) {
          return a;
        }
      }
      deleteFile(e, t, n) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
          throw new Error('Workspace edit is not configured for document changes.');
        }
        let r;
        let o;
        let s;
        if (b.is(t) || B.is(t)) {
          r = t;
        } else {
          n = t;
        }
        if (r === undefined) {
          o = R.create(e, n);
        } else {
          s = B.is(r) ? r : this._changeAnnotations.manage(r);
          o = R.create(e, n, s);
        }
        this._workspaceEdit.documentChanges.push(o);
        if (s !== undefined) {
          return s;
        }
      }
    }
    (function (e) {
      e.create = function (e) {
        return {
          uri: e
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri);
      };
    })(P ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          version: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && Me.integer(t.version);
      };
    })(F ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          uri: e,
          version: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && (t.version === null || Me.integer(t.version));
      };
    })(M ||= {});
    (function (e) {
      e.ABAP = 'abap';
      e.WindowsBat = 'bat';
      e.BibTeX = 'bibtex';
      e.Clojure = 'clojure';
      e.Coffeescript = 'coffeescript';
      e.C = 'c';
      e.CPP = 'cpp';
      e.CSharp = 'csharp';
      e.CSS = 'css';
      e.D = 'd';
      e.Delphi = 'pascal';
      e.Diff = 'diff';
      e.Dart = 'dart';
      e.Dockerfile = 'dockerfile';
      e.Elixir = 'elixir';
      e.Erlang = 'erlang';
      e.FSharp = 'fsharp';
      e.GitCommit = 'git-commit';
      e.GitRebase = 'rebase';
      e.Go = 'go';
      e.Groovy = 'groovy';
      e.Handlebars = 'handlebars';
      e.Haskell = 'haskell';
      e.HTML = 'html';
      e.Ini = 'ini';
      e.Java = 'java';
      e.JavaScript = 'javascript';
      e.JavaScriptReact = 'javascriptreact';
      e.JSON = 'json';
      e.LaTeX = 'latex';
      e.Less = 'less';
      e.Lua = 'lua';
      e.Makefile = 'makefile';
      e.Markdown = 'markdown';
      e.ObjectiveC = 'objective-c';
      e.ObjectiveCPP = 'objective-cpp';
      e.Pascal = 'pascal';
      e.Perl = 'perl';
      e.Perl6 = 'perl6';
      e.PHP = 'php';
      e.Powershell = 'powershell';
      e.Pug = 'jade';
      e.Python = 'python';
      e.R = 'r';
      e.Razor = 'razor';
      e.Ruby = 'ruby';
      e.Rust = 'rust';
      e.SCSS = 'scss';
      e.SASS = 'sass';
      e.Scala = 'scala';
      e.ShaderLab = 'shaderlab';
      e.ShellScript = 'shellscript';
      e.SQL = 'sql';
      e.Swift = 'swift';
      e.TypeScript = 'typescript';
      e.TypeScriptReact = 'typescriptreact';
      e.TeX = 'tex';
      e.VisualBasic = 'vb';
      e.XML = 'xml';
      e.XSL = 'xsl';
      e.YAML = 'yaml';
    })(O ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          uri: e,
          languageId: t,
          version: n,
          text: r
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.string(t.uri) && Me.string(t.languageId) && Me.integer(t.version) && Me.string(t.text);
      };
    })(N ||= {});
    (function (e) {
      e.PlainText = 'plaintext';
      e.Markdown = 'markdown';
      e.is = function (t) {
        const n = t;
        return n === e.PlainText || n === e.Markdown;
      };
    })(L ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(e) && L.is(t.kind) && Me.string(t.value);
      };
    })(K ||= {});
    (function (e) {
      e.Text = 1;
      e.Method = 2;
      e.Function = 3;
      e.Constructor = 4;
      e.Field = 5;
      e.Variable = 6;
      e.Class = 7;
      e.Interface = 8;
      e.Module = 9;
      e.Property = 10;
      e.Unit = 11;
      e.Value = 12;
      e.Enum = 13;
      e.Keyword = 14;
      e.Snippet = 15;
      e.Color = 16;
      e.File = 17;
      e.Reference = 18;
      e.Folder = 19;
      e.EnumMember = 20;
      e.Constant = 21;
      e.Struct = 22;
      e.Event = 23;
      e.Operator = 24;
      e.TypeParameter = 25;
    })(U ||= {});
    (function (e) {
      e.PlainText = 1;
      e.Snippet = 2;
    })(j ||= {});
    (function (e) {
      e.Deprecated = 1;
    })(q ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          newText: e,
          insert: t,
          replace: n
        };
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.newText) && c.is(t.insert) && c.is(t.replace);
      };
    })(G ||= {});
    (function (e) {
      e.asIs = 1;
      e.adjustIndentation = 2;
    })(Y ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return t && (Me.string(t.detail) || t.detail === undefined) && (Me.string(t.description) || t.description === undefined);
      };
    })(H ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          label: e
        };
      };
    })(J ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          items: e || [],
          isIncomplete: !!t
        };
      };
    })(z ||= {});
    (function (e) {
      e.fromPlainText = function (e) {
        return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
      };
      e.is = function (e) {
        const t = e;
        return Me.string(t) || Me.objectLiteral(t) && Me.string(t.language) && Me.string(t.value);
      };
    })($ ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return !!t && Me.objectLiteral(t) && (K.is(t.contents) || $.is(t.contents) || Me.typedArray(t.contents, $.is)) && (e.range === undefined || c.is(e.range));
      };
    })(W ||= {});
    (function (e) {
      e.create = function (e, t) {
        if (t) {
          return {
            label: e,
            documentation: t
          };
        } else {
          return {
            label: e
          };
        }
      };
    })(V ||= {});
    (function (e) {
      e.create = function (e, t, ...n) {
        const r = {
          label: e
        };
        if (Me.defined(t)) {
          r.documentation = t;
        }
        if (Me.defined(n)) {
          r.parameters = n;
        } else {
          r.parameters = [];
        }
        return r;
      };
    })(X ||= {});
    (function (e) {
      e.Text = 1;
      e.Read = 2;
      e.Write = 3;
    })(Z ||= {});
    (function (e) {
      e.create = function (e, t) {
        const n = {
          range: e
        };
        if (Me.number(t)) {
          n.kind = t;
        }
        return n;
      };
    })(ee ||= {});
    (function (e) {
      e.File = 1;
      e.Module = 2;
      e.Namespace = 3;
      e.Package = 4;
      e.Class = 5;
      e.Method = 6;
      e.Property = 7;
      e.Field = 8;
      e.Constructor = 9;
      e.Enum = 10;
      e.Interface = 11;
      e.Function = 12;
      e.Variable = 13;
      e.Constant = 14;
      e.String = 15;
      e.Number = 16;
      e.Boolean = 17;
      e.Array = 18;
      e.Object = 19;
      e.Key = 20;
      e.Null = 21;
      e.EnumMember = 22;
      e.Struct = 23;
      e.Event = 24;
      e.Operator = 25;
      e.TypeParameter = 26;
    })(te ||= {});
    (function (e) {
      e.Deprecated = 1;
    })(ne ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o) {
        const s = {
          name: e,
          kind: t,
          location: {
            uri: r,
            range: n
          }
        };
        if (o) {
          s.containerName = o;
        }
        return s;
      };
    })(re ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        if (r !== undefined) {
          return {
            name: e,
            kind: t,
            location: {
              uri: n,
              range: r
            }
          };
        } else {
          return {
            name: e,
            kind: t,
            location: {
              uri: n
            }
          };
        }
      };
    })(oe ||= {});
    (function (e) {
      e.create = function (e, t, n, r, o, s) {
        const a = {
          name: e,
          detail: t,
          kind: n,
          range: r,
          selectionRange: o
        };
        if (s !== undefined) {
          a.children = s;
        }
        return a;
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.name) && Me.number(t.kind) && c.is(t.range) && c.is(t.selectionRange) && (t.detail === undefined || Me.string(t.detail)) && (t.deprecated === undefined || Me.boolean(t.deprecated)) && (t.children === undefined || Array.isArray(t.children)) && (t.tags === undefined || Array.isArray(t.tags));
      };
    })(ie ||= {});
    (function (e) {
      e.Empty = '';
      e.QuickFix = 'quickfix';
      e.Refactor = 'refactor';
      e.RefactorExtract = 'refactor.extract';
      e.RefactorInline = 'refactor.inline';
      e.RefactorMove = 'refactor.move';
      e.RefactorRewrite = 'refactor.rewrite';
      e.Source = 'source';
      e.SourceOrganizeImports = 'source.organizeImports';
      e.SourceFixAll = 'source.fixAll';
      e.Notebook = 'notebook';
    })(se ||= {});
    (function (e) {
      e.Invoked = 1;
      e.Automatic = 2;
    })(ae ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          diagnostics: e
        };
        if (t != null) {
          r.only = t;
        }
        if (n != null) {
          r.triggerKind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.typedArray(t.diagnostics, w.is) && (t.only === undefined || Me.typedArray(t.only, Me.string)) && (t.triggerKind === undefined || t.triggerKind === ae.Invoked || t.triggerKind === ae.Automatic);
      };
    })(Ae ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          title: e
        };
        let o = true;
        if (typeof t == 'string') {
          o = false;
          r.kind = t;
        } else {
          if (_.is(t)) {
            r.command = t;
          } else {
            r.edit = t;
          }
        }
        if (o && n !== undefined) {
          r.kind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return t && Me.string(t.title) && (t.diagnostics === undefined || Me.typedArray(t.diagnostics, w.is)) && (t.kind === undefined || Me.string(t.kind)) && (t.edit !== undefined || t.command !== undefined) && (t.command === undefined || _.is(t.command)) && (t.isPreferred === undefined || Me.boolean(t.isPreferred)) && (t.edit === undefined || k.is(t.edit));
      };
    })(ce ||= {});
    (function (e) {
      e.create = function (e, t) {
        const n = {
          range: e
        };
        if (Me.defined(t)) {
          n.data = t;
        }
        return n;
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(t.range) && (Me.undefined(t.command) || _.is(t.command));
      };
    })(ue ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          tabSize: e,
          insertSpaces: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && Me.uinteger(t.tabSize) && Me.boolean(t.insertSpaces);
      };
    })(le ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          range: e,
          target: t,
          data: n
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(t.range) && (Me.undefined(t.target) || Me.string(t.target));
      };
    })(ge ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          parent: t
        };
      };
      e.is = function (t) {
        const n = t;
        return Me.objectLiteral(n) && c.is(n.range) && (n.parent === undefined || e.is(n.parent));
      };
    })(de ||= {});
    (function (e) {
      e.namespace = 'namespace';
      e.type = 'type';
      e.class = 'class';
      e.enum = 'enum';
      e.interface = 'interface';
      e.struct = 'struct';
      e.typeParameter = 'typeParameter';
      e.parameter = 'parameter';
      e.variable = 'variable';
      e.property = 'property';
      e.enumMember = 'enumMember';
      e.event = 'event';
      e.function = 'function';
      e.method = 'method';
      e.macro = 'macro';
      e.keyword = 'keyword';
      e.modifier = 'modifier';
      e.comment = 'comment';
      e.string = 'string';
      e.number = 'number';
      e.regexp = 'regexp';
      e.operator = 'operator';
      e.decorator = 'decorator';
      e.label = 'label';
    })(he ||= {});
    (function (e) {
      e.declaration = 'declaration';
      e.definition = 'definition';
      e.readonly = 'readonly';
      e.static = 'static';
      e.deprecated = 'deprecated';
      e.abstract = 'abstract';
      e.async = 'async';
      e.modification = 'modification';
      e.documentation = 'documentation';
      e.defaultLibrary = 'defaultLibrary';
    })(fe ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && (t.resultId === undefined || typeof t.resultId == 'string') && Array.isArray(t.data) && (t.data.length === 0 || typeof t.data[0] == 'number');
      };
    })(pe ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          text: t
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && Me.string(t.text);
      };
    })(Ce ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        return {
          range: e,
          variableName: t,
          caseSensitiveLookup: n
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && Me.boolean(t.caseSensitiveLookup) && (Me.string(t.variableName) || t.variableName === undefined);
      };
    })(me ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          expression: t
        };
      };
      e.is = function (e) {
        const t = e;
        return t != null && c.is(t.range) && (Me.string(t.expression) || t.expression === undefined);
      };
    })(Ie ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          frameId: e,
          stoppedLocation: t
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.defined(t) && c.is(e.stoppedLocation);
      };
    })(Ee ||= {});
    (function (e) {
      e.Type = 1;
      e.Parameter = 2;
      e.is = function (e) {
        return e === 1 || e === 2;
      };
    })(ye ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          value: e
        };
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && (t.tooltip === undefined || Me.string(t.tooltip) || K.is(t.tooltip)) && (t.location === undefined || u.is(t.location)) && (t.command === undefined || _.is(t.command));
      };
    })(we ||= {});
    (function (e) {
      e.create = function (e, t, n) {
        const r = {
          position: e,
          label: t
        };
        if (n !== undefined) {
          r.kind = n;
        }
        return r;
      };
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && A.is(t.position) && (Me.string(t.label) || Me.typedArray(t.label, we.is)) && (t.kind === undefined || ye.is(t.kind)) && t.textEdits === undefined || Me.typedArray(t.textEdits, v.is) && (t.tooltip === undefined || Me.string(t.tooltip) || K.is(t.tooltip)) && (t.paddingLeft === undefined || Me.boolean(t.paddingLeft)) && (t.paddingRight === undefined || Me.boolean(t.paddingRight));
      };
    })(_e ||= {});
    (function (e) {
      e.createSnippet = function (e) {
        return {
          kind: 'snippet',
          value: e
        };
      };
      e.isSnippet = function (e) {
        const t = e;
        return Me.objectLiteral(t) && t.kind === 'snippet' && Me.string(t.value);
      };
    })(ve ||= {});
    (function (e) {
      e.create = function (e, t, n, r) {
        return {
          insertText: e,
          filterText: t,
          range: n,
          command: r
        };
      };
    })(be ||= {});
    (function (e) {
      e.create = function (e) {
        return {
          items: e
        };
      };
    })(Be ||= {});
    (function (e) {
      e.Invoked = 1;
      e.Automatic = 2;
    })(Qe ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          range: e,
          text: t
        };
      };
    })(De ||= {});
    (function (e) {
      e.create = function (e, t) {
        return {
          triggerKind: e,
          selectedCompletionInfo: t
        };
      };
    })(Se ||= {});
    (function (e) {
      e.is = function (e) {
        const t = e;
        return Me.objectLiteral(t) && o.is(t.uri) && Me.string(t.name);
      };
    })(Te ||= {});
    const Pe = require.j == 606 ? ['\n', '\r\n', '\r'] : null;
    var Fe;
    var Me;
    (function (e) {
      function t(e, n) {
        if (e.length <= 1) {
          return e;
        }
        const r = e.length / 2 | 0;
        const o = e.slice(0, r);
        const s = e.slice(r);
        t(o, n);
        t(s, n);
        let a = 0;
        let A = 0;
        let c = 0;
        while (a < o.length && A < s.length) {
          const t = n(o[a], s[A]);
          e[c++] = t <= 0 ? o[a++] : s[A++];
        }
        while (a < o.length) {
          e[c++] = o[a++];
        }
        while (A < s.length) {
          e[c++] = s[A++];
        }
        return e;
      }
      e.create = function (e, t, n, r) {
        return new Oe(e, t, n, r);
      };
      e.is = function (e) {
        const t = e;
        return !!Me.defined(t) && !!Me.string(t.uri) && (!!Me.undefined(t.languageId) || !!Me.string(t.languageId)) && !!Me.uinteger(t.lineCount) && !!Me.func(t.getText) && !!Me.func(t.positionAt) && !!Me.func(t.offsetAt);
      };
      e.applyEdits = function (e, n) {
        let r = e.getText();
        const o = t(n, (e, t) => {
          const n = e.range.start.line - t.range.start.line;
          if (n === 0) {
            return e.range.start.character - t.range.start.character;
          } else {
            return n;
          }
        });
        let s = r.length;
        for (let t = o.length - 1; t >= 0; t--) {
          const n = o[t];
          const a = e.offsetAt(n.range.start);
          const A = e.offsetAt(n.range.end);
          if (!(A <= s)) {
            throw new Error('Overlapping edit');
          }
          r = r.substring(0, a) + n.newText + r.substring(A, r.length);
          s = a;
        }
        return r;
      };
    })(Fe ||= {});
    class Oe {
      constructor(e, t, n, r) {
        this._uri = e;
        this._languageId = t;
        this._version = n;
        this._content = r;
        this._lineOffsets = undefined;
      }
      get uri() {
        return this._uri;
      }
      get languageId() {
        return this._languageId;
      }
      get version() {
        return this._version;
      }
      getText(e) {
        if (e) {
          const t = this.offsetAt(e.start);
          const n = this.offsetAt(e.end);
          return this._content.substring(t, n);
        }
        return this._content;
      }
      update(e, t) {
        this._content = e.text;
        this._version = t;
        this._lineOffsets = undefined;
      }
      getLineOffsets() {
        if (this._lineOffsets === undefined) {
          const e = [];
          const t = this._content;
          let n = true;
          for (let r = 0; r < t.length; r++) {
            if (n) {
              e.push(r);
              n = false;
            }
            const o = t.charAt(r);
            n = o === '\r' || o === '\n';
            if (o === '\r' && r + 1 < t.length && t.charAt(r + 1) === '\n') {
              r++;
            }
          }
          if (n && t.length > 0) {
            e.push(t.length);
          }
          this._lineOffsets = e;
        }
        return this._lineOffsets;
      }
      positionAt(e) {
        e = Math.max(Math.min(e, this._content.length), 0);
        const t = this.getLineOffsets();
        let n = 0;
        let r = t.length;
        if (r === 0) {
          return A.create(0, e);
        }
        while (n < r) {
          const o = Math.floor((n + r) / 2);
          if (t[o] > e) {
            r = o;
          } else {
            n = o + 1;
          }
        }
        const o = n - 1;
        return A.create(o, e - t[o]);
      }
      offsetAt(e) {
        const t = this.getLineOffsets();
        if (e.line >= t.length) {
          return this._content.length;
        }
        if (e.line < 0) {
          return 0;
        }
        const n = t[e.line];
        const r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
        return Math.max(Math.min(n + e.character, r), n);
      }
      get lineCount() {
        return this.getLineOffsets().length;
      }
    }
    (function (e) {
      const t = Object.prototype.toString;
      e.defined = function (e) {
        return e !== undefined;
      };
      e.undefined = function (e) {
        return e === undefined;
      };
      e.boolean = function (e) {
        return e === true || e === false;
      };
      e.string = function (e) {
        return t.call(e) === '[object String]';
      };
      e.number = function (e) {
        return t.call(e) === '[object Number]';
      };
      e.numberRange = function (e, n, r) {
        return t.call(e) === '[object Number]' && n <= e && e <= r;
      };
      e.integer = function (e) {
        return t.call(e) === '[object Number]' && e >= -2147483648 && e <= 2147483647;
      };
      e.uinteger = function (e) {
        return t.call(e) === '[object Number]' && e >= 0 && e <= 2147483647;
      };
      e.func = function (e) {
        return t.call(e) === '[object Function]';
      };
      e.objectLiteral = function (e) {
        return e !== null && typeof e == 'object';
      };
      e.typedArray = function (e, t) {
        return Array.isArray(e) && e.every(t);
      };
    })(Me ||= {});
  }
}; //# sourceMappingURL=vendor.bundle.js.map