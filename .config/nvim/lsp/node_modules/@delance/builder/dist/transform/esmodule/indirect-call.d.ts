import * as t from '@babel/types';
/**
 * Simplify function calls between modules that discard reference bindings
 *
 * @example
 * `(0, someModule.someFunction)(args)` -> `someModule.someFunction(args)`
 *
 * @link <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_operator#discarding_reference_binding>
 * @link <https://github.com/pionxzh/wakaru/blob/main/packages/unminify/src/transformations/un-indirect-call.ts>
 */
declare const _default: {
    name: string;
    tags: "unsafe"[];
    visitor: () => {
        CallExpression: {
            exit(this: import("webcrack/src/ast-utils").TransformState, $: import("@babel/traverse").NodePath<t.CallExpression>): void;
        };
    };
};
export default _default;
